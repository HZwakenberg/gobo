/*
	description:

		"C declarations for the Gobo Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2005-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EIFFEL_H
#define GE_EIFFEL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#if defined(__USE_POSIX) || defined(__unix__) || defined(_POSIX_C_SOURCE)
#include <unistd.h>
#endif
#if !defined(WIN32) && \
	(defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER) || \
	defined(__MINGW32__))
#define WIN32 1
#endif
#ifdef WIN32
#define EIF_WINDOWS 1
#include <windows.h>
#endif

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>

/* Platform definition */
/* Unix definition */
#define EIF_IS_UNIX EIF_TRUE
/* Windows definition */
#ifdef EIF_WINDOWS
#define EIF_IS_WINDOWS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_WINDOWS EIF_FALSE
#endif
/* VMS definition */
#ifdef EIF_VMS
#define EIF_IS_VMS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VMS EIF_FALSE
#endif
/* MAC definition */
#ifdef EIF_MAC
#define EIF_IS_MAC EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_MAC EIF_FALSE
#endif
/* VxWorks definition */
#ifdef EIF_VXWORKS
#define EIF_IS_VXWORKS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VXWORKS EIF_FALSE
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _MSC_VER /* MSVC */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#include <inttypes.h>
#endif
#endif

/* Portable integer pointers */
#ifdef EIF_WINDOWS
#ifndef _INTPTR_T_DEFINED
#define _INTPTR_T_DEFINED
#ifdef _WIN64
typedef __int64 intptr_t;
#else
typedef int intptr_t;
#endif
#endif
#endif

/* Basic Eiffel types */
typedef struct {int id;} EIF_ANY;
typedef EIF_ANY* EIF_REFERENCE;
typedef char EIF_BOOLEAN;
typedef unsigned char EIF_CHARACTER_8;
typedef uint32_t EIF_CHARACTER_32;
typedef int8_t EIF_INTEGER_8;
typedef int16_t EIF_INTEGER_16;
typedef int32_t EIF_INTEGER_32;
typedef int64_t EIF_INTEGER_64;
typedef uint8_t EIF_NATURAL_8;
typedef uint16_t EIF_NATURAL_16;
typedef uint32_t EIF_NATURAL_32;
typedef uint64_t EIF_NATURAL_64;
typedef void* EIF_POINTER;
typedef float EIF_REAL_32;
typedef double EIF_REAL_64;

#ifdef EIF_WINDOWS
typedef wchar_t EIF_NATIVE_CHAR;
#else
typedef char EIF_NATIVE_CHAR;
#endif
typedef EIF_NATIVE_CHAR* EIF_FILENAME;

#define EIF_VOID ((EIF_REFERENCE)0)
#define EIF_FALSE ((EIF_BOOLEAN)'\0')
#define EIF_TRUE ((EIF_BOOLEAN)'\1')
#define EIF_TEST(x) ((x) ? EIF_TRUE : EIF_FALSE)

#define EIF_IS_WORKBENCH EIF_FALSE
#define EIF_POINTER_DISPLAY "lX"

/* For INTEGER and NATURAL manifest constants */
#define GE_int8(x) x
#define GE_nat8(x) x
#define GE_int16(x) x
#define GE_nat16(x) x
#define GE_int32(x) x##L
#define GE_nat32(x) x##U
#if defined (_MSC_VER) && (_MSC_VER < 1400) /* MSC older than v8 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else /* ISO C 99 */
#define GE_int64(x) x##LL
#define GE_nat64(x) x##ULL
#endif
#endif

extern EIF_REFERENCE GE_ms8(const char *s, EIF_INTEGER_32 c);
#define GE_str8(s) GE_ms8((s),strlen(s))

#ifdef _MSC_VER /* MSVC */
/* MSVC does not support ISO C 99's 'snprintf' from stdio.h */
#define snprintf(a,b,c,d) sprintf(a,c,d)
#endif

/*
	Interoperability with ISE.
*/
#define RTI64C(x) GE_int64(x)
#define EIF_OBJECT EIF_REFERENCE
#define EIF_OBJ EIF_OBJECT
#define EIF_INTEGER EIF_INTEGER_32
#define EIF_CHARACTER EIF_CHARACTER_8
#define EIF_REAL EIF_REAL_32
#define EIF_DOUBLE EIF_REAL_64
/* Function pointer call to make sure all arguments are correctly pushed onto stack. */
/* FUNCTION_CAST is for standard C calls. */
/* FUNCTION_CAST_TYPE is for non-standard C calls. */
#define FUNCTION_CAST(r_type,arg_types) (r_type (*) arg_types)
#define FUNCTION_CAST_TYPE(r_type,call_type,arg_types) (r_type (call_type *) arg_types)
#define SIGBLOCK
#define SIGRESUME
#define rt_public				/* default C scope */
#define rt_private static		/* static outside a block means private */
#define rt_shared				/* data shared between modules, but not public */
typedef int32_t EIF_TYPE_ID;
#define EIF_NO_TYPE (EIF_TYPE_ID)(-1)
typedef uint16_t EIF_TYPE_INDEX;
#define RTMS(s) GE_str8(s)
#define RTMS_EX(s,c) GE_ms8((s),(c))

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to manipulate native strings"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_NATIVE_STRING_H
#define GE_NATIVE_STRING_H

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#include <string.h>
#ifndef EIF_WINDOWS
#include <sys/types.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

	/* Macro used to manipulate native string, i.e: (wchar_t*) */
#define GE_nstrlen wcslen /* size of string */
#define GE_nstrncpy wcsncpy /* Copy n characters of one string to another */
#define GE_nstrcpy wcscpy /* Copy one string to another */
#define GE_nstrncat wcsncat /* Append characters of a string */
#define GE_nstrcat wcscat /* Append a string */
#define GE_nstrstr wcsstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) L##quote /* Manifest Native string declaration */
#define GE_nstr_fopen	_wfopen /* Open file using native string name */
#define GE_nstrcmp wcscmp /* Compare two strings. */
#define GE_nstrdup _wcsdup /* Duplicate string. */

#define GE_nstr_cat_ascii(dest, src) { 						\
		int i;													\
		size_t dest_len, src_len;								\
		dest_len = rt_nstrlen (dest);							\
		src_len = strlen (src);									\
		for (i = 0; i < src_len; i++) {							\
			dest[dest_len + i] = (EIF_NATIVE_CHAR) src[i];		\
		}														\
		dest[dest_len + src_len] = (EIF_NATIVE_CHAR) 0;			\
	}

#else /* not EIF_WINDOWS */

	/* Macro used to manipulate native string, i.e: (char*) */
#define GE_nstrlen  strlen /* size of string */
#define GE_nstrncpy strncpy /* Copy n characters of one string to another */
#define GE_nstrcpy strcpy /* Copy one string to another */
#define GE_nstrncat strncat /* Append characters of a string */
#define GE_nstrcat strcat /* Append a string */
#define GE_nstrstr strstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) quote /* Manifest Native string declaration */
#define GE_nstr_fopen	fopen /* Open file using native string name */
#define GE_nstrcmp strcmp /* Compare two strings. */
#define GE_nstrdup strdup /* Duplicate string. */

#define GE_nstr_cat_ascii strcat

#endif


#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class ARGUMENTS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_ARGUMENTS_H
#define GE_ARGUMENTS_H

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_argc;
extern EIF_NATIVE_CHAR** GE_argv;

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class EXCEPTION"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EXCEPTION_H
#define GE_EXCEPTION_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#include <setjmp.h>

/*
 * On Linux glibc systems, we need to use sig* versions of jmp_buf,
 * setjmp and longjmp to preserve the signal handling context.
 * One way to detect this is if _SIGSET_H_types has
 * been defined in /usr/include/setjmp.h.
 * NOTE: ANSI only recognizes the non-sig versions.
 */
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#define GE_jmp_buf sigjmp_buf
#define GE_setjmp(x) sigsetjmp((x),1)
#define GE_longjmp(x,y) siglongjmp((x),(y))
#else
#define GE_jmp_buf jmp_buf
#define GE_setjmp(x) setjmp((x))
#define GE_longjmp(x,y) longjmp((x),(y))
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define GE_EX_VOID		1			/* Feature applied to void reference */
#define GE_EX_MEM		2			/* No more memory */
#define GE_EX_PRE		3			/* Pre-condition violated */
#define GE_EX_POST		4			/* Post-condition violated */
#define GE_EX_FLOAT		5			/* Floating point exception (signal SIGFPE) */
#define GE_EX_CINV		6			/* Class invariant violated */
#define GE_EX_CHECK		7			/* Check instruction violated */
#define GE_EX_FAIL		8			/* Routine failure */
#define GE_EX_WHEN		9			/* Unmatched inspect value */
#define GE_EX_VAR		10			/* Non-decreasing loop variant */
#define GE_EX_LINV		11			/* Loop invariant violated */
#define GE_EX_SIG		12			/* Operating system signal */
#define GE_EX_BYE		13			/* Eiffel run-time panic */
#define GE_EX_RESC		14			/* Exception in rescue clause */
#define GE_EX_OMEM		15			/* Out of memory (cannot be ignored) */
#define GE_EX_RES		16			/* Resumption failed (retry did not succeed) */
#define GE_EX_CDEF		17			/* Create on deferred */
#define GE_EX_EXT		18			/* External event */
#define GE_EX_VEXP		19			/* Void assigned to expanded */
#define GE_EX_HDLR		20			/* Exception in signal handler */
#define GE_EX_IO		21			/* I/O error */
#define GE_EX_SYS		22			/* Operating system error */
#define GE_EX_RETR		23			/* Retrieval error */
#define GE_EX_PROG		24			/* Developer exception */
#define GE_EX_FATAL		25			/* Eiffel run-time fatal error */
#define GE_EX_DOL		26			/* $ applied to melted feature */
#define GE_EX_ISE_IO	27			/* I/O error raised by the ISE Eiffel runtime */
#define GE_EX_COM		28			/* COM error raised by EiffelCOM runtime */
#define GE_EX_RT_CHECK	29			/* Runtime check error such as out-of-bound array access */
#define GE_EX_OLD		30			/* Old violation */
#define GE_EX_SEL		31			/* Serialization failure */
#define GE_EX_DIRTY		32			/* SCOOP processor dirty exception. */
#define GE_EX_NEX		32			/* Number of internal exceptions */

/*
 * String buffer used to build the exception trace.
 */
typedef struct GE_exception_trace_buffer_struct GE_exception_trace_buffer;
struct GE_exception_trace_buffer_struct {
	char* area;
	uint32_t count;
	uint32_t capacity;
};

/*
 * Information about the feature being executed.
 */
typedef struct GE_call_struct GE_call;
struct GE_call_struct {
#ifdef EIF_CURRENT_IN_EXCEPTION_TRACE
	void* object; /* Current object */
#endif
	const char* class_name;
	const char* feature_name;
	GE_call* caller; /* previous feature in the call chain */
};

/*
 * Context of features containing a rescue clause.
 */
typedef struct GE_rescue_struct GE_rescue;
struct GE_rescue_struct {
	GE_jmp_buf jb;
	GE_rescue* previous; /* previous context in the call chain */
};

/*
 * Information about the execution context.
 * One such struct per thread.
 */
typedef struct GE_thread_context_struct GE_thread_context;
typedef struct GE_context_struct GE_context;
struct GE_context_struct {
	GE_call* call; /* Call stack */
	GE_rescue* last_rescue; /* Context of last feature entered containing a rescue clause */
	uint32_t in_rescue; /* Number of rescue clauses currently being executed */
	EIF_REFERENCE exception_manager; /* Exception manager */
	char raising_exception; /* Is an exception currently being raised? */
	char exception_trace_enabled; /* Should exception trace be displayed? */
	long exception_code; /* Code of the exception currently being raised, 0 otherwise */
	const char* exception_tag; /* Tag of the exception currently being raised, NULL otherwise */
	GE_exception_trace_buffer exception_trace_buffer; /* String buffer used to build the exception trace */
	GE_exception_trace_buffer last_exception_trace; /* Last non-routine-failure exception trace */
#ifdef EIF_THREADS
	GE_thread_context* thread; /* Thread context */
#endif
};

/*
 * Default initialization for `GE_context'.
 */
extern GE_context GE_default_context;

/*
 * Execution context of main thread.
 */
extern GE_context* GE_main_context;

/*
 * Execution context of current thread.
 */
extern GE_context* GE_current_context();

/*
 * Initialization of exception handling.
 */
extern void GE_init_exception(GE_context* context);

/*
 * Pointer to function to create a new exception manager object.
 */
extern EIF_REFERENCE (*GE_new_exception_manager)(EIF_BOOLEAN);

/*
 * Pointer to Eiffel routine EXCEPTION_MANAGER.init_exception_manager.
 */
extern void (*GE_init_exception_manager)(GE_context*, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine EXCEPTION_MANAGER.set_exception_data.
 */
extern void (*GE_set_exception_data)(GE_context*, EIF_REFERENCE, EIF_INTEGER_32, EIF_BOOLEAN, EIF_INTEGER_32, EIF_INTEGER_32, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_INTEGER_32, EIF_BOOLEAN);

/*
 * Exception tag associated with `code'.
 */
extern char* GE_exception_tag(long code);

/*
 * Raise an exception with code `code'.
 */
extern void GE_raise(long code);

/*
 * Raise an exception with code `code' and message `msg'.
 */
extern void GE_raise_with_message(long code, const char* msg);

/*
 * Raise an exception from EXCEPTION_MANAGER.
 */
extern void GE_developer_raise(long code, char* meaning, char* message);

/*
 * Check whether the type id of `obj' is not in `type_ids'.
 * If it is, then raise a CAT-call exception. Don't do anything if `obj' is Void.
 * `nb' is the number of ids in `type_ids' and is expected to be >0.
 * `type_ids' is sorted in increasing order.
 * Return `obj'.
 */
#define GE_catcall(obj,type_ids,nb) GE_check_catcall((obj),(type_ids),(nb))
extern EIF_REFERENCE GE_check_catcall(EIF_REFERENCE obj, int type_ids[], int nb);

/*
 * Check whether `obj' is Void.
 * If it is, then raise a call-on-void-target exception.
 * Return `obj'.
 */
#define GE_void(obj) (!(obj)?GE_check_void(obj):(obj))
extern EIF_REFERENCE GE_check_void(EIF_REFERENCE obj);

/*
 * Check whether `ptr' is a null pointer.
 * If it is, then raise a no-more-memory exception.
 * Return `ptr'.
 */
#define GE_null(ptr) GE_check_null(ptr)
extern void* GE_check_null(void* ptr);

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void GE_set_windows_exception_filter();
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_CONSOLE_H
#define GE_CONSOLE_H

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

/*
	Create a new DOS console if needed (i.e. in case of a Windows application).
*/
extern void GE_show_console(void);

#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement the program initialization"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_MAIN_H
#define GE_MAIN_H

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_main(int argc, EIF_NATIVE_CHAR** argv);

/*
 * System name.
 */
extern char* GE_system_name;

/*
 * Root class name.
 */
extern char* GE_root_class_name;

#ifdef EIF_WINDOWS

#include <windows.h>

/*
 * Used in WEL.
 */
extern HINSTANCE eif_hInstance;
extern HINSTANCE eif_hPrevInstance;
extern LPWSTR eif_lpCmdLine;
extern int eif_nCmdShow;

/*
 * Main entry point when compiling a Windows application.
 * See:
 *    http://en.wikipedia.org/wiki/WinMain
 *    http://msdn2.microsoft.com/en-us/library/ms633559.aspx
 */
extern int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow);

#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to access garbage collector facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_GC_H
#define GE_GC_H

#ifdef EIF_BOEHM_GC
/*
 *	Use the Boehm garbage collector.
 *	See:
 *		http://en.wikipedia.org/wiki/Boehm_GC
 *		http://www.hpl.hp.com/personal/Hans_Boehm/gc/
 */

#define GC_IGNORE_WARN
#include "gc.h"
#endif


/*
 * GC initialization.
 */

#ifdef EIF_BOEHM_GC
#define GE_init_gc() GC_INIT(); GC_enable_incremental()
#else /* No GC */
#define GE_init_gc() /* do nothing */
#endif


/*
 * Memory allocation.
 */

/*
 * GE_alloc allocates memory that can contain pointers to collectable objects.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_alloc(x) GE_null(GC_MALLOC(x))
#else /* No GC */
#define GE_alloc(x) GE_null(malloc(x))
#endif

/*
 * When defined, GE_alloc_cleared means that GE_alloc makes sure that the allocated memory is zeroed.
 */
#ifdef EIF_BOEHM_GC
#define GE_alloc_cleared
#else /* No GC */
#endif

/*
 * GE_alloc_atomic allocates memory that does not contain pointers to collectable objects.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_alloc_atomic(x) GE_null(GC_MALLOC_ATOMIC(x))
#else /* No GC */
#define GE_alloc_atomic(x) GE_null(malloc(x))
#endif

/*
 * When defined, GE_alloc_atomic_cleared means that GE_alloc_atomic makes sure that the allocated memory is zeroed.
 */
/* #define GE_alloc_atomic_cleared */






/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_malloc(size) GE_null(GC_MALLOC(size))
#else /* No GC */
#define GE_malloc(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed.
 * The allocated object is itself collectable.
 */
#ifdef EIF_BOEHM_GC
#define GE_malloc_atomic(size) GE_null(GC_MALLOC_ATOMIC(size))
#else /* No GC */
#define GE_malloc_atomic(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_calloc(nelem, elsize) GE_null(GC_MALLOC((nelem) * (elsize)))
#else /* No GC */
#define GE_calloc(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_calloc_atomic(nelem, elsize) memset(GE_null(GC_MALLOC_ATOMIC((nelem) * (elsize))), 0, (nelem) * (elsize))
#else /* No GC */
#define GE_calloc(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_malloc_uncollectable(size) GE_null(GC_MALLOC_UNCOLLECTABLE(size))
#else /* No GC */
#define GE_malloc_uncollectable(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_malloc_atomic_uncollectable(size) GE_null(GC_malloc_atomic_uncollectable(size))
#else /* No GC */
#define GE_malloc_uncollectable(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_calloc_uncollectable(nelem, elsize) GE_null(GC_MALLOC_UNCOLLECTABLE((nelem) * (elsize)))
#else /* No GC */
#define GE_calloc_uncollectable(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_calloc_atomic_uncollectable(nelem, elsize) memset(GE_null(GC_malloc_atomic_uncollectable((nelem) * (elsize))), 0, (nelem) * (elsize))
#else /* No GC */
#define GE_calloc_atomic_uncollectable(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
extern void* GE_raw_calloc_atomic_uncollectable(size_t nelem, size_t elsize);
#else /* No GC */
#define GE_raw_calloc_atomic_uncollectable(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is not necessarily zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_realloc(p, size) GE_null(GC_REALLOC((p), (size)))
#else /* No GC */
#define GE_realloc(p, size) GE_null(realloc((p), (size)))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
extern void* GE_recalloc(void* p, size_t old_nelem, size_t new_nelem, size_t elsize);

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
extern void* GE_raw_recalloc(void* p, size_t old_nelem, size_t new_nelem, size_t elsize);

/*
 * Explicitly deallocate an object.
 */
#ifdef EIF_BOEHM_GC
#define GE_free(p) GC_FREE(p)
#else /* No GC */
#define GE_free(p) free(p)
#endif

/*
 * When defined, GE_malloc_cleared means that GE_malloc and GE_malloc_uncollectable
 * make sure that the allocated memory is zeroed.
 */
#ifdef EIF_BOEHM_GC
#define GE_malloc_cleared
#else /* No GC */
#endif

/*
 * When defined, GE_malloc_atomic_cleared means that GE_malloc_atomic and
 * GE_malloc_atomic_uncollectable make sure that the allocated memory is zeroed.
 */
#ifdef EIF_BOEHM_GC
/* #define GE_malloc_atomic_cleared */
#else /* No GC */
#endif


/*
 * Dispose
 */

/*
 * Register dispose routine `disp' to be called on object `obj' when it will be collected.
 */
#ifdef EIF_BOEHM_GC
extern void GE_boehm_dispose(void* C, void* disp); /* Call dispose routine `disp' on object `C'. */
#define GE_register_dispose(obj, disp) GC_REGISTER_FINALIZER_NO_ORDER((void*)(obj), (void (*) (void*, void*)) &GE_boehm_dispose, NULL, NULL, NULL)
#else /* No GC */
#define GE_register_dispose(obj, disp) /* do nothing */
#endif


/*
 * Access to objects, useful with GCs which move objects in memory.
 * This is not the case here, since the Boehm GC is not a moving GC.
 */

/* Access object through hector */
#define eif_access(obj) (obj)
/* Freeze memory address */
#define eif_freeze(obj) (obj)
/* The C side adopts an object */
#define eif_adopt(obj) (obj)
/* The C side protects an object */
#define eif_protect(obj) (obj)
/* The C side weans adopted object */
#define eif_wean(obj) (obj)
/* Forget a frozen memory address */
#define eif_unfreeze(obj)
/* Always frozen since they do not move */
#define eif_frozen(obj) 1
/* Always frozen since they do not move */
#define spfrozen(obj) 1

#endif

/*
	description:

		"C functions used to implement class IDENTIFIED"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2010, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_IDENTIFIED_H
#define GE_IDENTIFIED_H

#ifdef __cplusplus
extern "C" {
#endif

/*
	Initialize data to keep track of object ids.
*/
extern void GE_init_identified(void);

/*
	Get a new id for `object', assuming it is NOT in the stack.
*/
extern EIF_INTEGER_32 GE_object_id(EIF_OBJECT object);

/*
	Return the object associated with `id'.
*/
extern EIF_REFERENCE GE_id_object(EIF_INTEGER_32 id);

/*
	Remove the object associated with `id' from the stack.
*/
extern void GE_object_id_free(EIF_INTEGER_32 id);

#ifdef __cplusplus
}
#endif

#endif

#ifdef __cplusplus
extern "C" {
#endif

#define T0 EIF_ANY

/* CHARACTER */
#define EIF_CHARACTER EIF_CHARACTER_8

/* WIDE_CHARACTER */
#define EIF_WIDE_CHAR EIF_CHARACTER_32

/* INTEGER */
#define EIF_INTEGER EIF_INTEGER_32

/* NATURAL */
#define EIF_NATURAL EIF_NATURAL_32

/* REAL */
#define EIF_REAL EIF_REAL_32

/* DOUBLE */
#define EIF_DOUBLE EIF_REAL_64

/* BOOLEAN */
#define T1 EIF_BOOLEAN
extern T0* GE_boxed1(T1 a1);
typedef struct Sb1 Tb1;

/* CHARACTER_8 */
#define T2 EIF_CHARACTER_8
extern T0* GE_boxed2(T2 a1);
typedef struct Sb2 Tb2;

/* CHARACTER_32 */
#define T3 EIF_CHARACTER_32
extern T0* GE_boxed3(T3 a1);
typedef struct Sb3 Tb3;

/* INTEGER_8 */
#define T4 EIF_INTEGER_8
extern T0* GE_boxed4(T4 a1);
typedef struct Sb4 Tb4;

/* INTEGER_16 */
#define T5 EIF_INTEGER_16
extern T0* GE_boxed5(T5 a1);
typedef struct Sb5 Tb5;

/* INTEGER_32 */
#define T6 EIF_INTEGER_32
extern T0* GE_boxed6(T6 a1);
typedef struct Sb6 Tb6;

/* INTEGER_64 */
#define T7 EIF_INTEGER_64
extern T0* GE_boxed7(T7 a1);
typedef struct Sb7 Tb7;

/* NATURAL_8 */
#define T8 EIF_NATURAL_8
extern T0* GE_boxed8(T8 a1);
typedef struct Sb8 Tb8;

/* NATURAL_16 */
#define T9 EIF_NATURAL_16
extern T0* GE_boxed9(T9 a1);
typedef struct Sb9 Tb9;

/* NATURAL_32 */
#define T10 EIF_NATURAL_32
extern T0* GE_boxed10(T10 a1);
typedef struct Sb10 Tb10;

/* NATURAL_64 */
#define T11 EIF_NATURAL_64
extern T0* GE_boxed11(T11 a1);
typedef struct Sb11 Tb11;

/* REAL_32 */
#define T12 EIF_REAL_32
extern T0* GE_boxed12(T12 a1);
typedef struct Sb12 Tb12;

/* REAL_64 */
#define T13 EIF_REAL_64
extern T0* GE_boxed13(T13 a1);
typedef struct Sb13 Tb13;

/* POINTER */
#define T14 EIF_POINTER
extern T0* GE_boxed14(T14 a1);
typedef struct Sb14 Tb14;

/* SPECIAL [CHARACTER_8] */
typedef struct S15 T15;

/* SPECIAL [CHARACTER_32] */
typedef struct S16 T16;

/* STRING_8 */
typedef struct S17 T17;

/* STRING_32 */
typedef struct S18 T18;

/* ISE_EXCEPTION_MANAGER */
typedef struct S19 T19;

/* GEC */
typedef struct S22 T22;

/* HASH_TABLE [INTEGER_32, INTEGER_32] */
typedef struct S23 T23;

/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
typedef struct S24 T24;

/* CELL [detachable EXCEPTION] */
typedef struct S25 T25;

/* CELL [NO_MORE_MEMORY] */
typedef struct S26 T26;

/* [attached] TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
typedef struct S27 T27;

/* KL_TEXT_INPUT_FILE */
typedef struct S29 T29;

/* KL_ARGUMENTS */
typedef struct S30 T30;

/* ET_ISE_VARIABLES */
typedef struct S31 T31;

/* UT_ERROR_HANDLER */
typedef struct S32 T32;

/* ET_SYSTEM */
typedef struct S33 T33;

/* KL_STRING_ROUTINES */
typedef struct S34 T34;

/* ET_ERROR_HANDLER */
typedef struct S36 T36;

/* KL_EXCEPTIONS */
typedef struct S37 T37;

/* AP_PARSER */
typedef struct S38 T38;

/* AP_ALTERNATIVE_OPTIONS_LIST */
typedef struct S39 T39;

/* AP_ERROR */
typedef struct S40 T40;

/* AP_FLAG */
typedef struct S41 T41;

/* AP_ENUMERATION_OPTION */
typedef struct S43 T43;

/* AP_BOOLEAN_OPTION */
typedef struct S44 T44;

/* AP_INTEGER_OPTION */
typedef struct S45 T45;

/* AP_STRING_OPTION */
typedef struct S46 T46;

/* AP_DISPLAY_HELP_FLAG */
typedef struct S50 T50;

/* ET_XACE_SYSTEM_PARSER */
typedef struct S52 T52;

/* ET_XACE_DEFAULT_ERROR_HANDLER */
typedef struct S53 T53;

/* DS_HASH_TABLE [STRING_8, STRING_8] */
typedef struct S54 T54;

/* ST_SPLITTER */
typedef struct S55 T55;

/* UC_STRING_EQUALITY_TESTER */
typedef struct S57 T57;

/* detachable KL_EQUALITY_TESTER [STRING_8] */
typedef struct S58 T58;

/* ET_XACE_SYSTEM */
typedef struct S61 T61;

/* ET_ECF_SYSTEM_PARSER */
typedef struct S62 T62;

/* ET_ECF_ERROR_HANDLER */
typedef struct S63 T63;

/* ET_ECF_SYSTEM */
typedef struct S64 T64;

/* ET_ECF_TARGET */
typedef struct S65 T65;

/* KL_EXECUTION_ENVIRONMENT */
typedef struct S66 T66;

/* ET_ECF_VARIABLES */
typedef struct S67 T67;

/* ET_LACE_PARSER */
typedef struct S68 T68;

/* ET_LACE_ERROR_HANDLER */
typedef struct S69 T69;

/* ET_LACE_SYSTEM */
typedef struct S70 T70;

/* ET_DYNAMIC_SYSTEM */
typedef struct S71 T71;

/* ET_C_GENERATOR */
typedef struct S74 T74;

/* KL_SHELL_COMMAND */
typedef struct S75 T75;

/* DS_HASH_SET [STRING_8] */
typedef struct S76 T76;

/* ET_NULL_ERROR_HANDLER */
typedef struct S77 T77;

/* UT_VERSION */
typedef struct S78 T78;

/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
typedef struct S79 T79;

/* ET_CLASS_TYPE */
typedef struct S80 T80;

/* ET_TOKEN_CONSTANTS */
typedef struct S81 T81;

/* ET_CLASS */
typedef struct S82 T82;

/* KL_OPERATING_SYSTEM */
typedef struct S84 T84;

/* UT_CANNOT_READ_FILE_ERROR */
typedef struct S86 T86;

/* UT_VERSION_NUMBER */
typedef struct S87 T87;

/* VOID_TARGET */
typedef struct S88 T88;

/* [attached] TYPE [VOID_TARGET] */
#define T89 EIF_TYPE

/* ROUTINE_FAILURE */
typedef struct S90 T90;

/* [attached] TYPE [ROUTINE_FAILURE] */
#define T91 EIF_TYPE

/* OLD_VIOLATION */
typedef struct S92 T92;

/* [attached] TYPE [OLD_VIOLATION] */
#define T93 EIF_TYPE

/* NO_MORE_MEMORY */
typedef struct S94 T94;

/* INVARIANT_VIOLATION */
typedef struct S95 T95;

/* OPERATING_SYSTEM_SIGNAL_FAILURE */
typedef struct S96 T96;

/* IO_FAILURE */
typedef struct S97 T97;

/* OPERATING_SYSTEM_FAILURE */
typedef struct S98 T98;

/* COM_FAILURE */
typedef struct S99 T99;

/* EIFFEL_RUNTIME_PANIC */
typedef struct S100 T100;

/* PRECONDITION_VIOLATION */
typedef struct S103 T103;

/* POSTCONDITION_VIOLATION */
typedef struct S104 T104;

/* FLOATING_POINT_FAILURE */
typedef struct S105 T105;

/* CHECK_VIOLATION */
typedef struct S106 T106;

/* BAD_INSPECT_VALUE */
typedef struct S107 T107;

/* VARIANT_VIOLATION */
typedef struct S108 T108;

/* LOOP_INVARIANT_VIOLATION */
typedef struct S109 T109;

/* RESCUE_FAILURE */
typedef struct S110 T110;

/* RESUMPTION_FAILURE */
typedef struct S111 T111;

/* CREATE_ON_DEFERRED */
typedef struct S112 T112;

/* EXTERNAL_FAILURE */
typedef struct S113 T113;

/* VOID_ASSIGNED_TO_EXPANDED */
typedef struct S114 T114;

/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
typedef struct S115 T115;

/* MISMATCH_FAILURE */
typedef struct S116 T116;

/* DEVELOPER_EXCEPTION */
typedef struct S117 T117;

/* ADDRESS_APPLIED_TO_MELTED_FEATURE */
typedef struct S118 T118;

/* SERIALIZATION_FAILURE */
typedef struct S119 T119;

/* KL_WINDOWS_FILE_SYSTEM */
typedef struct S120 T120;

/* KL_UNIX_FILE_SYSTEM */
typedef struct S121 T121;

/* PRIMES */
typedef struct S122 T122;

/* SPECIAL [INTEGER_32] */
typedef struct S123 T123;

/* SPECIAL [BOOLEAN] */
typedef struct S124 T124;

/* detachable KL_LINKABLE [CHARACTER_8] */
typedef struct S126 T126;

/* MANAGED_POINTER */
typedef struct S128 T128;

/* FILE_INFO */
typedef struct S129 T129;

/* KL_STANDARD_FILES */
typedef struct S130 T130;

/* KL_STDERR_FILE */
typedef struct S131 T131;

/* KL_STDOUT_FILE */
typedef struct S132 T132;

/* UC_STRING */
typedef struct S133 T133;

/* KL_ANY_ROUTINES */
typedef struct S134 T134;

/* DS_ARRAYED_LIST [STRING_8] */
typedef struct S136 T136;

/* DS_ARRAYED_LIST [AP_OPTION] */
typedef struct S137 T137;

/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S138 T138;

/* AP_ERROR_HANDLER */
typedef struct S139 T139;

/* DS_LINKED_LIST_CURSOR [AP_OPTION] */
typedef struct S140 T140;

/* SPECIAL [STRING_8] */
typedef struct S141 T141;

/* ARRAY [STRING_8] */
typedef struct S142 T142;

/* DS_LINKED_LIST [STRING_8] */
typedef struct S143 T143;

/* KL_STRING_EQUALITY_TESTER */
typedef struct S144 T144;

/* DS_LINKED_LIST [BOOLEAN] */
typedef struct S147 T147;

/* DS_LINKED_LIST [INTEGER_32] */
typedef struct S150 T150;

/* ST_WORD_WRAPPER */
typedef struct S151 T151;

/* ET_XACE_AST_FACTORY */
typedef struct S152 T152;

/* XM_DOCUMENT */
typedef struct S153 T153;

/* XM_ELEMENT */
typedef struct S154 T154;

/* XM_POSITION_TABLE */
typedef struct S155 T155;

/* XM_TREE_CALLBACKS_PIPE */
typedef struct S157 T157;

/* XM_STOP_ON_ERROR_FILTER */
typedef struct S158 T158;

/* XM_CALLBACKS_TO_TREE_FILTER */
typedef struct S159 T159;

/* ET_XACE_VALIDATOR */
typedef struct S160 T160;

/* ET_XACE_PREPROCESSOR */
typedef struct S161 T161;

/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8] */
typedef struct S162 T162;

/* XM_EXPAT_PARSER_FACTORY */
typedef struct S163 T163;

/* XM_EIFFEL_PARSER */
typedef struct S164 T164;

/* ET_XACE_LIBRARY_CONFIG_PARSER */
typedef struct S167 T167;

/* UT_MESSAGE */
typedef struct S168 T168;

/* KL_SPECIAL_ROUTINES [STRING_8] */
typedef struct S170 T170;

/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
typedef struct S171 T171;

/* KL_SPECIAL_ROUTINES [INTEGER_32] */
typedef struct S172 T172;

/* DS_LINKED_LIST_CURSOR [STRING_8] */
typedef struct S173 T173;

/* DS_HASH_SET [INTEGER_32] */
typedef struct S174 T174;

/* ET_ECF_AST_FACTORY */
typedef struct S175 T175;

/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
typedef struct S177 T177;

/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
typedef struct S178 T178;

/* ET_COMPRESSED_POSITION */
typedef struct S179 T179;

/* ET_IDENTIFIER */
typedef struct S181 T181;

/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
typedef struct S183 T183;

/* ET_ECF_STATE */
typedef struct S186 T186;

/* ET_ECF_TARGETS */
typedef struct S187 T187;

/* ET_ECF_LIBRARY */
typedef struct S188 T188;

/* ET_ADAPTED_LIBRARIES */
typedef struct S189 T189;

/* [attached] TUPLE [ET_ADAPTED_LIBRARY] */
typedef struct S191 T191;

/* detachable TUPLE */
typedef struct S192 T192;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ADAPTED_LIBRARY]] */
typedef struct S193 T193;

/* ET_ECF_LIBRARY_PARSER */
typedef struct S194 T194;

/* ET_ECF_ADAPTED_LIBRARY */
typedef struct S195 T195;

/* ET_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S196 T196;

/* ET_ECF_DOTNET_ASSEMBLY */
typedef struct S197 T197;

/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
typedef struct S199 T199;

/* ET_ECF_ERROR */
typedef struct S200 T200;

/* EXECUTION_ENVIRONMENT */
typedef struct S201 T201;

/* ET_LACE_AST_FACTORY */
typedef struct S202 T202;

/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S203 T203;

/* YY_FILE_BUFFER */
typedef struct S204 T204;

/* YY_BUFFER */
typedef struct S205 T205;

/* DS_HASH_SET [ET_IDENTIFIER] */
typedef struct S206 T206;

/* SPECIAL [detachable ANY] */
typedef struct S209 T209;

/* KL_SPECIAL_ROUTINES [detachable ANY] */
typedef struct S210 T210;

/* SPECIAL [ET_IDENTIFIER] */
typedef struct S211 T211;

/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
typedef struct S212 T212;

/* ET_LACE_CLUSTERS */
typedef struct S213 T213;

/* ET_LACE_CLUSTER */
typedef struct S214 T214;

/* ET_LACE_EXCLUDE */
typedef struct S215 T215;

/* ET_LACE_DOTNET_ASSEMBLY */
typedef struct S216 T216;

/* SPECIAL [ET_LACE_SYSTEM] */
typedef struct S217 T217;

/* SPECIAL [detachable ET_LACE_CLUSTERS] */
typedef struct S218 T218;

/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
typedef struct S219 T219;

/* KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM] */
typedef struct S220 T220;

/* KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS] */
typedef struct S221 T221;

/* SPECIAL [ET_LACE_CLUSTER] */
typedef struct S222 T222;

/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
typedef struct S223 T223;

/* SPECIAL [detachable ET_LACE_EXCLUDE] */
typedef struct S224 T224;

/* KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE] */
typedef struct S225 T225;

/* KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
typedef struct S226 T226;

/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S227 T227;

/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S228 T228;

/* ET_LACE_DOTNET_GAC_ASSEMBLY */
typedef struct S229 T229;

/* KL_PLATFORM */
typedef struct S230 T230;

/* KL_INTEGER_ROUTINES */
typedef struct S231 T231;

/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
typedef struct S232 T232;

/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
typedef struct S233 T233;

/* [attached] TUPLE [ET_CLASS] */
typedef struct S234 T234;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLASS]] */
typedef struct S235 T235;

/* [attached] TUPLE [INTEGER_32] */
typedef struct S236 T236;

/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
typedef struct S237 T237;

/* ET_DYNAMIC_TYPE */
typedef struct S238 T238;

/* DT_SHARED_SYSTEM_CLOCK */
typedef struct S239 T239;

/* DT_DATE_TIME */
typedef struct S240 T240;

/* DT_SYSTEM_CLOCK */
typedef struct S241 T241;

/* [attached] TUPLE [ET_DYNAMIC_SYSTEM] */
typedef struct S242 T242;

/* ET_DYNAMIC_FEATURE */
typedef struct S247 T247;

/* ET_ACTUAL_PARAMETER_LIST */
typedef struct S251 T251;

/* ET_EXTERNAL_FUNCTION */
typedef struct S259 T259;

/* ET_TUPLE_TYPE */
typedef struct S260 T260;

/* ET_FORMAL_ARGUMENT_LIST */
typedef struct S261 T261;

/* SPECIAL [ET_TYPE] */
typedef struct S262 T262;

/* detachable ARRAY [ET_TYPE] */
typedef struct S263 T263;

/* ET_FORMAL_ARGUMENT */
typedef struct S264 T264;

/* ET_QUERY_LIST */
typedef struct S265 T265;

/* ET_PROCEDURE_LIST */
typedef struct S266 T266;

/* KL_NULL_TEXT_OUTPUT_STREAM */
typedef struct S267 T267;

/* ET_DYNAMIC_TYPE_SET_LIST */
typedef struct S268 T268;

/* KL_STRING_OUTPUT_STREAM */
typedef struct S269 T269;

/* DS_ARRAYED_LIST [ET_IDENTIFIER] */
typedef struct S270 T270;

/* DS_ARRAYED_LIST [INTEGER_32] */
typedef struct S271 T271;

/* ET_DYNAMIC_TYPE_HASH_LIST */
typedef struct S272 T272;

/* ET_DYNAMIC_STANDALONE_TYPE_SET */
typedef struct S273 T273;

/* DS_ARRAYED_STACK [ET_EXPRESSION] */
typedef struct S274 T274;

/* DS_ARRAYED_LIST [ET_EXPRESSION] */
typedef struct S275 T275;

/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S276 T276;

/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
typedef struct S277 T277;

/* DS_HASH_SET [ET_DYNAMIC_TYPE] */
typedef struct S278 T278;

/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S279 T279;

/* DS_ARRAYED_LIST [ET_OBJECT_TEST] */
typedef struct S280 T280;

/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S281 T281;

/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
typedef struct S282 T282;

/* DS_ARRAYED_LIST [ET_AGENT] */
typedef struct S283 T283;

/* ET_EXPRESSION */
typedef struct S284 T284;

/* ET_CURRENT */
typedef struct S285 T285;

/* ET_ACTUAL_ARGUMENT_LIST */
typedef struct S286 T286;

/* ET_QUALIFIED_CALL_INSTRUCTION */
typedef struct S287 T287;

/* ET_QUALIFIED_CALL_EXPRESSION */
typedef struct S290 T290;

/* ET_UNQUALIFIED_CALL_EXPRESSION */
typedef struct S291 T291;

/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S292 T292;

/* ET_MANIFEST_TUPLE */
typedef struct S293 T293;

/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S294 T294;

/* DS_HASH_SET [ET_FEATURE] */
typedef struct S295 T295;

/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
typedef struct S296 T296;

/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
typedef struct S297 T297;

/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
typedef struct S298 T298;

/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
typedef struct S299 T299;

/* DS_HASH_TABLE [BOOLEAN, STRING_8] */
typedef struct S300 T300;

/* ET_IDENTIFIER_TESTER */
typedef struct S301 T301;

/* detachable KL_EQUALITY_TESTER [ET_IDENTIFIER] */
typedef struct S302 T302;

/* RX_PCRE_REGULAR_EXPRESSION */
typedef struct S303 T303;

/* KL_TEXT_OUTPUT_FILE */
typedef struct S304 T304;

/* ET_DYNAMIC_TUPLE_TYPE */
typedef struct S305 T305;

/* UT_TEMPLATE_EXPANDER */
typedef struct S306 T306;

/* UT_CANNOT_WRITE_TO_FILE_ERROR */
typedef struct S307 T307;

/* ET_DYNAMIC_FEATURE_LIST */
typedef struct S308 T308;

/* ET_DYNAMIC_PRECURSOR */
typedef struct S309 T309;

/* ET_DYNAMIC_PRECURSOR_LIST */
typedef struct S310 T310;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
typedef struct S311 T311;

/* ET_RESULT */
typedef struct S312 T312;

/* ET_DYNAMIC_QUALIFIED_QUERY_CALL */
typedef struct S313 T313;

/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
typedef struct S317 T317;

/* ET_OBJECT_TEST */
typedef struct S319 T319;

/* ET_OBJECT_EQUALITY_EXPRESSION */
typedef struct S320 T320;

/* ET_EQUALITY_EXPRESSION */
typedef struct S321 T321;

/* ET_DYNAMIC_SPECIAL_TYPE */
typedef struct S322 T322;

/* ET_CREATE_EXPRESSION */
typedef struct S325 T325;

/* ET_QUALIFIED_CALL */
typedef struct S326 T326;

/* KL_DIRECTORY */
typedef struct S329 T329;

/* ET_EXTENDED_ATTRIBUTE */
typedef struct S330 T330;

/* ET_COMPOUND */
typedef struct S331 T331;

/* ET_LOCAL_VARIABLE_LIST */
typedef struct S332 T332;

/* ET_DYNAMIC_FUNCTION_TYPE */
typedef struct S333 T333;

/* ET_DYNAMIC_PROCEDURE_TYPE */
typedef struct S334 T334;

/* DS_QUICK_SORTER [INTEGER_32] */
typedef struct S338 T338;

/* ET_IMPLICIT_TYPE_MARK */
typedef struct S344 T344;

/* ET_SYMBOL */
typedef struct S345 T345;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE] */
typedef struct S346 T346;

/* [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S347 T347;

/* [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S348 T348;

/* [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S350 T350;

/* [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S351 T351;

/* UT_INTEGER_FORMATTER */
typedef struct S352 T352;

/* STD_FILES */
typedef struct S356 T356;

/* [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S358 T358;

/* [attached] TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
typedef struct S360 T360;

/* [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S361 T361;

/* ET_CONSTANT_ATTRIBUTE */
typedef struct S362 T362;

/* ET_UNIQUE_ATTRIBUTE */
typedef struct S364 T364;

/* ET_ATTRIBUTE */
typedef struct S365 T365;

/* NATIVE_STRING */
typedef struct S367 T367;

/* DS_HASH_SET_CURSOR [STRING_8] */
typedef struct S368 T368;

/* ET_FEATURE_CHECKER */
typedef struct S369 T369;

/* DS_CELL [INTEGER_32] */
typedef struct S370 T370;

/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S371 T371;

/* ET_TYPE_CHECKER */
typedef struct S372 T372;

/* DS_ARRAYED_LIST [ET_INLINE_AGENT] */
typedef struct S374 T374;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S375 T375;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S376 T376;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S377 T377;

/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
typedef struct S378 T378;

/* ET_NESTED_TYPE_CONTEXT */
typedef struct S379 T379;

/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
typedef struct S380 T380;

/* ET_OBJECT_TEST_SCOPE */
typedef struct S381 T381;

/* ET_OBJECT_TEST_SCOPE_BUILDER */
typedef struct S382 T382;

/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
typedef struct S383 T383;

/* ET_ACROSS_CURSOR_SCOPE */
typedef struct S384 T384;

/* ET_ATTACHMENT_SCOPE */
typedef struct S385 T385;

/* ET_ATTACHMENT_SCOPE_BUILDER */
typedef struct S386 T386;

/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
typedef struct S387 T387;

/* ET_PRECONDITIONS */
typedef struct S388 T388;

/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE] */
typedef struct S389 T389;

/* ET_FEATURE_LIST */
typedef struct S391 T391;

/* ET_UNKNOWN_GROUP */
typedef struct S393 T393;

/* ET_BASE_TYPE_LIST */
typedef struct S395 T395;

/* ET_KEYWORD */
typedef struct S396 T396;

/* ET_CLASS_CODES */
typedef struct S397 T397;

/* ARGUMENTS_32 */
typedef struct S399 T399;

/* IMMUTABLE_STRING_32 */
typedef struct S400 T400;

/* ET_AST_FACTORY */
typedef struct S402 T402;

/* ET_XACE_EXTERNALS */
typedef struct S403 T403;

/* ET_XACE_OPTIONS */
typedef struct S404 T404;

/* XM_ATTRIBUTE */
typedef struct S405 T405;

/* ET_XACE_OPTION_NAMES */
typedef struct S408 T408;

/* ET_XACE_CLUSTER */
typedef struct S410 T410;

/* ET_XACE_CLUSTERS */
typedef struct S411 T411;

/* ET_XACE_MOUNTED_LIBRARY */
typedef struct S412 T412;

/* ET_XACE_MOUNTED_LIBRARIES */
typedef struct S413 T413;

/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S414 T414;

/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
typedef struct S416 T416;

/* ET_XACE_LIBRARY_CONFIG */
typedef struct S418 T418;

/* DS_HASH_TABLE [INTEGER_32, STRING_8] */
typedef struct S419 T419;

/* ET_XACE_CLASS_OPTIONS */
typedef struct S421 T421;

/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
typedef struct S422 T422;

/* ET_XACE_BOOLEAN_EXPECTED_ERROR */
typedef struct S423 T423;

/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
typedef struct S424 T424;

/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
typedef struct S425 T425;

/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
typedef struct S426 T426;

/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S427 T427;

/* ET_AST_NULL_PROCESSOR */
typedef struct S429 T429;

/* [attached] TUPLE [ET_UNIVERSE] */
typedef struct S430 T430;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_UNIVERSE]] */
typedef struct S431 T431;

/* [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]]] */
typedef struct S432 T432;

/* [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
typedef struct S434 T434;

/* DT_DATE_TIME_DURATION */
typedef struct S435 T435;

/* ET_IMPLEMENTATION_CHECKER */
typedef struct S436 T436;

/* ET_EIFFEL_PREPARSER */
typedef struct S437 T437;

/* ET_MASTER_CLASS_CHECKER */
typedef struct S438 T438;

/* ET_EIFFEL_PARSER */
typedef struct S439 T439;

/* ET_PROVIDER_CHECKER */
typedef struct S440 T440;

/* ET_ANCESTOR_BUILDER */
typedef struct S441 T441;

/* ET_FEATURE_FLATTENER */
typedef struct S442 T442;

/* ET_INTERFACE_CHECKER */
typedef struct S443 T443;

/* DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
typedef struct S445 T445;

/* ET_DOTNET_ASSEMBLIES */
typedef struct S446 T446;

/* ET_DOTNET_ASSEMBLY */
typedef struct S447 T447;

/* [attached] TUPLE [ET_DOTNET_ASSEMBLY] */
typedef struct S448 T448;

/* [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
typedef struct S449 T449;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
typedef struct S450 T450;

/* [attached] TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
typedef struct S451 T451;

/* [attached] TUPLE [ET_INTERNAL_UNIVERSE] */
typedef struct S452 T452;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_INTERNAL_UNIVERSE]] */
typedef struct S453 T453;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]]] */
typedef struct S454 T454;

/* [attached] TUPLE [ET_DOTNET_ASSEMBLIES] */
typedef struct S456 T456;

/* ET_LIBRARY */
typedef struct S459 T459;

/* [attached] TUPLE [ET_LIBRARY] */
typedef struct S460 T460;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_LIBRARY]] */
typedef struct S461 T461;

/* DS_ARRAYED_LIST_CURSOR [STRING_8] */
typedef struct S462 T462;

/* ET_CLASS_NAME_TESTER */
typedef struct S464 T464;

/* ET_PARENT */
typedef struct S466 T466;

/* ET_PARENT_LIST */
typedef struct S467 T467;

/* ET_CLIENT_LIST */
typedef struct S468 T468;

/* ET_BUILTIN_CONVERT_FEATURE */
typedef struct S469 T469;

/* ET_MASTER_CLASS */
typedef struct S470 T470;

/* DS_HASH_SET [ET_UNIVERSE] */
typedef struct S471 T471;

/* [attached] TUPLE [ET_AST_PROCESSOR] */
typedef struct S472 T472;

/* [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_CLASS]] */
typedef struct S473 T473;

/* [attached] TUPLE [ET_MASTER_CLASS] */
typedef struct S475 T475;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_MASTER_CLASS]] */
typedef struct S476 T476;

/* [attached] TUPLE [ET_CLUSTER] */
typedef struct S478 T478;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLUSTER]] */
typedef struct S479 T479;

/* [attached] TUPLE [ET_XACE_SYSTEM] */
typedef struct S480 T480;

/* DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
typedef struct S482 T482;

/* [attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S484 T484;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
typedef struct S485 T485;

/* ET_ANCESTORS_STATUS_CHECKER */
typedef struct S487 T487;

/* ET_FLATTENING_STATUS_CHECKER */
typedef struct S488 T488;

/* ET_INTERFACE_STATUS_CHECKER */
typedef struct S489 T489;

/* ET_IMPLEMENTATION_STATUS_CHECKER */
typedef struct S490 T490;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLASS]]] */
typedef struct S491 T491;

/* [attached] TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
typedef struct S492 T492;

/* [attached] TUPLE [ET_FLATTENING_STATUS_CHECKER] */
typedef struct S493 T493;

/* [attached] TUPLE [ET_INTERFACE_STATUS_CHECKER] */
typedef struct S494 T494;

/* [attached] TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
typedef struct S495 T495;

/* [attached] TUPLE [BOOLEAN] */
typedef struct S496 T496;

/* ET_CLIENT */
typedef struct S497 T497;

/* ET_RENAME_LIST */
typedef struct S498 T498;

/* ET_EXPORT_LIST */
typedef struct S499 T499;

/* ET_KEYWORD_FEATURE_NAME_LIST */
typedef struct S500 T500;

/* ET_LIKE_CURRENT */
typedef struct S503 T503;

/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
typedef struct S504 T504;

/* ET_NONE_GROUP */
typedef struct S505 T505;

/* [attached] TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
typedef struct S506 T506;

/* [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]], FUNCTION [ANY, TUPLE [ET_CLASS], BOOLEAN]] */
typedef struct S507 T507;

/* [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]], FUNCTION [ANY, TUPLE [ET_CLASS], BOOLEAN], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
typedef struct S508 T508;

/* [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]]] */
typedef struct S509 T509;

/* [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
typedef struct S510 T510;

/* [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLUSTER]]] */
typedef struct S513 T513;

/* [attached] TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
typedef struct S517 T517;

/* XM_NAMESPACE */
typedef struct S520 T520;

/* ARRAY [INTEGER_32] */
typedef struct S521 T521;

/* KL_ARRAY_ROUTINES [INTEGER_32] */
typedef struct S522 T522;

/* UT_CONFIG_PARSER */
typedef struct S523 T523;

/* KL_COMPARABLE_COMPARATOR [INTEGER_32] */
typedef struct S524 T524;

/* ET_DO_PROCEDURE */
typedef struct S527 T527;

/* ET_SYSTEM_ERROR */
typedef struct S529 T529;

/* ET_INTERNAL_ERROR */
typedef struct S530 T530;

/* ET_VALIDITY_ERROR */
typedef struct S531 T531;

/* ET_DYNAMIC_PUSH_TYPE_SET */
typedef struct S532 T532;

/* ET_DEFERRED_PROCEDURE */
typedef struct S533 T533;

/* UTF_CONVERTER */
typedef struct S534 T534;
extern T0* GE_boxed534(T534 a1);
typedef struct Sb534 Tb534;

/* CELL [INTEGER_32] */
typedef struct S535 T535;

/* C_STRING */
typedef struct S536 T536;

/* KL_PATHNAME */
typedef struct S538 T538;

/* PLATFORM */
typedef struct S539 T539;

/* READABLE_STRING_32 */
typedef struct S540 T540;

/* SPECIAL [NATURAL_8] */
typedef struct S541 T541;

/* TYPED_POINTER [SPECIAL [NATURAL_8]] */
typedef struct S542 T542;
extern T0* GE_boxed542(T542 a1);
typedef struct Sb542 Tb542;

/* DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
typedef struct S543 T543;

/* SPECIAL [AP_OPTION] */
typedef struct S545 T545;

/* KL_SPECIAL_ROUTINES [AP_OPTION] */
typedef struct S546 T546;

/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S547 T547;

/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S548 T548;

/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S549 T549;

/* detachable DS_LINKABLE [STRING_8] */
typedef struct S550 T550;

/* detachable DS_LINKABLE [BOOLEAN] */
typedef struct S551 T551;

/* DS_LINKED_LIST_CURSOR [BOOLEAN] */
typedef struct S552 T552;

/* detachable DS_LINKABLE [INTEGER_32] */
typedef struct S553 T553;

/* DS_LINKED_LIST_CURSOR [INTEGER_32] */
typedef struct S554 T554;

/* XM_NAMESPACE_RESOLVER */
typedef struct S555 T555;

/* SPECIAL [XM_CALLBACKS_FILTER] */
typedef struct S556 T556;

/* ARRAY [XM_CALLBACKS_FILTER] */
typedef struct S557 T557;

/* XM_CALLBACKS_NULL */
typedef struct S558 T558;

/* DS_HASH_SET [XM_NAMESPACE] */
typedef struct S559 T559;

/* detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8] */
typedef struct S565 T565;

/* SPECIAL [ET_XACE_LIBRARY_CONFIG] */
typedef struct S566 T566;

/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG] */
typedef struct S567 T567;

/* XM_EIFFEL_SCANNER */
typedef struct S568 T568;

/* XM_DEFAULT_POSITION */
typedef struct S569 T569;

/* DS_BILINKED_LIST [XM_POSITION] */
typedef struct S571 T571;

/* DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
typedef struct S572 T572;

/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S573 T573;

/* XM_NULL_EXTERNAL_RESOLVER */
typedef struct S575 T575;

/* XM_DTD_CALLBACKS_NULL */
typedef struct S577 T577;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
typedef struct S578 T578;

/* XM_EIFFEL_PARSER_NAME */
typedef struct S579 T579;

/* SPECIAL [XM_EIFFEL_PARSER_NAME] */
typedef struct S580 T580;

/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S581 T581;

/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
typedef struct S582 T582;

/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S583 T583;

/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
typedef struct S584 T584;

/* XM_DTD_EXTERNAL_ID */
typedef struct S585 T585;

/* SPECIAL [XM_DTD_EXTERNAL_ID] */
typedef struct S586 T586;

/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
typedef struct S587 T587;

/* XM_DTD_ELEMENT_CONTENT */
typedef struct S588 T588;

/* SPECIAL [XM_DTD_ELEMENT_CONTENT] */
typedef struct S589 T589;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S590 T590;

/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S591 T591;

/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S592 T592;

/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S593 T593;

/* XM_DTD_ATTRIBUTE_CONTENT */
typedef struct S594 T594;

/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S595 T595;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
typedef struct S596 T596;

/* DS_BILINKED_LIST [STRING_8] */
typedef struct S597 T597;

/* SPECIAL [DS_BILINKED_LIST [STRING_8]] */
typedef struct S598 T598;

/* KL_SPECIAL_ROUTINES [BOOLEAN] */
typedef struct S599 T599;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
typedef struct S600 T600;

/* XM_EIFFEL_DECLARATION */
typedef struct S601 T601;

/* SPECIAL [XM_EIFFEL_DECLARATION] */
typedef struct S602 T602;

/* XM_EIFFEL_ENTITY_DEF */
typedef struct S605 T605;

/* XM_EIFFEL_SCANNER_DTD */
typedef struct S606 T606;

/* XM_EIFFEL_PE_ENTITY_DEF */
typedef struct S608 T608;

/* DS_HASH_SET_CURSOR [INTEGER_32] */
typedef struct S609 T609;

/* detachable KL_EQUALITY_TESTER [INTEGER_32] */
typedef struct S610 T610;

/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
typedef struct S611 T611;

/* SPECIAL [ET_ECF_LIBRARY] */
typedef struct S612 T612;

/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
typedef struct S615 T615;

/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
typedef struct S616 T616;

/* detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
typedef struct S619 T619;

/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
typedef struct S620 T620;

/* DS_ARRAYED_LIST [ET_ECF_TARGET] */
typedef struct S621 T621;

/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
typedef struct S622 T622;

/* DS_HASH_SET [ET_LIBRARY] */
typedef struct S623 T623;

/* [attached] TUPLE [DS_HASH_SET [ET_LIBRARY]] */
typedef struct S624 T624;

/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S625 T625;

/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
typedef struct S626 T626;

/* detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S628 T628;

/* DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
typedef struct S629 T629;

/* [attached] TYPE [ET_IDENTIFIER] */
#define T630 EIF_TYPE

/* DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
typedef struct S631 T631;

/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
typedef struct S634 T634;

/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
typedef struct S635 T635;

/* SPECIAL [ET_MASTER_CLASS] */
typedef struct S636 T636;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
typedef struct S637 T637;

/* SPECIAL [ET_CLASS_NAME] */
typedef struct S638 T638;

/* SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S639 T639;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
typedef struct S640 T640;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S641 T641;

/* ET_FORMAL_PARAMETER_LIST */
typedef struct S642 T642;

/* C_DATE */
typedef struct S644 T644;

/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S648 T648;

/* ET_BRACKET_SYMBOL */
typedef struct S649 T649;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S651 T651;

/* SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S653 T653;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
typedef struct S654 T654;

/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
typedef struct S655 T655;

/* DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
typedef struct S656 T656;

/* SPECIAL [ET_EXPRESSION] */
typedef struct S658 T658;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
typedef struct S659 T659;

/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
typedef struct S660 T660;

/* detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S662 T662;

/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S663 T663;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S664 T664;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S665 T665;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S666 T666;

/* SPECIAL [ET_OBJECT_TEST] */
typedef struct S668 T668;

/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
typedef struct S669 T669;

/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
typedef struct S670 T670;

/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S671 T671;

/* KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S672 T672;

/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S673 T673;

/* SPECIAL [ET_EQUALITY_EXPRESSION] */
typedef struct S674 T674;

/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
typedef struct S675 T675;

/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
typedef struct S676 T676;

/* SPECIAL [ET_AGENT] */
typedef struct S677 T677;

/* KL_SPECIAL_ROUTINES [ET_AGENT] */
typedef struct S678 T678;

/* DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
typedef struct S679 T679;

/* SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S680 T680;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
typedef struct S682 T682;

/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S683 T683;

/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S684 T684;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S685 T685;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S686 T686;

/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S687 T687;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S688 T688;

/* DS_HASH_SET_CURSOR [ET_FEATURE] */
typedef struct S689 T689;

/* KL_SPECIAL_ROUTINES [ET_FEATURE] */
typedef struct S691 T691;

/* SPECIAL [ET_FEATURE] */
typedef struct S692 T692;

/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S693 T693;

/* SPECIAL [ET_CONSTANT] */
typedef struct S694 T694;

/* KL_SPECIAL_ROUTINES [ET_CONSTANT] */
typedef struct S696 T696;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
typedef struct S697 T697;

/* SPECIAL [ET_INLINE_CONSTANT] */
typedef struct S698 T698;

/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
typedef struct S700 T700;

/* SPECIAL [detachable ET_DYNAMIC_FEATURE] */
typedef struct S701 T701;

/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
typedef struct S703 T703;

/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
typedef struct S704 T704;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
typedef struct S705 T705;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
typedef struct S706 T706;

/* RX_BYTE_CODE */
typedef struct S710 T710;

/* RX_CHARACTER_SET */
typedef struct S711 T711;

/* RX_CASE_MAPPING */
typedef struct S712 T712;

/* SPECIAL [RX_CHARACTER_SET] */
typedef struct S714 T714;

/* ARRAY [RX_CHARACTER_SET] */
typedef struct S715 T715;

/* TYPED_POINTER [ANY] */
typedef struct S716 T716;
extern T0* GE_boxed716(T716 a1);
typedef struct Sb716 Tb716;

/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S717 T717;

/* ARRAY [BOOLEAN] */
typedef struct S718 T718;

/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S721 T721;

/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
typedef struct S724 T724;

/* SPECIAL [ET_INLINE_AGENT] */
typedef struct S726 T726;

/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
typedef struct S727 T727;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S728 T728;

/* DS_ARRAYED_LIST [ET_PROCEDURE] */
typedef struct S729 T729;

/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S730 T730;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S731 T731;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S732 T732;

/* DS_ARRAYED_LIST [ET_QUERY] */
typedef struct S733 T733;

/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S734 T734;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S735 T735;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S736 T736;

/* DS_ARRAYED_LIST [ET_FEATURE] */
typedef struct S737 T737;

/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S738 T738;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S739 T739;

/* SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S740 T740;

/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
typedef struct S741 T741;

/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
typedef struct S742 T742;

/* KL_SPECIAL_ROUTINES [ET_TYPE] */
typedef struct S743 T743;

/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
typedef struct S744 T744;

/* ET_NAMED_OBJECT_TEST */
typedef struct S747 T747;

/* SPECIAL [ET_NAMED_OBJECT_TEST] */
typedef struct S748 T748;

/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
typedef struct S749 T749;

/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
typedef struct S750 T750;

/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
typedef struct S751 T751;

/* SPECIAL [ET_ACROSS_COMPONENT] */
typedef struct S754 T754;

/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT] */
typedef struct S755 T755;

/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT] */
typedef struct S756 T756;

/* SPECIAL [ET_ATTACHMENT_SCOPE] */
typedef struct S758 T758;

/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
typedef struct S759 T759;

/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
typedef struct S760 T760;

/* DS_HASH_TABLE_CURSOR [ET_PRECONDITIONS, ET_FEATURE] */
typedef struct S761 T761;

/* SPECIAL [ET_PRECONDITIONS] */
typedef struct S762 T762;

/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
typedef struct S764 T764;

/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
typedef struct S765 T765;

/* STRING_TO_INTEGER_CONVERTOR */
typedef struct S766 T766;

/* STRING_8_SEARCHER */
typedef struct S768 T768;

/* detachable ARRAYED_LIST [INTEGER_32] */
typedef struct S769 T769;

/* ET_CLUSTERS */
typedef struct S770 T770;

/* UC_UNICODE_ROUTINES */
typedef struct S771 T771;

/* ET_XACE_FEATURE_OPTIONS */
typedef struct S772 T772;

/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
typedef struct S773 T773;

/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
typedef struct S774 T774;

/* ET_XACE_MISSING_ATTRIBUTE_ERROR */
typedef struct S775 T775;

/* ET_XACE_UNKNOWN_ELEMENT_ERROR */
typedef struct S776 T776;

/* ET_XACE_MISSING_ELEMENT_ERROR */
typedef struct S777 T777;

/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
typedef struct S778 T778;

/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
typedef struct S779 T779;

/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
typedef struct S780 T780;

/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S781 T781;

/* UT_COUNTER */
typedef struct S784 T784;

/* KL_AGENT_ROUTINES [ET_CLASS] */
typedef struct S785 T785;

/* [attached] TUPLE [UT_COUNTER] */
typedef struct S786 T786;

/* [attached] TUPLE [KL_AGENT_ROUTINES [ET_CLASS], [attached] PROCEDURE [[attached] NONE, [attached] TUPLE]] */
typedef struct S787 T787;

/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
typedef struct S788 T788;

/* UT_TRISTATE */
typedef struct S789 T789;

/* KL_AGENT_ROUTINES [ANY] */
typedef struct S790 T790;

/* [attached] TUPLE [UT_TRISTATE] */
typedef struct S791 T791;

/* [attached] TUPLE [KL_AGENT_ROUTINES [ANY], [attached] PROCEDURE [[attached] NONE, [attached] TUPLE]] */
typedef struct S792 T792;

/* [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_MASTER_CLASS]] */
typedef struct S793 T793;

/* [attached] PREDICATE [[attached] NONE, [attached] TUPLE] */
typedef struct S794 T794;

/* [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]], FUNCTION [ANY, TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
typedef struct S796 T796;

/* [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]], FUNCTION [ANY, TUPLE [ET_MASTER_CLASS], BOOLEAN], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
typedef struct S797 T797;

/* ET_ECF_CLUSTER */
typedef struct S798 T798;

/* ET_ECF_CLUSTERS */
typedef struct S799 T799;

/* ET_ECF_ADAPTED_LIBRARIES */
typedef struct S800 T800;

/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S801 T801;

/* ET_ECF_FILE_RULE */
typedef struct S802 T802;

/* ET_ECF_FILE_RULES */
typedef struct S803 T803;

/* ET_ECF_EXTERNAL_INCLUDE */
typedef struct S804 T804;

/* ET_ECF_EXTERNAL_INCLUDES */
typedef struct S805 T805;

/* ET_ECF_EXTERNAL_OBJECT */
typedef struct S806 T806;

/* ET_ECF_EXTERNAL_OBJECTS */
typedef struct S807 T807;

/* ET_ECF_EXTERNAL_LIBRARY */
typedef struct S808 T808;

/* ET_ECF_EXTERNAL_LIBRARIES */
typedef struct S809 T809;

/* ET_ECF_SETTINGS */
typedef struct S811 T811;

/* ET_ECF_OPTIONS */
typedef struct S812 T812;

/* ET_ECF_CONDITIONS */
typedef struct S813 T813;

/* ET_ECF_ROOT_CLASS */
typedef struct S814 T814;

/* ET_ECF_ROOT_ALL_CLASSES */
typedef struct S815 T815;

/* ET_ECF_PLATFORM_CONDITION */
typedef struct S817 T817;

/* ET_ECF_BUILD_CONDITION */
typedef struct S818 T818;

/* ET_ECF_MULTITHREADED_CONDITION */
typedef struct S819 T819;

/* ET_ECF_CONCURRENCY_CONDITION */
typedef struct S820 T820;

/* ET_ECF_DOTNET_CONDITION */
typedef struct S821 T821;

/* ET_ECF_DYNAMIC_RUNTIME_CONDITION */
typedef struct S822 T822;

/* ET_ECF_CUSTOM_CONDITION */
typedef struct S823 T823;

/* ET_ECF_COMPILER_VERSION_CONDITION */
typedef struct S825 T825;

/* [attached] TUPLE [ET_ECF_SYSTEM] */
typedef struct S826 T826;

/* [attached] TUPLE [ET_LACE_SYSTEM] */
typedef struct S827 T827;

/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
typedef struct S830 T830;

/* ET_REGULAR_MANIFEST_STRING */
typedef struct S831 T831;

/* ET_INFIX_FREE_NAME */
typedef struct S832 T832;

/* ET_CREATOR_LIST */
typedef struct S833 T833;

/* EXCEPTIONS */
typedef struct S835 T835;

/* XM_LINKED_LIST [XM_DOCUMENT_NODE] */
typedef struct S836 T836;

/* XM_LINKED_LIST [XM_ELEMENT_NODE] */
typedef struct S838 T838;

/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S842 T842;

/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S843 T843;

/* DS_PAIR [XM_POSITION, XM_NODE] */
typedef struct S844 T844;

/* UC_UTF8_ROUTINES */
typedef struct S845 T845;

/* UC_UTF8_STRING */
typedef struct S846 T846;

/* XM_EIFFEL_INPUT_STREAM */
typedef struct S847 T847;

/* [attached] TYPE [INTEGER_32] */
#define T850 EIF_TYPE

/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
typedef struct S851 T851;

/* KL_CHARACTER_BUFFER */
typedef struct S854 T854;

/* [attached] TUPLE [ET_LACE_CLUSTER] */
typedef struct S855 T855;

/* ET_CLUSTER_DEPENDENCE_CONSTRAINT */
typedef struct S856 T856;

/* SPECIAL [ET_QUERY] */
typedef struct S857 T857;

/* ET_ALIAS_NAME */
typedef struct S858 T858;

/* KL_SPECIAL_ROUTINES [ET_QUERY] */
typedef struct S859 T859;

/* SPECIAL [ET_PROCEDURE] */
typedef struct S860 T860;

/* KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
typedef struct S861 T861;

/* CONSOLE */
typedef struct S865 T865;

/* ET_LIKE_N */
typedef struct S866 T866;

/* SPECIAL [ET_BASE_TYPE] */
typedef struct S867 T867;

/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
typedef struct S868 T868;

/* SPECIAL [IMMUTABLE_STRING_32] */
typedef struct S869 T869;

/* ARRAY [IMMUTABLE_STRING_32] */
typedef struct S870 T870;

/* detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
typedef struct S871 T871;

/* DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
typedef struct S872 T872;

/* [attached] TUPLE [ET_XACE_CLUSTER] */
typedef struct S873 T873;

/* SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S874 T874;

/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S875 T875;

/* DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S876 T876;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
typedef struct S878 T878;

/* detachable DS_HASH_SET [ET_NAMED_CLASS] */
typedef struct S880 T880;

/* DS_HASH_SET [ET_PROCEDURE] */
typedef struct S881 T881;

/* DS_HASH_SET [ET_QUERY] */
typedef struct S882 T882;

/* ET_SUPPLIER_BUILDER */
typedef struct S883 T883;

/* ET_POSTCONDITIONS */
typedef struct S885 T885;

/* ET_INVARIANTS */
typedef struct S886 T886;

/* KL_STDIN_FILE */
typedef struct S887 T887;

/* DS_ARRAYED_STACK [INTEGER_32] */
typedef struct S889 T889;

/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S890 T890;

/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S891 T891;

/* DS_ARRAYED_STACK [detachable ET_KEYWORD] */
typedef struct S892 T892;

/* DS_ARRAYED_STACK [detachable ET_SYMBOL] */
typedef struct S893 T893;

/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
typedef struct S894 T894;

/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S895 T895;

/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
typedef struct S896 T896;

/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
typedef struct S897 T897;

/* KL_STRING_INPUT_STREAM */
typedef struct S898 T898;

/* ET_TEXT_GROUP */
typedef struct S899 T899;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
typedef struct S900 T900;

/* SPECIAL [detachable ET_KEYWORD] */
typedef struct S901 T901;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
typedef struct S902 T902;

/* ET_AGENT_KEYWORD */
typedef struct S903 T903;

/* SPECIAL [detachable ET_AGENT_KEYWORD] */
typedef struct S904 T904;

/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
typedef struct S905 T905;

/* ET_PRECURSOR_KEYWORD */
typedef struct S906 T906;

/* SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
typedef struct S907 T907;

/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
typedef struct S908 T908;

/* SPECIAL [detachable ET_SYMBOL] */
typedef struct S909 T909;

/* KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
typedef struct S910 T910;

/* SPECIAL [detachable ET_POSITION] */
typedef struct S911 T911;

/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
typedef struct S912 T912;

/* SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
typedef struct S914 T914;

/* KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
typedef struct S915 T915;

/* SPECIAL [detachable ET_BREAK] */
typedef struct S917 T917;

/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
typedef struct S918 T918;

/* SPECIAL [detachable ET_CHARACTER_CONSTANT] */
typedef struct S920 T920;

/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
typedef struct S921 T921;

/* SPECIAL [detachable ET_CURRENT] */
typedef struct S922 T922;

/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
typedef struct S923 T923;

/* ET_FREE_OPERATOR */
typedef struct S924 T924;

/* SPECIAL [detachable ET_FREE_OPERATOR] */
typedef struct S925 T925;

/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
typedef struct S926 T926;

/* SPECIAL [detachable ET_INTEGER_CONSTANT] */
typedef struct S928 T928;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
typedef struct S929 T929;

/* ET_KEYWORD_OPERATOR */
typedef struct S930 T930;

/* SPECIAL [detachable ET_KEYWORD_OPERATOR] */
typedef struct S931 T931;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
typedef struct S932 T932;

/* SPECIAL [detachable ET_MANIFEST_STRING] */
typedef struct S933 T933;

/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
typedef struct S934 T934;

/* SPECIAL [detachable ET_REAL_CONSTANT] */
typedef struct S936 T936;

/* KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
typedef struct S937 T937;

/* SPECIAL [detachable ET_RESULT] */
typedef struct S938 T938;

/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
typedef struct S939 T939;

/* ET_RETRY_INSTRUCTION */
typedef struct S940 T940;

/* SPECIAL [detachable ET_RETRY_INSTRUCTION] */
typedef struct S941 T941;

/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
typedef struct S942 T942;

/* ET_SYMBOL_OPERATOR */
typedef struct S943 T943;

/* SPECIAL [detachable ET_SYMBOL_OPERATOR] */
typedef struct S944 T944;

/* KL_SPECIAL_ROUTINES [detachable ET_VOID] */
typedef struct S945 T945;

/* ET_VOID */
typedef struct S946 T946;

/* SPECIAL [detachable ET_VOID] */
typedef struct S947 T947;

/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
typedef struct S948 T948;

/* ET_SEMICOLON_SYMBOL */
typedef struct S949 T949;

/* SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
typedef struct S950 T950;

/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
typedef struct S951 T951;

/* SPECIAL [detachable ET_BRACKET_SYMBOL] */
typedef struct S952 T952;

/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
typedef struct S953 T953;

/* ET_QUESTION_MARK_SYMBOL */
typedef struct S954 T954;

/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
typedef struct S955 T955;

/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
typedef struct S956 T956;

/* ET_ACROSS_EXPRESSION */
typedef struct S957 T957;

/* SPECIAL [detachable ET_ACROSS_EXPRESSION] */
typedef struct S958 T958;

/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
typedef struct S959 T959;

/* ET_ACROSS_INSTRUCTION */
typedef struct S960 T960;

/* SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
typedef struct S961 T961;

/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S962 T962;

/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S963 T963;

/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef struct S964 T964;

/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef struct S965 T965;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S966 T966;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S967 T967;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S968 T968;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S970 T970;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S971 T971;

/* ET_AGENT_ARGUMENT_OPERAND_LIST */
typedef struct S972 T972;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S973 T973;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
typedef struct S974 T974;

/* SPECIAL [detachable ET_AGENT_TARGET] */
typedef struct S975 T975;

/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
typedef struct S976 T976;

/* SPECIAL [detachable ET_ALIAS_NAME] */
typedef struct S977 T977;

/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
typedef struct S978 T978;

/* SPECIAL [detachable ET_ASSIGNER] */
typedef struct S980 T980;

/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_ARGUMENT_LIST] */
typedef struct S981 T981;

/* ET_BRACKET_ARGUMENT_LIST */
typedef struct S982 T982;

/* SPECIAL [detachable ET_BRACKET_ARGUMENT_LIST] */
typedef struct S983 T983;

/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
typedef struct S984 T984;

/* ET_BRACKET_EXPRESSION */
typedef struct S985 T985;

/* SPECIAL [detachable ET_BRACKET_EXPRESSION] */
typedef struct S986 T986;

/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
typedef struct S987 T987;

/* ET_CALL_AGENT */
typedef struct S988 T988;

/* SPECIAL [detachable ET_CALL_AGENT] */
typedef struct S989 T989;

/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
typedef struct S990 T990;

/* ET_CHECK_INSTRUCTION */
typedef struct S991 T991;

/* SPECIAL [detachable ET_CHECK_INSTRUCTION] */
typedef struct S992 T992;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
typedef struct S993 T993;

/* SPECIAL [detachable ET_CHOICE] */
typedef struct S995 T995;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
typedef struct S996 T996;

/* SPECIAL [detachable ET_CHOICE_CONSTANT] */
typedef struct S998 T998;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
typedef struct S999 T999;

/* SPECIAL [detachable ET_CHOICE_ITEM] */
typedef struct S1001 T1001;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
typedef struct S1002 T1002;

/* ET_CHOICE_LIST */
typedef struct S1003 T1003;

/* SPECIAL [detachable ET_CHOICE_LIST] */
typedef struct S1004 T1004;

/* KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
typedef struct S1005 T1005;

/* SPECIAL [detachable ET_CLASS] */
typedef struct S1006 T1006;

/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
typedef struct S1007 T1007;

/* SPECIAL [detachable ET_CLIENT_ITEM] */
typedef struct S1008 T1008;

/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
typedef struct S1009 T1009;

/* ET_CLIENTS */
typedef struct S1010 T1010;

/* SPECIAL [detachable ET_CLIENTS] */
typedef struct S1011 T1011;

/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
typedef struct S1012 T1012;

/* SPECIAL [detachable ET_COMPOUND] */
typedef struct S1013 T1013;

/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
typedef struct S1014 T1014;

/* SPECIAL [detachable ET_CONDITIONAL] */
typedef struct S1016 T1016;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1017 T1017;

/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1019 T1019;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1020 T1020;

/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
typedef struct S1021 T1021;

/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1022 T1022;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
typedef struct S1023 T1023;

/* ET_CONSTRAINT_CREATOR */
typedef struct S1024 T1024;

/* SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
typedef struct S1025 T1025;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1026 T1026;

/* SPECIAL [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1028 T1028;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
typedef struct S1029 T1029;

/* SPECIAL [detachable ET_CONVERT_FEATURE] */
typedef struct S1031 T1031;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
typedef struct S1032 T1032;

/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
typedef struct S1034 T1034;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
typedef struct S1035 T1035;

/* ET_CONVERT_FEATURE_LIST */
typedef struct S1036 T1036;

/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
typedef struct S1037 T1037;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
typedef struct S1038 T1038;

/* SPECIAL [detachable ET_CREATE_EXPRESSION] */
typedef struct S1039 T1039;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
typedef struct S1040 T1040;

/* ET_CREATOR */
typedef struct S1041 T1041;

/* SPECIAL [detachable ET_CREATOR] */
typedef struct S1042 T1042;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
typedef struct S1043 T1043;

/* SPECIAL [detachable ET_CREATOR_LIST] */
typedef struct S1044 T1044;

/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
typedef struct S1045 T1045;

/* ET_DEBUG_INSTRUCTION */
typedef struct S1046 T1046;

/* SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
typedef struct S1047 T1047;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
typedef struct S1048 T1048;

/* ET_ELSEIF_PART */
typedef struct S1049 T1049;

/* SPECIAL [detachable ET_ELSEIF_PART] */
typedef struct S1050 T1050;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
typedef struct S1051 T1051;

/* ET_ELSEIF_PART_LIST */
typedef struct S1052 T1052;

/* SPECIAL [detachable ET_ELSEIF_PART_LIST] */
typedef struct S1053 T1053;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
typedef struct S1054 T1054;

/* SPECIAL [detachable ET_EXPORT] */
typedef struct S1056 T1056;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
typedef struct S1057 T1057;

/* SPECIAL [detachable ET_EXPORT_LIST] */
typedef struct S1058 T1058;

/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
typedef struct S1059 T1059;

/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
typedef struct S1060 T1060;

/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
typedef struct S1061 T1061;

/* SPECIAL [detachable ET_EXTERNAL_ALIAS] */
typedef struct S1063 T1063;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
typedef struct S1064 T1064;

/* ET_FEATURE_CLAUSE */
typedef struct S1065 T1065;

/* SPECIAL [detachable ET_FEATURE_CLAUSE] */
typedef struct S1066 T1066;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
typedef struct S1067 T1067;

/* ET_FEATURE_CLAUSE_LIST */
typedef struct S1068 T1068;

/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
typedef struct S1069 T1069;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
typedef struct S1070 T1070;

/* ET_FEATURE_EXPORT */
typedef struct S1071 T1071;

/* SPECIAL [detachable ET_FEATURE_EXPORT] */
typedef struct S1072 T1072;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
typedef struct S1073 T1073;

/* SPECIAL [detachable ET_FEATURE_NAME] */
typedef struct S1074 T1074;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
typedef struct S1075 T1075;

/* SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
typedef struct S1077 T1077;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
typedef struct S1078 T1078;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT] */
typedef struct S1079 T1079;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1080 T1080;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1082 T1082;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1083 T1083;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1084 T1084;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
typedef struct S1085 T1085;

/* ET_FORMAL_PARAMETER */
typedef struct S1086 T1086;

/* SPECIAL [detachable ET_FORMAL_PARAMETER] */
typedef struct S1087 T1087;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1088 T1088;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1090 T1090;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
typedef struct S1091 T1091;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
typedef struct S1092 T1092;

/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
typedef struct S1093 T1093;

/* ET_IF_INSTRUCTION */
typedef struct S1094 T1094;

/* SPECIAL [detachable ET_IF_INSTRUCTION] */
typedef struct S1095 T1095;

/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
typedef struct S1096 T1096;

/* SPECIAL [detachable ET_INDEXING_LIST] */
typedef struct S1098 T1098;

/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
typedef struct S1099 T1099;

/* SPECIAL [detachable ET_INDEXING_ITEM] */
typedef struct S1101 T1101;

/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
typedef struct S1102 T1102;

/* SPECIAL [detachable ET_INDEXING_TERM] */
typedef struct S1104 T1104;

/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
typedef struct S1105 T1105;

/* SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
typedef struct S1107 T1107;

/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
typedef struct S1108 T1108;

/* SPECIAL [detachable ET_INDEXING_TERM_LIST] */
typedef struct S1110 T1110;

/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
typedef struct S1111 T1111;

/* ET_INSPECT_INSTRUCTION */
typedef struct S1112 T1112;

/* SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
typedef struct S1113 T1113;

/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
typedef struct S1114 T1114;

/* SPECIAL [detachable ET_INSTRUCTION] */
typedef struct S1116 T1116;

/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
typedef struct S1117 T1117;

/* SPECIAL [detachable ET_INVARIANTS] */
typedef struct S1118 T1118;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1119 T1119;

/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1120 T1120;

/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
typedef struct S1121 T1121;

/* SPECIAL [detachable ET_LIKE_TYPE] */
typedef struct S1123 T1123;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
typedef struct S1124 T1124;

/* ET_LOCAL_VARIABLE */
typedef struct S1125 T1125;

/* SPECIAL [detachable ET_LOCAL_VARIABLE] */
typedef struct S1126 T1126;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1127 T1127;

/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1129 T1129;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S1130 T1130;

/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S1131 T1131;

/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
typedef struct S1132 T1132;

/* ET_LOOP_INVARIANTS */
typedef struct S1133 T1133;

/* SPECIAL [detachable ET_LOOP_INVARIANTS] */
typedef struct S1134 T1134;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
typedef struct S1135 T1135;

/* ET_MANIFEST_ARRAY */
typedef struct S1136 T1136;

/* SPECIAL [detachable ET_MANIFEST_ARRAY] */
typedef struct S1137 T1137;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
typedef struct S1138 T1138;

/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
typedef struct S1140 T1140;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
typedef struct S1141 T1141;

/* ET_MANIFEST_STRING_LIST */
typedef struct S1142 T1142;

/* SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
typedef struct S1143 T1143;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
typedef struct S1144 T1144;

/* SPECIAL [detachable ET_MANIFEST_TUPLE] */
typedef struct S1145 T1145;

/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
typedef struct S1146 T1146;

/* SPECIAL [detachable ET_OBSOLETE] */
typedef struct S1148 T1148;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1149 T1149;

/* ET_PARENTHESIZED_EXPRESSION */
typedef struct S1150 T1150;

/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1151 T1151;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
typedef struct S1152 T1152;

/* SPECIAL [detachable ET_PARENT] */
typedef struct S1153 T1153;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
typedef struct S1154 T1154;

/* SPECIAL [detachable ET_PARENT_ITEM] */
typedef struct S1155 T1155;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
typedef struct S1156 T1156;

/* SPECIAL [detachable ET_PARENT_LIST] */
typedef struct S1157 T1157;

/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
typedef struct S1158 T1158;

/* SPECIAL [detachable ET_POSTCONDITIONS] */
typedef struct S1159 T1159;

/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S1160 T1160;

/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S1162 T1162;

/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
typedef struct S1163 T1163;

/* SPECIAL [detachable ET_RENAME_ITEM] */
typedef struct S1165 T1165;

/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
typedef struct S1166 T1166;

/* SPECIAL [detachable ET_RENAME_LIST] */
typedef struct S1167 T1167;

/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
typedef struct S1168 T1168;

/* ET_STATIC_CALL_EXPRESSION */
typedef struct S1169 T1169;

/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
typedef struct S1170 T1170;

/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
typedef struct S1171 T1171;

/* ET_STRIP_EXPRESSION */
typedef struct S1172 T1172;

/* SPECIAL [detachable ET_STRIP_EXPRESSION] */
typedef struct S1173 T1173;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
typedef struct S1174 T1174;

/* SPECIAL [detachable ET_TYPE_ITEM] */
typedef struct S1176 T1176;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
typedef struct S1177 T1177;

/* SPECIAL [detachable ET_TYPE_LIST] */
typedef struct S1179 T1179;

/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
typedef struct S1180 T1180;

/* ET_VARIANT */
typedef struct S1181 T1181;

/* SPECIAL [detachable ET_VARIANT] */
typedef struct S1182 T1182;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
typedef struct S1183 T1183;

/* ET_WHEN_PART */
typedef struct S1184 T1184;

/* SPECIAL [detachable ET_WHEN_PART] */
typedef struct S1185 T1185;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
typedef struct S1186 T1186;

/* ET_WHEN_PART_LIST */
typedef struct S1187 T1187;

/* SPECIAL [detachable ET_WHEN_PART_LIST] */
typedef struct S1188 T1188;

/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
typedef struct S1189 T1189;

/* SPECIAL [detachable ET_WRITABLE] */
typedef struct S1190 T1190;

/* ET_OBJECT_TEST_LIST */
typedef struct S1193 T1193;

/* ET_ACROSS_COMPONENT_LIST */
typedef struct S1194 T1194;

/* ET_C3_CHARACTER_CONSTANT */
typedef struct S1195 T1195;

/* ET_VERBATIM_STRING */
typedef struct S1196 T1196;

/* ET_SPECIAL_MANIFEST_STRING */
typedef struct S1197 T1197;

/* ET_REGULAR_INTEGER_CONSTANT */
typedef struct S1198 T1198;

/* ET_UNDERSCORED_INTEGER_CONSTANT */
typedef struct S1199 T1199;

/* ET_HEXADECIMAL_INTEGER_CONSTANT */
typedef struct S1200 T1200;

/* ET_OCTAL_INTEGER_CONSTANT */
typedef struct S1201 T1201;

/* ET_BINARY_INTEGER_CONSTANT */
typedef struct S1202 T1202;

/* ET_REGULAR_REAL_CONSTANT */
typedef struct S1203 T1203;

/* ET_UNDERSCORED_REAL_CONSTANT */
typedef struct S1204 T1204;

/* ET_TRUE_CONSTANT */
typedef struct S1206 T1206;

/* ET_FALSE_CONSTANT */
typedef struct S1207 T1207;

/* ET_C1_CHARACTER_CONSTANT */
typedef struct S1208 T1208;

/* ET_C2_CHARACTER_CONSTANT */
typedef struct S1209 T1209;

/* ET_CUSTOM_ATTRIBUTE */
typedef struct S1213 T1213;

/* ET_CONSTRAINED_FORMAL_PARAMETER */
typedef struct S1214 T1214;

/* ET_CONSTRAINT_NAMED_TYPE */
typedef struct S1215 T1215;

/* ET_ATTACHMENT_SEPARATE_KEYWORDS */
typedef struct S1216 T1216;

/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD */
typedef struct S1217 T1217;

/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
typedef struct S1218 T1218;

/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S1219 T1219;

/* ET_RENAME */
typedef struct S1220 T1220;

/* ET_ALL_EXPORT */
typedef struct S1221 T1221;

/* ET_CONVERT_FUNCTION */
typedef struct S1223 T1223;

/* ET_CONVERT_PROCEDURE */
typedef struct S1224 T1224;

/* ET_DO_FUNCTION */
typedef struct S1226 T1226;

/* ET_ONCE_FUNCTION */
typedef struct S1227 T1227;

/* ET_DEFERRED_FUNCTION */
typedef struct S1228 T1228;

/* ET_ONCE_PROCEDURE */
typedef struct S1230 T1230;

/* ET_EXTERNAL_PROCEDURE */
typedef struct S1231 T1231;

/* ET_PREFIX_NAME */
typedef struct S1232 T1232;

/* ET_PREFIX_FREE_NAME */
typedef struct S1233 T1233;

/* ET_INFIX_NAME */
typedef struct S1234 T1234;

/* ET_ALIASED_FEATURE_NAME */
typedef struct S1235 T1235;

/* ET_ALIAS_FREE_NAME */
typedef struct S1236 T1236;

/* ET_LABELED_ACTUAL_PARAMETER */
typedef struct S1239 T1239;

/* ET_LIKE_FEATURE */
typedef struct S1241 T1241;

/* ET_QUALIFIED_LIKE_BRACED_TYPE */
typedef struct S1242 T1242;

/* ET_QUALIFIED_LIKE_TYPE */
typedef struct S1243 T1243;

/* ET_ASSIGNER_INSTRUCTION */
typedef struct S1244 T1244;

/* ET_ASSIGNMENT */
typedef struct S1245 T1245;

/* ET_ASSIGNMENT_ATTEMPT */
typedef struct S1246 T1246;

/* ET_LOOP_INSTRUCTION */
typedef struct S1247 T1247;

/* ET_NULL_INSTRUCTION */
typedef struct S1248 T1248;

/* ET_BANG_INSTRUCTION */
typedef struct S1249 T1249;

/* ET_CREATE_INSTRUCTION */
typedef struct S1250 T1250;

/* ET_CHOICE_RANGE */
typedef struct S1251 T1251;

/* ET_PRECURSOR_INSTRUCTION */
typedef struct S1252 T1252;

/* ET_STATIC_CALL_INSTRUCTION */
typedef struct S1254 T1254;

/* ET_PRECURSOR_EXPRESSION */
typedef struct S1255 T1255;

/* ET_FEATURE_ADDRESS */
typedef struct S1256 T1256;

/* ET_CURRENT_ADDRESS */
typedef struct S1257 T1257;

/* ET_RESULT_ADDRESS */
typedef struct S1258 T1258;

/* ET_EXPRESSION_ADDRESS */
typedef struct S1259 T1259;

/* ET_INFIX_EXPRESSION */
typedef struct S1260 T1260;

/* ET_INFIX_AND_THEN_OPERATOR */
typedef struct S1261 T1261;

/* ET_INFIX_OR_ELSE_OPERATOR */
typedef struct S1262 T1262;

/* ET_MANIFEST_TYPE */
typedef struct S1263 T1263;

/* ET_PREFIX_EXPRESSION */
typedef struct S1264 T1264;

/* ET_OLD_EXPRESSION */
typedef struct S1265 T1265;

/* ET_OLD_OBJECT_TEST */
typedef struct S1266 T1266;

/* ET_ONCE_MANIFEST_STRING */
typedef struct S1267 T1267;

/* ET_DO_FUNCTION_INLINE_AGENT */
typedef struct S1268 T1268;

/* ET_ONCE_FUNCTION_INLINE_AGENT */
typedef struct S1269 T1269;

/* ET_EXTERNAL_FUNCTION_INLINE_AGENT */
typedef struct S1270 T1270;

/* ET_DO_PROCEDURE_INLINE_AGENT */
typedef struct S1271 T1271;

/* ET_ONCE_PROCEDURE_INLINE_AGENT */
typedef struct S1272 T1272;

/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
typedef struct S1273 T1273;

/* ET_AGENT_OPEN_TARGET */
typedef struct S1274 T1274;

/* ET_AGENT_TYPED_OPEN_ARGUMENT */
typedef struct S1275 T1275;

/* ET_TAGGED_ASSERTION */
typedef struct S1277 T1277;

/* ET_FILE_POSITION */
typedef struct S1278 T1278;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
typedef struct S1279 T1279;

/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
typedef struct S1280 T1280;

/* ET_PARENT_CHECKER1 */
typedef struct S1281 T1281;

/* ET_FORMAL_PARAMETER_CHECKER1 */
typedef struct S1282 T1282;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1283 T1283;

/* ET_FEATURE_NAME_TESTER */
typedef struct S1284 T1284;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1286 T1286;

/* ET_ALIAS_NAME_TESTER */
typedef struct S1287 T1287;

/* DS_ARRAYED_LIST [ET_CLIENT_LIST] */
typedef struct S1289 T1289;

/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
typedef struct S1290 T1290;

/* ET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1291 T1291;

/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1292 T1292;

/* ET_IDENTIFIER_TYPE_RESOLVER */
typedef struct S1293 T1293;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
typedef struct S1294 T1294;

/* ET_ANCHORED_TYPE_CHECKER */
typedef struct S1295 T1295;

/* ET_SIGNATURE_CHECKER */
typedef struct S1296 T1296;

/* ET_PARENT_CHECKER2 */
typedef struct S1297 T1297;

/* ET_FORMAL_PARAMETER_CHECKER2 */
typedef struct S1298 T1298;

/* ET_BUILTIN_FEATURE_CHECKER */
typedef struct S1299 T1299;

/* ET_PRECURSOR_CHECKER */
typedef struct S1300 T1300;

/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
typedef struct S1301 T1301;

/* DS_HASH_SET [ET_CLASS] */
typedef struct S1302 T1302;

/* ET_PARENT_CHECKER3 */
typedef struct S1303 T1303;

/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
typedef struct S1304 T1304;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
typedef struct S1305 T1305;

/* ET_PARENT_FEATURE */
typedef struct S1307 T1307;

/* ET_INHERITED_FEATURE */
typedef struct S1308 T1308;

/* DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
typedef struct S1309 T1309;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
typedef struct S1310 T1310;

/* SPECIAL [ET_DOTNET_ASSEMBLY] */
typedef struct S1311 T1311;

/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
typedef struct S1313 T1313;

/* ET_BRACED_TYPE_LIST */
typedef struct S1315 T1315;

/* DS_ARRAYED_LIST [ET_CLASS] */
typedef struct S1316 T1316;

/* DS_ARRAYED_LIST [ET_MASTER_CLASS] */
typedef struct S1317 T1317;

/* DS_HASH_SET_CURSOR [ET_UNIVERSE] */
typedef struct S1318 T1318;

/* SPECIAL [ET_UNIVERSE] */
typedef struct S1319 T1319;

/* KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
typedef struct S1321 T1321;

/* DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
typedef struct S1322 T1322;

/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
typedef struct S1324 T1324;

/* SPECIAL [ET_INTERNAL_UNIVERSE] */
typedef struct S1325 T1325;

/* ET_CLASS_TYPE_STATUS_CHECKER1 */
typedef struct S1326 T1326;

/* ET_CLASS_TYPE_STATUS_CHECKER2 */
typedef struct S1327 T1327;

/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
typedef struct S1328 T1328;

/* ET_CLASS_TYPE_STATUS_CHECKER3 */
typedef struct S1329 T1329;

/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
typedef struct S1330 T1330;

/* DS_ARRAYED_STACK [YY_BUFFER] */
typedef struct S1331 T1331;

/* UT_SYNTAX_ERROR */
typedef struct S1332 T1332;

/* UT_TOO_MANY_INCLUDES_ERROR */
typedef struct S1333 T1333;

/* ET_DYNAMIC_TARGET_LIST */
typedef struct S1335 T1335;

/* XM_NAMESPACE_RESOLVER_CONTEXT */
typedef struct S1336 T1336;

/* DS_LINKED_QUEUE [STRING_8] */
typedef struct S1338 T1338;

/* detachable KL_EQUALITY_TESTER [XM_NAMESPACE] */
typedef struct S1339 T1339;

/* DS_HASH_SET_CURSOR [XM_NAMESPACE] */
typedef struct S1340 T1340;

/* KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
typedef struct S1341 T1341;

/* SPECIAL [XM_NAMESPACE] */
typedef struct S1342 T1342;

/* XM_EIFFEL_CHARACTER_ENTITY */
typedef struct S1343 T1343;

/* detachable DS_BILINKABLE [XM_POSITION] */
typedef struct S1344 T1344;

/* DS_BILINKED_LIST_CURSOR [XM_POSITION] */
typedef struct S1345 T1345;

/* detachable DS_LINKABLE [XM_EIFFEL_SCANNER] */
typedef struct S1346 T1346;

/* SPECIAL [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1347 T1347;

/* detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S1350 T1350;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1351 T1351;

/* detachable KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
typedef struct S1352 T1352;

/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
typedef struct S1353 T1353;

/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1354 T1354;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1355 T1355;

/* detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1356 T1356;

/* DS_BILINKED_LIST_CURSOR [STRING_8] */
typedef struct S1357 T1357;

/* detachable DS_BILINKABLE [STRING_8] */
typedef struct S1358 T1358;

/* SPECIAL [ET_ECF_TARGET] */
typedef struct S1359 T1359;

/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
typedef struct S1360 T1360;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
typedef struct S1361 T1361;

/* SPECIAL [ET_ADAPTED_LIBRARY] */
typedef struct S1362 T1362;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
typedef struct S1363 T1363;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
typedef struct S1364 T1364;

/* DS_HASH_SET_CURSOR [ET_LIBRARY] */
typedef struct S1365 T1365;

/* KL_SPECIAL_ROUTINES [ET_LIBRARY] */
typedef struct S1366 T1366;

/* SPECIAL [ET_LIBRARY] */
typedef struct S1367 T1367;

/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1368 T1368;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1369 T1369;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1370 T1370;

/* SPECIAL [NATIVE_STRING] */
typedef struct S1371 T1371;

/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
typedef struct S1372 T1372;

/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1373 T1373;

/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1374 T1374;

/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1375 T1375;

/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
typedef struct S1377 T1377;

/* DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
typedef struct S1378 T1378;

/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
typedef struct S1379 T1379;

/* DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT] */
typedef struct S1380 T1380;

/* KL_SPECIAL_ROUTINES [NATURAL_8] */
typedef struct S1383 T1383;

/* DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
typedef struct S1384 T1384;

/* ET_XACE_INVALID_EXPRESSION_ERROR */
typedef struct S1386 T1386;

/* [attached] TYPE [STRING_8] */
#define T1388 EIF_TYPE

/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
typedef struct S1389 T1389;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
typedef struct S1390 T1390;

/* [attached] TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1391 T1391;

/* KL_AGENT_ROUTINES [ET_UNIVERSE] */
typedef struct S1392 T1392;

/* [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_UNIVERSE]] */
typedef struct S1393 T1393;

/* [attached] TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
typedef struct S1394 T1394;

/* [attached] TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_UNIVERSE]]] */
typedef struct S1395 T1395;

/* KL_AGENT_HASH_FUNCTION [STRING_8] */
typedef struct S1398 T1398;

/* [attached] TUPLE [STRING_8] */
typedef struct S1399 T1399;

/* [attached] FUNCTION [KL_STRING_ROUTINES, [attached] TUPLE [STRING_8], INTEGER_32] */
typedef struct S1400 T1400;

/* [attached] TUPLE [KL_STRING_ROUTINES] */
typedef struct S1401 T1401;

/* ET_ACTUAL_PARAMETER_SUBLIST */
typedef struct S1403 T1403;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
typedef struct S1404 T1404;

/* TYPED_POINTER [NATURAL_16] */
typedef struct S1405 T1405;
extern T0* GE_boxed1405(T1405 a1);
typedef struct Sb1405 Tb1405;

/* TYPED_POINTER [NATURAL_8] */
typedef struct S1406 T1406;
extern T0* GE_boxed1406(T1406 a1);
typedef struct Sb1406 Tb1406;

/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
typedef struct S1407 T1407;

/* XM_COMMENT */
typedef struct S1408 T1408;

/* XM_PROCESSING_INSTRUCTION */
typedef struct S1409 T1409;

/* XM_CHARACTER_DATA */
typedef struct S1410 T1410;

/* detachable DS_CELL [detachable ET_CLASS] */
typedef struct S1416 T1416;

/* [attached] TUPLE [detachable DS_CELL [detachable ET_CLASS]] */
typedef struct S1417 T1417;

/* [attached] TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
typedef struct S1418 T1418;

/* DS_ARRAYED_LIST [ET_CLUSTER] */
typedef struct S1419 T1419;

/* ET_CONSTRAINT_GENERIC_NAMED_TYPE */
typedef struct S1420 T1420;

/* ET_FORMAL_PARAMETER_TYPE */
typedef struct S1421 T1421;

/* ET_UNQUALIFIED_CALL_INSTRUCTION */
typedef struct S1422 T1422;

/* [attached] TUPLE [ET_EIFFEL_PARSER, DS_ARRAYED_LIST [STRING_8]] */
typedef struct S1424 T1424;

/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
typedef struct S1425 T1425;

/* ET_FEATURE_IDS */
typedef struct S1432 T1432;

/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
typedef struct S1433 T1433;

/* INTEGER_OVERFLOW_CHECKER */
typedef struct S1436 T1436;

/* SPECIAL [ARRAY [INTEGER_32]] */
typedef struct S1437 T1437;

/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
typedef struct S1438 T1438;

/* DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1439 T1439;

/* detachable DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1440 T1440;

/* DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
typedef struct S1441 T1441;

/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1442 T1442;

/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1443 T1443;

/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1444 T1444;

/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
typedef struct S1445 T1445;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1446 T1446;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1447 T1447;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1448 T1448;

/* DS_ARRAYED_LIST [ET_ECF_CONDITION] */
typedef struct S1449 T1449;

/* detachable DS_LINKABLE [XM_DOCUMENT_NODE] */
typedef struct S1450 T1450;

/* DS_LINKED_QUEUE [CHARACTER_8] */
typedef struct S1455 T1455;

/* UC_UTF16_ROUTINES */
typedef struct S1456 T1456;

/* SPECIAL [ET_ADAPTED_UNIVERSE] */
typedef struct S1457 T1457;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
typedef struct S1458 T1458;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
typedef struct S1459 T1459;

/* LX_DFA_WILDCARD */
typedef struct S1460 T1460;

/* DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
typedef struct S1461 T1461;

/* DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
typedef struct S1463 T1463;

/* detachable DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
typedef struct S1464 T1464;

/* SPECIAL [ET_XACE_CLUSTER] */
typedef struct S1465 T1465;

/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
typedef struct S1466 T1466;

/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
typedef struct S1467 T1467;

/* SPECIAL [ET_NAMED_CLASS] */
typedef struct S1468 T1468;

/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
typedef struct S1470 T1470;

/* DS_HASH_SET_CURSOR [ET_PROCEDURE] */
typedef struct S1472 T1472;

/* DS_HASH_SET_CURSOR [ET_QUERY] */
typedef struct S1473 T1473;

/* SPECIAL [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1474 T1474;

/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1475 T1475;

/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S1476 T1476;

/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S1477 T1477;

/* SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S1478 T1478;

/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
typedef struct S1479 T1479;

/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
typedef struct S1480 T1480;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1481 T1481;

/* DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
typedef struct S1482 T1482;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
typedef struct S1485 T1485;

/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
typedef struct S1486 T1486;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1487 T1487;

/* SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S1488 T1488;

/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
typedef struct S1491 T1491;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1493 T1493;

/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
typedef struct S1494 T1494;

/* SPECIAL [ET_CLIENT_LIST] */
typedef struct S1495 T1495;

/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
typedef struct S1496 T1496;

/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
typedef struct S1498 T1498;

/* KL_SPECIAL_ROUTINES [ET_CLIENT] */
typedef struct S1499 T1499;

/* SPECIAL [ET_CLIENT] */
typedef struct S1500 T1500;

/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME] */
typedef struct S1501 T1501;

/* ET_CALL_NAME_TESTER */
typedef struct S1502 T1502;

/* DS_HASH_SET [ET_CALL_NAME] */
typedef struct S1504 T1504;

/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME] */
typedef struct S1505 T1505;

/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME] */
typedef struct S1506 T1506;

/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1507 T1507;

/* ET_REDECLARED_FEATURE */
typedef struct S1508 T1508;

/* ET_REPLICATED_FEATURE */
typedef struct S1511 T1511;

/* DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
typedef struct S1512 T1512;

/* DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
typedef struct S1513 T1513;

/* ET_DOTNET_SIGNATURE_TESTER */
typedef struct S1514 T1514;

/* DS_HASH_SET [ET_DOTNET_FEATURE] */
typedef struct S1515 T1515;

/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1517 T1517;

/* DS_LINKED_LIST [ET_DOTNET_FEATURE] */
typedef struct S1519 T1519;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
typedef struct S1520 T1520;

/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1521 T1521;

/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE] */
typedef struct S1522 T1522;

/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
typedef struct S1523 T1523;

/* DS_HASH_SET_CURSOR [ET_CLASS] */
typedef struct S1524 T1524;

/* [attached] TYPE [ET_CLASS] */
#define T1525 EIF_TYPE

/* DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
typedef struct S1526 T1526;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
typedef struct S1527 T1527;

/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
typedef struct S1528 T1528;

/* SPECIAL [YY_BUFFER] */
typedef struct S1530 T1530;

/* KL_SPECIAL_ROUTINES [YY_BUFFER] */
typedef struct S1531 T1531;

/* SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1532 T1532;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
typedef struct S1533 T1533;

/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1535 T1535;

/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1536 T1536;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1537 T1537;

/* attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1538 T1538;

/* [attached] TUPLE [ET_GROUP] */
typedef struct S1539 T1539;

/* [attached] TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
typedef struct S1540 T1540;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLASS]], [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_CLASS]]] */
typedef struct S1541 T1541;

/* [attached] TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1542 T1542;

/* ET_CLUSTER_ERROR */
typedef struct S1543 T1543;

/* ET_SYNTAX_ERROR */
typedef struct S1544 T1544;

/* AP_OPTION_COMPARATOR */
typedef struct S1545 T1545;

/* DS_QUICK_SORTER [AP_OPTION] */
typedef struct S1546 T1546;

/* [attached] TUPLE [ET_XACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1549 T1549;

/* [attached] TUPLE [ET_LACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1550 T1550;

/* ET_FORMAL_COMMA_ARGUMENT */
typedef struct S1556 T1556;

/* ET_LOCAL_COMMA_VARIABLE */
typedef struct S1557 T1557;

/* ET_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S1558 T1558;

/* ET_KEYWORD_EXPRESSION */
typedef struct S1560 T1560;

/* detachable DS_LINKABLE [XM_ELEMENT_NODE] */
typedef struct S1562 T1562;

/* DS_QUICK_SORTER [ET_QUERY] */
typedef struct S1564 T1564;

/* DS_QUICK_SORTER [ET_PROCEDURE] */
typedef struct S1565 T1565;

/* [attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1570 T1570;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
typedef struct S1571 T1571;

/* [attached] TUPLE [ET_ECF_INTERNAL_UNIVERSE, ET_ECF_STATE] */
typedef struct S1572 T1572;

/* [attached] TUPLE [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1574 T1574;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
typedef struct S1575 T1575;

/* [attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1577 T1577;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
typedef struct S1578 T1578;

/* detachable DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S1581 T1581;

/* [attached] TUPLE [LX_WILDCARD] */
typedef struct S1582 T1582;

/* [attached] PREDICATE [[attached] NONE, [attached] TUPLE [LX_WILDCARD]] */
typedef struct S1583 T1583;

/* [attached] TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
typedef struct S1584 T1584;

/* [attached] PREDICATE [[attached] NONE, [attached] TUPLE [STRING_8]] */
typedef struct S1586 T1586;

/* [attached] TUPLE [KL_STRING_ROUTINES, STRING_8] */
typedef struct S1587 T1587;

/* ET_AGENT_IMPLICIT_CURRENT_TARGET */
typedef struct S1591 T1591;

/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
typedef struct S1601 T1601;

/* [attached] TYPE [ET_FEATURE] */
#define T1602 EIF_TYPE

/* SPECIAL [ET_CLUSTER] */
typedef struct S1604 T1604;

/* KL_SPECIAL_ROUTINES [ET_CLUSTER] */
typedef struct S1605 T1605;

/* DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
typedef struct S1606 T1606;

/* SPECIAL [NATURAL_64] */
typedef struct S1607 T1607;

/* SPECIAL [ET_ECF_CLUSTER] */
typedef struct S1608 T1608;

/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
typedef struct S1609 T1609;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
typedef struct S1610 T1610;

/* SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1611 T1611;

/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1612 T1612;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1613 T1613;

/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1614 T1614;

/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1615 T1615;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1616 T1616;

/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1617 T1617;

/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1618 T1618;

/* DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1619 T1619;

/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
typedef struct S1620 T1620;

/* SPECIAL [ET_ECF_FILE_RULE] */
typedef struct S1621 T1621;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
typedef struct S1622 T1622;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1623 T1623;

/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1624 T1624;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1625 T1625;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1626 T1626;

/* SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1627 T1627;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1628 T1628;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1629 T1629;

/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1630 T1630;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1631 T1631;

/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION] */
typedef struct S1632 T1632;

/* SPECIAL [ET_ECF_CONDITION] */
typedef struct S1633 T1633;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION] */
typedef struct S1634 T1634;

/* detachable DS_LINKABLE [CHARACTER_8] */
typedef struct S1635 T1635;

/* LX_WILDCARD_PARSER */
typedef struct S1636 T1636;

/* LX_DESCRIPTION */
typedef struct S1637 T1637;

/* LX_FULL_DFA */
typedef struct S1638 T1638;

/* SPECIAL [LX_WILDCARD] */
typedef struct S1640 T1640;

/* KL_SPECIAL_ROUTINES [LX_WILDCARD] */
typedef struct S1643 T1643;

/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
typedef struct S1644 T1644;

/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
typedef struct S1645 T1645;

/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1646 T1646;

/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
typedef struct S1647 T1647;

/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME] */
typedef struct S1648 T1648;

/* SPECIAL [ET_RENAME] */
typedef struct S1649 T1649;

/* [attached] TYPE [ET_RENAME] */
#define T1652 EIF_TYPE

/* [attached] TYPE [ET_CALL_NAME] */
#define T1653 EIF_TYPE

/* SPECIAL [ET_CALL_NAME] */
typedef struct S1654 T1654;

/* KL_SPECIAL_ROUTINES [ET_RENAME] */
typedef struct S1655 T1655;

/* KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
typedef struct S1656 T1656;

/* DS_HASH_SET_CURSOR [ET_CALL_NAME] */
typedef struct S1657 T1657;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME] */
typedef struct S1658 T1658;

/* detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME] */
typedef struct S1661 T1661;

/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1662 T1662;

/* SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1663 T1663;

/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
typedef struct S1665 T1665;

/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
typedef struct S1666 T1666;

/* detachable DS_LINKABLE [ET_ADAPTED_FEATURE] */
typedef struct S1667 T1667;

/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
typedef struct S1668 T1668;

/* SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1669 T1669;

/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1670 T1670;

/* SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1671 T1671;

/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1672 T1672;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
typedef struct S1673 T1673;

/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1674 T1674;

/* detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1677 T1677;

/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1678 T1678;

/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1679 T1679;

/* detachable DS_LINKABLE [ET_DOTNET_FEATURE] */
typedef struct S1680 T1680;

/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
typedef struct S1681 T1681;

/* detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1682 T1682;

/* ET_DOTNET_ASSEMBLY_ERROR */
typedef struct S1683 T1683;

/* ET_STANDARD_ONCE_KEYS */
typedef struct S1686 T1686;

/* KL_CHARACTER_ROUTINES */
typedef struct S1689 T1689;

/* [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
typedef struct S1690 T1690;

/* [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_IDENTIFIER, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S1691 T1691;

/* SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S1696 T1696;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
typedef struct S1697 T1697;

/* ET_SEEDED_QUERY_COMPARATOR */
typedef struct S1701 T1701;

/* ET_SEEDED_PROCEDURE_COMPARATOR */
typedef struct S1704 T1704;

/* [attached] TUPLE [ET_CLIENT_LIST] */
typedef struct S1708 T1708;

/* ET_INFIX_CAST_EXPRESSION */
typedef struct S1716 T1716;

/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
typedef struct S1719 T1719;

/* SPECIAL [ET_LIKE_FEATURE] */
typedef struct S1724 T1724;

/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
typedef struct S1725 T1725;

/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
typedef struct S1726 T1726;

/* DS_ARRAYED_LIST [LX_RULE] */
typedef struct S1727 T1727;

/* LX_START_CONDITIONS */
typedef struct S1728 T1728;

/* LX_ACTION_FACTORY */
typedef struct S1729 T1729;

/* LX_SYMBOL_CLASS */
typedef struct S1730 T1730;

/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8] */
typedef struct S1731 T1731;

/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
typedef struct S1732 T1732;

/* SPECIAL [LX_SYMBOL_CLASS] */
typedef struct S1733 T1733;

/* KL_SPECIAL_ROUTINES [LX_NFA] */
typedef struct S1734 T1734;

/* LX_NFA */
typedef struct S1735 T1735;

/* SPECIAL [LX_NFA] */
typedef struct S1736 T1736;

/* LX_EQUIVALENCE_CLASSES */
typedef struct S1737 T1737;

/* LX_RULE */
typedef struct S1738 T1738;

/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8] */
typedef struct S1739 T1739;

/* LX_UNRECOGNIZED_RULE_ERROR */
typedef struct S1740 T1740;

/* LX_MISSING_QUOTE_ERROR */
typedef struct S1741 T1741;

/* LX_BAD_CHARACTER_CLASS_ERROR */
typedef struct S1742 T1742;

/* LX_BAD_CHARACTER_ERROR */
typedef struct S1743 T1743;

/* LX_FULL_AND_META_ERROR */
typedef struct S1744 T1744;

/* LX_FULL_AND_REJECT_ERROR */
typedef struct S1745 T1745;

/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
typedef struct S1746 T1746;

/* LX_CHARACTER_OUT_OF_RANGE_ERROR */
typedef struct S1747 T1747;

/* SPECIAL [LX_RULE] */
typedef struct S1748 T1748;

/* ARRAY [LX_RULE] */
typedef struct S1749 T1749;

/* LX_DFA_STATE */
typedef struct S1750 T1750;

/* DS_ARRAYED_LIST [LX_NFA_STATE] */
typedef struct S1751 T1751;

/* DS_ARRAYED_LIST [LX_DFA_STATE] */
typedef struct S1752 T1752;

/* LX_SYMBOL_PARTITIONS */
typedef struct S1753 T1753;

/* KL_ARRAY_ROUTINES [LX_RULE] */
typedef struct S1754 T1754;

/* LX_START_CONDITION */
typedef struct S1755 T1755;

/* LX_TRANSITION_TABLE [LX_DFA_STATE] */
typedef struct S1756 T1756;

/* DS_ARRAYED_LIST [LX_NFA] */
typedef struct S1757 T1757;

/* DS_HASH_TABLE [LX_NFA, INTEGER_32] */
typedef struct S1758 T1758;

/* LX_NFA_STATE */
typedef struct S1759 T1759;

/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1761 T1761;

/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
typedef struct S1763 T1763;

/* ET_UNIVERSE_ERROR */
typedef struct S1764 T1764;

/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1766 T1766;

/* TYPE [DEVELOPER_EXCEPTION] */
#define T1767 EIF_TYPE

/* [attached] TUPLE [ET_ECF_LIBRARY] */
typedef struct S1769 T1769;

/* ET_PARENTHESIS_SYMBOL */
typedef struct S1784 T1784;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
typedef struct S1789 T1789;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
typedef struct S1790 T1790;

/* [attached] TYPE [ET_NESTED_TYPE_CONTEXT] */
#define T1792 EIF_TYPE

/* [attached] TYPE [ET_ACROSS_COMPONENT] */
#define T1793 EIF_TYPE

/* [attached] TUPLE [ET_ECF_CLUSTER] */
typedef struct S1797 T1797;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_CLUSTER]] */
typedef struct S1798 T1798;

/* [attached] TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
typedef struct S1799 T1799;

/* [attached] TUPLE [ET_ECF_FILE_RULE] */
typedef struct S1800 T1800;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_FILE_RULE]] */
typedef struct S1801 T1801;

/* [attached] TUPLE [ET_ECF_FILE_RULES] */
typedef struct S1802 T1802;

/* [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_ECF_FILE_RULE]] */
typedef struct S1803 T1803;

/* [attached] TUPLE [ET_ECF_STATE] */
typedef struct S1804 T1804;

/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
typedef struct S1808 T1808;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
typedef struct S1811 T1811;

/* KL_SPECIAL_ROUTINES [LX_RULE] */
typedef struct S1813 T1813;

/* DS_ARRAYED_LIST_CURSOR [LX_RULE] */
typedef struct S1814 T1814;

/* KL_ARRAY_ROUTINES [STRING_8] */
typedef struct S1815 T1815;

/* SPECIAL [LX_START_CONDITION] */
typedef struct S1816 T1816;

/* KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
typedef struct S1817 T1817;

/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
typedef struct S1818 T1818;

/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
typedef struct S1821 T1821;

/* LX_EPSILON_TRANSITION [LX_NFA_STATE] */
typedef struct S1823 T1823;

/* LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
typedef struct S1825 T1825;

/* DS_BILINKABLE [INTEGER_32] */
typedef struct S1826 T1826;

/* SPECIAL [DS_BILINKABLE [INTEGER_32]] */
typedef struct S1827 T1827;

/* ARRAY [DS_BILINKABLE [INTEGER_32]] */
typedef struct S1828 T1828;

/* LX_ACTION */
typedef struct S1830 T1830;

/* DS_BUBBLE_SORTER [LX_NFA_STATE] */
typedef struct S1831 T1831;

/* DS_BUBBLE_SORTER [LX_RULE] */
typedef struct S1833 T1833;

/* SPECIAL [LX_NFA_STATE] */
typedef struct S1835 T1835;

/* KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
typedef struct S1837 T1837;

/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
typedef struct S1838 T1838;

/* SPECIAL [LX_DFA_STATE] */
typedef struct S1840 T1840;

/* KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
typedef struct S1841 T1841;

/* DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
typedef struct S1842 T1842;

/* KL_ARRAY [LX_RULE] */
typedef struct S1843 T1843;

/* ARRAY [detachable LX_DFA_STATE] */
typedef struct S1844 T1844;

/* KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
typedef struct S1845 T1845;

/* DS_ARRAYED_LIST_CURSOR [LX_NFA] */
typedef struct S1846 T1846;

/* DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
typedef struct S1848 T1848;

/* ET_DYNAMIC_EQUALITY_EXPRESSION */
typedef struct S1851 T1851;

/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
typedef struct S1852 T1852;

/* ET_CONVERT_BUILTIN_EXPRESSION */
typedef struct S1853 T1853;

/* ET_CONVERT_FROM_EXPRESSION */
typedef struct S1854 T1854;

/* ET_CONVERT_TO_EXPRESSION */
typedef struct S1855 T1855;

/* [attached] TYPE [BOOLEAN] */
#define T1859 EIF_TYPE

/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
typedef struct S1860 T1860;

/* detachable DS_LINKABLE [ET_PARENT_FEATURE] */
typedef struct S1863 T1863;

/* DS_SHELL_SORTER [INTEGER_32] */
typedef struct S1865 T1865;

/* KL_COMPARABLE_COMPARATOR [LX_RULE] */
typedef struct S1866 T1866;

/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
typedef struct S1869 T1869;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1872 T1872;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1873 T1873;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1874 T1874;

/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1875 T1875;

/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1876 T1876;

/* KL_ARRAY [STRING_8] */
typedef struct S1877 T1877;

/* [attached] TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1878 T1878;

/* [attached] TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1879 T1879;

/* [attached] TUPLE [ET_LACE_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1880 T1880;

/* [attached] TUPLE [ET_LACE_DOTNET_GAC_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1881 T1881;

/* [attached] TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1882 T1882;

/* [attached] TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1883 T1883;

/* [attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1884 T1884;

/* [attached] PREDICATE [[attached] NONE, [attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
typedef struct S1885 T1885;

/* ET_AST_NULL_LEAF */
typedef struct S1888 T1888;

/* Struct for boxed version of type BOOLEAN */
struct Sb1 {
	int id;
	T1 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_8 */
struct Sb2 {
	int id;
	T2 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_32 */
struct Sb3 {
	int id;
	T3 z1; /* item */
};

/* Struct for boxed version of type INTEGER_8 */
struct Sb4 {
	int id;
	T4 z1; /* item */
};

/* Struct for boxed version of type INTEGER_16 */
struct Sb5 {
	int id;
	T5 z1; /* item */
};

/* Struct for boxed version of type INTEGER_32 */
struct Sb6 {
	int id;
	T6 z1; /* item */
};

/* Struct for boxed version of type INTEGER_64 */
struct Sb7 {
	int id;
	T7 z1; /* item */
};

/* Struct for boxed version of type NATURAL_8 */
struct Sb8 {
	int id;
	T8 z1; /* item */
};

/* Struct for boxed version of type NATURAL_16 */
struct Sb9 {
	int id;
	T9 z1; /* item */
};

/* Struct for boxed version of type NATURAL_32 */
struct Sb10 {
	int id;
	T10 z1; /* item */
};

/* Struct for boxed version of type NATURAL_64 */
struct Sb11 {
	int id;
	T11 z1; /* item */
};

/* Struct for boxed version of type REAL_32 */
struct Sb12 {
	int id;
	T12 z1; /* item */
};

/* Struct for boxed version of type REAL_64 */
struct Sb13 {
	int id;
	T13 z1; /* item */
};

/* Struct for boxed version of type POINTER */
struct Sb14 {
	int id;
	T14 z1; /* item */
};

/* Struct for type UTF_CONVERTER */
struct S534 {
	char dummy;
};

/* Struct for boxed version of type UTF_CONVERTER */
struct Sb534 {
	int id;
	T534 z1; /* item */
};

/* Struct for type TYPED_POINTER [NATURAL_8] */
struct S1406 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [NATURAL_8] */
struct Sb1406 {
	int id;
	T1406 z1; /* item */
};

/* Struct for type TYPED_POINTER [NATURAL_16] */
struct S1405 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [NATURAL_16] */
struct Sb1405 {
	int id;
	T1405 z1; /* item */
};

/* Struct for type TYPED_POINTER [ANY] */
struct S716 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [ANY] */
struct Sb716 {
	int id;
	T716 z1; /* item */
};

/* Struct for type TYPED_POINTER [SPECIAL [NATURAL_8]] */
struct S542 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [SPECIAL [NATURAL_8]] */
struct Sb542 {
	int id;
	T542 z1; /* item */
};

/* Struct for type SPECIAL [CHARACTER_8] */
struct S15 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T2 z2[1]; /* item */
};

/* Struct for type SPECIAL [CHARACTER_32] */
struct S16 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T3 z2[1]; /* item */
};

/* Struct for type STRING_8 */
struct S17 {
	int id;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
};

/* Struct for type STRING_32 */
struct S18 {
	int id;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
};

/* Struct for type ISE_EXCEPTION_MANAGER */
struct S19 {
	int id;
};

/* Struct for type GEC */
struct S22 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* ace_filename */
	T0* a3; /* last_system */
	T0* a4; /* finalize_flag */
	T0* a5; /* gelint_flag */
	T0* a6; /* catcall_option */
	T0* a7; /* qat_option */
	T0* a8; /* c_compile_option */
	T0* a9; /* split_option */
	T0* a10; /* split_size_option */
	T0* a11; /* new_instance_types_option */
	T0* a12; /* gc_option */
	T0* a13; /* silent_flag */
	T0* a14; /* verbose_flag */
	T0* a15; /* version_flag */
	T6 a16; /* split_size */
	T1 a17; /* ecf_gelint_option */
};

/* Struct for type HASH_TABLE [INTEGER_32, INTEGER_32] */
struct S23 {
	int id;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T0* a3; /* keys */
	T0* a4; /* deleted_marks */
	T0* a5; /* indexes_map */
	T6 a6; /* iteration_position */
	T6 a7; /* count */
	T6 a8; /* deleted_item_position */
	T6 a9; /* control */
	T6 a10; /* found_item */
	T1 a11; /* has_default */
	T6 a12; /* item_position */
	T6 a13; /* ht_lowest_deleted_position */
	T6 a14; /* ht_deleted_item */
	T6 a15; /* ht_deleted_key */
	T1 a16; /* object_comparison */
};

/* Struct for type CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
struct S24 {
	int id;
	T0* a1; /* item */
};

/* Struct for type CELL [detachable EXCEPTION] */
struct S25 {
	int id;
	T0* a1; /* item */
};

/* Struct for type CELL [NO_MORE_MEMORY] */
struct S26 {
	int id;
	T0* a1; /* item */
};

/* Struct for type [attached] TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
struct S27 {
	int id;
	T6 z1;
	T6 z2;
	T6 z3;
	T0* z4;
	T0* z5;
	T0* z6;
	T0* z7;
	T0* z8;
	T0* z9;
	T6 z10;
	T1 z11;
};

/* Struct for type KL_TEXT_INPUT_FILE */
struct S29 {
	int id;
	T1 a1; /* end_of_file */
	T0* a2; /* last_string */
	T6 a3; /* mode */
	T0* a4; /* name */
	T0* a5; /* character_buffer */
	T2 a6; /* last_character */
	T14 a7; /* file_pointer */
	T1 a8; /* descriptor_available */
	T0* a9; /* internal_name */
	T0* a10; /* internal_detachable_name_pointer */
};

/* Struct for type KL_ARGUMENTS */
struct S30 {
	int id;
	T0* a1; /* program_name */
};

/* Struct for type ET_ISE_VARIABLES */
struct S31 {
	int id;
};

/* Struct for type UT_ERROR_HANDLER */
struct S32 {
	int id;
	T0* a1; /* info_file */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
};

/* Struct for type ET_SYSTEM */
struct S33 {
	int id;
	T1 a1; /* attachment_type_conformance_mode */
	T0* a2; /* current_system */
	T0* a3; /* tuple_type */
	T0* a4; /* master_classes */
	T0* a5; /* error_handler */
	T0* a6; /* ast_factory */
	T0* a7; /* external_include_pathnames */
	T0* a8; /* external_object_pathnames */
	T0* a9; /* external_library_pathnames */
	T1 a10; /* console_application_mode */
	T1 a11; /* alias_transition_mode */
	T1 a12; /* unknown_builtin_reported */
	T1 a13; /* qualified_anchored_types_enabled */
	T1 a14; /* qualified_anchored_types_cycle_detection_enabled */
	T0* a15; /* null_processor */
	T0* a16; /* eiffel_preparser */
	T0* a17; /* master_class_checker */
	T0* a18; /* eiffel_parser */
	T0* a19; /* provider_checker */
	T0* a20; /* ancestor_builder */
	T0* a21; /* feature_flattener */
	T0* a22; /* interface_checker */
	T0* a23; /* implementation_checker */
	T0* a24; /* flat_implementation_checker */
	T1 a25; /* scoop_mode */
	T0* a26; /* universe */
	T0* a27; /* name */
	T0* a28; /* libraries */
	T0* a29; /* clusters */
	T0* a30; /* dotnet_assemblies */
	T1 a31; /* preparse_shallow_mode */
	T1 a32; /* preparse_single_mode */
	T1 a33; /* preparse_multiple_mode */
	T0* a34; /* system_name */
	T0* a35; /* any_type */
	T0* a36; /* detachable_any_type */
	T0* a37; /* any_parent */
	T0* a38; /* any_parents */
	T0* a39; /* any_clients */
	T0* a40; /* detachable_tuple_type */
	T0* a41; /* tuple_like_current_type */
	T0* a42; /* unfolded_empty_tuple_actual_parameters */
	T0* a43; /* array_any_type */
	T0* a44; /* array_detachable_any_type */
	T0* a45; /* array_like_current_type */
	T0* a46; /* boolean_type */
	T0* a47; /* character_type */
	T0* a48; /* character_8_type */
	T0* a49; /* character_8_convert_feature */
	T0* a50; /* character_32_type */
	T0* a51; /* character_32_convert_feature */
	T0* a52; /* double_type */
	T0* a53; /* exception_type */
	T0* a54; /* detachable_exception_type */
	T0* a55; /* exception_manager_type */
	T0* a56; /* function_type */
	T0* a57; /* integer_type */
	T0* a58; /* integer_8_type */
	T0* a59; /* integer_8_convert_feature */
	T0* a60; /* integer_16_type */
	T0* a61; /* integer_16_convert_feature */
	T0* a62; /* integer_32_type */
	T0* a63; /* integer_32_convert_feature */
	T0* a64; /* integer_64_type */
	T0* a65; /* integer_64_convert_feature */
	T0* a66; /* ise_exception_manager_type */
	T0* a67; /* iterable_detachable_any_type */
	T0* a68; /* natural_type */
	T0* a69; /* natural_8_type */
	T0* a70; /* natural_8_convert_feature */
	T0* a71; /* natural_16_type */
	T0* a72; /* natural_16_convert_feature */
	T0* a73; /* natural_32_type */
	T0* a74; /* natural_32_convert_feature */
	T0* a75; /* natural_64_type */
	T0* a76; /* natural_64_convert_feature */
	T0* a77; /* none_type */
	T0* a78; /* detachable_none_type */
	T0* a79; /* pointer_type */
	T0* a80; /* predicate_like_current_type */
	T0* a81; /* procedure_like_current_type */
	T0* a82; /* real_type */
	T0* a83; /* real_32_type */
	T0* a84; /* real_32_convert_feature */
	T0* a85; /* real_64_type */
	T0* a86; /* real_64_convert_feature */
	T0* a87; /* routine_type */
	T0* a88; /* special_any_type */
	T0* a89; /* special_detachable_any_type */
	T0* a90; /* string_type */
	T0* a91; /* string_8_type */
	T0* a92; /* string_8_convert_feature */
	T0* a93; /* string_32_type */
	T0* a94; /* string_32_convert_feature */
	T0* a95; /* system_object_type */
	T0* a96; /* system_object_parents */
	T0* a97; /* system_string_type */
	T0* a98; /* type_any_type */
	T0* a99; /* type_type_any_type */
	T0* a100; /* type_detachable_any_type */
	T0* a101; /* type_detachable_like_current_type */
	T0* a102; /* detachable_type_exception_type */
	T0* a103; /* type_detachable_exception_type */
	T0* a104; /* detachable_type_detachable_any_type */
	T0* a105; /* type_like_current_type */
	T0* a106; /* typed_pointer_any_type */
	T0* a107; /* typed_pointer_like_current_type */
	T0* a108; /* wide_character_type */
	T1 a109; /* is_read_only */
	T1 a110; /* use_attribute_keyword */
	T1 a111; /* use_note_keyword */
	T1 a112; /* use_reference_keyword */
	T1 a113; /* use_attached_keyword */
	T1 a114; /* use_detachable_keyword */
	T6 a115; /* registered_class_count */
	T0* a116; /* implicit_attachment_type_mark */
	T1 a117; /* obsolete_routine_type_mode */
	T0* a118; /* ise_version */
	T1 a119; /* providers_enabled */
	T1 a120; /* preparse_readonly_mode */
	T1 a121; /* preparse_override_mode */
	T1 a122; /* cluster_dependence_enabled */
	T1 a123; /* use_cluster_dependence_pathnames */
	T1 a124; /* is_dotnet */
	T0* a125; /* internal_dotnet_assembly_consumer */
	T6 a126; /* registered_feature_count */
	T6 a127; /* registered_inline_constant_count */
	T6 a128; /* default_create_seed */
	T6 a129; /* copy_seed */
	T6 a130; /* is_equal_seed */
	T6 a131; /* routine_call_seed */
	T6 a132; /* function_item_seed */
	T6 a133; /* dispose_seed */
	T6 a134; /* iterable_new_cursor_seed */
	T6 a135; /* iteration_cursor_after_seed */
	T6 a136; /* iteration_cursor_forth_seed */
	T1 a137; /* target_type_attachment_mode */
};

/* Struct for type KL_STRING_ROUTINES */
struct S34 {
	int id;
};

/* Struct for type ET_ERROR_HANDLER */
struct S36 {
	int id;
	T1 a1; /* has_error */
	T1 a2; /* benchmark_shown */
	T0* a3; /* info_file */
	T0* a4; /* error_file */
	T0* a5; /* warning_file */
	T1 a6; /* is_ise */
	T1 a7; /* is_ge */
	T1 a8; /* has_eiffel_error */
	T1 a9; /* has_internal_error */
	T1 a10; /* is_verbose */
	T1 a11; /* is_pedantic */
};

/* Struct for type KL_EXCEPTIONS */
struct S37 {
	int id;
};

/* Struct for type AP_PARSER */
struct S38 {
	int id;
	T0* a1; /* options */
	T0* a2; /* alternative_options_lists */
	T0* a3; /* parameters */
	T0* a4; /* help_option */
	T0* a5; /* application_description */
	T0* a6; /* parameters_description */
	T0* a7; /* error_handler */
	T0* a8; /* current_options */
	T1 a9; /* is_first_option */
	T0* a10; /* last_option_parameter */
};

/* Struct for type AP_ALTERNATIVE_OPTIONS_LIST */
struct S39 {
	int id;
	T0* a1; /* introduction_option */
	T0* a2; /* parameters_description */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type AP_ERROR */
struct S40 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* default_template */
	T0* a3; /* code */
};

/* Struct for type AP_FLAG */
struct S41 {
	int id;
	T6 a1; /* occurrences */
	T0* a2; /* description */
	T0* a3; /* long_form */
	T2 a4; /* short_form */
	T1 a5; /* has_short_form */
	T1 a6; /* is_mandatory */
	T6 a7; /* maximum_occurrences */
	T1 a8; /* is_hidden */
};

/* Struct for type AP_ENUMERATION_OPTION */
struct S43 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* possible_values */
	T0* a5; /* parameter_description */
	T1 a6; /* needs_parameter */
	T0* a7; /* long_form */
	T1 a8; /* is_mandatory */
	T6 a9; /* maximum_occurrences */
	T1 a10; /* has_short_form */
	T2 a11; /* short_form */
	T1 a12; /* is_hidden */
};

/* Struct for type AP_BOOLEAN_OPTION */
struct S44 {
	int id;
	T0* a1; /* parameters */
	T1 a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
	T1 a9; /* has_short_form */
	T2 a10; /* short_form */
	T1 a11; /* is_hidden */
};

/* Struct for type AP_INTEGER_OPTION */
struct S45 {
	int id;
	T0* a1; /* parameters */
	T6 a2; /* default_parameter */
	T0* a3; /* long_form */
	T2 a4; /* short_form */
	T0* a5; /* description */
	T0* a6; /* parameter_description */
	T1 a7; /* needs_parameter */
	T1 a8; /* is_mandatory */
	T6 a9; /* maximum_occurrences */
	T1 a10; /* has_short_form */
	T1 a11; /* is_hidden */
};

/* Struct for type AP_STRING_OPTION */
struct S46 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
	T1 a9; /* has_short_form */
	T2 a10; /* short_form */
	T1 a11; /* is_hidden */
};

/* Struct for type AP_DISPLAY_HELP_FLAG */
struct S50 {
	int id;
	T0* a1; /* description */
	T2 a2; /* short_form */
	T1 a3; /* has_short_form */
	T0* a4; /* long_form */
	T6 a5; /* occurrences */
	T1 a6; /* is_hidden */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
};

/* Struct for type ET_XACE_SYSTEM_PARSER */
struct S52 {
	int id;
	T0* a1; /* last_system */
	T0* a2; /* ast_factory */
	T0* a3; /* xml_parser */
	T0* a4; /* tree_pipe */
	T0* a5; /* xml_validator */
	T0* a6; /* xml_preprocessor */
	T0* a7; /* parsed_libraries */
	T0* a8; /* error_handler */
	T0* a9; /* library_parser */
	T0* a10; /* eiffel_ast_factory */
	T0* a11; /* eiffel_error_handler */
	T1 a12; /* is_shallow */
	T1 a13; /* is_ve */
};

/* Struct for type ET_XACE_DEFAULT_ERROR_HANDLER */
struct S53 {
	int id;
	T6 a1; /* error_count */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type DS_HASH_TABLE [STRING_8, STRING_8] */
struct S54 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T6 a3; /* position */
	T6 a4; /* last_position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
	T6 a9; /* found_position */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* special_item_routines */
	T0* a13; /* item_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type ST_SPLITTER */
struct S55 {
	int id;
	T1 a1; /* has_escape_character */
	T2 a2; /* escape_character */
	T0* a3; /* separator_codes */
	T0* a4; /* separators */
};

/* Struct for type UC_STRING_EQUALITY_TESTER */
struct S57 {
	int id;
};

/* Struct for type detachable KL_EQUALITY_TESTER [STRING_8] */
struct S58 {
	int id;
};

/* Struct for type ET_XACE_SYSTEM */
struct S61 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* master_classes */
	T0* a3; /* root_type */
	T0* a4; /* none_type */
	T0* a5; /* any_type */
	T0* a6; /* stop_request */
	T0* a7; /* root_creation */
	T0* a8; /* eiffel_parser */
	T6 a9; /* default_create_seed */
	T0* a10; /* boolean_type */
	T0* a11; /* character_8_type */
	T0* a12; /* character_32_type */
	T0* a13; /* integer_8_type */
	T0* a14; /* integer_16_type */
	T0* a15; /* integer_32_type */
	T0* a16; /* integer_64_type */
	T0* a17; /* natural_8_type */
	T0* a18; /* natural_16_type */
	T0* a19; /* natural_32_type */
	T0* a20; /* natural_64_type */
	T0* a21; /* real_32_type */
	T0* a22; /* real_64_type */
	T0* a23; /* pointer_type */
	T0* a24; /* special_any_type */
	T0* a25; /* interface_checker */
	T0* a26; /* string_8_type */
	T0* a27; /* string_32_type */
	T0* a28; /* array_any_type */
	T0* a29; /* typed_pointer_any_type */
	T0* a30; /* ise_version */
	T0* a31; /* routine_type */
	T0* a32; /* detachable_tuple_type */
	T0* a33; /* ise_exception_manager_type */
	T0* a34; /* universe */
	T0* a35; /* detachable_none_type */
	T0* a36; /* system_name */
	T0* a37; /* external_include_pathnames */
	T0* a38; /* external_library_pathnames */
	T0* a39; /* options */
	T0* a40; /* ast_factory */
	T0* a41; /* external_object_pathnames */
	T1 a42; /* console_application_mode */
	T1 a43; /* alias_transition_mode */
	T1 a44; /* unknown_builtin_reported */
	T1 a45; /* qualified_anchored_types_enabled */
	T1 a46; /* qualified_anchored_types_cycle_detection_enabled */
	T0* a47; /* null_processor */
	T0* a48; /* eiffel_preparser */
	T0* a49; /* master_class_checker */
	T0* a50; /* provider_checker */
	T0* a51; /* ancestor_builder */
	T0* a52; /* feature_flattener */
	T0* a53; /* implementation_checker */
	T0* a54; /* flat_implementation_checker */
	T0* a55; /* current_system */
	T0* a56; /* integer_type */
	T0* a57; /* string_type */
	T0* a58; /* name */
	T0* a59; /* root_class_name */
	T0* a60; /* ecma_version */
	T1 a61; /* preparse_enabled */
	T1 a62; /* flat_dbc_mode */
	T1 a63; /* suppliers_enabled */
	T0* a64; /* dotnet_assemblies */
	T0* a65; /* libraries */
	T1 a66; /* flat_mode */
	T0* a67; /* mounted_libraries */
	T0* a68; /* clusters */
	T1 a69; /* exception_trace_mode */
	T1 a70; /* trace_mode */
	T1 a71; /* use_boehm_gc */
	T0* a72; /* creation_procedure_name */
	T1 a73; /* preparse_shallow_mode */
	T1 a74; /* preparse_single_mode */
	T1 a75; /* preparse_multiple_mode */
	T0* a76; /* detachable_any_type */
	T0* a77; /* any_parent */
	T0* a78; /* any_parents */
	T0* a79; /* any_clients */
	T0* a80; /* tuple_type */
	T0* a81; /* tuple_like_current_type */
	T0* a82; /* unfolded_empty_tuple_actual_parameters */
	T0* a83; /* array_detachable_any_type */
	T0* a84; /* array_like_current_type */
	T0* a85; /* character_type */
	T0* a86; /* character_8_convert_feature */
	T0* a87; /* character_32_convert_feature */
	T0* a88; /* double_type */
	T0* a89; /* exception_type */
	T0* a90; /* detachable_exception_type */
	T0* a91; /* exception_manager_type */
	T0* a92; /* function_type */
	T0* a93; /* integer_8_convert_feature */
	T0* a94; /* integer_16_convert_feature */
	T0* a95; /* integer_32_convert_feature */
	T0* a96; /* integer_64_convert_feature */
	T0* a97; /* iterable_detachable_any_type */
	T0* a98; /* natural_type */
	T0* a99; /* natural_8_convert_feature */
	T0* a100; /* natural_16_convert_feature */
	T0* a101; /* natural_32_convert_feature */
	T0* a102; /* natural_64_convert_feature */
	T0* a103; /* predicate_like_current_type */
	T0* a104; /* procedure_like_current_type */
	T0* a105; /* real_type */
	T0* a106; /* real_32_convert_feature */
	T0* a107; /* real_64_convert_feature */
	T0* a108; /* special_detachable_any_type */
	T0* a109; /* string_8_convert_feature */
	T0* a110; /* string_32_convert_feature */
	T0* a111; /* system_object_type */
	T0* a112; /* system_object_parents */
	T0* a113; /* system_string_type */
	T0* a114; /* type_any_type */
	T0* a115; /* type_type_any_type */
	T0* a116; /* type_detachable_any_type */
	T0* a117; /* type_detachable_like_current_type */
	T0* a118; /* detachable_type_exception_type */
	T0* a119; /* type_detachable_exception_type */
	T0* a120; /* detachable_type_detachable_any_type */
	T0* a121; /* type_like_current_type */
	T0* a122; /* typed_pointer_like_current_type */
	T0* a123; /* wide_character_type */
	T1 a124; /* is_read_only */
	T1 a125; /* use_attribute_keyword */
	T1 a126; /* use_note_keyword */
	T1 a127; /* use_reference_keyword */
	T1 a128; /* use_attached_keyword */
	T1 a129; /* use_detachable_keyword */
	T6 a130; /* registered_feature_count */
	T1 a131; /* cluster_dependence_enabled */
	T1 a132; /* is_preparsed */
	T0* a133; /* scm_read_mapping_builder */
	T0* a134; /* scm_write_mapping_builder */
	T6 a135; /* registered_class_count */
	T6 a136; /* routine_call_seed */
	T6 a137; /* function_item_seed */
	T6 a138; /* is_equal_seed */
	T6 a139; /* dispose_seed */
	T1 a140; /* multithreaded_mode */
	T0* a141; /* internal_dotnet_assembly_consumer */
	T1 a142; /* attachment_type_conformance_mode */
	T1 a143; /* scoop_mode */
	T0* a144; /* implicit_attachment_type_mark */
	T1 a145; /* obsolete_routine_type_mode */
	T1 a146; /* providers_enabled */
	T1 a147; /* preparse_readonly_mode */
	T1 a148; /* preparse_override_mode */
	T1 a149; /* use_cluster_dependence_pathnames */
	T1 a150; /* is_dotnet */
	T6 a151; /* registered_inline_constant_count */
	T6 a152; /* copy_seed */
	T6 a153; /* iterable_new_cursor_seed */
	T6 a154; /* iteration_cursor_after_seed */
	T6 a155; /* iteration_cursor_forth_seed */
	T1 a156; /* target_type_attachment_mode */
};

/* Struct for type ET_ECF_SYSTEM_PARSER */
struct S62 {
	int id;
	T0* a1; /* last_system */
	T0* a2; /* ast_factory */
	T1 a3; /* finalize_mode */
	T0* a4; /* parsed_libraries */
	T0* a5; /* parsed_dotnet_assemblies */
	T0* a6; /* xml_parser */
	T0* a7; /* tree_pipe */
	T0* a8; /* error_handler */
	T0* a9; /* ise_version */
	T0* a10; /* library_parser */
};

/* Struct for type ET_ECF_ERROR_HANDLER */
struct S63 {
	int id;
	T6 a1; /* error_count */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type ET_ECF_SYSTEM */
struct S64 {
	int id;
	T0* a1; /* targets */
	T0* a2; /* libraries */
	T0* a3; /* filename */
	T0* a4; /* dotnet_assemblies */
	T0* a5; /* selected_target */
	T0* a6; /* error_handler */
	T0* a7; /* master_classes */
	T0* a8; /* root_type */
	T0* a9; /* none_type */
	T0* a10; /* any_type */
	T0* a11; /* stop_request */
	T0* a12; /* root_creation */
	T0* a13; /* eiffel_parser */
	T6 a14; /* default_create_seed */
	T0* a15; /* boolean_type */
	T0* a16; /* character_8_type */
	T0* a17; /* character_32_type */
	T0* a18; /* integer_8_type */
	T0* a19; /* integer_16_type */
	T0* a20; /* integer_32_type */
	T0* a21; /* integer_64_type */
	T0* a22; /* natural_8_type */
	T0* a23; /* natural_16_type */
	T0* a24; /* natural_32_type */
	T0* a25; /* natural_64_type */
	T0* a26; /* real_32_type */
	T0* a27; /* real_64_type */
	T0* a28; /* pointer_type */
	T0* a29; /* special_any_type */
	T0* a30; /* interface_checker */
	T0* a31; /* string_8_type */
	T0* a32; /* string_32_type */
	T0* a33; /* array_any_type */
	T0* a34; /* typed_pointer_any_type */
	T0* a35; /* ise_version */
	T0* a36; /* routine_type */
	T0* a37; /* detachable_tuple_type */
	T0* a38; /* ise_exception_manager_type */
	T0* a39; /* universe */
	T0* a40; /* detachable_none_type */
	T0* a41; /* implementation_checker */
	T1 a42; /* use_boehm_gc */
	T0* a43; /* external_include_pathnames */
	T0* a44; /* external_library_pathnames */
	T0* a45; /* external_object_pathnames */
	T0* a46; /* character_type */
	T0* a47; /* wide_character_type */
	T0* a48; /* integer_type */
	T0* a49; /* natural_type */
	T0* a50; /* real_type */
	T0* a51; /* double_type */
	T6 a52; /* routine_call_seed */
	T6 a53; /* function_item_seed */
	T6 a54; /* is_equal_seed */
	T6 a55; /* dispose_seed */
	T6 a56; /* registered_feature_count */
	T1 a57; /* multithreaded_mode */
	T1 a58; /* trace_mode */
	T1 a59; /* exception_trace_mode */
	T1 a60; /* console_application_mode */
	T0* a61; /* system_name */
	T0* a62; /* name */
	T0* a63; /* ecma_version */
	T1 a64; /* qualified_anchored_types_enabled */
	T1 a65; /* preparse_enabled */
	T0* a66; /* eiffel_preparser */
	T0* a67; /* null_processor */
	T0* a68; /* master_class_checker */
	T0* a69; /* provider_checker */
	T0* a70; /* ancestor_builder */
	T0* a71; /* feature_flattener */
	T1 a72; /* flat_dbc_mode */
	T1 a73; /* suppliers_enabled */
	T0* a74; /* flat_implementation_checker */
	T0* a75; /* current_system */
	T1 a76; /* flat_mode */
	T0* a77; /* uuid */
	T0* a78; /* ecf_namespace */
	T0* a79; /* ecf_version */
	T0* a80; /* library_target */
	T0* a81; /* ast_factory */
	T1 a82; /* alias_transition_mode */
	T1 a83; /* unknown_builtin_reported */
	T1 a84; /* qualified_anchored_types_cycle_detection_enabled */
	T0* a85; /* string_type */
	T1 a86; /* use_attribute_keyword */
	T1 a87; /* use_note_keyword */
	T1 a88; /* use_reference_keyword */
	T1 a89; /* use_attached_keyword */
	T1 a90; /* use_detachable_keyword */
	T1 a91; /* cluster_dependence_enabled */
	T1 a92; /* is_preparsed */
	T0* a93; /* clusters */
	T1 a94; /* is_read_only */
	T1 a95; /* preparse_shallow_mode */
	T1 a96; /* preparse_single_mode */
	T1 a97; /* preparse_multiple_mode */
	T0* a98; /* detachable_any_type */
	T0* a99; /* any_parent */
	T0* a100; /* any_parents */
	T0* a101; /* any_clients */
	T0* a102; /* tuple_type */
	T0* a103; /* tuple_like_current_type */
	T0* a104; /* unfolded_empty_tuple_actual_parameters */
	T0* a105; /* array_detachable_any_type */
	T0* a106; /* array_like_current_type */
	T0* a107; /* character_8_convert_feature */
	T0* a108; /* character_32_convert_feature */
	T0* a109; /* exception_type */
	T0* a110; /* detachable_exception_type */
	T0* a111; /* exception_manager_type */
	T0* a112; /* function_type */
	T0* a113; /* integer_8_convert_feature */
	T0* a114; /* integer_16_convert_feature */
	T0* a115; /* integer_32_convert_feature */
	T0* a116; /* integer_64_convert_feature */
	T0* a117; /* iterable_detachable_any_type */
	T0* a118; /* natural_8_convert_feature */
	T0* a119; /* natural_16_convert_feature */
	T0* a120; /* natural_32_convert_feature */
	T0* a121; /* natural_64_convert_feature */
	T0* a122; /* predicate_like_current_type */
	T0* a123; /* procedure_like_current_type */
	T0* a124; /* real_32_convert_feature */
	T0* a125; /* real_64_convert_feature */
	T0* a126; /* special_detachable_any_type */
	T0* a127; /* string_8_convert_feature */
	T0* a128; /* string_32_convert_feature */
	T0* a129; /* system_object_type */
	T0* a130; /* system_object_parents */
	T0* a131; /* system_string_type */
	T0* a132; /* type_any_type */
	T0* a133; /* type_type_any_type */
	T0* a134; /* type_detachable_any_type */
	T0* a135; /* type_detachable_like_current_type */
	T0* a136; /* detachable_type_exception_type */
	T0* a137; /* type_detachable_exception_type */
	T0* a138; /* detachable_type_detachable_any_type */
	T0* a139; /* type_like_current_type */
	T0* a140; /* typed_pointer_like_current_type */
	T0* a141; /* scm_read_mapping_builder */
	T0* a142; /* scm_write_mapping_builder */
	T6 a143; /* registered_class_count */
	T1 a144; /* attachment_type_conformance_mode */
	T1 a145; /* scoop_mode */
	T0* a146; /* implicit_attachment_type_mark */
	T0* a147; /* internal_dotnet_assembly_consumer */
	T1 a148; /* obsolete_routine_type_mode */
	T1 a149; /* providers_enabled */
	T1 a150; /* preparse_readonly_mode */
	T1 a151; /* preparse_override_mode */
	T1 a152; /* use_cluster_dependence_pathnames */
	T1 a153; /* is_dotnet */
	T6 a154; /* registered_inline_constant_count */
	T1 a155; /* target_type_attachment_mode */
	T6 a156; /* copy_seed */
	T6 a157; /* iterable_new_cursor_seed */
	T6 a158; /* iteration_cursor_after_seed */
	T6 a159; /* iteration_cursor_forth_seed */
};

/* Struct for type ET_ECF_TARGET */
struct S65 {
	int id;
	T0* a1; /* root */
	T0* a2; /* variables */
	T0* a3; /* settings */
	T0* a4; /* options */
	T0* a5; /* name */
	T0* a6; /* clusters */
	T0* a7; /* libraries */
	T0* a8; /* dotnet_assemblies */
	T0* a9; /* file_rules */
	T0* a10; /* external_includes */
	T0* a11; /* external_libraries */
	T0* a12; /* external_objects */
	T0* a13; /* parent */
};

/* Struct for type KL_EXECUTION_ENVIRONMENT */
struct S66 {
	int id;
};

/* Struct for type ET_ECF_VARIABLES */
struct S67 {
	int id;
	T0* a1; /* primary_variables */
	T0* a2; /* secondary_variables */
};

/* Struct for type ET_LACE_PARSER */
struct S68 {
	int id;
	T0* a1; /* last_system */
	T6 a2; /* yy_parsing_status */
	T0* a3; /* named_clusters */
	T0* a4; /* override_cluster_names */
	T0* a5; /* external_include_pathnames */
	T0* a6; /* external_object_pathnames */
	T0* a7; /* metadata_cache_path_value */
	T0* a8; /* msil_clr_version_value */
	T1 a9; /* console_application_value */
	T1 a10; /* exception_trace_value */
	T1 a11; /* trace_value */
	T0* a12; /* ast_factory */
	T6 a13; /* eif_lineno */
	T0* a14; /* eif_buffer */
	T0* a15; /* input_buffer */
	T6 a16; /* yy_end */
	T6 a17; /* yy_position */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_suspended_yystacksize */
	T6 a21; /* yy_suspended_yystate */
	T6 a22; /* yy_suspended_yyn */
	T6 a23; /* yy_suspended_yychar1 */
	T6 a24; /* yy_suspended_index */
	T6 a25; /* yy_suspended_yyss_top */
	T6 a26; /* yy_suspended_yy_goto */
	T0* a27; /* yyr1 */
	T0* a28; /* yyss */
	T6 a29; /* yyssp */
	T0* a30; /* yypgoto */
	T0* a31; /* yycheck */
	T0* a32; /* yytable */
	T0* a33; /* yydefgoto */
	T6 a34; /* error_count */
	T1 a35; /* yy_lookahead_needed */
	T6 a36; /* yyerrstatus */
	T0* a37; /* yypact */
	T6 a38; /* last_token */
	T0* a39; /* yytranslate */
	T0* a40; /* yydefact */
	T0* a41; /* filename */
	T0* a42; /* error_handler */
	T0* a43; /* last_et_identifier_value */
	T1 a44; /* yy_rejected */
	T6 a45; /* yy_state_count */
	T6 a46; /* yy_full_match */
	T6 a47; /* yy_lp */
	T6 a48; /* yy_looking_for_trail_begin */
	T6 a49; /* yy_full_lp */
	T6 a50; /* yy_full_state */
	T6 a51; /* pushed_start_condition_count */
	T6 a52; /* yy_start_state */
	T6 a53; /* yy_start */
	T6 a54; /* line */
	T6 a55; /* column */
	T6 a56; /* position */
	T1 a57; /* yy_more_flag */
	T6 a58; /* yy_more_len */
	T6 a59; /* yy_last_accepting_state */
	T6 a60; /* yy_last_accepting_cpos */
	T6 a61; /* yyvsp1 */
	T6 a62; /* yyvsp2 */
	T6 a63; /* yyvsp3 */
	T6 a64; /* yyvsp4 */
	T6 a65; /* yyvsp5 */
	T6 a66; /* yyvsp6 */
	T6 a67; /* yyvsp7 */
	T6 a68; /* yyvsp8 */
	T6 a69; /* yyvsp9 */
	T6 a70; /* yyvsp10 */
	T6 a71; /* yyvsp11 */
	T6 a72; /* yyvsp12 */
	T0* a73; /* yy_state_stack */
	T0* a74; /* yy_content_area */
	T0* a75; /* yy_ec */
	T0* a76; /* yy_content */
	T0* a77; /* yy_accept */
	T0* a78; /* yy_chk */
	T0* a79; /* yy_base */
	T0* a80; /* yy_def */
	T0* a81; /* yy_meta */
	T0* a82; /* yy_nxt */
	T0* a83; /* yy_acclist */
	T0* a84; /* yytypes2 */
	T6 a85; /* yyvsc1 */
	T0* a86; /* yyvs1 */
	T0* a87; /* yyspecial_routines1 */
	T0* a88; /* last_detachable_any_value */
	T6 a89; /* yyvsc2 */
	T0* a90; /* yyvs2 */
	T0* a91; /* yyspecial_routines2 */
	T0* a92; /* yyvs10 */
	T0* a93; /* yyvs5 */
	T0* a94; /* yyvs12 */
	T0* a95; /* yyvs8 */
	T0* a96; /* yyspecial_routines10 */
	T6 a97; /* yyvsc10 */
	T6 a98; /* yyvsc8 */
	T0* a99; /* yyspecial_routines8 */
	T6 a100; /* yyvsc5 */
	T0* a101; /* yyspecial_routines5 */
	T0* a102; /* yyvs4 */
	T0* a103; /* yyvs3 */
	T6 a104; /* yyvsc4 */
	T0* a105; /* yyspecial_routines4 */
	T0* a106; /* yyspecial_routines3 */
	T0* a107; /* yyvs7 */
	T6 a108; /* yyvsc3 */
	T6 a109; /* yyvsc7 */
	T0* a110; /* yyspecial_routines7 */
	T0* a111; /* yyvs6 */
	T6 a112; /* yyvsc6 */
	T0* a113; /* yyspecial_routines6 */
	T6 a114; /* yyvsc12 */
	T0* a115; /* yyspecial_routines12 */
	T0* a116; /* yyvs11 */
	T0* a117; /* yyvs9 */
	T6 a118; /* yyvsc11 */
	T0* a119; /* yyspecial_routines11 */
	T6 a120; /* yyvsc9 */
	T0* a121; /* yyspecial_routines9 */
	T0* a122; /* yytypes1 */
	T0* a123; /* yy_pushed_start_conditions */
	T6 a124; /* code_ */
};

/* Struct for type ET_LACE_ERROR_HANDLER */
struct S69 {
	int id;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
};

/* Struct for type ET_LACE_SYSTEM */
struct S70 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* master_classes */
	T0* a3; /* root_type */
	T0* a4; /* none_type */
	T0* a5; /* any_type */
	T0* a6; /* stop_request */
	T0* a7; /* root_creation */
	T0* a8; /* eiffel_parser */
	T6 a9; /* default_create_seed */
	T0* a10; /* boolean_type */
	T0* a11; /* character_8_type */
	T0* a12; /* character_32_type */
	T0* a13; /* integer_8_type */
	T0* a14; /* integer_16_type */
	T0* a15; /* integer_32_type */
	T0* a16; /* integer_64_type */
	T0* a17; /* natural_8_type */
	T0* a18; /* natural_16_type */
	T0* a19; /* natural_32_type */
	T0* a20; /* natural_64_type */
	T0* a21; /* real_32_type */
	T0* a22; /* real_64_type */
	T0* a23; /* pointer_type */
	T0* a24; /* special_any_type */
	T0* a25; /* interface_checker */
	T0* a26; /* string_8_type */
	T0* a27; /* string_32_type */
	T0* a28; /* array_any_type */
	T0* a29; /* typed_pointer_any_type */
	T0* a30; /* ise_version */
	T0* a31; /* routine_type */
	T0* a32; /* detachable_tuple_type */
	T0* a33; /* ise_exception_manager_type */
	T0* a34; /* universe */
	T0* a35; /* detachable_none_type */
	T0* a36; /* implementation_checker */
	T1 a37; /* use_boehm_gc */
	T0* a38; /* external_include_pathnames */
	T0* a39; /* external_library_pathnames */
	T0* a40; /* external_object_pathnames */
	T0* a41; /* character_type */
	T0* a42; /* wide_character_type */
	T0* a43; /* integer_type */
	T0* a44; /* natural_type */
	T0* a45; /* real_type */
	T0* a46; /* double_type */
	T6 a47; /* routine_call_seed */
	T6 a48; /* function_item_seed */
	T6 a49; /* is_equal_seed */
	T6 a50; /* dispose_seed */
	T6 a51; /* registered_feature_count */
	T1 a52; /* multithreaded_mode */
	T1 a53; /* trace_mode */
	T1 a54; /* exception_trace_mode */
	T1 a55; /* console_application_mode */
	T0* a56; /* system_name */
	T0* a57; /* ast_factory */
	T1 a58; /* alias_transition_mode */
	T1 a59; /* unknown_builtin_reported */
	T1 a60; /* qualified_anchored_types_enabled */
	T1 a61; /* qualified_anchored_types_cycle_detection_enabled */
	T0* a62; /* null_processor */
	T0* a63; /* eiffel_preparser */
	T0* a64; /* master_class_checker */
	T0* a65; /* provider_checker */
	T0* a66; /* ancestor_builder */
	T0* a67; /* feature_flattener */
	T0* a68; /* flat_implementation_checker */
	T0* a69; /* current_system */
	T0* a70; /* string_type */
	T0* a71; /* name */
	T0* a72; /* clusters */
	T0* a73; /* dotnet_assemblies */
	T0* a74; /* ecma_version */
	T1 a75; /* preparse_enabled */
	T1 a76; /* flat_dbc_mode */
	T1 a77; /* suppliers_enabled */
	T0* a78; /* libraries */
	T1 a79; /* flat_mode */
	T1 a80; /* preparse_shallow_mode */
	T1 a81; /* preparse_single_mode */
	T1 a82; /* preparse_multiple_mode */
	T0* a83; /* detachable_any_type */
	T0* a84; /* any_parent */
	T0* a85; /* any_parents */
	T0* a86; /* any_clients */
	T0* a87; /* tuple_type */
	T0* a88; /* tuple_like_current_type */
	T0* a89; /* unfolded_empty_tuple_actual_parameters */
	T0* a90; /* array_detachable_any_type */
	T0* a91; /* array_like_current_type */
	T0* a92; /* character_8_convert_feature */
	T0* a93; /* character_32_convert_feature */
	T0* a94; /* exception_type */
	T0* a95; /* detachable_exception_type */
	T0* a96; /* exception_manager_type */
	T0* a97; /* function_type */
	T0* a98; /* integer_8_convert_feature */
	T0* a99; /* integer_16_convert_feature */
	T0* a100; /* integer_32_convert_feature */
	T0* a101; /* integer_64_convert_feature */
	T0* a102; /* iterable_detachable_any_type */
	T0* a103; /* natural_8_convert_feature */
	T0* a104; /* natural_16_convert_feature */
	T0* a105; /* natural_32_convert_feature */
	T0* a106; /* natural_64_convert_feature */
	T0* a107; /* predicate_like_current_type */
	T0* a108; /* procedure_like_current_type */
	T0* a109; /* real_32_convert_feature */
	T0* a110; /* real_64_convert_feature */
	T0* a111; /* special_detachable_any_type */
	T0* a112; /* string_8_convert_feature */
	T0* a113; /* string_32_convert_feature */
	T0* a114; /* system_object_type */
	T0* a115; /* system_object_parents */
	T0* a116; /* system_string_type */
	T0* a117; /* type_any_type */
	T0* a118; /* type_type_any_type */
	T0* a119; /* type_detachable_any_type */
	T0* a120; /* type_detachable_like_current_type */
	T0* a121; /* detachable_type_exception_type */
	T0* a122; /* type_detachable_exception_type */
	T0* a123; /* detachable_type_detachable_any_type */
	T0* a124; /* type_like_current_type */
	T0* a125; /* typed_pointer_like_current_type */
	T1 a126; /* is_read_only */
	T1 a127; /* use_attribute_keyword */
	T1 a128; /* use_note_keyword */
	T1 a129; /* use_reference_keyword */
	T1 a130; /* use_attached_keyword */
	T1 a131; /* use_detachable_keyword */
	T1 a132; /* cluster_dependence_enabled */
	T1 a133; /* is_preparsed */
	T0* a134; /* scm_read_mapping_builder */
	T0* a135; /* scm_write_mapping_builder */
	T6 a136; /* registered_class_count */
	T1 a137; /* attachment_type_conformance_mode */
	T1 a138; /* scoop_mode */
	T0* a139; /* implicit_attachment_type_mark */
	T0* a140; /* internal_dotnet_assembly_consumer */
	T1 a141; /* obsolete_routine_type_mode */
	T1 a142; /* providers_enabled */
	T1 a143; /* preparse_readonly_mode */
	T1 a144; /* preparse_override_mode */
	T1 a145; /* use_cluster_dependence_pathnames */
	T1 a146; /* is_dotnet */
	T6 a147; /* registered_inline_constant_count */
	T6 a148; /* copy_seed */
	T6 a149; /* iterable_new_cursor_seed */
	T6 a150; /* iteration_cursor_after_seed */
	T6 a151; /* iteration_cursor_forth_seed */
	T1 a152; /* target_type_attachment_mode */
};

/* Struct for type ET_DYNAMIC_SYSTEM */
struct S71 {
	int id;
	T1 a1; /* has_fatal_error */
	T1 a2; /* catcall_error_mode */
	T0* a3; /* current_system */
	T0* a4; /* dynamic_types */
	T0* a5; /* null_dynamic_type_set_builder */
	T1 a6; /* full_class_checking */
	T1 a7; /* catcall_warning_mode */
	T0* a8; /* new_instance_types */
	T0* a9; /* dynamic_type_set_builder */
	T0* a10; /* unknown_type */
	T0* a11; /* boolean_type */
	T0* a12; /* character_8_type */
	T0* a13; /* character_32_type */
	T0* a14; /* integer_8_type */
	T0* a15; /* integer_16_type */
	T0* a16; /* integer_32_type */
	T0* a17; /* integer_64_type */
	T0* a18; /* natural_8_type */
	T0* a19; /* natural_16_type */
	T0* a20; /* natural_32_type */
	T0* a21; /* natural_64_type */
	T0* a22; /* real_32_type */
	T0* a23; /* real_64_type */
	T0* a24; /* pointer_type */
	T0* a25; /* string_8_type */
	T0* a26; /* string_32_type */
	T0* a27; /* special_character_8_type */
	T0* a28; /* special_character_32_type */
	T0* a29; /* ise_exception_manager_type */
	T0* a30; /* any_type */
	T0* a31; /* none_type */
	T0* a32; /* root_type */
	T0* a33; /* root_creation_procedure */
	T0* a34; /* special_count_feature */
	T0* a35; /* special_capacity_feature */
	T0* a36; /* array_area_feature */
	T0* a37; /* array_lower_feature */
	T0* a38; /* array_upper_feature */
	T0* a39; /* typed_pointer_to_pointer_feature */
	T0* a40; /* routine_closed_operands_feature */
	T0* a41; /* routine_is_target_closed_feature */
	T0* a42; /* ise_exception_manager_init_exception_manager_feature */
	T0* a43; /* ise_exception_manager_set_exception_data_feature */
	T0* a44; /* type_of_type_feature */
	T1 a45; /* in_create_meta_type */
};

/* Struct for type ET_C_GENERATOR */
struct S74 {
	int id;
	T6 a1; /* never_void_target_count */
	T6 a2; /* can_be_void_target_count */
	T1 a3; /* has_fatal_error */
	T0* a4; /* current_dynamic_system */
	T1 a5; /* short_names */
	T1 a6; /* split_mode */
	T6 a7; /* split_threshold */
	T1 a8; /* use_boehm_gc */
	T0* a9; /* system_name */
	T0* a10; /* current_file */
	T0* a11; /* header_file */
	T0* a12; /* current_type */
	T0* a13; /* current_feature */
	T0* a14; /* extra_dynamic_type_sets */
	T0* a15; /* current_dynamic_type_sets */
	T0* a16; /* current_function_header_buffer */
	T0* a17; /* current_function_body_buffer */
	T0* a18; /* temp_variables */
	T0* a19; /* used_temp_variables */
	T0* a20; /* free_temp_variables */
	T0* a21; /* frozen_temp_variables */
	T0* a22; /* conforming_types */
	T0* a23; /* conforming_type_set */
	T0* a24; /* non_conforming_types */
	T0* a25; /* equality_type_set */
	T0* a26; /* equality_common_types */
	T0* a27; /* operand_stack */
	T0* a28; /* call_operands */
	T0* a29; /* attachment_dynamic_type_ids */
	T0* a30; /* target_dynamic_type_ids */
	T0* a31; /* target_dynamic_types */
	T0* a32; /* standalone_type_sets */
	T0* a33; /* deep_twin_types */
	T0* a34; /* deep_equal_types */
	T0* a35; /* deep_feature_target_type_sets */
	T0* a36; /* current_object_tests */
	T0* a37; /* current_object_equalities */
	T0* a38; /* current_equalities */
	T0* a39; /* current_agents */
	T0* a40; /* agent_open_operands */
	T0* a41; /* agent_closed_operands */
	T0* a42; /* agent_target */
	T0* a43; /* agent_arguments */
	T0* a44; /* agent_instruction */
	T0* a45; /* agent_expression */
	T0* a46; /* agent_closed_operands_type */
	T0* a47; /* wrapper_expression */
	T0* a48; /* agent_tuple_item_expressions */
	T0* a49; /* agent_manifest_tuple */
	T0* a50; /* formal_arguments */
	T0* a51; /* manifest_array_types */
	T0* a52; /* big_manifest_array_types */
	T0* a53; /* manifest_tuple_types */
	T0* a54; /* once_features */
	T0* a55; /* constant_features */
	T0* a56; /* inline_constants */
	T0* a57; /* dispose_procedures */
	T0* a58; /* dynamic_type_id_set_names */
	T0* a59; /* called_features */
	T0* a60; /* included_header_filenames */
	T0* a61; /* included_runtime_header_files */
	T0* a62; /* included_runtime_c_files */
	T0* a63; /* c_filenames */
	T1 a64; /* finalize_mode */
	T0* a65; /* locals_written_in_body */
	T0* a66; /* locals_written_in_rescue */
	T0* a67; /* locals_written */
	T0* a68; /* locals_read_in_body */
	T0* a69; /* locals_read_in_rescue */
	T0* a70; /* locals_read */
	T0* a71; /* external_c_regexp */
	T0* a72; /* external_c_macro_regexp */
	T0* a73; /* external_c_struct_regexp */
	T0* a74; /* external_c_inline_regexp */
	T0* a75; /* old_external_c_regexp */
	T0* a76; /* old_external_c_macro_regexp */
	T0* a77; /* old_external_c_struct_regexp */
	T0* a78; /* external_cpp_regexp */
	T0* a79; /* external_cpp_inline_regexp */
	T0* a80; /* external_dllwin_regexp */
	T0* a81; /* old_external_dllwin32_regexp */
	T0* a82; /* c_file */
	T6 a83; /* c_file_size */
	T0* a84; /* cpp_file */
	T6 a85; /* cpp_file_size */
	T6 a86; /* indentation */
	T0* a87; /* assignment_target */
	T1 a88; /* in_operand */
	T0* a89; /* call_target_type */
	T0* a90; /* current_agent */
	T1 a91; /* call_target_check_void */
	T1 a92; /* has_rescue */
	T1 a93; /* result_written */
	T1 a94; /* result_read */
	T1 a95; /* has_retry */
};

/* Struct for type KL_SHELL_COMMAND */
struct S75 {
	int id;
	T6 a1; /* exit_code */
	T0* a2; /* string_command */
	T0* a3; /* command */
	T6 a4; /* return_code */
	T1 a5; /* is_system_code */
};

/* Struct for type DS_HASH_SET [STRING_8] */
struct S76 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T0* a3; /* equality_tester */
	T6 a4; /* position */
	T6 a5; /* count */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* free_slot */
	T6 a9; /* last_position */
	T6 a10; /* modulus */
	T6 a11; /* found_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* hash_function */
};

/* Struct for type ET_NULL_ERROR_HANDLER */
struct S77 {
	int id;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
	T1 a4; /* has_error */
	T1 a5; /* benchmark_shown */
	T1 a6; /* is_ise */
	T1 a7; /* is_ge */
	T1 a8; /* has_eiffel_error */
	T1 a9; /* has_internal_error */
	T1 a10; /* is_verbose */
	T1 a11; /* is_pedantic */
};

/* Struct for type UT_VERSION */
struct S78 {
	int id;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_revision */
	T6 a4; /* internal_build */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
struct S79 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_dynamic_system */
	T0* a3; /* feature_checker */
	T0* a4; /* current_dynamic_type */
	T0* a5; /* current_dynamic_feature */
	T0* a6; /* dynamic_type_sets */
	T0* a7; /* object_id_dynamic_type_set */
	T0* a8; /* current_index */
	T0* a9; /* result_index */
	T0* a10; /* constant_indexes */
	T0* a11; /* none_index */
	T1 a12; /* catcall_error_mode */
	T1 a13; /* catcall_warning_mode */
	T1 a14; /* no_debug */
	T1 a15; /* no_assertion */
	T1 a16; /* is_built */
	T0* a17; /* type_checker */
	T0* a18; /* current_class */
	T0* a19; /* current_type */
	T0* a20; /* current_feature */
	T0* a21; /* current_feature_impl */
	T0* a22; /* current_class_impl */
	T0* a23; /* enclosing_inline_agents */
	T0* a24; /* unused_overloaded_procedures_list */
	T0* a25; /* unused_overloaded_queries_list */
	T0* a26; /* unused_overloaded_features_list */
	T0* a27; /* unused_contexts */
	T0* a28; /* current_context */
	T0* a29; /* current_target_type */
	T0* a30; /* current_object_test_types */
	T0* a31; /* current_object_test_scope */
	T0* a32; /* object_test_scope_builder */
	T0* a33; /* current_across_cursor_types */
	T0* a34; /* current_across_cursor_scope */
	T0* a35; /* current_initialization_scope */
	T0* a36; /* current_attachment_scope */
	T0* a37; /* attachment_scope_builder */
	T0* a38; /* unused_attachment_scopes */
	T1 a39; /* in_precursor */
	T1 a40; /* in_rescue */
	T0* a41; /* current_inline_agent */
	T0* a42; /* supplier_handler */
	T1 a43; /* in_invariant */
	T1 a44; /* in_precondition */
	T1 a45; /* in_postcondition */
	T1 a46; /* in_check_instruction */
	T0* a47; /* precursor_procedures */
	T0* a48; /* precursor_queries */
};

/* Struct for type ET_CLASS_TYPE */
struct S80 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
	T0* a4; /* named_base_class */
	T1 a5; /* tuple_actual_parameters_unfolded_1 */
	T1 a6; /* tuple_actual_parameters_unfolded_2 */
};

/* Struct for type ET_TOKEN_CONSTANTS */
struct S81 {
	int id;
};

/* Struct for type ET_CLASS */
struct S82 {
	int id;
	T0* a1; /* group */
	T1 a2; /* is_parsed */
	T1 a3; /* has_syntax_error */
	T1 a4; /* ancestors_built */
	T1 a5; /* has_ancestors_error */
	T1 a6; /* features_flattened */
	T1 a7; /* has_flattening_error */
	T1 a8; /* interface_checked */
	T1 a9; /* has_interface_error */
	T1 a10; /* implementation_checked */
	T1 a11; /* has_implementation_error */
	T0* a12; /* name */
	T6 a13; /* id */
	T0* a14; /* ancestors */
	T0* a15; /* queries */
	T0* a16; /* procedures */
	T0* a17; /* class_keyword */
	T0* a18; /* end_keyword */
	T0* a19; /* named_base_class */
	T6 a20; /* time_stamp */
	T8 a21; /* class_code */
	T1 a22; /* tuple_actual_parameters_unfolded_1 */
	T1 a23; /* tuple_actual_parameters_unfolded_2 */
	T0* a24; /* formal_parameters */
	T6 a25; /* index */
	T1 a26; /* has_deferred_features */
	T0* a27; /* creators */
	T0* a28; /* class_mark */
	T0* a29; /* suppliers */
	T0* a30; /* invariants */
	T0* a31; /* filename */
	T1 a32; /* redeclared_signatures_checked */
	T1 a33; /* is_ignored */
	T6 a34; /* tuple_constraint_position */
	T0* a35; /* parent_clause */
	T1 a36; /* is_interface */
	T1 a37; /* is_marked */
	T0* a38; /* external_keyword */
	T0* a39; /* frozen_keyword */
	T0* a40; /* convert_features */
	T0* a41; /* feature_clauses */
	T0* a42; /* first_indexing */
	T0* a43; /* second_indexing */
	T0* a44; /* obsolete_message */
	T0* a45; /* leading_break */
	T0* a46; /* providers */
	T0* a47; /* formal_parameter_types */
};

/* Struct for type KL_OPERATING_SYSTEM */
struct S84 {
	int id;
};

/* Struct for type UT_CANNOT_READ_FILE_ERROR */
struct S86 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type UT_VERSION_NUMBER */
struct S87 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type VOID_TARGET */
struct S88 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type ROUTINE_FAILURE */
struct S90 {
	int id;
	T0* a1; /* routine_name */
	T0* a2; /* class_name */
	T0* a3; /* throwing_exception */
	T0* a4; /* internal_trace */
	T0* a5; /* c_description */
	T0* a6; /* recipient_name */
	T0* a7; /* type_name */
};

/* Struct for type OLD_VIOLATION */
struct S92 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type NO_MORE_MEMORY */
struct S94 {
	int id;
	T0* a1; /* internal_trace */
	T6 a2; /* internal_code */
	T0* a3; /* throwing_exception */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type INVARIANT_VIOLATION */
struct S95 {
	int id;
	T0* a1; /* throwing_exception */
	T1 a2; /* is_entry */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type OPERATING_SYSTEM_SIGNAL_FAILURE */
struct S96 {
	int id;
	T0* a1; /* throwing_exception */
	T6 a2; /* signal_code */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type IO_FAILURE */
struct S97 {
	int id;
	T6 a1; /* internal_code */
	T0* a2; /* throwing_exception */
	T6 a3; /* error_code */
	T0* a4; /* internal_trace */
	T0* a5; /* c_description */
	T0* a6; /* recipient_name */
	T0* a7; /* type_name */
};

/* Struct for type OPERATING_SYSTEM_FAILURE */
struct S98 {
	int id;
	T0* a1; /* throwing_exception */
	T6 a2; /* error_code */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type COM_FAILURE */
struct S99 {
	int id;
	T0* a1; /* throwing_exception */
	T6 a2; /* hresult_code */
	T0* a3; /* exception_information */
	T6 a4; /* hresult */
	T0* a5; /* internal_trace */
	T0* a6; /* c_description */
	T0* a7; /* recipient_name */
	T0* a8; /* type_name */
};

/* Struct for type EIFFEL_RUNTIME_PANIC */
struct S100 {
	int id;
	T6 a1; /* internal_code */
	T0* a2; /* throwing_exception */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type PRECONDITION_VIOLATION */
struct S103 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type POSTCONDITION_VIOLATION */
struct S104 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type FLOATING_POINT_FAILURE */
struct S105 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type CHECK_VIOLATION */
struct S106 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type BAD_INSPECT_VALUE */
struct S107 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type VARIANT_VIOLATION */
struct S108 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type LOOP_INVARIANT_VIOLATION */
struct S109 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type RESCUE_FAILURE */
struct S110 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type RESUMPTION_FAILURE */
struct S111 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type CREATE_ON_DEFERRED */
struct S112 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXTERNAL_FAILURE */
struct S113 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type VOID_ASSIGNED_TO_EXPANDED */
struct S114 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
struct S115 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type MISMATCH_FAILURE */
struct S116 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type DEVELOPER_EXCEPTION */
struct S117 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type ADDRESS_APPLIED_TO_MELTED_FEATURE */
struct S118 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type SERIALIZATION_FAILURE */
struct S119 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type KL_WINDOWS_FILE_SYSTEM */
struct S120 {
	int id;
	T2 a1; /* secondary_directory_separator */
};

/* Struct for type KL_UNIX_FILE_SYSTEM */
struct S121 {
	int id;
};

/* Struct for type PRIMES */
struct S122 {
	int id;
};

/* Struct for type SPECIAL [INTEGER_32] */
struct S123 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 z2[1]; /* item */
};

/* Struct for type SPECIAL [BOOLEAN] */
struct S124 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T1 z2[1]; /* item */
};

/* Struct for type detachable KL_LINKABLE [CHARACTER_8] */
struct S126 {
	int id;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type MANAGED_POINTER */
struct S128 {
	int id;
	T14 a1; /* item */
	T6 a2; /* count */
	T1 a3; /* is_shared */
};

/* Struct for type FILE_INFO */
struct S129 {
	int id;
	T0* a1; /* buffered_file_info */
	T1 a2; /* is_following_symlinks */
	T1 a3; /* exists */
	T0* a4; /* internal_file_name */
	T0* a5; /* internal_name_pointer */
};

/* Struct for type KL_STANDARD_FILES */
struct S130 {
	int id;
};

/* Struct for type KL_STDERR_FILE */
struct S131 {
	int id;
};

/* Struct for type KL_STDOUT_FILE */
struct S132 {
	int id;
};

/* Struct for type UC_STRING */
struct S133 {
	int id;
	T6 a1; /* count */
	T6 a2; /* byte_count */
	T6 a3; /* internal_hash_code */
	T0* a4; /* area */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
};

/* Struct for type KL_ANY_ROUTINES */
struct S134 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [STRING_8] */
struct S136 {
	int id;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [AP_OPTION] */
struct S137 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T0* a3; /* equality_tester */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S138 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T6 a5; /* count */
};

/* Struct for type AP_ERROR_HANDLER */
struct S139 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type DS_LINKED_LIST_CURSOR [AP_OPTION] */
struct S140 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type SPECIAL [STRING_8] */
struct S141 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [STRING_8] */
struct S142 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_LINKED_LIST [STRING_8] */
struct S143 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
	T0* a5; /* equality_tester */
};

/* Struct for type KL_STRING_EQUALITY_TESTER */
struct S144 {
	int id;
};

/* Struct for type DS_LINKED_LIST [BOOLEAN] */
struct S147 {
	int id;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type DS_LINKED_LIST [INTEGER_32] */
struct S150 {
	int id;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type ST_WORD_WRAPPER */
struct S151 {
	int id;
	T6 a1; /* new_line_indentation */
	T6 a2; /* broken_words */
	T6 a3; /* maximum_text_width */
};

/* Struct for type ET_XACE_AST_FACTORY */
struct S152 {
	int id;
};

/* Struct for type XM_DOCUMENT */
struct S153 {
	int id;
	T0* a1; /* root_element */
	T0* a2; /* children */
};

/* Struct for type XM_ELEMENT */
struct S154 {
	int id;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* parent */
	T0* a4; /* children */
};

/* Struct for type XM_POSITION_TABLE */
struct S155 {
	int id;
	T0* a1; /* table */
};

/* Struct for type XM_TREE_CALLBACKS_PIPE */
struct S157 {
	int id;
	T0* a1; /* error */
	T0* a2; /* tree */
	T0* a3; /* start */
	T0* a4; /* last */
};

/* Struct for type XM_STOP_ON_ERROR_FILTER */
struct S158 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* last_error */
	T0* a3; /* next */
};

/* Struct for type XM_CALLBACKS_TO_TREE_FILTER */
struct S159 {
	int id;
	T0* a1; /* last_position_table */
	T0* a2; /* document */
	T0* a3; /* source_parser */
	T0* a4; /* current_element */
	T0* a5; /* namespace_cache */
	T0* a6; /* next */
};

/* Struct for type ET_XACE_VALIDATOR */
struct S160 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* error_handler */
};

/* Struct for type ET_XACE_PREPROCESSOR */
struct S161 {
	int id;
	T0* a1; /* variables */
	T0* a2; /* error_handler */
};

/* Struct for type DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8] */
struct S162 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T0* a7; /* equality_tester */
	T0* a8; /* internal_cursor */
	T6 a9; /* found_position */
	T0* a10; /* item_storage */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* capacity */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type XM_EXPAT_PARSER_FACTORY */
struct S163 {
	int id;
};

/* Struct for type XM_EIFFEL_PARSER */
struct S164 {
	int id;
	T0* a1; /* internal_last_error_description */
	T0* a2; /* scanner */
	T0* a3; /* error_positions */
	T0* a4; /* scanners */
	T1 a5; /* in_external_dtd */
	T0* a6; /* callbacks */
	T0* a7; /* entities */
	T0* a8; /* pe_entities */
	T0* a9; /* dtd_resolver */
	T0* a10; /* entity_resolver */
	T1 a11; /* use_namespaces */
	T6 a12; /* string_mode */
	T0* a13; /* dtd_callbacks */
	T0* a14; /* last_string_value */
	T0* a15; /* yyss */
	T0* a16; /* yyspecial_routines1 */
	T6 a17; /* yyvsc1 */
	T0* a18; /* yyvs1 */
	T0* a19; /* yyspecial_routines2 */
	T6 a20; /* yyvsc2 */
	T0* a21; /* yyvs2 */
	T0* a22; /* yyspecial_routines3 */
	T6 a23; /* yyvsc3 */
	T0* a24; /* yyvs3 */
	T0* a25; /* yyspecial_routines4 */
	T6 a26; /* yyvsc4 */
	T0* a27; /* yyvs4 */
	T0* a28; /* yyspecial_routines5 */
	T6 a29; /* yyvsc5 */
	T0* a30; /* yyvs5 */
	T0* a31; /* yyspecial_routines6 */
	T6 a32; /* yyvsc6 */
	T0* a33; /* yyvs6 */
	T0* a34; /* yyspecial_routines7 */
	T6 a35; /* yyvsc7 */
	T0* a36; /* yyvs7 */
	T0* a37; /* yyspecial_routines8 */
	T6 a38; /* yyvsc8 */
	T0* a39; /* yyvs8 */
	T0* a40; /* yyspecial_routines9 */
	T6 a41; /* yyvsc9 */
	T0* a42; /* yyvs9 */
	T0* a43; /* yyspecial_routines10 */
	T6 a44; /* yyvsc10 */
	T0* a45; /* yyvs10 */
	T0* a46; /* yyspecial_routines11 */
	T6 a47; /* yyvsc11 */
	T0* a48; /* yyvs11 */
	T0* a49; /* yytranslate */
	T0* a50; /* yyr1 */
	T0* a51; /* yytypes1 */
	T0* a52; /* yytypes2 */
	T0* a53; /* yydefact */
	T0* a54; /* yydefgoto */
	T0* a55; /* yypact */
	T0* a56; /* yypgoto */
	T0* a57; /* yytable */
	T0* a58; /* yycheck */
	T6 a59; /* yy_parsing_status */
	T6 a60; /* yy_suspended_yystacksize */
	T6 a61; /* yy_suspended_yystate */
	T6 a62; /* yy_suspended_yyn */
	T6 a63; /* yy_suspended_yychar1 */
	T6 a64; /* yy_suspended_index */
	T6 a65; /* yy_suspended_yyss_top */
	T6 a66; /* yy_suspended_yy_goto */
	T6 a67; /* yyssp */
	T6 a68; /* error_count */
	T1 a69; /* yy_lookahead_needed */
	T6 a70; /* yyerrstatus */
	T6 a71; /* last_token */
	T6 a72; /* yyvsp1 */
	T6 a73; /* yyvsp2 */
	T6 a74; /* yyvsp3 */
	T6 a75; /* yyvsp4 */
	T6 a76; /* yyvsp5 */
	T6 a77; /* yyvsp6 */
	T6 a78; /* yyvsp7 */
	T6 a79; /* yyvsp8 */
	T6 a80; /* yyvsp9 */
	T6 a81; /* yyvsp10 */
	T6 a82; /* yyvsp11 */
	T0* a83; /* last_detachable_any_value */
};

/* Struct for type ET_XACE_LIBRARY_CONFIG_PARSER */
struct S167 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* ast_factory */
	T0* a3; /* parsed_libraries */
	T0* a4; /* xml_preprocessor */
	T0* a5; /* xml_validator */
	T0* a6; /* xml_parser */
	T0* a7; /* tree_pipe */
	T0* a8; /* library_parser */
	T0* a9; /* last_library */
	T1 a10; /* is_shallow */
	T1 a11; /* is_ve */
};

/* Struct for type UT_MESSAGE */
struct S168 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type KL_SPECIAL_ROUTINES [STRING_8] */
struct S170 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
struct S171 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [INTEGER_32] */
struct S172 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [STRING_8] */
struct S173 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* before */
};

/* Struct for type DS_HASH_SET [INTEGER_32] */
struct S174 {
	int id;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type ET_ECF_AST_FACTORY */
struct S175 {
	int id;
};

/* Struct for type DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
struct S177 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* capacity */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
struct S178 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_COMPRESSED_POSITION */
struct S179 {
	int id;
	T6 a1; /* compressed_position */
};

/* Struct for type ET_IDENTIFIER */
struct S181 {
	int id;
	T6 a1; /* seed */
	T6 a2; /* index */
	T0* a3; /* name */
	T2 a4; /* status_code */
	T6 a5; /* compressed_position */
	T6 a6; /* hash_code */
};

/* Struct for type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
struct S183 {
	int id;
};

/* Struct for type ET_ECF_STATE */
struct S186 {
	int id;
	T0* a1; /* target */
	T0* a2; /* ise_version */
	T1 a3; /* finalize_mode */
	T1 a4; /* is_dotnet */
	T1 a5; /* is_multithreaded */
	T1 a6; /* is_scoop */
};

/* Struct for type ET_ECF_TARGETS */
struct S187 {
	int id;
	T0* a1; /* targets */
};

/* Struct for type ET_ECF_LIBRARY */
struct S188 {
	int id;
	T0* a1; /* selected_target */
	T0* a2; /* library_target */
	T0* a3; /* current_system */
	T0* a4; /* filename */
	T0* a5; /* uuid */
	T0* a6; /* ecf_namespace */
	T0* a7; /* ecf_version */
	T0* a8; /* targets */
	T0* a9; /* name */
	T0* a10; /* library */
	T0* a11; /* libraries */
	T0* a12; /* clusters */
	T0* a13; /* dotnet_assemblies */
	T0* a14; /* master_classes */
	T0* a15; /* any_type */
	T0* a16; /* detachable_any_type */
	T0* a17; /* any_parent */
	T0* a18; /* any_parents */
	T0* a19; /* any_clients */
	T0* a20; /* tuple_type */
	T0* a21; /* detachable_tuple_type */
	T0* a22; /* tuple_like_current_type */
	T0* a23; /* unfolded_empty_tuple_actual_parameters */
	T0* a24; /* array_any_type */
	T0* a25; /* array_detachable_any_type */
	T0* a26; /* array_like_current_type */
	T0* a27; /* boolean_type */
	T0* a28; /* character_type */
	T0* a29; /* character_8_type */
	T0* a30; /* character_8_convert_feature */
	T0* a31; /* character_32_type */
	T0* a32; /* character_32_convert_feature */
	T0* a33; /* double_type */
	T0* a34; /* exception_type */
	T0* a35; /* detachable_exception_type */
	T0* a36; /* exception_manager_type */
	T0* a37; /* function_type */
	T0* a38; /* integer_type */
	T0* a39; /* integer_8_type */
	T0* a40; /* integer_8_convert_feature */
	T0* a41; /* integer_16_type */
	T0* a42; /* integer_16_convert_feature */
	T0* a43; /* integer_32_type */
	T0* a44; /* integer_32_convert_feature */
	T0* a45; /* integer_64_type */
	T0* a46; /* integer_64_convert_feature */
	T0* a47; /* ise_exception_manager_type */
	T0* a48; /* iterable_detachable_any_type */
	T0* a49; /* natural_type */
	T0* a50; /* natural_8_type */
	T0* a51; /* natural_8_convert_feature */
	T0* a52; /* natural_16_type */
	T0* a53; /* natural_16_convert_feature */
	T0* a54; /* natural_32_type */
	T0* a55; /* natural_32_convert_feature */
	T0* a56; /* natural_64_type */
	T0* a57; /* natural_64_convert_feature */
	T0* a58; /* none_type */
	T0* a59; /* detachable_none_type */
	T0* a60; /* pointer_type */
	T0* a61; /* predicate_like_current_type */
	T0* a62; /* procedure_like_current_type */
	T0* a63; /* real_type */
	T0* a64; /* real_32_type */
	T0* a65; /* real_32_convert_feature */
	T0* a66; /* real_64_type */
	T0* a67; /* real_64_convert_feature */
	T0* a68; /* routine_type */
	T0* a69; /* special_any_type */
	T0* a70; /* special_detachable_any_type */
	T0* a71; /* string_type */
	T0* a72; /* string_8_type */
	T0* a73; /* string_8_convert_feature */
	T0* a74; /* string_32_type */
	T0* a75; /* string_32_convert_feature */
	T0* a76; /* system_object_type */
	T0* a77; /* system_object_parents */
	T0* a78; /* system_string_type */
	T0* a79; /* type_any_type */
	T0* a80; /* type_type_any_type */
	T0* a81; /* type_detachable_any_type */
	T0* a82; /* type_detachable_like_current_type */
	T0* a83; /* detachable_type_exception_type */
	T0* a84; /* type_detachable_exception_type */
	T0* a85; /* detachable_type_detachable_any_type */
	T0* a86; /* type_like_current_type */
	T0* a87; /* typed_pointer_any_type */
	T0* a88; /* typed_pointer_like_current_type */
	T0* a89; /* wide_character_type */
	T1 a90; /* is_read_only */
	T1 a91; /* attachment_type_conformance_mode */
	T1 a92; /* target_type_attachment_mode */
	T0* a93; /* implicit_attachment_type_mark */
	T1 a94; /* obsolete_routine_type_mode */
	T1 a95; /* is_preparsed */
};

/* Struct for type ET_ADAPTED_LIBRARIES */
struct S189 {
	int id;
	T0* a1; /* libraries */
};

/* Struct for type [attached] TUPLE [ET_ADAPTED_LIBRARY] */
struct S191 {
	int id;
	T0* z1;
};

/* Struct for type detachable TUPLE */
struct S192 {
	int id;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ADAPTED_LIBRARY]] */
struct S193 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type ET_ECF_LIBRARY_PARSER */
struct S194 {
	int id;
	T0* a1; /* last_library */
	T0* a2; /* adapted_library */
	T0* a3; /* parsed_libraries */
	T0* a4; /* parsed_dotnet_assemblies */
	T0* a5; /* xml_parser */
	T0* a6; /* tree_pipe */
	T0* a7; /* error_handler */
	T0* a8; /* ast_factory */
	T0* a9; /* ise_version */
	T0* a10; /* library_parser */
};

/* Struct for type ET_ECF_ADAPTED_LIBRARY */
struct S195 {
	int id;
	T0* a1; /* library */
	T0* a2; /* name_id */
	T0* a3; /* filename */
	T0* a4; /* universe */
	T0* a5; /* name */
	T1 a6; /* is_read_only */
	T0* a7; /* classname_prefix */
	T0* a8; /* class_renamings */
	T0* a9; /* condition */
};

/* Struct for type ET_ADAPTED_DOTNET_ASSEMBLIES */
struct S196 {
	int id;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_ECF_DOTNET_ASSEMBLY */
struct S197 {
	int id;
	T0* a1; /* pathname */
	T0* a2; /* referenced_assemblies */
	T0* a3; /* current_system */
	T0* a4; /* dotnet_assembly */
	T0* a5; /* name */
	T0* a6; /* master_classes */
	T0* a7; /* any_type */
	T0* a8; /* detachable_any_type */
	T0* a9; /* any_parent */
	T0* a10; /* any_parents */
	T0* a11; /* any_clients */
	T0* a12; /* tuple_type */
	T0* a13; /* detachable_tuple_type */
	T0* a14; /* tuple_like_current_type */
	T0* a15; /* unfolded_empty_tuple_actual_parameters */
	T0* a16; /* array_any_type */
	T0* a17; /* array_detachable_any_type */
	T0* a18; /* array_like_current_type */
	T0* a19; /* boolean_type */
	T0* a20; /* character_type */
	T0* a21; /* character_8_type */
	T0* a22; /* character_8_convert_feature */
	T0* a23; /* character_32_type */
	T0* a24; /* character_32_convert_feature */
	T0* a25; /* double_type */
	T0* a26; /* exception_type */
	T0* a27; /* detachable_exception_type */
	T0* a28; /* exception_manager_type */
	T0* a29; /* function_type */
	T0* a30; /* integer_type */
	T0* a31; /* integer_8_type */
	T0* a32; /* integer_8_convert_feature */
	T0* a33; /* integer_16_type */
	T0* a34; /* integer_16_convert_feature */
	T0* a35; /* integer_32_type */
	T0* a36; /* integer_32_convert_feature */
	T0* a37; /* integer_64_type */
	T0* a38; /* integer_64_convert_feature */
	T0* a39; /* ise_exception_manager_type */
	T0* a40; /* iterable_detachable_any_type */
	T0* a41; /* natural_type */
	T0* a42; /* natural_8_type */
	T0* a43; /* natural_8_convert_feature */
	T0* a44; /* natural_16_type */
	T0* a45; /* natural_16_convert_feature */
	T0* a46; /* natural_32_type */
	T0* a47; /* natural_32_convert_feature */
	T0* a48; /* natural_64_type */
	T0* a49; /* natural_64_convert_feature */
	T0* a50; /* none_type */
	T0* a51; /* detachable_none_type */
	T0* a52; /* pointer_type */
	T0* a53; /* predicate_like_current_type */
	T0* a54; /* procedure_like_current_type */
	T0* a55; /* real_type */
	T0* a56; /* real_32_type */
	T0* a57; /* real_32_convert_feature */
	T0* a58; /* real_64_type */
	T0* a59; /* real_64_convert_feature */
	T0* a60; /* routine_type */
	T0* a61; /* special_any_type */
	T0* a62; /* special_detachable_any_type */
	T0* a63; /* string_type */
	T0* a64; /* string_8_type */
	T0* a65; /* string_8_convert_feature */
	T0* a66; /* string_32_type */
	T0* a67; /* string_32_convert_feature */
	T0* a68; /* system_object_type */
	T0* a69; /* system_object_parents */
	T0* a70; /* system_string_type */
	T0* a71; /* type_any_type */
	T0* a72; /* type_type_any_type */
	T0* a73; /* type_detachable_any_type */
	T0* a74; /* type_detachable_like_current_type */
	T0* a75; /* detachable_type_exception_type */
	T0* a76; /* type_detachable_exception_type */
	T0* a77; /* detachable_type_detachable_any_type */
	T0* a78; /* type_like_current_type */
	T0* a79; /* typed_pointer_any_type */
	T0* a80; /* typed_pointer_like_current_type */
	T0* a81; /* wide_character_type */
	T1 a82; /* is_read_only */
	T1 a83; /* is_preparsed */
};

/* Struct for type ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
struct S199 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* filename */
	T0* a3; /* universe */
	T1 a4; /* is_read_only */
	T0* a5; /* classname_prefix */
	T0* a6; /* class_renamings */
	T0* a7; /* condition */
	T0* a8; /* name */
	T0* a9; /* dotnet_assembly */
};

/* Struct for type ET_ECF_ERROR */
struct S200 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* universe */
	T0* a4; /* position */
	T0* a5; /* code */
};

/* Struct for type EXECUTION_ENVIRONMENT */
struct S201 {
	int id;
	T6 a1; /* return_code */
};

/* Struct for type ET_LACE_AST_FACTORY */
struct S202 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* ast_factory */
};

/* Struct for type DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S203 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type YY_FILE_BUFFER */
struct S204 {
	int id;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T0* a9; /* file */
	T1 a10; /* end_of_file */
	T6 a11; /* capacity */
	T1 a12; /* interactive */
};

/* Struct for type YY_BUFFER */
struct S205 {
	int id;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T6 a9; /* capacity */
};

/* Struct for type DS_HASH_SET [ET_IDENTIFIER] */
struct S206 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* special_item_routines */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* hash_function */
};

/* Struct for type SPECIAL [detachable ANY] */
struct S209 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ANY] */
struct S210 {
	int id;
};

/* Struct for type SPECIAL [ET_IDENTIFIER] */
struct S211 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
struct S212 {
	int id;
};

/* Struct for type ET_LACE_CLUSTERS */
struct S213 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_LACE_CLUSTER */
struct S214 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T1 a5; /* is_abstract */
	T1 a6; /* is_recursive */
	T1 a7; /* is_read_only */
	T0* a8; /* exclude */
	T0* a9; /* subclusters */
	T1 a10; /* overridden_constraint_enabled */
	T1 a11; /* scm_mapping_constraint_enabled */
	T0* a12; /* parent */
	T1 a13; /* is_override */
	T0* a14; /* provider_constraint */
	T0* a15; /* dependant_constraint */
	T0* a16; /* scm_read_mapping */
	T0* a17; /* scm_write_mapping */
	T1 a18; /* is_preparsed */
	T1 a19; /* is_implicit */
	T1 a20; /* use_obsolete_syntax */
	T0* a21; /* cached_absolute_pathname */
};

/* Struct for type ET_LACE_EXCLUDE */
struct S215 {
	int id;
	T0* a1; /* identifiers */
};

/* Struct for type ET_LACE_DOTNET_ASSEMBLY */
struct S216 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T0* a3; /* classname_prefix_id */
	T0* a4; /* pathname */
	T0* a5; /* referenced_assemblies */
	T0* a6; /* classname_prefix */
	T0* a7; /* current_system */
	T0* a8; /* dotnet_assembly */
	T0* a9; /* name */
	T0* a10; /* master_classes */
	T0* a11; /* any_type */
	T0* a12; /* detachable_any_type */
	T0* a13; /* any_parent */
	T0* a14; /* any_parents */
	T0* a15; /* any_clients */
	T0* a16; /* tuple_type */
	T0* a17; /* detachable_tuple_type */
	T0* a18; /* tuple_like_current_type */
	T0* a19; /* unfolded_empty_tuple_actual_parameters */
	T0* a20; /* array_any_type */
	T0* a21; /* array_detachable_any_type */
	T0* a22; /* array_like_current_type */
	T0* a23; /* boolean_type */
	T0* a24; /* character_type */
	T0* a25; /* character_8_type */
	T0* a26; /* character_8_convert_feature */
	T0* a27; /* character_32_type */
	T0* a28; /* character_32_convert_feature */
	T0* a29; /* double_type */
	T0* a30; /* exception_type */
	T0* a31; /* detachable_exception_type */
	T0* a32; /* exception_manager_type */
	T0* a33; /* function_type */
	T0* a34; /* integer_type */
	T0* a35; /* integer_8_type */
	T0* a36; /* integer_8_convert_feature */
	T0* a37; /* integer_16_type */
	T0* a38; /* integer_16_convert_feature */
	T0* a39; /* integer_32_type */
	T0* a40; /* integer_32_convert_feature */
	T0* a41; /* integer_64_type */
	T0* a42; /* integer_64_convert_feature */
	T0* a43; /* ise_exception_manager_type */
	T0* a44; /* iterable_detachable_any_type */
	T0* a45; /* natural_type */
	T0* a46; /* natural_8_type */
	T0* a47; /* natural_8_convert_feature */
	T0* a48; /* natural_16_type */
	T0* a49; /* natural_16_convert_feature */
	T0* a50; /* natural_32_type */
	T0* a51; /* natural_32_convert_feature */
	T0* a52; /* natural_64_type */
	T0* a53; /* natural_64_convert_feature */
	T0* a54; /* none_type */
	T0* a55; /* detachable_none_type */
	T0* a56; /* pointer_type */
	T0* a57; /* predicate_like_current_type */
	T0* a58; /* procedure_like_current_type */
	T0* a59; /* real_type */
	T0* a60; /* real_32_type */
	T0* a61; /* real_32_convert_feature */
	T0* a62; /* real_64_type */
	T0* a63; /* real_64_convert_feature */
	T0* a64; /* routine_type */
	T0* a65; /* special_any_type */
	T0* a66; /* special_detachable_any_type */
	T0* a67; /* string_type */
	T0* a68; /* string_8_type */
	T0* a69; /* string_8_convert_feature */
	T0* a70; /* string_32_type */
	T0* a71; /* string_32_convert_feature */
	T0* a72; /* system_object_type */
	T0* a73; /* system_object_parents */
	T0* a74; /* system_string_type */
	T0* a75; /* type_any_type */
	T0* a76; /* type_type_any_type */
	T0* a77; /* type_detachable_any_type */
	T0* a78; /* type_detachable_like_current_type */
	T0* a79; /* detachable_type_exception_type */
	T0* a80; /* type_detachable_exception_type */
	T0* a81; /* detachable_type_detachable_any_type */
	T0* a82; /* type_like_current_type */
	T0* a83; /* typed_pointer_any_type */
	T0* a84; /* typed_pointer_like_current_type */
	T0* a85; /* wide_character_type */
	T1 a86; /* is_read_only */
	T1 a87; /* is_preparsed */
	T0* a88; /* class_renamings */
};

/* Struct for type SPECIAL [ET_LACE_SYSTEM] */
struct S217 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [detachable ET_LACE_CLUSTERS] */
struct S218 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
struct S219 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM] */
struct S220 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS] */
struct S221 {
	int id;
};

/* Struct for type SPECIAL [ET_LACE_CLUSTER] */
struct S222 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
struct S223 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_LACE_EXCLUDE] */
struct S224 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE] */
struct S225 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
struct S226 {
	int id;
};

/* Struct for type SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
struct S227 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
struct S228 {
	int id;
};

/* Struct for type ET_LACE_DOTNET_GAC_ASSEMBLY */
struct S229 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* assembly_name_id */
	T0* a3; /* classname_prefix_id */
	T0* a4; /* assembly_version_id */
	T0* a5; /* assembly_culture_id */
	T0* a6; /* assembly_public_key_token_id */
	T0* a7; /* assembly_name */
	T0* a8; /* classname_prefix */
	T0* a9; /* assembly_version */
	T0* a10; /* assembly_culture */
	T0* a11; /* assembly_public_key_token */
	T0* a12; /* pathname */
	T0* a13; /* referenced_assemblies */
	T0* a14; /* current_system */
	T0* a15; /* dotnet_assembly */
	T0* a16; /* name */
	T0* a17; /* master_classes */
	T0* a18; /* any_type */
	T0* a19; /* detachable_any_type */
	T0* a20; /* any_parent */
	T0* a21; /* any_parents */
	T0* a22; /* any_clients */
	T0* a23; /* tuple_type */
	T0* a24; /* detachable_tuple_type */
	T0* a25; /* tuple_like_current_type */
	T0* a26; /* unfolded_empty_tuple_actual_parameters */
	T0* a27; /* array_any_type */
	T0* a28; /* array_detachable_any_type */
	T0* a29; /* array_like_current_type */
	T0* a30; /* boolean_type */
	T0* a31; /* character_type */
	T0* a32; /* character_8_type */
	T0* a33; /* character_8_convert_feature */
	T0* a34; /* character_32_type */
	T0* a35; /* character_32_convert_feature */
	T0* a36; /* double_type */
	T0* a37; /* exception_type */
	T0* a38; /* detachable_exception_type */
	T0* a39; /* exception_manager_type */
	T0* a40; /* function_type */
	T0* a41; /* integer_type */
	T0* a42; /* integer_8_type */
	T0* a43; /* integer_8_convert_feature */
	T0* a44; /* integer_16_type */
	T0* a45; /* integer_16_convert_feature */
	T0* a46; /* integer_32_type */
	T0* a47; /* integer_32_convert_feature */
	T0* a48; /* integer_64_type */
	T0* a49; /* integer_64_convert_feature */
	T0* a50; /* ise_exception_manager_type */
	T0* a51; /* iterable_detachable_any_type */
	T0* a52; /* natural_type */
	T0* a53; /* natural_8_type */
	T0* a54; /* natural_8_convert_feature */
	T0* a55; /* natural_16_type */
	T0* a56; /* natural_16_convert_feature */
	T0* a57; /* natural_32_type */
	T0* a58; /* natural_32_convert_feature */
	T0* a59; /* natural_64_type */
	T0* a60; /* natural_64_convert_feature */
	T0* a61; /* none_type */
	T0* a62; /* detachable_none_type */
	T0* a63; /* pointer_type */
	T0* a64; /* predicate_like_current_type */
	T0* a65; /* procedure_like_current_type */
	T0* a66; /* real_type */
	T0* a67; /* real_32_type */
	T0* a68; /* real_32_convert_feature */
	T0* a69; /* real_64_type */
	T0* a70; /* real_64_convert_feature */
	T0* a71; /* routine_type */
	T0* a72; /* special_any_type */
	T0* a73; /* special_detachable_any_type */
	T0* a74; /* string_type */
	T0* a75; /* string_8_type */
	T0* a76; /* string_8_convert_feature */
	T0* a77; /* string_32_type */
	T0* a78; /* string_32_convert_feature */
	T0* a79; /* system_object_type */
	T0* a80; /* system_object_parents */
	T0* a81; /* system_string_type */
	T0* a82; /* type_any_type */
	T0* a83; /* type_type_any_type */
	T0* a84; /* type_detachable_any_type */
	T0* a85; /* type_detachable_like_current_type */
	T0* a86; /* detachable_type_exception_type */
	T0* a87; /* type_detachable_exception_type */
	T0* a88; /* detachable_type_detachable_any_type */
	T0* a89; /* type_like_current_type */
	T0* a90; /* typed_pointer_any_type */
	T0* a91; /* typed_pointer_like_current_type */
	T0* a92; /* wide_character_type */
	T1 a93; /* is_read_only */
	T1 a94; /* is_preparsed */
	T0* a95; /* class_renamings */
};

/* Struct for type KL_PLATFORM */
struct S230 {
	int id;
};

/* Struct for type KL_INTEGER_ROUTINES */
struct S231 {
	int id;
};

/* Struct for type DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
struct S232 {
	int id;
	T6 a1; /* capacity */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* last_position */
	T0* a5; /* equality_tester */
	T6 a6; /* modulus */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* special_key_routines */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* internal_cursor */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
struct S233 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] TUPLE [ET_CLASS] */
struct S234 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLASS]] */
struct S235 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [INTEGER_32] */
struct S236 {
	int id;
	T6 z1;
};

/* Struct for type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
struct S237 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_dynamic_system */
	T1 a3; /* catcall_error_mode */
	T1 a4; /* catcall_warning_mode */
	T1 a5; /* no_debug */
	T1 a6; /* no_assertion */
};

/* Struct for type ET_DYNAMIC_TYPE */
struct S238 {
	int id;
	T0* a1; /* base_type */
	T6 a2; /* attribute_count */
	T0* a3; /* queries */
	T1 a4; /* is_alive */
	T6 a5; /* id */
	T0* a6; /* base_class */
	T0* a7; /* meta_type */
	T0* a8; /* procedures */
	T6 a9; /* hash_code */
	T0* a10; /* conforming_dynamic_types */
	T0* a11; /* all_conforming_dynamic_types */
	T0* a12; /* next_type */
	T1 a13; /* has_reference_attributes */
	T1 a14; /* has_generic_expanded_attributes */
	T0* a15; /* query_calls */
	T1 a16; /* has_static */
	T0* a17; /* procedure_calls */
	T0* a18; /* equality_expressions */
	T0* a19; /* object_equality_expressions */
};

/* Struct for type DT_SHARED_SYSTEM_CLOCK */
struct S239 {
	int id;
};

/* Struct for type DT_DATE_TIME */
struct S240 {
	int id;
	T6 a1; /* time_storage */
	T6 a2; /* date_storage */
};

/* Struct for type DT_SYSTEM_CLOCK */
struct S241 {
	int id;
	T6 a1; /* second */
	T6 a2; /* year */
	T6 a3; /* month */
	T6 a4; /* day */
	T6 a5; /* hour */
	T6 a6; /* minute */
	T6 a7; /* millisecond */
	T0* a8; /* local_clock */
};

/* Struct for type [attached] TUPLE [ET_DYNAMIC_SYSTEM] */
struct S242 {
	int id;
	T0* z1;
};

/* Struct for type ET_DYNAMIC_FEATURE */
struct S247 {
	int id;
	T0* a1; /* static_feature */
	T0* a2; /* dynamic_type_sets */
	T6 a3; /* id */
	T1 a4; /* is_generated */
	T0* a5; /* result_type_set */
	T0* a6; /* target_type */
	T6 a7; /* builtin_code */
	T1 a8; /* is_regular */
	T0* a9; /* first_precursor */
	T1 a10; /* is_creation */
	T0* a11; /* other_precursors */
	T1 a12; /* is_built */
	T1 a13; /* is_current_type_needed */
	T1 a14; /* is_static */
	T1 a15; /* is_address */
};

/* Struct for type ET_ACTUAL_PARAMETER_LIST */
struct S251 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type ET_EXTERNAL_FUNCTION */
struct S259 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T0* a6; /* preconditions */
	T6 a7; /* hash_code */
	T6 a8; /* builtin_code */
	T0* a9; /* arguments */
	T0* a10; /* postconditions */
	T0* a11; /* assigner */
	T0* a12; /* declared_type */
	T0* a13; /* other_seeds */
	T0* a14; /* extended_name */
	T0* a15; /* frozen_keyword */
	T0* a16; /* language */
	T0* a17; /* obsolete_message */
	T0* a18; /* alias_clause */
	T0* a19; /* clients */
	T0* a20; /* is_keyword */
	T0* a21; /* end_keyword */
	T0* a22; /* semicolon */
	T0* a23; /* feature_clause */
	T0* a24; /* first_indexing */
	T0* a25; /* object_tests */
	T0* a26; /* across_components */
	T6 a27; /* id */
	T6 a28; /* version */
	T1 a29; /* validity_checked */
	T1 a30; /* has_validity_error */
	T0* a31; /* synonym */
};

/* Struct for type ET_TUPLE_TYPE */
struct S260 {
	int id;
	T0* a1; /* named_base_class */
	T0* a2; /* actual_parameters */
	T0* a3; /* type_mark */
	T0* a4; /* tuple_keyword */
};

/* Struct for type ET_FORMAL_ARGUMENT_LIST */
struct S261 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type SPECIAL [ET_TYPE] */
struct S262 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable ARRAY [ET_TYPE] */
struct S263 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ET_FORMAL_ARGUMENT */
struct S264 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type ET_QUERY_LIST */
struct S265 {
	int id;
	T6 a1; /* count */
	T6 a2; /* declared_count */
	T0* a3; /* storage */
};

/* Struct for type ET_PROCEDURE_LIST */
struct S266 {
	int id;
	T6 a1; /* count */
	T6 a2; /* declared_count */
	T0* a3; /* storage */
};

/* Struct for type KL_NULL_TEXT_OUTPUT_STREAM */
struct S267 {
	int id;
	T0* a1; /* name */
};

/* Struct for type ET_DYNAMIC_TYPE_SET_LIST */
struct S268 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type KL_STRING_OUTPUT_STREAM */
struct S269 {
	int id;
	T0* a1; /* string */
};

/* Struct for type DS_ARRAYED_LIST [ET_IDENTIFIER] */
struct S270 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [INTEGER_32] */
struct S271 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_TYPE_HASH_LIST */
struct S272 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* clashes */
	T0* a4; /* slots */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET */
struct S273 {
	int id;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
};

/* Struct for type DS_ARRAYED_STACK [ET_EXPRESSION] */
struct S274 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_EXPRESSION] */
struct S275 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S276 {
	int id;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* last_position */
	T6 a4; /* capacity */
	T6 a5; /* count */
	T6 a6; /* free_slot */
	T6 a7; /* slots_position */
	T6 a8; /* modulus */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* key_equality_tester */
	T0* a11; /* equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
struct S277 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TYPE] */
struct S278 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S279 {
	int id;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_OBJECT_TEST] */
struct S280 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION] */
struct S281 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
struct S282 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_AGENT] */
struct S283 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_EXPRESSION */
struct S284 {
	int id;
};

/* Struct for type ET_CURRENT */
struct S285 {
	int id;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_ACTUAL_ARGUMENT_LIST */
struct S286 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_symbol */
	T0* a4; /* right_symbol */
};

/* Struct for type ET_QUALIFIED_CALL_INSTRUCTION */
struct S287 {
	int id;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
	T0* a4; /* parenthesis_call */
};

/* Struct for type ET_QUALIFIED_CALL_EXPRESSION */
struct S290 {
	int id;
	T0* a1; /* target */
	T6 a2; /* index */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* parenthesis_call */
};

/* Struct for type ET_UNQUALIFIED_CALL_EXPRESSION */
struct S291 {
	int id;
	T0* a1; /* name */
	T0* a2; /* arguments */
	T6 a3; /* index */
	T0* a4; /* parenthesis_call */
};

/* Struct for type DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S292 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_MANIFEST_TUPLE */
struct S293 {
	int id;
	T0* a1; /* left_symbol */
	T0* a2; /* right_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
	T6 a5; /* index */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
struct S294 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_FEATURE] */
struct S295 {
	int id;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* count */
	T6 a7; /* slots_position */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
struct S296 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
struct S297 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
struct S298 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T0* a10; /* internal_cursor */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
struct S299 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, STRING_8] */
struct S300 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* count */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* capacity */
	T6 a11; /* slots_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* equality_tester */
	T6 a15; /* found_position */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_IDENTIFIER_TESTER */
struct S301 {
	int id;
};

/* Struct for type detachable KL_EQUALITY_TESTER [ET_IDENTIFIER] */
struct S302 {
	int id;
};

/* Struct for type RX_PCRE_REGULAR_EXPRESSION */
struct S303 {
	int id;
	T0* a1; /* subject */
	T6 a2; /* subject_end */
	T6 a3; /* subject_start */
	T6 a4; /* match_count */
	T0* a5; /* offset_vector */
	T6 a6; /* offset_vector_count */
	T6 a7; /* brastart_capacity */
	T0* a8; /* brastart_vector */
	T6 a9; /* brastart_lower */
	T6 a10; /* brastart_count */
	T6 a11; /* eptr_capacity */
	T0* a12; /* eptr_vector */
	T6 a13; /* eptr_lower */
	T6 a14; /* eptr_upper */
	T0* a15; /* byte_code */
	T0* a16; /* internal_start_bits */
	T0* a17; /* pattern_buffer */
	T6 a18; /* subexpression_count */
	T0* a19; /* pattern */
	T6 a20; /* pattern_count */
	T6 a21; /* pattern_position */
	T6 a22; /* code_index */
	T6 a23; /* maxbackrefs */
	T6 a24; /* optchanged */
	T6 a25; /* first_character */
	T6 a26; /* required_character */
	T6 a27; /* regexp_countlits */
	T0* a28; /* start_bits */
	T0* a29; /* error_message */
	T1 a30; /* is_anchored */
	T0* a31; /* character_case_mapping */
	T0* a32; /* word_set */
	T6 a33; /* subject_next_start */
	T6 a34; /* error_code */
	T6 a35; /* error_position */
	T1 a36; /* is_startline */
	T1 a37; /* is_caseless */
	T1 a38; /* is_bol */
	T1 a39; /* is_eol */
	T1 a40; /* is_multiline */
	T1 a41; /* is_dotall */
	T1 a42; /* is_extended */
	T1 a43; /* is_empty_allowed */
	T1 a44; /* is_dollar_endonly */
	T1 a45; /* is_greedy */
	T1 a46; /* is_strict */
	T1 a47; /* is_ichanged */
	T6 a48; /* first_matched_index */
	T6 a49; /* eptr */
	T6 a50; /* offset_top */
	T1 a51; /* is_matching_caseless */
	T1 a52; /* is_matching_multiline */
	T1 a53; /* is_matching_dotall */
};

/* Struct for type KL_TEXT_OUTPUT_FILE */
struct S304 {
	int id;
	T0* a1; /* name */
	T6 a2; /* mode */
	T14 a3; /* file_pointer */
	T1 a4; /* descriptor_available */
	T0* a5; /* last_string */
	T0* a6; /* internal_name */
	T0* a7; /* internal_detachable_name_pointer */
};

/* Struct for type ET_DYNAMIC_TUPLE_TYPE */
struct S305 {
	int id;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T0* a8; /* procedures */
	T0* a9; /* item_type_sets */
	T1 a10; /* has_reference_attributes */
	T1 a11; /* has_generic_expanded_attributes */
	T6 a12; /* hash_code */
	T0* a13; /* next_type */
	T0* a14; /* conforming_dynamic_types */
	T0* a15; /* query_calls */
	T0* a16; /* all_conforming_dynamic_types */
	T1 a17; /* has_static */
	T0* a18; /* procedure_calls */
	T0* a19; /* equality_expressions */
	T0* a20; /* object_equality_expressions */
};

/* Struct for type UT_TEMPLATE_EXPANDER */
struct S306 {
	int id;
};

/* Struct for type UT_CANNOT_WRITE_TO_FILE_ERROR */
struct S307 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_DYNAMIC_FEATURE_LIST */
struct S308 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DYNAMIC_PRECURSOR */
struct S309 {
	int id;
	T1 a1; /* is_generated */
	T0* a2; /* current_feature */
	T6 a3; /* id */
	T0* a4; /* target_type */
	T0* a5; /* static_feature */
	T0* a6; /* dynamic_type_sets */
	T1 a7; /* is_regular */
	T1 a8; /* is_creation */
	T1 a9; /* is_static */
	T1 a10; /* is_address */
	T0* a11; /* result_type_set */
	T6 a12; /* builtin_code */
	T0* a13; /* first_precursor */
	T0* a14; /* other_precursors */
	T1 a15; /* is_built */
	T0* a16; /* parent_type */
	T1 a17; /* is_current_type_needed */
};

/* Struct for type ET_DYNAMIC_PRECURSOR_LIST */
struct S310 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
struct S311 {
	int id;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* items */
	T0* a5; /* counts */
	T0* a6; /* successors */
};

/* Struct for type ET_RESULT */
struct S312 {
	int id;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
struct S313 {
	int id;
	T0* a1; /* static_call */
	T0* a2; /* target_type_set */
	T0* a3; /* result_type_set */
	T0* a4; /* current_feature */
	T0* a5; /* current_type */
	T0* a6; /* next */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
struct S317 {
	int id;
	T0* a1; /* target_type_set */
	T0* a2; /* next */
	T0* a3; /* static_call */
	T0* a4; /* current_feature */
	T0* a5; /* current_type */
};

/* Struct for type ET_OBJECT_TEST */
struct S319 {
	int id;
	T6 a1; /* index */
	T0* a2; /* attached_keyword */
	T0* a3; /* declared_type */
	T0* a4; /* expression */
};

/* Struct for type ET_OBJECT_EQUALITY_EXPRESSION */
struct S320 {
	int id;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type ET_EQUALITY_EXPRESSION */
struct S321 {
	int id;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type ET_DYNAMIC_SPECIAL_TYPE */
struct S322 {
	int id;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T0* a8; /* item_type_set */
	T0* a9; /* procedures */
	T1 a10; /* has_reference_attributes */
	T1 a11; /* has_generic_expanded_attributes */
	T6 a12; /* hash_code */
	T0* a13; /* next_type */
	T0* a14; /* conforming_dynamic_types */
	T0* a15; /* query_calls */
	T0* a16; /* all_conforming_dynamic_types */
	T1 a17; /* has_static */
	T0* a18; /* procedure_calls */
	T0* a19; /* equality_expressions */
	T0* a20; /* object_equality_expressions */
};

/* Struct for type ET_CREATE_EXPRESSION */
struct S325 {
	int id;
	T6 a1; /* index */
	T0* a2; /* creation_call */
	T0* a3; /* creation_type */
	T0* a4; /* create_keyword */
};

/* Struct for type ET_QUALIFIED_CALL */
struct S326 {
	int id;
	T0* a1; /* arguments */
	T0* a2; /* qualified_name */
};

/* Struct for type KL_DIRECTORY */
struct S329 {
	int id;
	T1 a1; /* end_of_input */
	T0* a2; /* last_entry */
	T6 a3; /* mode */
	T0* a4; /* name */
	T0* a5; /* entry_buffer */
	T0* a6; /* lastentry */
	T14 a7; /* directory_pointer */
	T14 a8; /* last_entry_pointer */
	T0* a9; /* internal_name */
	T0* a10; /* internal_detachable_name_pointer */
};

/* Struct for type ET_EXTENDED_ATTRIBUTE */
struct S330 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* compound */
	T0* a4; /* locals */
	T0* a5; /* rescue_clause */
	T0* a6; /* implementation_feature */
	T0* a7; /* first_precursor */
	T0* a8; /* other_precursors */
	T0* a9; /* preconditions */
	T6 a10; /* hash_code */
	T0* a11; /* postconditions */
	T0* a12; /* assigner */
	T6 a13; /* version */
	T0* a14; /* other_seeds */
	T0* a15; /* extended_name */
	T0* a16; /* declared_type */
	T0* a17; /* obsolete_message */
	T0* a18; /* clients */
	T0* a19; /* end_keyword */
	T0* a20; /* semicolon */
	T0* a21; /* feature_clause */
	T0* a22; /* first_indexing */
	T0* a23; /* object_tests */
	T0* a24; /* across_components */
	T0* a25; /* frozen_keyword */
	T6 a26; /* id */
	T1 a27; /* validity_checked */
	T1 a28; /* has_validity_error */
	T0* a29; /* synonym */
};

/* Struct for type ET_COMPOUND */
struct S331 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* keyword */
};

/* Struct for type ET_LOCAL_VARIABLE_LIST */
struct S332 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* local_keyword */
};

/* Struct for type ET_DYNAMIC_FUNCTION_TYPE */
struct S333 {
	int id;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T0* a8; /* procedures */
	T0* a9; /* result_type_set */
	T0* a10; /* open_operand_type_sets */
	T6 a11; /* hash_code */
	T0* a12; /* next_type */
	T0* a13; /* conforming_dynamic_types */
	T0* a14; /* query_calls */
	T1 a15; /* has_reference_attributes */
	T1 a16; /* has_generic_expanded_attributes */
	T0* a17; /* all_conforming_dynamic_types */
	T1 a18; /* has_static */
	T0* a19; /* procedure_calls */
	T0* a20; /* equality_expressions */
	T0* a21; /* object_equality_expressions */
};

/* Struct for type ET_DYNAMIC_PROCEDURE_TYPE */
struct S334 {
	int id;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T0* a8; /* procedures */
	T0* a9; /* open_operand_type_sets */
	T6 a10; /* hash_code */
	T0* a11; /* next_type */
	T0* a12; /* conforming_dynamic_types */
	T0* a13; /* query_calls */
	T1 a14; /* has_reference_attributes */
	T1 a15; /* has_generic_expanded_attributes */
	T0* a16; /* all_conforming_dynamic_types */
	T1 a17; /* has_static */
	T0* a18; /* procedure_calls */
	T0* a19; /* equality_expressions */
	T0* a20; /* object_equality_expressions */
};

/* Struct for type DS_QUICK_SORTER [INTEGER_32] */
struct S338 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type ET_IMPLICIT_TYPE_MARK */
struct S344 {
	int id;
	T1 a1; /* is_expanded_mark */
	T1 a2; /* is_reference_mark */
	T1 a3; /* is_attached_mark */
	T1 a4; /* is_separate_mark */
	T1 a5; /* is_detachable_mark */
};

/* Struct for type ET_SYMBOL */
struct S345 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE] */
struct S346 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*);
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S347 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S348 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S350 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S351 {
	int id;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type UT_INTEGER_FORMATTER */
struct S352 {
	int id;
};

/* Struct for type STD_FILES */
struct S356 {
	int id;
	T0* a1; /* default_output */
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S358 {
	int id;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
struct S360 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S361 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
	T1 z4;
};

/* Struct for type ET_CONSTANT_ATTRIBUTE */
struct S362 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* constant */
	T0* a4; /* implementation_feature */
	T0* a5; /* first_precursor */
	T0* a6; /* other_precursors */
	T6 a7; /* hash_code */
	T0* a8; /* assigner */
	T6 a9; /* version */
	T0* a10; /* other_seeds */
	T0* a11; /* declared_type */
	T0* a12; /* clients */
	T0* a13; /* is_keyword */
	T0* a14; /* semicolon */
	T0* a15; /* feature_clause */
	T0* a16; /* first_indexing */
	T0* a17; /* object_tests */
	T0* a18; /* across_components */
	T0* a19; /* extended_name */
	T0* a20; /* frozen_keyword */
	T6 a21; /* id */
	T1 a22; /* validity_checked */
	T1 a23; /* has_validity_error */
	T0* a24; /* synonym */
};

/* Struct for type ET_UNIQUE_ATTRIBUTE */
struct S364 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T6 a6; /* hash_code */
	T0* a7; /* assigner */
	T6 a8; /* version */
	T0* a9; /* other_seeds */
	T0* a10; /* declared_type */
	T0* a11; /* clients */
	T0* a12; /* is_keyword */
	T0* a13; /* unique_keyword */
	T0* a14; /* semicolon */
	T0* a15; /* feature_clause */
	T0* a16; /* first_indexing */
	T0* a17; /* object_tests */
	T0* a18; /* across_components */
	T0* a19; /* frozen_keyword */
	T0* a20; /* extended_name */
	T6 a21; /* id */
	T1 a22; /* validity_checked */
	T1 a23; /* has_validity_error */
	T0* a24; /* synonym */
};

/* Struct for type ET_ATTRIBUTE */
struct S365 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T6 a6; /* hash_code */
	T0* a7; /* assigner */
	T6 a8; /* version */
	T0* a9; /* extended_name */
	T0* a10; /* declared_type */
	T0* a11; /* clients */
	T0* a12; /* semicolon */
	T0* a13; /* feature_clause */
	T0* a14; /* first_indexing */
	T0* a15; /* object_tests */
	T0* a16; /* across_components */
	T0* a17; /* frozen_keyword */
	T6 a18; /* id */
	T0* a19; /* other_seeds */
	T1 a20; /* validity_checked */
	T1 a21; /* has_validity_error */
	T0* a22; /* synonym */
};

/* Struct for type NATIVE_STRING */
struct S367 {
	int id;
	T0* a1; /* managed_data */
	T6 a2; /* unit_count */
};

/* Struct for type DS_HASH_SET_CURSOR [STRING_8] */
struct S368 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_FEATURE_CHECKER */
struct S369 {
	int id;
	T0* a1; /* type_checker */
	T0* a2; /* current_class */
	T0* a3; /* current_type */
	T0* a4; /* current_feature */
	T0* a5; /* current_feature_impl */
	T0* a6; /* current_class_impl */
	T0* a7; /* enclosing_inline_agents */
	T0* a8; /* unused_overloaded_procedures_list */
	T0* a9; /* unused_overloaded_queries_list */
	T0* a10; /* unused_overloaded_features_list */
	T0* a11; /* unused_contexts */
	T0* a12; /* current_context */
	T0* a13; /* current_target_type */
	T0* a14; /* current_object_test_types */
	T0* a15; /* current_object_test_scope */
	T0* a16; /* object_test_scope_builder */
	T0* a17; /* current_across_cursor_types */
	T0* a18; /* current_across_cursor_scope */
	T0* a19; /* current_initialization_scope */
	T0* a20; /* current_attachment_scope */
	T0* a21; /* attachment_scope_builder */
	T0* a22; /* unused_attachment_scopes */
	T1 a23; /* has_fatal_error */
	T1 a24; /* in_precondition */
	T0* a25; /* supplier_handler */
	T1 a26; /* in_invariant */
	T0* a27; /* precursor_queries */
	T0* a28; /* precursor_procedures */
	T1 a29; /* in_postcondition */
	T1 a30; /* in_precursor */
	T1 a31; /* in_rescue */
	T0* a32; /* current_inline_agent */
	T1 a33; /* in_check_instruction */
};

/* Struct for type DS_CELL [INTEGER_32] */
struct S370 {
	int id;
	T6 a1; /* item */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S371 {
	int id;
	T6 a1; /* position */
	T6 a2; /* count */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* modulus */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* key_equality_tester */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T6 a12; /* found_position */
	T0* a13; /* item_storage */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_TYPE_CHECKER */
struct S372 {
	int id;
	T0* a1; /* current_context */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_feature_impl */
	T0* a4; /* constraint_context */
	T0* a5; /* current_class */
	T0* a6; /* supplier_handler */
	T1 a7; /* has_fatal_error */
	T1 a8; /* class_interface_error_only */
	T1 a9; /* in_qualified_anchored_type */
};

/* Struct for type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
struct S374 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S375 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
struct S376 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S377 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
struct S378 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_NESTED_TYPE_CONTEXT */
struct S379 {
	int id;
	T0* a1; /* root_context */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
struct S380 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T6 a9; /* found_position */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type ET_OBJECT_TEST_SCOPE */
struct S381 {
	int id;
	T0* a1; /* object_tests */
	T6 a2; /* hidden_count */
};

/* Struct for type ET_OBJECT_TEST_SCOPE_BUILDER */
struct S382 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* scope */
	T1 a4; /* is_negated */
};

/* Struct for type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
struct S383 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T6 a9; /* found_position */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ACROSS_CURSOR_SCOPE */
struct S384 {
	int id;
	T6 a1; /* hidden_count */
	T0* a2; /* across_components */
};

/* Struct for type ET_ATTACHMENT_SCOPE */
struct S385 {
	int id;
	T0* a1; /* locals_attached */
	T0* a2; /* arguments_attached */
	T0* a3; /* attributes_attached */
	T1 a4; /* result_attached */
	T1 a5; /* is_code_unreachable */
};

/* Struct for type ET_ATTACHMENT_SCOPE_BUILDER */
struct S386 {
	int id;
	T0* a1; /* scope */
	T1 a2; /* is_negated */
};

/* Struct for type DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
struct S387 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_PRECONDITIONS */
struct S388 {
	int id;
	T6 a1; /* count */
	T1 a2; /* validity_checked */
	T1 a3; /* has_validity_error */
	T0* a4; /* else_keyword */
	T0* a5; /* storage */
	T0* a6; /* require_keyword */
};

/* Struct for type DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE] */
struct S389 {
	int id;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* hash_function */
};

/* Struct for type ET_FEATURE_LIST */
struct S391 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_UNKNOWN_GROUP */
struct S393 {
	int id;
	T0* a1; /* name */
	T1 a2; /* use_obsolete_syntax */
	T0* a3; /* cached_absolute_pathname */
};

/* Struct for type ET_BASE_TYPE_LIST */
struct S395 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_KEYWORD */
struct S396 {
	int id;
	T0* a1; /* text */
	T2 a2; /* code */
	T6 a3; /* compressed_position */
};

/* Struct for type ET_CLASS_CODES */
struct S397 {
	int id;
};

/* Struct for type ARGUMENTS_32 */
struct S399 {
	int id;
};

/* Struct for type IMMUTABLE_STRING_32 */
struct S400 {
	int id;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* area_lower */
};

/* Struct for type ET_AST_FACTORY */
struct S402 {
	int id;
};

/* Struct for type ET_XACE_EXTERNALS */
struct S403 {
	int id;
	T0* a1; /* c_compiler_options */
	T0* a2; /* include_directories */
	T0* a3; /* link_libraries */
};

/* Struct for type ET_XACE_OPTIONS */
struct S404 {
	int id;
	T0* a1; /* declared_override_cluster */
	T0* a2; /* declared_console_application */
	T0* a3; /* declared_exception_trace */
	T0* a4; /* declared_trace */
	T0* a5; /* declared_garbage_collector */
	T0* a6; /* declared_c_compiler_options */
	T0* a7; /* declared_header */
	T0* a8; /* declared_link */
	T0* a9; /* declared_abstract */
	T0* a10; /* declared_recursive */
	T0* a11; /* declared_read_only */
	T6 a12; /* declared_fst_expansion_factor */
	T6 a13; /* declared_heap_size */
	T6 a14; /* declared_inlining_size */
	T6 a15; /* declared_msil_classes_per_module */
	T6 a16; /* declared_stack_size */
	T0* a17; /* declared_address_expression */
	T0* a18; /* declared_arguments */
	T0* a19; /* declared_array_optimization */
	T0* a20; /* declared_assembly */
	T0* a21; /* declared_assertion */
	T0* a22; /* declared_attached_by_default */
	T0* a23; /* declared_automatic_backup */
	T0* a24; /* declared_callback */
	T0* a25; /* declared_case_insensitive */
	T0* a26; /* declared_check_vape */
	T0* a27; /* declared_clean */
	T0* a28; /* declared_cls_compliant */
	T0* a29; /* declared_component */
	T0* a30; /* declared_create_keyword_extension */
	T0* a31; /* declared_culture */
	T0* a32; /* declared_dead_code_removal */
	T0* a33; /* declared_debug_option */
	T0* a34; /* declared_debug_tag */
	T0* a35; /* declared_debugger */
	T0* a36; /* declared_document */
	T0* a37; /* declared_dotnet_naming_convention */
	T0* a38; /* declared_dynamic_runtime */
	T0* a39; /* declared_ecf_library */
	T0* a40; /* declared_enforce_unique_class_names */
	T0* a41; /* declared_exclude */
	T0* a42; /* declared_export_option */
	T0* a43; /* declared_external_runtime */
	T0* a44; /* declared_finalize_option */
	T0* a45; /* declared_flat_fst_optimization */
	T0* a46; /* declared_force_32bits */
	T0* a47; /* declared_fst_optimization */
	T0* a48; /* declared_full_class_checking */
	T0* a49; /* declared_gc_info */
	T0* a50; /* declared_high_memory_compiler */
	T0* a51; /* declared_il_verifiable */
	T0* a52; /* declared_include */
	T0* a53; /* declared_inlining */
	T0* a54; /* declared_jumps_optimization */
	T0* a55; /* declared_layout */
	T0* a56; /* declared_layout_optimization */
	T0* a57; /* declared_leaves_optimization */
	T0* a58; /* declared_line_generation */
	T0* a59; /* declared_linker */
	T0* a60; /* declared_linux_fpu_double_precision */
	T0* a61; /* declared_manifest_string_trace */
	T0* a62; /* declared_map */
	T0* a63; /* declared_metadata_cache_path */
	T0* a64; /* declared_msil_assembly_compatibility */
	T0* a65; /* declared_msil_clr_version */
	T0* a66; /* declared_msil_culture */
	T0* a67; /* declared_msil_generation */
	T0* a68; /* declared_msil_generation_version */
	T0* a69; /* declared_msil_key_file_name */
	T0* a70; /* declared_msil_use_optimized_precompile */
	T0* a71; /* declared_multithreaded */
	T0* a72; /* declared_namespace */
	T0* a73; /* declared_no_default_lib */
	T0* a74; /* declared_old_verbatim_strings */
	T0* a75; /* declared_portable_code_generation */
	T0* a76; /* declared_precompiled */
	T0* a77; /* declared_prefix_option */
	T0* a78; /* declared_profile */
	T0* a79; /* declared_public_key_token */
	T0* a80; /* declared_reloads_optimization */
	T0* a81; /* declared_shared_library_definition */
	T0* a82; /* declared_split */
	T0* a83; /* declared_storable_filename */
	T0* a84; /* declared_strip_option */
	T0* a85; /* declared_syntax */
	T0* a86; /* declared_target */
	T0* a87; /* declared_use_cluster_name_as_namespace */
	T0* a88; /* declared_use_full_cluster_name_as_namespace */
	T0* a89; /* declared_verbose */
	T0* a90; /* declared_version */
	T0* a91; /* declared_visible_filename */
	T0* a92; /* declared_void_safety */
	T0* a93; /* declared_warning */
	T0* a94; /* declared_wedit */
};

/* Struct for type XM_ATTRIBUTE */
struct S405 {
	int id;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* value */
	T0* a4; /* parent */
};

/* Struct for type ET_XACE_OPTION_NAMES */
struct S408 {
	int id;
};

/* Struct for type ET_XACE_CLUSTER */
struct S410 {
	int id;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T0* a5; /* library_prefix */
	T0* a6; /* cluster_prefix */
	T0* a7; /* class_options */
	T1 a8; /* is_abstract */
	T1 a9; /* is_recursive */
	T1 a10; /* is_read_only */
	T0* a11; /* options */
	T0* a12; /* subclusters */
	T0* a13; /* libraries */
	T1 a14; /* overridden_constraint_enabled */
	T1 a15; /* scm_mapping_constraint_enabled */
	T0* a16; /* scm_read_mapping */
	T0* a17; /* scm_write_mapping */
	T1 a18; /* is_implicit */
	T1 a19; /* is_override */
	T1 a20; /* use_obsolete_syntax */
	T0* a21; /* parent */
	T1 a22; /* is_preparsed */
	T0* a23; /* provider_constraint */
	T0* a24; /* dependant_constraint */
	T1 a25; /* is_mounted */
	T0* a26; /* cached_absolute_pathname */
};

/* Struct for type ET_XACE_CLUSTERS */
struct S411 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARY */
struct S412 {
	int id;
	T0* a1; /* pathname */
	T0* a2; /* library_prefix */
	T0* a3; /* library */
	T0* a4; /* position */
	T1 a5; /* is_root */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARIES */
struct S413 {
	int id;
	T0* a1; /* libraries */
};

/* Struct for type DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
struct S414 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
struct S416 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type ET_XACE_LIBRARY_CONFIG */
struct S418 {
	int id;
	T0* a1; /* library_prefix */
	T0* a2; /* name */
	T0* a3; /* options */
	T0* a4; /* clusters */
	T0* a5; /* libraries */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, STRING_8] */
struct S419 {
	int id;
	T6 a1; /* found_position */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* free_slot */
	T6 a7; /* last_position */
	T6 a8; /* count */
	T6 a9; /* modulus */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* equality_tester */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* capacity */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type ET_XACE_CLASS_OPTIONS */
struct S421 {
	int id;
	T0* a1; /* feature_options */
	T0* a2; /* class_name */
	T0* a3; /* options */
};

/* Struct for type ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
struct S422 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_BOOLEAN_EXPECTED_ERROR */
struct S423 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
struct S424 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
struct S425 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
struct S426 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
struct S427 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_AST_NULL_PROCESSOR */
struct S429 {
	int id;
};

/* Struct for type [attached] TUPLE [ET_UNIVERSE] */
struct S430 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_UNIVERSE]] */
struct S431 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]]] */
struct S432 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
struct S434 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type DT_DATE_TIME_DURATION */
struct S435 {
	int id;
	T6 a1; /* year */
	T6 a2; /* month */
	T6 a3; /* day */
	T6 a4; /* hour */
	T6 a5; /* minute */
	T6 a6; /* second */
	T6 a7; /* millisecond */
};

/* Struct for type ET_IMPLEMENTATION_CHECKER */
struct S436 {
	int id;
	T1 a1; /* flat_mode */
	T1 a2; /* flat_dbc_mode */
	T1 a3; /* suppliers_enabled */
	T0* a4; /* current_class */
	T1 a5; /* short_mode */
	T0* a6; /* no_suppliers */
	T0* a7; /* feature_checker */
	T0* a8; /* precursor_procedures */
	T0* a9; /* precursor_queries */
	T0* a10; /* supplier_builder */
};

/* Struct for type ET_EIFFEL_PREPARSER */
struct S437 {
	int id;
	T0* a1; /* eiffel_buffer */
	T6 a2; /* last_text_count */
	T6 a3; /* last_literal_start */
	T0* a4; /* filename */
	T0* a5; /* group */
	T0* a6; /* verbatim_marker */
	T0* a7; /* verbatim_open_white_characters */
	T0* a8; /* verbatim_close_white_characters */
	T0* a9; /* yy_pushed_start_conditions */
	T0* a10; /* input_buffer */
	T0* a11; /* yy_state_stack */
	T6 a12; /* yy_start_state */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_position */
	T6 a16; /* yy_start */
	T6 a17; /* yy_end */
	T6 a18; /* line */
	T6 a19; /* column */
	T6 a20; /* position */
	T0* a21; /* yy_nxt */
	T0* a22; /* yy_chk */
	T0* a23; /* yy_base */
	T0* a24; /* yy_def */
	T0* a25; /* yy_ec */
	T0* a26; /* yy_meta */
	T0* a27; /* yy_accept */
	T0* a28; /* yy_acclist */
	T0* a29; /* yy_content */
	T0* a30; /* yy_content_area */
	T0* a31; /* last_classname */
	T1 a32; /* class_keyword_found */
	T6 a33; /* last_token */
	T1 a34; /* yy_more_flag */
	T6 a35; /* yy_more_len */
	T6 a36; /* yy_state_count */
	T6 a37; /* yy_last_accepting_state */
	T6 a38; /* yy_last_accepting_cpos */
	T6 a39; /* yy_lp */
	T6 a40; /* yy_looking_for_trail_begin */
	T6 a41; /* yy_full_match */
	T6 a42; /* yy_full_state */
	T6 a43; /* yy_full_lp */
	T1 a44; /* yy_rejected */
	T6 a45; /* last_literal_end */
	T6 a46; /* pushed_start_condition_count */
	T6 a47; /* ms_column */
	T6 a48; /* ms_line */
	T6 a49; /* last_break_end */
	T6 a50; /* last_comment_end */
};

/* Struct for type ET_MASTER_CLASS_CHECKER */
struct S438 {
	int id;
	T0* a1; /* current_class */
	T1 a2; /* has_fatal_error */
};

/* Struct for type ET_EIFFEL_PARSER */
struct S439 {
	int id;
	T0* a1; /* eiffel_buffer */
	T0* a2; /* counters */
	T0* a3; /* last_formal_arguments_stack */
	T0* a4; /* last_local_variables_stack */
	T0* a5; /* last_keywords */
	T0* a6; /* last_symbols */
	T0* a7; /* last_object_tests_stack */
	T0* a8; /* last_object_tests_pool */
	T0* a9; /* last_across_components_stack */
	T0* a10; /* last_across_components_pool */
	T0* a11; /* assertions */
	T0* a12; /* check_assertion_counters */
	T0* a13; /* queries */
	T0* a14; /* procedures */
	T0* a15; /* constraints */
	T0* a16; /* providers */
	T0* a17; /* current_class */
	T0* a18; /* group */
	T6 a19; /* last_text_count */
	T6 a20; /* last_literal_start */
	T0* a21; /* filename */
	T0* a22; /* verbatim_marker */
	T0* a23; /* verbatim_open_white_characters */
	T0* a24; /* verbatim_close_white_characters */
	T0* a25; /* yyss */
	T6 a26; /* time_stamp */
	T0* a27; /* input_buffer */
	T0* a28; /* yy_pushed_start_conditions */
	T0* a29; /* yyspecial_routines1 */
	T6 a30; /* yyvsc1 */
	T0* a31; /* yyvs1 */
	T0* a32; /* yyspecial_routines2 */
	T6 a33; /* yyvsc2 */
	T0* a34; /* yyvs2 */
	T0* a35; /* yyspecial_routines3 */
	T6 a36; /* yyvsc3 */
	T0* a37; /* yyvs3 */
	T0* a38; /* yyspecial_routines4 */
	T6 a39; /* yyvsc4 */
	T0* a40; /* yyvs4 */
	T0* a41; /* yyspecial_routines5 */
	T6 a42; /* yyvsc5 */
	T0* a43; /* yyvs5 */
	T0* a44; /* yyspecial_routines6 */
	T6 a45; /* yyvsc6 */
	T0* a46; /* yyvs6 */
	T0* a47; /* yyspecial_routines7 */
	T6 a48; /* yyvsc7 */
	T0* a49; /* yyvs7 */
	T0* a50; /* yyspecial_routines8 */
	T6 a51; /* yyvsc8 */
	T0* a52; /* yyvs8 */
	T0* a53; /* yyspecial_routines9 */
	T6 a54; /* yyvsc9 */
	T0* a55; /* yyvs9 */
	T0* a56; /* yyspecial_routines10 */
	T6 a57; /* yyvsc10 */
	T0* a58; /* yyvs10 */
	T0* a59; /* yyspecial_routines11 */
	T6 a60; /* yyvsc11 */
	T0* a61; /* yyvs11 */
	T0* a62; /* yyspecial_routines12 */
	T6 a63; /* yyvsc12 */
	T0* a64; /* yyvs12 */
	T0* a65; /* yyspecial_routines13 */
	T6 a66; /* yyvsc13 */
	T0* a67; /* yyvs13 */
	T0* a68; /* yyspecial_routines14 */
	T6 a69; /* yyvsc14 */
	T0* a70; /* yyvs14 */
	T0* a71; /* yyspecial_routines15 */
	T6 a72; /* yyvsc15 */
	T0* a73; /* yyvs15 */
	T0* a74; /* yyspecial_routines16 */
	T6 a75; /* yyvsc16 */
	T0* a76; /* yyvs16 */
	T0* a77; /* yyspecial_routines17 */
	T6 a78; /* yyvsc17 */
	T0* a79; /* yyvs17 */
	T0* a80; /* yyspecial_routines18 */
	T6 a81; /* yyvsc18 */
	T0* a82; /* yyvs18 */
	T0* a83; /* yyspecial_routines19 */
	T6 a84; /* yyvsc19 */
	T0* a85; /* yyvs19 */
	T0* a86; /* yyspecial_routines20 */
	T6 a87; /* yyvsc20 */
	T0* a88; /* yyvs20 */
	T0* a89; /* yyspecial_routines21 */
	T6 a90; /* yyvsc21 */
	T0* a91; /* yyvs21 */
	T0* a92; /* yyspecial_routines22 */
	T6 a93; /* yyvsc22 */
	T0* a94; /* yyvs22 */
	T0* a95; /* yyspecial_routines23 */
	T6 a96; /* yyvsc23 */
	T0* a97; /* yyvs23 */
	T0* a98; /* yyspecial_routines24 */
	T6 a99; /* yyvsc24 */
	T0* a100; /* yyvs24 */
	T0* a101; /* yyspecial_routines25 */
	T6 a102; /* yyvsc25 */
	T0* a103; /* yyvs25 */
	T0* a104; /* yyspecial_routines26 */
	T6 a105; /* yyvsc26 */
	T0* a106; /* yyvs26 */
	T0* a107; /* yyspecial_routines27 */
	T6 a108; /* yyvsc27 */
	T0* a109; /* yyvs27 */
	T0* a110; /* yyspecial_routines28 */
	T6 a111; /* yyvsc28 */
	T0* a112; /* yyvs28 */
	T0* a113; /* yyspecial_routines29 */
	T6 a114; /* yyvsc29 */
	T0* a115; /* yyvs29 */
	T0* a116; /* yyspecial_routines30 */
	T6 a117; /* yyvsc30 */
	T0* a118; /* yyvs30 */
	T0* a119; /* yyspecial_routines31 */
	T6 a120; /* yyvsc31 */
	T0* a121; /* yyvs31 */
	T0* a122; /* yyspecial_routines32 */
	T6 a123; /* yyvsc32 */
	T0* a124; /* yyvs32 */
	T0* a125; /* yyspecial_routines33 */
	T6 a126; /* yyvsc33 */
	T0* a127; /* yyvs33 */
	T0* a128; /* yyspecial_routines34 */
	T6 a129; /* yyvsc34 */
	T0* a130; /* yyvs34 */
	T0* a131; /* yyspecial_routines35 */
	T6 a132; /* yyvsc35 */
	T0* a133; /* yyvs35 */
	T0* a134; /* yyspecial_routines36 */
	T6 a135; /* yyvsc36 */
	T0* a136; /* yyvs36 */
	T0* a137; /* yyspecial_routines37 */
	T6 a138; /* yyvsc37 */
	T0* a139; /* yyvs37 */
	T0* a140; /* yyspecial_routines38 */
	T6 a141; /* yyvsc38 */
	T0* a142; /* yyvs38 */
	T0* a143; /* yyspecial_routines39 */
	T6 a144; /* yyvsc39 */
	T0* a145; /* yyvs39 */
	T0* a146; /* yyspecial_routines40 */
	T6 a147; /* yyvsc40 */
	T0* a148; /* yyvs40 */
	T0* a149; /* yyspecial_routines41 */
	T6 a150; /* yyvsc41 */
	T0* a151; /* yyvs41 */
	T0* a152; /* yyspecial_routines42 */
	T6 a153; /* yyvsc42 */
	T0* a154; /* yyvs42 */
	T0* a155; /* yyspecial_routines43 */
	T6 a156; /* yyvsc43 */
	T0* a157; /* yyvs43 */
	T0* a158; /* yyspecial_routines44 */
	T6 a159; /* yyvsc44 */
	T0* a160; /* yyvs44 */
	T0* a161; /* yyspecial_routines45 */
	T6 a162; /* yyvsc45 */
	T0* a163; /* yyvs45 */
	T0* a164; /* yyspecial_routines46 */
	T6 a165; /* yyvsc46 */
	T0* a166; /* yyvs46 */
	T0* a167; /* yyspecial_routines47 */
	T6 a168; /* yyvsc47 */
	T0* a169; /* yyvs47 */
	T0* a170; /* yyspecial_routines48 */
	T6 a171; /* yyvsc48 */
	T0* a172; /* yyvs48 */
	T0* a173; /* yyspecial_routines49 */
	T6 a174; /* yyvsc49 */
	T0* a175; /* yyvs49 */
	T0* a176; /* yyspecial_routines50 */
	T6 a177; /* yyvsc50 */
	T0* a178; /* yyvs50 */
	T0* a179; /* yyspecial_routines51 */
	T6 a180; /* yyvsc51 */
	T0* a181; /* yyvs51 */
	T0* a182; /* yyspecial_routines52 */
	T6 a183; /* yyvsc52 */
	T0* a184; /* yyvs52 */
	T0* a185; /* yyspecial_routines53 */
	T6 a186; /* yyvsc53 */
	T0* a187; /* yyvs53 */
	T0* a188; /* yyspecial_routines54 */
	T6 a189; /* yyvsc54 */
	T0* a190; /* yyvs54 */
	T0* a191; /* yyspecial_routines55 */
	T6 a192; /* yyvsc55 */
	T0* a193; /* yyvs55 */
	T0* a194; /* yyspecial_routines56 */
	T6 a195; /* yyvsc56 */
	T0* a196; /* yyvs56 */
	T0* a197; /* yyspecial_routines57 */
	T6 a198; /* yyvsc57 */
	T0* a199; /* yyvs57 */
	T0* a200; /* yyspecial_routines58 */
	T6 a201; /* yyvsc58 */
	T0* a202; /* yyvs58 */
	T0* a203; /* yyspecial_routines59 */
	T6 a204; /* yyvsc59 */
	T0* a205; /* yyvs59 */
	T0* a206; /* yyspecial_routines60 */
	T6 a207; /* yyvsc60 */
	T0* a208; /* yyvs60 */
	T0* a209; /* yyspecial_routines61 */
	T6 a210; /* yyvsc61 */
	T0* a211; /* yyvs61 */
	T0* a212; /* yyspecial_routines62 */
	T6 a213; /* yyvsc62 */
	T0* a214; /* yyvs62 */
	T0* a215; /* yyspecial_routines63 */
	T6 a216; /* yyvsc63 */
	T0* a217; /* yyvs63 */
	T0* a218; /* yyspecial_routines64 */
	T6 a219; /* yyvsc64 */
	T0* a220; /* yyvs64 */
	T0* a221; /* yyspecial_routines65 */
	T6 a222; /* yyvsc65 */
	T0* a223; /* yyvs65 */
	T0* a224; /* yyspecial_routines66 */
	T6 a225; /* yyvsc66 */
	T0* a226; /* yyvs66 */
	T0* a227; /* yyspecial_routines67 */
	T6 a228; /* yyvsc67 */
	T0* a229; /* yyvs67 */
	T0* a230; /* yyspecial_routines68 */
	T6 a231; /* yyvsc68 */
	T0* a232; /* yyvs68 */
	T0* a233; /* yyspecial_routines69 */
	T6 a234; /* yyvsc69 */
	T0* a235; /* yyvs69 */
	T0* a236; /* yyspecial_routines70 */
	T6 a237; /* yyvsc70 */
	T0* a238; /* yyvs70 */
	T0* a239; /* yyspecial_routines71 */
	T6 a240; /* yyvsc71 */
	T0* a241; /* yyvs71 */
	T0* a242; /* yyspecial_routines72 */
	T6 a243; /* yyvsc72 */
	T0* a244; /* yyvs72 */
	T0* a245; /* yyspecial_routines73 */
	T6 a246; /* yyvsc73 */
	T0* a247; /* yyvs73 */
	T0* a248; /* yyspecial_routines74 */
	T6 a249; /* yyvsc74 */
	T0* a250; /* yyvs74 */
	T0* a251; /* yyspecial_routines75 */
	T6 a252; /* yyvsc75 */
	T0* a253; /* yyvs75 */
	T0* a254; /* yyspecial_routines76 */
	T6 a255; /* yyvsc76 */
	T0* a256; /* yyvs76 */
	T0* a257; /* yyspecial_routines77 */
	T6 a258; /* yyvsc77 */
	T0* a259; /* yyvs77 */
	T0* a260; /* yyspecial_routines78 */
	T6 a261; /* yyvsc78 */
	T0* a262; /* yyvs78 */
	T0* a263; /* yyspecial_routines79 */
	T6 a264; /* yyvsc79 */
	T0* a265; /* yyvs79 */
	T0* a266; /* yyspecial_routines80 */
	T6 a267; /* yyvsc80 */
	T0* a268; /* yyvs80 */
	T0* a269; /* yyspecial_routines81 */
	T6 a270; /* yyvsc81 */
	T0* a271; /* yyvs81 */
	T0* a272; /* yyspecial_routines82 */
	T6 a273; /* yyvsc82 */
	T0* a274; /* yyvs82 */
	T0* a275; /* yyspecial_routines83 */
	T6 a276; /* yyvsc83 */
	T0* a277; /* yyvs83 */
	T0* a278; /* yyspecial_routines84 */
	T6 a279; /* yyvsc84 */
	T0* a280; /* yyvs84 */
	T0* a281; /* yyspecial_routines85 */
	T6 a282; /* yyvsc85 */
	T0* a283; /* yyvs85 */
	T0* a284; /* yyspecial_routines86 */
	T6 a285; /* yyvsc86 */
	T0* a286; /* yyvs86 */
	T0* a287; /* yyspecial_routines87 */
	T6 a288; /* yyvsc87 */
	T0* a289; /* yyvs87 */
	T0* a290; /* yyspecial_routines88 */
	T6 a291; /* yyvsc88 */
	T0* a292; /* yyvs88 */
	T0* a293; /* yyspecial_routines89 */
	T6 a294; /* yyvsc89 */
	T0* a295; /* yyvs89 */
	T0* a296; /* yyspecial_routines90 */
	T6 a297; /* yyvsc90 */
	T0* a298; /* yyvs90 */
	T0* a299; /* yyspecial_routines91 */
	T6 a300; /* yyvsc91 */
	T0* a301; /* yyvs91 */
	T0* a302; /* yyspecial_routines92 */
	T6 a303; /* yyvsc92 */
	T0* a304; /* yyvs92 */
	T0* a305; /* yyspecial_routines93 */
	T6 a306; /* yyvsc93 */
	T0* a307; /* yyvs93 */
	T0* a308; /* yyspecial_routines94 */
	T6 a309; /* yyvsc94 */
	T0* a310; /* yyvs94 */
	T0* a311; /* yyspecial_routines95 */
	T6 a312; /* yyvsc95 */
	T0* a313; /* yyvs95 */
	T0* a314; /* yyspecial_routines96 */
	T6 a315; /* yyvsc96 */
	T0* a316; /* yyvs96 */
	T0* a317; /* yyspecial_routines97 */
	T6 a318; /* yyvsc97 */
	T0* a319; /* yyvs97 */
	T0* a320; /* yyspecial_routines98 */
	T6 a321; /* yyvsc98 */
	T0* a322; /* yyvs98 */
	T0* a323; /* yyspecial_routines99 */
	T6 a324; /* yyvsc99 */
	T0* a325; /* yyvs99 */
	T0* a326; /* yyspecial_routines100 */
	T6 a327; /* yyvsc100 */
	T0* a328; /* yyvs100 */
	T0* a329; /* yyspecial_routines101 */
	T6 a330; /* yyvsc101 */
	T0* a331; /* yyvs101 */
	T0* a332; /* yyspecial_routines102 */
	T6 a333; /* yyvsc102 */
	T0* a334; /* yyvs102 */
	T0* a335; /* yyspecial_routines103 */
	T6 a336; /* yyvsc103 */
	T0* a337; /* yyvs103 */
	T0* a338; /* yyspecial_routines104 */
	T6 a339; /* yyvsc104 */
	T0* a340; /* yyvs104 */
	T0* a341; /* yyspecial_routines105 */
	T6 a342; /* yyvsc105 */
	T0* a343; /* yyvs105 */
	T0* a344; /* yyspecial_routines106 */
	T6 a345; /* yyvsc106 */
	T0* a346; /* yyvs106 */
	T0* a347; /* yyspecial_routines107 */
	T6 a348; /* yyvsc107 */
	T0* a349; /* yyvs107 */
	T0* a350; /* yyspecial_routines108 */
	T6 a351; /* yyvsc108 */
	T0* a352; /* yyvs108 */
	T0* a353; /* yyspecial_routines109 */
	T6 a354; /* yyvsc109 */
	T0* a355; /* yyvs109 */
	T0* a356; /* yyspecial_routines110 */
	T6 a357; /* yyvsc110 */
	T0* a358; /* yyvs110 */
	T0* a359; /* yyspecial_routines111 */
	T6 a360; /* yyvsc111 */
	T0* a361; /* yyvs111 */
	T0* a362; /* yyspecial_routines112 */
	T6 a363; /* yyvsc112 */
	T0* a364; /* yyvs112 */
	T0* a365; /* yyspecial_routines113 */
	T6 a366; /* yyvsc113 */
	T0* a367; /* yyvs113 */
	T0* a368; /* yyspecial_routines114 */
	T6 a369; /* yyvsc114 */
	T0* a370; /* yyvs114 */
	T0* a371; /* yyspecial_routines115 */
	T6 a372; /* yyvsc115 */
	T0* a373; /* yyvs115 */
	T0* a374; /* yyspecial_routines116 */
	T6 a375; /* yyvsc116 */
	T0* a376; /* yyvs116 */
	T0* a377; /* yyspecial_routines117 */
	T6 a378; /* yyvsc117 */
	T0* a379; /* yyvs117 */
	T0* a380; /* yyspecial_routines118 */
	T6 a381; /* yyvsc118 */
	T0* a382; /* yyvs118 */
	T0* a383; /* yyspecial_routines119 */
	T6 a384; /* yyvsc119 */
	T0* a385; /* yyvs119 */
	T0* a386; /* yyspecial_routines120 */
	T6 a387; /* yyvsc120 */
	T0* a388; /* yyvs120 */
	T0* a389; /* yytranslate */
	T0* a390; /* yyr1 */
	T0* a391; /* yytypes1 */
	T0* a392; /* yytypes2 */
	T0* a393; /* yydefact */
	T0* a394; /* yydefgoto */
	T0* a395; /* yypact */
	T0* a396; /* yypgoto */
	T0* a397; /* yytable */
	T0* a398; /* yycheck */
	T6 a399; /* yy_end */
	T6 a400; /* yy_start */
	T6 a401; /* yy_line */
	T6 a402; /* yy_column */
	T6 a403; /* yy_position */
	T6 a404; /* yy_parsing_status */
	T6 a405; /* yy_suspended_yystacksize */
	T6 a406; /* yy_suspended_yystate */
	T6 a407; /* yy_suspended_yyn */
	T6 a408; /* yy_suspended_yychar1 */
	T6 a409; /* yy_suspended_index */
	T6 a410; /* yy_suspended_yyss_top */
	T6 a411; /* yy_suspended_yy_goto */
	T6 a412; /* yyssp */
	T6 a413; /* error_count */
	T1 a414; /* yy_lookahead_needed */
	T6 a415; /* yyerrstatus */
	T6 a416; /* last_token */
	T0* a417; /* last_class */
	T0* a418; /* last_clients */
	T0* a419; /* last_export_clients */
	T0* a420; /* last_feature_clause */
	T6 a421; /* last_literal_end */
	T1 a422; /* yy_rejected */
	T6 a423; /* yy_state_count */
	T6 a424; /* yy_full_match */
	T6 a425; /* yy_lp */
	T6 a426; /* yy_looking_for_trail_begin */
	T6 a427; /* yy_full_lp */
	T6 a428; /* yy_full_state */
	T6 a429; /* pushed_start_condition_count */
	T6 a430; /* yy_start_state */
	T6 a431; /* line */
	T6 a432; /* column */
	T6 a433; /* position */
	T1 a434; /* yy_more_flag */
	T6 a435; /* yy_more_len */
	T6 a436; /* yy_last_accepting_state */
	T6 a437; /* yy_last_accepting_cpos */
	T0* a438; /* yy_state_stack */
	T0* a439; /* yy_content */
	T0* a440; /* yy_content_area */
	T6 a441; /* yyvsp1 */
	T6 a442; /* yyvsp2 */
	T6 a443; /* yyvsp3 */
	T6 a444; /* yyvsp4 */
	T6 a445; /* yyvsp5 */
	T6 a446; /* yyvsp6 */
	T6 a447; /* yyvsp7 */
	T6 a448; /* yyvsp8 */
	T6 a449; /* yyvsp9 */
	T6 a450; /* yyvsp10 */
	T6 a451; /* yyvsp11 */
	T6 a452; /* yyvsp12 */
	T6 a453; /* yyvsp13 */
	T6 a454; /* yyvsp14 */
	T6 a455; /* yyvsp15 */
	T6 a456; /* yyvsp16 */
	T6 a457; /* yyvsp17 */
	T6 a458; /* yyvsp18 */
	T6 a459; /* yyvsp19 */
	T6 a460; /* yyvsp20 */
	T6 a461; /* yyvsp21 */
	T6 a462; /* yyvsp22 */
	T6 a463; /* yyvsp23 */
	T6 a464; /* yyvsp24 */
	T6 a465; /* yyvsp25 */
	T6 a466; /* yyvsp26 */
	T6 a467; /* yyvsp27 */
	T6 a468; /* yyvsp28 */
	T6 a469; /* yyvsp29 */
	T6 a470; /* yyvsp30 */
	T6 a471; /* yyvsp31 */
	T6 a472; /* yyvsp32 */
	T6 a473; /* yyvsp33 */
	T6 a474; /* yyvsp34 */
	T6 a475; /* yyvsp35 */
	T6 a476; /* yyvsp36 */
	T6 a477; /* yyvsp37 */
	T6 a478; /* yyvsp38 */
	T6 a479; /* yyvsp39 */
	T6 a480; /* yyvsp40 */
	T6 a481; /* yyvsp41 */
	T6 a482; /* yyvsp42 */
	T6 a483; /* yyvsp43 */
	T6 a484; /* yyvsp44 */
	T6 a485; /* yyvsp45 */
	T6 a486; /* yyvsp46 */
	T6 a487; /* yyvsp47 */
	T6 a488; /* yyvsp48 */
	T6 a489; /* yyvsp49 */
	T6 a490; /* yyvsp50 */
	T6 a491; /* yyvsp51 */
	T6 a492; /* yyvsp52 */
	T6 a493; /* yyvsp53 */
	T6 a494; /* yyvsp54 */
	T6 a495; /* yyvsp55 */
	T6 a496; /* yyvsp56 */
	T6 a497; /* yyvsp57 */
	T6 a498; /* yyvsp58 */
	T6 a499; /* yyvsp59 */
	T6 a500; /* yyvsp60 */
	T6 a501; /* yyvsp61 */
	T6 a502; /* yyvsp62 */
	T6 a503; /* yyvsp63 */
	T6 a504; /* yyvsp64 */
	T6 a505; /* yyvsp65 */
	T6 a506; /* yyvsp66 */
	T6 a507; /* yyvsp67 */
	T6 a508; /* yyvsp68 */
	T6 a509; /* yyvsp69 */
	T6 a510; /* yyvsp70 */
	T6 a511; /* yyvsp71 */
	T6 a512; /* yyvsp72 */
	T6 a513; /* yyvsp73 */
	T6 a514; /* yyvsp74 */
	T6 a515; /* yyvsp75 */
	T6 a516; /* yyvsp76 */
	T6 a517; /* yyvsp77 */
	T6 a518; /* yyvsp78 */
	T6 a519; /* yyvsp79 */
	T6 a520; /* yyvsp80 */
	T6 a521; /* yyvsp81 */
	T6 a522; /* yyvsp82 */
	T6 a523; /* yyvsp83 */
	T6 a524; /* yyvsp84 */
	T6 a525; /* yyvsp85 */
	T6 a526; /* yyvsp86 */
	T6 a527; /* yyvsp87 */
	T6 a528; /* yyvsp88 */
	T6 a529; /* yyvsp89 */
	T6 a530; /* yyvsp90 */
	T6 a531; /* yyvsp91 */
	T6 a532; /* yyvsp92 */
	T6 a533; /* yyvsp93 */
	T6 a534; /* yyvsp94 */
	T6 a535; /* yyvsp95 */
	T6 a536; /* yyvsp96 */
	T6 a537; /* yyvsp97 */
	T6 a538; /* yyvsp98 */
	T6 a539; /* yyvsp99 */
	T6 a540; /* yyvsp100 */
	T6 a541; /* yyvsp101 */
	T6 a542; /* yyvsp102 */
	T6 a543; /* yyvsp103 */
	T6 a544; /* yyvsp104 */
	T6 a545; /* yyvsp105 */
	T6 a546; /* yyvsp106 */
	T6 a547; /* yyvsp107 */
	T6 a548; /* yyvsp108 */
	T6 a549; /* yyvsp109 */
	T6 a550; /* yyvsp110 */
	T6 a551; /* yyvsp111 */
	T6 a552; /* yyvsp112 */
	T6 a553; /* yyvsp113 */
	T6 a554; /* yyvsp114 */
	T6 a555; /* yyvsp115 */
	T6 a556; /* yyvsp116 */
	T6 a557; /* yyvsp117 */
	T6 a558; /* yyvsp118 */
	T6 a559; /* yyvsp119 */
	T6 a560; /* yyvsp120 */
	T0* a561; /* yy_ec */
	T0* a562; /* yy_accept */
	T0* a563; /* yy_chk */
	T0* a564; /* yy_base */
	T0* a565; /* yy_def */
	T0* a566; /* yy_meta */
	T0* a567; /* yy_nxt */
	T0* a568; /* yy_acclist */
	T0* a569; /* last_detachable_any_value */
	T0* a570; /* last_detachable_et_keyword_value */
	T0* a571; /* last_detachable_et_agent_keyword_value */
	T0* a572; /* last_detachable_et_precursor_keyword_value */
	T0* a573; /* last_detachable_et_symbol_value */
	T0* a574; /* last_detachable_et_position_value */
	T0* a575; /* last_detachable_et_boolean_constant_value */
	T0* a576; /* last_detachable_et_break_value */
	T0* a577; /* last_detachable_et_character_constant_value */
	T0* a578; /* last_detachable_et_current_value */
	T0* a579; /* last_detachable_et_free_operator_value */
	T0* a580; /* last_detachable_et_identifier_value */
	T0* a581; /* last_detachable_et_integer_constant_value */
	T0* a582; /* last_detachable_et_keyword_operator_value */
	T0* a583; /* last_detachable_et_manifest_string_value */
	T0* a584; /* last_detachable_et_real_constant_value */
	T0* a585; /* last_detachable_et_result_value */
	T0* a586; /* last_detachable_et_retry_instruction_value */
	T0* a587; /* last_detachable_et_symbol_operator_value */
	T0* a588; /* last_detachable_et_void_value */
	T0* a589; /* last_detachable_et_semicolon_symbol_value */
	T0* a590; /* last_detachable_et_bracket_symbol_value */
	T0* a591; /* last_detachable_et_question_mark_symbol_value */
	T0* a592; /* last_formal_arguments */
	T0* a593; /* last_local_variables */
	T0* a594; /* last_object_tests */
	T0* a595; /* last_across_components */
	T6 a596; /* last_break_end */
	T6 a597; /* last_comment_end */
	T6 a598; /* ms_column */
	T6 a599; /* ms_line */
	T6 a600; /* break_kind */
};

/* Struct for type ET_PROVIDER_CHECKER */
struct S440 {
	int id;
	T0* a1; /* current_class */
};

/* Struct for type ET_ANCESTOR_BUILDER */
struct S441 {
	int id;
	T0* a1; /* class_sorter */
	T0* a2; /* ancestors */
	T0* a3; /* parent_checker */
	T0* a4; /* formal_parameter_checker */
	T0* a5; /* parent_context */
	T0* a6; /* current_class */
};

/* Struct for type ET_FEATURE_FLATTENER */
struct S442 {
	int id;
	T0* a1; /* named_features */
	T0* a2; /* queries */
	T0* a3; /* procedures */
	T0* a4; /* aliased_features */
	T0* a5; /* clients_list */
	T0* a6; /* client_classes */
	T0* a7; /* feature_adaptation_resolver */
	T0* a8; /* dotnet_feature_adaptation_resolver */
	T0* a9; /* identifier_type_resolver */
	T0* a10; /* unfolded_tuple_actual_parameters_resolver */
	T0* a11; /* anchored_type_checker */
	T0* a12; /* signature_checker */
	T0* a13; /* parent_checker */
	T0* a14; /* formal_parameter_checker */
	T0* a15; /* builtin_feature_checker */
	T0* a16; /* precursor_checker */
	T0* a17; /* precursors */
	T0* a18; /* current_class */
	T1 a19; /* has_signature_error */
};

/* Struct for type ET_INTERFACE_CHECKER */
struct S443 {
	int id;
	T0* a1; /* classes_to_be_processed */
	T0* a2; /* parent_checker3 */
	T0* a3; /* qualified_anchored_type_checker */
	T0* a4; /* named_features */
	T0* a5; /* feature_adaptation_resolver */
	T0* a6; /* dotnet_feature_adaptation_resolver */
	T0* a7; /* signature_checker */
	T0* a8; /* unfolded_tuple_actual_parameters_resolver */
	T0* a9; /* current_class */
};

/* Struct for type DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
struct S445 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T0* a13; /* internal_cursor */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type ET_DOTNET_ASSEMBLIES */
struct S446 {
	int id;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_DOTNET_ASSEMBLY */
struct S447 {
	int id;
	T0* a1; /* pathname */
	T0* a2; /* referenced_assemblies */
	T0* a3; /* current_system */
	T0* a4; /* dotnet_assembly */
	T0* a5; /* name */
	T0* a6; /* master_classes */
	T0* a7; /* any_type */
	T0* a8; /* detachable_any_type */
	T0* a9; /* any_parent */
	T0* a10; /* any_parents */
	T0* a11; /* any_clients */
	T0* a12; /* tuple_type */
	T0* a13; /* detachable_tuple_type */
	T0* a14; /* tuple_like_current_type */
	T0* a15; /* unfolded_empty_tuple_actual_parameters */
	T0* a16; /* array_any_type */
	T0* a17; /* array_detachable_any_type */
	T0* a18; /* array_like_current_type */
	T0* a19; /* boolean_type */
	T0* a20; /* character_type */
	T0* a21; /* character_8_type */
	T0* a22; /* character_8_convert_feature */
	T0* a23; /* character_32_type */
	T0* a24; /* character_32_convert_feature */
	T0* a25; /* double_type */
	T0* a26; /* exception_type */
	T0* a27; /* detachable_exception_type */
	T0* a28; /* exception_manager_type */
	T0* a29; /* function_type */
	T0* a30; /* integer_type */
	T0* a31; /* integer_8_type */
	T0* a32; /* integer_8_convert_feature */
	T0* a33; /* integer_16_type */
	T0* a34; /* integer_16_convert_feature */
	T0* a35; /* integer_32_type */
	T0* a36; /* integer_32_convert_feature */
	T0* a37; /* integer_64_type */
	T0* a38; /* integer_64_convert_feature */
	T0* a39; /* ise_exception_manager_type */
	T0* a40; /* iterable_detachable_any_type */
	T0* a41; /* natural_type */
	T0* a42; /* natural_8_type */
	T0* a43; /* natural_8_convert_feature */
	T0* a44; /* natural_16_type */
	T0* a45; /* natural_16_convert_feature */
	T0* a46; /* natural_32_type */
	T0* a47; /* natural_32_convert_feature */
	T0* a48; /* natural_64_type */
	T0* a49; /* natural_64_convert_feature */
	T0* a50; /* none_type */
	T0* a51; /* detachable_none_type */
	T0* a52; /* pointer_type */
	T0* a53; /* predicate_like_current_type */
	T0* a54; /* procedure_like_current_type */
	T0* a55; /* real_type */
	T0* a56; /* real_32_type */
	T0* a57; /* real_32_convert_feature */
	T0* a58; /* real_64_type */
	T0* a59; /* real_64_convert_feature */
	T0* a60; /* routine_type */
	T0* a61; /* special_any_type */
	T0* a62; /* special_detachable_any_type */
	T0* a63; /* string_type */
	T0* a64; /* string_8_type */
	T0* a65; /* string_8_convert_feature */
	T0* a66; /* string_32_type */
	T0* a67; /* string_32_convert_feature */
	T0* a68; /* system_object_type */
	T0* a69; /* system_object_parents */
	T0* a70; /* system_string_type */
	T0* a71; /* type_any_type */
	T0* a72; /* type_type_any_type */
	T0* a73; /* type_detachable_any_type */
	T0* a74; /* type_detachable_like_current_type */
	T0* a75; /* detachable_type_exception_type */
	T0* a76; /* type_detachable_exception_type */
	T0* a77; /* detachable_type_detachable_any_type */
	T0* a78; /* type_like_current_type */
	T0* a79; /* typed_pointer_any_type */
	T0* a80; /* typed_pointer_like_current_type */
	T0* a81; /* wide_character_type */
	T1 a82; /* is_read_only */
	T1 a83; /* is_preparsed */
};

/* Struct for type [attached] TUPLE [ET_DOTNET_ASSEMBLY] */
struct S448 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
struct S449 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	T1 (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
struct S450 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
struct S451 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_INTERNAL_UNIVERSE] */
struct S452 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_INTERNAL_UNIVERSE]] */
struct S453 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]]] */
struct S454 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [ET_DOTNET_ASSEMBLIES] */
struct S456 {
	int id;
	T0* z1;
};

/* Struct for type ET_LIBRARY */
struct S459 {
	int id;
	T0* a1; /* current_system */
	T0* a2; /* library */
	T0* a3; /* name */
	T0* a4; /* libraries */
	T0* a5; /* clusters */
	T0* a6; /* dotnet_assemblies */
	T0* a7; /* master_classes */
	T0* a8; /* any_type */
	T0* a9; /* detachable_any_type */
	T0* a10; /* any_parent */
	T0* a11; /* any_parents */
	T0* a12; /* any_clients */
	T0* a13; /* tuple_type */
	T0* a14; /* detachable_tuple_type */
	T0* a15; /* tuple_like_current_type */
	T0* a16; /* unfolded_empty_tuple_actual_parameters */
	T0* a17; /* array_any_type */
	T0* a18; /* array_detachable_any_type */
	T0* a19; /* array_like_current_type */
	T0* a20; /* boolean_type */
	T0* a21; /* character_type */
	T0* a22; /* character_8_type */
	T0* a23; /* character_8_convert_feature */
	T0* a24; /* character_32_type */
	T0* a25; /* character_32_convert_feature */
	T0* a26; /* double_type */
	T0* a27; /* exception_type */
	T0* a28; /* detachable_exception_type */
	T0* a29; /* exception_manager_type */
	T0* a30; /* function_type */
	T0* a31; /* integer_type */
	T0* a32; /* integer_8_type */
	T0* a33; /* integer_8_convert_feature */
	T0* a34; /* integer_16_type */
	T0* a35; /* integer_16_convert_feature */
	T0* a36; /* integer_32_type */
	T0* a37; /* integer_32_convert_feature */
	T0* a38; /* integer_64_type */
	T0* a39; /* integer_64_convert_feature */
	T0* a40; /* ise_exception_manager_type */
	T0* a41; /* iterable_detachable_any_type */
	T0* a42; /* natural_type */
	T0* a43; /* natural_8_type */
	T0* a44; /* natural_8_convert_feature */
	T0* a45; /* natural_16_type */
	T0* a46; /* natural_16_convert_feature */
	T0* a47; /* natural_32_type */
	T0* a48; /* natural_32_convert_feature */
	T0* a49; /* natural_64_type */
	T0* a50; /* natural_64_convert_feature */
	T0* a51; /* none_type */
	T0* a52; /* detachable_none_type */
	T0* a53; /* pointer_type */
	T0* a54; /* predicate_like_current_type */
	T0* a55; /* procedure_like_current_type */
	T0* a56; /* real_type */
	T0* a57; /* real_32_type */
	T0* a58; /* real_32_convert_feature */
	T0* a59; /* real_64_type */
	T0* a60; /* real_64_convert_feature */
	T0* a61; /* routine_type */
	T0* a62; /* special_any_type */
	T0* a63; /* special_detachable_any_type */
	T0* a64; /* string_type */
	T0* a65; /* string_8_type */
	T0* a66; /* string_8_convert_feature */
	T0* a67; /* string_32_type */
	T0* a68; /* string_32_convert_feature */
	T0* a69; /* system_object_type */
	T0* a70; /* system_object_parents */
	T0* a71; /* system_string_type */
	T0* a72; /* type_any_type */
	T0* a73; /* type_type_any_type */
	T0* a74; /* type_detachable_any_type */
	T0* a75; /* type_detachable_like_current_type */
	T0* a76; /* detachable_type_exception_type */
	T0* a77; /* type_detachable_exception_type */
	T0* a78; /* detachable_type_detachable_any_type */
	T0* a79; /* type_like_current_type */
	T0* a80; /* typed_pointer_any_type */
	T0* a81; /* typed_pointer_like_current_type */
	T0* a82; /* wide_character_type */
	T1 a83; /* is_read_only */
	T1 a84; /* is_preparsed */
};

/* Struct for type [attached] TUPLE [ET_LIBRARY] */
struct S460 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_LIBRARY]] */
struct S461 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [STRING_8] */
struct S462 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_CLASS_NAME_TESTER */
struct S464 {
	int id;
};

/* Struct for type ET_PARENT */
struct S466 {
	int id;
	T0* a1; /* type */
	T0* a2; /* renames */
	T0* a3; /* exports */
	T0* a4; /* undefines */
	T0* a5; /* redefines */
	T0* a6; /* selects */
	T0* a7; /* end_keyword */
};

/* Struct for type ET_PARENT_LIST */
struct S467 {
	int id;
	T0* a1; /* inherit_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_CLIENT_LIST */
struct S468 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_BUILTIN_CONVERT_FEATURE */
struct S469 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* type */
};

/* Struct for type ET_MASTER_CLASS */
struct S470 {
	int id;
	T0* a1; /* name */
	T0* a2; /* mapped_class */
	T0* a3; /* first_overriding_class */
	T0* a4; /* intrinsic_class */
	T0* a5; /* universe */
	T0* a6; /* other_local_override_classes */
	T0* a7; /* other_local_non_override_classes */
	T0* a8; /* other_local_ignored_classes */
	T0* a9; /* other_local_hidden_classes */
	T0* a10; /* other_imported_classes */
	T0* a11; /* other_overriding_classes */
	T1 a12; /* is_modified */
	T1 a13; /* is_marked */
	T0* a14; /* first_imported_class */
	T0* a15; /* first_local_ignored_class */
	T0* a16; /* first_local_override_class */
	T0* a17; /* first_local_non_override_class */
	T0* a18; /* first_local_hidden_class */
};

/* Struct for type DS_HASH_SET [ET_UNIVERSE] */
struct S471 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [attached] TUPLE [ET_AST_PROCESSOR] */
struct S472 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_CLASS]] */
struct S473 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	T1 (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [ET_MASTER_CLASS] */
struct S475 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_MASTER_CLASS]] */
struct S476 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [ET_CLUSTER] */
struct S478 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLUSTER]] */
struct S479 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [ET_XACE_SYSTEM] */
struct S480 {
	int id;
	T0* z1;
};

/* Struct for type DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
struct S482 {
	int id;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type [attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S484 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
struct S485 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type ET_ANCESTORS_STATUS_CHECKER */
struct S487 {
	int id;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
};

/* Struct for type ET_FLATTENING_STATUS_CHECKER */
struct S488 {
	int id;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
};

/* Struct for type ET_INTERFACE_STATUS_CHECKER */
struct S489 {
	int id;
	T0* a1; /* qualified_anchored_type_checker */
	T0* a2; /* class_type_checker */
	T0* a3; /* current_class */
};

/* Struct for type ET_IMPLEMENTATION_STATUS_CHECKER */
struct S490 {
	int id;
	T0* a1; /* current_class */
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLASS]]] */
struct S491 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
struct S492 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_FLATTENING_STATUS_CHECKER] */
struct S493 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_INTERFACE_STATUS_CHECKER] */
struct S494 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
struct S495 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [BOOLEAN] */
struct S496 {
	int id;
	T1 z1;
};

/* Struct for type ET_CLIENT */
struct S497 {
	int id;
	T0* a1; /* name */
	T0* a2; /* named_base_class */
};

/* Struct for type ET_RENAME_LIST */
struct S498 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* rename_keyword */
};

/* Struct for type ET_EXPORT_LIST */
struct S499 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* export_keyword */
};

/* Struct for type ET_KEYWORD_FEATURE_NAME_LIST */
struct S500 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* keyword */
};

/* Struct for type ET_LIKE_CURRENT */
struct S503 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* like_keyword */
	T0* a3; /* current_keyword */
};

/* Struct for type ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
struct S504 {
	int id;
	T0* a1; /* tuple_type */
};

/* Struct for type ET_NONE_GROUP */
struct S505 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* name */
	T1 a3; /* use_obsolete_syntax */
	T0* a4; /* cached_absolute_pathname */
};

/* Struct for type [attached] TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
struct S506 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]], FUNCTION [ANY, TUPLE [ET_CLASS], BOOLEAN]] */
struct S507 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]], FUNCTION [ANY, TUPLE [ET_CLASS], BOOLEAN], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
struct S508 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]]] */
struct S509 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
struct S510 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLUSTER]]] */
struct S513 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
struct S517 {
	int id;
	T0* z1;
};

/* Struct for type XM_NAMESPACE */
struct S520 {
	int id;
	T0* a1; /* uri */
	T0* a2; /* ns_prefix */
};

/* Struct for type ARRAY [INTEGER_32] */
struct S521 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type KL_ARRAY_ROUTINES [INTEGER_32] */
struct S522 {
	int id;
};

/* Struct for type UT_CONFIG_PARSER */
struct S523 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* config_values */
	T0* a3; /* error_handler */
	T0* a4; /* defined_values */
	T0* a5; /* include_stack */
	T0* a6; /* line_nb_stack */
	T0* a7; /* last_string_value */
	T6 a8; /* line_nb */
	T0* a9; /* yyss */
	T0* a10; /* input_buffer */
	T6 a11; /* yy_end */
	T6 a12; /* yy_position */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_parsing_status */
	T6 a16; /* yy_suspended_yystacksize */
	T6 a17; /* yy_suspended_yystate */
	T6 a18; /* yy_suspended_yyn */
	T6 a19; /* yy_suspended_yychar1 */
	T6 a20; /* yy_suspended_index */
	T6 a21; /* yy_suspended_yyss_top */
	T6 a22; /* yy_suspended_yy_goto */
	T0* a23; /* yyr1 */
	T6 a24; /* yyssp */
	T0* a25; /* yypgoto */
	T0* a26; /* yycheck */
	T0* a27; /* yytable */
	T0* a28; /* yydefgoto */
	T6 a29; /* error_count */
	T1 a30; /* yy_lookahead_needed */
	T6 a31; /* yyerrstatus */
	T0* a32; /* yypact */
	T6 a33; /* last_token */
	T0* a34; /* yytranslate */
	T0* a35; /* yydefact */
	T0* a36; /* yy_pushed_start_conditions */
	T0* a37; /* yyspecial_routines1 */
	T6 a38; /* yyvsc1 */
	T0* a39; /* yyvs1 */
	T0* a40; /* yyspecial_routines2 */
	T6 a41; /* yyvsc2 */
	T0* a42; /* yyvs2 */
	T0* a43; /* yyspecial_routines3 */
	T6 a44; /* yyvsc3 */
	T0* a45; /* yyvs3 */
	T0* a46; /* yytypes1 */
	T0* a47; /* yytypes2 */
	T6 a48; /* yy_start */
	T6 a49; /* yyvsp1 */
	T6 a50; /* yyvsp2 */
	T6 a51; /* yyvsp3 */
	T1 a52; /* yy_more_flag */
	T6 a53; /* yy_more_len */
	T6 a54; /* line */
	T6 a55; /* column */
	T6 a56; /* position */
	T6 a57; /* yy_start_state */
	T0* a58; /* yy_state_stack */
	T6 a59; /* yy_state_count */
	T0* a60; /* yy_content_area */
	T0* a61; /* yy_ec */
	T0* a62; /* yy_content */
	T0* a63; /* yy_accept */
	T6 a64; /* yy_last_accepting_state */
	T6 a65; /* yy_last_accepting_cpos */
	T0* a66; /* yy_chk */
	T0* a67; /* yy_base */
	T0* a68; /* yy_def */
	T0* a69; /* yy_meta */
	T0* a70; /* yy_nxt */
	T6 a71; /* yy_lp */
	T0* a72; /* yy_acclist */
	T6 a73; /* yy_looking_for_trail_begin */
	T6 a74; /* yy_full_match */
	T6 a75; /* yy_full_state */
	T6 a76; /* yy_full_lp */
	T1 a77; /* yy_rejected */
	T0* a78; /* last_detachable_any_value */
	T6 a79; /* if_level */
	T6 a80; /* ignored_level */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
struct S524 {
	int id;
};

/* Struct for type ET_DO_PROCEDURE */
struct S527 {
	int id;
	T0* a1; /* implementation_class */
	T6 a2; /* first_seed */
	T0* a3; /* arguments */
	T0* a4; /* extended_name */
	T6 a5; /* hash_code */
	T0* a6; /* end_keyword */
	T0* a7; /* clients */
	T0* a8; /* implementation_feature */
	T0* a9; /* compound */
	T1 a10; /* validity_checked */
	T1 a11; /* has_validity_error */
	T0* a12; /* preconditions */
	T0* a13; /* first_precursor */
	T0* a14; /* other_precursors */
	T0* a15; /* other_seeds */
	T0* a16; /* rescue_clause */
	T0* a17; /* locals */
	T0* a18; /* object_tests */
	T0* a19; /* across_components */
	T0* a20; /* postconditions */
	T0* a21; /* obsolete_message */
	T0* a22; /* is_keyword */
	T0* a23; /* semicolon */
	T0* a24; /* feature_clause */
	T0* a25; /* first_indexing */
	T0* a26; /* frozen_keyword */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* synonym */
};

/* Struct for type ET_SYSTEM_ERROR */
struct S529 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_INTERNAL_ERROR */
struct S530 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_VALIDITY_ERROR */
struct S531 {
	int id;
	T1 a1; /* ise_reported */
	T1 a2; /* ge_reported */
	T0* a3; /* default_template */
	T0* a4; /* parameters */
	T0* a5; /* current_class */
	T0* a6; /* class_impl */
	T0* a7; /* position */
	T0* a8; /* code */
	T0* a9; /* etl_code */
	T1 a10; /* ise_fatal */
	T1 a11; /* ge_fatal */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET */
struct S532 {
	int id;
	T0* a1; /* static_type */
	T1 a2; /* is_never_void */
	T6 a3; /* count */
	T0* a4; /* targets */
	T0* a5; /* dynamic_types */
	T1 a6; /* is_dynamic_types_readonly */
};

/* Struct for type ET_DEFERRED_PROCEDURE */
struct S533 {
	int id;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T6 a3; /* first_seed */
	T0* a4; /* arguments */
	T0* a5; /* extended_name */
	T0* a6; /* deferred_keyword */
	T6 a7; /* hash_code */
	T0* a8; /* end_keyword */
	T0* a9; /* clients */
	T1 a10; /* validity_checked */
	T1 a11; /* has_validity_error */
	T0* a12; /* preconditions */
	T0* a13; /* first_precursor */
	T0* a14; /* other_precursors */
	T0* a15; /* other_seeds */
	T0* a16; /* object_tests */
	T0* a17; /* across_components */
	T0* a18; /* postconditions */
	T0* a19; /* obsolete_message */
	T0* a20; /* is_keyword */
	T0* a21; /* semicolon */
	T0* a22; /* feature_clause */
	T0* a23; /* first_indexing */
	T0* a24; /* frozen_keyword */
	T6 a25; /* id */
	T6 a26; /* version */
	T0* a27; /* synonym */
};

/* Struct for type CELL [INTEGER_32] */
struct S535 {
	int id;
	T6 a1; /* item */
};

/* Struct for type C_STRING */
struct S536 {
	int id;
	T0* a1; /* managed_data */
	T6 a2; /* count */
};

/* Struct for type KL_PATHNAME */
struct S538 {
	int id;
	T6 a1; /* count */
	T0* a2; /* drive */
	T0* a3; /* hostname */
	T0* a4; /* sharename */
	T1 a5; /* is_relative */
	T0* a6; /* components */
};

/* Struct for type PLATFORM */
struct S539 {
	int id;
};

/* Struct for type READABLE_STRING_32 */
struct S540 {
	int id;
};

/* Struct for type SPECIAL [NATURAL_8] */
struct S541 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T8 z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
struct S543 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [AP_OPTION] */
struct S545 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_OPTION] */
struct S546 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S547 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S548 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S549 {
	int id;
};

/* Struct for type detachable DS_LINKABLE [STRING_8] */
struct S550 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type detachable DS_LINKABLE [BOOLEAN] */
struct S551 {
	int id;
	T1 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [BOOLEAN] */
struct S552 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [INTEGER_32] */
struct S553 {
	int id;
	T6 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [INTEGER_32] */
struct S554 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type XM_NAMESPACE_RESOLVER */
struct S555 {
	int id;
	T0* a1; /* next */
	T0* a2; /* element_local_part */
	T0* a3; /* element_prefix */
	T0* a4; /* context */
	T1 a5; /* forward_xmlns */
	T0* a6; /* attributes_prefix */
	T0* a7; /* attributes_local_part */
	T0* a8; /* attributes_value */
};

/* Struct for type SPECIAL [XM_CALLBACKS_FILTER] */
struct S556 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [XM_CALLBACKS_FILTER] */
struct S557 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type XM_CALLBACKS_NULL */
struct S558 {
	int id;
};

/* Struct for type DS_HASH_SET [XM_NAMESPACE] */
struct S559 {
	int id;
	T0* a1; /* equality_tester */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* special_item_routines */
	T0* a8; /* item_storage */
	T0* a9; /* clashes */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a14; /* count */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8] */
struct S565 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_XACE_LIBRARY_CONFIG] */
struct S566 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG] */
struct S567 {
	int id;
};

/* Struct for type XM_EIFFEL_SCANNER */
struct S568 {
	int id;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* yy_more_flag */
	T6 a13; /* yy_more_len */
	T6 a14; /* yy_end */
	T6 a15; /* yy_start */
	T6 a16; /* yy_line */
	T6 a17; /* yy_column */
	T6 a18; /* yy_position */
	T0* a19; /* input_buffer */
	T0* a20; /* yy_state_stack */
	T6 a21; /* yy_state_count */
	T0* a22; /* yy_content_area */
	T0* a23; /* yy_ec */
	T0* a24; /* yy_content */
	T0* a25; /* yy_accept */
	T6 a26; /* yy_last_accepting_state */
	T6 a27; /* yy_last_accepting_cpos */
	T0* a28; /* yy_chk */
	T0* a29; /* yy_base */
	T0* a30; /* yy_def */
	T0* a31; /* yy_meta */
	T0* a32; /* yy_nxt */
	T6 a33; /* yy_lp */
	T0* a34; /* yy_acclist */
	T6 a35; /* yy_looking_for_trail_begin */
	T6 a36; /* yy_full_match */
	T6 a37; /* yy_full_state */
	T6 a38; /* yy_full_lp */
	T1 a39; /* yy_rejected */
	T0* a40; /* yy_pushed_start_conditions */
	T0* a41; /* last_string_value */
	T0* a42; /* last_error */
	T6 a43; /* pushed_start_condition_count */
};

/* Struct for type XM_DEFAULT_POSITION */
struct S569 {
	int id;
	T6 a1; /* row */
	T6 a2; /* column */
	T0* a3; /* source_name */
	T6 a4; /* byte_index */
};

/* Struct for type DS_BILINKED_LIST [XM_POSITION] */
struct S571 {
	int id;
	T0* a1; /* first_cell */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
struct S572 {
	int id;
	T6 a1; /* count */
	T0* a2; /* first_cell */
};

/* Struct for type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S573 {
	int id;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* capacity */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* modulus */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* found_position */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* equality_tester */
	T0* a20; /* hash_function */
};

/* Struct for type XM_NULL_EXTERNAL_RESOLVER */
struct S575 {
	int id;
};

/* Struct for type XM_DTD_CALLBACKS_NULL */
struct S577 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
struct S578 {
	int id;
};

/* Struct for type XM_EIFFEL_PARSER_NAME */
struct S579 {
	int id;
	T1 a1; /* use_namespaces */
	T6 a2; /* count */
	T0* a3; /* first */
	T0* a4; /* second */
	T0* a5; /* tail */
};

/* Struct for type SPECIAL [XM_EIFFEL_PARSER_NAME] */
struct S580 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S581 {
	int id;
};

/* Struct for type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
struct S582 {
	int id;
	T6 a1; /* position */
	T0* a2; /* equality_tester */
	T6 a3; /* count */
	T6 a4; /* capacity */
	T6 a5; /* free_slot */
	T6 a6; /* last_position */
	T6 a7; /* modulus */
	T6 a8; /* slots_position */
	T6 a9; /* clashes_previous_position */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* internal_cursor */
	T0* a16; /* hash_function */
};

/* Struct for type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S583 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
struct S584 {
	int id;
};

/* Struct for type XM_DTD_EXTERNAL_ID */
struct S585 {
	int id;
	T0* a1; /* system_id */
	T0* a2; /* public_id */
};

/* Struct for type SPECIAL [XM_DTD_EXTERNAL_ID] */
struct S586 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
struct S587 {
	int id;
};

/* Struct for type XM_DTD_ELEMENT_CONTENT */
struct S588 {
	int id;
	T0* a1; /* items */
	T2 a2; /* repetition */
	T0* a3; /* name */
	T2 a4; /* type */
	T1 a5; /* is_character_data_allowed */
};

/* Struct for type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
struct S589 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S590 {
	int id;
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
struct S591 {
	int id;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S592 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
struct S593 {
	int id;
};

/* Struct for type XM_DTD_ATTRIBUTE_CONTENT */
struct S594 {
	int id;
	T0* a1; /* name */
	T0* a2; /* default_value */
	T2 a3; /* type */
	T1 a4; /* is_list_type */
	T0* a5; /* enumeration_list */
	T2 a6; /* value */
};

/* Struct for type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
struct S595 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
struct S596 {
	int id;
};

/* Struct for type DS_BILINKED_LIST [STRING_8] */
struct S597 {
	int id;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* equality_tester */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [STRING_8]] */
struct S598 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [BOOLEAN] */
struct S599 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
struct S600 {
	int id;
};

/* Struct for type XM_EIFFEL_DECLARATION */
struct S601 {
	int id;
	T0* a1; /* encoding */
	T0* a2; /* version */
	T1 a3; /* stand_alone */
};

/* Struct for type SPECIAL [XM_EIFFEL_DECLARATION] */
struct S602 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type XM_EIFFEL_ENTITY_DEF */
struct S605 {
	int id;
	T0* a1; /* literal_name */
	T0* a2; /* value */
	T0* a3; /* resolver */
	T0* a4; /* external_id */
	T0* a5; /* character_entity */
	T0* a6; /* yy_pushed_start_conditions */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_value */
	T0* a11; /* last_string_value */
	T0* a12; /* last_error */
	T1 a13; /* yy_rejected */
	T6 a14; /* yy_state_count */
	T6 a15; /* yy_full_match */
	T6 a16; /* yy_lp */
	T6 a17; /* yy_looking_for_trail_begin */
	T6 a18; /* yy_full_lp */
	T6 a19; /* yy_full_state */
	T6 a20; /* pushed_start_condition_count */
	T6 a21; /* yy_start_state */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_position */
	T6 a25; /* yy_start */
	T6 a26; /* yy_end */
	T6 a27; /* line */
	T6 a28; /* column */
	T6 a29; /* position */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T0* a34; /* yy_state_stack */
	T0* a35; /* yy_nxt */
	T0* a36; /* yy_chk */
	T0* a37; /* yy_base */
	T0* a38; /* yy_def */
	T0* a39; /* yy_ec */
	T0* a40; /* yy_meta */
	T0* a41; /* yy_accept */
	T0* a42; /* yy_content */
	T0* a43; /* yy_content_area */
	T6 a44; /* last_token */
	T0* a45; /* input_filter */
	T0* a46; /* input_stream */
	T0* a47; /* input_resolver */
	T0* a48; /* yy_acclist */
};

/* Struct for type XM_EIFFEL_SCANNER_DTD */
struct S606 {
	int id;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* decl_start_sent */
	T1 a13; /* decl_end_sent */
	T1 a14; /* yy_more_flag */
	T6 a15; /* yy_more_len */
	T6 a16; /* yy_end */
	T6 a17; /* yy_start */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_position */
	T0* a21; /* input_buffer */
	T0* a22; /* yy_state_stack */
	T6 a23; /* yy_state_count */
	T0* a24; /* yy_content_area */
	T0* a25; /* yy_ec */
	T0* a26; /* yy_content */
	T0* a27; /* yy_accept */
	T6 a28; /* yy_last_accepting_state */
	T6 a29; /* yy_last_accepting_cpos */
	T0* a30; /* yy_chk */
	T0* a31; /* yy_base */
	T0* a32; /* yy_def */
	T0* a33; /* yy_meta */
	T0* a34; /* yy_nxt */
	T6 a35; /* yy_lp */
	T0* a36; /* yy_acclist */
	T6 a37; /* yy_looking_for_trail_begin */
	T6 a38; /* yy_full_match */
	T6 a39; /* yy_full_state */
	T6 a40; /* yy_full_lp */
	T1 a41; /* yy_rejected */
	T0* a42; /* yy_pushed_start_conditions */
	T0* a43; /* last_string_value */
	T0* a44; /* last_error */
	T6 a45; /* pushed_start_condition_count */
};

/* Struct for type XM_EIFFEL_PE_ENTITY_DEF */
struct S608 {
	int id;
	T0* a1; /* resolver */
	T0* a2; /* external_id */
	T0* a3; /* literal_name */
	T0* a4; /* value */
	T0* a5; /* character_entity */
	T0* a6; /* yy_pushed_start_conditions */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_value */
	T0* a11; /* last_string_value */
	T0* a12; /* last_error */
	T1 a13; /* yy_rejected */
	T6 a14; /* yy_state_count */
	T6 a15; /* yy_full_match */
	T6 a16; /* yy_lp */
	T6 a17; /* yy_looking_for_trail_begin */
	T6 a18; /* yy_full_lp */
	T6 a19; /* yy_full_state */
	T6 a20; /* pushed_start_condition_count */
	T6 a21; /* yy_start_state */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_position */
	T6 a25; /* yy_start */
	T6 a26; /* yy_end */
	T6 a27; /* line */
	T6 a28; /* column */
	T6 a29; /* position */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T0* a34; /* yy_state_stack */
	T1 a35; /* pre_sent */
	T1 a36; /* post_sent */
	T0* a37; /* yy_nxt */
	T0* a38; /* yy_chk */
	T0* a39; /* yy_base */
	T0* a40; /* yy_def */
	T0* a41; /* yy_ec */
	T0* a42; /* yy_meta */
	T0* a43; /* yy_accept */
	T0* a44; /* yy_content */
	T0* a45; /* yy_content_area */
	T6 a46; /* last_token */
	T0* a47; /* input_filter */
	T0* a48; /* input_stream */
	T0* a49; /* input_resolver */
	T0* a50; /* yy_acclist */
};

/* Struct for type DS_HASH_SET_CURSOR [INTEGER_32] */
struct S609 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type detachable KL_EQUALITY_TESTER [INTEGER_32] */
struct S610 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
struct S611 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ECF_LIBRARY] */
struct S612 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
struct S615 {
	int id;
};

/* Struct for type SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
struct S616 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
struct S619 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
struct S620 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_TARGET] */
struct S621 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
struct S622 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [ET_LIBRARY] */
struct S623 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* special_item_routines */
	T0* a7; /* item_storage */
	T0* a8; /* clashes */
	T0* a9; /* slots */
	T6 a10; /* found_position */
	T0* a11; /* internal_cursor */
	T6 a12; /* slots_position */
	T6 a13; /* count */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [attached] TUPLE [DS_HASH_SET [ET_LIBRARY]] */
struct S624 {
	int id;
	T0* z1;
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S625 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
struct S626 {
	int id;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T0* a3; /* keys */
	T0* a4; /* deleted_marks */
	T0* a5; /* indexes_map */
	T6 a6; /* iteration_position */
	T6 a7; /* count */
	T6 a8; /* deleted_item_position */
	T6 a9; /* control */
	T0* a10; /* found_item */
	T1 a11; /* has_default */
	T6 a12; /* item_position */
	T6 a13; /* ht_lowest_deleted_position */
	T0* a14; /* ht_deleted_item */
	T0* a15; /* ht_deleted_key */
	T1 a16; /* object_comparison */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S628 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
struct S629 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
struct S631 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
struct S634 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
struct S635 {
	int id;
};

/* Struct for type SPECIAL [ET_MASTER_CLASS] */
struct S636 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
struct S637 {
	int id;
};

/* Struct for type SPECIAL [ET_CLASS_NAME] */
struct S638 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE] */
struct S639 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
struct S640 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
struct S641 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_FORMAL_PARAMETER_LIST */
struct S642 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type C_DATE */
struct S644 {
	int id;
	T6 a1; /* millisecond_now */
	T0* a2; /* internal_item */
	T1 a3; /* is_utc */
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S648 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BRACKET_SYMBOL */
struct S649 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
struct S651 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S653 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
struct S654 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
struct S655 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
struct S656 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_EXPRESSION] */
struct S658 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
struct S659 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
struct S660 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S662 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S663 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S664 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
struct S665 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S666 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_OBJECT_TEST] */
struct S668 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
struct S669 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
struct S670 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION] */
struct S671 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION] */
struct S672 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION] */
struct S673 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_EQUALITY_EXPRESSION] */
struct S674 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
struct S675 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
struct S676 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_AGENT] */
struct S677 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT] */
struct S678 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
struct S679 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_EXPRESSION_ITEM] */
struct S680 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
struct S682 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S683 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S684 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S685 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
struct S686 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S687 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
struct S688 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE] */
struct S689 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE] */
struct S691 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE] */
struct S692 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S693 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_CONSTANT] */
struct S694 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
struct S696 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
struct S697 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_INLINE_CONSTANT] */
struct S698 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
struct S700 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_DYNAMIC_FEATURE] */
struct S701 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
struct S703 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
struct S704 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
struct S705 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
struct S706 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type RX_BYTE_CODE */
struct S710 {
	int id;
	T6 a1; /* count */
	T0* a2; /* byte_code */
	T0* a3; /* character_sets */
	T6 a4; /* capacity */
	T6 a5; /* character_sets_count */
	T6 a6; /* character_sets_capacity */
};

/* Struct for type RX_CHARACTER_SET */
struct S711 {
	int id;
	T0* a1; /* set */
};

/* Struct for type RX_CASE_MAPPING */
struct S712 {
	int id;
	T0* a1; /* lower_table */
	T0* a2; /* flip_table */
};

/* Struct for type SPECIAL [RX_CHARACTER_SET] */
struct S714 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [RX_CHARACTER_SET] */
struct S715 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
struct S717 {
	int id;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ARRAY [BOOLEAN] */
struct S718 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S721 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
struct S724 {
	int id;
};

/* Struct for type SPECIAL [ET_INLINE_AGENT] */
struct S726 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
struct S727 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S728 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_PROCEDURE] */
struct S729 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S730 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S731 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
struct S732 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_QUERY] */
struct S733 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
struct S734 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
struct S735 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S736 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_FEATURE] */
struct S737 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S738 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S739 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S740 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
struct S741 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
struct S742 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE] */
struct S743 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
struct S744 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_NAMED_OBJECT_TEST */
struct S747 {
	int id;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* attached_keyword */
	T0* a4; /* declared_type */
	T0* a5; /* expression */
	T0* a6; /* as_keyword */
};

/* Struct for type SPECIAL [ET_NAMED_OBJECT_TEST] */
struct S748 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
struct S749 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
struct S750 {
	int id;
	T6 a1; /* count */
	T0* a2; /* special_routines */
	T0* a3; /* storage */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
struct S751 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ACROSS_COMPONENT] */
struct S754 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT] */
struct S755 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_ACROSS_COMPONENT] */
struct S756 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_ATTACHMENT_SCOPE] */
struct S758 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
struct S759 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
struct S760 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_PRECONDITIONS, ET_FEATURE] */
struct S761 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_PRECONDITIONS] */
struct S762 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
struct S764 {
	int id;
};

/* Struct for type DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
struct S765 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type STRING_TO_INTEGER_CONVERTOR */
struct S766 {
	int id;
	T6 a1; /* sign */
	T11 a2; /* part1 */
	T11 a3; /* part2 */
	T6 a4; /* last_state */
	T1 a5; /* internal_overflowed */
	T0* a6; /* leading_separators */
	T0* a7; /* trailing_separators */
	T1 a8; /* leading_separators_acceptable */
	T1 a9; /* trailing_separators_acceptable */
	T6 a10; /* conversion_type */
};

/* Struct for type STRING_8_SEARCHER */
struct S768 {
	int id;
	T0* a1; /* deltas */
};

/* Struct for type detachable ARRAYED_LIST [INTEGER_32] */
struct S769 {
	int id;
	T0* a1; /* area_v2 */
	T6 a2; /* index */
};

/* Struct for type ET_CLUSTERS */
struct S770 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type UC_UNICODE_ROUTINES */
struct S771 {
	int id;
};

/* Struct for type ET_XACE_FEATURE_OPTIONS */
struct S772 {
	int id;
	T0* a1; /* feature_name */
	T0* a2; /* options */
};

/* Struct for type detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
struct S773 {
	int id;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
struct S774 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ATTRIBUTE_ERROR */
struct S775 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_ELEMENT_ERROR */
struct S776 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ELEMENT_ERROR */
struct S777 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
struct S778 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
struct S779 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
struct S780 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
struct S781 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type UT_COUNTER */
struct S784 {
	int id;
	T6 a1; /* item */
};

/* Struct for type KL_AGENT_ROUTINES [ET_CLASS] */
struct S785 {
	int id;
};

/* Struct for type [attached] TUPLE [UT_COUNTER] */
struct S786 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [KL_AGENT_ROUTINES [ET_CLASS], [attached] PROCEDURE [[attached] NONE, [attached] TUPLE]] */
struct S787 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
struct S788 {
	int id;
	T0* a1; /* current_system */
};

/* Struct for type UT_TRISTATE */
struct S789 {
	int id;
	T2 a1; /* value */
};

/* Struct for type KL_AGENT_ROUTINES [ANY] */
struct S790 {
	int id;
};

/* Struct for type [attached] TUPLE [UT_TRISTATE] */
struct S791 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [KL_AGENT_ROUTINES [ANY], [attached] PROCEDURE [[attached] NONE, [attached] TUPLE]] */
struct S792 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_MASTER_CLASS]] */
struct S793 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	T1 (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] PREDICATE [[attached] NONE, [attached] TUPLE] */
struct S794 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	T1 (*f)(GE_context*, T0*);
};

/* Struct for type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]], FUNCTION [ANY, TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
struct S796 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]], FUNCTION [ANY, TUPLE [ET_MASTER_CLASS], BOOLEAN], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
struct S797 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_ECF_CLUSTER */
struct S798 {
	int id;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T1 a5; /* is_override */
	T1 a6; /* is_recursive */
	T1 a7; /* is_read_only */
	T0* a8; /* ecf_subclusters */
	T0* a9; /* ecf_file_rules */
	T0* a10; /* condition */
	T1 a11; /* overridden_constraint_enabled */
	T1 a12; /* scm_mapping_constraint_enabled */
	T0* a13; /* subclusters */
	T1 a14; /* use_obsolete_syntax */
	T0* a15; /* scm_read_mapping */
	T0* a16; /* scm_write_mapping */
	T1 a17; /* is_implicit */
	T0* a18; /* parent */
	T0* a19; /* provider_constraint */
	T0* a20; /* dependant_constraint */
	T1 a21; /* is_preparsed */
	T1 a22; /* is_abstract */
	T0* a23; /* file_rules */
	T0* a24; /* cached_absolute_pathname */
};

/* Struct for type ET_ECF_CLUSTERS */
struct S799 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_ECF_ADAPTED_LIBRARIES */
struct S800 {
	int id;
	T0* a1; /* libraries */
};

/* Struct for type ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
struct S801 {
	int id;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_ECF_FILE_RULE */
struct S802 {
	int id;
	T0* a1; /* exclude */
	T0* a2; /* include */
	T0* a3; /* exclude_regexp */
	T0* a4; /* include_regexp */
	T0* a5; /* condition */
};

/* Struct for type ET_ECF_FILE_RULES */
struct S803 {
	int id;
	T0* a1; /* file_rules */
};

/* Struct for type ET_ECF_EXTERNAL_INCLUDE */
struct S804 {
	int id;
	T0* a1; /* pathname */
	T0* a2; /* condition */
};

/* Struct for type ET_ECF_EXTERNAL_INCLUDES */
struct S805 {
	int id;
	T0* a1; /* external_includes */
};

/* Struct for type ET_ECF_EXTERNAL_OBJECT */
struct S806 {
	int id;
	T0* a1; /* pathname */
	T0* a2; /* condition */
};

/* Struct for type ET_ECF_EXTERNAL_OBJECTS */
struct S807 {
	int id;
	T0* a1; /* external_objects */
};

/* Struct for type ET_ECF_EXTERNAL_LIBRARY */
struct S808 {
	int id;
	T0* a1; /* pathname */
	T0* a2; /* condition */
};

/* Struct for type ET_ECF_EXTERNAL_LIBRARIES */
struct S809 {
	int id;
	T0* a1; /* external_libraries */
};

/* Struct for type ET_ECF_SETTINGS */
struct S811 {
	int id;
	T0* a1; /* primary_settings */
	T0* a2; /* secondary_settings */
};

/* Struct for type ET_ECF_OPTIONS */
struct S812 {
	int id;
	T0* a1; /* primary_options */
	T0* a2; /* secondary_options */
};

/* Struct for type ET_ECF_CONDITIONS */
struct S813 {
	int id;
	T0* a1; /* conditions */
	T1 a2; /* is_ored */
};

/* Struct for type ET_ECF_ROOT_CLASS */
struct S814 {
	int id;
	T0* a1; /* class_name */
	T0* a2; /* creation_procedure_name */
};

/* Struct for type ET_ECF_ROOT_ALL_CLASSES */
struct S815 {
	int id;
};

/* Struct for type ET_ECF_PLATFORM_CONDITION */
struct S817 {
	int id;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_BUILD_CONDITION */
struct S818 {
	int id;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_MULTITHREADED_CONDITION */
struct S819 {
	int id;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_CONCURRENCY_CONDITION */
struct S820 {
	int id;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_DOTNET_CONDITION */
struct S821 {
	int id;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_DYNAMIC_RUNTIME_CONDITION */
struct S822 {
	int id;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_CUSTOM_CONDITION */
struct S823 {
	int id;
	T0* a1; /* name */
	T0* a2; /* value */
	T1 a3; /* is_excluded */
};

/* Struct for type ET_ECF_COMPILER_VERSION_CONDITION */
struct S825 {
	int id;
	T0* a1; /* min_value */
	T0* a2; /* max_value */
};

/* Struct for type [attached] TUPLE [ET_ECF_SYSTEM] */
struct S826 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_LACE_SYSTEM] */
struct S827 {
	int id;
	T0* z1;
};

/* Struct for type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
struct S830 {
	int id;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
	T0* a5; /* agent_type */
	T1 a6; /* is_dynamic_types_readonly */
};

/* Struct for type ET_REGULAR_MANIFEST_STRING */
struct S831 {
	int id;
	T0* a1; /* value */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
	T0* a4; /* cast_type */
	T0* a5; /* type */
};

/* Struct for type ET_INFIX_FREE_NAME */
struct S832 {
	int id;
	T0* a1; /* infix_keyword */
	T0* a2; /* operator_name */
	T2 a3; /* code */
	T6 a4; /* hash_code */
	T6 a5; /* seed */
};

/* Struct for type ET_CREATOR_LIST */
struct S833 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type EXCEPTIONS */
struct S835 {
	int id;
};

/* Struct for type XM_LINKED_LIST [XM_DOCUMENT_NODE] */
struct S836 {
	int id;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type XM_LINKED_LIST [XM_ELEMENT_NODE] */
struct S838 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S842 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S843 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type DS_PAIR [XM_POSITION, XM_NODE] */
struct S844 {
	int id;
	T0* a1; /* first */
	T0* a2; /* second */
};

/* Struct for type UC_UTF8_ROUTINES */
struct S845 {
	int id;
};

/* Struct for type UC_UTF8_STRING */
struct S846 {
	int id;
	T6 a1; /* count */
	T0* a2; /* area */
	T6 a3; /* byte_count */
	T6 a4; /* internal_hash_code */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
};

/* Struct for type XM_EIFFEL_INPUT_STREAM */
struct S847 {
	int id;
	T0* a1; /* last_string */
	T6 a2; /* encoding */
	T0* a3; /* utf_queue */
	T0* a4; /* impl */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
struct S851 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type KL_CHARACTER_BUFFER */
struct S854 {
	int id;
	T0* a1; /* as_special */
	T0* a2; /* area */
};

/* Struct for type [attached] TUPLE [ET_LACE_CLUSTER] */
struct S855 {
	int id;
	T0* z1;
};

/* Struct for type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
struct S856 {
	int id;
	T0* a1; /* current_cluster */
	T0* a2; /* pathname_buffer */
	T0* a3; /* group_names */
	T0* a4; /* group_pathnames */
};

/* Struct for type SPECIAL [ET_QUERY] */
struct S857 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALIAS_NAME */
struct S858 {
	int id;
	T0* a1; /* alias_keyword */
	T0* a2; /* alias_string */
	T2 a3; /* code */
	T6 a4; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUERY] */
struct S859 {
	int id;
};

/* Struct for type SPECIAL [ET_PROCEDURE] */
struct S860 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
struct S861 {
	int id;
};

/* Struct for type CONSOLE */
struct S865 {
	int id;
	T14 a1; /* file_pointer */
	T6 a2; /* mode */
	T0* a3; /* last_string */
	T0* a4; /* internal_name */
	T0* a5; /* internal_detachable_name_pointer */
	T2 a6; /* last_character */
};

/* Struct for type ET_LIKE_N */
struct S866 {
	int id;
	T6 a1; /* index */
	T0* a2; /* previous */
	T0* a3; /* type_mark */
	T0* a4; /* like_keyword */
};

/* Struct for type SPECIAL [ET_BASE_TYPE] */
struct S867 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
struct S868 {
	int id;
};

/* Struct for type SPECIAL [IMMUTABLE_STRING_32] */
struct S869 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [IMMUTABLE_STRING_32] */
struct S870 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
	T1 a4; /* object_comparison */
};

/* Struct for type detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
struct S871 {
	int id;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
struct S872 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] TUPLE [ET_XACE_CLUSTER] */
struct S873 {
	int id;
	T0* z1;
};

/* Struct for type SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
struct S874 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
struct S875 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
struct S876 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
struct S878 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type detachable DS_HASH_SET [ET_NAMED_CLASS] */
struct S880 {
	int id;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_PROCEDURE] */
struct S881 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_QUERY] */
struct S882 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type ET_SUPPLIER_BUILDER */
struct S883 {
	int id;
	T0* a1; /* supplier_classes */
	T0* a2; /* current_class */
};

/* Struct for type ET_POSTCONDITIONS */
struct S885 {
	int id;
	T1 a1; /* validity_checked */
	T1 a2; /* has_validity_error */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* ensure_keyword */
	T0* a6; /* then_keyword */
};

/* Struct for type ET_INVARIANTS */
struct S886 {
	int id;
	T0* a1; /* implementation_class */
	T1 a2; /* validity_checked */
	T1 a3; /* has_validity_error */
	T6 a4; /* count */
	T0* a5; /* storage */
	T0* a6; /* invariant_keyword */
	T0* a7; /* object_tests */
	T0* a8; /* across_components */
};

/* Struct for type KL_STDIN_FILE */
struct S887 {
	int id;
	T1 a1; /* end_of_file */
	T2 a2; /* last_character */
	T0* a3; /* character_buffer */
	T0* a4; /* last_string */
};

/* Struct for type DS_ARRAYED_STACK [INTEGER_32] */
struct S889 {
	int id;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S890 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
struct S891 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_KEYWORD] */
struct S892 {
	int id;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_SYMBOL] */
struct S893 {
	int id;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
struct S894 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
struct S895 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
struct S896 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
struct S897 {
	int id;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type KL_STRING_INPUT_STREAM */
struct S898 {
	int id;
	T1 a1; /* end_of_input */
	T2 a2; /* last_character */
	T0* a3; /* last_string */
	T0* a4; /* string */
	T6 a5; /* location */
};

/* Struct for type ET_TEXT_GROUP */
struct S899 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
struct S900 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_KEYWORD] */
struct S901 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
struct S902 {
	int id;
};

/* Struct for type ET_AGENT_KEYWORD */
struct S903 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
};

/* Struct for type SPECIAL [detachable ET_AGENT_KEYWORD] */
struct S904 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
struct S905 {
	int id;
};

/* Struct for type ET_PRECURSOR_KEYWORD */
struct S906 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
struct S907 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
struct S908 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_SYMBOL] */
struct S909 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
struct S910 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_POSITION] */
struct S911 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
struct S912 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
struct S914 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
struct S915 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_BREAK] */
struct S917 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
struct S918 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CHARACTER_CONSTANT] */
struct S920 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
struct S921 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CURRENT] */
struct S922 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
struct S923 {
	int id;
};

/* Struct for type ET_FREE_OPERATOR */
struct S924 {
	int id;
	T2 a1; /* code */
	T6 a2; /* hash_code */
	T6 a3; /* compressed_position */
	T0* a4; /* free_operator_name */
	T6 a5; /* seed */
};

/* Struct for type SPECIAL [detachable ET_FREE_OPERATOR] */
struct S925 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
struct S926 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_INTEGER_CONSTANT] */
struct S928 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
struct S929 {
	int id;
};

/* Struct for type ET_KEYWORD_OPERATOR */
struct S930 {
	int id;
	T6 a1; /* compressed_position */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_KEYWORD_OPERATOR] */
struct S931 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
struct S932 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING] */
struct S933 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
struct S934 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_REAL_CONSTANT] */
struct S936 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
struct S937 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_RESULT] */
struct S938 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
struct S939 {
	int id;
};

/* Struct for type ET_RETRY_INSTRUCTION */
struct S940 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
};

/* Struct for type SPECIAL [detachable ET_RETRY_INSTRUCTION] */
struct S941 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
struct S942 {
	int id;
};

/* Struct for type ET_SYMBOL_OPERATOR */
struct S943 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* seed */
};

/* Struct for type SPECIAL [detachable ET_SYMBOL_OPERATOR] */
struct S944 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_VOID] */
struct S945 {
	int id;
};

/* Struct for type ET_VOID */
struct S946 {
	int id;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type SPECIAL [detachable ET_VOID] */
struct S947 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
struct S948 {
	int id;
};

/* Struct for type ET_SEMICOLON_SYMBOL */
struct S949 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
struct S950 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
struct S951 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_BRACKET_SYMBOL] */
struct S952 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
struct S953 {
	int id;
};

/* Struct for type ET_QUESTION_MARK_SYMBOL */
struct S954 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
};

/* Struct for type SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
struct S955 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
struct S956 {
	int id;
};

/* Struct for type ET_ACROSS_EXPRESSION */
struct S957 {
	int id;
	T6 a1; /* index */
	T0* a2; /* cursor_name */
	T0* a3; /* across_keyword */
	T0* a4; /* iterable_expression */
	T0* a5; /* as_keyword */
	T0* a6; /* until_conditional */
	T0* a7; /* iteration_conditional */
	T0* a8; /* end_keyword */
	T1 a9; /* is_all */
	T0* a10; /* invariant_part */
	T0* a11; /* variant_part */
	T0* a12; /* new_cursor_expression */
	T0* a13; /* cursor_after_expression */
	T0* a14; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_ACROSS_EXPRESSION] */
struct S958 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
struct S959 {
	int id;
};

/* Struct for type ET_ACROSS_INSTRUCTION */
struct S960 {
	int id;
	T0* a1; /* cursor_name */
	T0* a2; /* across_keyword */
	T0* a3; /* iterable_expression */
	T0* a4; /* as_keyword */
	T0* a5; /* from_compound */
	T0* a6; /* until_conditional */
	T0* a7; /* loop_compound */
	T0* a8; /* end_keyword */
	T0* a9; /* invariant_part */
	T0* a10; /* variant_part */
	T0* a11; /* new_cursor_expression */
	T0* a12; /* cursor_after_expression */
	T0* a13; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
struct S961 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S962 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S963 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S964 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S965 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S966 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S967 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S968 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S970 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S971 {
	int id;
};

/* Struct for type ET_AGENT_ARGUMENT_OPERAND_LIST */
struct S972 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S973 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
struct S974 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_AGENT_TARGET] */
struct S975 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
struct S976 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_ALIAS_NAME] */
struct S977 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
struct S978 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_ASSIGNER] */
struct S980 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_ARGUMENT_LIST] */
struct S981 {
	int id;
};

/* Struct for type ET_BRACKET_ARGUMENT_LIST */
struct S982 {
	int id;
	T0* a1; /* left_symbol */
	T0* a2; /* right_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_BRACKET_ARGUMENT_LIST] */
struct S983 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
struct S984 {
	int id;
};

/* Struct for type ET_BRACKET_EXPRESSION */
struct S985 {
	int id;
	T6 a1; /* index */
	T0* a2; /* target */
	T0* a3; /* name */
	T0* a4; /* arguments */
};

/* Struct for type SPECIAL [detachable ET_BRACKET_EXPRESSION] */
struct S986 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
struct S987 {
	int id;
};

/* Struct for type ET_CALL_AGENT */
struct S988 {
	int id;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* target */
	T0* a4; /* qualified_name */
	T0* a5; /* arguments */
	T0* a6; /* implicit_result */
};

/* Struct for type SPECIAL [detachable ET_CALL_AGENT] */
struct S989 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
struct S990 {
	int id;
};

/* Struct for type ET_CHECK_INSTRUCTION */
struct S991 {
	int id;
	T0* a1; /* check_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_CHECK_INSTRUCTION] */
struct S992 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
struct S993 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CHOICE] */
struct S995 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
struct S996 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CHOICE_CONSTANT] */
struct S998 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
struct S999 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CHOICE_ITEM] */
struct S1001 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
struct S1002 {
	int id;
};

/* Struct for type ET_CHOICE_LIST */
struct S1003 {
	int id;
	T0* a1; /* when_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CHOICE_LIST] */
struct S1004 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
struct S1005 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CLASS] */
struct S1006 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
struct S1007 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CLIENT_ITEM] */
struct S1008 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
struct S1009 {
	int id;
};

/* Struct for type ET_CLIENTS */
struct S1010 {
	int id;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CLIENTS] */
struct S1011 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
struct S1012 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_COMPOUND] */
struct S1013 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
struct S1014 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CONDITIONAL] */
struct S1016 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1017 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1019 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1020 {
	int id;
};

/* Struct for type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
struct S1021 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1022 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
struct S1023 {
	int id;
};

/* Struct for type ET_CONSTRAINT_CREATOR */
struct S1024 {
	int id;
	T0* a1; /* create_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
struct S1025 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
struct S1026 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_TYPE] */
struct S1028 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
struct S1029 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE] */
struct S1031 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
struct S1032 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
struct S1034 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
struct S1035 {
	int id;
};

/* Struct for type ET_CONVERT_FEATURE_LIST */
struct S1036 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* convert_keyword */
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
struct S1037 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
struct S1038 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CREATE_EXPRESSION] */
struct S1039 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
struct S1040 {
	int id;
};

/* Struct for type ET_CREATOR */
struct S1041 {
	int id;
	T0* a1; /* creation_keyword */
	T0* a2; /* clients */
	T0* a3; /* storage */
	T6 a4; /* count */
};

/* Struct for type SPECIAL [detachable ET_CREATOR] */
struct S1042 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
struct S1043 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CREATOR_LIST] */
struct S1044 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
struct S1045 {
	int id;
};

/* Struct for type ET_DEBUG_INSTRUCTION */
struct S1046 {
	int id;
	T0* a1; /* keys */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
struct S1047 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
struct S1048 {
	int id;
};

/* Struct for type ET_ELSEIF_PART */
struct S1049 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_PART] */
struct S1050 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
struct S1051 {
	int id;
};

/* Struct for type ET_ELSEIF_PART_LIST */
struct S1052 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_PART_LIST] */
struct S1053 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
struct S1054 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_EXPORT] */
struct S1056 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
struct S1057 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_EXPORT_LIST] */
struct S1058 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
struct S1059 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
struct S1060 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
struct S1061 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_EXTERNAL_ALIAS] */
struct S1063 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
struct S1064 {
	int id;
};

/* Struct for type ET_FEATURE_CLAUSE */
struct S1065 {
	int id;
	T0* a1; /* feature_keyword */
	T0* a2; /* clients */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_CLAUSE] */
struct S1066 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
struct S1067 {
	int id;
};

/* Struct for type ET_FEATURE_CLAUSE_LIST */
struct S1068 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
struct S1069 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
struct S1070 {
	int id;
};

/* Struct for type ET_FEATURE_EXPORT */
struct S1071 {
	int id;
	T0* a1; /* clients_clause */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_EXPORT] */
struct S1072 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
struct S1073 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_FEATURE_NAME] */
struct S1074 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
struct S1075 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
struct S1077 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
struct S1078 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT] */
struct S1079 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S1080 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S1082 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S1083 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S1084 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
struct S1085 {
	int id;
};

/* Struct for type ET_FORMAL_PARAMETER */
struct S1086 {
	int id;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* implementation_class */
	T0* a4; /* type_mark */
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER] */
struct S1087 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S1088 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S1090 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
struct S1091 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
struct S1092 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
struct S1093 {
	int id;
};

/* Struct for type ET_IF_INSTRUCTION */
struct S1094 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
	T0* a3; /* end_keyword */
	T0* a4; /* elseif_parts */
	T0* a5; /* else_compound */
};

/* Struct for type SPECIAL [detachable ET_IF_INSTRUCTION] */
struct S1095 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
struct S1096 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_INDEXING_LIST] */
struct S1098 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
struct S1099 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_INDEXING_ITEM] */
struct S1101 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
struct S1102 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_INDEXING_TERM] */
struct S1104 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
struct S1105 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
struct S1107 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
struct S1108 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_INDEXING_TERM_LIST] */
struct S1110 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
struct S1111 {
	int id;
};

/* Struct for type ET_INSPECT_INSTRUCTION */
struct S1112 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* when_parts */
	T0* a3; /* end_keyword */
	T0* a4; /* else_compound */
};

/* Struct for type SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
struct S1113 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
struct S1114 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_INSTRUCTION] */
struct S1116 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
struct S1117 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_INVARIANTS] */
struct S1118 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1119 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1120 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
struct S1121 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_LIKE_TYPE] */
struct S1123 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
struct S1124 {
	int id;
};

/* Struct for type ET_LOCAL_VARIABLE */
struct S1125 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE] */
struct S1126 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S1127 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S1129 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
struct S1130 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
struct S1131 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
struct S1132 {
	int id;
};

/* Struct for type ET_LOOP_INVARIANTS */
struct S1133 {
	int id;
	T0* a1; /* invariant_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_LOOP_INVARIANTS] */
struct S1134 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
struct S1135 {
	int id;
};

/* Struct for type ET_MANIFEST_ARRAY */
struct S1136 {
	int id;
	T6 a1; /* index */
	T0* a2; /* left_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* right_symbol */
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_ARRAY] */
struct S1137 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
struct S1138 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
struct S1140 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
struct S1141 {
	int id;
};

/* Struct for type ET_MANIFEST_STRING_LIST */
struct S1142 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
struct S1143 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
struct S1144 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_TUPLE] */
struct S1145 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
struct S1146 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_OBSOLETE] */
struct S1148 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S1149 {
	int id;
};

/* Struct for type ET_PARENTHESIZED_EXPRESSION */
struct S1150 {
	int id;
	T6 a1; /* index */
	T0* a2; /* left_parenthesis */
	T0* a3; /* expression */
	T0* a4; /* right_parenthesis */
};

/* Struct for type SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S1151 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
struct S1152 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_PARENT] */
struct S1153 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
struct S1154 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_PARENT_ITEM] */
struct S1155 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
struct S1156 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_PARENT_LIST] */
struct S1157 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
struct S1158 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_POSTCONDITIONS] */
struct S1159 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S1160 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S1162 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
struct S1163 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_RENAME_ITEM] */
struct S1165 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
struct S1166 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_RENAME_LIST] */
struct S1167 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
struct S1168 {
	int id;
};

/* Struct for type ET_STATIC_CALL_EXPRESSION */
struct S1169 {
	int id;
	T6 a1; /* index */
	T0* a2; /* feature_keyword */
	T0* a3; /* static_type */
	T0* a4; /* qualified_name */
	T0* a5; /* arguments */
	T0* a6; /* parenthesis_call */
};

/* Struct for type SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
struct S1170 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
struct S1171 {
	int id;
};

/* Struct for type ET_STRIP_EXPRESSION */
struct S1172 {
	int id;
	T6 a1; /* index */
	T0* a2; /* strip_keyword */
	T0* a3; /* left_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
	T0* a6; /* right_parenthesis */
};

/* Struct for type SPECIAL [detachable ET_STRIP_EXPRESSION] */
struct S1173 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
struct S1174 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_TYPE_ITEM] */
struct S1176 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
struct S1177 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_TYPE_LIST] */
struct S1179 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
struct S1180 {
	int id;
};

/* Struct for type ET_VARIANT */
struct S1181 {
	int id;
	T0* a1; /* variant_keyword */
	T0* a2; /* tag */
	T0* a3; /* expression */
};

/* Struct for type SPECIAL [detachable ET_VARIANT] */
struct S1182 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
struct S1183 {
	int id;
};

/* Struct for type ET_WHEN_PART */
struct S1184 {
	int id;
	T0* a1; /* choices */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_WHEN_PART] */
struct S1185 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
struct S1186 {
	int id;
};

/* Struct for type ET_WHEN_PART_LIST */
struct S1187 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_WHEN_PART_LIST] */
struct S1188 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
struct S1189 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_WRITABLE] */
struct S1190 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_OBJECT_TEST_LIST */
struct S1193 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_ACROSS_COMPONENT_LIST */
struct S1194 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_C3_CHARACTER_CONSTANT */
struct S1195 {
	int id;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T6 a3; /* compressed_position */
	T0* a4; /* literal */
	T3 a5; /* value */
	T0* a6; /* type */
};

/* Struct for type ET_VERBATIM_STRING */
struct S1196 {
	int id;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* marker */
	T0* a7; /* open_white_characters */
	T0* a8; /* close_white_characters */
	T1 a9; /* is_left_aligned */
	T0* a10; /* type */
};

/* Struct for type ET_SPECIAL_MANIFEST_STRING */
struct S1197 {
	int id;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type ET_REGULAR_INTEGER_CONSTANT */
struct S1198 {
	int id;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_overflow */
	T11 a7; /* value */
	T0* a8; /* type */
};

/* Struct for type ET_UNDERSCORED_INTEGER_CONSTANT */
struct S1199 {
	int id;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_overflow */
	T11 a7; /* value */
	T0* a8; /* type */
};

/* Struct for type ET_HEXADECIMAL_INTEGER_CONSTANT */
struct S1200 {
	int id;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_overflow */
	T11 a7; /* value */
	T0* a8; /* type */
};

/* Struct for type ET_OCTAL_INTEGER_CONSTANT */
struct S1201 {
	int id;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_overflow */
	T11 a7; /* value */
	T0* a8; /* type */
};

/* Struct for type ET_BINARY_INTEGER_CONSTANT */
struct S1202 {
	int id;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_overflow */
	T11 a7; /* value */
	T0* a8; /* type */
};

/* Struct for type ET_REGULAR_REAL_CONSTANT */
struct S1203 {
	int id;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type ET_UNDERSCORED_REAL_CONSTANT */
struct S1204 {
	int id;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type ET_TRUE_CONSTANT */
struct S1206 {
	int id;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type ET_FALSE_CONSTANT */
struct S1207 {
	int id;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type ET_C1_CHARACTER_CONSTANT */
struct S1208 {
	int id;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T6 a3; /* compressed_position */
	T3 a4; /* value */
	T0* a5; /* type */
};

/* Struct for type ET_C2_CHARACTER_CONSTANT */
struct S1209 {
	int id;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T6 a3; /* compressed_position */
	T3 a4; /* value */
	T0* a5; /* type */
};

/* Struct for type ET_CUSTOM_ATTRIBUTE */
struct S1213 {
	int id;
	T0* a1; /* creation_expression */
	T0* a2; /* settings */
	T0* a3; /* end_keyword */
};

/* Struct for type ET_CONSTRAINED_FORMAL_PARAMETER */
struct S1214 {
	int id;
	T0* a1; /* arrow_symbol */
	T0* a2; /* constraint */
	T0* a3; /* creation_procedures */
	T0* a4; /* type_mark */
	T6 a5; /* index */
	T0* a6; /* name */
	T0* a7; /* implementation_class */
	T0* a8; /* constraint_base_type */
};

/* Struct for type ET_CONSTRAINT_NAMED_TYPE */
struct S1215 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
};

/* Struct for type ET_ATTACHMENT_SEPARATE_KEYWORDS */
struct S1216 {
	int id;
	T0* a1; /* attachment_keyword */
	T0* a2; /* separateness_keyword */
};

/* Struct for type ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD */
struct S1217 {
	int id;
	T0* a1; /* attachment_symbol */
	T0* a2; /* separateness_keyword */
};

/* Struct for type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
struct S1218 {
	int id;
	T0* a1; /* label */
	T0* a2; /* colon */
	T0* a3; /* type */
};

/* Struct for type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
struct S1219 {
	int id;
	T0* a1; /* label */
	T0* a2; /* comma */
	T0* a3; /* type */
};

/* Struct for type ET_RENAME */
struct S1220 {
	int id;
	T0* a1; /* old_name */
	T0* a2; /* as_keyword */
	T0* a3; /* new_name */
};

/* Struct for type ET_ALL_EXPORT */
struct S1221 {
	int id;
	T0* a1; /* clients_clause */
	T0* a2; /* all_keyword */
};

/* Struct for type ET_CONVERT_FUNCTION */
struct S1223 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* colon */
};

/* Struct for type ET_CONVERT_PROCEDURE */
struct S1224 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type ET_DO_FUNCTION */
struct S1226 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T0* a6; /* preconditions */
	T6 a7; /* hash_code */
	T0* a8; /* arguments */
	T0* a9; /* postconditions */
	T0* a10; /* assigner */
	T0* a11; /* declared_type */
	T0* a12; /* obsolete_message */
	T0* a13; /* locals */
	T0* a14; /* compound */
	T0* a15; /* rescue_clause */
	T0* a16; /* clients */
	T0* a17; /* is_keyword */
	T0* a18; /* end_keyword */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* first_indexing */
	T0* a22; /* object_tests */
	T0* a23; /* across_components */
	T0* a24; /* other_seeds */
	T0* a25; /* extended_name */
	T0* a26; /* frozen_keyword */
	T1 a27; /* validity_checked */
	T1 a28; /* has_validity_error */
	T6 a29; /* id */
	T6 a30; /* version */
	T0* a31; /* synonym */
};

/* Struct for type ET_ONCE_FUNCTION */
struct S1227 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T0* a6; /* preconditions */
	T6 a7; /* hash_code */
	T0* a8; /* arguments */
	T0* a9; /* postconditions */
	T0* a10; /* assigner */
	T0* a11; /* declared_type */
	T0* a12; /* obsolete_message */
	T0* a13; /* locals */
	T0* a14; /* compound */
	T0* a15; /* rescue_clause */
	T0* a16; /* clients */
	T0* a17; /* is_keyword */
	T0* a18; /* end_keyword */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* first_indexing */
	T0* a22; /* object_tests */
	T0* a23; /* across_components */
	T0* a24; /* other_seeds */
	T0* a25; /* extended_name */
	T0* a26; /* frozen_keyword */
	T1 a27; /* validity_checked */
	T1 a28; /* has_validity_error */
	T6 a29; /* id */
	T6 a30; /* version */
	T0* a31; /* keys */
	T0* a32; /* synonym */
};

/* Struct for type ET_DEFERRED_FUNCTION */
struct S1228 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T0* a6; /* preconditions */
	T6 a7; /* hash_code */
	T0* a8; /* arguments */
	T0* a9; /* postconditions */
	T0* a10; /* assigner */
	T0* a11; /* declared_type */
	T0* a12; /* obsolete_message */
	T0* a13; /* clients */
	T0* a14; /* is_keyword */
	T0* a15; /* deferred_keyword */
	T0* a16; /* end_keyword */
	T0* a17; /* semicolon */
	T0* a18; /* feature_clause */
	T0* a19; /* first_indexing */
	T0* a20; /* object_tests */
	T0* a21; /* across_components */
	T0* a22; /* frozen_keyword */
	T0* a23; /* other_seeds */
	T0* a24; /* extended_name */
	T1 a25; /* validity_checked */
	T1 a26; /* has_validity_error */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* synonym */
};

/* Struct for type ET_ONCE_PROCEDURE */
struct S1230 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* compound */
	T0* a4; /* implementation_feature */
	T0* a5; /* first_precursor */
	T0* a6; /* other_precursors */
	T0* a7; /* preconditions */
	T6 a8; /* hash_code */
	T0* a9; /* arguments */
	T0* a10; /* postconditions */
	T0* a11; /* obsolete_message */
	T0* a12; /* locals */
	T0* a13; /* rescue_clause */
	T0* a14; /* clients */
	T0* a15; /* is_keyword */
	T0* a16; /* end_keyword */
	T0* a17; /* semicolon */
	T0* a18; /* feature_clause */
	T0* a19; /* first_indexing */
	T0* a20; /* object_tests */
	T0* a21; /* across_components */
	T0* a22; /* extended_name */
	T0* a23; /* other_seeds */
	T0* a24; /* frozen_keyword */
	T1 a25; /* validity_checked */
	T1 a26; /* has_validity_error */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* keys */
	T0* a30; /* synonym */
};

/* Struct for type ET_EXTERNAL_PROCEDURE */
struct S1231 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T0* a6; /* preconditions */
	T6 a7; /* hash_code */
	T6 a8; /* builtin_code */
	T0* a9; /* arguments */
	T0* a10; /* postconditions */
	T0* a11; /* language */
	T0* a12; /* obsolete_message */
	T0* a13; /* alias_clause */
	T0* a14; /* clients */
	T0* a15; /* is_keyword */
	T0* a16; /* end_keyword */
	T0* a17; /* semicolon */
	T0* a18; /* feature_clause */
	T0* a19; /* first_indexing */
	T0* a20; /* object_tests */
	T0* a21; /* across_components */
	T0* a22; /* other_seeds */
	T0* a23; /* extended_name */
	T0* a24; /* frozen_keyword */
	T1 a25; /* validity_checked */
	T1 a26; /* has_validity_error */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* synonym */
};

/* Struct for type ET_PREFIX_NAME */
struct S1232 {
	int id;
	T6 a1; /* seed */
	T2 a2; /* code */
	T0* a3; /* prefix_keyword */
	T0* a4; /* operator_name */
};

/* Struct for type ET_PREFIX_FREE_NAME */
struct S1233 {
	int id;
	T6 a1; /* hash_code */
	T6 a2; /* seed */
	T0* a3; /* prefix_keyword */
	T0* a4; /* operator_name */
	T2 a5; /* code */
};

/* Struct for type ET_INFIX_NAME */
struct S1234 {
	int id;
	T6 a1; /* seed */
	T2 a2; /* code */
	T0* a3; /* infix_keyword */
	T0* a4; /* operator_name */
};

/* Struct for type ET_ALIASED_FEATURE_NAME */
struct S1235 {
	int id;
	T0* a1; /* feature_name */
	T0* a2; /* alias_name */
};

/* Struct for type ET_ALIAS_FREE_NAME */
struct S1236 {
	int id;
	T6 a1; /* hash_code */
	T2 a2; /* code */
	T0* a3; /* alias_string */
	T0* a4; /* alias_keyword */
	T6 a5; /* seed */
};

/* Struct for type ET_LABELED_ACTUAL_PARAMETER */
struct S1239 {
	int id;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_LIKE_FEATURE */
struct S1241 {
	int id;
	T6 a1; /* seed */
	T0* a2; /* type_mark */
	T0* a3; /* like_keyword */
	T0* a4; /* name */
	T1 a5; /* is_procedure */
};

/* Struct for type ET_QUALIFIED_LIKE_BRACED_TYPE */
struct S1242 {
	int id;
	T0* a1; /* target_type */
	T0* a2; /* type_mark */
	T0* a3; /* like_keyword */
	T0* a4; /* qualified_name */
	T0* a5; /* left_brace */
	T0* a6; /* right_brace */
};

/* Struct for type ET_QUALIFIED_LIKE_TYPE */
struct S1243 {
	int id;
	T0* a1; /* target_type */
	T0* a2; /* type_mark */
	T0* a3; /* qualified_name */
};

/* Struct for type ET_ASSIGNER_INSTRUCTION */
struct S1244 {
	int id;
	T0* a1; /* call */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T0* a4; /* name */
};

/* Struct for type ET_ASSIGNMENT */
struct S1245 {
	int id;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
};

/* Struct for type ET_ASSIGNMENT_ATTEMPT */
struct S1246 {
	int id;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_attempt_symbol */
};

/* Struct for type ET_LOOP_INSTRUCTION */
struct S1247 {
	int id;
	T0* a1; /* from_compound */
	T0* a2; /* until_conditional */
	T0* a3; /* loop_compound */
	T0* a4; /* end_keyword */
	T0* a5; /* invariant_part */
	T0* a6; /* variant_part */
	T1 a7; /* has_old_variant_syntax */
};

/* Struct for type ET_NULL_INSTRUCTION */
struct S1248 {
	int id;
};

/* Struct for type ET_BANG_INSTRUCTION */
struct S1249 {
	int id;
	T0* a1; /* type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* left_bang */
	T0* a5; /* right_bang */
};

/* Struct for type ET_CREATE_INSTRUCTION */
struct S1250 {
	int id;
	T0* a1; /* creation_type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* create_keyword */
};

/* Struct for type ET_CHOICE_RANGE */
struct S1251 {
	int id;
	T0* a1; /* lower */
	T0* a2; /* upper */
	T0* a3; /* dotdot */
};

/* Struct for type ET_PRECURSOR_INSTRUCTION */
struct S1252 {
	int id;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a4; /* is_parent_prefixed */
	T0* a5; /* parenthesis_call */
	T0* a6; /* parent_type */
};

/* Struct for type ET_STATIC_CALL_INSTRUCTION */
struct S1254 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* parenthesis_call */
};

/* Struct for type ET_PRECURSOR_EXPRESSION */
struct S1255 {
	int id;
	T6 a1; /* index */
	T1 a2; /* is_parent_prefixed */
	T0* a3; /* parent_name */
	T0* a4; /* precursor_keyword */
	T0* a5; /* arguments */
	T0* a6; /* parenthesis_call */
	T0* a7; /* parent_type */
};

/* Struct for type ET_FEATURE_ADDRESS */
struct S1256 {
	int id;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* name */
};

/* Struct for type ET_CURRENT_ADDRESS */
struct S1257 {
	int id;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* current_keyword */
};

/* Struct for type ET_RESULT_ADDRESS */
struct S1258 {
	int id;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* result_keyword */
};

/* Struct for type ET_EXPRESSION_ADDRESS */
struct S1259 {
	int id;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* expression */
};

/* Struct for type ET_INFIX_EXPRESSION */
struct S1260 {
	int id;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* name */
	T0* a4; /* right */
	T1 a5; /* is_boolean_operator */
};

/* Struct for type ET_INFIX_AND_THEN_OPERATOR */
struct S1261 {
	int id;
	T0* a1; /* and_keyword */
	T0* a2; /* then_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_INFIX_OR_ELSE_OPERATOR */
struct S1262 {
	int id;
	T0* a1; /* or_keyword */
	T0* a2; /* else_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_MANIFEST_TYPE */
struct S1263 {
	int id;
	T6 a1; /* index */
	T0* a2; /* left_brace */
	T0* a3; /* type */
	T0* a4; /* right_brace */
};

/* Struct for type ET_PREFIX_EXPRESSION */
struct S1264 {
	int id;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* expression */
	T1 a4; /* is_boolean_operator */
};

/* Struct for type ET_OLD_EXPRESSION */
struct S1265 {
	int id;
	T6 a1; /* index */
	T0* a2; /* old_keyword */
	T0* a3; /* expression */
};

/* Struct for type ET_OLD_OBJECT_TEST */
struct S1266 {
	int id;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* left_brace */
	T0* a4; /* attached_keyword */
	T0* a5; /* as_keyword */
	T0* a6; /* colon */
	T0* a7; /* declared_type */
	T0* a8; /* right_brace */
	T0* a9; /* expression */
};

/* Struct for type ET_ONCE_MANIFEST_STRING */
struct S1267 {
	int id;
	T6 a1; /* index */
	T0* a2; /* once_keyword */
	T0* a3; /* manifest_string */
	T6 a4; /* id */
};

/* Struct for type ET_DO_FUNCTION_INLINE_AGENT */
struct S1268 {
	int id;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* declared_type */
	T0* a5; /* end_keyword */
	T0* a6; /* implicit_result */
	T0* a7; /* object_tests */
	T0* a8; /* across_components */
	T0* a9; /* actual_arguments */
	T0* a10; /* preconditions */
	T0* a11; /* locals */
	T0* a12; /* compound */
	T0* a13; /* postconditions */
	T0* a14; /* rescue_clause */
	T0* a15; /* target */
};

/* Struct for type ET_ONCE_FUNCTION_INLINE_AGENT */
struct S1269 {
	int id;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* declared_type */
	T0* a5; /* end_keyword */
	T0* a6; /* implicit_result */
	T0* a7; /* object_tests */
	T0* a8; /* across_components */
	T0* a9; /* actual_arguments */
	T0* a10; /* preconditions */
	T0* a11; /* locals */
	T0* a12; /* keys */
	T0* a13; /* compound */
	T0* a14; /* postconditions */
	T0* a15; /* rescue_clause */
	T0* a16; /* target */
};

/* Struct for type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
struct S1270 {
	int id;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* language */
	T0* a4; /* object_tests */
	T0* a5; /* across_components */
	T0* a6; /* actual_arguments */
	T0* a7; /* preconditions */
	T0* a8; /* alias_clause */
	T0* a9; /* postconditions */
	T0* a10; /* formal_arguments */
	T0* a11; /* declared_type */
	T0* a12; /* end_keyword */
	T0* a13; /* implicit_result */
	T0* a14; /* target */
};

/* Struct for type ET_DO_PROCEDURE_INLINE_AGENT */
struct S1271 {
	int id;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* end_keyword */
	T0* a5; /* object_tests */
	T0* a6; /* across_components */
	T0* a7; /* actual_arguments */
	T0* a8; /* preconditions */
	T0* a9; /* locals */
	T0* a10; /* compound */
	T0* a11; /* postconditions */
	T0* a12; /* rescue_clause */
	T0* a13; /* target */
};

/* Struct for type ET_ONCE_PROCEDURE_INLINE_AGENT */
struct S1272 {
	int id;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* end_keyword */
	T0* a5; /* object_tests */
	T0* a6; /* across_components */
	T0* a7; /* actual_arguments */
	T0* a8; /* preconditions */
	T0* a9; /* locals */
	T0* a10; /* keys */
	T0* a11; /* compound */
	T0* a12; /* postconditions */
	T0* a13; /* rescue_clause */
	T0* a14; /* target */
};

/* Struct for type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
struct S1273 {
	int id;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* language */
	T0* a4; /* object_tests */
	T0* a5; /* across_components */
	T0* a6; /* actual_arguments */
	T0* a7; /* preconditions */
	T0* a8; /* alias_clause */
	T0* a9; /* postconditions */
	T0* a10; /* formal_arguments */
	T0* a11; /* end_keyword */
	T0* a12; /* target */
};

/* Struct for type ET_AGENT_OPEN_TARGET */
struct S1274 {
	int id;
	T0* a1; /* left_brace */
	T0* a2; /* type */
	T0* a3; /* right_brace */
	T6 a4; /* index */
};

/* Struct for type ET_AGENT_TYPED_OPEN_ARGUMENT */
struct S1275 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
	T0* a4; /* question_mark */
	T6 a5; /* index */
};

/* Struct for type ET_TAGGED_ASSERTION */
struct S1277 {
	int id;
	T0* a1; /* tag */
	T0* a2; /* expression */
};

/* Struct for type ET_FILE_POSITION */
struct S1278 {
	int id;
	T6 a1; /* compressed_position */
	T0* a2; /* filename */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
struct S1279 {
	int id;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* items */
};

/* Struct for type DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
struct S1280 {
	int id;
	T6 a1; /* count */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T0* a10; /* internal_cursor */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_PARENT_CHECKER1 */
struct S1281 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* current_parent */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER1 */
struct S1282 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* formal_parameter_sorter */
	T0* a3; /* direct_formal_parameter_sorter */
	T0* a4; /* current_class */
	T0* a5; /* current_formal */
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1283 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T0* a10; /* equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T6 a17; /* capacity */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_NAME_TESTER */
struct S1284 {
	int id;
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1286 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* special_key_routines */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* internal_cursor */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ALIAS_NAME_TESTER */
struct S1287 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLIENT_LIST] */
struct S1289 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
struct S1290 {
	int id;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* count */
	T0* a17; /* internal_keys */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_ADAPTATION_RESOLVER */
struct S1291 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* rename_table */
	T0* a3; /* export_table */
	T0* a4; /* undefine_table */
	T0* a5; /* redefine_table */
	T0* a6; /* select_table */
	T0* a7; /* alias_mapping */
	T0* a8; /* replicable_features */
	T0* a9; /* current_class */
	T0* a10; /* free_parent_feature */
	T0* a11; /* parent_feature_list */
	T0* a12; /* free_inherited_feature */
	T0* a13; /* inherited_feature_list */
	T0* a14; /* free_redeclared_feature */
	T0* a15; /* redeclared_feature_list */
};

/* Struct for type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
struct S1292 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* dotnet_features */
	T0* a3; /* other_dotnet_features */
	T0* a4; /* current_class */
	T0* a5; /* free_parent_feature */
	T0* a6; /* parent_feature_list */
	T0* a7; /* free_inherited_feature */
	T0* a8; /* inherited_feature_list */
	T0* a9; /* free_redeclared_feature */
	T0* a10; /* redeclared_feature_list */
};

/* Struct for type ET_IDENTIFIER_TYPE_RESOLVER */
struct S1293 {
	int id;
	T0* a1; /* current_class */
	T1 a2; /* has_fatal_error */
	T0* a3; /* current_feature */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
struct S1294 {
	int id;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
};

/* Struct for type ET_ANCHORED_TYPE_CHECKER */
struct S1295 {
	int id;
	T0* a1; /* anchored_type_sorter */
	T0* a2; /* current_class */
	T1 a3; /* has_fatal_error */
	T0* a4; /* current_anchored_type */
};

/* Struct for type ET_SIGNATURE_CHECKER */
struct S1296 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* parent_context */
	T0* a3; /* current_class */
	T6 a4; /* processing_mode */
};

/* Struct for type ET_PARENT_CHECKER2 */
struct S1297 {
	int id;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER2 */
struct S1298 {
	int id;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_BUILTIN_FEATURE_CHECKER */
struct S1299 {
	int id;
	T0* a1; /* current_class */
	T1 a2; /* has_fatal_error */
};

/* Struct for type ET_PRECURSOR_CHECKER */
struct S1300 {
	int id;
	T0* a1; /* current_feature */
	T0* a2; /* current_class */
	T1 a3; /* has_fatal_error */
};

/* Struct for type DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
struct S1301 {
	int id;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* count */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_SET [ET_CLASS] */
struct S1302 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T6 a5; /* capacity */
	T6 a6; /* modulus */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type ET_PARENT_CHECKER3 */
struct S1303 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* classes_to_be_processed */
	T0* a3; /* current_class */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
struct S1304 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_class */
	T1 a4; /* in_qualified_anchored_type */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
struct S1305 {
	int id;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
};

/* Struct for type ET_PARENT_FEATURE */
struct S1307 {
	int id;
	T0* a1; /* next */
	T0* a2; /* parent */
	T0* a3; /* precursor_feature */
	T0* a4; /* new_name */
	T0* a5; /* undefine_name */
	T0* a6; /* redefine_name */
	T0* a7; /* select_name */
	T0* a8; /* merged_feature */
};

/* Struct for type ET_INHERITED_FEATURE */
struct S1308 {
	int id;
	T0* a1; /* next */
	T0* a2; /* parent_feature */
	T0* a3; /* flattened_feature */
	T0* a4; /* flattened_parent */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T1 a7; /* is_selected */
	T0* a8; /* replicated_features */
	T0* a9; /* replicated_seeds */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
struct S1309 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
struct S1310 {
	int id;
};

/* Struct for type SPECIAL [ET_DOTNET_ASSEMBLY] */
struct S1311 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
struct S1313 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
	T0* a6; /* equality_tester */
};

/* Struct for type ET_BRACED_TYPE_LIST */
struct S1315 {
	int id;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS] */
struct S1316 {
	int id;
	T6 a1; /* count */
	T0* a2; /* equality_tester */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_MASTER_CLASS] */
struct S1317 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* equality_tester */
	T0* a6; /* internal_cursor */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_UNIVERSE] */
struct S1318 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_UNIVERSE] */
struct S1319 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
struct S1321 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
struct S1322 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
struct S1324 {
	int id;
};

/* Struct for type SPECIAL [ET_INTERNAL_UNIVERSE] */
struct S1325 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER1 */
struct S1326 {
	int id;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER2 */
struct S1327 {
	int id;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
struct S1328 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER3 */
struct S1329 {
	int id;
	T1 a1; /* has_fatal_error */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
struct S1330 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_STACK [YY_BUFFER] */
struct S1331 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
};

/* Struct for type UT_SYNTAX_ERROR */
struct S1332 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type UT_TOO_MANY_INCLUDES_ERROR */
struct S1333 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_DYNAMIC_TARGET_LIST */
struct S1335 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type XM_NAMESPACE_RESOLVER_CONTEXT */
struct S1336 {
	int id;
	T0* a1; /* context */
};

/* Struct for type DS_LINKED_QUEUE [STRING_8] */
struct S1338 {
	int id;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
};

/* Struct for type detachable KL_EQUALITY_TESTER [XM_NAMESPACE] */
struct S1339 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
struct S1340 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
struct S1341 {
	int id;
};

/* Struct for type SPECIAL [XM_NAMESPACE] */
struct S1342 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type XM_EIFFEL_CHARACTER_ENTITY */
struct S1343 {
	int id;
	T6 a1; /* code */
};

/* Struct for type detachable DS_BILINKABLE [XM_POSITION] */
struct S1344 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
struct S1345 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [XM_EIFFEL_SCANNER] */
struct S1346 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
struct S1347 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S1350 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
struct S1351 {
	int id;
};

/* Struct for type detachable KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
struct S1352 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
struct S1353 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
struct S1354 {
	int id;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1355 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1356 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [STRING_8] */
struct S1357 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_BILINKABLE [STRING_8] */
struct S1358 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type SPECIAL [ET_ECF_TARGET] */
struct S1359 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
struct S1360 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
struct S1361 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_ADAPTED_LIBRARY] */
struct S1362 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
struct S1363 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
struct S1364 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_LIBRARY] */
struct S1365 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIBRARY] */
struct S1366 {
	int id;
};

/* Struct for type SPECIAL [ET_LIBRARY] */
struct S1367 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1368 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1369 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1370 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [NATIVE_STRING] */
struct S1371 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
struct S1372 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
struct S1373 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
struct S1374 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
struct S1375 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
struct S1377 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
struct S1378 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
struct S1379 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT] */
struct S1380 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [NATURAL_8] */
struct S1383 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
struct S1384 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type ET_XACE_INVALID_EXPRESSION_ERROR */
struct S1386 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
struct S1389 {
	int id;
	T6 a1; /* position */
	T6 a2; /* last_position */
	T6 a3; /* capacity */
	T6 a4; /* slots_position */
	T6 a5; /* count */
	T6 a6; /* modulus */
	T6 a7; /* clashes_previous_position */
	T0* a8; /* key_equality_tester */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* item_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
struct S1390 {
	int id;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1391 {
	int id;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type KL_AGENT_ROUTINES [ET_UNIVERSE] */
struct S1392 {
	int id;
};

/* Struct for type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_UNIVERSE]] */
struct S1393 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	T1 (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
struct S1394 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_UNIVERSE]]] */
struct S1395 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type KL_AGENT_HASH_FUNCTION [STRING_8] */
struct S1398 {
	int id;
	T0* a1; /* hash_agent */
};

/* Struct for type [attached] TUPLE [STRING_8] */
struct S1399 {
	int id;
	T0* z1;
};

/* Struct for type [attached] FUNCTION [KL_STRING_ROUTINES, [attached] TUPLE [STRING_8], INTEGER_32] */
struct S1400 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	T6 (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [KL_STRING_ROUTINES] */
struct S1401 {
	int id;
	T0* z1;
};

/* Struct for type ET_ACTUAL_PARAMETER_SUBLIST */
struct S1403 {
	int id;
	T6 a1; /* upper */
	T6 a2; /* lower */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
struct S1404 {
	int id;
	T6 a1; /* count */
	T6 a2; /* tuple_position */
	T0* a3; /* actual_parameters */
	T0* a4; /* tuple_type */
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
struct S1407 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type XM_COMMENT */
struct S1408 {
	int id;
	T0* a1; /* data */
	T0* a2; /* parent */
};

/* Struct for type XM_PROCESSING_INSTRUCTION */
struct S1409 {
	int id;
	T0* a1; /* target */
	T0* a2; /* data */
	T0* a3; /* parent */
};

/* Struct for type XM_CHARACTER_DATA */
struct S1410 {
	int id;
	T0* a1; /* content */
	T0* a2; /* parent */
};

/* Struct for type detachable DS_CELL [detachable ET_CLASS] */
struct S1416 {
	int id;
	T0* a1; /* item */
};

/* Struct for type [attached] TUPLE [detachable DS_CELL [detachable ET_CLASS]] */
struct S1417 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
struct S1418 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLUSTER] */
struct S1419 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
struct S1420 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_FORMAL_PARAMETER_TYPE */
struct S1421 {
	int id;
	T0* a1; /* implementation_class */
	T6 a2; /* index */
	T0* a3; /* type_mark */
	T0* a4; /* name */
};

/* Struct for type ET_UNQUALIFIED_CALL_INSTRUCTION */
struct S1422 {
	int id;
	T0* a1; /* name */
	T0* a2; /* arguments */
	T0* a3; /* parenthesis_call */
};

/* Struct for type [attached] TUPLE [ET_EIFFEL_PARSER, DS_ARRAYED_LIST [STRING_8]] */
struct S1424 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
struct S1425 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_FEATURE_IDS */
struct S1432 {
	int id;
	T6 a1; /* count */
	T0* a2; /* feature_ids */
};

/* Struct for type HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
struct S1433 {
	int id;
	T6 a1; /* last_state */
	T1 a2; /* internal_overflowed */
	T11 a3; /* part1 */
	T11 a4; /* part2 */
	T0* a5; /* leading_separators */
	T0* a6; /* trailing_separators */
	T6 a7; /* sign */
	T6 a8; /* conversion_type */
	T2 a9; /* internal_lookahead */
	T1 a10; /* leading_separators_acceptable */
	T1 a11; /* trailing_separators_acceptable */
};

/* Struct for type INTEGER_OVERFLOW_CHECKER */
struct S1436 {
	int id;
	T0* a1; /* integer_overflow_state1 */
	T0* a2; /* integer_overflow_state2 */
	T0* a3; /* natural_overflow_state1 */
	T0* a4; /* natural_overflow_state2 */
};

/* Struct for type SPECIAL [ARRAY [INTEGER_32]] */
struct S1437 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
struct S1438 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
struct S1439 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
struct S1440 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
struct S1441 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
struct S1442 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1443 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
struct S1444 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
struct S1445 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
struct S1446 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
struct S1447 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
struct S1448 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_CONDITION] */
struct S1449 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type detachable DS_LINKABLE [XM_DOCUMENT_NODE] */
struct S1450 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_QUEUE [CHARACTER_8] */
struct S1455 {
	int id;
	T6 a1; /* count */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
};

/* Struct for type UC_UTF16_ROUTINES */
struct S1456 {
	int id;
};

/* Struct for type SPECIAL [ET_ADAPTED_UNIVERSE] */
struct S1457 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
struct S1458 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
struct S1459 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type LX_DFA_WILDCARD */
struct S1460 {
	int id;
	T0* a1; /* pattern */
	T1 a2; /* is_case_insensitive */
	T0* a3; /* yy_nxt */
	T0* a4; /* yy_accept */
	T6 a5; /* yyNb_rows */
	T6 a6; /* match_count */
	T6 a7; /* subject_start */
	T6 a8; /* subject_end */
	T0* a9; /* subject */
	T6 a10; /* matched_start */
	T6 a11; /* matched_end */
};

/* Struct for type DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
struct S1461 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
struct S1463 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
struct S1464 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [ET_XACE_CLUSTER] */
struct S1465 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
struct S1466 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
struct S1467 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_NAMED_CLASS] */
struct S1468 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
struct S1470 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
struct S1472 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_QUERY] */
struct S1473 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [detachable ET_OBJECT_TEST_LIST] */
struct S1474 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
struct S1475 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
struct S1476 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
struct S1477 {
	int id;
};

/* Struct for type SPECIAL [ET_ASSERTION_ITEM] */
struct S1478 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
struct S1479 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
struct S1480 {
	int id;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
struct S1481 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
struct S1482 {
	int id;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* modulus */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* internal_cursor */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
struct S1485 {
	int id;
	T0* a1; /* cycle */
	T0* a2; /* sorted_items */
	T0* a3; /* items */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* indexes */
};

/* Struct for type detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
struct S1486 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1487 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_FLATTENED_FEATURE] */
struct S1488 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
struct S1491 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1493 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
struct S1494 {
	int id;
};

/* Struct for type SPECIAL [ET_CLIENT_LIST] */
struct S1495 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
struct S1496 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
struct S1498 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT] */
struct S1499 {
	int id;
};

/* Struct for type SPECIAL [ET_CLIENT] */
struct S1500 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME] */
struct S1501 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* internal_cursor */
	T6 a4; /* count */
	T0* a5; /* item_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* position */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* modulus */
	T0* a12; /* equality_tester */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* key_storage */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_CALL_NAME_TESTER */
struct S1502 {
	int id;
};

/* Struct for type DS_HASH_SET [ET_CALL_NAME] */
struct S1504 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* internal_cursor */
	T6 a4; /* count */
	T0* a5; /* item_storage */
	T6 a6; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T0* a10; /* equality_tester */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME] */
struct S1505 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 a3; /* found_position */
	T0* a4; /* internal_cursor */
	T0* a5; /* key_storage */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* position */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* modulus */
	T0* a13; /* equality_tester */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* special_item_routines */
	T0* a17; /* clashes */
	T0* a18; /* slots */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME] */
struct S1506 {
	int id;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a11; /* slots_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* internal_cursor */
	T0* a15; /* key_storage */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1507 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_REDECLARED_FEATURE */
struct S1508 {
	int id;
	T0* a1; /* next */
	T0* a2; /* flattened_feature */
	T1 a3; /* is_selected */
	T0* a4; /* replicated_features */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T0* a7; /* parent_feature */
	T0* a8; /* replicated_seeds */
};

/* Struct for type ET_REPLICATED_FEATURE */
struct S1511 {
	int id;
	T0* a1; /* features */
	T6 a2; /* selected_count */
};

/* Struct for type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
struct S1512 {
	int id;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
struct S1513 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DOTNET_SIGNATURE_TESTER */
struct S1514 {
	int id;
};

/* Struct for type DS_HASH_SET [ET_DOTNET_FEATURE] */
struct S1515 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T6 a9; /* count */
	T6 a10; /* slots_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* internal_cursor */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1517 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
struct S1519 {
	int id;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
struct S1520 {
	int id;
	T0* a1; /* cycle */
	T0* a2; /* counts */
	T0* a3; /* successors */
	T0* a4; /* items */
	T0* a5; /* sorted_items */
	T0* a6; /* indexes */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1521 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_LINKED_LIST [ET_PARENT_FEATURE] */
struct S1522 {
	int id;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
struct S1523 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS] */
struct S1524 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
struct S1526 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
struct S1527 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
struct S1528 {
	int id;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [YY_BUFFER] */
struct S1530 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [YY_BUFFER] */
struct S1531 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TARGET] */
struct S1532 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
struct S1533 {
	int id;
};

/* Struct for type DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1535 {
	int id;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1536 {
	int id;
	T1 a1; /* before */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* after */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
struct S1537 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
struct S1538 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type [attached] TUPLE [ET_GROUP] */
struct S1539 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
struct S1540 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLASS]], [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_CLASS]]] */
struct S1541 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1542 {
	int id;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type ET_CLUSTER_ERROR */
struct S1543 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* cluster */
};

/* Struct for type ET_SYNTAX_ERROR */
struct S1544 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* filename */
	T0* a6; /* position */
	T1 a7; /* ise_reported */
	T1 a8; /* ise_fatal */
	T1 a9; /* ge_reported */
	T1 a10; /* ge_fatal */
};

/* Struct for type AP_OPTION_COMPARATOR */
struct S1545 {
	int id;
};

/* Struct for type DS_QUICK_SORTER [AP_OPTION] */
struct S1546 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type [attached] TUPLE [ET_XACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1549 {
	int id;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1550 {
	int id;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type ET_FORMAL_COMMA_ARGUMENT */
struct S1556 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type ET_LOCAL_COMMA_VARIABLE */
struct S1557 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type ET_LABELED_COMMA_ACTUAL_PARAMETER */
struct S1558 {
	int id;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_KEYWORD_EXPRESSION */
struct S1560 {
	int id;
	T0* a1; /* expression */
	T0* a2; /* keyword */
};

/* Struct for type detachable DS_LINKABLE [XM_ELEMENT_NODE] */
struct S1562 {
	int id;
	T0* a1; /* right */
	T0* a2; /* item */
};

/* Struct for type DS_QUICK_SORTER [ET_QUERY] */
struct S1564 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type DS_QUICK_SORTER [ET_PROCEDURE] */
struct S1565 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type [attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
struct S1570 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
struct S1571 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [ET_ECF_INTERNAL_UNIVERSE, ET_ECF_STATE] */
struct S1572 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [ET_ECF_EXTERNAL_OBJECT] */
struct S1574 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
struct S1575 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
struct S1577 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
struct S1578 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type detachable DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S1581 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] TUPLE [LX_WILDCARD] */
struct S1582 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [LX_WILDCARD]] */
struct S1583 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	T1 (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
struct S1584 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [STRING_8]] */
struct S1586 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	T1 (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [KL_STRING_ROUTINES, STRING_8] */
struct S1587 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type ET_AGENT_IMPLICIT_CURRENT_TARGET */
struct S1591 {
	int id;
	T6 a1; /* index */
	T0* a2; /* agent_expression */
};

/* Struct for type detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
struct S1601 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_CLUSTER] */
struct S1604 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLUSTER] */
struct S1605 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
struct S1606 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [NATURAL_64] */
struct S1607 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T11 z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_ECF_CLUSTER] */
struct S1608 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
struct S1609 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
struct S1610 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
struct S1611 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
struct S1612 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
struct S1613 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1614 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1615 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1616 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
struct S1617 {
	int id;
};

/* Struct for type SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
struct S1618 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
struct S1619 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
struct S1620 {
	int id;
};

/* Struct for type SPECIAL [ET_ECF_FILE_RULE] */
struct S1621 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
struct S1622 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
struct S1623 {
	int id;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
struct S1624 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
struct S1625 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
struct S1626 {
	int id;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
struct S1627 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
struct S1628 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
struct S1629 {
	int id;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
struct S1630 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
struct S1631 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_CONDITION] */
struct S1632 {
	int id;
};

/* Struct for type SPECIAL [ET_ECF_CONDITION] */
struct S1633 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION] */
struct S1634 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type detachable DS_LINKABLE [CHARACTER_8] */
struct S1635 {
	int id;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type LX_WILDCARD_PARSER */
struct S1636 {
	int id;
	T1 a1; /* successful */
	T0* a2; /* pending_rules */
	T0* a3; /* start_condition_stack */
	T0* a4; /* action_factory */
	T0* a5; /* old_singleton_lines */
	T0* a6; /* old_singleton_columns */
	T0* a7; /* old_singleton_counts */
	T0* a8; /* old_regexp_lines */
	T0* a9; /* old_regexp_columns */
	T0* a10; /* old_regexp_counts */
	T0* a11; /* description */
	T0* a12; /* last_string_value */
	T0* a13; /* last_lx_symbol_class_value */
	T0* a14; /* error_handler */
	T0* a15; /* name_definitions */
	T0* a16; /* character_classes */
	T6 a17; /* line_nb */
	T0* a18; /* yyss */
	T0* a19; /* input_buffer */
	T6 a20; /* yy_end */
	T6 a21; /* yy_position */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_parsing_status */
	T6 a25; /* yy_suspended_yystacksize */
	T6 a26; /* yy_suspended_yystate */
	T6 a27; /* yy_suspended_yyn */
	T6 a28; /* yy_suspended_yychar1 */
	T6 a29; /* yy_suspended_index */
	T6 a30; /* yy_suspended_yyss_top */
	T6 a31; /* yy_suspended_yy_goto */
	T0* a32; /* yyr1 */
	T6 a33; /* yyssp */
	T0* a34; /* yypgoto */
	T0* a35; /* yycheck */
	T0* a36; /* yytable */
	T0* a37; /* yydefgoto */
	T6 a38; /* error_count */
	T1 a39; /* yy_lookahead_needed */
	T6 a40; /* yyerrstatus */
	T0* a41; /* yypact */
	T6 a42; /* last_token */
	T0* a43; /* yytranslate */
	T0* a44; /* yydefact */
	T0* a45; /* yy_pushed_start_conditions */
	T0* a46; /* yyspecial_routines1 */
	T6 a47; /* yyvsc1 */
	T0* a48; /* yyvs1 */
	T0* a49; /* yyspecial_routines2 */
	T6 a50; /* yyvsc2 */
	T0* a51; /* yyvs2 */
	T0* a52; /* yyspecial_routines3 */
	T6 a53; /* yyvsc3 */
	T0* a54; /* yyvs3 */
	T0* a55; /* yyspecial_routines4 */
	T6 a56; /* yyvsc4 */
	T0* a57; /* yyvs4 */
	T0* a58; /* yyspecial_routines5 */
	T6 a59; /* yyvsc5 */
	T0* a60; /* yyvs5 */
	T0* a61; /* yytypes1 */
	T0* a62; /* yytypes2 */
	T6 a63; /* yy_start */
	T6 a64; /* yyvsp1 */
	T6 a65; /* yyvsp2 */
	T6 a66; /* yyvsp3 */
	T6 a67; /* yyvsp4 */
	T6 a68; /* yyvsp5 */
	T1 a69; /* yy_more_flag */
	T6 a70; /* yy_more_len */
	T6 a71; /* line */
	T6 a72; /* column */
	T6 a73; /* position */
	T6 a74; /* yy_start_state */
	T0* a75; /* yy_state_stack */
	T6 a76; /* yy_state_count */
	T0* a77; /* yy_content_area */
	T0* a78; /* yy_ec */
	T0* a79; /* yy_content */
	T0* a80; /* yy_accept */
	T6 a81; /* yy_last_accepting_state */
	T6 a82; /* yy_last_accepting_cpos */
	T0* a83; /* yy_chk */
	T0* a84; /* yy_base */
	T0* a85; /* yy_def */
	T0* a86; /* yy_meta */
	T0* a87; /* yy_nxt */
	T6 a88; /* yy_lp */
	T0* a89; /* yy_acclist */
	T6 a90; /* yy_looking_for_trail_begin */
	T6 a91; /* yy_full_match */
	T6 a92; /* yy_full_state */
	T6 a93; /* yy_full_lp */
	T1 a94; /* yy_rejected */
	T0* a95; /* last_detachable_any_value */
	T6 a96; /* last_integer_value */
	T1 a97; /* in_trail_context */
	T0* a98; /* rule */
	T1 a99; /* has_trail_context */
	T6 a100; /* head_count */
	T6 a101; /* head_line */
	T6 a102; /* head_column */
	T6 a103; /* trail_count */
	T6 a104; /* rule_line_nb */
};

/* Struct for type LX_DESCRIPTION */
struct S1637 {
	int id;
	T0* a1; /* equiv_classes */
	T1 a2; /* equiv_classes_used */
	T1 a3; /* full_table */
	T1 a4; /* meta_equiv_classes_used */
	T1 a5; /* reject_used */
	T1 a6; /* variable_trail_context */
	T0* a7; /* rules */
	T0* a8; /* start_conditions */
	T6 a9; /* characters_count */
	T6 a10; /* array_size */
	T1 a11; /* line_pragma */
	T1 a12; /* inspect_used */
	T0* a13; /* eof_rules */
	T0* a14; /* eiffel_header */
	T1 a15; /* case_insensitive */
	T0* a16; /* input_filename */
	T1 a17; /* actions_separated */
	T0* a18; /* eiffel_code */
	T1 a19; /* bol_needed */
	T1 a20; /* pre_action_used */
	T1 a21; /* post_action_used */
	T1 a22; /* pre_eof_action_used */
	T1 a23; /* post_eof_action_used */
	T1 a24; /* line_used */
	T1 a25; /* position_used */
};

/* Struct for type LX_FULL_DFA */
struct S1638 {
	int id;
	T0* a1; /* yy_nxt */
	T0* a2; /* yy_accept */
	T6 a3; /* yyNb_rows */
	T0* a4; /* input_filename */
	T6 a5; /* characters_count */
	T6 a6; /* array_size */
	T1 a7; /* inspect_used */
	T1 a8; /* actions_separated */
	T0* a9; /* eiffel_code */
	T0* a10; /* eiffel_header */
	T1 a11; /* bol_needed */
	T1 a12; /* pre_action_used */
	T1 a13; /* post_action_used */
	T1 a14; /* pre_eof_action_used */
	T1 a15; /* post_eof_action_used */
	T1 a16; /* line_pragma */
	T0* a17; /* yy_start_conditions */
	T0* a18; /* yy_ec */
	T6 a19; /* yyNull_equiv_class */
	T6 a20; /* yyNb_rules */
	T0* a21; /* yy_rules */
	T6 a22; /* yyEnd_of_buffer */
	T1 a23; /* yyLine_used */
	T1 a24; /* yyPosition_used */
	T6 a25; /* minimum_symbol */
	T6 a26; /* maximum_symbol */
	T0* a27; /* states */
	T6 a28; /* backing_up_count */
	T0* a29; /* partitions */
	T6 a30; /* start_states_count */
	T1 a31; /* yyBacking_up */
	T0* a32; /* yy_eof_rules */
};

/* Struct for type SPECIAL [LX_WILDCARD] */
struct S1640 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_WILDCARD] */
struct S1643 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
struct S1644 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
struct S1645 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1646 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T6 a5; /* modulus */
	T6 a6; /* capacity */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T0* a9; /* internal_cursor */
	T6 a10; /* found_position */
	T0* a11; /* item_storage */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* hash_function */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
struct S1647 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME] */
struct S1648 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_RENAME] */
struct S1649 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CALL_NAME] */
struct S1654 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME] */
struct S1655 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
struct S1656 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CALL_NAME] */
struct S1657 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME] */
struct S1658 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME] */
struct S1661 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1662 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1663 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
struct S1665 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
struct S1666 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_LINKABLE [ET_ADAPTED_FEATURE] */
struct S1667 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
struct S1668 {
	int id;
};

/* Struct for type SPECIAL [ET_PARENT_FEATURE] */
struct S1669 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1670 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_DOTNET_FEATURE] */
struct S1671 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
struct S1672 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
struct S1673 {
	int id;
};

/* Struct for type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1674 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1677 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1678 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
struct S1679 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_LINKABLE [ET_DOTNET_FEATURE] */
struct S1680 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
struct S1681 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* modulus */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1682 {
	int id;
	T0* a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type ET_DOTNET_ASSEMBLY_ERROR */
struct S1683 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* assembly */
};

/* Struct for type ET_STANDARD_ONCE_KEYS */
struct S1686 {
	int id;
};

/* Struct for type KL_CHARACTER_ROUTINES */
struct S1689 {
	int id;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
struct S1690 {
	int id;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_IDENTIFIER, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S1691 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S1696 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
struct S1697 {
	int id;
};

/* Struct for type ET_SEEDED_QUERY_COMPARATOR */
struct S1701 {
	int id;
};

/* Struct for type ET_SEEDED_PROCEDURE_COMPARATOR */
struct S1704 {
	int id;
};

/* Struct for type [attached] TUPLE [ET_CLIENT_LIST] */
struct S1708 {
	int id;
	T0* z1;
};

/* Struct for type ET_INFIX_CAST_EXPRESSION */
struct S1716 {
	int id;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* type */
};

/* Struct for type detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
struct S1719 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_LIKE_FEATURE] */
struct S1724 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
struct S1725 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
struct S1726 {
	int id;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST [LX_RULE] */
struct S1727 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_START_CONDITIONS */
struct S1728 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_ACTION_FACTORY */
struct S1729 {
	int id;
};

/* Struct for type LX_SYMBOL_CLASS */
struct S1730 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T1 a4; /* sort_needed */
	T1 a5; /* negated */
	T0* a6; /* internal_cursor */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8] */
struct S1731 {
	int id;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* free_slot */
	T6 a10; /* last_position */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
struct S1732 {
	int id;
};

/* Struct for type SPECIAL [LX_SYMBOL_CLASS] */
struct S1733 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_NFA] */
struct S1734 {
	int id;
};

/* Struct for type LX_NFA */
struct S1735 {
	int id;
	T1 a1; /* in_trail_context */
	T0* a2; /* states */
};

/* Struct for type SPECIAL [LX_NFA] */
struct S1736 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_EQUIVALENCE_CLASSES */
struct S1737 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type LX_RULE */
struct S1738 {
	int id;
	T6 a1; /* id */
	T0* a2; /* pattern */
	T0* a3; /* action */
	T6 a4; /* head_count */
	T6 a5; /* trail_count */
	T6 a6; /* line_count */
	T6 a7; /* column_count */
	T6 a8; /* line_nb */
	T1 a9; /* has_trail_context */
	T1 a10; /* is_useful */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8] */
struct S1739 {
	int id;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type LX_UNRECOGNIZED_RULE_ERROR */
struct S1740 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_MISSING_QUOTE_ERROR */
struct S1741 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_CLASS_ERROR */
struct S1742 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_ERROR */
struct S1743 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_META_ERROR */
struct S1744 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_REJECT_ERROR */
struct S1745 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
struct S1746 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_CHARACTER_OUT_OF_RANGE_ERROR */
struct S1747 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type SPECIAL [LX_RULE] */
struct S1748 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [LX_RULE] */
struct S1749 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type LX_DFA_STATE */
struct S1750 {
	int id;
	T0* a1; /* accepted_rules */
	T0* a2; /* states */
	T0* a3; /* transitions */
	T0* a4; /* accepted_head_rules */
	T6 a5; /* code */
	T6 a6; /* id */
};

/* Struct for type DS_ARRAYED_LIST [LX_NFA_STATE] */
struct S1751 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [LX_DFA_STATE] */
struct S1752 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_SYMBOL_PARTITIONS */
struct S1753 {
	int id;
	T0* a1; /* symbols */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type KL_ARRAY_ROUTINES [LX_RULE] */
struct S1754 {
	int id;
};

/* Struct for type LX_START_CONDITION */
struct S1755 {
	int id;
	T0* a1; /* name */
	T6 a2; /* id */
	T1 a3; /* is_exclusive */
	T0* a4; /* patterns */
	T0* a5; /* bol_patterns */
};

/* Struct for type LX_TRANSITION_TABLE [LX_DFA_STATE] */
struct S1756 {
	int id;
	T0* a1; /* storage */
	T0* a2; /* array_routines */
	T6 a3; /* count */
};

/* Struct for type DS_ARRAYED_LIST [LX_NFA] */
struct S1757 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_HASH_TABLE [LX_NFA, INTEGER_32] */
struct S1758 {
	int id;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* count */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* free_slot */
	T6 a8; /* last_position */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type LX_NFA_STATE */
struct S1759 {
	int id;
	T1 a1; /* in_trail_context */
	T0* a2; /* transition */
	T0* a3; /* epsilon_transition */
	T6 a4; /* id */
	T0* a5; /* accepted_rule */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1761 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
struct S1763 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_UNIVERSE_ERROR */
struct S1764 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* universe */
};

/* Struct for type detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1766 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] TUPLE [ET_ECF_LIBRARY] */
struct S1769 {
	int id;
	T0* z1;
};

/* Struct for type ET_PARENTHESIS_SYMBOL */
struct S1784 {
	int id;
	T6 a1; /* seed */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
struct S1789 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
struct S1790 {
	int id;
	T0* a1; /* agent_expression */
	T6 a2; /* argument_index */
	T6 a3; /* index */
};

/* Struct for type [attached] TUPLE [ET_ECF_CLUSTER] */
struct S1797 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_CLUSTER]] */
struct S1798 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
struct S1799 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [ET_ECF_FILE_RULE] */
struct S1800 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_FILE_RULE]] */
struct S1801 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [ET_ECF_FILE_RULES] */
struct S1802 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_ECF_FILE_RULE]] */
struct S1803 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	T1 (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [ET_ECF_STATE] */
struct S1804 {
	int id;
	T0* z1;
};

/* Struct for type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
struct S1808 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
struct S1811 {
	int id;
	T0* a1; /* table_cursor */
	T0* a2; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_RULE] */
struct S1813 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_RULE] */
struct S1814 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_ARRAY_ROUTINES [STRING_8] */
struct S1815 {
	int id;
};

/* Struct for type SPECIAL [LX_START_CONDITION] */
struct S1816 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
struct S1817 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
struct S1818 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
struct S1821 {
	int id;
	T0* a1; /* label */
	T0* a2; /* target */
};

/* Struct for type LX_EPSILON_TRANSITION [LX_NFA_STATE] */
struct S1823 {
	int id;
	T0* a1; /* target */
};

/* Struct for type LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
struct S1825 {
	int id;
	T6 a1; /* label */
	T0* a2; /* target */
};

/* Struct for type DS_BILINKABLE [INTEGER_32] */
struct S1826 {
	int id;
	T6 a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type SPECIAL [DS_BILINKABLE [INTEGER_32]] */
struct S1827 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [DS_BILINKABLE [INTEGER_32]] */
struct S1828 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type LX_ACTION */
struct S1830 {
	int id;
	T0* a1; /* text */
};

/* Struct for type DS_BUBBLE_SORTER [LX_NFA_STATE] */
struct S1831 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type DS_BUBBLE_SORTER [LX_RULE] */
struct S1833 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type SPECIAL [LX_NFA_STATE] */
struct S1835 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
struct S1837 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
struct S1838 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [LX_DFA_STATE] */
struct S1840 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
struct S1841 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
struct S1842 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_ARRAY [LX_RULE] */
struct S1843 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ARRAY [detachable LX_DFA_STATE] */
struct S1844 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
struct S1845 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_NFA] */
struct S1846 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
struct S1848 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type ET_DYNAMIC_EQUALITY_EXPRESSION */
struct S1851 {
	int id;
	T0* a1; /* target_type_set */
	T0* a2; /* static_equality */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
};

/* Struct for type ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
struct S1852 {
	int id;
	T0* a1; /* target_type_set */
	T0* a2; /* static_equality */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
};

/* Struct for type ET_CONVERT_BUILTIN_EXPRESSION */
struct S1853 {
	int id;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* convert_feature */
	T0* a4; /* type */
};

/* Struct for type ET_CONVERT_FROM_EXPRESSION */
struct S1854 {
	int id;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* convert_feature */
	T0* a4; /* type */
};

/* Struct for type ET_CONVERT_TO_EXPRESSION */
struct S1855 {
	int id;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* convert_feature */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
struct S1860 {
	int id;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type detachable DS_LINKABLE [ET_PARENT_FEATURE] */
struct S1863 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_SHELL_SORTER [INTEGER_32] */
struct S1865 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [LX_RULE] */
struct S1866 {
	int id;
};

/* Struct for type KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
struct S1869 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1872 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1873 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1874 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1875 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1876 {
	int id;
};

/* Struct for type KL_ARRAY [STRING_8] */
struct S1877 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1878 {
	int id;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1879 {
	int id;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LACE_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1880 {
	int id;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LACE_DOTNET_GAC_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1881 {
	int id;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1882 {
	int id;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1883 {
	int id;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
struct S1884 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
struct S1885 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	T1 (*f)(GE_context*, T0*, T0*);
};

/* Struct for type ET_AST_NULL_LEAF */
struct S1888 {
	int id;
	T6 a1; /* compressed_position */
};

typedef struct {
	int id;
	EIF_INTEGER type_id;
	EIF_BOOLEAN is_special;
	void (*dispose) (GE_context*, EIF_REFERENCE);
	T0* a1;
} EIF_TYPE;


extern T1 GE_default1;
extern T2 GE_default2;
extern T3 GE_default3;
extern T4 GE_default4;
extern T5 GE_default5;
extern T6 GE_default6;
extern T7 GE_default7;
extern T8 GE_default8;
extern T9 GE_default9;
extern T10 GE_default10;
extern T11 GE_default11;
extern T12 GE_default12;
extern T13 GE_default13;
extern T14 GE_default14;
extern T15 GE_default15;
extern T16 GE_default16;
extern T17 GE_default17;
extern T18 GE_default18;
extern T19 GE_default19;
extern T22 GE_default22;
extern T23 GE_default23;
extern T24 GE_default24;
extern T25 GE_default25;
extern T26 GE_default26;
extern T27 GE_default27;
extern T29 GE_default29;
extern T30 GE_default30;
extern T31 GE_default31;
extern T32 GE_default32;
extern T33 GE_default33;
extern T34 GE_default34;
extern T36 GE_default36;
extern T37 GE_default37;
extern T38 GE_default38;
extern T39 GE_default39;
extern T40 GE_default40;
extern T41 GE_default41;
extern T43 GE_default43;
extern T44 GE_default44;
extern T45 GE_default45;
extern T46 GE_default46;
extern T50 GE_default50;
extern T52 GE_default52;
extern T53 GE_default53;
extern T54 GE_default54;
extern T55 GE_default55;
extern T57 GE_default57;
extern T58 GE_default58;
extern T61 GE_default61;
extern T62 GE_default62;
extern T63 GE_default63;
extern T64 GE_default64;
extern T65 GE_default65;
extern T66 GE_default66;
extern T67 GE_default67;
extern T68 GE_default68;
extern T69 GE_default69;
extern T70 GE_default70;
extern T71 GE_default71;
extern T74 GE_default74;
extern T75 GE_default75;
extern T76 GE_default76;
extern T77 GE_default77;
extern T78 GE_default78;
extern T79 GE_default79;
extern T80 GE_default80;
extern T81 GE_default81;
extern T82 GE_default82;
extern T84 GE_default84;
extern T86 GE_default86;
extern T87 GE_default87;
extern T88 GE_default88;
extern T90 GE_default90;
extern T92 GE_default92;
extern T94 GE_default94;
extern T95 GE_default95;
extern T96 GE_default96;
extern T97 GE_default97;
extern T98 GE_default98;
extern T99 GE_default99;
extern T100 GE_default100;
extern T103 GE_default103;
extern T104 GE_default104;
extern T105 GE_default105;
extern T106 GE_default106;
extern T107 GE_default107;
extern T108 GE_default108;
extern T109 GE_default109;
extern T110 GE_default110;
extern T111 GE_default111;
extern T112 GE_default112;
extern T113 GE_default113;
extern T114 GE_default114;
extern T115 GE_default115;
extern T116 GE_default116;
extern T117 GE_default117;
extern T118 GE_default118;
extern T119 GE_default119;
extern T120 GE_default120;
extern T121 GE_default121;
extern T122 GE_default122;
extern T123 GE_default123;
extern T124 GE_default124;
extern T126 GE_default126;
extern T128 GE_default128;
extern T129 GE_default129;
extern T130 GE_default130;
extern T131 GE_default131;
extern T132 GE_default132;
extern T133 GE_default133;
extern T134 GE_default134;
extern T136 GE_default136;
extern T137 GE_default137;
extern T138 GE_default138;
extern T139 GE_default139;
extern T140 GE_default140;
extern T141 GE_default141;
extern T142 GE_default142;
extern T143 GE_default143;
extern T144 GE_default144;
extern T147 GE_default147;
extern T150 GE_default150;
extern T151 GE_default151;
extern T152 GE_default152;
extern T153 GE_default153;
extern T154 GE_default154;
extern T155 GE_default155;
extern T157 GE_default157;
extern T158 GE_default158;
extern T159 GE_default159;
extern T160 GE_default160;
extern T161 GE_default161;
extern T162 GE_default162;
extern T163 GE_default163;
extern T164 GE_default164;
extern T167 GE_default167;
extern T168 GE_default168;
extern T170 GE_default170;
extern T171 GE_default171;
extern T172 GE_default172;
extern T173 GE_default173;
extern T174 GE_default174;
extern T175 GE_default175;
extern T177 GE_default177;
extern T178 GE_default178;
extern T179 GE_default179;
extern T181 GE_default181;
extern T183 GE_default183;
extern T186 GE_default186;
extern T187 GE_default187;
extern T188 GE_default188;
extern T189 GE_default189;
extern T191 GE_default191;
extern T192 GE_default192;
extern T193 GE_default193;
extern T194 GE_default194;
extern T195 GE_default195;
extern T196 GE_default196;
extern T197 GE_default197;
extern T199 GE_default199;
extern T200 GE_default200;
extern T201 GE_default201;
extern T202 GE_default202;
extern T203 GE_default203;
extern T204 GE_default204;
extern T205 GE_default205;
extern T206 GE_default206;
extern T209 GE_default209;
extern T210 GE_default210;
extern T211 GE_default211;
extern T212 GE_default212;
extern T213 GE_default213;
extern T214 GE_default214;
extern T215 GE_default215;
extern T216 GE_default216;
extern T217 GE_default217;
extern T218 GE_default218;
extern T219 GE_default219;
extern T220 GE_default220;
extern T221 GE_default221;
extern T222 GE_default222;
extern T223 GE_default223;
extern T224 GE_default224;
extern T225 GE_default225;
extern T226 GE_default226;
extern T227 GE_default227;
extern T228 GE_default228;
extern T229 GE_default229;
extern T230 GE_default230;
extern T231 GE_default231;
extern T232 GE_default232;
extern T233 GE_default233;
extern T234 GE_default234;
extern T235 GE_default235;
extern T236 GE_default236;
extern T237 GE_default237;
extern T238 GE_default238;
extern T239 GE_default239;
extern T240 GE_default240;
extern T241 GE_default241;
extern T242 GE_default242;
extern T247 GE_default247;
extern T251 GE_default251;
extern T259 GE_default259;
extern T260 GE_default260;
extern T261 GE_default261;
extern T262 GE_default262;
extern T263 GE_default263;
extern T264 GE_default264;
extern T265 GE_default265;
extern T266 GE_default266;
extern T267 GE_default267;
extern T268 GE_default268;
extern T269 GE_default269;
extern T270 GE_default270;
extern T271 GE_default271;
extern T272 GE_default272;
extern T273 GE_default273;
extern T274 GE_default274;
extern T275 GE_default275;
extern T276 GE_default276;
extern T277 GE_default277;
extern T278 GE_default278;
extern T279 GE_default279;
extern T280 GE_default280;
extern T281 GE_default281;
extern T282 GE_default282;
extern T283 GE_default283;
extern T284 GE_default284;
extern T285 GE_default285;
extern T286 GE_default286;
extern T287 GE_default287;
extern T290 GE_default290;
extern T291 GE_default291;
extern T292 GE_default292;
extern T293 GE_default293;
extern T294 GE_default294;
extern T295 GE_default295;
extern T296 GE_default296;
extern T297 GE_default297;
extern T298 GE_default298;
extern T299 GE_default299;
extern T300 GE_default300;
extern T301 GE_default301;
extern T302 GE_default302;
extern T303 GE_default303;
extern T304 GE_default304;
extern T305 GE_default305;
extern T306 GE_default306;
extern T307 GE_default307;
extern T308 GE_default308;
extern T309 GE_default309;
extern T310 GE_default310;
extern T311 GE_default311;
extern T312 GE_default312;
extern T313 GE_default313;
extern T317 GE_default317;
extern T319 GE_default319;
extern T320 GE_default320;
extern T321 GE_default321;
extern T322 GE_default322;
extern T325 GE_default325;
extern T326 GE_default326;
extern T329 GE_default329;
extern T330 GE_default330;
extern T331 GE_default331;
extern T332 GE_default332;
extern T333 GE_default333;
extern T334 GE_default334;
extern T338 GE_default338;
extern T344 GE_default344;
extern T345 GE_default345;
extern T346 GE_default346;
extern T347 GE_default347;
extern T348 GE_default348;
extern T350 GE_default350;
extern T351 GE_default351;
extern T352 GE_default352;
extern T356 GE_default356;
extern T358 GE_default358;
extern T360 GE_default360;
extern T361 GE_default361;
extern T362 GE_default362;
extern T364 GE_default364;
extern T365 GE_default365;
extern T367 GE_default367;
extern T368 GE_default368;
extern T369 GE_default369;
extern T370 GE_default370;
extern T371 GE_default371;
extern T372 GE_default372;
extern T374 GE_default374;
extern T375 GE_default375;
extern T376 GE_default376;
extern T377 GE_default377;
extern T378 GE_default378;
extern T379 GE_default379;
extern T380 GE_default380;
extern T381 GE_default381;
extern T382 GE_default382;
extern T383 GE_default383;
extern T384 GE_default384;
extern T385 GE_default385;
extern T386 GE_default386;
extern T387 GE_default387;
extern T388 GE_default388;
extern T389 GE_default389;
extern T391 GE_default391;
extern T393 GE_default393;
extern T395 GE_default395;
extern T396 GE_default396;
extern T397 GE_default397;
extern T399 GE_default399;
extern T400 GE_default400;
extern T402 GE_default402;
extern T403 GE_default403;
extern T404 GE_default404;
extern T405 GE_default405;
extern T408 GE_default408;
extern T410 GE_default410;
extern T411 GE_default411;
extern T412 GE_default412;
extern T413 GE_default413;
extern T414 GE_default414;
extern T416 GE_default416;
extern T418 GE_default418;
extern T419 GE_default419;
extern T421 GE_default421;
extern T422 GE_default422;
extern T423 GE_default423;
extern T424 GE_default424;
extern T425 GE_default425;
extern T426 GE_default426;
extern T427 GE_default427;
extern T429 GE_default429;
extern T430 GE_default430;
extern T431 GE_default431;
extern T432 GE_default432;
extern T434 GE_default434;
extern T435 GE_default435;
extern T436 GE_default436;
extern T437 GE_default437;
extern T438 GE_default438;
extern T439 GE_default439;
extern T440 GE_default440;
extern T441 GE_default441;
extern T442 GE_default442;
extern T443 GE_default443;
extern T445 GE_default445;
extern T446 GE_default446;
extern T447 GE_default447;
extern T448 GE_default448;
extern T449 GE_default449;
extern T450 GE_default450;
extern T451 GE_default451;
extern T452 GE_default452;
extern T453 GE_default453;
extern T454 GE_default454;
extern T456 GE_default456;
extern T459 GE_default459;
extern T460 GE_default460;
extern T461 GE_default461;
extern T462 GE_default462;
extern T464 GE_default464;
extern T466 GE_default466;
extern T467 GE_default467;
extern T468 GE_default468;
extern T469 GE_default469;
extern T470 GE_default470;
extern T471 GE_default471;
extern T472 GE_default472;
extern T473 GE_default473;
extern T475 GE_default475;
extern T476 GE_default476;
extern T478 GE_default478;
extern T479 GE_default479;
extern T480 GE_default480;
extern T482 GE_default482;
extern T484 GE_default484;
extern T485 GE_default485;
extern T487 GE_default487;
extern T488 GE_default488;
extern T489 GE_default489;
extern T490 GE_default490;
extern T491 GE_default491;
extern T492 GE_default492;
extern T493 GE_default493;
extern T494 GE_default494;
extern T495 GE_default495;
extern T496 GE_default496;
extern T497 GE_default497;
extern T498 GE_default498;
extern T499 GE_default499;
extern T500 GE_default500;
extern T503 GE_default503;
extern T504 GE_default504;
extern T505 GE_default505;
extern T506 GE_default506;
extern T507 GE_default507;
extern T508 GE_default508;
extern T509 GE_default509;
extern T510 GE_default510;
extern T513 GE_default513;
extern T517 GE_default517;
extern T520 GE_default520;
extern T521 GE_default521;
extern T522 GE_default522;
extern T523 GE_default523;
extern T524 GE_default524;
extern T527 GE_default527;
extern T529 GE_default529;
extern T530 GE_default530;
extern T531 GE_default531;
extern T532 GE_default532;
extern T533 GE_default533;
extern T534 GE_default534;
extern T535 GE_default535;
extern T536 GE_default536;
extern T538 GE_default538;
extern T539 GE_default539;
extern T540 GE_default540;
extern T541 GE_default541;
extern T542 GE_default542;
extern T543 GE_default543;
extern T545 GE_default545;
extern T546 GE_default546;
extern T547 GE_default547;
extern T548 GE_default548;
extern T549 GE_default549;
extern T550 GE_default550;
extern T551 GE_default551;
extern T552 GE_default552;
extern T553 GE_default553;
extern T554 GE_default554;
extern T555 GE_default555;
extern T556 GE_default556;
extern T557 GE_default557;
extern T558 GE_default558;
extern T559 GE_default559;
extern T565 GE_default565;
extern T566 GE_default566;
extern T567 GE_default567;
extern T568 GE_default568;
extern T569 GE_default569;
extern T571 GE_default571;
extern T572 GE_default572;
extern T573 GE_default573;
extern T575 GE_default575;
extern T577 GE_default577;
extern T578 GE_default578;
extern T579 GE_default579;
extern T580 GE_default580;
extern T581 GE_default581;
extern T582 GE_default582;
extern T583 GE_default583;
extern T584 GE_default584;
extern T585 GE_default585;
extern T586 GE_default586;
extern T587 GE_default587;
extern T588 GE_default588;
extern T589 GE_default589;
extern T590 GE_default590;
extern T591 GE_default591;
extern T592 GE_default592;
extern T593 GE_default593;
extern T594 GE_default594;
extern T595 GE_default595;
extern T596 GE_default596;
extern T597 GE_default597;
extern T598 GE_default598;
extern T599 GE_default599;
extern T600 GE_default600;
extern T601 GE_default601;
extern T602 GE_default602;
extern T605 GE_default605;
extern T606 GE_default606;
extern T608 GE_default608;
extern T609 GE_default609;
extern T610 GE_default610;
extern T611 GE_default611;
extern T612 GE_default612;
extern T615 GE_default615;
extern T616 GE_default616;
extern T619 GE_default619;
extern T620 GE_default620;
extern T621 GE_default621;
extern T622 GE_default622;
extern T623 GE_default623;
extern T624 GE_default624;
extern T625 GE_default625;
extern T626 GE_default626;
extern T628 GE_default628;
extern T629 GE_default629;
extern T631 GE_default631;
extern T634 GE_default634;
extern T635 GE_default635;
extern T636 GE_default636;
extern T637 GE_default637;
extern T638 GE_default638;
extern T639 GE_default639;
extern T640 GE_default640;
extern T641 GE_default641;
extern T642 GE_default642;
extern T644 GE_default644;
extern T648 GE_default648;
extern T649 GE_default649;
extern T651 GE_default651;
extern T653 GE_default653;
extern T654 GE_default654;
extern T655 GE_default655;
extern T656 GE_default656;
extern T658 GE_default658;
extern T659 GE_default659;
extern T660 GE_default660;
extern T662 GE_default662;
extern T663 GE_default663;
extern T664 GE_default664;
extern T665 GE_default665;
extern T666 GE_default666;
extern T668 GE_default668;
extern T669 GE_default669;
extern T670 GE_default670;
extern T671 GE_default671;
extern T672 GE_default672;
extern T673 GE_default673;
extern T674 GE_default674;
extern T675 GE_default675;
extern T676 GE_default676;
extern T677 GE_default677;
extern T678 GE_default678;
extern T679 GE_default679;
extern T680 GE_default680;
extern T682 GE_default682;
extern T683 GE_default683;
extern T684 GE_default684;
extern T685 GE_default685;
extern T686 GE_default686;
extern T687 GE_default687;
extern T688 GE_default688;
extern T689 GE_default689;
extern T691 GE_default691;
extern T692 GE_default692;
extern T693 GE_default693;
extern T694 GE_default694;
extern T696 GE_default696;
extern T697 GE_default697;
extern T698 GE_default698;
extern T700 GE_default700;
extern T701 GE_default701;
extern T703 GE_default703;
extern T704 GE_default704;
extern T705 GE_default705;
extern T706 GE_default706;
extern T710 GE_default710;
extern T711 GE_default711;
extern T712 GE_default712;
extern T714 GE_default714;
extern T715 GE_default715;
extern T716 GE_default716;
extern T717 GE_default717;
extern T718 GE_default718;
extern T721 GE_default721;
extern T724 GE_default724;
extern T726 GE_default726;
extern T727 GE_default727;
extern T728 GE_default728;
extern T729 GE_default729;
extern T730 GE_default730;
extern T731 GE_default731;
extern T732 GE_default732;
extern T733 GE_default733;
extern T734 GE_default734;
extern T735 GE_default735;
extern T736 GE_default736;
extern T737 GE_default737;
extern T738 GE_default738;
extern T739 GE_default739;
extern T740 GE_default740;
extern T741 GE_default741;
extern T742 GE_default742;
extern T743 GE_default743;
extern T744 GE_default744;
extern T747 GE_default747;
extern T748 GE_default748;
extern T749 GE_default749;
extern T750 GE_default750;
extern T751 GE_default751;
extern T754 GE_default754;
extern T755 GE_default755;
extern T756 GE_default756;
extern T758 GE_default758;
extern T759 GE_default759;
extern T760 GE_default760;
extern T761 GE_default761;
extern T762 GE_default762;
extern T764 GE_default764;
extern T765 GE_default765;
extern T766 GE_default766;
extern T768 GE_default768;
extern T769 GE_default769;
extern T770 GE_default770;
extern T771 GE_default771;
extern T772 GE_default772;
extern T773 GE_default773;
extern T774 GE_default774;
extern T775 GE_default775;
extern T776 GE_default776;
extern T777 GE_default777;
extern T778 GE_default778;
extern T779 GE_default779;
extern T780 GE_default780;
extern T781 GE_default781;
extern T784 GE_default784;
extern T785 GE_default785;
extern T786 GE_default786;
extern T787 GE_default787;
extern T788 GE_default788;
extern T789 GE_default789;
extern T790 GE_default790;
extern T791 GE_default791;
extern T792 GE_default792;
extern T793 GE_default793;
extern T794 GE_default794;
extern T796 GE_default796;
extern T797 GE_default797;
extern T798 GE_default798;
extern T799 GE_default799;
extern T800 GE_default800;
extern T801 GE_default801;
extern T802 GE_default802;
extern T803 GE_default803;
extern T804 GE_default804;
extern T805 GE_default805;
extern T806 GE_default806;
extern T807 GE_default807;
extern T808 GE_default808;
extern T809 GE_default809;
extern T811 GE_default811;
extern T812 GE_default812;
extern T813 GE_default813;
extern T814 GE_default814;
extern T815 GE_default815;
extern T817 GE_default817;
extern T818 GE_default818;
extern T819 GE_default819;
extern T820 GE_default820;
extern T821 GE_default821;
extern T822 GE_default822;
extern T823 GE_default823;
extern T825 GE_default825;
extern T826 GE_default826;
extern T827 GE_default827;
extern T830 GE_default830;
extern T831 GE_default831;
extern T832 GE_default832;
extern T833 GE_default833;
extern T835 GE_default835;
extern T836 GE_default836;
extern T838 GE_default838;
extern T842 GE_default842;
extern T843 GE_default843;
extern T844 GE_default844;
extern T845 GE_default845;
extern T846 GE_default846;
extern T847 GE_default847;
extern T851 GE_default851;
extern T854 GE_default854;
extern T855 GE_default855;
extern T856 GE_default856;
extern T857 GE_default857;
extern T858 GE_default858;
extern T859 GE_default859;
extern T860 GE_default860;
extern T861 GE_default861;
extern T865 GE_default865;
extern T866 GE_default866;
extern T867 GE_default867;
extern T868 GE_default868;
extern T869 GE_default869;
extern T870 GE_default870;
extern T871 GE_default871;
extern T872 GE_default872;
extern T873 GE_default873;
extern T874 GE_default874;
extern T875 GE_default875;
extern T876 GE_default876;
extern T878 GE_default878;
extern T880 GE_default880;
extern T881 GE_default881;
extern T882 GE_default882;
extern T883 GE_default883;
extern T885 GE_default885;
extern T886 GE_default886;
extern T887 GE_default887;
extern T889 GE_default889;
extern T890 GE_default890;
extern T891 GE_default891;
extern T892 GE_default892;
extern T893 GE_default893;
extern T894 GE_default894;
extern T895 GE_default895;
extern T896 GE_default896;
extern T897 GE_default897;
extern T898 GE_default898;
extern T899 GE_default899;
extern T900 GE_default900;
extern T901 GE_default901;
extern T902 GE_default902;
extern T903 GE_default903;
extern T904 GE_default904;
extern T905 GE_default905;
extern T906 GE_default906;
extern T907 GE_default907;
extern T908 GE_default908;
extern T909 GE_default909;
extern T910 GE_default910;
extern T911 GE_default911;
extern T912 GE_default912;
extern T914 GE_default914;
extern T915 GE_default915;
extern T917 GE_default917;
extern T918 GE_default918;
extern T920 GE_default920;
extern T921 GE_default921;
extern T922 GE_default922;
extern T923 GE_default923;
extern T924 GE_default924;
extern T925 GE_default925;
extern T926 GE_default926;
extern T928 GE_default928;
extern T929 GE_default929;
extern T930 GE_default930;
extern T931 GE_default931;
extern T932 GE_default932;
extern T933 GE_default933;
extern T934 GE_default934;
extern T936 GE_default936;
extern T937 GE_default937;
extern T938 GE_default938;
extern T939 GE_default939;
extern T940 GE_default940;
extern T941 GE_default941;
extern T942 GE_default942;
extern T943 GE_default943;
extern T944 GE_default944;
extern T945 GE_default945;
extern T946 GE_default946;
extern T947 GE_default947;
extern T948 GE_default948;
extern T949 GE_default949;
extern T950 GE_default950;
extern T951 GE_default951;
extern T952 GE_default952;
extern T953 GE_default953;
extern T954 GE_default954;
extern T955 GE_default955;
extern T956 GE_default956;
extern T957 GE_default957;
extern T958 GE_default958;
extern T959 GE_default959;
extern T960 GE_default960;
extern T961 GE_default961;
extern T962 GE_default962;
extern T963 GE_default963;
extern T964 GE_default964;
extern T965 GE_default965;
extern T966 GE_default966;
extern T967 GE_default967;
extern T968 GE_default968;
extern T970 GE_default970;
extern T971 GE_default971;
extern T972 GE_default972;
extern T973 GE_default973;
extern T974 GE_default974;
extern T975 GE_default975;
extern T976 GE_default976;
extern T977 GE_default977;
extern T978 GE_default978;
extern T980 GE_default980;
extern T981 GE_default981;
extern T982 GE_default982;
extern T983 GE_default983;
extern T984 GE_default984;
extern T985 GE_default985;
extern T986 GE_default986;
extern T987 GE_default987;
extern T988 GE_default988;
extern T989 GE_default989;
extern T990 GE_default990;
extern T991 GE_default991;
extern T992 GE_default992;
extern T993 GE_default993;
extern T995 GE_default995;
extern T996 GE_default996;
extern T998 GE_default998;
extern T999 GE_default999;
extern T1001 GE_default1001;
extern T1002 GE_default1002;
extern T1003 GE_default1003;
extern T1004 GE_default1004;
extern T1005 GE_default1005;
extern T1006 GE_default1006;
extern T1007 GE_default1007;
extern T1008 GE_default1008;
extern T1009 GE_default1009;
extern T1010 GE_default1010;
extern T1011 GE_default1011;
extern T1012 GE_default1012;
extern T1013 GE_default1013;
extern T1014 GE_default1014;
extern T1016 GE_default1016;
extern T1017 GE_default1017;
extern T1019 GE_default1019;
extern T1020 GE_default1020;
extern T1021 GE_default1021;
extern T1022 GE_default1022;
extern T1023 GE_default1023;
extern T1024 GE_default1024;
extern T1025 GE_default1025;
extern T1026 GE_default1026;
extern T1028 GE_default1028;
extern T1029 GE_default1029;
extern T1031 GE_default1031;
extern T1032 GE_default1032;
extern T1034 GE_default1034;
extern T1035 GE_default1035;
extern T1036 GE_default1036;
extern T1037 GE_default1037;
extern T1038 GE_default1038;
extern T1039 GE_default1039;
extern T1040 GE_default1040;
extern T1041 GE_default1041;
extern T1042 GE_default1042;
extern T1043 GE_default1043;
extern T1044 GE_default1044;
extern T1045 GE_default1045;
extern T1046 GE_default1046;
extern T1047 GE_default1047;
extern T1048 GE_default1048;
extern T1049 GE_default1049;
extern T1050 GE_default1050;
extern T1051 GE_default1051;
extern T1052 GE_default1052;
extern T1053 GE_default1053;
extern T1054 GE_default1054;
extern T1056 GE_default1056;
extern T1057 GE_default1057;
extern T1058 GE_default1058;
extern T1059 GE_default1059;
extern T1060 GE_default1060;
extern T1061 GE_default1061;
extern T1063 GE_default1063;
extern T1064 GE_default1064;
extern T1065 GE_default1065;
extern T1066 GE_default1066;
extern T1067 GE_default1067;
extern T1068 GE_default1068;
extern T1069 GE_default1069;
extern T1070 GE_default1070;
extern T1071 GE_default1071;
extern T1072 GE_default1072;
extern T1073 GE_default1073;
extern T1074 GE_default1074;
extern T1075 GE_default1075;
extern T1077 GE_default1077;
extern T1078 GE_default1078;
extern T1079 GE_default1079;
extern T1080 GE_default1080;
extern T1082 GE_default1082;
extern T1083 GE_default1083;
extern T1084 GE_default1084;
extern T1085 GE_default1085;
extern T1086 GE_default1086;
extern T1087 GE_default1087;
extern T1088 GE_default1088;
extern T1090 GE_default1090;
extern T1091 GE_default1091;
extern T1092 GE_default1092;
extern T1093 GE_default1093;
extern T1094 GE_default1094;
extern T1095 GE_default1095;
extern T1096 GE_default1096;
extern T1098 GE_default1098;
extern T1099 GE_default1099;
extern T1101 GE_default1101;
extern T1102 GE_default1102;
extern T1104 GE_default1104;
extern T1105 GE_default1105;
extern T1107 GE_default1107;
extern T1108 GE_default1108;
extern T1110 GE_default1110;
extern T1111 GE_default1111;
extern T1112 GE_default1112;
extern T1113 GE_default1113;
extern T1114 GE_default1114;
extern T1116 GE_default1116;
extern T1117 GE_default1117;
extern T1118 GE_default1118;
extern T1119 GE_default1119;
extern T1120 GE_default1120;
extern T1121 GE_default1121;
extern T1123 GE_default1123;
extern T1124 GE_default1124;
extern T1125 GE_default1125;
extern T1126 GE_default1126;
extern T1127 GE_default1127;
extern T1129 GE_default1129;
extern T1130 GE_default1130;
extern T1131 GE_default1131;
extern T1132 GE_default1132;
extern T1133 GE_default1133;
extern T1134 GE_default1134;
extern T1135 GE_default1135;
extern T1136 GE_default1136;
extern T1137 GE_default1137;
extern T1138 GE_default1138;
extern T1140 GE_default1140;
extern T1141 GE_default1141;
extern T1142 GE_default1142;
extern T1143 GE_default1143;
extern T1144 GE_default1144;
extern T1145 GE_default1145;
extern T1146 GE_default1146;
extern T1148 GE_default1148;
extern T1149 GE_default1149;
extern T1150 GE_default1150;
extern T1151 GE_default1151;
extern T1152 GE_default1152;
extern T1153 GE_default1153;
extern T1154 GE_default1154;
extern T1155 GE_default1155;
extern T1156 GE_default1156;
extern T1157 GE_default1157;
extern T1158 GE_default1158;
extern T1159 GE_default1159;
extern T1160 GE_default1160;
extern T1162 GE_default1162;
extern T1163 GE_default1163;
extern T1165 GE_default1165;
extern T1166 GE_default1166;
extern T1167 GE_default1167;
extern T1168 GE_default1168;
extern T1169 GE_default1169;
extern T1170 GE_default1170;
extern T1171 GE_default1171;
extern T1172 GE_default1172;
extern T1173 GE_default1173;
extern T1174 GE_default1174;
extern T1176 GE_default1176;
extern T1177 GE_default1177;
extern T1179 GE_default1179;
extern T1180 GE_default1180;
extern T1181 GE_default1181;
extern T1182 GE_default1182;
extern T1183 GE_default1183;
extern T1184 GE_default1184;
extern T1185 GE_default1185;
extern T1186 GE_default1186;
extern T1187 GE_default1187;
extern T1188 GE_default1188;
extern T1189 GE_default1189;
extern T1190 GE_default1190;
extern T1193 GE_default1193;
extern T1194 GE_default1194;
extern T1195 GE_default1195;
extern T1196 GE_default1196;
extern T1197 GE_default1197;
extern T1198 GE_default1198;
extern T1199 GE_default1199;
extern T1200 GE_default1200;
extern T1201 GE_default1201;
extern T1202 GE_default1202;
extern T1203 GE_default1203;
extern T1204 GE_default1204;
extern T1206 GE_default1206;
extern T1207 GE_default1207;
extern T1208 GE_default1208;
extern T1209 GE_default1209;
extern T1213 GE_default1213;
extern T1214 GE_default1214;
extern T1215 GE_default1215;
extern T1216 GE_default1216;
extern T1217 GE_default1217;
extern T1218 GE_default1218;
extern T1219 GE_default1219;
extern T1220 GE_default1220;
extern T1221 GE_default1221;
extern T1223 GE_default1223;
extern T1224 GE_default1224;
extern T1226 GE_default1226;
extern T1227 GE_default1227;
extern T1228 GE_default1228;
extern T1230 GE_default1230;
extern T1231 GE_default1231;
extern T1232 GE_default1232;
extern T1233 GE_default1233;
extern T1234 GE_default1234;
extern T1235 GE_default1235;
extern T1236 GE_default1236;
extern T1239 GE_default1239;
extern T1241 GE_default1241;
extern T1242 GE_default1242;
extern T1243 GE_default1243;
extern T1244 GE_default1244;
extern T1245 GE_default1245;
extern T1246 GE_default1246;
extern T1247 GE_default1247;
extern T1248 GE_default1248;
extern T1249 GE_default1249;
extern T1250 GE_default1250;
extern T1251 GE_default1251;
extern T1252 GE_default1252;
extern T1254 GE_default1254;
extern T1255 GE_default1255;
extern T1256 GE_default1256;
extern T1257 GE_default1257;
extern T1258 GE_default1258;
extern T1259 GE_default1259;
extern T1260 GE_default1260;
extern T1261 GE_default1261;
extern T1262 GE_default1262;
extern T1263 GE_default1263;
extern T1264 GE_default1264;
extern T1265 GE_default1265;
extern T1266 GE_default1266;
extern T1267 GE_default1267;
extern T1268 GE_default1268;
extern T1269 GE_default1269;
extern T1270 GE_default1270;
extern T1271 GE_default1271;
extern T1272 GE_default1272;
extern T1273 GE_default1273;
extern T1274 GE_default1274;
extern T1275 GE_default1275;
extern T1277 GE_default1277;
extern T1278 GE_default1278;
extern T1279 GE_default1279;
extern T1280 GE_default1280;
extern T1281 GE_default1281;
extern T1282 GE_default1282;
extern T1283 GE_default1283;
extern T1284 GE_default1284;
extern T1286 GE_default1286;
extern T1287 GE_default1287;
extern T1289 GE_default1289;
extern T1290 GE_default1290;
extern T1291 GE_default1291;
extern T1292 GE_default1292;
extern T1293 GE_default1293;
extern T1294 GE_default1294;
extern T1295 GE_default1295;
extern T1296 GE_default1296;
extern T1297 GE_default1297;
extern T1298 GE_default1298;
extern T1299 GE_default1299;
extern T1300 GE_default1300;
extern T1301 GE_default1301;
extern T1302 GE_default1302;
extern T1303 GE_default1303;
extern T1304 GE_default1304;
extern T1305 GE_default1305;
extern T1307 GE_default1307;
extern T1308 GE_default1308;
extern T1309 GE_default1309;
extern T1310 GE_default1310;
extern T1311 GE_default1311;
extern T1313 GE_default1313;
extern T1315 GE_default1315;
extern T1316 GE_default1316;
extern T1317 GE_default1317;
extern T1318 GE_default1318;
extern T1319 GE_default1319;
extern T1321 GE_default1321;
extern T1322 GE_default1322;
extern T1324 GE_default1324;
extern T1325 GE_default1325;
extern T1326 GE_default1326;
extern T1327 GE_default1327;
extern T1328 GE_default1328;
extern T1329 GE_default1329;
extern T1330 GE_default1330;
extern T1331 GE_default1331;
extern T1332 GE_default1332;
extern T1333 GE_default1333;
extern T1335 GE_default1335;
extern T1336 GE_default1336;
extern T1338 GE_default1338;
extern T1339 GE_default1339;
extern T1340 GE_default1340;
extern T1341 GE_default1341;
extern T1342 GE_default1342;
extern T1343 GE_default1343;
extern T1344 GE_default1344;
extern T1345 GE_default1345;
extern T1346 GE_default1346;
extern T1347 GE_default1347;
extern T1350 GE_default1350;
extern T1351 GE_default1351;
extern T1352 GE_default1352;
extern T1353 GE_default1353;
extern T1354 GE_default1354;
extern T1355 GE_default1355;
extern T1356 GE_default1356;
extern T1357 GE_default1357;
extern T1358 GE_default1358;
extern T1359 GE_default1359;
extern T1360 GE_default1360;
extern T1361 GE_default1361;
extern T1362 GE_default1362;
extern T1363 GE_default1363;
extern T1364 GE_default1364;
extern T1365 GE_default1365;
extern T1366 GE_default1366;
extern T1367 GE_default1367;
extern T1368 GE_default1368;
extern T1369 GE_default1369;
extern T1370 GE_default1370;
extern T1371 GE_default1371;
extern T1372 GE_default1372;
extern T1373 GE_default1373;
extern T1374 GE_default1374;
extern T1375 GE_default1375;
extern T1377 GE_default1377;
extern T1378 GE_default1378;
extern T1379 GE_default1379;
extern T1380 GE_default1380;
extern T1383 GE_default1383;
extern T1384 GE_default1384;
extern T1386 GE_default1386;
extern T1389 GE_default1389;
extern T1390 GE_default1390;
extern T1391 GE_default1391;
extern T1392 GE_default1392;
extern T1393 GE_default1393;
extern T1394 GE_default1394;
extern T1395 GE_default1395;
extern T1398 GE_default1398;
extern T1399 GE_default1399;
extern T1400 GE_default1400;
extern T1401 GE_default1401;
extern T1403 GE_default1403;
extern T1404 GE_default1404;
extern T1405 GE_default1405;
extern T1406 GE_default1406;
extern T1407 GE_default1407;
extern T1408 GE_default1408;
extern T1409 GE_default1409;
extern T1410 GE_default1410;
extern T1416 GE_default1416;
extern T1417 GE_default1417;
extern T1418 GE_default1418;
extern T1419 GE_default1419;
extern T1420 GE_default1420;
extern T1421 GE_default1421;
extern T1422 GE_default1422;
extern T1424 GE_default1424;
extern T1425 GE_default1425;
extern T1432 GE_default1432;
extern T1433 GE_default1433;
extern T1436 GE_default1436;
extern T1437 GE_default1437;
extern T1438 GE_default1438;
extern T1439 GE_default1439;
extern T1440 GE_default1440;
extern T1441 GE_default1441;
extern T1442 GE_default1442;
extern T1443 GE_default1443;
extern T1444 GE_default1444;
extern T1445 GE_default1445;
extern T1446 GE_default1446;
extern T1447 GE_default1447;
extern T1448 GE_default1448;
extern T1449 GE_default1449;
extern T1450 GE_default1450;
extern T1455 GE_default1455;
extern T1456 GE_default1456;
extern T1457 GE_default1457;
extern T1458 GE_default1458;
extern T1459 GE_default1459;
extern T1460 GE_default1460;
extern T1461 GE_default1461;
extern T1463 GE_default1463;
extern T1464 GE_default1464;
extern T1465 GE_default1465;
extern T1466 GE_default1466;
extern T1467 GE_default1467;
extern T1468 GE_default1468;
extern T1470 GE_default1470;
extern T1472 GE_default1472;
extern T1473 GE_default1473;
extern T1474 GE_default1474;
extern T1475 GE_default1475;
extern T1476 GE_default1476;
extern T1477 GE_default1477;
extern T1478 GE_default1478;
extern T1479 GE_default1479;
extern T1480 GE_default1480;
extern T1481 GE_default1481;
extern T1482 GE_default1482;
extern T1485 GE_default1485;
extern T1486 GE_default1486;
extern T1487 GE_default1487;
extern T1488 GE_default1488;
extern T1491 GE_default1491;
extern T1493 GE_default1493;
extern T1494 GE_default1494;
extern T1495 GE_default1495;
extern T1496 GE_default1496;
extern T1498 GE_default1498;
extern T1499 GE_default1499;
extern T1500 GE_default1500;
extern T1501 GE_default1501;
extern T1502 GE_default1502;
extern T1504 GE_default1504;
extern T1505 GE_default1505;
extern T1506 GE_default1506;
extern T1507 GE_default1507;
extern T1508 GE_default1508;
extern T1511 GE_default1511;
extern T1512 GE_default1512;
extern T1513 GE_default1513;
extern T1514 GE_default1514;
extern T1515 GE_default1515;
extern T1517 GE_default1517;
extern T1519 GE_default1519;
extern T1520 GE_default1520;
extern T1521 GE_default1521;
extern T1522 GE_default1522;
extern T1523 GE_default1523;
extern T1524 GE_default1524;
extern T1526 GE_default1526;
extern T1527 GE_default1527;
extern T1528 GE_default1528;
extern T1530 GE_default1530;
extern T1531 GE_default1531;
extern T1532 GE_default1532;
extern T1533 GE_default1533;
extern T1535 GE_default1535;
extern T1536 GE_default1536;
extern T1537 GE_default1537;
extern T1538 GE_default1538;
extern T1539 GE_default1539;
extern T1540 GE_default1540;
extern T1541 GE_default1541;
extern T1542 GE_default1542;
extern T1543 GE_default1543;
extern T1544 GE_default1544;
extern T1545 GE_default1545;
extern T1546 GE_default1546;
extern T1549 GE_default1549;
extern T1550 GE_default1550;
extern T1556 GE_default1556;
extern T1557 GE_default1557;
extern T1558 GE_default1558;
extern T1560 GE_default1560;
extern T1562 GE_default1562;
extern T1564 GE_default1564;
extern T1565 GE_default1565;
extern T1570 GE_default1570;
extern T1571 GE_default1571;
extern T1572 GE_default1572;
extern T1574 GE_default1574;
extern T1575 GE_default1575;
extern T1577 GE_default1577;
extern T1578 GE_default1578;
extern T1581 GE_default1581;
extern T1582 GE_default1582;
extern T1583 GE_default1583;
extern T1584 GE_default1584;
extern T1586 GE_default1586;
extern T1587 GE_default1587;
extern T1591 GE_default1591;
extern T1601 GE_default1601;
extern T1604 GE_default1604;
extern T1605 GE_default1605;
extern T1606 GE_default1606;
extern T1607 GE_default1607;
extern T1608 GE_default1608;
extern T1609 GE_default1609;
extern T1610 GE_default1610;
extern T1611 GE_default1611;
extern T1612 GE_default1612;
extern T1613 GE_default1613;
extern T1614 GE_default1614;
extern T1615 GE_default1615;
extern T1616 GE_default1616;
extern T1617 GE_default1617;
extern T1618 GE_default1618;
extern T1619 GE_default1619;
extern T1620 GE_default1620;
extern T1621 GE_default1621;
extern T1622 GE_default1622;
extern T1623 GE_default1623;
extern T1624 GE_default1624;
extern T1625 GE_default1625;
extern T1626 GE_default1626;
extern T1627 GE_default1627;
extern T1628 GE_default1628;
extern T1629 GE_default1629;
extern T1630 GE_default1630;
extern T1631 GE_default1631;
extern T1632 GE_default1632;
extern T1633 GE_default1633;
extern T1634 GE_default1634;
extern T1635 GE_default1635;
extern T1636 GE_default1636;
extern T1637 GE_default1637;
extern T1638 GE_default1638;
extern T1640 GE_default1640;
extern T1643 GE_default1643;
extern T1644 GE_default1644;
extern T1645 GE_default1645;
extern T1646 GE_default1646;
extern T1647 GE_default1647;
extern T1648 GE_default1648;
extern T1649 GE_default1649;
extern T1654 GE_default1654;
extern T1655 GE_default1655;
extern T1656 GE_default1656;
extern T1657 GE_default1657;
extern T1658 GE_default1658;
extern T1661 GE_default1661;
extern T1662 GE_default1662;
extern T1663 GE_default1663;
extern T1665 GE_default1665;
extern T1666 GE_default1666;
extern T1667 GE_default1667;
extern T1668 GE_default1668;
extern T1669 GE_default1669;
extern T1670 GE_default1670;
extern T1671 GE_default1671;
extern T1672 GE_default1672;
extern T1673 GE_default1673;
extern T1674 GE_default1674;
extern T1677 GE_default1677;
extern T1678 GE_default1678;
extern T1679 GE_default1679;
extern T1680 GE_default1680;
extern T1681 GE_default1681;
extern T1682 GE_default1682;
extern T1683 GE_default1683;
extern T1686 GE_default1686;
extern T1689 GE_default1689;
extern T1690 GE_default1690;
extern T1691 GE_default1691;
extern T1696 GE_default1696;
extern T1697 GE_default1697;
extern T1701 GE_default1701;
extern T1704 GE_default1704;
extern T1708 GE_default1708;
extern T1716 GE_default1716;
extern T1719 GE_default1719;
extern T1724 GE_default1724;
extern T1725 GE_default1725;
extern T1726 GE_default1726;
extern T1727 GE_default1727;
extern T1728 GE_default1728;
extern T1729 GE_default1729;
extern T1730 GE_default1730;
extern T1731 GE_default1731;
extern T1732 GE_default1732;
extern T1733 GE_default1733;
extern T1734 GE_default1734;
extern T1735 GE_default1735;
extern T1736 GE_default1736;
extern T1737 GE_default1737;
extern T1738 GE_default1738;
extern T1739 GE_default1739;
extern T1740 GE_default1740;
extern T1741 GE_default1741;
extern T1742 GE_default1742;
extern T1743 GE_default1743;
extern T1744 GE_default1744;
extern T1745 GE_default1745;
extern T1746 GE_default1746;
extern T1747 GE_default1747;
extern T1748 GE_default1748;
extern T1749 GE_default1749;
extern T1750 GE_default1750;
extern T1751 GE_default1751;
extern T1752 GE_default1752;
extern T1753 GE_default1753;
extern T1754 GE_default1754;
extern T1755 GE_default1755;
extern T1756 GE_default1756;
extern T1757 GE_default1757;
extern T1758 GE_default1758;
extern T1759 GE_default1759;
extern T1761 GE_default1761;
extern T1763 GE_default1763;
extern T1764 GE_default1764;
extern T1766 GE_default1766;
extern T1769 GE_default1769;
extern T1784 GE_default1784;
extern T1789 GE_default1789;
extern T1790 GE_default1790;
extern T1797 GE_default1797;
extern T1798 GE_default1798;
extern T1799 GE_default1799;
extern T1800 GE_default1800;
extern T1801 GE_default1801;
extern T1802 GE_default1802;
extern T1803 GE_default1803;
extern T1804 GE_default1804;
extern T1808 GE_default1808;
extern T1811 GE_default1811;
extern T1813 GE_default1813;
extern T1814 GE_default1814;
extern T1815 GE_default1815;
extern T1816 GE_default1816;
extern T1817 GE_default1817;
extern T1818 GE_default1818;
extern T1821 GE_default1821;
extern T1823 GE_default1823;
extern T1825 GE_default1825;
extern T1826 GE_default1826;
extern T1827 GE_default1827;
extern T1828 GE_default1828;
extern T1830 GE_default1830;
extern T1831 GE_default1831;
extern T1833 GE_default1833;
extern T1835 GE_default1835;
extern T1837 GE_default1837;
extern T1838 GE_default1838;
extern T1840 GE_default1840;
extern T1841 GE_default1841;
extern T1842 GE_default1842;
extern T1843 GE_default1843;
extern T1844 GE_default1844;
extern T1845 GE_default1845;
extern T1846 GE_default1846;
extern T1848 GE_default1848;
extern T1851 GE_default1851;
extern T1852 GE_default1852;
extern T1853 GE_default1853;
extern T1854 GE_default1854;
extern T1855 GE_default1855;
extern T1860 GE_default1860;
extern T1863 GE_default1863;
extern T1865 GE_default1865;
extern T1866 GE_default1866;
extern T1869 GE_default1869;
extern T1872 GE_default1872;
extern T1873 GE_default1873;
extern T1874 GE_default1874;
extern T1875 GE_default1875;
extern T1876 GE_default1876;
extern T1877 GE_default1877;
extern T1878 GE_default1878;
extern T1879 GE_default1879;
extern T1880 GE_default1880;
extern T1881 GE_default1881;
extern T1882 GE_default1882;
extern T1883 GE_default1883;
extern T1884 GE_default1884;
extern T1885 GE_default1885;
extern T1888 GE_default1888;

extern T0* GE_ms8(const char *s, T6 c);
extern T0* GE_ms32(char* s, T6 c);
/* Call to ANY.same_type */
extern T1 T20x27T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.is_equal_seed */
extern T6 T33x3293(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.feature_flattener */
extern T0* T33x3419(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.error_handler */
extern T0* T33x3288(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.ancestor_builder */
extern T0* T33x3418(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.interface_checker */
extern T0* T33x3420(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.default_create_seed */
extern T6 T33x3291(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.detachable_any_type */
extern T0* T33x3526(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.is_ise */
extern T1 T33x3397(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.ise_version */
extern T0* T33x3398(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.is_dotnet */
extern T1 T33x3285(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_type */
extern T0* T33x3525(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.array_detachable_any_type */
extern T0* T33x3531(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.array_like_current_type */
extern T0* T33x3532(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.array_any_type */
extern T0* T33x3530(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.detachable_none_type */
extern T0* T33x3555(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.iteration_cursor_forth_seed */
extern T6 T33x3299(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.iteration_cursor_after_seed */
extern T6 T33x3298(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.iterable_new_cursor_seed */
extern T6 T33x3297(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.routine_call_seed */
extern T6 T33x3295(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.character_32_type */
extern T0* T33x3536(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.unknown_builtin_reported */
extern T1 T33x3378(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_clients */
extern T0* T33x3529(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.eiffel_parser */
extern T0* T33x3414(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.copy_seed */
extern T6 T33x3292(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.function_item_seed */
extern T6 T33x3296(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.older_or_same_ise_version */
extern T1 T33x3400T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.qualified_anchored_types_cycle_detection_enabled */
extern T1 T33x3351(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.real_32_type */
extern T0* T33x3560(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.string_32_type */
extern T0* T33x3567(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.registered_feature_count */
extern T6 T33x3312(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_parent */
extern T0* T33x3527(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_reference_keyword */
extern T1 T33x3346(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_note_keyword */
extern T1 T33x3345(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_detachable_keyword */
extern T1 T33x3344(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_attribute_keyword */
extern T1 T33x3343(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.ast_factory */
extern T0* T33x3289(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_attached_keyword */
extern T1 T33x3342(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.flat_implementation_checker */
extern T0* T33x3422(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.implementation_checker */
extern T0* T33x3421(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.alias_transition_mode */
extern T1 T33x3326(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.preparse_shallow_mode */
extern T1 T33x3353(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.preparse_readonly_mode */
extern T1 T33x3356(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.preparse_override_mode */
extern T1 T33x3357(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.system_object_parents */
extern T0* T33x3569(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_parents */
extern T0* T33x3528(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_cluster_dependence_pathnames */
extern T1 T33x3349(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.cluster_dependence_enabled */
extern T1 T33x3348(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.providers_enabled */
extern T1 T33x3347(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.preparse_multiple_mode */
extern T1 T33x3355(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.qualified_anchored_types_enabled */
extern T1 T33x3350(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.dotnet_assembly_consumer */
extern T0* T33x3416(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.scoop_mode */
extern T1 T33x3323(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.type_any_type */
extern T0* T33x3575(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.dispose_seed */
extern T6 T33x3294(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.console_application_mode */
extern T1 T33x3321(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.exception_trace_mode */
extern T1 T33x3324(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.trace_mode */
extern T1 T33x3325(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.multithreaded_mode */
extern T1 T33x3322(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_object_pathnames */
extern T0* T33x3330(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_library_pathnames */
extern T0* T33x3331(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_include_pathnames */
extern T0* T33x3329(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_boehm_gc */
extern T1 T33x3327(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.stop_requested */
extern T1 T33x3435(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.universe */
extern T0* T33x3708(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.ise_exception_manager_type */
extern T0* T33x3547(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.boolean_type */
extern T0* T33x3533(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.detachable_tuple_type */
extern T0* T33x3572(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.routine_type */
extern T0* T33x3562(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.pointer_type */
extern T0* T33x3556(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.typed_pointer_any_type */
extern T0* T33x3583(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.special_any_type */
extern T0* T33x3563(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.string_8_type */
extern T0* T33x3566(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.character_8_type */
extern T0* T33x3535(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.real_64_type */
extern T0* T33x3561(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_64_type */
extern T0* T33x3553(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_32_type */
extern T0* T33x3552(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_16_type */
extern T0* T33x3551(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_8_type */
extern T0* T33x3550(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_64_type */
extern T0* T33x3546(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_32_type */
extern T0* T33x3545(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_16_type */
extern T0* T33x3544(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_8_type */
extern T0* T33x3543(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.root_creation */
extern T0* T33x3287(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.none_type */
extern T0* T33x3554(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.root_type */
extern T0* T33x3286(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.stop_request */
extern T0* T33x3436(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.master_classes */
extern T0* T33x3501(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.system_name */
extern T0* T33x3328(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.name */
extern T0* T35x2410(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_to_string */
extern T6 T35x2399T0T6T6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* Call to KI_CHARACTER_INPUT_STREAM.is_closable */
extern T1 T35x2405(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.end_of_input */
extern T1 T35x2408(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.last_character */
extern T2 T35x2411(GE_context* ac, T0* C);
/* Call to AP_OPTION.short_form */
extern T2 T47x4748(GE_context* ac, T0* C);
/* Call to AP_OPTION.long_form */
extern T0* T47x4743(GE_context* ac, T0* C);
/* Call to AP_OPTION.description */
extern T0* T47x4741(GE_context* ac, T0* C);
/* Call to AP_OPTION.names */
extern T0* T47x4745(GE_context* ac, T0* C);
/* Call to AP_OPTION.is_hidden */
extern T1 T47x4752(GE_context* ac, T0* C);
/* Call to AP_OPTION.example */
extern T0* T47x4742(GE_context* ac, T0* C);
/* Call to AP_OPTION.name */
extern T0* T47x4744(GE_context* ac, T0* C);
/* Call to AP_OPTION.needs_parameter */
extern T1 T47x4754(GE_context* ac, T0* C);
/* Call to AP_OPTION.has_short_form */
extern T1 T47x4751(GE_context* ac, T0* C);
/* Call to AP_OPTION.allows_parameter */
extern T1 T47x4749(GE_context* ac, T0* C);
/* Call to AP_OPTION.maximum_occurrences */
extern T6 T47x4747(GE_context* ac, T0* C);
/* Call to AP_OPTION.occurrences */
extern T6 T47x4746(GE_context* ac, T0* C);
/* Call to AP_OPTION.was_found */
extern T1 T47x4756(GE_context* ac, T0* C);
/* Call to AP_OPTION.is_mandatory */
extern T1 T47x4753(GE_context* ac, T0* C);
/* Call to UT_ERROR.default_message */
extern T0* T51x4873(GE_context* ac, T0* C);
/* Call to detachable KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T58x5891T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_to_type */
extern T1 T73x7343T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.same_base_type_with_type_marks */
extern T1 T73x7330T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.base_type_index_of_label */
extern T6 T73x7296T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.base_class */
extern T0* T73x7396(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.base_type_actual */
extern T0* T73x7294T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.index_of_label */
extern T6 T73x7232T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.is_type_attached_with_type_mark */
extern T1 T73x7314T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_reference_with_type_mark */
extern T1 T73x7312T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T73x7346T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T73x7338T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.actual_parameters */
extern T0* T73x7227(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.to_text */
extern T0* T73x7355(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.type_with_type_mark */
extern T0* T73x7303T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.named_base_class */
extern T0* T73x7397(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.actual_parameter_count */
extern T6 T73x7235(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.shallow_named_type_with_type_mark */
extern T0* T73x7300T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.shallow_base_type_with_type_mark */
extern T0* T73x7293T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_detachable_with_type_mark */
extern T1 T73x7316T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_expanded_with_type_mark */
extern T1 T73x7310T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T73x7347T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T73x7345T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T73x7342T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_base_class_type_with_type_marks */
extern T1 T73x7340T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.conforms_to_type_with_type_marks */
extern T1 T73x7344T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.unaliased_to_text */
extern T0* T73x7357(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.base_type_with_type_mark */
extern T0* T73x7291T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.base_type_actual_count */
extern T6 T73x7305T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T73x7339T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_named_class_type_with_type_marks */
extern T1 T73x7337T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.named_type_with_type_mark */
extern T0* T73x7298T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.same_named_type_with_type_marks */
extern T1 T73x7328T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.is_expanded */
extern T1 T73x7239(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.same_as_base_class */
extern T1 T73x7244(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.same_named_type */
extern T1 T73x7327T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to READABLE_STRING_GENERAL.code */
extern T10 T102x404T6(GE_context* ac, T0* C, T6 a1);
/* Call to READABLE_STRING_GENERAL.count */
extern T6 T102x442(GE_context* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.substring */
extern T0* T102x483T6T6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* Call to READABLE_STRING_GENERAL.item */
extern T3 T102x405T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_POSITION.column */
extern T6 T185x12559(GE_context* ac, T0* C);
/* Call to ET_POSITION.line */
extern T6 T185x12558(GE_context* ac, T0* C);
/* Call to ET_POSITION.is_null */
extern T1 T185x12560(GE_context* ac, T0* C);
/* Call to ET_POSITION.to_text */
extern T0* T185x12564(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_DOTNET_ASSEMBLY.dotnet_assembly */
extern T0* T198x3708(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T238x15759T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T238x15785T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.is_basic */
extern T1 T238x15754(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_expanded */
extern T1 T238x15807(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.base_type */
extern T0* T238x15763(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T238x15752(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T238x15786T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.base_class */
extern T0* T238x15764(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T238x15783T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T238x15784T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.queries */
extern T0* T238x15781(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.attribute_count */
extern T6 T238x15777(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.id */
extern T6 T238x15772(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_special */
extern T1 T238x15753(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_builtin_attribute */
extern T1 T238x15788T0T6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* Call to ET_DYNAMIC_TYPE.meta_type */
extern T0* T238x15765(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.has_nested_reference_attributes */
extern T1 T238x15779(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.hash_code */
extern T6 T238x22(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_generic */
extern T1 T238x15751(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_alive */
extern T1 T238x15747(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.next_type */
extern T0* T238x15801(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.procedure_calls */
extern T0* T238x15791(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.query_calls */
extern T0* T238x15790(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.procedures */
extern T0* T238x15782(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.static_type */
extern T0* T238x15812(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.has_static */
extern T1 T238x15755(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.last_leaf */
extern T0* T244x7365(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_tuple_label */
extern T1 T244x14752(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.name */
extern T0* T244x14743(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.lower_name */
extern T0* T244x14744(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.position */
extern T0* T244x7361(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.seed */
extern T6 T244x14745(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.across_cursor_name */
extern T0* T244x14788(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_across_cursor */
extern T1 T244x14750(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.object_test_local_name */
extern T0* T244x14787(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_object_test_local */
extern T1 T244x14749(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.local_name */
extern T0* T244x14785(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_local */
extern T1 T244x14748(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.argument_name */
extern T0* T244x14786(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_argument */
extern T1 T244x14751(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.same_feature_name */
extern T1 T244x14741T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.first_leaf */
extern T0* T244x7364(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.hash_code */
extern T6 T244x22(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_prefix */
extern T1 T244x14774(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_infix */
extern T1 T244x14754(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.hash_code */
extern T6 T245x22(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_exported_to */
extern T1 T245x16686T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.first_seed */
extern T6 T245x16726(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_creation_exported_to */
extern T1 T245x16688T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_PROCEDURE.arguments_count */
extern T6 T245x16685(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.arguments */
extern T0* T245x16725(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.overloaded_alias_name */
extern T0* T245x16645(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.alias_name */
extern T0* T245x16641(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.overloaded_name */
extern T0* T245x16644(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.name */
extern T0* T245x16723(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_parenthesisable */
extern T1 T245x16679(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_frozen */
extern T1 T245x16665(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_deferred */
extern T1 T245x16666(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.has_seed */
extern T1 T245x16721T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_PROCEDURE.implementation_class */
extern T0* T245x16737(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.new_synonym */
extern T0* T245x16709T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.postconditions */
extern T0* T245x16751(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.preconditions */
extern T0* T245x16750(GE_context* ac, T0* C);
/* Call to ET_QUERY.lower_name */
extern T0* T246x16735(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_attribute */
extern T1 T246x16669(GE_context* ac, T0* C);
/* Call to ET_QUERY.hash_code */
extern T6 T246x22(GE_context* ac, T0* C);
/* Call to ET_QUERY.type */
extern T0* T246x16724(GE_context* ac, T0* C);
/* Call to ET_QUERY.first_seed */
extern T6 T246x16726(GE_context* ac, T0* C);
/* Call to ET_QUERY.assigner */
extern T0* T246x16791(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_exported_to */
extern T1 T246x16686T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.overloaded_alias_name */
extern T0* T246x16645(GE_context* ac, T0* C);
/* Call to ET_QUERY.alias_name */
extern T0* T246x16641(GE_context* ac, T0* C);
/* Call to ET_QUERY.overloaded_name */
extern T0* T246x16644(GE_context* ac, T0* C);
/* Call to ET_QUERY.name */
extern T0* T246x16723(GE_context* ac, T0* C);
/* Call to ET_QUERY.arguments */
extern T0* T246x16725(GE_context* ac, T0* C);
/* Call to ET_QUERY.arguments_count */
extern T6 T246x16685(GE_context* ac, T0* C);
/* Call to ET_QUERY.has_seed */
extern T1 T246x16721T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_QUERY.implementation_feature */
extern T0* T246x16754(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_unique_attribute */
extern T1 T246x16671(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_constant_attribute */
extern T1 T246x16670(GE_context* ac, T0* C);
/* Call to ET_QUERY.implementation_class */
extern T0* T246x16737(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_once */
extern T1 T246x16675(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_infixable */
extern T1 T246x16676(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_prefixable */
extern T1 T246x16677(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_parenthesisable */
extern T1 T246x16679(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_bracketable */
extern T1 T246x16678(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_frozen */
extern T1 T246x16665(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_deferred */
extern T1 T246x16666(GE_context* ac, T0* C);
/* Call to ET_QUERY.new_synonym */
extern T0* T246x16709T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.postconditions */
extern T0* T246x16751(GE_context* ac, T0* C);
/* Call to ET_QUERY.preconditions */
extern T0* T246x16750(GE_context* ac, T0* C);
/* Call to ET_TYPE.position */
extern T0* T249x7361(GE_context* ac, T0* C);
/* Call to ET_TYPE.same_named_type_with_type_marks */
extern T1 T249x7328T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.last_leaf */
extern T0* T249x7365(GE_context* ac, T0* C);
/* Call to ET_TYPE.to_text */
extern T0* T249x7355(GE_context* ac, T0* C);
/* Call to ET_TYPE.same_base_type_with_type_marks */
extern T1 T249x7330T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.is_like_current */
extern T1 T249x7306(GE_context* ac, T0* C);
/* Call to ET_TYPE.shallow_named_type */
extern T0* T249x7299T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.named_type */
extern T0* T249x7297T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.base_class */
extern T0* T249x7288T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_base_type */
extern T1 T249x7308(GE_context* ac, T0* C);
/* Call to ET_TYPE.conforms_to_type */
extern T1 T249x7343T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.same_named_type */
extern T1 T249x7327T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.is_named_type */
extern T1 T249x7307(GE_context* ac, T0* C);
/* Call to ET_TYPE.is_type_expanded */
extern T1 T249x7309T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_detachable */
extern T1 T249x7315T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.base_type_index_of_label */
extern T6 T249x7296T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.has_identifier_anchored_type */
extern T1 T249x7318(GE_context* ac, T0* C);
/* Call to ET_TYPE.base_type_actual */
extern T0* T249x7294T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T249x7335T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T249x7334T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.named_base_class */
extern T0* T249x7289T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_attached_with_type_mark */
extern T1 T249x7314T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_reference_with_type_mark */
extern T1 T249x7312T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T249x7346T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T249x7338T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T249x7331T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.shallow_base_type */
extern T0* T249x7292T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.type_with_type_mark */
extern T0* T249x7303T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T249x7332T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.shallow_named_type_with_type_mark */
extern T0* T249x7300T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.shallow_base_type_with_type_mark */
extern T0* T249x7293T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T249x7333T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T249x7336T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_type_with_type_marks */
extern T1 T249x7326T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_type */
extern T1 T249x7325T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.resolved_formal_parameters */
extern T0* T249x7348T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.depends_on_qualified_anchored_type */
extern T1 T249x7319T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_formal_types */
extern T1 T249x7320T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_anchored_type */
extern T1 T249x7317(GE_context* ac, T0* C);
/* Call to ET_TYPE.is_type_reference */
extern T1 T249x7311T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.named_type_with_type_mark */
extern T0* T249x7298T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.base_type_with_type_mark */
extern T0* T249x7291T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_detachable_with_type_mark */
extern T1 T249x7316T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_expanded_with_type_mark */
extern T1 T249x7310T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_to_type_with_type_marks */
extern T1 T249x7344T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T249x7339T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_class_type_with_type_marks */
extern T1 T249x7337T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T249x7347T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T249x7345T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.base_type_actual_count */
extern T6 T249x7305T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T249x7342T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_base_class_type_with_type_marks */
extern T1 T249x7340T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.base_type */
extern T0* T249x7290T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.unaliased_to_text */
extern T0* T249x7357(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_class */
extern T0* T250x7396(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.named_type */
extern T0* T250x7403(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.root_context */
extern T0* T250x7394(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.as_nested_type_context */
extern T0* T250x7440(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.is_root_context */
extern T1 T250x7407(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_actual */
extern T0* T250x7400T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_TYPE_CONTEXT.base_type_actual_count */
extern T6 T250x7405(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.to_nested_type_context */
extern T0* T250x7441(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.same_base_type_with_type_marks */
extern T1 T250x7426T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.scoop_mode */
extern T1 T250x7420(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T250x7419(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T250x7414T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T250x7412T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T250x7438T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T250x7428T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T250x7404T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T250x7434T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T250x7416T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T250x7422T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T250x7399T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T250x7410T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.named_base_class */
extern T0* T250x7397(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T250x7439T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T250x7437T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T250x7429T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T250x7427T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_base_tuple_type_with_type_marks */
extern T1 T250x7432T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_base_class_type_with_type_marks */
extern T1 T250x7430T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_UNIVERSE.adapted_universe */
extern T0* T252x3513T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.full_lower_name */
extern T0* T252x3518T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_UNIVERSE.kind_name */
extern T0* T252x3520(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_32_convert_feature */
extern T0* T252x3653(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_32_type */
extern T0* T252x3536(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_8_convert_feature */
extern T0* T252x3652(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_8_type */
extern T0* T252x3535(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_64_convert_feature */
extern T0* T252x3663(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_64_type */
extern T0* T252x3561(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_32_convert_feature */
extern T0* T252x3662(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_32_type */
extern T0* T252x3560(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_64_convert_feature */
extern T0* T252x3661(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_64_type */
extern T0* T252x3553(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_32_convert_feature */
extern T0* T252x3660(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_32_type */
extern T0* T252x3552(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_16_convert_feature */
extern T0* T252x3659(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_16_type */
extern T0* T252x3551(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_8_convert_feature */
extern T0* T252x3658(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_8_type */
extern T0* T252x3550(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_64_convert_feature */
extern T0* T252x3657(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_64_type */
extern T0* T252x3546(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_32_convert_feature */
extern T0* T252x3656(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_32_type */
extern T0* T252x3545(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_16_convert_feature */
extern T0* T252x3655(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_16_type */
extern T0* T252x3544(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_8_convert_feature */
extern T0* T252x3654(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_8_type */
extern T0* T252x3543(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_32_convert_feature */
extern T0* T252x3665(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_32_type */
extern T0* T252x3567(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_8_convert_feature */
extern T0* T252x3664(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_8_type */
extern T0* T252x3566(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.attachment_type_conformance_mode */
extern T1 T252x3644(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.boolean_type */
extern T0* T252x3533(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.target_type_attachment_mode */
extern T1 T252x3646(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.shortest_path */
extern T0* T252x3514T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.tuple_type */
extern T0* T252x3571(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.function_type */
extern T0* T252x3541(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.predicate_like_current_type */
extern T0* T252x3557(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.procedure_like_current_type */
extern T0* T252x3558(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_tuple_type */
extern T0* T252x3572(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.pointer_type */
extern T0* T252x3556(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.typed_pointer_like_current_type */
extern T0* T252x3584(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.array_any_type */
extern T0* T252x3530(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_like_current_type */
extern T0* T252x3582(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.tuple_like_current_type */
extern T0* T252x3573(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.any_type */
extern T0* T252x3525(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_type */
extern T0* T252x3542(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_any_type */
extern T0* T252x3526(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.iterable_detachable_any_type */
extern T0* T252x3548(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.master_class */
extern T0* T252x3502T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.has_master_class */
extern T1 T252x3496T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.system_string_type */
extern T0* T252x3570(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_type */
extern T0* T252x3565(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.hash_code */
extern T6 T252x22(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.double_type */
extern T0* T252x3537(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_type */
extern T0* T252x3559(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_type_detachable_any_type */
extern T0* T252x3578(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.exception_manager_type */
extern T0* T252x3540(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_type_exception_type */
extern T0* T252x3580(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_exception_type */
extern T0* T252x3539(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_exception_type */
extern T0* T252x3581(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.exception_type */
extern T0* T252x3538(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.special_any_type */
extern T0* T252x3563(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.special_detachable_any_type */
extern T0* T252x3564(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_any_type */
extern T0* T252x3577(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_type_any_type */
extern T0* T252x3576(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_like_current_type */
extern T0* T252x3579(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.relative_name */
extern T0* T252x3515T0T2(GE_context* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_UNIVERSE.relative_lower_name */
extern T0* T252x3516T0T2(GE_context* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_UNIVERSE.implicit_attachment_type_mark */
extern T0* T252x3645(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.current_system */
extern T0* T252x3512(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.none_type */
extern T0* T252x3554(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_none_type */
extern T0* T252x3555(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.system_object_parents */
extern T0* T252x3569(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.any_parents */
extern T0* T252x3528(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.system_object_type */
extern T0* T252x3568(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.full_name */
extern T0* T252x3517T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_UNIVERSE.classes_in_group */
extern T0* T252x3507T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.unfolded_empty_tuple_actual_parameters */
extern T0* T252x3574(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.obsolete_routine_type_mode */
extern T1 T252x3647(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_type */
extern T0* T252x3549(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.wide_character_type */
extern T0* T252x3585(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_type */
extern T0* T252x3534(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.resolved_formal_parameters_with_type */
extern T0* T253x7382T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.type */
extern T0* T253x7379(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.actual_parameter */
extern T0* T253x7378(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.position */
extern T0* T255x7361(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_detachable_mark */
extern T1 T255x12531(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_attached_mark */
extern T1 T255x12530(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_attachment_mark */
extern T1 T255x12529(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_implicit_mark */
extern T1 T255x12532(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_separateness_mark */
extern T1 T255x12527(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_expanded_mark */
extern T1 T255x12525(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_expandedness_mark */
extern T1 T255x12524(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.text */
extern T0* T255x12541(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.overridden_type_mark */
extern T0* T255x12540T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_MARK.is_separate_mark */
extern T1 T255x12528(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_reference_mark */
extern T1 T255x12526(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.last_leaf */
extern T0* T256x7365(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.index_of_label */
extern T6 T256x12598T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.type */
extern T0* T256x12596T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETERS.count */
extern T6 T256x12594(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.is_empty */
extern T1 T256x12599(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T256x12601(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T256x12605T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T256x12610T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T256x12602T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T256x12603T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_anchored_type */
extern T1 T256x12600(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T256x12595T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETERS.same_named_types */
extern T1 T256x12606T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T256x12607T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.named_types */
extern T0* T256x12597T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.static_type */
extern T0* T258x15812(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_never_void */
extern T1 T258x15808(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.can_be_void */
extern T1 T258x15809(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_type */
extern T0* T258x15821T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE_SET.count */
extern T6 T258x15824(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_expanded */
extern T1 T258x15828(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_expanded */
extern T1 T258x15807(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_empty */
extern T1 T258x15825(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.special_type */
extern T0* T258x15822(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_types */
extern T0* T258x15817(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_type */
extern T1 T258x15826T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.last_leaf */
extern T0* T284x7365(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.position */
extern T0* T284x7361(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T284x14817T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_EXPRESSION.unparenthesized_expression */
extern T0* T284x14811(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_false */
extern T1 T284x14814(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.index */
extern T6 T284x14834(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_current */
extern T1 T284x14813(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_never_void */
extern T1 T284x14812(GE_context* ac, T0* C);
/* Call to ET_FEATURE.lower_name */
extern T0* T288x16735(GE_context* ac, T0* C);
/* Call to ET_FEATURE.name */
extern T0* T288x16723(GE_context* ac, T0* C);
/* Call to ET_FEATURE.has_seed */
extern T1 T288x16721T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.is_once */
extern T1 T288x16675(GE_context* ac, T0* C);
/* Call to ET_FEATURE.first_seed */
extern T6 T288x16726(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_exported_to */
extern T1 T288x16686T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.clients */
extern T0* T288x16739(GE_context* ac, T0* C);
/* Call to ET_FEATURE.arguments */
extern T0* T288x16725(GE_context* ac, T0* C);
/* Call to ET_FEATURE.extended_name */
extern T0* T288x16642(GE_context* ac, T0* C);
/* Call to ET_FEATURE.arguments_count */
extern T6 T288x16685(GE_context* ac, T0* C);
/* Call to ET_FEATURE.implementation_feature */
extern T0* T288x16754(GE_context* ac, T0* C);
/* Call to ET_FEATURE.implementation_class */
extern T0* T288x16737(GE_context* ac, T0* C);
/* Call to ET_FEATURE.version */
extern T6 T288x16650(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_deferred */
extern T1 T288x16666(GE_context* ac, T0* C);
/* Call to ET_FEATURE.alias_name */
extern T0* T288x16641(GE_context* ac, T0* C);
/* Call to ET_FEATURE.other_seeds */
extern T0* T288x16727(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_procedure */
extern T1 T288x16673(GE_context* ac, T0* C);
/* Call to ET_FEATURE.type */
extern T0* T288x16724(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_unique_attribute */
extern T1 T288x16671(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_constant_attribute */
extern T1 T288x16670(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_attribute */
extern T1 T288x16669(GE_context* ac, T0* C);
/* Call to ET_FEATURE.id */
extern T6 T288x16649(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_frozen */
extern T1 T288x16665(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_infixable */
extern T1 T288x16676(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_prefixable */
extern T1 T288x16677(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_parenthesisable */
extern T1 T288x16679(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_bracketable */
extern T1 T288x16678(GE_context* ac, T0* C);
/* Call to ET_FEATURE.renamed_feature */
extern T0* T288x16710T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.undefined_feature */
extern T0* T288x16711T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.postconditions */
extern T0* T288x16751(GE_context* ac, T0* C);
/* Call to ET_FEATURE.preconditions */
extern T0* T288x16750(GE_context* ac, T0* C);
/* Call to ET_FEATURE.same_version */
extern T1 T288x16692T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.is_dotnet */
extern T1 T288x16720(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_query */
extern T1 T288x16672(GE_context* ac, T0* C);
/* Call to ET_FEATURE.other_precursors */
extern T0* T288x16652(GE_context* ac, T0* C);
/* Call to ET_FEATURE.first_precursor */
extern T0* T288x16736(GE_context* ac, T0* C);
/* Call to ET_FEATURE.has_validity_error */
extern T1 T288x16741(GE_context* ac, T0* C);
/* Call to ET_FEATURE.validity_checked */
extern T1 T288x16740(GE_context* ac, T0* C);
/* Call to ET_FEATURE.hash_code */
extern T6 T288x22(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.last_leaf */
extern T0* T289x7365(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.feature_name */
extern T0* T289x14796(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.name */
extern T0* T314x14863(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.arguments */
extern T0* T314x14864(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.position */
extern T0* T314x7361(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.is_tuple_label */
extern T1 T314x14866(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.is_call_agent */
extern T1 T314x14867(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.position */
extern T0* T315x7361(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.seed */
extern T6 T315x14745(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_tuple_label */
extern T1 T315x14752(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.lower_name */
extern T0* T315x14744(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else */
extern T1 T315x14768(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_implies */
extern T1 T315x14762(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then */
extern T1 T315x14756(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.precursor_keyword */
extern T0* T315x14784(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_precursor */
extern T1 T315x14782(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.hash_code */
extern T6 T315x22(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_not */
extern T1 T315x14778(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_plus */
extern T1 T315x14776(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_minus */
extern T1 T315x14775(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_dotdot */
extern T1 T315x14773(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_xor */
extern T1 T315x14772(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_times */
extern T1 T315x14771(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_power */
extern T1 T315x14770(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_plus */
extern T1 T315x14769(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or */
extern T1 T315x14767(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_mod */
extern T1 T315x14766(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_minus */
extern T1 T315x14765(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_lt */
extern T1 T315x14764(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_le */
extern T1 T315x14763(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_gt */
extern T1 T315x14761(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_ge */
extern T1 T315x14760(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_divide */
extern T1 T315x14758(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_div */
extern T1 T315x14757(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and */
extern T1 T315x14755(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_parenthesis */
extern T1 T315x14780(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_bracket */
extern T1 T315x14779(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.same_call_name */
extern T1 T315x14783T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CALL_NAME.feature_name */
extern T0* T315x14789(GE_context* ac, T0* C);
/* Call to ET_AGENT.target */
extern T0* T318x17555(GE_context* ac, T0* C);
/* Call to ET_AGENT.arguments */
extern T0* T318x17556(GE_context* ac, T0* C);
/* Call to ET_AGENT.implicit_target_position */
extern T0* T318x17565(GE_context* ac, T0* C);
/* Call to ET_AGENT.position */
extern T0* T318x7361(GE_context* ac, T0* C);
/* Call to ET_AGENT.is_inline_agent */
extern T1 T318x17561(GE_context* ac, T0* C);
/* Call to ET_AGENT.index */
extern T6 T318x14834(GE_context* ac, T0* C);
/* Call to ET_AGENT.is_qualified_call */
extern T1 T318x17558(GE_context* ac, T0* C);
/* Call to ET_AGENT.implicit_result */
extern T0* T318x17557(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.expression */
extern T0* T319x17524(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.index */
extern T6 T319x14834(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.type */
extern T0* T319x17523(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.name */
extern T0* T319x17525(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_integer_constant */
extern T1 T324x17817(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_character_constant */
extern T1 T324x17816(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_string_constant */
extern T1 T324x17819(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_boolean_constant */
extern T1 T324x17815(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.index */
extern T6 T324x14834(GE_context* ac, T0* C);
/* Call to ET_TARGET_TYPE.position */
extern T0* T327x7361(GE_context* ac, T0* C);
/* Call to ET_TARGET_TYPE.type */
extern T0* T327x7393(GE_context* ac, T0* C);
/* Call to ET_TARGET_TYPE.last_leaf */
extern T0* T327x7365(GE_context* ac, T0* C);
/* Call to ET_ARGUMENT_OPERANDS.actual_argument */
extern T0* T335x14828T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ARGUMENT_OPERANDS.count */
extern T6 T335x14829(GE_context* ac, T0* C);
/* Call to ET_ARGUMENT_OPERANDS.is_empty */
extern T1 T335x14826(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION_ITEM.expression */
extern T0* T337x14818(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION_ITEM.position */
extern T0* T337x7361(GE_context* ac, T0* C);
/* Call to ET_OPERAND.index */
extern T6 T340x14834(GE_context* ac, T0* C);
/* Call to ET_OPERAND.is_open_operand */
extern T1 T340x14833(GE_context* ac, T0* C);
/* Call to ET_AGENT_TARGET.index */
extern T6 T341x14834(GE_context* ac, T0* C);
/* Call to ET_AGENT_TARGET.position */
extern T0* T341x7361(GE_context* ac, T0* C);
/* Call to ET_AGENT_TARGET.is_open_operand */
extern T1 T341x14833(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_open_operand */
extern T1 T343x14833(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.index */
extern T6 T343x14834(GE_context* ac, T0* C);
/* Call to ET_SYMBOL.position */
extern T0* T345x7361(GE_context* ac, T0* C);
/* Call to ET_SYMBOL.is_question_mark */
extern T1 T345x12538(GE_context* ac, T0* C);
/* Call to ET_SYMBOL.is_bang */
extern T1 T345x12539(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.actual_argument */
extern T0* T354x14828T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_ARGUMENTS.count */
extern T6 T354x14829(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.is_empty */
extern T1 T354x14826(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPES.dynamic_type */
extern T0* T357x15821T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPES.count */
extern T6 T357x15824(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPES.index_of */
extern T6 T357x15823T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPES.has_type */
extern T1 T357x15826T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.cast_type */
extern T0* T363x19899(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.index */
extern T6 T363x14834(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.value */
extern T0* T363x19897(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.position */
extern T0* T363x7361(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_validity_error */
extern T1 T373x16741(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_feature */
extern T0* T373x16754(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.postconditions */
extern T0* T373x16751(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.preconditions */
extern T0* T373x16750(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_feature */
extern T0* T373x16745(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_feature */
extern T1 T373x16733(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.first_precursor */
extern T0* T373x16736(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.locals */
extern T0* T373x16749(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.arguments */
extern T0* T373x16748(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.type */
extern T0* T373x16747(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.clients */
extern T0* T373x16739(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_invariants */
extern T0* T373x16746(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_invariants */
extern T1 T373x16734(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_class */
extern T0* T373x16737(GE_context* ac, T0* C);
/* Call to ET_ASSERTION.expression */
extern T0* T392x14821(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.relative_lower_name */
extern T0* T394x14972T0T2(GE_context* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_PRIMARY_GROUP.kind_name */
extern T0* T394x14978(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.full_lower_name */
extern T0* T394x14974T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_PRIMARY_GROUP.use_obsolete_syntax */
extern T1 T394x14962(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.current_system */
extern T0* T394x14968(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.universe */
extern T0* T394x14967(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.dotnet_assembly */
extern T0* T394x14993(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_cluster */
extern T1 T394x14955(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.cluster */
extern T0* T394x14991(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_override */
extern T1 T394x14960(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_dotnet_assembly */
extern T1 T394x14957(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_unknown */
extern T1 T394x14959(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_none */
extern T1 T394x14958(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.full_lower_name */
extern T0* T415x14974T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_CLUSTER.scm_write_mapping_recursive */
extern T0* T415x15545(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.dependant_constraint */
extern T0* T415x15539(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.overridden_constraint_enabled */
extern T1 T415x15540(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.scm_mapping_constraint_enabled */
extern T1 T415x15541(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.provider_constraint */
extern T0* T415x15538(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.absolute_pathname */
extern T0* T415x14977(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_abstract */
extern T1 T415x15507(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_read_only */
extern T1 T415x14961(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_override */
extern T1 T415x14960(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.full_pathname */
extern T0* T415x14975(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_implicit */
extern T1 T415x15515(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_preparsed */
extern T1 T415x14963(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.parent */
extern T0* T415x14994(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.universe */
extern T0* T415x14967(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.subclusters */
extern T0* T415x15537(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_valid_directory_name */
extern T1 T415x15521T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.is_recursive */
extern T1 T415x15509(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_valid_eiffel_filename */
extern T1 T415x15520T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.scm_write_mapping */
extern T0* T415x15543(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.scm_read_mapping */
extern T0* T415x15542(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_UNIVERSE.hash_code */
extern T6 T444x22(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T447x14974T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_DOTNET_ASSEMBLY.dotnet_assembly */
extern T0* T447x3708(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.hash_code */
extern T6 T447x22(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.is_consumable */
extern T1 T447x15058(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.alias_name */
extern T0* T528x14793(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.feature_name */
extern T0* T528x14792(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.same_call_name */
extern T1 T528x14795T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXTENDED_FEATURE_NAME.position */
extern T0* T528x7361(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.same_extended_feature_name */
extern T1 T528x14794T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.start_condition */
extern T6 T568x6731(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T568x28341T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.end_of_file */
extern T1 T568x6737(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.last_value */
extern T0* T568x28352(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.last_token */
extern T6 T568x6727(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.error_position */
extern T0* T568x28350(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.last_leaf */
extern T0* T646x7365(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.label */
extern T0* T646x7380(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T646x7374T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.type */
extern T0* T646x7379(GE_context* ac, T0* C);
/* Call to ET_NAMED_TYPE.to_text */
extern T0* T647x7355(GE_context* ac, T0* C);
/* Call to ET_NAMED_TYPE.base_type_index_of_label */
extern T6 T647x7296T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_base_type_with_type_marks */
extern T1 T647x7330T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.base_type_actual */
extern T0* T647x7294T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T647x7335T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T647x7334T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T647x7332T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.type_with_type_mark */
extern T0* T647x7303T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T647x7333T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T647x7336T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T647x7326T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T647x7331T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.is_type_attached_with_type_mark */
extern T1 T647x7314T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_reference_with_type_mark */
extern T1 T647x7312T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.has_formal_types */
extern T1 T647x7320T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.is_type_detachable_with_type_mark */
extern T1 T647x7316T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_expanded_with_type_mark */
extern T1 T647x7310T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.named_base_class */
extern T0* T647x7289T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.conforms_to_type_with_type_marks */
extern T1 T647x7344T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_type_with_type_marks */
extern T1 T647x7328T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T647x7338T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T647x7339T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_class_type_with_type_marks */
extern T1 T647x7337T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T647x7346T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T647x7347T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T647x7345T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T647x7342T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_base_class_type_with_type_marks */
extern T1 T647x7340T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.base_class */
extern T0* T647x7288T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLOSURE.locals */
extern T0* T723x16749(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.type */
extern T0* T723x16747(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.arguments */
extern T0* T723x16748(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.across_components */
extern T0* T723x16753(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.object_tests */
extern T0* T723x16752(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.implicit_result */
extern T0* T725x17557(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.formal_arguments */
extern T0* T725x16748(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.actual_arguments */
extern T0* T725x17556(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.target */
extern T0* T725x17555(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.locals */
extern T0* T725x16749(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.type */
extern T0* T725x16747(GE_context* ac, T0* C);
/* Call to ET_CLUSTERS.clusters */
extern T0* T770x5918(GE_context* ac, T0* C);
/* Call to ET_ECF_CONDITION.is_enabled */
extern T1 T816x29385T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.name */
extern T0* T828x14863(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.target */
extern T0* T828x14862(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments_count */
extern T6 T828x14861(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.parenthesis_call */
extern T0* T828x14860(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T828x14864(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.index */
extern T6 T828x14834(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_call_agent */
extern T1 T828x14867(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_tuple_label */
extern T1 T828x14866(GE_context* ac, T0* C);
/* Call to XM_DOCUMENT_NODE.parent */
extern T0* T837x13711(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_UNIVERSE.lower_name */
extern T0* T852x3705(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_UNIVERSE.name */
extern T0* T852x3704(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.same_call_name */
extern T1 T858x14783T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.alias_lower_name */
extern T0* T858x29507(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.same_alias_name */
extern T1 T858x29518T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.hash_code */
extern T6 T858x22(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infix_minus */
extern T1 T858x14765(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infix_plus */
extern T1 T858x14769(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_minus */
extern T1 T858x14775(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_plus */
extern T1 T858x14776(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infix */
extern T1 T858x14754(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infixable */
extern T1 T858x29503(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefixable */
extern T1 T858x29502(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_parenthesis */
extern T1 T858x14780(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_bracket */
extern T1 T858x14779(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefix */
extern T1 T858x14774(GE_context* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.cast_type */
extern T0* T919x30624(GE_context* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.index */
extern T6 T919x14834(GE_context* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.value */
extern T3 T919x30623(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.cast_type */
extern T0* T927x31070(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.index */
extern T6 T927x14834(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_32 */
extern T6 T927x31063(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.literal */
extern T0* T927x31059(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.sign */
extern T0* T927x31069(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.value_position */
extern T0* T927x31073(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_64 */
extern T1 T927x31088(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.value */
extern T11 T927x31060(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_binary */
extern T1 T927x31079(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T927x31078(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_64 */
extern T1 T927x31084(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_32 */
extern T1 T927x31083(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_32 */
extern T1 T927x31087(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_16 */
extern T1 T927x31086(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_8 */
extern T1 T927x31085(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_16 */
extern T1 T927x31082(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_8 */
extern T1 T927x31081(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_natural_64 */
extern T11 T927x31068(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_natural_32 */
extern T10 T927x31067(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_natural_16 */
extern T9 T927x31066(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_natural_8 */
extern T8 T927x31065(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_64 */
extern T7 T927x31064(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_16 */
extern T5 T927x31062(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_8 */
extern T4 T927x31061(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND_ITEM.agent_actual_argument */
extern T0* T969x14837(GE_context* ac, T0* C);
/* Call to ET_ASSIGNER.feature_name */
extern T0* T979x14798(GE_context* ac, T0* C);
/* Call to ET_CHOICE.upper */
extern T0* T994x14848(GE_context* ac, T0* C);
/* Call to ET_CHOICE.is_range */
extern T1 T994x14846(GE_context* ac, T0* C);
/* Call to ET_CHOICE.lower */
extern T0* T994x14847(GE_context* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.position */
extern T0* T997x7361(GE_context* ac, T0* C);
/* Call to ET_CHOICE_ITEM.choice */
extern T0* T1000x14850(GE_context* ac, T0* C);
/* Call to ET_CONDITIONAL.expression */
extern T0* T1015x14819(GE_context* ac, T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.resolved_syntactical_constraint_with_type */
extern T0* T1018x7388T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.type */
extern T0* T1018x7386(GE_context* ac, T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.position */
extern T0* T1018x7387(GE_context* ac, T0* C);
/* Call to ET_CONSTRAINT_TYPE.resolved_syntactical_constraint */
extern T0* T1027x7390T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_CONVERT_FEATURE.name */
extern T0* T1030x25754(GE_context* ac, T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_to */
extern T1 T1030x25753(GE_context* ac, T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_from */
extern T1 T1030x25752(GE_context* ac, T0* C);
/* Call to ET_EXTERNAL_ALIAS.manifest_string */
extern T0* T1062x19909(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME_ITEM.feature_name */
extern T0* T1076x14792(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME_ITEM.position */
extern T0* T1076x7361(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.to_text */
extern T0* T1122x7355(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.position */
extern T0* T1122x7361(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.resolved_formal_parameters */
extern T0* T1122x7348T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_LIKE_TYPE.like_keyword */
extern T0* T1122x26726(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.has_formal_types */
extern T1 T1122x7320T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING_ITEM.manifest_string */
extern T0* T1139x19907(GE_context* ac, T0* C);
/* Call to ET_TYPE_ITEM.type */
extern T0* T1175x7360(GE_context* ac, T0* C);
/* Call to ET_DECLARED_TYPE.last_leaf */
extern T0* T1225x7365(GE_context* ac, T0* C);
/* Call to ET_DECLARED_TYPE.type */
extern T0* T1225x7392(GE_context* ac, T0* C);
/* Call to ET_EXTERNAL_LANGUAGE.manifest_string */
extern T0* T1229x19908(GE_context* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.assertion */
extern T0* T1276x14823(GE_context* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.position */
extern T0* T1276x7361(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.flattened_feature */
extern T0* T1306x16728(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.inherited_feature */
extern T0* T1306x16730(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_inherited */
extern T1 T1306x16717(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.redeclared_feature */
extern T0* T1306x16731(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_redeclared */
extern T1 T1306x16718(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.adapted_feature */
extern T0* T1306x16732(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.immediate_feature */
extern T0* T1306x16729(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_immediate */
extern T1 T1306x16716(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_adapted */
extern T1 T1306x16719(GE_context* ac, T0* C);
/* Call to XM_ELEMENT_NODE.parent */
extern T0* T1413x13711(GE_context* ac, T0* C);
/* Call to DS_ARRAYED_LIST [ET_CLUSTER].item */
extern T0* T1419x4696T6(GE_context* ac, T0* C, T6 a1);
/* Call to DS_ARRAYED_LIST [ET_CLUSTER].count */
extern T6 T1419x4677(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T1421x31445(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.implementation_class */
extern T0* T1421x31446(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.name */
extern T0* T1421x7279(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T1421x7316T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T1421x7314T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T1421x7360(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T1421x7287T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_GROUP.full_lower_name */
extern T0* T1423x14974T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_GROUP.kind_lower_name */
extern T0* T1423x14979(GE_context* ac, T0* C);
/* Call to ET_GROUP.is_cluster */
extern T1 T1423x14955(GE_context* ac, T0* C);
/* Call to ET_GROUP.absolute_pathname */
extern T0* T1423x14977(GE_context* ac, T0* C);
/* Call to ET_GROUP.universe */
extern T0* T1423x14967(GE_context* ac, T0* C);
/* Call to ET_GROUP.parent */
extern T0* T1423x14994(GE_context* ac, T0* C);
/* Call to ET_GROUP.full_name */
extern T0* T1423x14973T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_GROUP.cluster */
extern T0* T1423x14991(GE_context* ac, T0* C);
/* Call to ET_AST_LEAF.last_position */
extern T0* T1430x7363(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_prefix_not */
extern T1 T1431x14778(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and_then */
extern T1 T1431x14756(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and */
extern T1 T1431x14755(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_implies */
extern T1 T1431x14762(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or_else */
extern T1 T1431x14768(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or */
extern T1 T1431x14767(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_tuple_label */
extern T1 T1431x14752(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.position */
extern T0* T1431x7361(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.first_feature */
extern T0* T1510x35913(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.replicated_feature */
extern T0* T1510x35912(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.has_replication */
extern T1 T1510x35911(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.selected_count */
extern T6 T1510x35914(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.rescue_clause */
extern T0* T1551x19874(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.lower_name */
extern T0* T1551x16735(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.compound */
extern T0* T1551x19872(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.arguments */
extern T0* T1551x16725(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.implementation_feature */
extern T0* T1551x16754(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.is_once */
extern T1 T1551x16675(GE_context* ac, T0* C);
/* Call to ET_ROUTINE.implementation_feature */
extern T0* T1552x16754(GE_context* ac, T0* C);
/* Call to ET_ROUTINE.arguments */
extern T0* T1552x16725(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.locals */
extern T0* T1553x16749(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.compound */
extern T0* T1553x19872(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.rescue_clause */
extern T0* T1553x19874(GE_context* ac, T0* C);
/* Call to ET_FREE_NAME.free_operator_name */
extern T0* T1580x29539(GE_context* ac, T0* C);
/* Call to ET_FREE_NAME.hash_code */
extern T6 T1580x22(GE_context* ac, T0* C);
/* Call to ET_FREE_NAME.is_infix_freeop */
extern T1 T1580x14759(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.implicit_result */
extern T0* T1688x17557(GE_context* ac, T0* C);
/* Call to ET_LIKE_IDENTIFIER.name */
extern T0* T1700x31639(GE_context* ac, T0* C);
/* Call to ET_LIKE_IDENTIFIER.to_text */
extern T0* T1700x7355(GE_context* ac, T0* C);
/* Call to ET_AST_NODE.position */
extern T0* T1712x7361(GE_context* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.expression */
extern T0* T1714x37407(GE_context* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.convert_feature */
extern T0* T1714x37408(GE_context* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.index */
extern T6 T1714x14834(GE_context* ac, T0* C);
/* Call to ET_QUERY_INLINE_AGENT.type */
extern T0* T1780x16747(GE_context* ac, T0* C);
/* Call to ET_QUERY_INLINE_AGENT.formal_arguments */
extern T0* T1780x16748(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T1783x16748(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.parenthesis_call */
extern T0* T1785x14860(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.name */
extern T0* T1785x14863(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.target */
extern T0* T1785x14862(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.arguments */
extern T0* T1785x14864(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL.arguments */
extern T0* T1786x14864(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL.target */
extern T0* T1786x14862(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL.name */
extern T0* T1786x14863(GE_context* ac, T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T1787x14864(GE_context* ac, T0* C);
/* Call to detachable LX_TRANSITION [LX_NFA_STATE].target */
extern T0* T1822x37733(GE_context* ac, T0* C);
/* Call to detachable LX_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T1822x37736T6(GE_context* ac, T0* C, T6 a1);
/* Call to EXCEPTION.set_type_name */
extern void T28x2364T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_recipient_name */
extern void T28x2360T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_description */
extern void T28x2352T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_exception_trace */
extern void T28x2366T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_throwing_exception */
extern void T28x2359T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.register_feature */
extern void T33x3311T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.set_iteration_cursor_forth_seed */
extern void T33x3308T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_iteration_cursor_after_seed */
extern void T33x3307T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_iterable_new_cursor_seed */
extern void T33x3306T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_dispose_seed */
extern void T33x3303T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_function_item_seed */
extern void T33x3305T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_routine_call_seed */
extern void T33x3304T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_is_equal_seed */
extern void T33x3302T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_copy_seed */
extern void T33x3301T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_default_create_seed */
extern void T33x3300T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.register_inline_constant */
extern void T33x3313T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.register_class */
extern void T33x3309T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.print_time */
extern void T33x3438T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_SYSTEM.preparse_recursive */
extern void T33x3693(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.activate_processors */
extern void T33x3424(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.classes_do_recursive_until */
extern void T33x3671T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_SYSTEM.compile_all */
extern void T33x3407(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.classes_do_recursive */
extern void T33x3670T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.set_flat_dbc_mode */
extern void T33x3380T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_SYSTEM.set_flat_mode */
extern void T33x3379T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_SYSTEM.set_qualified_anchored_types_enabled */
extern void T33x3367T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_SYSTEM.set_ise_version */
extern void T33x3404T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.set_error_handler */
extern void T33x3319T0(GE_context* ac, T0* C, T0* a1);
/* Call to KI_CHARACTER_INPUT_STREAM.close */
extern void T35x2412(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_character */
extern void T35x2402(GE_context* ac, T0* C);
/* Call to AP_OPTION.record_occurrence */
extern void T47x4767T0(GE_context* ac, T0* C, T0* a1);
/* Call to AP_OPTION.reset */
extern void T47x4768(GE_context* ac, T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_integer */
extern void T83x12644T6(GE_context* ac, T0* C, T6 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_character */
extern void T83x12658T2(GE_context* ac, T0* C, T2 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_new_line */
extern void T83x12640(GE_context* ac, T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_string */
extern void T83x12642T0(GE_context* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.append */
extern void T83x12659T0(GE_context* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_line */
extern void T83x12639T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS_FILTER.set_next */
extern void T165x13833T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_xml_declaration */
extern void T166x13894T0T0T1(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* Call to XM_CALLBACKS.on_error */
extern void T166x13895T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start_tag_finish */
extern void T166x13900(GE_context* ac, T0* C);
/* Call to XM_CALLBACKS.on_finish */
extern void T166x13893(GE_context* ac, T0* C);
/* Call to XM_CALLBACKS.on_attribute */
extern void T166x13899T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to XM_CALLBACKS.on_end_tag */
extern void T166x13901T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_start_tag */
extern void T166x13898T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_content */
extern void T166x13902T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_processing_instruction */
extern void T166x13896T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to XM_CALLBACKS.on_comment */
extern void T166x13897T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start */
extern void T166x13892(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_DOTNET_ASSEMBLY.export_classes */
extern void T198x3713T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_query_call */
extern void T238x15792T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_procedure_call */
extern void T238x15793T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_target */
extern void T238x15814T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.put_object_equality_expression */
extern void T238x15797T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_equality_expression */
extern void T238x15796T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_static */
extern void T238x15762T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_DYNAMIC_TYPE.use_all_attributes */
extern void T238x15787T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_meta_type */
extern void T238x15774T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_alive */
extern void T238x15760(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.set_next_type */
extern void T238x15802T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_hash_code */
extern void T238x15776T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE.set_id */
extern void T238x15775T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE_NAME.set_seed */
extern void T244x14746T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE_NAME.reset */
extern void T244x14742(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.reset_after_interface_checked */
extern void T245x16637(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.reset_after_features_flattened */
extern void T245x16636(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.reset */
extern void T245x16635(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.set_across_components */
extern void T245x16756T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_object_tests */
extern void T245x16755T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_frozen_keyword */
extern void T245x16703T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.reset_validity_checked */
extern void T245x16744(GE_context* ac, T0* C);
/* Call to ET_QUERY.reset_after_interface_checked */
extern void T246x16637(GE_context* ac, T0* C);
/* Call to ET_QUERY.reset_after_features_flattened */
extern void T246x16636(GE_context* ac, T0* C);
/* Call to ET_QUERY.reset */
extern void T246x16635(GE_context* ac, T0* C);
/* Call to ET_QUERY.set_across_components */
extern void T246x16756T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_object_tests */
extern void T246x16755T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_frozen_keyword */
extern void T246x16703T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.reset_validity_checked */
extern void T246x16744(GE_context* ac, T0* C);
/* Call to ET_AST_PROCESSOR.process_convert_to_expression */
extern void T248x8794T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_from_expression */
extern void T248x8792T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_builtin_expression */
extern void T248x8788T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_cast_expression */
extern void T248x8852T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unqualified_call_instruction */
extern void T248x8939T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_instruction */
extern void T248x8924T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_instruction */
extern void T248x8901T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_instruction */
extern void T248x8796T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bang_instruction */
extern void T248x8762T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_loop_instruction */
extern void T248x8875T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment_attempt */
extern void T248x8757T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment */
extern void T248x8756T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assigner_instruction */
extern void T248x8755T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_instruction */
extern void T248x8858T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_instruction */
extern void T248x8845T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_debug_instruction */
extern void T248x8802T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_check_instruction */
extern void T248x8774T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_across_instruction */
extern void T248x8737T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_retry_instruction */
extern void T248x8920T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_cluster */
extern void T248x8945T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constrained_formal_parameter */
extern void T248x8786T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter */
extern void T248x8836T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_n */
extern void T248x8870T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_current */
extern void T248x8868T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_attribute */
extern void T248x8761T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unique_attribute */
extern void T248x8937T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constant_attribute */
extern void T248x8785T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_extended_attribute */
extern void T248x8820T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_expression */
extern void T248x8795T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_equality_expression */
extern void T248x8816T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_object_equality_expression */
extern void T248x8883T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_object_test */
extern void T248x8884T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unqualified_call_expression */
extern void T248x8938T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_call_instruction */
extern void T248x8908T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_tuple_type */
extern void T248x8931T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function */
extern void T248x8822T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class_type */
extern void T248x8779T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter_type */
extern void T248x8839T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure_inline_agent */
extern void T248x8825T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure_inline_agent */
extern void T248x8892T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure_inline_agent */
extern void T248x8808T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function_inline_agent */
extern void T248x8823T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function_inline_agent */
extern void T248x8889T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function_inline_agent */
extern void T248x8806T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_manifest_string */
extern void T248x8890T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_object_test */
extern void T248x8887T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_expression */
extern void T248x8886T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_prefix_expression */
extern void T248x8903T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_type */
extern void T248x8881T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_expression */
extern void T248x8854T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_expression_address */
extern void T248x8818T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result_address */
extern void T248x8919T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current_address */
extern void T248x8800T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_feature_address */
extern void T248x8827T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_expression */
extern void T248x8900T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_type */
extern void T248x8910T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_braced_type */
extern void T248x8909T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_feature */
extern void T248x8869T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure */
extern void T248x8824T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure */
extern void T248x8891T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_function */
extern void T248x8803T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function */
extern void T248x8888T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function */
extern void T248x8805T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c2_character_constant */
extern void T248x8771T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c1_character_constant */
extern void T248x8770T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_false_constant */
extern void T248x8826T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_true_constant */
extern void T248x8930T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_real_constant */
extern void T248x8934T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_real_constant */
extern void T248x8914T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_binary_integer_constant */
extern void T248x8763T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_octal_integer_constant */
extern void T248x8885T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_hexadecimal_integer_constant */
extern void T248x8841T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_integer_constant */
extern void T248x8933T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_integer_constant */
extern void T248x8912T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_special_manifest_string */
extern void T248x8922T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_verbatim_string */
extern void T248x8941T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c3_character_constant */
extern void T248x8772T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_strip_expression */
extern void T248x8925T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_expression */
extern void T248x8923T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_parenthesized_expression */
extern void T248x8896T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_array */
extern void T248x8877T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_agent */
extern void T248x8773T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bracket_expression */
extern void T248x8768T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_across_expression */
extern void T248x8736T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_void */
extern void T248x8942T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_manifest_string */
extern void T248x8913T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_named_object_test */
extern void T248x8882T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_procedure */
extern void T248x8804T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure */
extern void T248x8807T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_tuple */
extern void T248x8880T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result */
extern void T248x8918T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_call_expression */
extern void T248x8907T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current */
extern void T248x8799T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_identifier */
extern void T248x8842T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class */
extern void T248x8778T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.reset */
extern void T249x7284(GE_context* ac, T0* C);
/* Call to ET_TYPE.reset_qualified_anchored_types */
extern void T249x7285(GE_context* ac, T0* C);
/* Call to ET_TYPE.process */
extern void T249x7370T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.append_to_string */
extern void T249x7356T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.append_unaliased_to_string */
extern void T249x7358T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.universes_do_if */
extern void T252x3683T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.universes_do_all */
extern void T252x3682T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.resolve_unfolded_tuple_actual_parameters */
extern void T252x3628(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.master_classes_do_if_until */
extern void T252x3677T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_UNIVERSE.master_classes_do_if */
extern void T252x3676T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_if */
extern void T252x3668T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.master_classes_do_all */
extern void T252x3674T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.master_classes_do_until */
extern void T252x3675T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_if_until */
extern void T252x3669T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_UNIVERSE.classes_do_until */
extern void T252x3667T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_all */
extern void T252x3666T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T256x12593(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.reset */
extern void T256x12592(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.append_to_string */
extern void T256x12611T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T256x12612T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.put_target */
extern void T258x15814T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE_SET.set_never_void */
extern void T258x15811(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.propagate_can_be_void */
extern void T258x15820T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.process */
extern void T284x7370T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.reset */
extern void T284x14820(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.set_index */
extern void T284x14835T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.process */
extern void T288x7370T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_other_seeds */
extern void T288x16700T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_seed */
extern void T288x16699T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_clients */
extern void T288x16691T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_version */
extern void T288x16696T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_other_precursors */
extern void T288x16702T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_precursor */
extern void T288x16701T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.reset_postconditions */
extern void T288x16707(GE_context* ac, T0* C);
/* Call to ET_FEATURE.reset_preconditions */
extern void T288x16706(GE_context* ac, T0* C);
/* Call to ET_FEATURE.set_implementation_class */
extern void T288x16697T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_feature */
extern void T288x16698T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_id */
extern void T288x16693T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_validity_error */
extern void T288x16743(GE_context* ac, T0* C);
/* Call to ET_FEATURE.set_validity_checked */
extern void T288x16742(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.set_seed */
extern void T315x14746T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_AGENT.set_arguments */
extern void T318x17564T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AGENT.process */
extern void T318x7370T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CONSTANT.set_index */
extern void T324x14835T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_CONSTANT.process */
extern void T324x7370T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_OPERAND.set_index */
extern void T340x14835T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.set_index */
extern void T341x14835T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.process */
extern void T341x7370T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AGENT_TARGET.reset */
extern void T341x14832(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.process */
extern void T343x7370T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND.reset */
extern void T343x14832(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.set_index */
extern void T363x14835T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_MANIFEST_STRING.set_type */
extern void T363x19905T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.set_cast_type */
extern void T363x19904T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ASSERTION.process */
extern void T392x7370T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ASSERTION.reset */
extern void T392x14820(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.process */
extern void T415x15578T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_dependant_constraint */
extern void T415x15563T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_provider_constraint */
extern void T415x15562T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.add_recursive_cluster */
extern void T415x15567T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_preparsed */
extern void T415x15557T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_CLUSTER.set_scm_write_mapping */
extern void T415x15565T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_scm_read_mapping */
extern void T415x15564T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTERNAL_UNIVERSE.clusters_do_explicit */
extern void T444x3472T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTERNAL_UNIVERSE.dotnet_assemblies_do_if */
extern void T444x3480T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T447x15057T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T447x3688T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DOTNET_ASSEMBLY.consume */
extern void T447x15063T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DOTNET_ASSEMBLY.import_classes */
extern void T447x3696(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.parse_all */
extern void T447x3694(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.preparse */
extern void T447x3692(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.reset */
extern void T528x14791(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.close_input */
extern void T568x28337(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T568x28336T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.set_encoding */
extern void T568x28342T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T568x28333(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.read_token */
extern void T568x6745(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_stream */
extern void T568x28335T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TARGET.propagate_can_be_void */
extern void T643x15820T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TARGET.put_type_from_type_set */
extern void T643x15818T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_INLINE_AGENT.set_across_components */
extern void T725x16756T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_object_tests */
extern void T725x16755T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_actual_arguments */
extern void T725x17564T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.set_index */
extern void T828x14835T6(GE_context* ac, T0* C, T6 a1);
/* Call to XM_DOCUMENT_NODE.node_set_parent */
extern void T837x13734T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.reset */
extern void T858x14742(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.set_infix */
extern void T858x29516(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.set_prefix */
extern void T858x29515(GE_context* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.set_index */
extern void T919x14835T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_CHARACTER_CONSTANT.set_cast_type */
extern void T919x30628T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.set_type */
extern void T919x30629T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_index */
extern void T927x14835T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.set_cast_type */
extern void T927x31090T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_type */
extern void T927x31091T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_sign */
extern void T927x31089T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ASSIGNER.reset */
extern void T979x14797(GE_context* ac, T0* C);
/* Call to ET_CHOICE.reset */
extern void T994x14845(GE_context* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.reset */
extern void T997x14845(GE_context* ac, T0* C);
/* Call to ET_INSTRUCTION.process */
extern void T1115x7370T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INSTRUCTION.reset */
extern void T1115x14870(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.reset_qualified_anchored_types */
extern void T1122x7285(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.reset */
extern void T1122x7284(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.append_to_string */
extern void T1122x7356T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_ELEMENT_NODE.node_set_parent */
extern void T1413x13734T0(GE_context* ac, T0* C, T0* a1);
/* Call to DS_ARRAYED_LIST [ET_CLUSTER].remove */
extern void T1419x4716T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_OPERATOR.reset */
extern void T1431x14742(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.set_parenthesis_call */
extern void T1785x14897T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to detachable LX_TRANSITION [LX_NFA_STATE].record */
extern void T1822x37737T0(GE_context* ac, T0* C, T0* a1);
/* New instance of type SPECIAL [CHARACTER_8] */
extern T0* GE_new15(T6 a1, T1 initialize);
/* New instance of type SPECIAL [CHARACTER_32] */
extern T0* GE_new16(T6 a1, T1 initialize);
/* New instance of type STRING_8 */
extern T0* GE_new17(T1 initialize);
/* New instance of type STRING_32 */
extern T0* GE_new18(T1 initialize);
/* New instance of type ISE_EXCEPTION_MANAGER */
extern T0* GE_new19(T1 initialize);
/* New instance of type GEC */
extern T0* GE_new22(T1 initialize);
/* New instance of type HASH_TABLE [INTEGER_32, INTEGER_32] */
extern T0* GE_new23(T1 initialize);
/* New instance of type CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
extern T0* GE_new24(T1 initialize);
/* New instance of type CELL [detachable EXCEPTION] */
extern T0* GE_new25(T1 initialize);
/* New instance of type CELL [NO_MORE_MEMORY] */
extern T0* GE_new26(T1 initialize);
/* New instance of type [attached] TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
extern T0* GE_new27(T1 initialize);
/* New instance of type KL_TEXT_INPUT_FILE */
extern T0* GE_new29(T1 initialize);
/* New instance of type KL_ARGUMENTS */
extern T0* GE_new30(T1 initialize);
/* New instance of type ET_ISE_VARIABLES */
extern T0* GE_new31(T1 initialize);
/* New instance of type UT_ERROR_HANDLER */
extern T0* GE_new32(T1 initialize);
/* New instance of type ET_SYSTEM */
extern T0* GE_new33(T1 initialize);
/* New instance of type KL_STRING_ROUTINES */
extern T0* GE_new34(T1 initialize);
/* New instance of type ET_ERROR_HANDLER */
extern T0* GE_new36(T1 initialize);
/* New instance of type KL_EXCEPTIONS */
extern T0* GE_new37(T1 initialize);
/* New instance of type AP_PARSER */
extern T0* GE_new38(T1 initialize);
/* New instance of type AP_ALTERNATIVE_OPTIONS_LIST */
extern T0* GE_new39(T1 initialize);
/* New instance of type AP_ERROR */
extern T0* GE_new40(T1 initialize);
/* New instance of type AP_FLAG */
extern T0* GE_new41(T1 initialize);
/* New instance of type AP_ENUMERATION_OPTION */
extern T0* GE_new43(T1 initialize);
/* New instance of type AP_BOOLEAN_OPTION */
extern T0* GE_new44(T1 initialize);
/* New instance of type AP_INTEGER_OPTION */
extern T0* GE_new45(T1 initialize);
/* New instance of type AP_STRING_OPTION */
extern T0* GE_new46(T1 initialize);
/* New instance of type AP_DISPLAY_HELP_FLAG */
extern T0* GE_new50(T1 initialize);
/* New instance of type ET_XACE_SYSTEM_PARSER */
extern T0* GE_new52(T1 initialize);
/* New instance of type ET_XACE_DEFAULT_ERROR_HANDLER */
extern T0* GE_new53(T1 initialize);
/* New instance of type DS_HASH_TABLE [STRING_8, STRING_8] */
extern T0* GE_new54(T1 initialize);
/* New instance of type ST_SPLITTER */
extern T0* GE_new55(T1 initialize);
/* New instance of type UC_STRING_EQUALITY_TESTER */
extern T0* GE_new57(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [STRING_8] */
extern T0* GE_new58(T1 initialize);
/* New instance of type ET_XACE_SYSTEM */
extern T0* GE_new61(T1 initialize);
/* New instance of type ET_ECF_SYSTEM_PARSER */
extern T0* GE_new62(T1 initialize);
/* New instance of type ET_ECF_ERROR_HANDLER */
extern T0* GE_new63(T1 initialize);
/* New instance of type ET_ECF_SYSTEM */
extern T0* GE_new64(T1 initialize);
/* New instance of type ET_ECF_TARGET */
extern T0* GE_new65(T1 initialize);
/* New instance of type KL_EXECUTION_ENVIRONMENT */
extern T0* GE_new66(T1 initialize);
/* New instance of type ET_ECF_VARIABLES */
extern T0* GE_new67(T1 initialize);
/* New instance of type ET_LACE_PARSER */
extern T0* GE_new68(T1 initialize);
/* New instance of type ET_LACE_ERROR_HANDLER */
extern T0* GE_new69(T1 initialize);
/* New instance of type ET_LACE_SYSTEM */
extern T0* GE_new70(T1 initialize);
/* New instance of type ET_DYNAMIC_SYSTEM */
extern T0* GE_new71(T1 initialize);
/* New instance of type ET_C_GENERATOR */
extern T0* GE_new74(T1 initialize);
/* New instance of type KL_SHELL_COMMAND */
extern T0* GE_new75(T1 initialize);
/* New instance of type DS_HASH_SET [STRING_8] */
extern T0* GE_new76(T1 initialize);
/* New instance of type ET_NULL_ERROR_HANDLER */
extern T0* GE_new77(T1 initialize);
/* New instance of type UT_VERSION */
extern T0* GE_new78(T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
extern T0* GE_new79(T1 initialize);
/* New instance of type ET_CLASS_TYPE */
extern T0* GE_new80(T1 initialize);
/* New instance of type ET_TOKEN_CONSTANTS */
extern T0* GE_new81(T1 initialize);
/* New instance of type ET_CLASS */
extern T0* GE_new82(T1 initialize);
/* New instance of type KL_OPERATING_SYSTEM */
extern T0* GE_new84(T1 initialize);
/* New instance of type UT_CANNOT_READ_FILE_ERROR */
extern T0* GE_new86(T1 initialize);
/* New instance of type UT_VERSION_NUMBER */
extern T0* GE_new87(T1 initialize);
/* New instance of type VOID_TARGET */
extern T0* GE_new88(T1 initialize);
/* New instance of type ROUTINE_FAILURE */
extern T0* GE_new90(T1 initialize);
/* New instance of type OLD_VIOLATION */
extern T0* GE_new92(T1 initialize);
/* New instance of type NO_MORE_MEMORY */
extern T0* GE_new94(T1 initialize);
/* New instance of type INVARIANT_VIOLATION */
extern T0* GE_new95(T1 initialize);
/* New instance of type OPERATING_SYSTEM_SIGNAL_FAILURE */
extern T0* GE_new96(T1 initialize);
/* New instance of type IO_FAILURE */
extern T0* GE_new97(T1 initialize);
/* New instance of type OPERATING_SYSTEM_FAILURE */
extern T0* GE_new98(T1 initialize);
/* New instance of type COM_FAILURE */
extern T0* GE_new99(T1 initialize);
/* New instance of type EIFFEL_RUNTIME_PANIC */
extern T0* GE_new100(T1 initialize);
/* New instance of type PRECONDITION_VIOLATION */
extern T0* GE_new103(T1 initialize);
/* New instance of type POSTCONDITION_VIOLATION */
extern T0* GE_new104(T1 initialize);
/* New instance of type FLOATING_POINT_FAILURE */
extern T0* GE_new105(T1 initialize);
/* New instance of type CHECK_VIOLATION */
extern T0* GE_new106(T1 initialize);
/* New instance of type BAD_INSPECT_VALUE */
extern T0* GE_new107(T1 initialize);
/* New instance of type VARIANT_VIOLATION */
extern T0* GE_new108(T1 initialize);
/* New instance of type LOOP_INVARIANT_VIOLATION */
extern T0* GE_new109(T1 initialize);
/* New instance of type RESCUE_FAILURE */
extern T0* GE_new110(T1 initialize);
/* New instance of type RESUMPTION_FAILURE */
extern T0* GE_new111(T1 initialize);
/* New instance of type CREATE_ON_DEFERRED */
extern T0* GE_new112(T1 initialize);
/* New instance of type EXTERNAL_FAILURE */
extern T0* GE_new113(T1 initialize);
/* New instance of type VOID_ASSIGNED_TO_EXPANDED */
extern T0* GE_new114(T1 initialize);
/* New instance of type EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
extern T0* GE_new115(T1 initialize);
/* New instance of type MISMATCH_FAILURE */
extern T0* GE_new116(T1 initialize);
/* New instance of type DEVELOPER_EXCEPTION */
extern T0* GE_new117(T1 initialize);
/* New instance of type ADDRESS_APPLIED_TO_MELTED_FEATURE */
extern T0* GE_new118(T1 initialize);
/* New instance of type SERIALIZATION_FAILURE */
extern T0* GE_new119(T1 initialize);
/* New instance of type KL_WINDOWS_FILE_SYSTEM */
extern T0* GE_new120(T1 initialize);
/* New instance of type KL_UNIX_FILE_SYSTEM */
extern T0* GE_new121(T1 initialize);
/* New instance of type PRIMES */
extern T0* GE_new122(T1 initialize);
/* New instance of type SPECIAL [INTEGER_32] */
extern T0* GE_new123(T6 a1, T1 initialize);
/* New instance of type SPECIAL [BOOLEAN] */
extern T0* GE_new124(T6 a1, T1 initialize);
/* New instance of type detachable KL_LINKABLE [CHARACTER_8] */
extern T0* GE_new126(T1 initialize);
/* New instance of type MANAGED_POINTER */
extern T0* GE_new128(T1 initialize);
/* New instance of type FILE_INFO */
extern T0* GE_new129(T1 initialize);
/* New instance of type KL_STANDARD_FILES */
extern T0* GE_new130(T1 initialize);
/* New instance of type KL_STDERR_FILE */
extern T0* GE_new131(T1 initialize);
/* New instance of type KL_STDOUT_FILE */
extern T0* GE_new132(T1 initialize);
/* New instance of type UC_STRING */
extern T0* GE_new133(T1 initialize);
/* New instance of type KL_ANY_ROUTINES */
extern T0* GE_new134(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [STRING_8] */
extern T0* GE_new136(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [AP_OPTION] */
extern T0* GE_new137(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new138(T1 initialize);
/* New instance of type AP_ERROR_HANDLER */
extern T0* GE_new139(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [AP_OPTION] */
extern T0* GE_new140(T1 initialize);
/* New instance of type SPECIAL [STRING_8] */
extern T0* GE_new141(T6 a1, T1 initialize);
/* New instance of type ARRAY [STRING_8] */
extern T0* GE_new142(T1 initialize);
/* New instance of type DS_LINKED_LIST [STRING_8] */
extern T0* GE_new143(T1 initialize);
/* New instance of type KL_STRING_EQUALITY_TESTER */
extern T0* GE_new144(T1 initialize);
/* New instance of type DS_LINKED_LIST [BOOLEAN] */
extern T0* GE_new147(T1 initialize);
/* New instance of type DS_LINKED_LIST [INTEGER_32] */
extern T0* GE_new150(T1 initialize);
/* New instance of type ST_WORD_WRAPPER */
extern T0* GE_new151(T1 initialize);
/* New instance of type ET_XACE_AST_FACTORY */
extern T0* GE_new152(T1 initialize);
/* New instance of type XM_DOCUMENT */
extern T0* GE_new153(T1 initialize);
/* New instance of type XM_ELEMENT */
extern T0* GE_new154(T1 initialize);
/* New instance of type XM_POSITION_TABLE */
extern T0* GE_new155(T1 initialize);
/* New instance of type XM_TREE_CALLBACKS_PIPE */
extern T0* GE_new157(T1 initialize);
/* New instance of type XM_STOP_ON_ERROR_FILTER */
extern T0* GE_new158(T1 initialize);
/* New instance of type XM_CALLBACKS_TO_TREE_FILTER */
extern T0* GE_new159(T1 initialize);
/* New instance of type ET_XACE_VALIDATOR */
extern T0* GE_new160(T1 initialize);
/* New instance of type ET_XACE_PREPROCESSOR */
extern T0* GE_new161(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8] */
extern T0* GE_new162(T1 initialize);
/* New instance of type XM_EXPAT_PARSER_FACTORY */
extern T0* GE_new163(T1 initialize);
/* New instance of type XM_EIFFEL_PARSER */
extern T0* GE_new164(T1 initialize);
/* New instance of type ET_XACE_LIBRARY_CONFIG_PARSER */
extern T0* GE_new167(T1 initialize);
/* New instance of type UT_MESSAGE */
extern T0* GE_new168(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [STRING_8] */
extern T0* GE_new170(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
extern T0* GE_new171(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [INTEGER_32] */
extern T0* GE_new172(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [STRING_8] */
extern T0* GE_new173(T1 initialize);
/* New instance of type DS_HASH_SET [INTEGER_32] */
extern T0* GE_new174(T1 initialize);
/* New instance of type ET_ECF_AST_FACTORY */
extern T0* GE_new175(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
extern T0* GE_new177(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
extern T0* GE_new178(T1 initialize);
/* New instance of type ET_COMPRESSED_POSITION */
extern T0* GE_new179(T1 initialize);
/* New instance of type ET_IDENTIFIER */
extern T0* GE_new181(T1 initialize);
/* New instance of type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
extern T0* GE_new183(T1 initialize);
/* New instance of type ET_ECF_STATE */
extern T0* GE_new186(T1 initialize);
/* New instance of type ET_ECF_TARGETS */
extern T0* GE_new187(T1 initialize);
/* New instance of type ET_ECF_LIBRARY */
extern T0* GE_new188(T1 initialize);
/* New instance of type ET_ADAPTED_LIBRARIES */
extern T0* GE_new189(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ADAPTED_LIBRARY] */
extern T0* GE_new191(T1 initialize);
/* New instance of type detachable TUPLE */
extern T0* GE_new192(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ADAPTED_LIBRARY]] */
extern T0* GE_new193(T1 initialize);
/* New instance of type ET_ECF_LIBRARY_PARSER */
extern T0* GE_new194(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_LIBRARY */
extern T0* GE_new195(T1 initialize);
/* New instance of type ET_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new196(T1 initialize);
/* New instance of type ET_ECF_DOTNET_ASSEMBLY */
extern T0* GE_new197(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
extern T0* GE_new199(T1 initialize);
/* New instance of type ET_ECF_ERROR */
extern T0* GE_new200(T1 initialize);
/* New instance of type EXECUTION_ENVIRONMENT */
extern T0* GE_new201(T1 initialize);
/* New instance of type ET_LACE_AST_FACTORY */
extern T0* GE_new202(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
extern T0* GE_new203(T1 initialize);
/* New instance of type YY_FILE_BUFFER */
extern T0* GE_new204(T1 initialize);
/* New instance of type YY_BUFFER */
extern T0* GE_new205(T1 initialize);
/* New instance of type DS_HASH_SET [ET_IDENTIFIER] */
extern T0* GE_new206(T1 initialize);
/* New instance of type SPECIAL [detachable ANY] */
extern T0* GE_new209(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ANY] */
extern T0* GE_new210(T1 initialize);
/* New instance of type SPECIAL [ET_IDENTIFIER] */
extern T0* GE_new211(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
extern T0* GE_new212(T1 initialize);
/* New instance of type ET_LACE_CLUSTERS */
extern T0* GE_new213(T1 initialize);
/* New instance of type ET_LACE_CLUSTER */
extern T0* GE_new214(T1 initialize);
/* New instance of type ET_LACE_EXCLUDE */
extern T0* GE_new215(T1 initialize);
/* New instance of type ET_LACE_DOTNET_ASSEMBLY */
extern T0* GE_new216(T1 initialize);
/* New instance of type SPECIAL [ET_LACE_SYSTEM] */
extern T0* GE_new217(T6 a1, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LACE_CLUSTERS] */
extern T0* GE_new218(T6 a1, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
extern T0* GE_new219(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM] */
extern T0* GE_new220(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS] */
extern T0* GE_new221(T1 initialize);
/* New instance of type SPECIAL [ET_LACE_CLUSTER] */
extern T0* GE_new222(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
extern T0* GE_new223(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LACE_EXCLUDE] */
extern T0* GE_new224(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE] */
extern T0* GE_new225(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
extern T0* GE_new226(T1 initialize);
/* New instance of type SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
extern T0* GE_new227(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
extern T0* GE_new228(T1 initialize);
/* New instance of type ET_LACE_DOTNET_GAC_ASSEMBLY */
extern T0* GE_new229(T1 initialize);
/* New instance of type KL_PLATFORM */
extern T0* GE_new230(T1 initialize);
/* New instance of type KL_INTEGER_ROUTINES */
extern T0* GE_new231(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
extern T0* GE_new232(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
extern T0* GE_new233(T1 initialize);
/* New instance of type [attached] TUPLE [ET_CLASS] */
extern T0* GE_new234(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLASS]] */
extern T0* GE_new235(T1 initialize);
/* New instance of type [attached] TUPLE [INTEGER_32] */
extern T0* GE_new236(T1 initialize);
/* New instance of type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
extern T0* GE_new237(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE */
extern T0* GE_new238(T1 initialize);
/* New instance of type DT_SHARED_SYSTEM_CLOCK */
extern T0* GE_new239(T1 initialize);
/* New instance of type DT_DATE_TIME */
extern T0* GE_new240(T1 initialize);
/* New instance of type DT_SYSTEM_CLOCK */
extern T0* GE_new241(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DYNAMIC_SYSTEM] */
extern T0* GE_new242(T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE */
extern T0* GE_new247(T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_LIST */
extern T0* GE_new251(T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION */
extern T0* GE_new259(T1 initialize);
/* New instance of type ET_TUPLE_TYPE */
extern T0* GE_new260(T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT_LIST */
extern T0* GE_new261(T1 initialize);
/* New instance of type SPECIAL [ET_TYPE] */
extern T0* GE_new262(T6 a1, T1 initialize);
/* New instance of type detachable ARRAY [ET_TYPE] */
extern T0* GE_new263(T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT */
extern T0* GE_new264(T1 initialize);
/* New instance of type ET_QUERY_LIST */
extern T0* GE_new265(T1 initialize);
/* New instance of type ET_PROCEDURE_LIST */
extern T0* GE_new266(T1 initialize);
/* New instance of type KL_NULL_TEXT_OUTPUT_STREAM */
extern T0* GE_new267(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_SET_LIST */
extern T0* GE_new268(T1 initialize);
/* New instance of type KL_STRING_OUTPUT_STREAM */
extern T0* GE_new269(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_IDENTIFIER] */
extern T0* GE_new270(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [INTEGER_32] */
extern T0* GE_new271(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_HASH_LIST */
extern T0* GE_new272(T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET */
extern T0* GE_new273(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_EXPRESSION] */
extern T0* GE_new274(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_EXPRESSION] */
extern T0* GE_new275(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
extern T0* GE_new276(T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
extern T0* GE_new277(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_TYPE] */
extern T0* GE_new278(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new279(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_OBJECT_TEST] */
extern T0* GE_new280(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new281(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new282(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_AGENT] */
extern T0* GE_new283(T1 initialize);
/* New instance of type ET_EXPRESSION */
extern T0* GE_new284(T1 initialize);
/* New instance of type ET_CURRENT */
extern T0* GE_new285(T1 initialize);
/* New instance of type ET_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new286(T1 initialize);
/* New instance of type ET_QUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new287(T1 initialize);
/* New instance of type ET_QUALIFIED_CALL_EXPRESSION */
extern T0* GE_new290(T1 initialize);
/* New instance of type ET_UNQUALIFIED_CALL_EXPRESSION */
extern T0* GE_new291(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new292(T1 initialize);
/* New instance of type ET_MANIFEST_TUPLE */
extern T0* GE_new293(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new294(T1 initialize);
/* New instance of type DS_HASH_SET [ET_FEATURE] */
extern T0* GE_new295(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
extern T0* GE_new296(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
extern T0* GE_new297(T1 initialize);
/* New instance of type DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
extern T0* GE_new298(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
extern T0* GE_new299(T1 initialize);
/* New instance of type DS_HASH_TABLE [BOOLEAN, STRING_8] */
extern T0* GE_new300(T1 initialize);
/* New instance of type ET_IDENTIFIER_TESTER */
extern T0* GE_new301(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [ET_IDENTIFIER] */
extern T0* GE_new302(T1 initialize);
/* New instance of type RX_PCRE_REGULAR_EXPRESSION */
extern T0* GE_new303(T1 initialize);
/* New instance of type KL_TEXT_OUTPUT_FILE */
extern T0* GE_new304(T1 initialize);
/* New instance of type ET_DYNAMIC_TUPLE_TYPE */
extern T0* GE_new305(T1 initialize);
/* New instance of type UT_TEMPLATE_EXPANDER */
extern T0* GE_new306(T1 initialize);
/* New instance of type UT_CANNOT_WRITE_TO_FILE_ERROR */
extern T0* GE_new307(T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE_LIST */
extern T0* GE_new308(T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR */
extern T0* GE_new309(T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR_LIST */
extern T0* GE_new310(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
extern T0* GE_new311(T1 initialize);
/* New instance of type ET_RESULT */
extern T0* GE_new312(T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
extern T0* GE_new313(T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
extern T0* GE_new317(T1 initialize);
/* New instance of type ET_OBJECT_TEST */
extern T0* GE_new319(T1 initialize);
/* New instance of type ET_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new320(T1 initialize);
/* New instance of type ET_EQUALITY_EXPRESSION */
extern T0* GE_new321(T1 initialize);
/* New instance of type ET_DYNAMIC_SPECIAL_TYPE */
extern T0* GE_new322(T1 initialize);
/* New instance of type ET_CREATE_EXPRESSION */
extern T0* GE_new325(T1 initialize);
/* New instance of type ET_QUALIFIED_CALL */
extern T0* GE_new326(T1 initialize);
/* New instance of type KL_DIRECTORY */
extern T0* GE_new329(T1 initialize);
/* New instance of type ET_EXTENDED_ATTRIBUTE */
extern T0* GE_new330(T1 initialize);
/* New instance of type ET_COMPOUND */
extern T0* GE_new331(T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE_LIST */
extern T0* GE_new332(T1 initialize);
/* New instance of type ET_DYNAMIC_FUNCTION_TYPE */
extern T0* GE_new333(T1 initialize);
/* New instance of type ET_DYNAMIC_PROCEDURE_TYPE */
extern T0* GE_new334(T1 initialize);
/* New instance of type DS_QUICK_SORTER [INTEGER_32] */
extern T0* GE_new338(T1 initialize);
/* New instance of type ET_IMPLICIT_TYPE_MARK */
extern T0* GE_new344(T1 initialize);
/* New instance of type ET_SYMBOL */
extern T0* GE_new345(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE] */
extern T0* GE_new346(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new347(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new348(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new350(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new351(T1 initialize);
/* New instance of type UT_INTEGER_FORMATTER */
extern T0* GE_new352(T1 initialize);
/* New instance of type STD_FILES */
extern T0* GE_new356(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new358(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
extern T0* GE_new360(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new361(T1 initialize);
/* New instance of type ET_CONSTANT_ATTRIBUTE */
extern T0* GE_new362(T1 initialize);
/* New instance of type ET_UNIQUE_ATTRIBUTE */
extern T0* GE_new364(T1 initialize);
/* New instance of type ET_ATTRIBUTE */
extern T0* GE_new365(T1 initialize);
/* New instance of type NATIVE_STRING */
extern T0* GE_new367(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [STRING_8] */
extern T0* GE_new368(T1 initialize);
/* New instance of type ET_FEATURE_CHECKER */
extern T0* GE_new369(T1 initialize);
/* New instance of type DS_CELL [INTEGER_32] */
extern T0* GE_new370(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
extern T0* GE_new371(T1 initialize);
/* New instance of type ET_TYPE_CHECKER */
extern T0* GE_new372(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
extern T0* GE_new374(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new375(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new376(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new377(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new378(T1 initialize);
/* New instance of type ET_NESTED_TYPE_CONTEXT */
extern T0* GE_new379(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
extern T0* GE_new380(T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE */
extern T0* GE_new381(T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE_BUILDER */
extern T0* GE_new382(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
extern T0* GE_new383(T1 initialize);
/* New instance of type ET_ACROSS_CURSOR_SCOPE */
extern T0* GE_new384(T1 initialize);
/* New instance of type ET_ATTACHMENT_SCOPE */
extern T0* GE_new385(T1 initialize);
/* New instance of type ET_ATTACHMENT_SCOPE_BUILDER */
extern T0* GE_new386(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new387(T1 initialize);
/* New instance of type ET_PRECONDITIONS */
extern T0* GE_new388(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE] */
extern T0* GE_new389(T1 initialize);
/* New instance of type ET_FEATURE_LIST */
extern T0* GE_new391(T1 initialize);
/* New instance of type ET_UNKNOWN_GROUP */
extern T0* GE_new393(T1 initialize);
/* New instance of type ET_BASE_TYPE_LIST */
extern T0* GE_new395(T1 initialize);
/* New instance of type ET_KEYWORD */
extern T0* GE_new396(T1 initialize);
/* New instance of type ET_CLASS_CODES */
extern T0* GE_new397(T1 initialize);
/* New instance of type ARGUMENTS_32 */
extern T0* GE_new399(T1 initialize);
/* New instance of type IMMUTABLE_STRING_32 */
extern T0* GE_new400(T1 initialize);
/* New instance of type ET_AST_FACTORY */
extern T0* GE_new402(T1 initialize);
/* New instance of type ET_XACE_EXTERNALS */
extern T0* GE_new403(T1 initialize);
/* New instance of type ET_XACE_OPTIONS */
extern T0* GE_new404(T1 initialize);
/* New instance of type XM_ATTRIBUTE */
extern T0* GE_new405(T1 initialize);
/* New instance of type ET_XACE_OPTION_NAMES */
extern T0* GE_new408(T1 initialize);
/* New instance of type ET_XACE_CLUSTER */
extern T0* GE_new410(T1 initialize);
/* New instance of type ET_XACE_CLUSTERS */
extern T0* GE_new411(T1 initialize);
/* New instance of type ET_XACE_MOUNTED_LIBRARY */
extern T0* GE_new412(T1 initialize);
/* New instance of type ET_XACE_MOUNTED_LIBRARIES */
extern T0* GE_new413(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new414(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
extern T0* GE_new416(T1 initialize);
/* New instance of type ET_XACE_LIBRARY_CONFIG */
extern T0* GE_new418(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, STRING_8] */
extern T0* GE_new419(T1 initialize);
/* New instance of type ET_XACE_CLASS_OPTIONS */
extern T0* GE_new421(T1 initialize);
/* New instance of type ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
extern T0* GE_new422(T1 initialize);
/* New instance of type ET_XACE_BOOLEAN_EXPECTED_ERROR */
extern T0* GE_new423(T1 initialize);
/* New instance of type ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
extern T0* GE_new424(T1 initialize);
/* New instance of type ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
extern T0* GE_new425(T1 initialize);
/* New instance of type ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
extern T0* GE_new426(T1 initialize);
/* New instance of type ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
extern T0* GE_new427(T1 initialize);
/* New instance of type ET_AST_NULL_PROCESSOR */
extern T0* GE_new429(T1 initialize);
/* New instance of type [attached] TUPLE [ET_UNIVERSE] */
extern T0* GE_new430(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_UNIVERSE]] */
extern T0* GE_new431(T1 initialize);
/* New instance of type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]]] */
extern T0* GE_new432(T1 initialize);
/* New instance of type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
extern T0* GE_new434(T1 initialize);
/* New instance of type DT_DATE_TIME_DURATION */
extern T0* GE_new435(T1 initialize);
/* New instance of type ET_IMPLEMENTATION_CHECKER */
extern T0* GE_new436(T1 initialize);
/* New instance of type ET_EIFFEL_PREPARSER */
extern T0* GE_new437(T1 initialize);
/* New instance of type ET_MASTER_CLASS_CHECKER */
extern T0* GE_new438(T1 initialize);
/* New instance of type ET_EIFFEL_PARSER */
extern T0* GE_new439(T1 initialize);
/* New instance of type ET_PROVIDER_CHECKER */
extern T0* GE_new440(T1 initialize);
/* New instance of type ET_ANCESTOR_BUILDER */
extern T0* GE_new441(T1 initialize);
/* New instance of type ET_FEATURE_FLATTENER */
extern T0* GE_new442(T1 initialize);
/* New instance of type ET_INTERFACE_CHECKER */
extern T0* GE_new443(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new445(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLIES */
extern T0* GE_new446(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY */
extern T0* GE_new447(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new448(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new449(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new450(T1 initialize);
/* New instance of type [attached] TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new451(T1 initialize);
/* New instance of type [attached] TUPLE [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new452(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new453(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]]] */
extern T0* GE_new454(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DOTNET_ASSEMBLIES] */
extern T0* GE_new456(T1 initialize);
/* New instance of type ET_LIBRARY */
extern T0* GE_new459(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LIBRARY] */
extern T0* GE_new460(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_LIBRARY]] */
extern T0* GE_new461(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [STRING_8] */
extern T0* GE_new462(T1 initialize);
/* New instance of type ET_CLASS_NAME_TESTER */
extern T0* GE_new464(T1 initialize);
/* New instance of type ET_PARENT */
extern T0* GE_new466(T1 initialize);
/* New instance of type ET_PARENT_LIST */
extern T0* GE_new467(T1 initialize);
/* New instance of type ET_CLIENT_LIST */
extern T0* GE_new468(T1 initialize);
/* New instance of type ET_BUILTIN_CONVERT_FEATURE */
extern T0* GE_new469(T1 initialize);
/* New instance of type ET_MASTER_CLASS */
extern T0* GE_new470(T1 initialize);
/* New instance of type DS_HASH_SET [ET_UNIVERSE] */
extern T0* GE_new471(T1 initialize);
/* New instance of type [attached] TUPLE [ET_AST_PROCESSOR] */
extern T0* GE_new472(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_CLASS]] */
extern T0* GE_new473(T1 initialize);
/* New instance of type [attached] TUPLE [ET_MASTER_CLASS] */
extern T0* GE_new475(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_MASTER_CLASS]] */
extern T0* GE_new476(T1 initialize);
/* New instance of type [attached] TUPLE [ET_CLUSTER] */
extern T0* GE_new478(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLUSTER]] */
extern T0* GE_new479(T1 initialize);
/* New instance of type [attached] TUPLE [ET_XACE_SYSTEM] */
extern T0* GE_new480(T1 initialize);
/* New instance of type DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new482(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new484(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
extern T0* GE_new485(T1 initialize);
/* New instance of type ET_ANCESTORS_STATUS_CHECKER */
extern T0* GE_new487(T1 initialize);
/* New instance of type ET_FLATTENING_STATUS_CHECKER */
extern T0* GE_new488(T1 initialize);
/* New instance of type ET_INTERFACE_STATUS_CHECKER */
extern T0* GE_new489(T1 initialize);
/* New instance of type ET_IMPLEMENTATION_STATUS_CHECKER */
extern T0* GE_new490(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLASS]]] */
extern T0* GE_new491(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
extern T0* GE_new492(T1 initialize);
/* New instance of type [attached] TUPLE [ET_FLATTENING_STATUS_CHECKER] */
extern T0* GE_new493(T1 initialize);
/* New instance of type [attached] TUPLE [ET_INTERFACE_STATUS_CHECKER] */
extern T0* GE_new494(T1 initialize);
/* New instance of type [attached] TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
extern T0* GE_new495(T1 initialize);
/* New instance of type [attached] TUPLE [BOOLEAN] */
extern T0* GE_new496(T1 initialize);
/* New instance of type ET_CLIENT */
extern T0* GE_new497(T1 initialize);
/* New instance of type ET_RENAME_LIST */
extern T0* GE_new498(T1 initialize);
/* New instance of type ET_EXPORT_LIST */
extern T0* GE_new499(T1 initialize);
/* New instance of type ET_KEYWORD_FEATURE_NAME_LIST */
extern T0* GE_new500(T1 initialize);
/* New instance of type ET_LIKE_CURRENT */
extern T0* GE_new503(T1 initialize);
/* New instance of type ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new504(T1 initialize);
/* New instance of type ET_NONE_GROUP */
extern T0* GE_new505(T1 initialize);
/* New instance of type [attached] TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
extern T0* GE_new506(T1 initialize);
/* New instance of type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]], FUNCTION [ANY, TUPLE [ET_CLASS], BOOLEAN]] */
extern T0* GE_new507(T1 initialize);
/* New instance of type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]], FUNCTION [ANY, TUPLE [ET_CLASS], BOOLEAN], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
extern T0* GE_new508(T1 initialize);
/* New instance of type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]]] */
extern T0* GE_new509(T1 initialize);
/* New instance of type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
extern T0* GE_new510(T1 initialize);
/* New instance of type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLUSTER]]] */
extern T0* GE_new513(T1 initialize);
/* New instance of type [attached] TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new517(T1 initialize);
/* New instance of type XM_NAMESPACE */
extern T0* GE_new520(T1 initialize);
/* New instance of type ARRAY [INTEGER_32] */
extern T0* GE_new521(T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [INTEGER_32] */
extern T0* GE_new522(T1 initialize);
/* New instance of type UT_CONFIG_PARSER */
extern T0* GE_new523(T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
extern T0* GE_new524(T1 initialize);
/* New instance of type ET_DO_PROCEDURE */
extern T0* GE_new527(T1 initialize);
/* New instance of type ET_SYSTEM_ERROR */
extern T0* GE_new529(T1 initialize);
/* New instance of type ET_INTERNAL_ERROR */
extern T0* GE_new530(T1 initialize);
/* New instance of type ET_VALIDITY_ERROR */
extern T0* GE_new531(T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET */
extern T0* GE_new532(T1 initialize);
/* New instance of type ET_DEFERRED_PROCEDURE */
extern T0* GE_new533(T1 initialize);
/* New instance of type CELL [INTEGER_32] */
extern T0* GE_new535(T1 initialize);
/* New instance of type C_STRING */
extern T0* GE_new536(T1 initialize);
/* New instance of type KL_PATHNAME */
extern T0* GE_new538(T1 initialize);
/* New instance of type PLATFORM */
extern T0* GE_new539(T1 initialize);
/* New instance of type READABLE_STRING_32 */
extern T0* GE_new540(T1 initialize);
/* New instance of type SPECIAL [NATURAL_8] */
extern T0* GE_new541(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
extern T0* GE_new543(T1 initialize);
/* New instance of type SPECIAL [AP_OPTION] */
extern T0* GE_new545(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [AP_OPTION] */
extern T0* GE_new546(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new547(T1 initialize);
/* New instance of type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new548(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new549(T1 initialize);
/* New instance of type detachable DS_LINKABLE [STRING_8] */
extern T0* GE_new550(T1 initialize);
/* New instance of type detachable DS_LINKABLE [BOOLEAN] */
extern T0* GE_new551(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [BOOLEAN] */
extern T0* GE_new552(T1 initialize);
/* New instance of type detachable DS_LINKABLE [INTEGER_32] */
extern T0* GE_new553(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [INTEGER_32] */
extern T0* GE_new554(T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER */
extern T0* GE_new555(T1 initialize);
/* New instance of type SPECIAL [XM_CALLBACKS_FILTER] */
extern T0* GE_new556(T6 a1, T1 initialize);
/* New instance of type ARRAY [XM_CALLBACKS_FILTER] */
extern T0* GE_new557(T1 initialize);
/* New instance of type XM_CALLBACKS_NULL */
extern T0* GE_new558(T1 initialize);
/* New instance of type DS_HASH_SET [XM_NAMESPACE] */
extern T0* GE_new559(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8] */
extern T0* GE_new565(T1 initialize);
/* New instance of type SPECIAL [ET_XACE_LIBRARY_CONFIG] */
extern T0* GE_new566(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG] */
extern T0* GE_new567(T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER */
extern T0* GE_new568(T1 initialize);
/* New instance of type XM_DEFAULT_POSITION */
extern T0* GE_new569(T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_POSITION] */
extern T0* GE_new571(T1 initialize);
/* New instance of type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
extern T0* GE_new572(T1 initialize);
/* New instance of type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
extern T0* GE_new573(T1 initialize);
/* New instance of type XM_NULL_EXTERNAL_RESOLVER */
extern T0* GE_new575(T1 initialize);
/* New instance of type XM_DTD_CALLBACKS_NULL */
extern T0* GE_new577(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new578(T1 initialize);
/* New instance of type XM_EIFFEL_PARSER_NAME */
extern T0* GE_new579(T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new580(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new581(T1 initialize);
/* New instance of type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new582(T1 initialize);
/* New instance of type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new583(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
extern T0* GE_new584(T1 initialize);
/* New instance of type XM_DTD_EXTERNAL_ID */
extern T0* GE_new585(T1 initialize);
/* New instance of type SPECIAL [XM_DTD_EXTERNAL_ID] */
extern T0* GE_new586(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new587(T1 initialize);
/* New instance of type XM_DTD_ELEMENT_CONTENT */
extern T0* GE_new588(T1 initialize);
/* New instance of type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new589(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new590(T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new591(T1 initialize);
/* New instance of type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new592(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new593(T1 initialize);
/* New instance of type XM_DTD_ATTRIBUTE_CONTENT */
extern T0* GE_new594(T1 initialize);
/* New instance of type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new595(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
extern T0* GE_new596(T1 initialize);
/* New instance of type DS_BILINKED_LIST [STRING_8] */
extern T0* GE_new597(T1 initialize);
/* New instance of type SPECIAL [DS_BILINKED_LIST [STRING_8]] */
extern T0* GE_new598(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [BOOLEAN] */
extern T0* GE_new599(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
extern T0* GE_new600(T1 initialize);
/* New instance of type XM_EIFFEL_DECLARATION */
extern T0* GE_new601(T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_DECLARATION] */
extern T0* GE_new602(T6 a1, T1 initialize);
/* New instance of type XM_EIFFEL_ENTITY_DEF */
extern T0* GE_new605(T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER_DTD */
extern T0* GE_new606(T1 initialize);
/* New instance of type XM_EIFFEL_PE_ENTITY_DEF */
extern T0* GE_new608(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [INTEGER_32] */
extern T0* GE_new609(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [INTEGER_32] */
extern T0* GE_new610(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
extern T0* GE_new611(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_LIBRARY] */
extern T0* GE_new612(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
extern T0* GE_new615(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new616(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
extern T0* GE_new619(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new620(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_TARGET] */
extern T0* GE_new621(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
extern T0* GE_new622(T1 initialize);
/* New instance of type DS_HASH_SET [ET_LIBRARY] */
extern T0* GE_new623(T1 initialize);
/* New instance of type [attached] TUPLE [DS_HASH_SET [ET_LIBRARY]] */
extern T0* GE_new624(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new625(T1 initialize);
/* New instance of type HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
extern T0* GE_new626(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
extern T0* GE_new628(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
extern T0* GE_new629(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
extern T0* GE_new631(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
extern T0* GE_new634(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
extern T0* GE_new635(T1 initialize);
/* New instance of type SPECIAL [ET_MASTER_CLASS] */
extern T0* GE_new636(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
extern T0* GE_new637(T1 initialize);
/* New instance of type SPECIAL [ET_CLASS_NAME] */
extern T0* GE_new638(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TYPE] */
extern T0* GE_new639(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
extern T0* GE_new640(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
extern T0* GE_new641(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_LIST */
extern T0* GE_new642(T1 initialize);
/* New instance of type C_DATE */
extern T0* GE_new644(T1 initialize);
/* New instance of type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new648(T6 a1, T1 initialize);
/* New instance of type ET_BRACKET_SYMBOL */
extern T0* GE_new649(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new651(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new653(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new654(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
extern T0* GE_new655(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
extern T0* GE_new656(T1 initialize);
/* New instance of type SPECIAL [ET_EXPRESSION] */
extern T0* GE_new658(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
extern T0* GE_new659(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
extern T0* GE_new660(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
extern T0* GE_new662(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new663(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new664(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
extern T0* GE_new665(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new666(T1 initialize);
/* New instance of type SPECIAL [ET_OBJECT_TEST] */
extern T0* GE_new668(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
extern T0* GE_new669(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
extern T0* GE_new670(T1 initialize);
/* New instance of type SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new671(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new672(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new673(T1 initialize);
/* New instance of type SPECIAL [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new674(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new675(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new676(T1 initialize);
/* New instance of type SPECIAL [ET_AGENT] */
extern T0* GE_new677(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT] */
extern T0* GE_new678(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
extern T0* GE_new679(T1 initialize);
/* New instance of type SPECIAL [ET_EXPRESSION_ITEM] */
extern T0* GE_new680(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
extern T0* GE_new682(T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new683(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new684(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new685(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new686(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new687(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new688(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_FEATURE] */
extern T0* GE_new689(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE] */
extern T0* GE_new691(T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE] */
extern T0* GE_new692(T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
extern T0* GE_new693(T1 initialize);
/* New instance of type SPECIAL [ET_CONSTANT] */
extern T0* GE_new694(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
extern T0* GE_new696(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
extern T0* GE_new697(T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_CONSTANT] */
extern T0* GE_new698(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
extern T0* GE_new700(T1 initialize);
/* New instance of type SPECIAL [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new701(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
extern T0* GE_new703(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new704(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
extern T0* GE_new705(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
extern T0* GE_new706(T1 initialize);
/* New instance of type RX_BYTE_CODE */
extern T0* GE_new710(T1 initialize);
/* New instance of type RX_CHARACTER_SET */
extern T0* GE_new711(T1 initialize);
/* New instance of type RX_CASE_MAPPING */
extern T0* GE_new712(T1 initialize);
/* New instance of type SPECIAL [RX_CHARACTER_SET] */
extern T0* GE_new714(T6 a1, T1 initialize);
/* New instance of type ARRAY [RX_CHARACTER_SET] */
extern T0* GE_new715(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new717(T1 initialize);
/* New instance of type ARRAY [BOOLEAN] */
extern T0* GE_new718(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
extern T0* GE_new721(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
extern T0* GE_new724(T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_AGENT] */
extern T0* GE_new726(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
extern T0* GE_new727(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new728(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_PROCEDURE] */
extern T0* GE_new729(T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new730(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new731(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new732(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_QUERY] */
extern T0* GE_new733(T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new734(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new735(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new736(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_FEATURE] */
extern T0* GE_new737(T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new738(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new739(T1 initialize);
/* New instance of type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new740(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new741(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new742(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE] */
extern T0* GE_new743(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
extern T0* GE_new744(T1 initialize);
/* New instance of type ET_NAMED_OBJECT_TEST */
extern T0* GE_new747(T1 initialize);
/* New instance of type SPECIAL [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new748(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new749(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new750(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
extern T0* GE_new751(T1 initialize);
/* New instance of type SPECIAL [ET_ACROSS_COMPONENT] */
extern T0* GE_new754(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT] */
extern T0* GE_new755(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ACROSS_COMPONENT] */
extern T0* GE_new756(T1 initialize);
/* New instance of type SPECIAL [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new758(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new759(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new760(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_PRECONDITIONS, ET_FEATURE] */
extern T0* GE_new761(T1 initialize);
/* New instance of type SPECIAL [ET_PRECONDITIONS] */
extern T0* GE_new762(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
extern T0* GE_new764(T1 initialize);
/* New instance of type DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
extern T0* GE_new765(T1 initialize);
/* New instance of type STRING_TO_INTEGER_CONVERTOR */
extern T0* GE_new766(T1 initialize);
/* New instance of type STRING_8_SEARCHER */
extern T0* GE_new768(T1 initialize);
/* New instance of type detachable ARRAYED_LIST [INTEGER_32] */
extern T0* GE_new769(T1 initialize);
/* New instance of type ET_CLUSTERS */
extern T0* GE_new770(T1 initialize);
/* New instance of type UC_UNICODE_ROUTINES */
extern T0* GE_new771(T1 initialize);
/* New instance of type ET_XACE_FEATURE_OPTIONS */
extern T0* GE_new772(T1 initialize);
/* New instance of type detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new773(T1 initialize);
/* New instance of type ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
extern T0* GE_new774(T1 initialize);
/* New instance of type ET_XACE_MISSING_ATTRIBUTE_ERROR */
extern T0* GE_new775(T1 initialize);
/* New instance of type ET_XACE_UNKNOWN_ELEMENT_ERROR */
extern T0* GE_new776(T1 initialize);
/* New instance of type ET_XACE_MISSING_ELEMENT_ERROR */
extern T0* GE_new777(T1 initialize);
/* New instance of type ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
extern T0* GE_new778(T1 initialize);
/* New instance of type ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
extern T0* GE_new779(T1 initialize);
/* New instance of type ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
extern T0* GE_new780(T1 initialize);
/* New instance of type ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
extern T0* GE_new781(T1 initialize);
/* New instance of type UT_COUNTER */
extern T0* GE_new784(T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ET_CLASS] */
extern T0* GE_new785(T1 initialize);
/* New instance of type [attached] TUPLE [UT_COUNTER] */
extern T0* GE_new786(T1 initialize);
/* New instance of type [attached] TUPLE [KL_AGENT_ROUTINES [ET_CLASS], [attached] PROCEDURE [[attached] NONE, [attached] TUPLE]] */
extern T0* GE_new787(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
extern T0* GE_new788(T1 initialize);
/* New instance of type UT_TRISTATE */
extern T0* GE_new789(T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ANY] */
extern T0* GE_new790(T1 initialize);
/* New instance of type [attached] TUPLE [UT_TRISTATE] */
extern T0* GE_new791(T1 initialize);
/* New instance of type [attached] TUPLE [KL_AGENT_ROUTINES [ANY], [attached] PROCEDURE [[attached] NONE, [attached] TUPLE]] */
extern T0* GE_new792(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_MASTER_CLASS]] */
extern T0* GE_new793(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] NONE, [attached] TUPLE] */
extern T0* GE_new794(T1 initialize);
/* New instance of type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]], FUNCTION [ANY, TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
extern T0* GE_new796(T1 initialize);
/* New instance of type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]], FUNCTION [ANY, TUPLE [ET_MASTER_CLASS], BOOLEAN], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
extern T0* GE_new797(T1 initialize);
/* New instance of type ET_ECF_CLUSTER */
extern T0* GE_new798(T1 initialize);
/* New instance of type ET_ECF_CLUSTERS */
extern T0* GE_new799(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_LIBRARIES */
extern T0* GE_new800(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new801(T1 initialize);
/* New instance of type ET_ECF_FILE_RULE */
extern T0* GE_new802(T1 initialize);
/* New instance of type ET_ECF_FILE_RULES */
extern T0* GE_new803(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_INCLUDE */
extern T0* GE_new804(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_INCLUDES */
extern T0* GE_new805(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_OBJECT */
extern T0* GE_new806(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_OBJECTS */
extern T0* GE_new807(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LIBRARY */
extern T0* GE_new808(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LIBRARIES */
extern T0* GE_new809(T1 initialize);
/* New instance of type ET_ECF_SETTINGS */
extern T0* GE_new811(T1 initialize);
/* New instance of type ET_ECF_OPTIONS */
extern T0* GE_new812(T1 initialize);
/* New instance of type ET_ECF_CONDITIONS */
extern T0* GE_new813(T1 initialize);
/* New instance of type ET_ECF_ROOT_CLASS */
extern T0* GE_new814(T1 initialize);
/* New instance of type ET_ECF_ROOT_ALL_CLASSES */
extern T0* GE_new815(T1 initialize);
/* New instance of type ET_ECF_PLATFORM_CONDITION */
extern T0* GE_new817(T1 initialize);
/* New instance of type ET_ECF_BUILD_CONDITION */
extern T0* GE_new818(T1 initialize);
/* New instance of type ET_ECF_MULTITHREADED_CONDITION */
extern T0* GE_new819(T1 initialize);
/* New instance of type ET_ECF_CONCURRENCY_CONDITION */
extern T0* GE_new820(T1 initialize);
/* New instance of type ET_ECF_DOTNET_CONDITION */
extern T0* GE_new821(T1 initialize);
/* New instance of type ET_ECF_DYNAMIC_RUNTIME_CONDITION */
extern T0* GE_new822(T1 initialize);
/* New instance of type ET_ECF_CUSTOM_CONDITION */
extern T0* GE_new823(T1 initialize);
/* New instance of type ET_ECF_COMPILER_VERSION_CONDITION */
extern T0* GE_new825(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_SYSTEM] */
extern T0* GE_new826(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_SYSTEM] */
extern T0* GE_new827(T1 initialize);
/* New instance of type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
extern T0* GE_new830(T1 initialize);
/* New instance of type ET_REGULAR_MANIFEST_STRING */
extern T0* GE_new831(T1 initialize);
/* New instance of type ET_INFIX_FREE_NAME */
extern T0* GE_new832(T1 initialize);
/* New instance of type ET_CREATOR_LIST */
extern T0* GE_new833(T1 initialize);
/* New instance of type EXCEPTIONS */
extern T0* GE_new835(T1 initialize);
/* New instance of type XM_LINKED_LIST [XM_DOCUMENT_NODE] */
extern T0* GE_new836(T1 initialize);
/* New instance of type XM_LINKED_LIST [XM_ELEMENT_NODE] */
extern T0* GE_new838(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new842(T1 initialize);
/* New instance of type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new843(T1 initialize);
/* New instance of type DS_PAIR [XM_POSITION, XM_NODE] */
extern T0* GE_new844(T1 initialize);
/* New instance of type UC_UTF8_ROUTINES */
extern T0* GE_new845(T1 initialize);
/* New instance of type UC_UTF8_STRING */
extern T0* GE_new846(T1 initialize);
/* New instance of type XM_EIFFEL_INPUT_STREAM */
extern T0* GE_new847(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new851(T1 initialize);
/* New instance of type KL_CHARACTER_BUFFER */
extern T0* GE_new854(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_CLUSTER] */
extern T0* GE_new855(T1 initialize);
/* New instance of type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
extern T0* GE_new856(T1 initialize);
/* New instance of type SPECIAL [ET_QUERY] */
extern T0* GE_new857(T6 a1, T1 initialize);
/* New instance of type ET_ALIAS_NAME */
extern T0* GE_new858(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_QUERY] */
extern T0* GE_new859(T1 initialize);
/* New instance of type SPECIAL [ET_PROCEDURE] */
extern T0* GE_new860(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
extern T0* GE_new861(T1 initialize);
/* New instance of type CONSOLE */
extern T0* GE_new865(T1 initialize);
/* New instance of type ET_LIKE_N */
extern T0* GE_new866(T1 initialize);
/* New instance of type SPECIAL [ET_BASE_TYPE] */
extern T0* GE_new867(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
extern T0* GE_new868(T1 initialize);
/* New instance of type SPECIAL [IMMUTABLE_STRING_32] */
extern T0* GE_new869(T6 a1, T1 initialize);
/* New instance of type ARRAY [IMMUTABLE_STRING_32] */
extern T0* GE_new870(T1 initialize);
/* New instance of type detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new871(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
extern T0* GE_new872(T1 initialize);
/* New instance of type [attached] TUPLE [ET_XACE_CLUSTER] */
extern T0* GE_new873(T1 initialize);
/* New instance of type SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new874(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new875(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new876(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
extern T0* GE_new878(T1 initialize);
/* New instance of type detachable DS_HASH_SET [ET_NAMED_CLASS] */
extern T0* GE_new880(T1 initialize);
/* New instance of type DS_HASH_SET [ET_PROCEDURE] */
extern T0* GE_new881(T1 initialize);
/* New instance of type DS_HASH_SET [ET_QUERY] */
extern T0* GE_new882(T1 initialize);
/* New instance of type ET_SUPPLIER_BUILDER */
extern T0* GE_new883(T1 initialize);
/* New instance of type ET_POSTCONDITIONS */
extern T0* GE_new885(T1 initialize);
/* New instance of type ET_INVARIANTS */
extern T0* GE_new886(T1 initialize);
/* New instance of type KL_STDIN_FILE */
extern T0* GE_new887(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [INTEGER_32] */
extern T0* GE_new889(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new890(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new891(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_KEYWORD] */
extern T0* GE_new892(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_SYMBOL] */
extern T0* GE_new893(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new894(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new895(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
extern T0* GE_new896(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new897(T1 initialize);
/* New instance of type KL_STRING_INPUT_STREAM */
extern T0* GE_new898(T1 initialize);
/* New instance of type ET_TEXT_GROUP */
extern T0* GE_new899(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
extern T0* GE_new900(T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD] */
extern T0* GE_new901(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new902(T1 initialize);
/* New instance of type ET_AGENT_KEYWORD */
extern T0* GE_new903(T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new904(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new905(T1 initialize);
/* New instance of type ET_PRECURSOR_KEYWORD */
extern T0* GE_new906(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new907(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
extern T0* GE_new908(T1 initialize);
/* New instance of type SPECIAL [detachable ET_SYMBOL] */
extern T0* GE_new909(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
extern T0* GE_new910(T1 initialize);
/* New instance of type SPECIAL [detachable ET_POSITION] */
extern T0* GE_new911(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new912(T1 initialize);
/* New instance of type SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new914(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
extern T0* GE_new915(T1 initialize);
/* New instance of type SPECIAL [detachable ET_BREAK] */
extern T0* GE_new917(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new918(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new920(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
extern T0* GE_new921(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CURRENT] */
extern T0* GE_new922(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
extern T0* GE_new923(T1 initialize);
/* New instance of type ET_FREE_OPERATOR */
extern T0* GE_new924(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FREE_OPERATOR] */
extern T0* GE_new925(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new926(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new928(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new929(T1 initialize);
/* New instance of type ET_KEYWORD_OPERATOR */
extern T0* GE_new930(T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new931(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
extern T0* GE_new932(T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING] */
extern T0* GE_new933(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
extern T0* GE_new934(T1 initialize);
/* New instance of type SPECIAL [detachable ET_REAL_CONSTANT] */
extern T0* GE_new936(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
extern T0* GE_new937(T1 initialize);
/* New instance of type SPECIAL [detachable ET_RESULT] */
extern T0* GE_new938(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new939(T1 initialize);
/* New instance of type ET_RETRY_INSTRUCTION */
extern T0* GE_new940(T1 initialize);
/* New instance of type SPECIAL [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new941(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new942(T1 initialize);
/* New instance of type ET_SYMBOL_OPERATOR */
extern T0* GE_new943(T1 initialize);
/* New instance of type SPECIAL [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new944(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_VOID] */
extern T0* GE_new945(T1 initialize);
/* New instance of type ET_VOID */
extern T0* GE_new946(T1 initialize);
/* New instance of type SPECIAL [detachable ET_VOID] */
extern T0* GE_new947(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new948(T1 initialize);
/* New instance of type ET_SEMICOLON_SYMBOL */
extern T0* GE_new949(T1 initialize);
/* New instance of type SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new950(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new951(T1 initialize);
/* New instance of type SPECIAL [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new952(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new953(T1 initialize);
/* New instance of type ET_QUESTION_MARK_SYMBOL */
extern T0* GE_new954(T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new955(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new956(T1 initialize);
/* New instance of type ET_ACROSS_EXPRESSION */
extern T0* GE_new957(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new958(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new959(T1 initialize);
/* New instance of type ET_ACROSS_INSTRUCTION */
extern T0* GE_new960(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new961(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new962(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new963(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new964(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new965(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new966(T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new967(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new968(T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new970(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new971(T1 initialize);
/* New instance of type ET_AGENT_ARGUMENT_OPERAND_LIST */
extern T0* GE_new972(T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new973(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
extern T0* GE_new974(T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_TARGET] */
extern T0* GE_new975(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
extern T0* GE_new976(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ALIAS_NAME] */
extern T0* GE_new977(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
extern T0* GE_new978(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ASSIGNER] */
extern T0* GE_new980(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_ARGUMENT_LIST] */
extern T0* GE_new981(T1 initialize);
/* New instance of type ET_BRACKET_ARGUMENT_LIST */
extern T0* GE_new982(T1 initialize);
/* New instance of type SPECIAL [detachable ET_BRACKET_ARGUMENT_LIST] */
extern T0* GE_new983(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new984(T1 initialize);
/* New instance of type ET_BRACKET_EXPRESSION */
extern T0* GE_new985(T1 initialize);
/* New instance of type SPECIAL [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new986(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
extern T0* GE_new987(T1 initialize);
/* New instance of type ET_CALL_AGENT */
extern T0* GE_new988(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CALL_AGENT] */
extern T0* GE_new989(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new990(T1 initialize);
/* New instance of type ET_CHECK_INSTRUCTION */
extern T0* GE_new991(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new992(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
extern T0* GE_new993(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE] */
extern T0* GE_new995(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new996(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new998(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
extern T0* GE_new999(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_ITEM] */
extern T0* GE_new1001(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
extern T0* GE_new1002(T1 initialize);
/* New instance of type ET_CHOICE_LIST */
extern T0* GE_new1003(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_LIST] */
extern T0* GE_new1004(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
extern T0* GE_new1005(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLASS] */
extern T0* GE_new1006(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
extern T0* GE_new1007(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLIENT_ITEM] */
extern T0* GE_new1008(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
extern T0* GE_new1009(T1 initialize);
/* New instance of type ET_CLIENTS */
extern T0* GE_new1010(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLIENTS] */
extern T0* GE_new1011(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
extern T0* GE_new1012(T1 initialize);
/* New instance of type SPECIAL [detachable ET_COMPOUND] */
extern T0* GE_new1013(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
extern T0* GE_new1014(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONDITIONAL] */
extern T0* GE_new1016(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1017(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1019(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1020(T1 initialize);
/* New instance of type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
extern T0* GE_new1021(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1022(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new1023(T1 initialize);
/* New instance of type ET_CONSTRAINT_CREATOR */
extern T0* GE_new1024(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new1025(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1026(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1028(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new1029(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new1031(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1032(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1034(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new1035(T1 initialize);
/* New instance of type ET_CONVERT_FEATURE_LIST */
extern T0* GE_new1036(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new1037(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new1038(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new1039(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
extern T0* GE_new1040(T1 initialize);
/* New instance of type ET_CREATOR */
extern T0* GE_new1041(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATOR] */
extern T0* GE_new1042(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
extern T0* GE_new1043(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATOR_LIST] */
extern T0* GE_new1044(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new1045(T1 initialize);
/* New instance of type ET_DEBUG_INSTRUCTION */
extern T0* GE_new1046(T1 initialize);
/* New instance of type SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new1047(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
extern T0* GE_new1048(T1 initialize);
/* New instance of type ET_ELSEIF_PART */
extern T0* GE_new1049(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_PART] */
extern T0* GE_new1050(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new1051(T1 initialize);
/* New instance of type ET_ELSEIF_PART_LIST */
extern T0* GE_new1052(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new1053(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
extern T0* GE_new1054(T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPORT] */
extern T0* GE_new1056(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
extern T0* GE_new1057(T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPORT_LIST] */
extern T0* GE_new1058(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new1059(T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new1060(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new1061(T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new1063(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new1064(T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE */
extern T0* GE_new1065(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new1066(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new1067(T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE_LIST */
extern T0* GE_new1068(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new1069(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new1070(T1 initialize);
/* New instance of type ET_FEATURE_EXPORT */
extern T0* GE_new1071(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new1072(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
extern T0* GE_new1073(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_NAME] */
extern T0* GE_new1074(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1075(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1077(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new1078(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new1079(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1080(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1082(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new1083(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new1084(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new1085(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER */
extern T0* GE_new1086(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new1087(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1088(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1090(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new1091(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new1092(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new1093(T1 initialize);
/* New instance of type ET_IF_INSTRUCTION */
extern T0* GE_new1094(T1 initialize);
/* New instance of type SPECIAL [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new1095(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
extern T0* GE_new1096(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INDEXING_LIST] */
extern T0* GE_new1098(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
extern T0* GE_new1099(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INDEXING_ITEM] */
extern T0* GE_new1101(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
extern T0* GE_new1102(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INDEXING_TERM] */
extern T0* GE_new1104(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
extern T0* GE_new1105(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
extern T0* GE_new1107(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
extern T0* GE_new1108(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INDEXING_TERM_LIST] */
extern T0* GE_new1110(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new1111(T1 initialize);
/* New instance of type ET_INSPECT_INSTRUCTION */
extern T0* GE_new1112(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new1113(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
extern T0* GE_new1114(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INSTRUCTION] */
extern T0* GE_new1116(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
extern T0* GE_new1117(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INVARIANTS] */
extern T0* GE_new1118(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new1119(T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new1120(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
extern T0* GE_new1121(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LIKE_TYPE] */
extern T0* GE_new1123(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new1124(T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE */
extern T0* GE_new1125(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new1126(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1127(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1129(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new1130(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new1131(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new1132(T1 initialize);
/* New instance of type ET_LOOP_INVARIANTS */
extern T0* GE_new1133(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new1134(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new1135(T1 initialize);
/* New instance of type ET_MANIFEST_ARRAY */
extern T0* GE_new1136(T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new1137(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1138(T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1140(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new1141(T1 initialize);
/* New instance of type ET_MANIFEST_STRING_LIST */
extern T0* GE_new1142(T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new1143(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new1144(T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new1145(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
extern T0* GE_new1146(T1 initialize);
/* New instance of type SPECIAL [detachable ET_OBSOLETE] */
extern T0* GE_new1148(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new1149(T1 initialize);
/* New instance of type ET_PARENTHESIZED_EXPRESSION */
extern T0* GE_new1150(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new1151(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
extern T0* GE_new1152(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT] */
extern T0* GE_new1153(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
extern T0* GE_new1154(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_ITEM] */
extern T0* GE_new1155(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
extern T0* GE_new1156(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_LIST] */
extern T0* GE_new1157(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
extern T0* GE_new1158(T1 initialize);
/* New instance of type SPECIAL [detachable ET_POSTCONDITIONS] */
extern T0* GE_new1159(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new1160(T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new1162(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
extern T0* GE_new1163(T1 initialize);
/* New instance of type SPECIAL [detachable ET_RENAME_ITEM] */
extern T0* GE_new1165(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
extern T0* GE_new1166(T1 initialize);
/* New instance of type SPECIAL [detachable ET_RENAME_LIST] */
extern T0* GE_new1167(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new1168(T1 initialize);
/* New instance of type ET_STATIC_CALL_EXPRESSION */
extern T0* GE_new1169(T1 initialize);
/* New instance of type SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new1170(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new1171(T1 initialize);
/* New instance of type ET_STRIP_EXPRESSION */
extern T0* GE_new1172(T1 initialize);
/* New instance of type SPECIAL [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new1173(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
extern T0* GE_new1174(T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_ITEM] */
extern T0* GE_new1176(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
extern T0* GE_new1177(T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_LIST] */
extern T0* GE_new1179(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
extern T0* GE_new1180(T1 initialize);
/* New instance of type ET_VARIANT */
extern T0* GE_new1181(T1 initialize);
/* New instance of type SPECIAL [detachable ET_VARIANT] */
extern T0* GE_new1182(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
extern T0* GE_new1183(T1 initialize);
/* New instance of type ET_WHEN_PART */
extern T0* GE_new1184(T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_PART] */
extern T0* GE_new1185(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new1186(T1 initialize);
/* New instance of type ET_WHEN_PART_LIST */
extern T0* GE_new1187(T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new1188(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
extern T0* GE_new1189(T1 initialize);
/* New instance of type SPECIAL [detachable ET_WRITABLE] */
extern T0* GE_new1190(T6 a1, T1 initialize);
/* New instance of type ET_OBJECT_TEST_LIST */
extern T0* GE_new1193(T1 initialize);
/* New instance of type ET_ACROSS_COMPONENT_LIST */
extern T0* GE_new1194(T1 initialize);
/* New instance of type ET_C3_CHARACTER_CONSTANT */
extern T0* GE_new1195(T1 initialize);
/* New instance of type ET_VERBATIM_STRING */
extern T0* GE_new1196(T1 initialize);
/* New instance of type ET_SPECIAL_MANIFEST_STRING */
extern T0* GE_new1197(T1 initialize);
/* New instance of type ET_REGULAR_INTEGER_CONSTANT */
extern T0* GE_new1198(T1 initialize);
/* New instance of type ET_UNDERSCORED_INTEGER_CONSTANT */
extern T0* GE_new1199(T1 initialize);
/* New instance of type ET_HEXADECIMAL_INTEGER_CONSTANT */
extern T0* GE_new1200(T1 initialize);
/* New instance of type ET_OCTAL_INTEGER_CONSTANT */
extern T0* GE_new1201(T1 initialize);
/* New instance of type ET_BINARY_INTEGER_CONSTANT */
extern T0* GE_new1202(T1 initialize);
/* New instance of type ET_REGULAR_REAL_CONSTANT */
extern T0* GE_new1203(T1 initialize);
/* New instance of type ET_UNDERSCORED_REAL_CONSTANT */
extern T0* GE_new1204(T1 initialize);
/* New instance of type ET_TRUE_CONSTANT */
extern T0* GE_new1206(T1 initialize);
/* New instance of type ET_FALSE_CONSTANT */
extern T0* GE_new1207(T1 initialize);
/* New instance of type ET_C1_CHARACTER_CONSTANT */
extern T0* GE_new1208(T1 initialize);
/* New instance of type ET_C2_CHARACTER_CONSTANT */
extern T0* GE_new1209(T1 initialize);
/* New instance of type ET_CUSTOM_ATTRIBUTE */
extern T0* GE_new1213(T1 initialize);
/* New instance of type ET_CONSTRAINED_FORMAL_PARAMETER */
extern T0* GE_new1214(T1 initialize);
/* New instance of type ET_CONSTRAINT_NAMED_TYPE */
extern T0* GE_new1215(T1 initialize);
/* New instance of type ET_ATTACHMENT_SEPARATE_KEYWORDS */
extern T0* GE_new1216(T1 initialize);
/* New instance of type ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD */
extern T0* GE_new1217(T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new1218(T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new1219(T1 initialize);
/* New instance of type ET_RENAME */
extern T0* GE_new1220(T1 initialize);
/* New instance of type ET_ALL_EXPORT */
extern T0* GE_new1221(T1 initialize);
/* New instance of type ET_CONVERT_FUNCTION */
extern T0* GE_new1223(T1 initialize);
/* New instance of type ET_CONVERT_PROCEDURE */
extern T0* GE_new1224(T1 initialize);
/* New instance of type ET_DO_FUNCTION */
extern T0* GE_new1226(T1 initialize);
/* New instance of type ET_ONCE_FUNCTION */
extern T0* GE_new1227(T1 initialize);
/* New instance of type ET_DEFERRED_FUNCTION */
extern T0* GE_new1228(T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE */
extern T0* GE_new1230(T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE */
extern T0* GE_new1231(T1 initialize);
/* New instance of type ET_PREFIX_NAME */
extern T0* GE_new1232(T1 initialize);
/* New instance of type ET_PREFIX_FREE_NAME */
extern T0* GE_new1233(T1 initialize);
/* New instance of type ET_INFIX_NAME */
extern T0* GE_new1234(T1 initialize);
/* New instance of type ET_ALIASED_FEATURE_NAME */
extern T0* GE_new1235(T1 initialize);
/* New instance of type ET_ALIAS_FREE_NAME */
extern T0* GE_new1236(T1 initialize);
/* New instance of type ET_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new1239(T1 initialize);
/* New instance of type ET_LIKE_FEATURE */
extern T0* GE_new1241(T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_BRACED_TYPE */
extern T0* GE_new1242(T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_TYPE */
extern T0* GE_new1243(T1 initialize);
/* New instance of type ET_ASSIGNER_INSTRUCTION */
extern T0* GE_new1244(T1 initialize);
/* New instance of type ET_ASSIGNMENT */
extern T0* GE_new1245(T1 initialize);
/* New instance of type ET_ASSIGNMENT_ATTEMPT */
extern T0* GE_new1246(T1 initialize);
/* New instance of type ET_LOOP_INSTRUCTION */
extern T0* GE_new1247(T1 initialize);
/* New instance of type ET_NULL_INSTRUCTION */
extern T0* GE_new1248(T1 initialize);
/* New instance of type ET_BANG_INSTRUCTION */
extern T0* GE_new1249(T1 initialize);
/* New instance of type ET_CREATE_INSTRUCTION */
extern T0* GE_new1250(T1 initialize);
/* New instance of type ET_CHOICE_RANGE */
extern T0* GE_new1251(T1 initialize);
/* New instance of type ET_PRECURSOR_INSTRUCTION */
extern T0* GE_new1252(T1 initialize);
/* New instance of type ET_STATIC_CALL_INSTRUCTION */
extern T0* GE_new1254(T1 initialize);
/* New instance of type ET_PRECURSOR_EXPRESSION */
extern T0* GE_new1255(T1 initialize);
/* New instance of type ET_FEATURE_ADDRESS */
extern T0* GE_new1256(T1 initialize);
/* New instance of type ET_CURRENT_ADDRESS */
extern T0* GE_new1257(T1 initialize);
/* New instance of type ET_RESULT_ADDRESS */
extern T0* GE_new1258(T1 initialize);
/* New instance of type ET_EXPRESSION_ADDRESS */
extern T0* GE_new1259(T1 initialize);
/* New instance of type ET_INFIX_EXPRESSION */
extern T0* GE_new1260(T1 initialize);
/* New instance of type ET_INFIX_AND_THEN_OPERATOR */
extern T0* GE_new1261(T1 initialize);
/* New instance of type ET_INFIX_OR_ELSE_OPERATOR */
extern T0* GE_new1262(T1 initialize);
/* New instance of type ET_MANIFEST_TYPE */
extern T0* GE_new1263(T1 initialize);
/* New instance of type ET_PREFIX_EXPRESSION */
extern T0* GE_new1264(T1 initialize);
/* New instance of type ET_OLD_EXPRESSION */
extern T0* GE_new1265(T1 initialize);
/* New instance of type ET_OLD_OBJECT_TEST */
extern T0* GE_new1266(T1 initialize);
/* New instance of type ET_ONCE_MANIFEST_STRING */
extern T0* GE_new1267(T1 initialize);
/* New instance of type ET_DO_FUNCTION_INLINE_AGENT */
extern T0* GE_new1268(T1 initialize);
/* New instance of type ET_ONCE_FUNCTION_INLINE_AGENT */
extern T0* GE_new1269(T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
extern T0* GE_new1270(T1 initialize);
/* New instance of type ET_DO_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1271(T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1272(T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1273(T1 initialize);
/* New instance of type ET_AGENT_OPEN_TARGET */
extern T0* GE_new1274(T1 initialize);
/* New instance of type ET_AGENT_TYPED_OPEN_ARGUMENT */
extern T0* GE_new1275(T1 initialize);
/* New instance of type ET_TAGGED_ASSERTION */
extern T0* GE_new1277(T1 initialize);
/* New instance of type ET_FILE_POSITION */
extern T0* GE_new1278(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
extern T0* GE_new1279(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new1280(T1 initialize);
/* New instance of type ET_PARENT_CHECKER1 */
extern T0* GE_new1281(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER1 */
extern T0* GE_new1282(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new1283(T1 initialize);
/* New instance of type ET_FEATURE_NAME_TESTER */
extern T0* GE_new1284(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new1286(T1 initialize);
/* New instance of type ET_ALIAS_NAME_TESTER */
extern T0* GE_new1287(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLIENT_LIST] */
extern T0* GE_new1289(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1290(T1 initialize);
/* New instance of type ET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1291(T1 initialize);
/* New instance of type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1292(T1 initialize);
/* New instance of type ET_IDENTIFIER_TYPE_RESOLVER */
extern T0* GE_new1293(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
extern T0* GE_new1294(T1 initialize);
/* New instance of type ET_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1295(T1 initialize);
/* New instance of type ET_SIGNATURE_CHECKER */
extern T0* GE_new1296(T1 initialize);
/* New instance of type ET_PARENT_CHECKER2 */
extern T0* GE_new1297(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER2 */
extern T0* GE_new1298(T1 initialize);
/* New instance of type ET_BUILTIN_FEATURE_CHECKER */
extern T0* GE_new1299(T1 initialize);
/* New instance of type ET_PRECURSOR_CHECKER */
extern T0* GE_new1300(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
extern T0* GE_new1301(T1 initialize);
/* New instance of type DS_HASH_SET [ET_CLASS] */
extern T0* GE_new1302(T1 initialize);
/* New instance of type ET_PARENT_CHECKER3 */
extern T0* GE_new1303(T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1304(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
extern T0* GE_new1305(T1 initialize);
/* New instance of type ET_PARENT_FEATURE */
extern T0* GE_new1307(T1 initialize);
/* New instance of type ET_INHERITED_FEATURE */
extern T0* GE_new1308(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1309(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1310(T1 initialize);
/* New instance of type SPECIAL [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1311(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1313(T1 initialize);
/* New instance of type ET_BRACED_TYPE_LIST */
extern T0* GE_new1315(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLASS] */
extern T0* GE_new1316(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_MASTER_CLASS] */
extern T0* GE_new1317(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_UNIVERSE] */
extern T0* GE_new1318(T1 initialize);
/* New instance of type SPECIAL [ET_UNIVERSE] */
extern T0* GE_new1319(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
extern T0* GE_new1321(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1322(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1324(T1 initialize);
/* New instance of type SPECIAL [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1325(T6 a1, T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER1 */
extern T0* GE_new1326(T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER2 */
extern T0* GE_new1327(T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
extern T0* GE_new1328(T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER3 */
extern T0* GE_new1329(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
extern T0* GE_new1330(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [YY_BUFFER] */
extern T0* GE_new1331(T1 initialize);
/* New instance of type UT_SYNTAX_ERROR */
extern T0* GE_new1332(T1 initialize);
/* New instance of type UT_TOO_MANY_INCLUDES_ERROR */
extern T0* GE_new1333(T1 initialize);
/* New instance of type ET_DYNAMIC_TARGET_LIST */
extern T0* GE_new1335(T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER_CONTEXT */
extern T0* GE_new1336(T1 initialize);
/* New instance of type DS_LINKED_QUEUE [STRING_8] */
extern T0* GE_new1338(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [XM_NAMESPACE] */
extern T0* GE_new1339(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
extern T0* GE_new1340(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
extern T0* GE_new1341(T1 initialize);
/* New instance of type SPECIAL [XM_NAMESPACE] */
extern T0* GE_new1342(T6 a1, T1 initialize);
/* New instance of type XM_EIFFEL_CHARACTER_ENTITY */
extern T0* GE_new1343(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [XM_POSITION] */
extern T0* GE_new1344(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
extern T0* GE_new1345(T1 initialize);
/* New instance of type detachable DS_LINKABLE [XM_EIFFEL_SCANNER] */
extern T0* GE_new1346(T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1347(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
extern T0* GE_new1350(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1351(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1352(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1353(T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1354(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1355(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1356(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [STRING_8] */
extern T0* GE_new1357(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [STRING_8] */
extern T0* GE_new1358(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_TARGET] */
extern T0* GE_new1359(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
extern T0* GE_new1360(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
extern T0* GE_new1361(T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1362(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1363(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1364(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_LIBRARY] */
extern T0* GE_new1365(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIBRARY] */
extern T0* GE_new1366(T1 initialize);
/* New instance of type SPECIAL [ET_LIBRARY] */
extern T0* GE_new1367(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1368(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1369(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1370(T1 initialize);
/* New instance of type SPECIAL [NATIVE_STRING] */
extern T0* GE_new1371(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
extern T0* GE_new1372(T1 initialize);
/* New instance of type SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1373(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1374(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1375(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
extern T0* GE_new1377(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
extern T0* GE_new1378(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1379(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT] */
extern T0* GE_new1380(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [NATURAL_8] */
extern T0* GE_new1383(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
extern T0* GE_new1384(T1 initialize);
/* New instance of type ET_XACE_INVALID_EXPRESSION_ERROR */
extern T0* GE_new1386(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
extern T0* GE_new1389(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
extern T0* GE_new1390(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1391(T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ET_UNIVERSE] */
extern T0* GE_new1392(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_UNIVERSE]] */
extern T0* GE_new1393(T1 initialize);
/* New instance of type [attached] TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
extern T0* GE_new1394(T1 initialize);
/* New instance of type [attached] TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_UNIVERSE]]] */
extern T0* GE_new1395(T1 initialize);
/* New instance of type KL_AGENT_HASH_FUNCTION [STRING_8] */
extern T0* GE_new1398(T1 initialize);
/* New instance of type [attached] TUPLE [STRING_8] */
extern T0* GE_new1399(T1 initialize);
/* New instance of type [attached] FUNCTION [KL_STRING_ROUTINES, [attached] TUPLE [STRING_8], INTEGER_32] */
extern T0* GE_new1400(T1 initialize);
/* New instance of type [attached] TUPLE [KL_STRING_ROUTINES] */
extern T0* GE_new1401(T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_SUBLIST */
extern T0* GE_new1403(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new1404(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
extern T0* GE_new1407(T1 initialize);
/* New instance of type XM_COMMENT */
extern T0* GE_new1408(T1 initialize);
/* New instance of type XM_PROCESSING_INSTRUCTION */
extern T0* GE_new1409(T1 initialize);
/* New instance of type XM_CHARACTER_DATA */
extern T0* GE_new1410(T1 initialize);
/* New instance of type detachable DS_CELL [detachable ET_CLASS] */
extern T0* GE_new1416(T1 initialize);
/* New instance of type [attached] TUPLE [detachable DS_CELL [detachable ET_CLASS]] */
extern T0* GE_new1417(T1 initialize);
/* New instance of type [attached] TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new1418(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLUSTER] */
extern T0* GE_new1419(T1 initialize);
/* New instance of type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
extern T0* GE_new1420(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_TYPE */
extern T0* GE_new1421(T1 initialize);
/* New instance of type ET_UNQUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new1422(T1 initialize);
/* New instance of type [attached] TUPLE [ET_EIFFEL_PARSER, DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new1424(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new1425(T1 initialize);
/* New instance of type ET_FEATURE_IDS */
extern T0* GE_new1432(T1 initialize);
/* New instance of type HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
extern T0* GE_new1433(T1 initialize);
/* New instance of type INTEGER_OVERFLOW_CHECKER */
extern T0* GE_new1436(T1 initialize);
/* New instance of type SPECIAL [ARRAY [INTEGER_32]] */
extern T0* GE_new1437(T6 a1, T1 initialize);
/* New instance of type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
extern T0* GE_new1438(T6 a1, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new1439(T1 initialize);
/* New instance of type detachable DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new1440(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
extern T0* GE_new1441(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1442(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1443(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1444(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
extern T0* GE_new1445(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1446(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1447(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1448(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_CONDITION] */
extern T0* GE_new1449(T1 initialize);
/* New instance of type detachable DS_LINKABLE [XM_DOCUMENT_NODE] */
extern T0* GE_new1450(T1 initialize);
/* New instance of type DS_LINKED_QUEUE [CHARACTER_8] */
extern T0* GE_new1455(T1 initialize);
/* New instance of type UC_UTF16_ROUTINES */
extern T0* GE_new1456(T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1457(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1458(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1459(T1 initialize);
/* New instance of type LX_DFA_WILDCARD */
extern T0* GE_new1460(T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
extern T0* GE_new1461(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new1463(T1 initialize);
/* New instance of type detachable DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new1464(T1 initialize);
/* New instance of type SPECIAL [ET_XACE_CLUSTER] */
extern T0* GE_new1465(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
extern T0* GE_new1466(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
extern T0* GE_new1467(T1 initialize);
/* New instance of type SPECIAL [ET_NAMED_CLASS] */
extern T0* GE_new1468(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
extern T0* GE_new1470(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
extern T0* GE_new1472(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_QUERY] */
extern T0* GE_new1473(T1 initialize);
/* New instance of type SPECIAL [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1474(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1475(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new1476(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new1477(T1 initialize);
/* New instance of type SPECIAL [ET_ASSERTION_ITEM] */
extern T0* GE_new1478(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
extern T0* GE_new1479(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
extern T0* GE_new1480(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1481(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
extern T0* GE_new1482(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
extern T0* GE_new1485(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
extern T0* GE_new1486(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new1487(T1 initialize);
/* New instance of type SPECIAL [ET_FLATTENED_FEATURE] */
extern T0* GE_new1488(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
extern T0* GE_new1491(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new1493(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
extern T0* GE_new1494(T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT_LIST] */
extern T0* GE_new1495(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
extern T0* GE_new1496(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1498(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT] */
extern T0* GE_new1499(T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT] */
extern T0* GE_new1500(T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME] */
extern T0* GE_new1501(T1 initialize);
/* New instance of type ET_CALL_NAME_TESTER */
extern T0* GE_new1502(T1 initialize);
/* New instance of type DS_HASH_SET [ET_CALL_NAME] */
extern T0* GE_new1504(T1 initialize);
/* New instance of type DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME] */
extern T0* GE_new1505(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME] */
extern T0* GE_new1506(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1507(T1 initialize);
/* New instance of type ET_REDECLARED_FEATURE */
extern T0* GE_new1508(T1 initialize);
/* New instance of type ET_REPLICATED_FEATURE */
extern T0* GE_new1511(T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
extern T0* GE_new1512(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
extern T0* GE_new1513(T1 initialize);
/* New instance of type ET_DOTNET_SIGNATURE_TESTER */
extern T0* GE_new1514(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DOTNET_FEATURE] */
extern T0* GE_new1515(T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new1517(T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
extern T0* GE_new1519(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
extern T0* GE_new1520(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
extern T0* GE_new1521(T1 initialize);
/* New instance of type detachable DS_LINKED_LIST [ET_PARENT_FEATURE] */
extern T0* GE_new1522(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
extern T0* GE_new1523(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_CLASS] */
extern T0* GE_new1524(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1526(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
extern T0* GE_new1527(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
extern T0* GE_new1528(T1 initialize);
/* New instance of type SPECIAL [YY_BUFFER] */
extern T0* GE_new1530(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [YY_BUFFER] */
extern T0* GE_new1531(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TARGET] */
extern T0* GE_new1532(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
extern T0* GE_new1533(T1 initialize);
/* New instance of type DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new1535(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new1536(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1537(T1 initialize);
/* New instance of type attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1538(T1 initialize);
/* New instance of type [attached] TUPLE [ET_GROUP] */
extern T0* GE_new1539(T1 initialize);
/* New instance of type [attached] TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
extern T0* GE_new1540(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLASS]], [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_CLASS]]] */
extern T0* GE_new1541(T1 initialize);
/* New instance of type [attached] TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1542(T1 initialize);
/* New instance of type ET_CLUSTER_ERROR */
extern T0* GE_new1543(T1 initialize);
/* New instance of type ET_SYNTAX_ERROR */
extern T0* GE_new1544(T1 initialize);
/* New instance of type AP_OPTION_COMPARATOR */
extern T0* GE_new1545(T1 initialize);
/* New instance of type DS_QUICK_SORTER [AP_OPTION] */
extern T0* GE_new1546(T1 initialize);
/* New instance of type [attached] TUPLE [ET_XACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1549(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1550(T1 initialize);
/* New instance of type ET_FORMAL_COMMA_ARGUMENT */
extern T0* GE_new1556(T1 initialize);
/* New instance of type ET_LOCAL_COMMA_VARIABLE */
extern T0* GE_new1557(T1 initialize);
/* New instance of type ET_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new1558(T1 initialize);
/* New instance of type ET_KEYWORD_EXPRESSION */
extern T0* GE_new1560(T1 initialize);
/* New instance of type detachable DS_LINKABLE [XM_ELEMENT_NODE] */
extern T0* GE_new1562(T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_QUERY] */
extern T0* GE_new1564(T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_PROCEDURE] */
extern T0* GE_new1565(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1570(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
extern T0* GE_new1571(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_INTERNAL_UNIVERSE, ET_ECF_STATE] */
extern T0* GE_new1572(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1574(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
extern T0* GE_new1575(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1577(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
extern T0* GE_new1578(T1 initialize);
/* New instance of type detachable DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new1581(T1 initialize);
/* New instance of type [attached] TUPLE [LX_WILDCARD] */
extern T0* GE_new1582(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [LX_WILDCARD]] */
extern T0* GE_new1583(T1 initialize);
/* New instance of type [attached] TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
extern T0* GE_new1584(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [STRING_8]] */
extern T0* GE_new1586(T1 initialize);
/* New instance of type [attached] TUPLE [KL_STRING_ROUTINES, STRING_8] */
extern T0* GE_new1587(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_CURRENT_TARGET */
extern T0* GE_new1591(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
extern T0* GE_new1601(T1 initialize);
/* New instance of type SPECIAL [ET_CLUSTER] */
extern T0* GE_new1604(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLUSTER] */
extern T0* GE_new1605(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
extern T0* GE_new1606(T1 initialize);
/* New instance of type SPECIAL [NATURAL_64] */
extern T0* GE_new1607(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_CLUSTER] */
extern T0* GE_new1608(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
extern T0* GE_new1609(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
extern T0* GE_new1610(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1611(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1612(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1613(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1614(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1615(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1616(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1617(T1 initialize);
/* New instance of type SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1618(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1619(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
extern T0* GE_new1620(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_FILE_RULE] */
extern T0* GE_new1621(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
extern T0* GE_new1622(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1623(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1624(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1625(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1626(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1627(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1628(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1629(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1630(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1631(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_CONDITION] */
extern T0* GE_new1632(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_CONDITION] */
extern T0* GE_new1633(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION] */
extern T0* GE_new1634(T1 initialize);
/* New instance of type detachable DS_LINKABLE [CHARACTER_8] */
extern T0* GE_new1635(T1 initialize);
/* New instance of type LX_WILDCARD_PARSER */
extern T0* GE_new1636(T1 initialize);
/* New instance of type LX_DESCRIPTION */
extern T0* GE_new1637(T1 initialize);
/* New instance of type LX_FULL_DFA */
extern T0* GE_new1638(T1 initialize);
/* New instance of type SPECIAL [LX_WILDCARD] */
extern T0* GE_new1640(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_WILDCARD] */
extern T0* GE_new1643(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
extern T0* GE_new1644(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
extern T0* GE_new1645(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
extern T0* GE_new1646(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
extern T0* GE_new1647(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME] */
extern T0* GE_new1648(T1 initialize);
/* New instance of type SPECIAL [ET_RENAME] */
extern T0* GE_new1649(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_CALL_NAME] */
extern T0* GE_new1654(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RENAME] */
extern T0* GE_new1655(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
extern T0* GE_new1656(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_CALL_NAME] */
extern T0* GE_new1657(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME] */
extern T0* GE_new1658(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME] */
extern T0* GE_new1661(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1662(T1 initialize);
/* New instance of type SPECIAL [ET_REPLICABLE_FEATURE] */
extern T0* GE_new1663(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
extern T0* GE_new1665(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
extern T0* GE_new1666(T1 initialize);
/* New instance of type detachable DS_LINKABLE [ET_ADAPTED_FEATURE] */
extern T0* GE_new1667(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
extern T0* GE_new1668(T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_FEATURE] */
extern T0* GE_new1669(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
extern T0* GE_new1670(T1 initialize);
/* New instance of type SPECIAL [ET_DOTNET_FEATURE] */
extern T0* GE_new1671(T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
extern T0* GE_new1672(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
extern T0* GE_new1673(T1 initialize);
/* New instance of type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new1674(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new1677(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new1678(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
extern T0* GE_new1679(T1 initialize);
/* New instance of type detachable DS_LINKABLE [ET_DOTNET_FEATURE] */
extern T0* GE_new1680(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
extern T0* GE_new1681(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new1682(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_ERROR */
extern T0* GE_new1683(T1 initialize);
/* New instance of type ET_STANDARD_ONCE_KEYS */
extern T0* GE_new1686(T1 initialize);
/* New instance of type KL_CHARACTER_ROUTINES */
extern T0* GE_new1689(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
extern T0* GE_new1690(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_IDENTIFIER, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new1691(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new1696(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new1697(T1 initialize);
/* New instance of type ET_SEEDED_QUERY_COMPARATOR */
extern T0* GE_new1701(T1 initialize);
/* New instance of type ET_SEEDED_PROCEDURE_COMPARATOR */
extern T0* GE_new1704(T1 initialize);
/* New instance of type [attached] TUPLE [ET_CLIENT_LIST] */
extern T0* GE_new1708(T1 initialize);
/* New instance of type ET_INFIX_CAST_EXPRESSION */
extern T0* GE_new1716(T1 initialize);
/* New instance of type detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1719(T1 initialize);
/* New instance of type SPECIAL [ET_LIKE_FEATURE] */
extern T0* GE_new1724(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
extern T0* GE_new1725(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
extern T0* GE_new1726(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_RULE] */
extern T0* GE_new1727(T1 initialize);
/* New instance of type LX_START_CONDITIONS */
extern T0* GE_new1728(T1 initialize);
/* New instance of type LX_ACTION_FACTORY */
extern T0* GE_new1729(T1 initialize);
/* New instance of type LX_SYMBOL_CLASS */
extern T0* GE_new1730(T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8] */
extern T0* GE_new1731(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
extern T0* GE_new1732(T1 initialize);
/* New instance of type SPECIAL [LX_SYMBOL_CLASS] */
extern T0* GE_new1733(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_NFA] */
extern T0* GE_new1734(T1 initialize);
/* New instance of type LX_NFA */
extern T0* GE_new1735(T1 initialize);
/* New instance of type SPECIAL [LX_NFA] */
extern T0* GE_new1736(T6 a1, T1 initialize);
/* New instance of type LX_EQUIVALENCE_CLASSES */
extern T0* GE_new1737(T1 initialize);
/* New instance of type LX_RULE */
extern T0* GE_new1738(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8] */
extern T0* GE_new1739(T1 initialize);
/* New instance of type LX_UNRECOGNIZED_RULE_ERROR */
extern T0* GE_new1740(T1 initialize);
/* New instance of type LX_MISSING_QUOTE_ERROR */
extern T0* GE_new1741(T1 initialize);
/* New instance of type LX_BAD_CHARACTER_CLASS_ERROR */
extern T0* GE_new1742(T1 initialize);
/* New instance of type LX_BAD_CHARACTER_ERROR */
extern T0* GE_new1743(T1 initialize);
/* New instance of type LX_FULL_AND_META_ERROR */
extern T0* GE_new1744(T1 initialize);
/* New instance of type LX_FULL_AND_REJECT_ERROR */
extern T0* GE_new1745(T1 initialize);
/* New instance of type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
extern T0* GE_new1746(T1 initialize);
/* New instance of type LX_CHARACTER_OUT_OF_RANGE_ERROR */
extern T0* GE_new1747(T1 initialize);
/* New instance of type SPECIAL [LX_RULE] */
extern T0* GE_new1748(T6 a1, T1 initialize);
/* New instance of type ARRAY [LX_RULE] */
extern T0* GE_new1749(T1 initialize);
/* New instance of type LX_DFA_STATE */
extern T0* GE_new1750(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_NFA_STATE] */
extern T0* GE_new1751(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_DFA_STATE] */
extern T0* GE_new1752(T1 initialize);
/* New instance of type LX_SYMBOL_PARTITIONS */
extern T0* GE_new1753(T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [LX_RULE] */
extern T0* GE_new1754(T1 initialize);
/* New instance of type LX_START_CONDITION */
extern T0* GE_new1755(T1 initialize);
/* New instance of type LX_TRANSITION_TABLE [LX_DFA_STATE] */
extern T0* GE_new1756(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_NFA] */
extern T0* GE_new1757(T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_NFA, INTEGER_32] */
extern T0* GE_new1758(T1 initialize);
/* New instance of type LX_NFA_STATE */
extern T0* GE_new1759(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
extern T0* GE_new1761(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
extern T0* GE_new1763(T1 initialize);
/* New instance of type ET_UNIVERSE_ERROR */
extern T0* GE_new1764(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1766(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_LIBRARY] */
extern T0* GE_new1769(T1 initialize);
/* New instance of type ET_PARENTHESIS_SYMBOL */
extern T0* GE_new1784(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
extern T0* GE_new1789(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
extern T0* GE_new1790(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_CLUSTER] */
extern T0* GE_new1797(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_CLUSTER]] */
extern T0* GE_new1798(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
extern T0* GE_new1799(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_FILE_RULE] */
extern T0* GE_new1800(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_FILE_RULE]] */
extern T0* GE_new1801(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_FILE_RULES] */
extern T0* GE_new1802(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_ECF_FILE_RULE]] */
extern T0* GE_new1803(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_STATE] */
extern T0* GE_new1804(T1 initialize);
/* New instance of type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
extern T0* GE_new1808(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1811(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_RULE] */
extern T0* GE_new1813(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_RULE] */
extern T0* GE_new1814(T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [STRING_8] */
extern T0* GE_new1815(T1 initialize);
/* New instance of type SPECIAL [LX_START_CONDITION] */
extern T0* GE_new1816(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
extern T0* GE_new1817(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
extern T0* GE_new1818(T1 initialize);
/* New instance of type LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new1821(T1 initialize);
/* New instance of type LX_EPSILON_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new1823(T1 initialize);
/* New instance of type LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new1825(T1 initialize);
/* New instance of type DS_BILINKABLE [INTEGER_32] */
extern T0* GE_new1826(T1 initialize);
/* New instance of type SPECIAL [DS_BILINKABLE [INTEGER_32]] */
extern T0* GE_new1827(T6 a1, T1 initialize);
/* New instance of type ARRAY [DS_BILINKABLE [INTEGER_32]] */
extern T0* GE_new1828(T1 initialize);
/* New instance of type LX_ACTION */
extern T0* GE_new1830(T1 initialize);
/* New instance of type DS_BUBBLE_SORTER [LX_NFA_STATE] */
extern T0* GE_new1831(T1 initialize);
/* New instance of type DS_BUBBLE_SORTER [LX_RULE] */
extern T0* GE_new1833(T1 initialize);
/* New instance of type SPECIAL [LX_NFA_STATE] */
extern T0* GE_new1835(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
extern T0* GE_new1837(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
extern T0* GE_new1838(T1 initialize);
/* New instance of type SPECIAL [LX_DFA_STATE] */
extern T0* GE_new1840(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
extern T0* GE_new1841(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
extern T0* GE_new1842(T1 initialize);
/* New instance of type KL_ARRAY [LX_RULE] */
extern T0* GE_new1843(T1 initialize);
/* New instance of type ARRAY [detachable LX_DFA_STATE] */
extern T0* GE_new1844(T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
extern T0* GE_new1845(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_NFA] */
extern T0* GE_new1846(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
extern T0* GE_new1848(T1 initialize);
/* New instance of type ET_DYNAMIC_EQUALITY_EXPRESSION */
extern T0* GE_new1851(T1 initialize);
/* New instance of type ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new1852(T1 initialize);
/* New instance of type ET_CONVERT_BUILTIN_EXPRESSION */
extern T0* GE_new1853(T1 initialize);
/* New instance of type ET_CONVERT_FROM_EXPRESSION */
extern T0* GE_new1854(T1 initialize);
/* New instance of type ET_CONVERT_TO_EXPRESSION */
extern T0* GE_new1855(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
extern T0* GE_new1860(T1 initialize);
/* New instance of type detachable DS_LINKABLE [ET_PARENT_FEATURE] */
extern T0* GE_new1863(T1 initialize);
/* New instance of type DS_SHELL_SORTER [INTEGER_32] */
extern T0* GE_new1865(T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [LX_RULE] */
extern T0* GE_new1866(T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
extern T0* GE_new1869(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1872(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1873(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1874(T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new1875(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new1876(T1 initialize);
/* New instance of type KL_ARRAY [STRING_8] */
extern T0* GE_new1877(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1878(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1879(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1880(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_DOTNET_GAC_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1881(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1882(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1883(T1 initialize);
/* New instance of type [attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1884(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
extern T0* GE_new1885(T1 initialize);
/* New instance of type ET_AST_NULL_LEAF */
extern T0* GE_new1888(T1 initialize);
/* GEC.execute */
extern T0* T22c42(GE_context* ac);
/* GEC.report_cannot_read_error */
extern void T22f48(GE_context* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error */
extern void T32f9(GE_context* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error_message */
extern void T32f11(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_line */
extern void T131f6(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_new_line */
extern void T131f9(GE_context* ac, T0* C);
/* KL_STDERR_FILE.put_string */
extern void T131f7(GE_context* ac, T0* C, T0* a1);
/* CONSOLE.put_string */
extern void T865f21(GE_context* ac, T0* C, T0* a1);
/* CONSOLE.console_ps */
extern void T865f26(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDERR_FILE.console */
extern unsigned char ge260os13364;
extern T0* ge260ov13364;
extern T0* T131f2(GE_context* ac, T0* C);
/* STD_FILES.error */
extern unsigned char ge1481os19798;
extern T0* ge1481ov19798;
extern T0* T356f4(GE_context* ac, T0* C);
/* CONSOLE.make_open_stderr */
extern T0* T865c23(GE_context* ac, T0* a1);
/* CONSOLE.set_write_mode */
extern void T865f25(GE_context* ac, T0* C);
/* CONSOLE.console_def */
extern T14 T865f12(GE_context* ac, T0* C, T6 a1);
/* CONSOLE.make_with_name */
extern void T865f24(GE_context* ac, T0* C, T0* a1);
/* STRING_8.make_empty */
extern T0* T17c48(GE_context* ac);
/* STRING_8.make */
extern void T17f44(GE_context* ac, T0* C, T6 a1);
/* STRING_8.make */
extern T0* T17c44(GE_context* ac, T6 a1);
/* SPECIAL [CHARACTER_8].make_filled */
extern T0* T15c12(GE_context* ac, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].fill_with */
extern void T15f14(GE_context* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].extend */
extern void T15f16(GE_context* ac, T0* C, T2 a1);
/* INTEGER_32.min */
extern T6 T6f16(GE_context* ac, T6* C, T6 a1);
/* INTEGER_32.is_less_equal */
extern T1 T6f14(GE_context* ac, T6* C, T6 a1);
/* SPECIAL [CHARACTER_8].make_empty */
extern void T15f15(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].make_empty */
extern T0* T15c15(GE_context* ac, T6 a1);
/* CONSOLE.default_pointer */
extern T14 T865f9(GE_context* ac, T0* C);
/* CONSOLE.set_name */
extern void T865f28(GE_context* ac, T0* C, T0* a1);
/* FILE_INFO.file_name_to_pointer */
extern T0* T129f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* C_STRING.set_string */
extern void T536f11(GE_context* ac, T0* C, T0* a1);
/* C_STRING.set_substring */
extern void T536f14(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* MANAGED_POINTER.put_natural_8 */
extern void T128f15(GE_context* ac, T0* C, T8 a1, T6 a2);
/* POINTER.memory_copy */
extern void T14f13(GE_context* ac, T14* C, T14 a1, T6 a2);
/* POINTER.c_memcpy */
extern void T14f17(GE_context* ac, T14* C, T14 a1, T14 a2, T6 a3);
/* NATURAL_32.to_natural_8 */
extern T8 T10f5(GE_context* ac, T10* C);
/* C_STRING.make_shared_from_pointer_and_count */
extern void T536f10(GE_context* ac, T0* C, T14 a1, T6 a2);
/* C_STRING.make_shared_from_pointer_and_count */
extern T0* T536c10(GE_context* ac, T14 a1, T6 a2);
/* MANAGED_POINTER.share_from_pointer */
extern T0* T128c16(GE_context* ac, T14 a1, T6 a2);
/* MANAGED_POINTER.increment_counter */
extern void T128f13(GE_context* ac, T0* C);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_8_0_pointer */
extern void T534f11(GE_context* ac, T534* C, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* CELL [INTEGER_32].put */
extern void T535f2(GE_context* ac, T0* C, T6 a1);
/* CELL [INTEGER_32].put */
extern T0* T535c2(GE_context* ac, T6 a1);
/* NATURAL_32.is_less_equal */
extern T1 T10f3(GE_context* ac, T10* C, T10 a1);
/* UTF_CONVERTER.to_natural_32 */
extern T10 T534f7(GE_context* ac, T534* C, T0* a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parsed_natural_32 */
extern T10 T1433f12(GE_context* ac, T0* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_string_with_type */
extern void T1433f19(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T1433f19ot1(T0* a1, T0** a2);
extern T1 T1433f19ot2(T0* a1, T0** a2);
/* NATURAL_32.is_valid_character_8_code */
extern T1 T10f17(GE_context* ac, T10* C);
/* INTEGER_32.to_natural_32 */
extern T10 T6f20(GE_context* ac, T6* C);
/* CHARACTER_32.is_character_8 */
extern T1 T3f3(GE_context* ac, T3* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_character */
extern void T1433f22(GE_context* ac, T0* C, T2 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflowed */
extern T1 T1433f16(GE_context* ac, T0* C);
/* INTEGER_OVERFLOW_CHECKER.will_overflow */
extern T1 T1436f7(GE_context* ac, T0* C, T11 a1, T11 a2, T6 a3, T6 a4);
/* NATURAL_64.is_greater */
extern T1 T11f11(GE_context* ac, T11* C, T11 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflow_checker */
extern unsigned char ge1522os36353;
extern T0* ge1522ov36353;
extern T0* T1433f15(GE_context* ac, T0* C);
/* INTEGER_OVERFLOW_CHECKER.make */
extern T0* T1436c13(GE_context* ac);
/* NATURAL_64.to_natural_64 */
extern T11 T11f12(GE_context* ac, T11* C);
/* NATURAL_32.to_natural_64 */
extern T11 T10f22(GE_context* ac, T10* C);
/* NATURAL_16.to_natural_64 */
extern T11 T9f12(GE_context* ac, T9* C);
/* NATURAL_8.to_natural_64 */
extern T11 T8f17(GE_context* ac, T8* C);
/* INTEGER_64.to_natural_64 */
extern T11 T7f9(GE_context* ac, T7* C);
/* INTEGER_16.to_natural_64 */
extern T11 T5f3(GE_context* ac, T5* C);
/* INTEGER_8.to_natural_64 */
extern T11 T4f3(GE_context* ac, T4* C);
/* SPECIAL [NATURAL_64].extend */
extern void T1607f5(GE_context* ac, T0* C, T11 a1);
/* SPECIAL [NATURAL_64].make_empty */
extern T0* T1607c4(GE_context* ac, T6 a1);
/* STRING_8.has */
extern T1 T17f40(GE_context* ac, T0* C, T2 a1);
/* STRING_8.area_lower */
extern T6 T17f16(GE_context* ac, T0* C);
/* INTEGER_32.to_natural_64 */
extern T11 T6f26(GE_context* ac, T6* C);
/* CHARACTER_8.is_less_equal */
extern T1 T2f7(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.is_less */
extern T1 T2f6(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.natural_32_code */
extern T10 T2f11(GE_context* ac, T2* C);
/* CHARACTER_8.is_greater_equal */
extern T1 T2f5(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.is_hexa_digit */
extern T1 T2f26(GE_context* ac, T2* C);
/* NATURAL_8.is_greater */
extern T1 T8f2(GE_context* ac, T8* C, T8 a1);
/* CHARACTER_8.character_types */
extern T8 T2f9(GE_context* ac, T2* C, T6 a1);
/* CHARACTER_8.internal_character_types */
extern unsigned char ge1419os93;
extern T0* ge1419ov93;
extern T0* T2f12(GE_context* ac, T2* C);
/* SPECIAL [NATURAL_8].fill_with */
extern void T541f8(GE_context* ac, T0* C, T8 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_8].extend */
extern void T541f7(GE_context* ac, T0* C, T8 a1);
/* SPECIAL [NATURAL_8].make_empty */
extern void T541f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_8].make_empty */
extern T0* T541c6(GE_context* ac, T6 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.reset */
extern void T1433f18(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.ctoi_convertor */
extern unsigned char ge1492os28086;
extern T0* ge1492ov28086;
extern T0* T534f8(GE_context* ac, T534* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_trailing_separators_acceptable */
extern void T1433f21(GE_context* ac, T0* C, T1 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_leading_separators_acceptable */
extern void T1433f20(GE_context* ac, T0* C, T1 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.make */
extern T0* T1433c17(GE_context* ac);
/* STRING_8.make_from_string */
extern T0* T17c64(GE_context* ac, T0* a1);
/* SPECIAL [CHARACTER_8].copy_data */
extern void T15f18(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_8].force */
extern void T15f19(GE_context* ac, T0* C, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].move_data */
extern void T15f20(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].overlapping_move */
extern void T15f17(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].non_overlapping_move */
extern void T15f21(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UTF_CONVERTER.is_hexa_decimal */
extern T1 T534f6(GE_context* ac, T534* C, T0* a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.is_integral_integer */
extern T1 T1433f14(GE_context* ac, T0* C);
/* INTEGER_32.is_greater_equal */
extern T1 T6f12(GE_context* ac, T6* C, T6 a1);
/* UTF_CONVERTER.utf_8_bytes_count */
extern T6 T534f3(GE_context* ac, T534* C, T0* a1, T6 a2, T6 a3);
/* FILE_INFO.multi_byte_to_utf_16 */
extern T6 T129f10(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* FILE_INFO.default_pointer */
extern T14 T129f9(GE_context* ac, T0* C);
/* C_STRING.item */
extern T14 T536f6(GE_context* ac, T0* C);
/* C_STRING.make */
extern T0* T536c9(GE_context* ac, T0* a1);
/* C_STRING.make_empty */
extern void T536f7(GE_context* ac, T0* C, T6 a1);
/* C_STRING.make_empty */
extern T0* T536c7(GE_context* ac, T6 a1);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_16_0_pointer */
extern void T534f10(GE_context* ac, T534* C, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* MANAGED_POINTER.put_natural_16 */
extern void T128f14(GE_context* ac, T0* C, T9 a1, T6 a2);
/* NATURAL_32.to_natural_16 */
extern T9 T10f10(GE_context* ac, T10* C);
/* NATURAL_32.is_greater */
extern T1 T10f9(GE_context* ac, T10* C, T10 a1);
/* UTF_CONVERTER.utf_16_bytes_count */
extern T6 T534f4(GE_context* ac, T534* C, T0* a1, T6 a2, T6 a3);
/* MANAGED_POINTER.resize */
extern void T128f11(GE_context* ac, T0* C, T6 a1);
/* POINTER.memory_set */
extern void T14f12(GE_context* ac, T14* C, T6 a1, T6 a2);
/* POINTER.c_memset */
extern void T14f16(GE_context* ac, T14* C, T14 a1, T6 a2, T6 a3);
/* EXCEPTIONS.raise */
extern void T835f2(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.raise */
extern void T117f16(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.raise */
extern void T19f17(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.code */
extern T6 T117f8(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.default_pointer */
extern T14 T19f12(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.set_last_exception */
extern void T19f16(GE_context* ac, T0* C, T0* a1);
/* CELL [detachable EXCEPTION].put */
extern void T25f2(GE_context* ac, T0* C, T0* a1);
/* CELL [detachable EXCEPTION].put */
extern T0* T25c2(GE_context* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.last_exception_cell */
extern unsigned char ge1694os1921;
extern T0* ge1694ov1921;
extern T0* T19f5(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.last_exception */
extern T0* T19f8(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.in_rescue */
extern T1 T19f11(GE_context* ac, T0* C);
/* DEVELOPER_EXCEPTION.is_ignored */
extern T1 T117f7(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.is_ignored */
extern T1 T19f13(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].has */
extern T1 T23f34(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].same_keys */
extern T1 T23f26(GE_context* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].hash_code_of */
extern T6 T23f25(GE_context* ac, T0* C, T6 a1);
/* INTEGER_32.hash_code */
extern T6 T6f17(GE_context* ac, T6* C);
/* ISE_EXCEPTION_MANAGER.ignored_exceptions */
extern unsigned char ge1694os1916;
extern T0* ge1694ov1916;
extern T0* T19f1(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].make */
extern T0* T23c35(GE_context* ac, T6 a1);
/* SPECIAL [INTEGER_32].make_filled */
extern T0* T123c9(GE_context* ac, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].fill_with */
extern void T123f12(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].extend */
extern void T123f13(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].make_filled */
extern T0* T124c6(GE_context* ac, T1 a1, T6 a2);
/* SPECIAL [BOOLEAN].fill_with */
extern void T124f9(GE_context* ac, T0* C, T1 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].extend */
extern void T124f11(GE_context* ac, T0* C, T1 a1);
/* SPECIAL [BOOLEAN].make_empty */
extern void T124f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].make_empty */
extern T0* T124c8(GE_context* ac, T6 a1);
/* SPECIAL [INTEGER_32].make_empty */
extern void T123f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].make_empty */
extern T0* T123c8(GE_context* ac, T6 a1);
/* PRIMES.higher_prime */
extern T6 T122f1(GE_context* ac, T0* C, T6 a1);
/* PRIMES.is_prime */
extern T1 T122f3(GE_context* ac, T0* C, T6 a1);
/* PRIMES.default_create */
extern T0* T122c5(GE_context* ac);
/* DEVELOPER_EXCEPTION.generating_type */
extern T0* T117f9(GE_context* ac, T0* C);
/* DEVELOPER_EXCEPTION.exception_manager */
extern T0* T117f6(GE_context* ac, T0* C);
/* DEVELOPER_EXCEPTION.default_create */
extern T0* T117c10(GE_context* ac);
/* EXCEPTIONS.default_create */
extern T0* T835c1(GE_context* ac);
/* MANAGED_POINTER.default_pointer */
extern T14 T128f4(GE_context* ac, T0* C);
/* POINTER.memory_realloc */
extern T14 T14f3(GE_context* ac, T14* C, T6 a1);
/* POINTER.c_realloc */
extern T14 T14f8(GE_context* ac, T14* C, T14 a1, T6 a2);
/* INTEGER_32.max */
extern T6 T6f13(GE_context* ac, T6* C, T6 a1);
/* MANAGED_POINTER.make */
extern T0* T128c9(GE_context* ac, T6 a1);
/* POINTER.memory_calloc */
extern T14 T14f2(GE_context* ac, T14* C, T6 a1, T6 a2);
/* POINTER.c_calloc */
extern T14 T14f6(GE_context* ac, T14* C, T6 a1, T6 a2);
/* PLATFORM.is_windows */
extern T1 T539s1(GE_context* ac);
/* CONSOLE.buffered_file_info */
extern unsigned char ge1429os2679;
extern T0* ge1429ov2679;
extern T0* T865f10(GE_context* ac, T0* C);
/* FILE_INFO.make */
extern T0* T129c17(GE_context* ac);
/* FILE_INFO.make_filled_area */
extern void T129f19(GE_context* ac, T0* C, T8 a1, T6 a2);
/* SPECIAL [NATURAL_8].make_filled */
extern T0* T541c5(GE_context* ac, T8 a1, T6 a2);
/* FILE_INFO.stat_size */
extern T6 T129f7(GE_context* ac, T0* C);
/* KL_STDERR_FILE.io */
extern unsigned char ge1409os44;
extern T0* ge1409ov44;
extern T0* T131f4(GE_context* ac, T0* C);
/* STD_FILES.set_output_default */
extern void T356f8(GE_context* ac, T0* C);
/* STD_FILES.output */
extern unsigned char ge1481os19797;
extern T0* ge1481ov19797;
extern T0* T356f3(GE_context* ac, T0* C);
/* CONSOLE.make_open_stdout */
extern T0* T865c19(GE_context* ac, T0* a1);
/* STD_FILES.default_create */
extern T0* T356c6(GE_context* ac);
/* KL_STRING_ROUTINES.as_string */
extern T0* T34f6(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.string */
extern T0* T846f7(GE_context* ac, T0* C);
/* UC_UTF8_STRING.next_byte_index */
extern T6 T846f36(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_byte_count */
extern T6 T845f3(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.utf8 */
extern unsigned char ge311os13506;
extern T0* ge311ov13506;
extern T0* T846f40(GE_context* ac, T0* C);
/* UC_UTF8_ROUTINES.default_create */
extern T0* T845c36(GE_context* ac);
/* KL_INTEGER_ROUTINES.to_character */
extern T2 T231f1(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.integer_ */
extern unsigned char ge217os3806;
extern T0* ge217ov3806;
extern T0* T846f35(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.default_create */
extern T0* T231c5(GE_context* ac);
/* KL_PLATFORM.maximum_character_code */
extern unsigned char ge292os15674;
extern T6 ge292ov15674;
extern T6 T230f1(GE_context* ac, T0* C);
/* UC_UTF8_STRING.platform */
extern unsigned char ge299os2415;
extern T0* ge299ov2415;
extern T0* T846f34(GE_context* ac, T0* C);
/* KL_PLATFORM.default_create */
extern T0* T230c3(GE_context* ac);
/* UC_UTF8_STRING.item_code_at_byte_index */
extern T6 T846f33(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_next_value */
extern T6 T845f6(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.encoded_first_value */
extern T6 T845f4(GE_context* ac, T0* C, T2 a1);
/* STRING_8.append_character */
extern void T17f46(GE_context* ac, T0* C, T2 a1);
/* STRING_8.resize */
extern void T17f47(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area_with_default */
extern T0* T15f4(GE_context* ac, T0* C, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].aliased_resized_area */
extern T0* T15f5(GE_context* ac, T0* C, T6 a1);
/* STRING_8.additional_space */
extern T6 T17f5(GE_context* ac, T0* C);
/* STRING_8.capacity */
extern T6 T17f4(GE_context* ac, T0* C);
/* UC_UTF8_STRING.byte_item */
extern T2 T846f32(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.old_item */
extern T2 T846f49(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.set_count */
extern void T846f81(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.reset_byte_index_cache */
extern void T846f96(GE_context* ac, T0* C);
/* STRING_8.string */
extern T0* T17f22(GE_context* ac, T0* C);
/* UC_UTF8_STRING.as_string */
extern T0* T846f51(GE_context* ac, T0* C);
/* UC_UTF8_STRING.to_utf8 */
extern T0* T846f30(GE_context* ac, T0* C);
/* KL_ANY_ROUTINES.same_types */
extern T1 T134f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.any_ */
extern unsigned char ge212os2414;
extern T0* ge212ov2414;
extern T0* T34f2(GE_context* ac, T0* C);
/* KL_ANY_ROUTINES.default_create */
extern T0* T134c3(GE_context* ac);
/* KL_STDERR_FILE.string_ */
extern unsigned char ge219os1985;
extern T0* ge219ov1985;
extern T0* T131f1(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.default_create */
extern T0* T34c19(GE_context* ac);
/* UT_ERROR_HANDLER.message */
extern T0* T32f5(GE_context* ac, T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.make */
extern T0* T86c8(GE_context* ac, T0* a1);
/* ARRAY [STRING_8].put */
extern void T142f12(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [STRING_8].make_filled */
extern T0* T142c11(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [STRING_8].make_filled_area */
extern void T142f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].make_filled */
extern T0* T141c7(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [STRING_8].fill_with */
extern void T141f10(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].extend */
extern void T141f13(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [STRING_8].make_empty */
extern void T141f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].make_empty */
extern T0* T141c8(GE_context* ac, T6 a1);
/* GEC.process_system */
extern void T22f47(GE_context* ac, T0* C, T0* a1);
/* KL_SHELL_COMMAND.execute */
extern void T75f13(GE_context* ac, T0* C);
/* KL_SHELL_COMMAND.operating_system */
extern unsigned char ge298os1980;
extern T0* ge298ov1980;
extern T0* T75f6(GE_context* ac, T0* C);
/* KL_OPERATING_SYSTEM.default_create */
extern T0* T84c6(GE_context* ac);
/* KL_SHELL_COMMAND.system */
extern void T75f14(GE_context* ac, T0* C, T0* a1);
/* KL_SHELL_COMMAND.system_call */
extern T6 T75f9(GE_context* ac, T0* C, T14 a1);
/* NATIVE_STRING.item */
extern T14 T367f3(GE_context* ac, T0* C);
/* NATIVE_STRING.make */
extern T0* T367c9(GE_context* ac, T0* a1);
/* NATIVE_STRING.set_string */
extern void T367f12(GE_context* ac, T0* C, T0* a1);
/* NATIVE_STRING.set_substring */
extern void T367f13(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* NATIVE_STRING.unit_size */
extern T6 T367f5(GE_context* ac, T0* C);
/* NATIVE_STRING.upper_cell */
extern unsigned char ge1526os19948;
extern T0* ge1526ov19948;
extern T0* T367f7(GE_context* ac, T0* C);
/* NATIVE_STRING.make_empty */
extern void T367f11(GE_context* ac, T0* C, T6 a1);
/* NATIVE_STRING.make_empty */
extern T0* T367c11(GE_context* ac, T6 a1);
/* KL_SHELL_COMMAND.default_shell */
extern unsigned char ge1661os9785;
extern T0* ge1661ov9785;
extern T0* T75f8(GE_context* ac, T0* C);
/* STRING_32.make_empty */
extern T0* T18c13(GE_context* ac);
/* STRING_32.make */
extern void T18f14(GE_context* ac, T0* C, T6 a1);
/* STRING_32.make */
extern T0* T18c14(GE_context* ac, T6 a1);
/* SPECIAL [CHARACTER_32].make_filled */
extern T0* T16c7(GE_context* ac, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].fill_with */
extern void T16f12(GE_context* ac, T0* C, T3 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].extend */
extern void T16f11(GE_context* ac, T0* C, T3 a1);
/* SPECIAL [CHARACTER_32].make_empty */
extern void T16f10(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_32].make_empty */
extern T0* T16c10(GE_context* ac, T6 a1);
/* KL_SHELL_COMMAND.item */
extern T0* T75f10(GE_context* ac, T0* C, T0* a1);
/* NATIVE_STRING.string */
extern T0* T367f6(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_8_0_pointer_to_escaped_string_32 */
extern T0* T534f2(GE_context* ac, T534* C, T0* a1);
/* UTF_CONVERTER.utf_8_0_pointer_into_escaped_string_32 */
extern void T534f13(GE_context* ac, T534* C, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_8_0_subpointer_into_escaped_string_32 */
extern void T534f15(GE_context* ac, T534* C, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* UTF_CONVERTER.escape_code_into */
extern void T534f16(GE_context* ac, T534* C, T0* a1, T9 a2);
/* NATURAL_16.to_hex_string */
extern T0* T9f4(GE_context* ac, T9* C);
/* STRING_8.put */
extern void T17f71(GE_context* ac, T0* C, T2 a1, T6 a2);
/* INTEGER_32.to_hex_character */
extern T2 T6f27(GE_context* ac, T6* C);
/* NATURAL_16.to_integer_32 */
extern T6 T9f8(GE_context* ac, T9* C);
/* STRING_8.fill_blank */
extern void T17f74(GE_context* ac, T0* C);
/* STRING_8.fill_character */
extern void T17f57(GE_context* ac, T0* C, T2 a1);
/* PLATFORM.default_create */
extern T0* T539c4(GE_context* ac);
/* STRING_32.append_string_general */
extern void T18f15(GE_context* ac, T0* C, T0* a1);
/* STRING_32.append */
extern void T18f15p1(GE_context* ac, T0* C, T0* a1);
/* STRING_32.set_count */
extern void T18f20(GE_context* ac, T0* C, T6 a1);
/* STRING_32.append_code */
extern void T18f19(GE_context* ac, T0* C, T10 a1);
/* STRING_32.put_code */
extern void T18f21(GE_context* ac, T0* C, T10 a1, T6 a2);
/* STRING_32.resize */
extern void T18f18(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_32].aliased_resized_area_with_default */
extern T0* T16f3(GE_context* ac, T0* C, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].aliased_resized_area */
extern T0* T16f4(GE_context* ac, T0* C, T6 a1);
/* STRING_32.capacity */
extern T6 T18f4(GE_context* ac, T0* C);
/* STRING_32.append */
extern void T18f17(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_32].copy_data */
extern void T16f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_32].force */
extern void T16f14(GE_context* ac, T0* C, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].move_data */
extern void T16f13(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].overlapping_move */
extern void T16f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].non_overlapping_move */
extern void T16f15(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_32.additional_space */
extern T6 T18f5(GE_context* ac, T0* C);
/* NATURAL_8.to_hex_string */
extern T0* T8f11(GE_context* ac, T8* C);
/* NATURAL_8.to_integer_32 */
extern T6 T8f6(GE_context* ac, T8* C);
/* NATURAL_16.is_less_equal */
extern T1 T9f2(GE_context* ac, T9* C, T9 a1);
/* STRING_32.append_character */
extern void T18f16(GE_context* ac, T0* C, T3 a1);
/* NATURAL_8.to_natural_16 */
extern T9 T8f9(GE_context* ac, T8* C);
/* STRING_32.extend */
extern void T18f23(GE_context* ac, T0* C, T3 a1);
/* NATURAL_8.is_less_equal */
extern T1 T8f5(GE_context* ac, T8* C, T8 a1);
/* MANAGED_POINTER.read_natural_8 */
extern T8 T128f6(GE_context* ac, T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_8].memory_copy */
extern void T1406f2(GE_context* ac, T1406* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_8].c_memcpy */
extern void T1406f3(GE_context* ac, T1406* C, T14 a1, T14 a2, T6 a3);
/* STRING_32.grow */
extern void T18f22(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.utf_16_0_pointer_to_escaped_string_32 */
extern T0* T534f1(GE_context* ac, T534* C, T0* a1);
/* UTF_CONVERTER.utf_16_0_pointer_into_escaped_string_32 */
extern void T534f12(GE_context* ac, T534* C, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_16_0_subpointer_into_escaped_string_32 */
extern void T534f14(GE_context* ac, T534* C, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* NATURAL_32.is_greater_equal */
extern T1 T10f12(GE_context* ac, T10* C, T10 a1);
/* NATURAL_16.to_natural_32 */
extern T10 T9f1(GE_context* ac, T9* C);
/* MANAGED_POINTER.read_natural_16 */
extern T9 T128f5(GE_context* ac, T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_16].memory_copy */
extern void T1405f2(GE_context* ac, T1405* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_16].c_memcpy */
extern void T1405f3(GE_context* ac, T1405* C, T14 a1, T14 a2, T6 a3);
/* NATIVE_STRING.make_from_pointer */
extern T0* T367c10(GE_context* ac, T14 a1);
/* MANAGED_POINTER.make_from_pointer */
extern T0* T128c12(GE_context* ac, T14 a1, T6 a2);
/* POINTER.memory_alloc */
extern T14 T14f5(GE_context* ac, T14* C, T6 a1);
/* POINTER.c_malloc */
extern T14 T14f9(GE_context* ac, T14* C, T6 a1);
/* NATIVE_STRING.pointer_length_in_bytes */
extern T6 T367f4(GE_context* ac, T0* C, T14 a1);
/* NATURAL_64.to_integer_32 */
extern T6 T11f2(GE_context* ac, T11* C);
/* NATURAL_64.is_less_equal */
extern T1 T11f1(GE_context* ac, T11* C, T11 a1);
/* NATIVE_STRING.c_pointer_length_in_bytes */
extern T11 T367f8(GE_context* ac, T0* C, T14 a1);
/* KL_SHELL_COMMAND.eif_getenv */
extern T14 T75f11(GE_context* ac, T0* C, T14 a1);
/* UC_UTF8_STRING.old_is_empty */
extern T1 T846f50(GE_context* ac, T0* C);
/* KL_SHELL_COMMAND.make */
extern T0* T75c12(GE_context* ac, T0* a1);
/* KL_SHELL_COMMAND.string_ */
extern T0* T75f7(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.absolute_pathname */
extern T0* T121f1(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname */
extern T0* T121f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.appended_string */
extern T0* T34f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* STRING_8.append_string */
extern void T17f49(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append */
extern void T17f55(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.area_lower */
extern T6 T846f17(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.concat */
extern T0* T34f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.prefixed_string */
extern T0* T846f15(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.make */
extern void T846f77(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.make */
extern T0* T846c77(GE_context* ac, T6 a1);
/* UC_UTF8_STRING.old_set_count */
extern void T846f79(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.byte_capacity */
extern T6 T846f52(GE_context* ac, T0* C);
/* UC_UTF8_STRING.capacity */
extern T6 T846f52p1(GE_context* ac, T0* C);
/* UC_UTF8_STRING.make */
extern void T846f77p1(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.substring_byte_count */
extern T6 T845f22(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
extern T1 T845f22ot1(T0* a1, T0** a2);
extern T1 T845f22ot2(T0* a1, T0** a2);
/* UC_UTF8_ROUTINES.code_byte_count */
extern T6 T845f24(GE_context* ac, T0* C, T6 a1);
/* NATURAL_32.to_integer_32 */
extern T6 T10f18(GE_context* ac, T10* C);
/* UC_UTF8_STRING.shifted_byte_index */
extern T6 T846f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.byte_index */
extern T6 T846f37(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.dummy_uc_string */
extern unsigned char ge324os30136;
extern T0* ge324ov30136;
extern T0* T845f27(GE_context* ac, T0* C);
/* UC_STRING.make_empty */
extern T0* T133c8(GE_context* ac);
/* UC_STRING.make */
extern void T133f9(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.old_set_count */
extern void T133f12(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.set_count */
extern void T133f11(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.byte_capacity */
extern T6 T133f7(GE_context* ac, T0* C);
/* UC_STRING.capacity */
extern T6 T133f7p1(GE_context* ac, T0* C);
/* UC_STRING.make */
extern void T133f9p1(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.reset_byte_index_cache */
extern void T133f10(GE_context* ac, T0* C);
/* UC_UTF8_ROUTINES.character_byte_count */
extern T6 T845f23(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.any_ */
extern T0* T845f25(GE_context* ac, T0* C);
/* UC_UTF8_STRING.append_string */
extern void T846f67(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.append */
extern void T846f85(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.dummy_uc_string */
extern unsigned char ge314os13496;
extern T0* ge314ov13496;
extern T0* T846f56(GE_context* ac, T0* C);
/* UC_UTF8_STRING.gobo_append_substring */
extern void T846f69(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_substring_at_byte_index */
extern void T846f89(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
extern T1 T846f89ot1(T0* a1, T0** a2);
extern T1 T846f89ot2(T0* a1, T0** a2);
extern T1 T846f89ot3(T0* a1, T0** a2);
/* UC_UTF8_STRING.put_code_at_byte_index */
extern void T846f99(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_character_at_byte_index */
extern void T846f88(GE_context* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_byte */
extern void T846f100(GE_context* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.old_put */
extern void T846f87(GE_context* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.resize_byte_storage */
extern void T846f86(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.resize */
extern void T846f101(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.cloned_string */
extern T0* T846f39(GE_context* ac, T0* C);
/* UC_UTF8_STRING.twin */
extern T0* T846f9(GE_context* ac, T0* C);
/* UC_UTF8_STRING.copy */
extern void T846f76(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.copy */
extern void T846f76p1(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].resized_area */
extern T0* T15f7(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.append */
extern void T846f85p1(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.additional_space */
extern T6 T846f57(GE_context* ac, T0* C);
/* ISE_RUNTIME.check_assert */
extern T1 T1454s1(GE_context* ac, T1 a1);
/* UC_UTF8_STRING.as_string_8 */
extern T0* T846f16(GE_context* ac, T0* C);
/* STRING_8.put_code */
extern void T17f62(GE_context* ac, T0* C, T10 a1, T6 a2);
/* UC_UTF8_STRING.put_code */
extern void T846f80(GE_context* ac, T0* C, T10 a1, T6 a2);
/* UC_UTF8_STRING.put_item_code */
extern void T846f98(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.move_bytes_right */
extern void T846f91(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.move_bytes_left */
extern void T846f90(GE_context* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.valid_code */
extern T1 T17f31(GE_context* ac, T0* C, T10 a1);
/* UC_UTF8_STRING.valid_code */
extern T1 T846f41(GE_context* ac, T0* C, T10 a1);
/* STRING_8.set_count */
extern void T17f61(GE_context* ac, T0* C, T6 a1);
/* STRING_8.as_string_8 */
extern T0* T17f20(GE_context* ac, T0* C);
/* UC_UTF8_STRING.any_ */
extern T0* T846f54(GE_context* ac, T0* C);
/* UC_UTF8_STRING.append_character */
extern void T846f68(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.item */
extern T2 T846f8(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.character_item_at_byte_index */
extern T2 T846f38(GE_context* ac, T0* C, T6 a1);
/* STRING_8.item */
extern T2 T17f10(GE_context* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.cloned_string */
extern T0* T34f9(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.string_ */
extern T0* T121f21(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.cwd */
extern T0* T121f13(GE_context* ac, T0* C);
/* EXECUTION_ENVIRONMENT.current_working_directory */
extern T0* T201f2(GE_context* ac, T0* C);
/* FILE_INFO.pointer_to_file_name_8 */
extern T0* T129f13(GE_context* ac, T0* C, T14 a1);
/* C_STRING.string */
extern T0* T536f4(GE_context* ac, T0* C);
/* C_STRING.c_strlen */
extern T6 T536f5(GE_context* ac, T0* C, T14 a1);
/* C_STRING.make_shared_from_pointer */
extern T0* T536c12(GE_context* ac, T14 a1);
/* C_STRING.substring */
extern T0* T536f3(GE_context* ac, T0* C, T6 a1, T6 a2);
/* C_STRING.read_substring_into */
extern void T536f13(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* NATURAL_8.to_natural_32 */
extern T10 T8f12(GE_context* ac, T8* C);
/* FILE_INFO.utf_16_to_multi_byte */
extern T6 T129f15(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* EXECUTION_ENVIRONMENT.file_info */
extern unsigned char ge1661os9805;
extern T0* ge1661ov9805;
extern T0* T201f5(GE_context* ac, T0* C);
/* EXECUTION_ENVIRONMENT.eif_dir_current */
extern T6 T201f4(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.execution_environment */
extern unsigned char ge247os12699;
extern T0* ge247ov12699;
extern T0* T121f23(GE_context* ac, T0* C);
/* EXECUTION_ENVIRONMENT.default_create */
extern T0* T201c10(GE_context* ac);
/* KL_UNIX_FILE_SYSTEM.is_absolute_pathname */
extern T1 T121f12(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.absolute_pathname */
extern T0* T120f26(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.current_drive */
extern T0* T120f15(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_directory_separator */
extern T1 T120f18(GE_context* ac, T0* C, T2 a1);
/* KL_WINDOWS_FILE_SYSTEM.string_ */
extern T0* T120f14(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname */
extern T0* T120f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.cwd */
extern T0* T120f13(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.execution_environment */
extern T0* T120f25(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_relative_pathname */
extern T1 T120f5(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_absolute_pathname */
extern T1 T120f12(GE_context* ac, T0* C, T0* a1);
/* GEC.file_system */
extern unsigned char ge256os1981;
extern T0* ge256ov1981;
extern T0* T22f38(GE_context* ac, T0* C);
/* GEC.unix_file_system */
extern unsigned char ge256os1984;
extern T0* ge256ov1984;
extern T0* T22f41(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.make */
extern T0* T121c31(GE_context* ac);
/* KL_OPERATING_SYSTEM.is_unix */
extern unsigned char ge290os12667;
extern T1 ge290ov12667;
extern T1 T84f2(GE_context* ac, T0* C);
/* KL_OPERATING_SYSTEM.current_working_directory */
extern T0* T84f4(GE_context* ac, T0* C);
/* KL_OPERATING_SYSTEM.execution_environment */
extern unsigned char ge290os12671;
extern T0* ge290ov12671;
extern T0* T84f5(GE_context* ac, T0* C);
/* STRING_8.is_equal */
extern T1 T17f37(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].same_items */
extern T1 T15f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_OPERATING_SYSTEM.variable_value */
extern T0* T84f3(GE_context* ac, T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.get */
extern T0* T201f8(GE_context* ac, T0* C, T0* a1);
/* STRING_32.as_string_8 */
extern T0* T18f6(GE_context* ac, T0* C);
/* EXECUTION_ENVIRONMENT.item */
extern T0* T201f3(GE_context* ac, T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.eif_getenv */
extern T14 T201f6(GE_context* ac, T0* C, T14 a1);
/* GEC.windows_file_system */
extern unsigned char ge256os1982;
extern T0* ge256ov1982;
extern T0* T22f40(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.make */
extern T0* T120c34(GE_context* ac);
/* UC_UTF8_STRING.plus */
extern T0* T846f14(GE_context* ac, T0* C, T0* a1);
/* STRING_8.plus */
extern T0* T17f9(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append_string_general */
extern void T17f56(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append */
extern void T17f56p1(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append_code */
extern void T17f60(GE_context* ac, T0* C, T10 a1);
/* STRING_8.new_string */
extern T0* T17f15(GE_context* ac, T0* C, T6 a1);
/* KL_OPERATING_SYSTEM.is_windows */
extern unsigned char ge290os12666;
extern T1 ge290ov12666;
extern T1 T84f1(GE_context* ac, T0* C);
/* GEC.operating_system */
extern T0* T22f37(GE_context* ac, T0* C);
/* GEC.no_c_compile */
extern T1 T22f36(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.parameter */
extern T1 T44f12(GE_context* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].last */
extern T1 T147f7(GE_context* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].is_empty */
extern T1 T147f6(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.put_new_line */
extern void T132f8(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.put_integer */
extern void T132f7(GE_context* ac, T0* C, T6 a1);
/* KL_STDOUT_FILE.put_integer_64 */
extern void T132f10(GE_context* ac, T0* C, T7 a1);
/* KL_STDOUT_FILE.put_character */
extern void T132f11(GE_context* ac, T0* C, T2 a1);
/* CONSOLE.put_character */
extern void T865f22(GE_context* ac, T0* C, T2 a1);
/* CONSOLE.console_pc */
extern void T865f27(GE_context* ac, T0* C, T14 a1, T2 a2);
/* KL_STDOUT_FILE.console */
extern unsigned char ge262os13372;
extern T0* ge262ov13372;
extern T0* T132f2(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.io */
extern T0* T132f4(GE_context* ac, T0* C);
/* INTEGER_32.to_integer_64 */
extern T7 T6f18(GE_context* ac, T6* C);
/* KL_STDOUT_FILE.put_string */
extern void T132f6(GE_context* ac, T0* C, T0* a1);
/* KL_STDOUT_FILE.string_ */
extern T0* T132f1(GE_context* ac, T0* C);
/* ET_C_GENERATOR.generate */
extern void T74f580(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].wipe_out */
extern void T54f71(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_wipe_out */
extern void T54f80(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_wipe_out */
extern void T54f79(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_wipe_out */
extern void T54f78(GE_context* ac, T0* C);
/* SPECIAL [STRING_8].keep_head */
extern void T141f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].set_count */
extern void T141f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_wipe_out */
extern void T54f77(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].unset_found_item */
extern void T54f54(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_all_cursors_after */
extern void T54f76(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_next_cursor */
extern void T171f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_after */
extern void T171f17(GE_context* ac, T0* C);
/* ET_C_GENERATOR.generate_compilation_script */
extern void T74f584(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.report_cannot_write_error */
extern void T74f586(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error */
extern void T36f185(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T36f190(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_error */
extern void T36f195(GE_context* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T36f190p1(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.message */
extern T0* T36f19(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error */
extern void T77f186(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T77f190(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_error */
extern void T77f194(GE_context* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T77f190p1(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.message */
extern T0* T77f19(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.error_handler */
extern T0* T74f109(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.make */
extern T0* T307c8(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.set_fatal_error */
extern void T74f585(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.change_mode */
extern void T304f35(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.old_change_mode */
extern void T304f44(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.file_chmod */
extern void T304f51(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.internal_name_pointer */
extern T0* T304f20(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_exists */
extern T1 T304f16(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_exists */
extern T1 T304f26(GE_context* ac, T0* C, T14 a1);
/* KL_TEXT_OUTPUT_FILE.old_is_closed */
extern T1 T304f22(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.string_name */
extern T0* T304f14(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.close */
extern void T304f34(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_close */
extern void T304f40(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.default_pointer */
extern T14 T304f18(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_close */
extern void T304f48(GE_context* ac, T0* C, T14 a1);
/* KL_UNIX_FILE_SYSTEM.file_exists */
extern T1 T121f8(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.exists */
extern T1 T29f32(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_plain */
extern T1 T29f34(GE_context* ac, T0* C);
/* FILE_INFO.is_plain */
extern T1 T129f14(GE_context* ac, T0* C);
/* FILE_INFO.file_info */
extern T6 T129f16(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.buffered_file_info */
extern T0* T29f29(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.set_buffer */
extern void T29f59(GE_context* ac, T0* C);
/* FILE_INFO.fast_update */
extern void T129f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* FILE_INFO.eif_file_stat */
extern T6 T129f12(GE_context* ac, T0* C, T14 a1, T14 a2, T1 a3);
/* KL_TEXT_INPUT_FILE.internal_name_pointer */
extern T0* T29f23(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_exists */
extern T1 T29f15(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_exists */
extern T1 T29f30(GE_context* ac, T0* C, T14 a1);
/* KL_TEXT_INPUT_FILE.old_is_closed */
extern T1 T29f12(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.string_name */
extern T0* T29f13(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.reset */
extern void T29f60(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.tmp_file */
extern unsigned char ge247os12696;
extern T0* ge247ov12696;
extern T0* T121f22(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.file_exists */
extern T1 T120f8(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_file */
extern T0* T120f24(GE_context* ac, T0* C);
/* ET_C_GENERATOR.file_system */
extern T0* T74f107(GE_context* ac, T0* C);
/* ET_C_GENERATOR.unix_file_system */
extern T0* T74f444(GE_context* ac, T0* C);
/* ET_C_GENERATOR.windows_file_system */
extern T0* T74f443(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].found_item */
extern T0* T54f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_item */
extern T0* T54f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].found */
extern T1 T54f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].search */
extern void T54f74(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].search_position */
extern void T54f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].hash_position */
extern T6 T54f29(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.hash_code */
extern T6 T846f22(GE_context* ac, T0* C);
/* UC_UTF8_STRING.hash_code */
extern T6 T846f22p1(GE_context* ac, T0* C);
/* STRING_8.hash_code */
extern T6 T17f21(GE_context* ac, T0* C);
/* KL_AGENT_HASH_FUNCTION [STRING_8].hash_code */
extern T6 T1398f2(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_item */
extern T0* T54f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_item */
extern T6 T54f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_item */
extern T6 T54f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].back */
extern void T171f16(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_back */
extern void T54f88(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].add_traversing_cursor */
extern void T54f84(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_position */
extern void T171f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_traversing_cursor */
extern void T54f83(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_before */
extern void T171f20(GE_context* ac, T0* C);
/* UT_TEMPLATE_EXPANDER.expand_from_values */
extern T0* T306f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].value */
extern T0* T54f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].has */
extern T1 T54f46(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.append_substring_to_string */
extern void T34f21(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* KL_STRING_ROUTINES.appended_substring */
extern T0* T34f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* UC_UTF8_STRING.new_empty_string */
extern T0* T846f13(GE_context* ac, T0* C, T6 a1);
/* UT_TEMPLATE_EXPANDER.string_ */
extern T0* T306f2(GE_context* ac, T0* C);
/* ET_C_GENERATOR.template_expander */
extern unsigned char ge1163os9343;
extern T0* ge1163ov9343;
extern T0* T74f105(GE_context* ac, T0* C);
/* UT_TEMPLATE_EXPANDER.make */
extern T0* T306c3(GE_context* ac);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].item */
extern T0* T171f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_item */
extern T0* T54f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].before */
extern T1 T171f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].finish */
extern void T171f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_finish */
extern void T54f87(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_off */
extern T1 T54f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].off */
extern T1 T171f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].is_empty */
extern T1 T54f30(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.is_open_write */
extern T1 T304f23(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_open_write */
extern T1 T304f19(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T304f29(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.is_closed */
extern T1 T304f17(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_write */
extern void T304f41(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T304f41p1(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_open */
extern T14 T304f21(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.make */
extern T0* T304c27(GE_context* ac, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_make */
extern void T304f39(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.make_with_name */
extern void T304f47(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.set_name */
extern void T304f52(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.buffered_file_info */
extern T0* T304f25(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.string_ */
extern T0* T304f12(GE_context* ac, T0* C);
/* ET_C_GENERATOR.operating_system */
extern T0* T74f102(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].forth */
extern void T171f14(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_forth */
extern void T54f82(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].key */
extern T0* T171f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_key */
extern T0* T54f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].is_first */
extern T1 T171f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_is_first */
extern T1 T54f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].after */
extern T1 T171f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].start */
extern void T171f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_start */
extern void T54f81(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_cursor */
extern T0* T54f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].make */
extern T0* T171c12(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item */
extern T0* T54f43(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.add_external_c_files */
extern void T74f615(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_DIRECTORY.close */
extern void T329f33(GE_context* ac, T0* C);
/* KL_DIRECTORY.old_close */
extern void T329f35(GE_context* ac, T0* C);
/* KL_DIRECTORY.default_pointer */
extern T14 T329f17(GE_context* ac, T0* C);
/* KL_DIRECTORY.dir_close */
extern void T329f39(GE_context* ac, T0* C, T14 a1);
/* KL_STRING_ROUTINES.replaced_all_substrings */
extern T0* T34f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_STRING_ROUTINES.substring_index */
extern T6 T34f14(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* UC_UTF8_STRING.item_code */
extern T6 T846f12(GE_context* ac, T0* C, T6 a1);
/* STRING_8.item_code */
extern T6 T17f7(GE_context* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.platform */
extern T0* T34f15(GE_context* ac, T0* C);
/* UC_UTF8_STRING.substring_index */
extern T6 T846f21(GE_context* ac, T0* C, T0* a1, T6 a2);
/* STRING_8.substring_index */
extern T6 T17f36(GE_context* ac, T0* C, T0* a1, T6 a2);
/* STRING_8_SEARCHER.substring_index */
extern T6 T768f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_8_SEARCHER.substring_index_with_deltas */
extern T6 T768f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_8_SEARCHER.internal_initialize_deltas */
extern void T768f8(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* STRING_8.string_searcher */
extern unsigned char ge1529os489;
extern T0* ge1529ov489;
extern T0* T17f34(GE_context* ac, T0* C);
/* STRING_8_SEARCHER.make */
extern T0* T768c6(GE_context* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_last */
extern void T54f52(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_put */
extern void T54f60(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [STRING_8].force */
extern void T170f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_put */
extern void T54f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_put */
extern void T54f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].resize */
extern void T54f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_resize */
extern void T54f65(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].aliased_resized_area_with_default */
extern T0* T172f1(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].aliased_resized_area_with_default */
extern T0* T123f4(GE_context* ac, T0* C, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].aliased_resized_area */
extern T0* T123f5(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].special_integer_ */
extern unsigned char ge218os5796;
extern T0* ge218ov5796;
extern T0* T54f28(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [INTEGER_32].default_create */
extern T0* T172c6(GE_context* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_resize */
extern void T54f64(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].aliased_resized_area */
extern T0* T170f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].aliased_resized_area */
extern T0* T141f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_resize */
extern void T54f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_resize */
extern void T54f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_modulus */
extern T6 T54f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_capacity */
extern T6 T54f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_put */
extern void T54f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* STRING_8.remove_tail */
extern void T17f54(GE_context* ac, T0* C, T6 a1);
/* STRING_8.keep_head */
extern void T17f59(GE_context* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.extension */
extern T0* T121f10(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.extension */
extern T0* T120f10(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.ends_with */
extern T1 T846f20(GE_context* ac, T0* C, T0* a1);
/* STRING_8.area_upper */
extern T6 T17f17(GE_context* ac, T0* C);
/* UC_UTF8_STRING.area_upper */
extern T6 T846f43(GE_context* ac, T0* C);
/* STRING_8.ends_with */
extern T1 T17f30(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.read_entry */
extern void T329f32(GE_context* ac, T0* C);
/* KL_DIRECTORY.readentry */
extern void T329f37(GE_context* ac, T0* C);
/* KL_DIRECTORY.file_info */
extern unsigned char ge1424os19147;
extern T0* ge1424ov19147;
extern T0* T329f23(GE_context* ac, T0* C);
/* KL_DIRECTORY.eif_dir_next */
extern T14 T329f22(GE_context* ac, T0* C, T14 a1);
/* KL_DIRECTORY.old_end_of_input */
extern T1 T329f15(GE_context* ac, T0* C);
/* ET_C_GENERATOR.report_cannot_read_error */
extern void T74f676(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.is_open_read */
extern T1 T329f11(GE_context* ac, T0* C);
/* KL_DIRECTORY.is_closed */
extern T1 T329f16(GE_context* ac, T0* C);
/* KL_DIRECTORY.open_read */
extern void T329f31(GE_context* ac, T0* C);
/* KL_DIRECTORY.old_open_read */
extern void T329f36(GE_context* ac, T0* C);
/* KL_DIRECTORY.dir_open */
extern T14 T329f19(GE_context* ac, T0* C, T14 a1);
/* KL_DIRECTORY.internal_name_pointer */
extern T0* T329f18(GE_context* ac, T0* C);
/* KL_DIRECTORY.old_is_readable */
extern T1 T329f13(GE_context* ac, T0* C);
/* KL_DIRECTORY.eif_dir_is_readable */
extern T1 T329f27(GE_context* ac, T0* C, T14 a1);
/* KL_DIRECTORY.old_exists */
extern T1 T329f12(GE_context* ac, T0* C);
/* KL_DIRECTORY.eif_dir_exists */
extern T1 T329f26(GE_context* ac, T0* C, T14 a1);
/* KL_DIRECTORY.make */
extern void T329f29(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.make */
extern T0* T329c29(GE_context* ac, T0* a1);
/* KL_DIRECTORY.old_make */
extern void T329f34(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.make_with_name */
extern void T329f38(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.set_name */
extern void T329f40(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.string_ */
extern T0* T329f24(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring */
extern T0* T303f57(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_end_position */
extern T6 T303f79(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_start_position */
extern T6 T303f70(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.recognizes */
extern T1 T303f55(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_matched */
extern T1 T303f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_key_equality_tester */
extern void T54f51(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.string_equality_tester */
extern unsigned char ge221os4486;
extern T0* ge221ov4486;
extern T0* T74f147(GE_context* ac, T0* C);
/* KL_STRING_EQUALITY_TESTER.default_create */
extern T0* T144c2(GE_context* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern void T54f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern T0* T54c50(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_with_equality_testers */
extern void T54f53(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_sparse_container */
extern void T54f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_internal_cursor */
extern void T54f70(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_slots */
extern void T54f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_clashes */
extern void T54f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_key_storage */
extern void T54f67(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].make */
extern T0* T170f2(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].default_create */
extern T0* T170c3(GE_context* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_item_storage */
extern void T54f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].force */
extern void T54f86(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_EXECUTION_ENVIRONMENT.interpreted_string */
extern T0* T66f4(GE_context* ac, T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.variable_value */
extern T0* T66f3(GE_context* ac, T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.environment_impl */
extern unsigned char ge283os6385;
extern T0* ge283ov6385;
extern T0* T66f1(GE_context* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.string_ */
extern T0* T66f2(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.replace_all */
extern T0* T303f232(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replace_all_to_string */
extern void T303f306(GE_context* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_unbounded_substring */
extern void T303f320(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_substring */
extern void T303f318(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_it */
extern void T303f333(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_start */
extern T1 T303f150(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_internal */
extern T6 T303f233(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_type */
extern T6 T303f297(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.match_not_repeated_characters */
extern T6 T303f296(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.infinity */
extern unsigned char ge1715os17994;
extern T6 ge1715ov17994;
extern T6 T303f59(GE_context* ac, T0* C);
/* KL_PLATFORM.maximum_integer */
extern unsigned char ge292os15676;
extern T6 ge292ov15676;
extern T6 T230f2(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.platform */
extern T0* T303f195(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_characters */
extern T6 T303f295(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_BYTE_CODE.character_item */
extern T6 T710f8(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_classes */
extern T6 T303f294(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.character_set_has */
extern T1 T710f10(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_refs */
extern T6 T303f293(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_ref */
extern T6 T303f299(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.space_set */
extern unsigned char ge1721os18161;
extern T0* ge1721ov18161;
extern T0* T303f151(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.make */
extern T0* T711c5(GE_context* ac, T0* a1);
/* RX_CHARACTER_SET.add_string */
extern void T711f10(GE_context* ac, T0* C, T0* a1);
/* RX_CHARACTER_SET.add_character */
extern void T711f9(GE_context* ac, T0* C, T6 a1);
/* RX_CHARACTER_SET.make_empty */
extern void T711f4(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.make_empty */
extern T0* T711c4(GE_context* ac);
/* KL_SPECIAL_ROUTINES [BOOLEAN].make_filled */
extern T0* T599f3(GE_context* ac, T0* C, T1 a1, T6 a2);
/* RX_CHARACTER_SET.special_boolean_ */
extern unsigned char ge218os5794;
extern T0* ge218ov5794;
extern T0* T711f3(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [BOOLEAN].default_create */
extern T0* T599c5(GE_context* ac);
/* RX_PCRE_REGULAR_EXPRESSION.digit_set */
extern unsigned char ge1721os18153;
extern T0* ge1721ov18153;
extern T0* T303f167(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.has */
extern T1 T711f2(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ims_options */
extern void T303f331(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_dotall */
extern T1 T303f86(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_multiline */
extern T1 T303f85(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_caseless */
extern T1 T303f84(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_match_count */
extern void T303f340(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_next_start */
extern void T303f339(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_recursive */
extern T6 T303f292(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* RX_BYTE_CODE.integer_item */
extern T6 T710f11(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.next_matching_alternate */
extern T6 T303f290(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_additional_bracket */
extern T6 T303f271(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.opcode_item */
extern T6 T710f7(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.special_integer_ */
extern T0* T303f54(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.flip_case */
extern T6 T712f4(GE_context* ac, T0* C, T6 a1);
/* RX_CASE_MAPPING.to_lower */
extern T6 T712f3(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replacement_to_string */
extern void T303f319(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.append_code */
extern void T846f74(GE_context* ac, T0* C, T10 a1);
/* UC_UTF8_STRING.append_item_code */
extern void T846f94(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_captured_substring_to_string */
extern void T303f334(GE_context* ac, T0* C, T0* a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.string_ */
extern T0* T303f228(GE_context* ac, T0* C);
/* ET_C_GENERATOR.execution_environment */
extern unsigned char ge296os1978;
extern T0* ge296ov1978;
extern T0* T74f101(GE_context* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.default_create */
extern T0* T66c5(GE_context* ac);
/* KL_STRING_ROUTINES.new_empty_string */
extern T0* T34f7(GE_context* ac, T0* C, T0* a1, T6 a2);
/* UC_UTF8_STRING.old_wipe_out */
extern void T846f75(GE_context* ac, T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T846f92(GE_context* ac, T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T846f75p1(GE_context* ac, T0* C);
/* STRING_8.wipe_out */
extern void T17f70(GE_context* ac, T0* C);
/* ET_C_GENERATOR.string_ */
extern T0* T74f100(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match */
extern void T303f305(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].item */
extern T0* T136f8(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.current_system */
extern T0* T74f112(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_case_insensitive */
extern void T303f304(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_caseless */
extern void T303f317(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T303f303(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T303f303p1(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_startline */
extern void T303f316(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_startline */
extern T1 T303f231(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.first_significant_code */
extern T6 T303f190(GE_context* ac, T0* C, T6 a1, T6 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.find_firstchar */
extern T6 T303f230(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_anchored */
extern void T303f315(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.can_anchored */
extern T1 T303f229(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.ims_options */
extern T6 T303f148(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_dotall */
extern T6 T303f132(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_multiline */
extern T6 T303f130(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_caseless */
extern T6 T303f128(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_regexp */
extern void T303f314(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3, T6 a4);
/* RX_BYTE_CODE.set_count */
extern void T710f18(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.find_fixed_code_length */
extern T6 T303f64(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.put_integer */
extern void T710f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_branch */
extern void T303f332(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.meta_set */
extern unsigned char ge1721os18162;
extern T0* ge1721ov18162;
extern T0* T303f147(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.maxlit */
extern unsigned char ge1715os17995;
extern T6 ge1715ov17995;
extern T6 T303f146(GE_context* ac, T0* C);
/* RX_BYTE_CODE.append_character */
extern void T710f19(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.put_character */
extern void T710f25(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.resize_byte_code */
extern void T710f24(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.special_integer_ */
extern T0* T710f9(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_escape */
extern T6 T303f141(GE_context* ac, T0* C, T6 a1, T1 a2);
/* RX_PCRE_REGULAR_EXPRESSION.scan_hex_number */
extern T6 T303f223(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.xdigit_set */
extern unsigned char ge1721os18155;
extern T0* ge1721ov18155;
extern T0* T303f245(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_octal_number */
extern T6 T303f222(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.escape_character */
extern T6 T303f218(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.to_option_ims */
extern T6 T303f135(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ichanged */
extern void T303f330(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_dotall */
extern T6 T303f133(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_multiline */
extern T6 T303f131(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_caseless */
extern T6 T303f129(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_decimal_number */
extern T6 T303f110(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_repeats */
extern void T303f337(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5);
/* RX_BYTE_CODE.append_subcopy */
extern void T710f23(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.put_opcode */
extern void T710f22(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.move_right */
extern void T710f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_single_repeat */
extern void T303f338(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* RX_PCRE_REGULAR_EXPRESSION.compile_character_class */
extern void T303f336(GE_context* ac, T0* C);
/* RX_BYTE_CODE.append_character_set */
extern void T710f20(GE_context* ac, T0* C, T0* a1, T1 a2);
/* RX_BYTE_CODE.resize_character_sets */
extern void T710f26(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].aliased_resized_area_with_default */
extern T0* T599f4(GE_context* ac, T0* C, T0* a1, T1 a2, T6 a3);
/* SPECIAL [BOOLEAN].aliased_resized_area_with_default */
extern T0* T124f5(GE_context* ac, T0* C, T1 a1, T6 a2);
/* SPECIAL [BOOLEAN].aliased_resized_area */
extern T0* T124f4(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.special_boolean_ */
extern T0* T710f12(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.add_set */
extern void T711f8(GE_context* ac, T0* C, T0* a1);
/* RX_CHARACTER_SET.add_negated_set */
extern void T711f7(GE_context* ac, T0* C, T0* a1);
/* ARRAY [RX_CHARACTER_SET].item */
extern T0* T715f4(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.class_sets */
extern unsigned char ge1721os18164;
extern T0* ge1721ov18164;
extern T0* T303f159(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.default_word_set */
extern unsigned char ge1721os18149;
extern T0* ge1721ov18149;
extern T0* T303f76(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.punct_set */
extern unsigned char ge1721os18159;
extern T0* ge1721ov18159;
extern T0* T303f244(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.print_set */
extern unsigned char ge1721os18158;
extern T0* ge1721ov18158;
extern T0* T303f243(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.graph_set */
extern unsigned char ge1721os18157;
extern T0* ge1721ov18157;
extern T0* T303f242(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.cntrl_set */
extern unsigned char ge1721os18156;
extern T0* ge1721ov18156;
extern T0* T303f241(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.ascii_set */
extern unsigned char ge1721os18160;
extern T0* ge1721ov18160;
extern T0* T303f240(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alnum_set */
extern unsigned char ge1721os18154;
extern T0* ge1721ov18154;
extern T0* T303f239(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.upper_set */
extern unsigned char ge1721os18150;
extern T0* ge1721ov18150;
extern T0* T303f238(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.lower_set */
extern unsigned char ge1721os18151;
extern T0* ge1721ov18151;
extern T0* T303f237(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alpha_set */
extern unsigned char ge1721os18152;
extern T0* ge1721ov18152;
extern T0* T303f235(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_name */
extern T6 T303f157(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [STRING_8].item */
extern T0* T142f5(GE_context* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].count */
extern T6 T142f6(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.class_names */
extern unsigned char ge1721os18163;
extern T0* ge1721ov18163;
extern T0* T303f236(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_syntax */
extern T6 T303f155(GE_context* ac, T0* C, T6 a1);
/* RX_CHARACTER_SET.wipe_out */
extern void T711f6(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.actual_set */
extern unsigned char ge1715os17993;
extern T0* ge1715ov17993;
extern T0* T303f152(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.compile_counted_repeats */
extern T1 T303f88(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.scan_comment */
extern void T303f335(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_undef */
extern T1 T303f61(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.append_integer */
extern void T710f16(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.append_opcode */
extern void T710f15(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_error */
extern void T303f313(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_internal_options */
extern void T303f312(GE_context* ac, T0* C);
/* RX_BYTE_CODE.wipe_out */
extern void T710f14(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T303f311(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T303f311p1(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern T0* T303c302(GE_context* ac);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make_filled */
extern T0* T172f5(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern void T303f302p1(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_options */
extern void T303f310(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_strict */
extern void T303f329(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_greedy */
extern void T303f328(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_eol */
extern void T303f327(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_bol */
extern void T303f326(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dollar_endonly */
extern void T303f325(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_empty_allowed */
extern void T303f324(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_extended */
extern void T303f323(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dotall */
extern void T303f322(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_multiline */
extern void T303f321(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_word_set */
extern void T303f309(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_character_case_mapping */
extern void T303f308(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.default_character_case_mapping */
extern unsigned char ge1721os18148;
extern T0* ge1721ov18148;
extern T0* T303f75(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.make */
extern T0* T712c6(GE_context* ac, T0* a1, T0* a2);
/* RX_CASE_MAPPING.add */
extern void T712f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* RX_CASE_MAPPING.make_default */
extern void T712f7(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.clear */
extern void T712f9(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.special_integer_ */
extern T0* T712f5(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T303f307(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T303f307p1(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.wipe_out */
extern void T34f20(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.keep_head */
extern void T846f71(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.empty_pattern_buffer */
extern unsigned char ge1715os17992;
extern T0* ge1715ov17992;
extern T0* T303f74(GE_context* ac, T0* C);
/* RX_BYTE_CODE.make */
extern T0* T710c13(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].twin */
extern T0* T54f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].copy */
extern void T54f89(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].copy */
extern void T54f89p1(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_clashes */
extern void T54f94(GE_context* ac, T0* C);
/* SPECIAL [INTEGER_32].resized_area */
extern T0* T123f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].copy_data */
extern void T123f15(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [INTEGER_32].force */
extern void T123f11(GE_context* ac, T0* C, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].move_data */
extern void T123f17(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].overlapping_move */
extern void T123f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].non_overlapping_move */
extern void T123f18(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_slots */
extern void T54f93(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_key_storage */
extern void T54f92(GE_context* ac, T0* C);
/* SPECIAL [STRING_8].resized_area */
extern T0* T141f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].copy_data */
extern void T141f11(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [STRING_8].force */
extern void T141f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].move_data */
extern void T141f14(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].overlapping_move */
extern void T141f17(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].non_overlapping_move */
extern void T141f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_item_storage */
extern void T54f91(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].valid_cursor */
extern T1 T54f48(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.c_config */
extern T0* T74f99(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.parse_file */
extern void T523f180(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.parse */
extern void T523f184(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_pop_last_value */
extern void T523f197(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_push_error_value */
extern void T523f196(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ANY].force */
extern void T210f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ANY].fill_with */
extern void T209f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ANY].extend */
extern void T209f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ANY].aliased_resized_area */
extern T0* T210f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ANY].aliased_resized_area */
extern T0* T209f3(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_do_action */
extern void T523f195(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].force */
extern void T599f6(GE_context* ac, T0* C, T0* a1, T1 a2, T6 a3);
/* KL_SPECIAL_ROUTINES [BOOLEAN].aliased_resized_area */
extern T0* T599f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* UT_CONFIG_PARSER.is_defined */
extern T1 T523f136(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.process_include */
extern void T523f208(GE_context* ac, T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.make */
extern T0* T1333c8(GE_context* ac, T6 a1);
/* INTEGER_32.out */
extern T0* T6f3(GE_context* ac, T6* C);
/* STRING_8.append_integer */
extern void T17f45(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].put */
extern void T1331f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].force */
extern void T1531f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [YY_BUFFER].fill_with */
extern void T1530f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [YY_BUFFER].extend */
extern void T1530f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [INTEGER_32].put */
extern void T889f13(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.execution_environment */
extern T0* T523f162(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].is_full */
extern T1 T1331f5(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.undefine_value */
extern void T523f207(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove */
extern void T54f95(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_position */
extern void T54f96(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_keep_head */
extern void T54f100(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_keep_head */
extern void T54f99(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_cursors_forth */
extern void T54f98(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].internal_set_key_equality_tester */
extern void T54f97(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.ignored */
extern T1 T523f133(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_push_last_value */
extern void T523f194(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.accept */
extern void T523f193(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_do_error_action */
extern void T523f191(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.report_error */
extern void T523f206(GE_context* ac, T0* C, T0* a1);
extern T1 T523f206ot1(T0* a1, T0** a2);
/* UT_SYNTAX_ERROR.make */
extern T0* T1332c8(GE_context* ac, T0* a1, T6 a2);
/* UT_CONFIG_PARSER.report_eof_expected_error */
extern void T523f205(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.read_token */
extern void T523f190(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_execute_action */
extern void T523f204(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_set_beginning_of_line */
extern void T523f213(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_beginning_of_line */
extern void T204f28(GE_context* ac, T0* C, T1 a1);
/* YY_BUFFER.set_beginning_of_line */
extern void T205f17(GE_context* ac, T0* C, T1 a1);
/* UT_CONFIG_PARSER.text_item */
extern T2 T523f161(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.text_substring */
extern T0* T523f155(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.substring */
extern T0* T854f6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UT_CONFIG_PARSER.text_count */
extern T6 T523f154(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.string_ */
extern T0* T523f150(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.text */
extern T0* T523f149(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.set_start_condition */
extern void T523f211(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_execute_eof_action */
extern void T523f203(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.terminate */
extern void T523f212(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.wrap */
extern T1 T523f128(GE_context* ac, T0* C);
extern T1 T523f128ot1(T0* a1, T0** a2);
/* DS_ARRAYED_STACK [YY_BUFFER].remove */
extern void T1331f10(GE_context* ac, T0* C);
/* SPECIAL [YY_BUFFER].keep_head */
extern void T1530f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [YY_BUFFER].set_count */
extern void T1530f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].remove */
extern void T889f10(GE_context* ac, T0* C);
/* SPECIAL [INTEGER_32].keep_head */
extern void T123f14(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].set_count */
extern void T123f16(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].item */
extern T6 T889f5(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].item */
extern T0* T1331f7(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].is_empty */
extern T1 T1331f6(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_refill_input_buffer */
extern void T523f202(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_set_content */
extern void T523f200(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.count */
extern T6 T854f4(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.fill */
extern void T204f20(GE_context* ac, T0* C);
/* KL_CHARACTER_BUFFER.fill_from_stream */
extern T6 T854f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_CHARACTER_BUFFER.put */
extern void T854f10(GE_context* ac, T0* C, T2 a1, T6 a2);
/* YY_FILE_BUFFER.compact_left */
extern void T204f22(GE_context* ac, T0* C);
/* KL_CHARACTER_BUFFER.move_left */
extern void T854f11(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_8.subcopy */
extern void T17f76(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_FILE_BUFFER.resize */
extern void T204f24(GE_context* ac, T0* C);
/* KL_CHARACTER_BUFFER.resize */
extern void T854f12(GE_context* ac, T0* C, T6 a1);
/* YY_FILE_BUFFER.default_capacity */
extern unsigned char ge1700os15486;
extern T6 ge1700ov15486;
extern T6 T204f13(GE_context* ac, T0* C);
/* YY_BUFFER.fill */
extern void T205f15(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_index */
extern void T204f18(GE_context* ac, T0* C, T6 a1);
/* YY_BUFFER.set_index */
extern void T205f13(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_null_trans_state */
extern T6 T523f127(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_previous_state */
extern T6 T523f126(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.fatal_error */
extern void T523f201(GE_context* ac, T0* C, T0* a1);
/* UT_MESSAGE.make */
extern T0* T168c8(GE_context* ac, T0* a1);
/* KL_CHARACTER_BUFFER.item */
extern T2 T854f3(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].force */
extern void T172f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_SPECIAL_ROUTINES [INTEGER_32].aliased_resized_area */
extern T0* T172f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* UT_CONFIG_PARSER.special_integer_ */
extern T0* T523f104(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_init_value_stacks */
extern void T523f189(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_clear_all */
extern void T523f198(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.clear_all */
extern void T523f209(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.clear_stacks */
extern void T523f214(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_clear_value_stacks */
extern void T523f215(GE_context* ac, T0* C);
/* SPECIAL [BOOLEAN].keep_head */
extern void T124f12(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].set_count */
extern void T124f13(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].keep_head */
extern void T209f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].set_count */
extern void T209f8(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.abort */
extern void T523f192(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.set_input_buffer */
extern void T523f183(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_load_input_buffer */
extern void T523f188(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_position */
extern void T204f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* YY_BUFFER.set_position */
extern void T205f14(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UT_CONFIG_PARSER.new_file_buffer */
extern T0* T523f103(GE_context* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.make */
extern T0* T204c17(GE_context* ac, T0* a1);
/* YY_FILE_BUFFER.make_with_size */
extern void T204f21(GE_context* ac, T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.make_with_size */
extern T0* T204c21(GE_context* ac, T0* a1, T6 a2);
/* YY_FILE_BUFFER.set_file */
extern void T204f23(GE_context* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.set_file_with_size */
extern void T204f25(GE_context* ac, T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.flush */
extern void T204f26(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.new_default_buffer */
extern T0* T204f15(GE_context* ac, T0* C, T6 a1);
/* KL_CHARACTER_BUFFER.make */
extern T0* T854c9(GE_context* ac, T6 a1);
/* STRING_8.make_filled */
extern T0* T17c50(GE_context* ac, T2 a1, T6 a2);
/* ET_C_GENERATOR.multithreaded_mode */
extern T1 T74f96(GE_context* ac, T0* C);
/* ET_C_GENERATOR.console_application_mode */
extern T1 T74f442(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.define_value */
extern void T523f179(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UT_CONFIG_PARSER.make */
extern T0* T523c178(GE_context* ac, T0* a1);
/* DS_ARRAYED_STACK [INTEGER_32].make */
extern T0* T889c8(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make */
extern T0* T172f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].make */
extern T0* T1331c8(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].make */
extern T0* T1531f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [YY_BUFFER].make_empty */
extern T0* T1530c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].default_create */
extern T0* T1531c2(GE_context* ac);
/* UT_CONFIG_PARSER.string_equality_tester */
extern T0* T523f97(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.make_parser_skeleton */
extern void T523f182(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_build_parser_tables */
extern void T523f187(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yycheck_template */
extern unsigned char ge180os26792;
extern T0* ge180ov26792;
extern T0* T523f82(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yyfixed_array */
extern T0* T523f173(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].to_special */
extern T0* T172f4(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yytable_template */
extern unsigned char ge180os26791;
extern T0* ge180ov26791;
extern T0* T523f81(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yypgoto_template */
extern unsigned char ge180os26790;
extern T0* ge180ov26790;
extern T0* T523f135(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yypact_template */
extern unsigned char ge180os26789;
extern T0* ge180ov26789;
extern T0* T523f134(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yydefgoto_template */
extern unsigned char ge180os26788;
extern T0* ge180ov26788;
extern T0* T523f132(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yydefact_template */
extern unsigned char ge180os26787;
extern T0* ge180ov26787;
extern T0* T523f129(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytypes2_template */
extern unsigned char ge180os26786;
extern T0* ge180ov26786;
extern T0* T523f123(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytypes1_template */
extern unsigned char ge180os26785;
extern T0* ge180ov26785;
extern T0* T523f121(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yyr1_template */
extern unsigned char ge180os26784;
extern T0* ge180ov26784;
extern T0* T523f116(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytranslate_template */
extern unsigned char ge180os26781;
extern T0* ge180ov26781;
extern T0* T523f115(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytranslate_template_2 */
extern void T523f217(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yyarray_subcopy */
extern void T523f224(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* KL_ARRAY_ROUTINES [INTEGER_32].subcopy */
extern void T522f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ARRAY [INTEGER_32].subcopy */
extern void T521f16(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* UT_CONFIG_PARSER.integer_array_ */
extern unsigned char ge213os4325;
extern T0* ge213ov4325;
extern T0* T523f177(GE_context* ac, T0* C);
/* KL_ARRAY_ROUTINES [INTEGER_32].default_create */
extern T0* T522c2(GE_context* ac);
/* UT_CONFIG_PARSER.yytranslate_template_1 */
extern void T523f216(GE_context* ac, T0* C, T0* a1);
/* ARRAY [INTEGER_32].make_filled */
extern T0* T521c10(GE_context* ac, T6 a1, T6 a2, T6 a3);
/* ARRAY [INTEGER_32].make_filled_area */
extern void T521f13(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UT_CONFIG_PARSER.yy_create_value_stacks */
extern void T523f186(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [BOOLEAN].make */
extern T0* T599f1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ANY].make */
extern T0* T210f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].make_empty */
extern T0* T209c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ANY].default_create */
extern T0* T210c3(GE_context* ac);
/* UT_CONFIG_PARSER.make_scanner */
extern void T523f181(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.make_with_buffer */
extern void T523f185(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T523f199(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T523f199p1(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_build_tables */
extern void T523f210(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_accept_template */
extern unsigned char ge181os26847;
extern T0* ge181ov26847;
extern T0* T523f169(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_fixed_array */
extern T0* T523f175(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_meta_template */
extern unsigned char ge181os26846;
extern T0* ge181ov26846;
extern T0* T523f168(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_ec_template */
extern unsigned char ge181os26843;
extern T0* ge181ov26843;
extern T0* T523f167(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_ec_template_2 */
extern void T523f223(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_array_subcopy */
extern void T523f225(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* UT_CONFIG_PARSER.yy_ec_template_1 */
extern void T523f222(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_def_template */
extern unsigned char ge181os26842;
extern T0* ge181ov26842;
extern T0* T523f166(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_base_template */
extern unsigned char ge181os26841;
extern T0* ge181ov26841;
extern T0* T523f165(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_chk_template */
extern unsigned char ge181os26838;
extern T0* ge181ov26838;
extern T0* T523f164(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_chk_template_2 */
extern void T523f221(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_chk_template_1 */
extern void T523f220(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_nxt_template */
extern unsigned char ge181os26835;
extern T0* ge181ov26835;
extern T0* T523f163(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_nxt_template_2 */
extern void T523f219(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_nxt_template_1 */
extern void T523f218(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.empty_buffer */
extern unsigned char ge1705os6760;
extern T0* ge1705ov6760;
extern T0* T523f83(GE_context* ac, T0* C);
/* YY_BUFFER.make */
extern T0* T205c12(GE_context* ac, T0* a1);
/* YY_BUFFER.make_from_buffer */
extern void T205f16(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.fill_from_string */
extern void T854f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* YY_BUFFER.new_default_buffer */
extern T0* T205f11(GE_context* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.has_extension */
extern T1 T121f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.has_extension */
extern T1 T120f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].put_new */
extern void T54f85(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.right_adjust */
extern void T34f23(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.left_adjust */
extern void T34f22(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.remove_head */
extern void T846f73(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.keep_tail */
extern void T846f93(GE_context* ac, T0* C, T6 a1);
/* STRING_8.remove_head */
extern void T17f72(GE_context* ac, T0* C, T6 a1);
/* STRING_8.keep_tail */
extern void T17f75(GE_context* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.nested_pathname */
extern T0* T121f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.nested_pathname */
extern T0* T120f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.generate_c_code */
extern void T74f583(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.dummy_feature */
extern unsigned char ge1018os8326;
extern T0* ge1018ov8326;
extern T0* T74f212(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.make */
extern T0* T247c50(GE_context* ac, T0* a1, T0* a2, T0* a3);
extern T1 T247f50ot1(T0* a1, T0** a2);
/* ET_FORMAL_COMMA_ARGUMENT.name */
extern T0* T1556f5(GE_context* ac, T0* C);
/* ET_IDENTIFIER.identifier */
extern T0* T181f77(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.name */
extern T0* T264f5(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.put_last */
extern void T268f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].force */
extern void T654f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].fill_with */
extern void T653f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].extend */
extern void T653f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.fixed_array */
extern unsigned char ge1005os7522;
extern T0* ge1005ov7522;
extern T0* T268f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].default_create */
extern T0* T654c3(GE_context* ac);
/* ET_FORMAL_COMMA_ARGUMENT.type */
extern T0* T1556f4(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.type */
extern T0* T264f4(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.formal_argument */
extern T0* T261f7(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_COMMA_ARGUMENT.formal_argument */
extern T0* T1556f6(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.formal_argument */
extern T0* T264f6(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.item */
extern T0* T261f6(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.make_with_capacity */
extern T0* T268c9(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].make */
extern T0* T654f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].make_empty */
extern T0* T653c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_SYSTEM.set_type_of_type_feature */
extern void T71f79(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T237f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T79f140(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_result_dynamic_types */
extern void T79f141(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_giaaa_error */
extern void T36f178(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_internal_error */
extern void T36f188(GE_context* ac, T0* C, T0* a1);
/* KL_STANDARD_FILES.error */
extern unsigned char ge259os13356;
extern T0* ge259ov13356;
extern T0* T130f1(GE_context* ac, T0* C);
/* KL_STDERR_FILE.make */
extern T0* T131c5(GE_context* ac);
/* ET_ERROR_HANDLER.std */
extern unsigned char ge257os1979;
extern T0* ge257ov1979;
extern T0* T36f20(GE_context* ac, T0* C);
/* KL_STANDARD_FILES.default_create */
extern T0* T130c4(GE_context* ac);
/* ET_ERROR_HANDLER.set_has_internal_error */
extern void T36f194(GE_context* ac, T0* C, T1 a1);
/* ET_INTERNAL_ERROR.make_giaaa */
extern T0* T530c13(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.report_giaaa_error */
extern void T77f179(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_internal_error */
extern void T77f188(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.std */
extern T0* T77f20(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.set_has_internal_error */
extern void T77f193(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.error_handler */
extern T0* T79f113(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_system */
extern T0* T79f101(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_fatal_error */
extern void T79f131(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.create_meta_type */
extern void T71f78(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.meta_type */
extern T0* T71f61(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.make_generic */
extern T0* T80c106(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.put_first */
extern void T251f27(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].force */
extern void T651f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T648f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].extend */
extern void T648f10(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge866os12638;
extern T0* ge866ov12638;
extern T0* T251f12(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T651c3(GE_context* ac);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T251c26(GE_context* ac, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T251f26p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T651f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T648c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.right_bracket_symbol */
extern unsigned char ge807os11712;
extern T0* ge807ov11712;
extern T0* T81f223(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_bracket */
extern T0* T345c72(GE_context* ac);
/* ET_SYMBOL.make_leaf */
extern void T345f75(GE_context* ac, T0* C);
/* ET_SYMBOL.tokens */
extern unsigned char ge800os2020;
extern T0* ge800ov2020;
extern T0* T345f3(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_create */
extern T0* T81c1291(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_bracket_symbol */
extern unsigned char ge807os11707;
extern T0* ge807ov11707;
extern T0* T81f222(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.make */
extern T0* T649c102(GE_context* ac);
/* ET_BRACKET_SYMBOL.make_leaf */
extern void T649f103(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.tokens */
extern T0* T649f71(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T251f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].item */
extern T0* T233f11(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T237f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T79f100(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.make */
extern T0* T532c15(GE_context* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type */
extern void T532f19(GE_context* ac, T0* C, T0* a1);
extern T1 T532f19ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_TYPE_HASH_LIST.force_last */
extern void T272f22(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].force */
extern void T640f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].fill_with */
extern void T639f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].extend */
extern void T639f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.fixed_array */
extern unsigned char ge1002os7522;
extern T0* ge1002ov7522;
extern T0* T272f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].default_create */
extern T0* T640c3(GE_context* ac);
/* ET_DYNAMIC_TYPE_HASH_LIST.hash_position */
extern T6 T272f12(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.modulus */
extern T6 T272f15(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_HASH_LIST.resize */
extern void T272f18(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.special_integer_ */
extern T0* T272f7(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T640f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T639f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.new_modulus */
extern T6 T272f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.new_capacity */
extern T6 T272f13(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.capacity */
extern T6 T272f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_HASH_LIST.put_last */
extern void T272f19(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.append_last */
extern void T272f21(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.make_with_capacity */
extern T0* T272c17(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].make */
extern T0* T640f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].make_empty */
extern T0* T639c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_FEATURE.builtin_internal_feature */
extern T6 T247f20(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.object_id_dynamic_type_set */
extern T0* T237f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.builtin_identified_feature */
extern T6 T247f18(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.mark_type_alive */
extern void T237f14(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.set_regular */
extern void T309f54(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_regular */
extern void T247f52(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.item */
extern T0* T310f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.current_system */
extern T0* T237f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_type_alive */
extern void T79f121(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.dynamic_type */
extern T0* T71f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.set_index */
extern void T82f216(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].is_empty */
extern T1 T233f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_fatal_error */
extern void T71f76(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].last */
extern T0* T233f6(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_type_mark */
extern unsigned char ge807os11677;
extern T0* ge807ov11677;
extern T0* T81f18(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_separate_mark */
extern void T344f16(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLICIT_TYPE_MARK.set_attached_mark */
extern void T344f15(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLICIT_TYPE_MARK.make */
extern T0* T344c14(GE_context* ac);
/* ET_DYNAMIC_SYSTEM.tokens */
extern T0* T71f60(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.propagate_type_of_type_result_type */
extern void T71f77(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].force_last */
extern void T233f15(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].resize */
extern void T233f18(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T233f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].extendible */
extern T1 T233f9(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.new_dynamic_type */
extern T0* T71f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.make */
extern T0* T238c71(GE_context* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type */
extern void T273f17(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make_empty */
extern T0* T273c13(GE_context* ac, T0* a1);
/* ET_DYNAMIC_TYPE.empty_features */
extern unsigned char ge998os15806;
extern T0* ge998ov15806;
extern T0* T238f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.make */
extern T0* T308c12(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].make */
extern T0* T704f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].make_empty */
extern T0* T701c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.fixed_array */
extern unsigned char ge966os7522;
extern T0* ge966ov7522;
extern T0* T308f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].default_create */
extern T0* T704c3(GE_context* ac);
/* ET_CLASS.hash_code */
extern T6 T82f190(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_predicate_type */
extern T0* T71f57(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.make */
extern T0* T333c74(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_FUNCTION_TYPE.make_type */
extern void T333f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.empty_features */
extern T0* T333f65(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.empty_dynamic_type_sets */
extern unsigned char ge991os7163;
extern T0* ge991ov7163;
extern T0* T71f58(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.make */
extern T0* T268c14(GE_context* ac);
/* ET_CLASS.is_predicate_class */
extern T1 T82f69(GE_context* ac, T0* C);
/* ET_CLASS.class_codes */
extern unsigned char ge798os12517;
extern T0* ge798ov12517;
extern T0* T82f118(GE_context* ac, T0* C);
/* ET_CLASS_CODES.default_create */
extern T0* T397c35(GE_context* ac);
/* ET_DYNAMIC_SYSTEM.new_function_type */
extern T0* T71f56(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.new_procedure_type */
extern T0* T71f55(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.make */
extern T0* T334c74(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.make_type */
extern void T334f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.empty_features */
extern T0* T334f66(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_type_type */
extern T0* T71f54(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_class */
extern T1 T82f124(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_typed_pointer_type */
extern T0* T71f53(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_typed_pointer_class */
extern T1 T82f68(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_array_type */
extern T0* T71f52(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_array_class */
extern T1 T82f67(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_tuple_type */
extern T0* T71f51(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.make */
extern T0* T305c73(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TYPE_SET_LIST.item */
extern T0* T268f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.make_type */
extern void T305f81(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.empty_features */
extern T0* T305f64(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_special_type */
extern T0* T71f50(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.make */
extern T0* T322c73(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.make_type */
extern void T322f81(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.empty_features */
extern T0* T322f64(GE_context* ac, T0* C);
/* ET_CLASS.is_special_class */
extern T1 T82f65(GE_context* ac, T0* C);
/* ET_CLASS.is_tuple_class */
extern T1 T82f66(GE_context* ac, T0* C);
/* ET_CLASS.is_generic */
extern T1 T82f128(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_function_feature */
extern T6 T81f83(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.item_feature_name */
extern unsigned char ge807os11560;
extern T0* ge807ov11560;
extern T0* T81f78(GE_context* ac, T0* C);
/* ET_CLASS.is_function_class */
extern T1 T82f49(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_procedure_feature */
extern T6 T81f86(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.call_feature_name */
extern unsigned char ge807os11448;
extern T0* ge807ov11448;
extern T0* T81f221(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.tokens */
extern T0* T247f39(GE_context* ac, T0* C);
/* ET_CLASS.is_procedure_class */
extern T1 T82f48(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.empty_dynamic_type_sets */
extern unsigned char ge965os16848;
extern T0* ge965ov16848;
extern T0* T247f33(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.make */
extern T0* T527c72(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.empty_clients */
extern unsigned char ge807os12254;
extern T0* ge807ov12254;
extern T0* T81f138(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.make */
extern T0* T468c12(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].make */
extern T0* T1007f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].make_empty */
extern T0* T1008c5(GE_context* ac, T6 a1);
/* ET_CLIENT_LIST.fixed_array */
extern unsigned char ge507os12638;
extern T0* ge507ov12638;
extern T0* T468f3(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].default_create */
extern T0* T1007c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.end_keyword */
extern unsigned char ge807os11738;
extern T0* ge807ov11738;
extern T0* T81f74(GE_context* ac, T0* C);
/* ET_KEYWORD.make_end */
extern T0* T396c37(GE_context* ac);
/* ET_KEYWORD.make_token */
extern void T396f39(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_leaf */
extern void T396f40(GE_context* ac, T0* C);
/* ET_KEYWORD.tokens */
extern T0* T396f19(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.tokens */
extern T0* T527f35(GE_context* ac, T0* C);
/* ET_IDENTIFIER.make */
extern T0* T181c106(GE_context* ac, T0* a1);
/* ET_IDENTIFIER.make_with_hash_code */
extern void T181f116(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_with_hash_code */
extern T0* T181c116(GE_context* ac, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_leaf */
extern void T181f117(GE_context* ac, T0* C);
/* ET_IDENTIFIER.new_hash_code */
extern T6 T181f9(GE_context* ac, T0* C, T0* a1);
/* CHARACTER_8.upper */
extern T2 T2f21(GE_context* ac, T2* C);
/* CHARACTER_8.is_lower */
extern T1 T2f24(GE_context* ac, T2* C);
/* ET_C_GENERATOR.close_cpp_file */
extern void T74f614(GE_context* ac, T0* C);
/* ET_C_GENERATOR.close_c_file */
extern void T74f613(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].wipe_out */
extern void T298f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T298f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T298f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T298f41(GE_context* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_TYPE].keep_head */
extern void T639f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].set_count */
extern void T639f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T298f40(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].keep_head */
extern void T701f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].set_count */
extern void T701f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].unset_found_item */
extern void T298f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T298f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T703f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].set_after */
extern void T703f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].wipe_out */
extern void T297f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].slots_wipe_out */
extern void T297f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].clashes_wipe_out */
extern void T297f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].key_storage_wipe_out */
extern void T297f47(GE_context* ac, T0* C);
/* SPECIAL [ET_INLINE_CONSTANT].keep_head */
extern void T698f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].set_count */
extern void T698f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].item_storage_wipe_out */
extern void T297f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].unset_found_item */
extern void T297f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].move_all_cursors_after */
extern void T297f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].set_next_cursor */
extern void T697f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].set_after */
extern void T697f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].wipe_out */
extern void T296f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_wipe_out */
extern void T296f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_wipe_out */
extern void T296f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_wipe_out */
extern void T296f48(GE_context* ac, T0* C);
/* SPECIAL [ET_FEATURE].keep_head */
extern void T692f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].set_count */
extern void T692f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_wipe_out */
extern void T296f47(GE_context* ac, T0* C);
/* SPECIAL [ET_CONSTANT].keep_head */
extern void T694f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CONSTANT].set_count */
extern void T694f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].unset_found_item */
extern void T296f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].move_all_cursors_after */
extern void T296f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_next_cursor */
extern void T693f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_after */
extern void T693f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].wipe_out */
extern void T295f31(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_wipe_out */
extern void T295f43(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].clashes_wipe_out */
extern void T295f42(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].key_storage_wipe_out */
extern void T295f41(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].item_storage_wipe_out */
extern void T295f40(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].unset_found_item */
extern void T295f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].move_all_cursors_after */
extern void T295f39(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_next_cursor */
extern void T689f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_after */
extern void T689f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].wipe_out */
extern void T300f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_wipe_out */
extern void T300f59(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_wipe_out */
extern void T300f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_wipe_out */
extern void T300f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_wipe_out */
extern void T300f56(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].unset_found_item */
extern void T300f55(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].move_all_cursors_after */
extern void T300f54(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_next_cursor */
extern void T706f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_after */
extern void T706f9(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].wipe_out */
extern void T76f43(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].slots_wipe_out */
extern void T76f61(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].clashes_wipe_out */
extern void T76f60(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].key_storage_wipe_out */
extern void T76f59(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].item_storage_wipe_out */
extern void T76f58(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].unset_found_item */
extern void T76f44(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].move_all_cursors_after */
extern void T76f57(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].set_next_cursor */
extern void T368f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_after */
extern void T368f10(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].forth */
extern void T300f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_forth */
extern void T300f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].add_traversing_cursor */
extern void T300f67(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_position */
extern void T706f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].remove_traversing_cursor */
extern void T300f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_item */
extern T6 T300f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_for_iteration */
extern T0* T300f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_key */
extern T0* T300f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_item */
extern T0* T300f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_for_iteration */
extern T1 T300f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_item */
extern T1 T300f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_item */
extern T1 T300f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].after */
extern T1 T300f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_after */
extern T1 T300f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].after */
extern T1 T706f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].start */
extern void T300f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_start */
extern void T300f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_off */
extern T1 T300f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].off */
extern T1 T706f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].is_empty */
extern T1 T300f32(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].forth */
extern void T76f42(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_forth */
extern void T76f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].add_traversing_cursor */
extern void T76f67(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_position */
extern void T368f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].remove_traversing_cursor */
extern void T76f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].clashes_item */
extern T6 T76f19(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.include_runtime_c_file */
extern void T74f612(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.include_file */
extern void T74f675(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [STRING_8].item_for_iteration */
extern T0* T76f31(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_item */
extern T0* T76f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].item_storage_item */
extern T0* T76f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].after */
extern T1 T76f36(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_after */
extern T1 T76f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].after */
extern T1 T368f7(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].start */
extern void T76f41(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_start */
extern void T76f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].cursor_off */
extern T1 T76f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].off */
extern T1 T368f5(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].is_empty */
extern T1 T76f32(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_end_extern_c */
extern void T74f611(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_main_function */
extern void T74f610(GE_context* ac, T0* C);
/* ET_C_GENERATOR.dedent */
extern void T74f657(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.remove_last */
extern void T268f11(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].keep_head */
extern void T654f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].keep_head */
extern void T653f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].set_count */
extern void T653f10(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_creation_expression */
extern void T74f674(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].wipe_out */
extern void T275f13(GE_context* ac, T0* C);
/* SPECIAL [ET_EXPRESSION].keep_head */
extern void T658f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION].set_count */
extern void T658f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].move_all_cursors_after */
extern void T275f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_next_cursor */
extern void T660f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_after */
extern void T660f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attachment_expression */
extern void T74f716(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_boxed_attribute_item_access */
extern void T74f682(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_void_expression */
extern void T74f693(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_expression */
extern void T74f692(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_item_name */
extern void T74f690(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_expression */
extern void T74f737(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_cast */
extern void T74f731(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_name */
extern void T74f680(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [INTEGER_32].wipe_out */
extern void T271f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].move_all_cursors_after */
extern void T271f23(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_next_cursor */
extern void T656f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_after */
extern void T656f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_last_new */
extern void T54f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [INTEGER_32].item */
extern T6 T271f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].sort */
extern void T271f18(GE_context* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort */
extern void T338f3(GE_context* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort_with_comparator */
extern void T338f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [INTEGER_32].subsort_with_comparator */
extern void T338f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ARRAY [INTEGER_32].force */
extern void T521f12(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].capacity */
extern T6 T521f7(GE_context* ac, T0* C);
/* ARRAY [INTEGER_32].set_area */
extern void T521f15(GE_context* ac, T0* C, T0* a1);
/* ARRAY [INTEGER_32].make_empty_area */
extern void T521f14(GE_context* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].additional_space */
extern T6 T521f6(GE_context* ac, T0* C);
/* ARRAY [INTEGER_32].empty_area */
extern T1 T521f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].swap */
extern void T271f24(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER_32].replace */
extern void T271f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].less_than */
extern T1 T524f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].item */
extern T6 T521f4(GE_context* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].put */
extern void T521f11(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.dynamic_type_id_sorter */
extern unsigned char ge1018os8278;
extern T0* ge1018ov8278;
extern T0* T74f184(GE_context* ac, T0* C);
/* DS_QUICK_SORTER [INTEGER_32].make */
extern T0* T338c2(GE_context* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].make */
extern T0* T524c2(GE_context* ac);
/* DS_ARRAYED_LIST [INTEGER_32].is_empty */
extern T1 T271f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].put_last */
extern void T271f20(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].resize */
extern void T271f19(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.argument_type_set_in_feature */
extern T0* T74f206(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.argument_type_set */
extern T0* T309f23(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.argument_type_set */
extern T0* T247f24(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].item */
extern T0* T275f6(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_creation_procedure_name */
extern void T74f730(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_type_name */
extern void T74f677(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.new_temp_variable */
extern T0* T74f116(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].force_last */
extern void T271f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_capacity */
extern T6 T271f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].extendible */
extern T1 T271f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].force_last */
extern void T270f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].force */
extern void T212f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].fill_with */
extern void T211f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].extend */
extern void T211f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].resize */
extern void T270f12(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].aliased_resized_area */
extern T0* T212f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IDENTIFIER].aliased_resized_area */
extern T0* T211f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_capacity */
extern T6 T270f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].extendible */
extern T1 T270f7(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_temporary */
extern void T181f113(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].item */
extern T0* T270f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].replace */
extern void T233f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.same_declaration_types */
extern T1 T74f445(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_writable */
extern void T74f729(GE_context* ac, T0* C, T0* a1);
extern T1 T74f729ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_attribute_access */
extern void T74f655(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_name */
extern void T74f685(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_type_cast */
extern void T74f650(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.current_keyword */
extern unsigned char ge807os11731;
extern T0* ge807ov11731;
extern T0* T81f19(GE_context* ac, T0* C);
/* ET_CURRENT.make */
extern T0* T285c30(GE_context* ac);
/* ET_CURRENT.make_token */
extern void T285f32(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.make_leaf */
extern void T285f33(GE_context* ac, T0* C);
/* ET_CURRENT.tokens */
extern T0* T285f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.tokens */
extern T0* T74f111(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].remove */
extern void T206f43(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].remove_position */
extern void T206f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_put */
extern void T206f73(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_put */
extern void T206f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_keep_head */
extern void T206f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_keep_head */
extern void T206f71(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].keep_head */
extern void T211f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].set_count */
extern void T211f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_put */
extern void T206f60(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].slots_put */
extern void T206f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_item */
extern T6 T206f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].move_cursors_forth */
extern void T206f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_position */
extern void T629f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_next_cursor */
extern void T629f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_after */
extern void T629f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].internal_set_key_equality_tester */
extern void T206f69(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_equality_tester */
extern T0* T206f24(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].slots_item */
extern T6 T206f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].hash_position */
extern T6 T206f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_item */
extern T0* T206f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_item */
extern T0* T206f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].search_position */
extern void T206f44(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TESTER.test */
extern T1 T301f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.same_identifier */
extern T1 T181f23(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.same_case_insensitive */
extern T1 T34f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* CHARACTER_8.lower */
extern T2 T2f20(GE_context* ac, T2* C);
/* CHARACTER_8.is_upper */
extern T1 T2f23(GE_context* ac, T2* C);
/* UC_UNICODE_ROUTINES.lower_code */
extern T6 T771f1(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_codes */
extern unsigned char ge327os29055;
extern T0* ge327ov29055;
extern T0* T771f2(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_plane */
extern unsigned char ge327os29054;
extern T0* ge327ov29054;
extern T0* T771f5(GE_context* ac, T0* C);
/* SPECIAL [ARRAY [INTEGER_32]].make_filled */
extern T0* T1437c4(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [ARRAY [INTEGER_32]].fill_with */
extern void T1437f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ARRAY [INTEGER_32]].extend */
extern void T1437f8(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [ARRAY [INTEGER_32]].make_empty */
extern void T1437f6(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.empty_lower_code_segment */
extern unsigned char ge327os29041;
extern T0* ge327ov29041;
extern T0* T771f12(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.to_integer */
extern T6 T231f4(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.integer_ */
extern T0* T771f23(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1 */
extern unsigned char ge327os29053;
extern T0* ge327ov29053;
extern T0* T771f4(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1_segment_4 */
extern unsigned char ge327os29052;
extern T0* ge327ov29052;
extern T0* T771f22(GE_context* ac, T0* C);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make_filled */
extern T0* T1438c4(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].fill_with */
extern void T1438f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].extend */
extern void T1438f8(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make_empty */
extern void T1438f6(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_code_plane_0 */
extern unsigned char ge327os29051;
extern T0* ge327ov29051;
extern T0* T771f3(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_255 */
extern unsigned char ge327os29050;
extern T0* ge327ov29050;
extern T0* T771f21(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_167 */
extern unsigned char ge327os29049;
extern T0* ge327ov29049;
extern T0* T771f20(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_166 */
extern unsigned char ge327os29048;
extern T0* ge327ov29048;
extern T0* T771f19(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_44 */
extern unsigned char ge327os29047;
extern T0* ge327ov29047;
extern T0* T771f18(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_36 */
extern unsigned char ge327os29046;
extern T0* ge327ov29046;
extern T0* T771f17(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_33 */
extern unsigned char ge327os29045;
extern T0* ge327ov29045;
extern T0* T771f16(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_31 */
extern unsigned char ge327os29044;
extern T0* ge327ov29044;
extern T0* T771f15(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_30 */
extern unsigned char ge327os29043;
extern T0* ge327ov29043;
extern T0* T771f14(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_16 */
extern unsigned char ge327os29042;
extern T0* ge327ov29042;
extern T0* T771f13(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_5 */
extern unsigned char ge327os29040;
extern T0* ge327ov29040;
extern T0* T771f11(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_4 */
extern unsigned char ge327os29039;
extern T0* ge327ov29039;
extern T0* T771f10(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_3 */
extern unsigned char ge327os29038;
extern T0* ge327ov29038;
extern T0* T771f9(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_2 */
extern unsigned char ge327os29037;
extern T0* ge327ov29037;
extern T0* T771f8(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_1 */
extern unsigned char ge327os29036;
extern T0* ge327ov29036;
extern T0* T771f7(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_0 */
extern unsigned char ge327os29035;
extern T0* ge327ov29035;
extern T0* T771f6(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.unicode */
extern unsigned char ge308os3807;
extern T0* ge308ov3807;
extern T0* T34f13(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.default_create */
extern T0* T771c52(GE_context* ac);
/* ET_IDENTIFIER.string_ */
extern T0* T181f36(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].unset_found_item */
extern void T206f49(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_local_variable */
extern void T74f744(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_local_name */
extern void T74f749(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_IDENTIFIER].has */
extern T1 T206f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].force_last */
extern void T206f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].resize */
extern void T206f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_resize */
extern void T206f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].special_integer_ */
extern T0* T206f35(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_resize */
extern void T206f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_resize */
extern void T206f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].slots_resize */
extern void T206f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_modulus */
extern T6 T206f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_capacity */
extern T6 T206f19(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_across_cursor */
extern void T74f743(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_cursor_name */
extern void T74f748(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_temporary_variable */
extern void T74f742(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_temporary */
extern T1 T181f28(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_formal_argument */
extern void T74f741(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_argument_name */
extern void T74f700(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_STACK [ET_EXPRESSION].force */
extern void T274f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].force */
extern void T659f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].fill_with */
extern void T658f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].extend */
extern void T658f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].resize */
extern void T274f11(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].aliased_resized_area */
extern T0* T659f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION].aliased_resized_area */
extern T0* T658f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].new_capacity */
extern T6 T274f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].extendible */
extern T1 T274f6(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.fill_call_operands */
extern void T74f728(GE_context* ac, T0* C, T6 a1);
extern T1 T74f728ot1(T0* a1, T0** a2);
/* DS_ARRAYED_STACK [ET_EXPRESSION].prune */
extern void T274f10(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.mark_temp_variable_free */
extern void T74f656(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.is_temp_variable_frozen */
extern T1 T74f224(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].i_th */
extern T0* T274f5(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].put_last */
extern void T275f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].resize */
extern void T275f16(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_operand */
extern void T74f727(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_FROM_EXPRESSION.arguments */
extern T0* T1854f14(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.arguments */
extern T0* T325f6(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.name */
extern T0* T1854f17(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.name */
extern T0* T325f5(GE_context* ac, T0* C);
/* ET_C_GENERATOR.dynamic_type_set */
extern T0* T74f194(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.item */
extern T0* T277f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.valid_index */
extern T1 T277f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.valid_index */
extern T1 T268f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.force_last */
extern void T268f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.resize */
extern void T268f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T654f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T653f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.new_capacity */
extern T6 T268f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.capacity */
extern T6 T268f6(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.make */
extern T0* T325c25(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.create_keyword */
extern unsigned char ge807os11729;
extern T0* ge807ov11729;
extern T0* T81f230(GE_context* ac, T0* C);
/* ET_KEYWORD.make_create */
extern T0* T396c41(GE_context* ac);
/* ET_CREATE_EXPRESSION.tokens */
extern T0* T325f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.name */
extern T0* T326f3(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.make */
extern T0* T326c5(GE_context* ac, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_show_console_call */
extern void T74f673(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_routine_name */
extern void T74f671(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T74f671ot1(T0* a1, T0** a2);
/* ET_CLASS.upper_name */
extern T0* T82f121(GE_context* ac, T0* C);
/* ET_IDENTIFIER.upper_name */
extern T0* T181f7(GE_context* ac, T0* C);
/* UC_UTF8_STRING.as_upper */
extern T0* T846f25(GE_context* ac, T0* C);
/* UC_UTF8_STRING.to_upper */
extern void T846f83(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code */
extern T6 T771f29(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.upper_codes */
extern unsigned char ge329os29080;
extern T0* ge329ov29080;
extern T0* T771f30(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_plane */
extern unsigned char ge329os29079;
extern T0* ge329ov29079;
extern T0* T771f33(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_segment */
extern unsigned char ge329os29065;
extern T0* ge329ov29065;
extern T0* T771f40(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1 */
extern unsigned char ge329os29078;
extern T0* ge329ov29078;
extern T0* T771f32(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1_segment_4 */
extern unsigned char ge329os29077;
extern T0* ge329ov29077;
extern T0* T771f51(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0 */
extern unsigned char ge329os29076;
extern T0* ge329ov29076;
extern T0* T771f31(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_255 */
extern unsigned char ge329os29075;
extern T0* ge329ov29075;
extern T0* T771f50(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_167 */
extern unsigned char ge329os29074;
extern T0* ge329ov29074;
extern T0* T771f49(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_166 */
extern unsigned char ge329os29073;
extern T0* ge329ov29073;
extern T0* T771f48(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_45 */
extern unsigned char ge329os29072;
extern T0* ge329ov29072;
extern T0* T771f47(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_44 */
extern unsigned char ge329os29071;
extern T0* ge329ov29071;
extern T0* T771f46(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_36 */
extern unsigned char ge329os29070;
extern T0* ge329ov29070;
extern T0* T771f45(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_33 */
extern unsigned char ge329os29069;
extern T0* ge329ov29069;
extern T0* T771f44(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_31 */
extern unsigned char ge329os29068;
extern T0* ge329ov29068;
extern T0* T771f43(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_30 */
extern unsigned char ge329os29067;
extern T0* ge329ov29067;
extern T0* T771f42(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_29 */
extern unsigned char ge329os29066;
extern T0* ge329ov29066;
extern T0* T771f41(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_5 */
extern unsigned char ge329os29064;
extern T0* ge329ov29064;
extern T0* T771f39(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_4 */
extern unsigned char ge329os29063;
extern T0* ge329ov29063;
extern T0* T771f38(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_3 */
extern unsigned char ge329os29062;
extern T0* ge329ov29062;
extern T0* T771f37(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_2 */
extern unsigned char ge329os29061;
extern T0* ge329ov29061;
extern T0* T771f36(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_1 */
extern unsigned char ge329os29060;
extern T0* ge329ov29060;
extern T0* T771f35(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_0 */
extern unsigned char ge329os29059;
extern T0* ge329ov29059;
extern T0* T771f34(GE_context* ac, T0* C);
/* UC_UTF8_STRING.unicode */
extern T0* T846f53(GE_context* ac, T0* C);
/* STRING_8.as_upper */
extern T0* T17f29(GE_context* ac, T0* C);
/* STRING_8.to_upper */
extern void T17f66(GE_context* ac, T0* C);
/* STRING_8.to_upper_area */
extern void T17f68(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_escaped_string */
extern void T74f672(GE_context* ac, T0* C, T0* a1);
/* UT_INTEGER_FORMATTER.put_octal_integer */
extern void T352f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.integer_formatter_ */
extern unsigned char ge177os9346;
extern T0* ge177ov9346;
extern T0* T74f209(GE_context* ac, T0* C);
/* UT_INTEGER_FORMATTER.default_create */
extern T0* T352c1(GE_context* ac);
/* ET_C_GENERATOR.print_temp_name */
extern void T74f649(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.temp_variable */
extern unsigned char ge1018os8298;
extern T0* ge1018ov8298;
extern T0* T74f130(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_type_declaration */
extern void T74f645(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_eif_any_type_name */
extern void T74f616(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_indentation */
extern void T74f647(GE_context* ac, T0* C);
/* ET_C_GENERATOR.indent */
extern void T74f646(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_types_array */
extern void T74f609(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].found_item */
extern T0* T298f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T298f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].found */
extern T1 T298f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].search */
extern void T298f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].search_position */
extern void T298f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].hash_position */
extern T6 T298f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T298f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T298f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].slots_item */
extern T6 T298f21(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_dynamic_type_id_set_constants */
extern void T74f608(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].forth */
extern void T54f73(GE_context* ac, T0* C);
/* UC_UTF8_STRING.occurrences */
extern T6 T846f23(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.code_occurrences */
extern T6 T846f45(GE_context* ac, T0* C, T6 a1);
/* STRING_8.occurrences */
extern T6 T17f27(GE_context* ac, T0* C, T2 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_for_iteration */
extern T0* T54f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_for_iteration */
extern T0* T54f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].after */
extern T1 T54f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_after */
extern T1 T54f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].start */
extern void T54f72(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_init_const_function */
extern void T74f607(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].forth */
extern void T297f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_forth */
extern void T297f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].add_traversing_cursor */
extern void T297f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].set_position */
extern void T697f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].remove_traversing_cursor */
extern void T297f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].clashes_item */
extern T6 T297f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].item_for_iteration */
extern T0* T297f20(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_item */
extern T0* T297f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].item_storage_item */
extern T0* T297f36(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.constant */
extern T0* T1267f11(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_inline_constant_name */
extern void T74f669(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].key_for_iteration */
extern T0* T297f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_key */
extern T0* T297f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].key_storage_item */
extern T0* T297f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].after */
extern T1 T297f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_after */
extern T1 T297f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].after */
extern T1 T697f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].start */
extern void T297f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_start */
extern void T297f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_off */
extern T1 T297f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].off */
extern T1 T697f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].is_empty */
extern T1 T297f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].forth */
extern void T296f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_forth */
extern void T296f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].add_traversing_cursor */
extern void T296f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_position */
extern void T693f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].remove_traversing_cursor */
extern void T296f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_item */
extern T6 T296f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_for_iteration */
extern T0* T296f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_item */
extern T0* T296f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_item */
extern T0* T296f20(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_once_value_name */
extern void T74f668(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_once_status_name */
extern void T74f670(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_FEATURE].has */
extern T1 T295f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].search_position */
extern void T295f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].hash_position */
extern T6 T295f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].key_storage_item */
extern T0* T295f17(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_item */
extern T0* T295f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].clashes_item */
extern T6 T295f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].key_equality_tester */
extern T0* T295f24(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_item */
extern T6 T295f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_for_iteration */
extern T0* T296f22(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_key */
extern T0* T296f27(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_item */
extern T0* T296f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].after */
extern T1 T296f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_after */
extern T1 T296f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].after */
extern T1 T693f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].start */
extern void T296f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_start */
extern void T296f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_off */
extern T1 T296f29(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].off */
extern T1 T693f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].is_empty */
extern T1 T296f28(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_constants_declaration */
extern void T74f606(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_functions */
extern void T74f605(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].wipe_out */
extern void T279f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T279f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T279f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T279f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T279f50(GE_context* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].keep_head */
extern void T663f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].set_count */
extern void T663f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].unset_found_item */
extern void T279f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T279f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T666f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].set_after */
extern void T666f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].forth */
extern void T279f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_forth */
extern void T279f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T279f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].set_position */
extern void T666f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T279f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T279f24(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_deep_twin_polymorphic_call_function */
extern void T74f667(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_entity_value */
extern void T74f705(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_default_name */
extern void T74f651(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].wipe_out */
extern void T276f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_wipe_out */
extern void T276f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_wipe_out */
extern void T276f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_wipe_out */
extern void T276f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_wipe_out */
extern void T276f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].unset_found_item */
extern void T276f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].move_all_cursors_after */
extern void T276f45(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].set_next_cursor */
extern void T662f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].set_after */
extern void T662f7(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_binary_search_polymorphic_call */
extern void T74f726(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_adapted_deep_twin_call */
extern void T74f725(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_deep_twin_call */
extern T0* T74f725ac1(T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_deep_twin_call */
extern void T74f740(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_target_expression */
extern void T74f720(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_adapted_expression */
extern void T74f733(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item */
extern T0* T276f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_item */
extern T0* T276f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].search_position */
extern void T276f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].hash_position */
extern T6 T276f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_item */
extern T6 T276f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_item */
extern T6 T276f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_item */
extern T6 T276f21(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_attribute_type_id_access */
extern void T74f701(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_type_id_name */
extern void T74f684(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].force_last */
extern void T276f36(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_put */
extern void T276f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_put */
extern void T276f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_put */
extern void T276f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].resize */
extern void T276f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_resize */
extern void T276f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].special_integer_ */
extern T0* T276f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_resize */
extern void T276f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_resize */
extern void T276f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_resize */
extern void T276f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_modulus */
extern T6 T276f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_capacity */
extern T6 T276f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_put */
extern void T276f43(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.print_current_name */
extern void T74f699(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T279f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_item */
extern T0* T279f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T279f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T279f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_after */
extern T1 T279f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T666f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].start */
extern void T279f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_start */
extern void T279f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_off */
extern T1 T279f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].off */
extern T1 T666f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].is_empty */
extern T1 T279f22(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_function */
extern void T74f666(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f666ac1(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #2 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f666ac2(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #3 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f666ac3(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #4 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f666ac4(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #5 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f666ac5(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #6 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f666ac6(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #7 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f666ac7(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #8 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f666ac8(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #9 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f666ac9(T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #10 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f666ac10(T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #11 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f666ac11(T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #12 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f666ac12(T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T74f666ot1(T0* a1, T0** a2);
extern T1 T74f666ot2(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_attribute_tuple_item_access */
extern void T74f665(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_tuple_item_name */
extern void T74f688(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_special_indexed_item_access */
extern void T74f723(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.reset_temp_variables */
extern void T74f658(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].wipe_out */
extern void T233f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T233f17(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T641f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_after */
extern void T641f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_set_deep_twined_attribute */
extern void T74f724(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_deep_twined_attribute */
extern void T74f739(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_types */
extern void T273f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].force_last_new */
extern void T279f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_put */
extern void T279f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_put */
extern void T279f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].force */
extern void T664f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].fill_with */
extern void T663f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].extend */
extern void T663f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_put */
extern void T279f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_put */
extern void T279f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_item */
extern T6 T279f38(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].hash_position */
extern T6 T279f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].resize */
extern void T279f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_resize */
extern void T279f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T279f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T279f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T279f64(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T664f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T663f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T279f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_resize */
extern void T279f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T279f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T279f34(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.force_last */
extern void T277f11(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.fixed_array */
extern unsigned char ge990os7522;
extern T0* ge990ov7522;
extern T0* T277f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].default_create */
extern T0* T664c3(GE_context* ac);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.resize */
extern void T277f9(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.new_capacity */
extern T6 T277f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.capacity */
extern T6 T277f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make */
extern T0* T273c18(GE_context* ac, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset */
extern void T273f16(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.wipe_out */
extern void T272f20(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].keep_head */
extern void T640f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].found_item */
extern T0* T279f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].found */
extern T1 T279f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].search */
extern void T279f43(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].search_position */
extern void T279f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].force_last */
extern void T278f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_put */
extern void T278f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_put */
extern void T278f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_item */
extern T6 T278f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].hash_position */
extern T6 T278f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].resize */
extern void T278f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_resize */
extern void T278f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T278f32(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_resize */
extern void T278f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_resize */
extern void T278f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T278f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T278f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_item */
extern T6 T278f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_resize */
extern void T278f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_modulus */
extern T6 T278f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T278f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_put */
extern void T278f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].search_position */
extern void T278f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_equality_tester */
extern T0* T278f30(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].unset_found_item */
extern void T278f44(GE_context* ac, T0* C);
/* ET_C_GENERATOR.result_type_set_in_feature */
extern T0* T74f176(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.item */
extern T0* T308f3(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_attribute_special_count_access */
extern void T74f653(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_count_name */
extern void T74f695(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.first */
extern T0* T308f4(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_special_item_access */
extern void T74f654(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_item_name */
extern void T74f687(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.result_keyword */
extern unsigned char ge807os11768;
extern T0* ge807ov11768;
extern T0* T81f20(GE_context* ac, T0* C);
/* ET_RESULT.make */
extern T0* T312c29(GE_context* ac);
/* ET_RESULT.make_token */
extern void T312f31(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT.make_leaf */
extern void T312f32(GE_context* ac, T0* C);
/* ET_RESULT.tokens */
extern T0* T312f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_special_capacity_access */
extern void T74f652(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_capacity_name */
extern void T74f694(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_result_name */
extern void T74f648(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].is_empty */
extern T1 T278f20(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].wipe_out */
extern void T294f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_wipe_out */
extern void T294f51(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_wipe_out */
extern void T294f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_wipe_out */
extern void T294f49(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_wipe_out */
extern void T294f48(GE_context* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].keep_head */
extern void T687f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].set_count */
extern void T687f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].unset_found_item */
extern void T294f43(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].move_all_cursors_after */
extern void T294f47(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_next_cursor */
extern void T686f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_after */
extern void T686f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].forth */
extern void T294f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_forth */
extern void T294f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].add_traversing_cursor */
extern void T294f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_position */
extern void T686f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].remove_traversing_cursor */
extern void T294f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_item */
extern T6 T294f23(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_manifest_tuple_function */
extern void T74f604(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_for_iteration */
extern T0* T294f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_item */
extern T0* T294f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_item */
extern T0* T294f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T294f34(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_after */
extern T1 T294f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T686f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].start */
extern void T294f36(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_start */
extern void T294f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_off */
extern T1 T294f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].off */
extern T1 T686f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].is_empty */
extern T1 T294f21(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_big_manifest_array_function */
extern void T74f603(GE_context* ac, T0* C, T0* a1);
extern T1 T74f603ot1(T0* a1, T0** a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].wipe_out */
extern void T278f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T278f52(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T278f51(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T278f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T278f49(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T278f48(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T665f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_after */
extern void T665f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].forth */
extern void T278f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_forth */
extern void T278f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T278f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_position */
extern void T665f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T278f58(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array_function */
extern void T74f602(GE_context* ac, T0* C, T0* a1);
extern T1 T74f602ot1(T0* a1, T0** a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T278f33(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_item */
extern T0* T278f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].after */
extern T1 T278f22(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_after */
extern T1 T278f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].after */
extern T1 T665f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].start */
extern void T278f36(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_start */
extern void T278f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_off */
extern T1 T278f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].off */
extern T1 T665f5(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_tuple_label_call_functions */
extern void T74f601(GE_context* ac, T0* C);
extern T1 T74f601ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_polymorphic_call_function */
extern void T74f659(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T74f659ot1(T0* a1, T0** a2);
extern T1 T74f659ot2(T0* a1, T0** a2);
/* ET_MANIFEST_TUPLE.wipe_out */
extern void T293f30(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].keep_head */
extern void T682f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].keep_head */
extern void T680f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].set_count */
extern void T680f9(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.fixed_array */
extern unsigned char ge599os12638;
extern T0* ge599ov12638;
extern T0* T293f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].default_create */
extern T0* T682c3(GE_context* ac);
/* ET_C_GENERATOR.print_binary_search_polymorphic_calls */
extern void T74f706(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T6 a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.print_named_procedure_call */
extern void T74f704(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_procedure_call */
extern void T74f736(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_inlined_procedure_call */
extern void T74f747(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_ARRAYED_LIST [ET_EXPRESSION].first */
extern T0* T275f10(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_procedure_call */
extern void T74f746(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_procedure_call */
extern void T74f765(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_set_object_comparison_call */
extern void T74f796(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_adapted_attribute_access */
extern void T74f750(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_boxed_attribute_access */
extern void T74f766(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.builtin_tuple_feature */
extern T6 T74f401(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_special_procedure_call */
extern void T74f764(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_put_call */
extern void T74f795(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_procedure_call */
extern void T74f763(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_set_item_call */
extern void T74f794(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.builtin_feature */
extern T6 T74f394(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.print_unboxed_expression */
extern void T74f719(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_procedure_call */
extern void T74f762(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_call_call */
extern void T74f793(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_routine_call_call */
extern void T74f921(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T74f921ot1(T0* a1, T0** a2);
extern T1 T74f921ot2(T0* a1, T0** a2);
extern T1 T74f921ot3(T0* a1, T0** a2);
extern T1 T74f921ot4(T0* a1, T0** a2);
extern T1 T74f921ot5(T0* a1, T0** a2);
extern T1 T74f921ot6(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_call_operands_unfrozen */
extern void T74f924(GE_context* ac, T0* C);
extern T1 T74f924ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_temp_variable_unfrozen */
extern void T74f926(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.make */
extern T0* T313c12(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_CALL_EXPRESSION.set_target */
extern void T290f25(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.new_agent_tuple_item_expression */
extern T0* T74f440(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].replace */
extern void T292f11(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_QUALIFIED_CALL_EXPRESSION.make */
extern T0* T290c24(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.make_qualified_call */
extern void T290f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_tuple_label */
extern void T181f115(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].item */
extern T0* T292f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].put_last */
extern void T292f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].force */
extern void T684f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].fill_with */
extern void T683f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].extend */
extern void T683f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].resize */
extern void T292f9(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T684f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T683f4(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.mark_call_operands_frozen */
extern void T74f923(GE_context* ac, T0* C);
extern T1 T74f923ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_temp_variable_frozen */
extern void T74f925(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset_with_types */
extern void T273f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_routine_function_name */
extern void T74f689(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_typed_default_entity_value */
extern void T74f922(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.is_procedure */
extern T1 T309f25(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_procedure */
extern T1 T247f26(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_pointer_procedure_call */
extern void T74f761(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_set_item_call */
extern void T74f792(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.builtin_pointer_feature */
extern T6 T74f399(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_memory_procedure_call */
extern void T74f760(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_free_call */
extern void T74f791(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_exception_manager_procedure_call */
extern void T74f759(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_exception_manager_developer_raise_call */
extern void T74f790(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_procedure_call */
extern void T74f758(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_set_item_call */
extern void T74f789(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_procedure_call */
extern void T74f757(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_eif_object_id_free_call */
extern void T74f788(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_procedure_call */
extern void T74f756(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_cwin_local_free_call */
extern void T74f787(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_character_procedure_call */
extern void T74f755(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_character_set_item_call */
extern void T74f786(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_procedure_call */
extern void T74f754(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_set_item_call */
extern void T74f785(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.builtin_boolean_feature */
extern T6 T74f393(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_any_procedure_call */
extern void T74f753(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_call */
extern void T74f784(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T74f784ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_info_message_call */
extern void T74f920(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_copy_call */
extern void T74f783(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_DYNAMIC_PRECURSOR.is_builtin */
extern T1 T309f19(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin */
extern T1 T247f22(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_tuple_label_setter_call */
extern void T74f735(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T74f735ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_adapted_named_query_call */
extern void T74f703(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_named_query_call */
extern T0* T74f703ac1(T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T74f703ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_adapted_query_call */
extern void T74f734(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_query_call */
extern T0* T74f734ac1(T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_query_call */
extern void T74f745(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T74f745ot1(T0* a1, T0** a2);
extern T1 T74f745ot2(T0* a1, T0** a2);
extern T1 T74f745ot3(T0* a1, T0** a2);
extern T1 T74f745ot4(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_non_inlined_query_call */
extern void T74f752(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_query_call */
extern void T74f751(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_query_call */
extern void T74f782(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_runtime_name_call */
extern void T74f919(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_type_id_call */
extern void T74f918(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_new_special_any_instance_call */
extern void T74f917(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T74f917ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_SYSTEM.is_new_instance_type */
extern T1 T71f48(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].has */
extern T1 T76f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].search_position */
extern void T76f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].hash_position */
extern T6 T76f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].key_storage_item */
extern T0* T76f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].key_equality_tester */
extern T0* T76f26(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].slots_item */
extern T6 T76f20(GE_context* ac, T0* C, T6 a1);
/* STRING_8.replace_substring_all */
extern void T17f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* SPECIAL [CHARACTER_8].resized_area_with_default */
extern T0* T15f8(GE_context* ac, T0* C, T2 a1, T6 a2);
/* detachable ARRAYED_LIST [INTEGER_32].area */
extern T0* T769f3(GE_context* ac, T0* C);
/* STRING_8_SEARCHER.substring_index_list_with_deltas */
extern T0* T768f2(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* detachable ARRAYED_LIST [INTEGER_32].extend */
extern void T769f9(GE_context* ac, T0* C, T6 a1);
/* detachable ARRAYED_LIST [INTEGER_32].additional_space */
extern T6 T769f5(GE_context* ac, T0* C);
/* detachable ARRAYED_LIST [INTEGER_32].capacity */
extern T6 T769f6(GE_context* ac, T0* C);
/* detachable ARRAYED_LIST [INTEGER_32].count */
extern T6 T769f4(GE_context* ac, T0* C);
/* detachable ARRAYED_LIST [INTEGER_32].make */
extern T0* T769c8(GE_context* ac, T6 a1);
/* STRING_8_SEARCHER.initialize_deltas */
extern void T768f7(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_new_instance_call */
extern void T74f916(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T74f916ot1(T0* a1, T0** a2);
/* ET_CLASS.is_none */
extern T1 T82f123(GE_context* ac, T0* C);
/* ET_CLASS.is_deferred */
extern T1 T82f122(GE_context* ac, T0* C);
/* ET_CLASS.has_deferred_mark */
extern T1 T82f81(GE_context* ac, T0* C);
/* ET_KEYWORD.is_deferred */
extern T1 T396f22(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_type_name_call */
extern void T74f915(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_expanded_call */
extern void T74f914(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_has_default_call */
extern void T74f913(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_count_call */
extern void T74f912(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_field_count_call */
extern void T74f911(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_default_call */
extern void T74f910(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_base_class_name_call */
extern void T74f909(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_query_call */
extern void T74f781(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_object_comparison_call */
extern void T74f908(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_count_call */
extern void T74f907(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T74f907ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_special_query_call */
extern void T74f780(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_item_call */
extern void T74f906(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_element_size_call */
extern void T74f905(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T74f905ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_special_count_call */
extern void T74f904(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_capacity_call */
extern void T74f903(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_base_address_call */
extern void T74f902(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_query_call */
extern void T74f779(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_real_call */
extern void T74f901(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_integer_64_call */
extern void T74f900(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_integer_call */
extern void T74f899(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_to_double_call */
extern void T74f898(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_times_call */
extern void T74f897(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_power_call */
extern void T74f896(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_positive_infinity_call */
extern void T74f895(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_plus_call */
extern void T74f894(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_opposite_call */
extern void T74f893(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_negative_infinity_call */
extern void T74f892(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_nan_call */
extern void T74f891(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_minus_call */
extern void T74f890(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_lt_call */
extern void T74f889(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_item_call */
extern void T74f888(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_is_positive_infinity_call */
extern void T74f887(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_is_negative_infinity_call */
extern void T74f886(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_is_nan_call */
extern void T74f885(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_identity_call */
extern void T74f884(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_floor_real_64_call */
extern void T74f883(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_floor_real_32_call */
extern void T74f882(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_divide_call */
extern void T74f881(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_ceiling_real_64_call */
extern void T74f880(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_ceiling_real_32_call */
extern void T74f879(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_query_call */
extern void T74f778(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_to_integer_32_call */
extern void T74f878(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_plus_call */
extern void T74f877(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_item_call */
extern void T74f876(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_is_default_pointer_call */
extern void T74f875(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.current_universe_impl */
extern T0* T74f223(GE_context* ac, T0* C);
/* ET_CLASS.universe */
extern T0* T82f86(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_pointer_hash_code_call */
extern void T74f874(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_query_call */
extern void T74f777(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_wide_character_bytes_call */
extern void T74f873(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_real_bytes_call */
extern void T74f872(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_pointer_bytes_call */
extern void T74f871(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_windows_call */
extern void T74f870(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vxworks_call */
extern void T74f869(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vms_call */
extern void T74f868(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_unix_call */
extern void T74f867(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_thread_capable_call */
extern void T74f866(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_scoop_capable_call */
extern void T74f865(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_mac_call */
extern void T74f864(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_dotnet_call */
extern void T74f863(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_integer_bytes_call */
extern void T74f862(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_double_bytes_call */
extern void T74f861(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_character_bytes_call */
extern void T74f860(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_boolean_bytes_call */
extern void T74f859(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_query_call */
extern void T74f776(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_find_referers_call */
extern void T74f858(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_declaration_type_cast */
extern void T74f711(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_internal_query_call */
extern void T74f775(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_internal_max_type_id_call */
extern void T74f857(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_query_call */
extern void T74f774(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_64_call */
extern void T74f856(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_32_call */
extern void T74f855(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_call */
extern void T74f854(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_double_call */
extern void T74f853(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_character_32_call */
extern void T74f852(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_character_8_call */
extern void T74f851(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_times_call */
extern void T74f850(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_power_call */
extern void T74f849(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_plus_call */
extern void T74f848(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_opposite_call */
extern void T74f847(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_mod_call */
extern void T74f846(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_minus_call */
extern void T74f845(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_lt_call */
extern void T74f844(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_item_call */
extern void T74f843(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_identity_call */
extern void T74f842(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_divide_call */
extern void T74f841(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_div_call */
extern void T74f840(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_xor_call */
extern void T74f839(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_shift_right_call */
extern void T74f838(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_shift_left_call */
extern void T74f837(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_or_call */
extern void T74f836(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_not_call */
extern void T74f835(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_and_call */
extern void T74f834(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_64_call */
extern void T74f833(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_32_call */
extern void T74f832(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_16_call */
extern void T74f831(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_8_call */
extern void T74f830(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_64_call */
extern void T74f829(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_32_call */
extern void T74f828(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_16_call */
extern void T74f827(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_8_call */
extern void T74f826(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_query_call */
extern void T74f773(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_eif_object_id_call */
extern void T74f825(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_eif_id_object_call */
extern void T74f824(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_query_call */
extern void T74f772(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_item_call */
extern void T74f823(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_query_call */
extern void T74f771(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_cwin_error_text_call */
extern void T74f822(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_character_size_call */
extern void T74f821(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_facility_call */
extern void T74f820(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_code_call */
extern void T74f819(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_call */
extern void T74f818(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_c_strlen_call */
extern void T74f817(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_character_query_call */
extern void T74f770(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_character_to_character_32_call */
extern void T74f816(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_character_to_character_8_call */
extern void T74f815(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_character_natural_32_code_call */
extern void T74f814(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_character_item_call */
extern void T74f813(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_character_code_call */
extern void T74f812(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_query_call */
extern void T74f769(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_xor_call */
extern void T74f811(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_else_call */
extern void T74f810(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_call */
extern void T74f809(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_not_call */
extern void T74f808(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_item_call */
extern void T74f807(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_implies_call */
extern void T74f806(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_then_call */
extern void T74f805(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_call */
extern void T74f804(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_query_call */
extern void T74f768(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_i_th_argument_pointer_call */
extern void T74f803(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_argument_count_call */
extern void T74f802(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_query_call */
extern void T74f767(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call */
extern void T74f801(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T74f801ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_same_type_call */
extern void T74f800(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generator_call */
extern void T74f799(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generating_type_call */
extern void T74f798(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_deep_twin_call */
extern void T74f797(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].force_last */
extern void T296f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_put */
extern void T296f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].force */
extern void T691f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FEATURE].fill_with */
extern void T692f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].extend */
extern void T692f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_put */
extern void T296f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_put */
extern void T296f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_item */
extern T6 T296f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].hash_position */
extern T6 T296f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].resize */
extern void T296f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_resize */
extern void T296f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].special_integer_ */
extern T0* T296f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_resize */
extern void T296f64(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].aliased_resized_area */
extern T0* T691f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE].aliased_resized_area */
extern T0* T692f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_resize */
extern void T296f63(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].aliased_resized_area */
extern T0* T696f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTANT].aliased_resized_area */
extern T0* T694f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_resize */
extern void T296f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_modulus */
extern T6 T296f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_capacity */
extern T6 T296f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_put */
extern void T296f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].force */
extern void T696f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CONSTANT].fill_with */
extern void T694f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].extend */
extern void T694f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].search_position */
extern void T296f53(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.set_polymorphic_call_argument_type_sets */
extern void T74f702(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T74f702ot1(T0* a1, T0** a2);
extern T1 T74f702ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_static_type */
extern void T273f19(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.put_last */
extern void T277f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_call_agent */
extern T1 T317f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_call_agent */
extern T1 T313f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_tuple_label */
extern T1 T317f8(GE_context* ac, T0* C);
/* ET_C_GENERATOR.dynamic_type_set_in_feature */
extern T0* T74f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.dynamic_type_set */
extern T0* T309f32(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.dynamic_type_set */
extern T0* T247f28(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.expression */
extern T0* T293f9(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.item */
extern T0* T293f12(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_name */
extern void T74f698(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T74f698ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_call_name_comment */
extern void T74f697(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T74f697ot1(T0* a1, T0** a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].force_last_new */
extern void T276f34(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].has */
extern T1 T276f25(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].replace */
extern void T275f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_MANIFEST_TUPLE.put_first */
extern void T293f28(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].force */
extern void T682f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].fill_with */
extern void T680f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].extend */
extern void T680f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.resize */
extern void T293f27(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T682f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T680f4(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.capacity */
extern T6 T293f7(GE_context* ac, T0* C);
/* ET_C_GENERATOR.fill_call_formal_arguments */
extern void T74f696(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.static_feature */
extern T0* T317f7(GE_context* ac, T0* C);
/* ET_CLASS.seeded_procedure */
extern T0* T82f126(GE_context* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.seeded_feature */
extern T0* T266f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.static_feature */
extern T0* T313f9(GE_context* ac, T0* C);
/* ET_CLASS.seeded_query */
extern T0* T82f125(GE_context* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.seeded_feature */
extern T0* T265f4(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.formal_argument */
extern T0* T74f183(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].put_last */
extern void T270f13(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_argument */
extern void T181f114(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].force_last */
extern void T275f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_capacity */
extern T6 T275f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].extendible */
extern T1 T275f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_next */
extern void T313f13(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.same_declared_signature */
extern T1 T74f128(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T74f128ot1(T0* a1);
extern T1 T74f128ot2(T0* a1);
extern T1 T74f128ot3(T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_tuple_label */
extern T1 T313f7(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_feature */
extern void T74f600(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].wipe_out */
extern void T282f11(GE_context* ac, T0* C);
/* SPECIAL [ET_EQUALITY_EXPRESSION].keep_head */
extern void T674f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_EQUALITY_EXPRESSION].set_count */
extern void T674f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].move_all_cursors_after */
extern void T282f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].set_next_cursor */
extern void T676f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].set_after */
extern void T676f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_equality_function */
extern void T74f664(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_BRACKET_SYMBOL.is_not_equal */
extern T1 T649f75(GE_context* ac, T0* C);
/* ET_SYMBOL.is_not_equal */
extern T1 T345f68(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_equality_expression */
extern void T74f722(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].force_last */
extern void T282f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].force */
extern void T675f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EQUALITY_EXPRESSION].fill_with */
extern void T674f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EQUALITY_EXPRESSION].extend */
extern void T674f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].resize */
extern void T282f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T675f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T674f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].new_capacity */
extern T6 T282f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].extendible */
extern T1 T282f7(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_target_operand */
extern void T74f738(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_equality_function_name */
extern void T74f721(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].item */
extern T0* T282f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].wipe_out */
extern void T281f11(GE_context* ac, T0* C);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].keep_head */
extern void T671f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].set_count */
extern void T671f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].move_all_cursors_after */
extern void T281f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION].set_next_cursor */
extern void T673f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION].set_after */
extern void T673f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_equality_function */
extern void T74f663(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_BRACKET_SYMBOL.is_not_tilde */
extern T1 T649f74(GE_context* ac, T0* C);
/* ET_SYMBOL.is_not_tilde */
extern T1 T345f67(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_equality_expression */
extern void T74f718(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].force_last */
extern void T281f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION].force */
extern void T672f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].fill_with */
extern void T671f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].extend */
extern void T671f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].resize */
extern void T281f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T672f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T671f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].new_capacity */
extern T6 T281f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].extendible */
extern T1 T281f7(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_object_equality_function_name */
extern void T74f717(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].item */
extern T0* T281f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].wipe_out */
extern void T280f11(GE_context* ac, T0* C);
/* SPECIAL [ET_OBJECT_TEST].keep_head */
extern void T668f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST].set_count */
extern void T668f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].move_all_cursors_after */
extern void T280f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].set_next_cursor */
extern void T670f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].set_after */
extern void T670f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_function */
extern void T74f662(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE_HASH_LIST.is_empty */
extern T1 T272f9(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_function_name */
extern void T74f715(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].item */
extern T0* T280f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].wipe_out */
extern void T283f11(GE_context* ac, T0* C);
/* SPECIAL [ET_AGENT].keep_head */
extern void T677f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT].set_count */
extern void T677f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].move_all_cursors_after */
extern void T283f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_next_cursor */
extern void T679f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_after */
extern void T679f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_agent_declaration */
extern void T74f661(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_C_GENERATOR.print_agent_closed_operand_access */
extern void T74f714(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_routine_function_access */
extern void T74f713(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_agent_creation_name */
extern void T74f712(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_agent_body_declaration */
extern void T74f710(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.put_first */
extern void T286f15(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T286f9(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.resize */
extern void T286f14(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.capacity */
extern T6 T286f8(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.wipe_out */
extern void T286f13(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_agent_open_operand_access */
extern void T74f709(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_function_name */
extern void T74f708(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.make */
extern T0* T260c101(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.tuple_keyword */
extern unsigned char ge807os11776;
extern T0* ge807ov11776;
extern T0* T81f75(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.tokens */
extern T0* T260f22(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_type_mark */
extern unsigned char ge807os11674;
extern T0* ge807ov11674;
extern T0* T81f27(GE_context* ac, T0* C);
/* ET_IDENTIFIER.set_agent_closed_operand */
extern void T181f110(GE_context* ac, T0* C, T1 a1);
/* ET_IDENTIFIER.set_agent_open_operand */
extern void T181f107(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_AGENT].item */
extern T0* T283f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_semistrict */
extern T1 T309f21(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.is_semistrict */
extern T1 T247f32(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].remove_last */
extern void T299f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].move_last_cursors_after */
extern void T299f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T705f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_after */
extern void T705f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].last */
extern T0* T299f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].is_empty */
extern T1 T299f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].force_last */
extern void T299f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].force */
extern void T704f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].fill_with */
extern void T701f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].extend */
extern void T701f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].resize */
extern void T299f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T704f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T701f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T299f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].extendible */
extern T1 T299f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_generated */
extern void T309f53(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_generated */
extern void T247f51(GE_context* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_object_allocation_functions */
extern void T74f599(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_allocation_function */
extern void T74f660(GE_context* ac, T0* C, T0* a1);
extern T1 T74f660ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_dispose_registration */
extern void T74f707(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T74f707ot1(T0* a1, T0** a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].force_last_new */
extern void T298f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].key_storage_put */
extern void T298f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].item_storage_put */
extern void T298f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].slots_put */
extern void T298f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].clashes_put */
extern void T298f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].resize */
extern void T298f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].clashes_resize */
extern void T298f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T298f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T298f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T298f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].slots_resize */
extern void T298f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T298f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T298f32(GE_context* ac, T0* C, T6 a1);
/* ET_COMPOUND.is_empty */
extern T1 T331f4(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_procedure_call_functions */
extern void T74f598(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_next */
extern void T317f14(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_polymorphic_query_call_functions */
extern void T74f597(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_manifest_string_32_function */
extern void T74f596(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_manifest_string_8_function */
extern void T74f595(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_default_declarations */
extern void T74f594(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_default_declaration */
extern void T74f644(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_object_value */
extern void T74f691(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T74f691ot1(T0* a1, T0** a2);
extern T1 T74f691ot2(T0* a1, T0** a2);
extern T1 T74f691ot3(T0* a1, T0** a2);
extern T1 T74f691ot4(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_default_attribute_value */
extern void T74f732(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.flush_to_c_file */
extern void T74f593(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T304f36(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_append */
extern void T304f45(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T304f45p1(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_types */
extern void T74f592(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_eif_type_struct */
extern void T74f643(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_type_struct */
extern void T74f642(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_struct_name */
extern void T74f683(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_struct */
extern void T74f641(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T74f641ot1(T0* a1, T0** a2);
extern T1 T74f641ot2(T0* a1, T0** a2);
extern T1 T74f641ot3(T0* a1, T0** a2);
extern T1 T74f641ot4(T0* a1, T0** a2);
extern T1 T74f641ot5(T0* a1, T0** a2);
/* ET_C_GENERATOR.print */
extern void T74f686(GE_context* ac, T0* C, T0* a1);
/* STD_FILES.put_string */
extern void T356f7(GE_context* ac, T0* C, T0* a1);
/* STD_FILES.standard_default */
extern T0* T356f2(GE_context* ac, T0* C);
/* STRING_8.out */
extern T0* T17f18(GE_context* ac, T0* C);
/* ET_C_GENERATOR.io */
extern T0* T74f215(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_struct_name */
extern void T74f678(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].has_cycle */
extern T1 T311f8(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].sort */
extern void T311f15(GE_context* ac, T0* C);
/* ARRAY [BOOLEAN].item */
extern T1 T718f4(GE_context* ac, T0* C, T6 a1);
/* ARRAY [BOOLEAN].put */
extern void T718f6(GE_context* ac, T0* C, T1 a1, T6 a2);
/* ARRAY [BOOLEAN].make_filled */
extern T0* T718c5(GE_context* ac, T1 a1, T6 a2, T6 a3);
/* ARRAY [BOOLEAN].make_filled_area */
extern void T718f7(GE_context* ac, T0* C, T1 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].put_last */
extern void T233f19(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].replace */
extern void T717f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].item */
extern T0* T717f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].make */
extern T0* T233c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T233f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T233f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T641c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].cloned_object */
extern T0* T717f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].twin */
extern T0* T717f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].copy */
extern void T717f15(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].resized_area */
extern T0* T1373f4(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].copy_data */
extern void T1373f10(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].force */
extern void T1373f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].extend */
extern void T1373f11(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].move_data */
extern void T1373f13(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].overlapping_move */
extern void T1373f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].fill_with */
extern void T1373f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].non_overlapping_move */
extern void T1373f15(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].make_empty */
extern T0* T1373c6(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].new_cursor */
extern T0* T717f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T1375c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].set_internal_cursor */
extern void T717f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].valid_cursor */
extern T1 T717f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].move_all_cursors_after */
extern void T717f17(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].set_next_cursor */
extern void T1375f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].set_after */
extern void T1375f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].cloned_object */
extern T0* T271f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].twin */
extern T0* T271f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].copy */
extern void T271f25(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_cursor */
extern T0* T271f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].make */
extern T0* T656c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].set_internal_cursor */
extern void T271f22(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].valid_cursor */
extern T1 T271f13(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].reset */
extern void T311f19(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_boxed_type_definition */
extern void T74f640(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_type_definition */
extern void T74f639(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_function */
extern void T74f638(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_type_id_access */
extern void T74f681(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_type_declaration */
extern void T74f679(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].force_relation */
extern void T311f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].put_indexed_relation */
extern void T311f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_LINKABLE [INTEGER_32].put_right */
extern void T553f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [INTEGER_32].make */
extern T0* T553c3(GE_context* ac, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].count */
extern T6 T311f10(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].index_of */
extern T6 T311f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].found_item */
extern T6 T371f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_item */
extern T6 T371f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].found */
extern T1 T371f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].search */
extern void T371f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].search_position */
extern void T371f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].hash_position */
extern T6 T371f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T371f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T371f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_item */
extern T6 T371f22(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_type_definition */
extern void T74f637(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_pointer_type_definition */
extern void T74f636(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_64_type_definition */
extern void T74f635(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_32_type_definition */
extern void T74f634(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_64_type_definition */
extern void T74f633(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_32_type_definition */
extern void T74f632(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_16_type_definition */
extern void T74f631(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_8_type_definition */
extern void T74f630(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_64_type_definition */
extern void T74f629(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_32_type_definition */
extern void T74f628(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_16_type_definition */
extern void T74f627(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_8_type_definition */
extern void T74f626(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_32_type_definition */
extern void T74f625(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_8_type_definition */
extern void T74f624(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boolean_type_definition */
extern void T74f623(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].force */
extern void T311f13(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].put */
extern void T311f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].put_last */
extern void T717f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].force */
extern void T1374f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].put_new */
extern void T371f38(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_put */
extern void T371f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_put */
extern void T371f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_put */
extern void T371f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_put */
extern void T371f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].unset_found_item */
extern void T371f42(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].resize */
extern void T717f12(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].aliased_resized_area */
extern T0* T1374f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].aliased_resized_area */
extern T0* T1373f5(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].resize */
extern void T371f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_resize */
extern void T371f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T371f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T371f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T371f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_resize */
extern void T371f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T371f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].capacity */
extern T6 T311f7(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].has */
extern T1 T311f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].has */
extern T1 T371f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].make_default */
extern T0* T311c12(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].make */
extern void T311f16(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T717c11(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T1374f1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].default_create */
extern T0* T1374c3(GE_context* ac);
/* DS_ARRAYED_LIST [INTEGER_32].make */
extern T0* T271c15(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_map */
extern T0* T371c35(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T371f40(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T371f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T371f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T371f29(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].make */
extern T0* T721c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_slots */
extern void T371f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_clashes */
extern void T371f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_key_storage */
extern void T371f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_item_storage */
extern void T371f56(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_aliased_double_type_definition */
extern void T74f622(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.double_class_name */
extern unsigned char ge807os11362;
extern T0* ge807ov11362;
extern T0* T81f26(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_real_type_definition */
extern void T74f621(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.real_class_name */
extern unsigned char ge807os11389;
extern T0* ge807ov11389;
extern T0* T81f25(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_natural_type_definition */
extern void T74f620(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.natural_class_name */
extern unsigned char ge807os11379;
extern T0* ge807ov11379;
extern T0* T81f24(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_integer_type_definition */
extern void T74f619(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.integer_class_name */
extern unsigned char ge807os11368;
extern T0* ge807ov11368;
extern T0* T81f23(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_wide_character_type_definition */
extern void T74f618(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.wide_character_class_name */
extern unsigned char ge807os11402;
extern T0* ge807ov11402;
extern T0* T81f22(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_character_type_definition */
extern void T74f617(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.character_class_name */
extern unsigned char ge807os11357;
extern T0* ge807ov11357;
extern T0* T81f21(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_start_extern_c */
extern void T74f591(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_runtime_header_file */
extern void T74f590(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].replace */
extern void T300f49(GE_context* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_put */
extern void T300f60(GE_context* ac, T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].search_position */
extern void T300f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].hash_position */
extern T6 T300f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_item */
extern T6 T300f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item */
extern T1 T300f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].force */
extern void T300f48(GE_context* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_put */
extern void T300f64(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_put */
extern void T300f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_put */
extern void T300f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].resize */
extern void T300f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_resize */
extern void T300f71(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].special_integer_ */
extern T0* T300f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_resize */
extern void T300f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_resize */
extern void T300f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_resize */
extern void T300f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_modulus */
extern T6 T300f38(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_capacity */
extern T6 T300f22(GE_context* ac, T0* C, T6 a1);
/* STRING_8.same_string */
extern T1 T17f8(GE_context* ac, T0* C, T0* a1);
/* STRING_8.same_characters */
extern T1 T17f14(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].has */
extern T1 T300f34(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.exception_trace_mode */
extern T1 T74f226(GE_context* ac, T0* C);
/* ET_C_GENERATOR.trace_mode */
extern T1 T74f219(GE_context* ac, T0* C);
/* ET_C_GENERATOR.generate_ids */
extern void T74f589(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_id */
extern void T309f56(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_id */
extern void T247f56(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.open_cpp_file */
extern void T74f588(GE_context* ac, T0* C);
/* ET_C_GENERATOR.open_c_file */
extern void T74f587(GE_context* ac, T0* C);
/* ET_C_GENERATOR.set_split_threshold */
extern void T74f579(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.set_split_mode */
extern void T74f578(GE_context* ac, T0* C, T1 a1);
/* GEC.no_split */
extern T1 T22f35(GE_context* ac, T0* C);
/* ET_C_GENERATOR.set_finalize_mode */
extern void T74f577(GE_context* ac, T0* C, T1 a1);
/* GEC.is_finalize */
extern T1 T22f23(GE_context* ac, T0* C);
/* ET_C_GENERATOR.set_use_boehm_gc */
extern void T74f576(GE_context* ac, T0* C, T1 a1);
/* GEC.use_boehm_gc */
extern T1 T22f34(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.parameter */
extern T0* T43f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].last */
extern T0* T136f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].is_empty */
extern T1 T136f19(GE_context* ac, T0* C);
/* ET_C_GENERATOR.make */
extern T0* T74c575(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.make_external_regexps */
extern void T74f582(GE_context* ac, T0* C);
/* ET_C_GENERATOR.make_rescue_data */
extern void T74f581(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].set_equality_tester */
extern void T206f41(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.identifier_tester */
extern unsigned char ge858os9345;
extern T0* ge858ov9345;
extern T0* T74f180(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TESTER.default_create */
extern T0* T301c2(GE_context* ac);
/* DS_HASH_SET [ET_IDENTIFIER].make */
extern T0* T206c37(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].set_internal_cursor */
extern void T206f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_cursor */
extern T0* T206f36(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].make */
extern T0* T629c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_slots */
extern void T206f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_clashes */
extern void T206f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_key_storage */
extern void T206f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_item_storage */
extern void T206f45(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].make */
extern T0* T212f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].make_empty */
extern T0* T211c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].default_create */
extern T0* T212c3(GE_context* ac);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].set_key_equality_tester */
extern void T300f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make */
extern T0* T300c43(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_with_equality_testers */
extern void T300f51(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_sparse_container */
extern void T300f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].set_internal_cursor */
extern void T300f76(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_cursor */
extern T0* T300f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].make */
extern T0* T706c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_slots */
extern void T300f75(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_clashes */
extern void T300f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_key_storage */
extern void T300f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_item_storage */
extern void T300f72(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [STRING_8].default_create */
extern T0* T58c2(GE_context* ac);
/* DS_HASH_SET [STRING_8].set_equality_tester */
extern void T76f40(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].make */
extern void T76f39(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make */
extern T0* T76c39(GE_context* ac, T6 a1);
/* DS_HASH_SET [STRING_8].set_internal_cursor */
extern void T76f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].new_cursor */
extern T0* T76f23(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].make */
extern T0* T368c9(GE_context* ac, T0* a1);
/* DS_HASH_SET [STRING_8].make_slots */
extern void T76f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_modulus */
extern T6 T76f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_clashes */
extern void T76f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_key_storage */
extern void T76f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_item_storage */
extern void T76f50(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].make */
extern T0* T299c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].set_internal_cursor */
extern void T299f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T299f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].make */
extern T0* T705c5(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_map */
extern T0* T298c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T298f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T298f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T298f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T298f30(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make */
extern T0* T703c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_slots */
extern void T298f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_clashes */
extern void T298f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_key_storage */
extern void T298f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_item_storage */
extern void T298f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_map */
extern T0* T297c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_with_equality_testers */
extern void T297f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_sparse_container */
extern void T297f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].set_internal_cursor */
extern void T297f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].new_cursor */
extern T0* T297f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make */
extern T0* T697c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_slots */
extern void T297f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].new_modulus */
extern T6 T297f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_clashes */
extern void T297f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_key_storage */
extern void T297f56(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].make */
extern T0* T700f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].make_empty */
extern T0* T698c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].default_create */
extern T0* T700c3(GE_context* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_item_storage */
extern void T297f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_map */
extern T0* T296c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_with_equality_testers */
extern void T296f44(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_sparse_container */
extern void T296f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].set_internal_cursor */
extern void T296f70(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T296f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T693c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_slots */
extern void T296f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_clashes */
extern void T296f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_key_storage */
extern void T296f67(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].make */
extern T0* T691f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].make_empty */
extern T0* T692c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].default_create */
extern T0* T691c3(GE_context* ac);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_item_storage */
extern void T296f66(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].make */
extern T0* T696f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CONSTANT].make_empty */
extern T0* T694c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].default_create */
extern T0* T696c3(GE_context* ac);
/* DS_HASH_SET [ET_FEATURE].make */
extern T0* T295c30(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_FEATURE].set_internal_cursor */
extern void T295f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].new_cursor */
extern T0* T295f19(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].make */
extern T0* T689c6(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_FEATURE].make_slots */
extern void T295f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_modulus */
extern T6 T295f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_clashes */
extern void T295f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_key_storage */
extern void T295f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_item_storage */
extern void T295f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T294c35(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].set_internal_cursor */
extern void T294f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_cursor */
extern T0* T294f33(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T686c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_slots */
extern void T294f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_modulus */
extern T6 T294f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_clashes */
extern void T294f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_key_storage */
extern void T294f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_item_storage */
extern void T294f39(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T688f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make_empty */
extern T0* T687c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].default_create */
extern T0* T688c3(GE_context* ac);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern T0* T293c26(GE_context* ac, T6 a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern void T293f26p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].make */
extern T0* T682f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].make_empty */
extern T0* T680c5(GE_context* ac, T6 a1);
/* ET_MANIFEST_TUPLE.tokens */
extern T0* T293f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T292c8(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].set_internal_cursor */
extern void T292f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].new_cursor */
extern T0* T292f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T685c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T684f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].make_empty */
extern T0* T683c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].default_create */
extern T0* T684c3(GE_context* ac);
/* ET_UNQUALIFIED_CALL_EXPRESSION.make */
extern T0* T291c21(GE_context* ac, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL_INSTRUCTION.make */
extern T0* T287c9(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_INSTRUCTION.make_qualified_call */
extern void T287f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T286c12(GE_context* ac, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T286f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_parenthesis_symbol */
extern unsigned char ge807os11713;
extern T0* ge807ov11713;
extern T0* T81f227(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_parenthesis */
extern T0* T345c74(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_parenthesis_symbol */
extern unsigned char ge807os11708;
extern T0* ge807ov11708;
extern T0* T81f226(GE_context* ac, T0* C);
/* ET_SYMBOL.make_left_parenthesis */
extern T0* T345c73(GE_context* ac);
/* ET_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T286f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_AGENT].make */
extern T0* T283c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].set_internal_cursor */
extern void T283f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].new_cursor */
extern T0* T283f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].make */
extern T0* T679c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].make */
extern T0* T678f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT].make_empty */
extern T0* T677c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].default_create */
extern T0* T678c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].make */
extern T0* T282c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].set_internal_cursor */
extern void T282f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].new_cursor */
extern T0* T282f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].make */
extern T0* T676c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].make */
extern T0* T675f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_EQUALITY_EXPRESSION].make_empty */
extern T0* T674c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].default_create */
extern T0* T675c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T281c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].set_internal_cursor */
extern void T281f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].new_cursor */
extern T0* T281f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T673c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T672f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].make_empty */
extern T0* T671c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION].default_create */
extern T0* T672c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].make */
extern T0* T280c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].set_internal_cursor */
extern void T280f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].new_cursor */
extern T0* T280f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].make */
extern T0* T670c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].make */
extern T0* T669f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST].make_empty */
extern T0* T668c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].default_create */
extern T0* T669c3(GE_context* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_map */
extern T0* T279c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T279f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T279f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T279f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T279f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make */
extern T0* T666c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_slots */
extern void T279f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_clashes */
extern void T279f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_key_storage */
extern void T279f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_item_storage */
extern void T279f67(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T664f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make_empty */
extern T0* T663c5(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make */
extern T0* T278c35(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T278f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T278f17(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T665c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_slots */
extern void T278f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_clashes */
extern void T278f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_key_storage */
extern void T278f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_item_storage */
extern void T278f40(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.make_with_capacity */
extern T0* T277c8(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_map */
extern T0* T276c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_with_equality_testers */
extern void T276f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_sparse_container */
extern void T276f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].set_internal_cursor */
extern void T276f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_cursor */
extern T0* T276f30(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].make */
extern T0* T662c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_slots */
extern void T276f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_clashes */
extern void T276f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_key_storage */
extern void T276f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_item_storage */
extern void T276f55(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].make */
extern T0* T275c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].set_internal_cursor */
extern void T275f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_cursor */
extern T0* T275f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].make */
extern T0* T660c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].make */
extern T0* T659f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION].make_empty */
extern T0* T658c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].default_create */
extern T0* T659c3(GE_context* ac);
/* DS_ARRAYED_STACK [ET_EXPRESSION].make */
extern T0* T274c8(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].make */
extern T0* T270c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].set_internal_cursor */
extern void T270f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_cursor */
extern T0* T270f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].make */
extern T0* T655c3(GE_context* ac, T0* a1);
/* KL_STRING_OUTPUT_STREAM.make */
extern T0* T269c4(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.null_output_stream */
extern unsigned char ge258os3283;
extern T0* ge258ov3283;
extern T0* T74f148(GE_context* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.make */
extern T0* T267c3(GE_context* ac, T0* a1);
/* ET_CLASS.lower_name */
extern T0* T82f62(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_class */
extern unsigned char ge807os12255;
extern T0* ge807ov12255;
extern T0* T81f1(GE_context* ac, T0* C);
/* ET_CLASS.set_implementation_error */
extern void T82f213(GE_context* ac, T0* C);
/* ET_CLASS.set_implementation_checked */
extern void T82f212(GE_context* ac, T0* C);
/* ET_CLASS.set_interface_error */
extern void T82f211(GE_context* ac, T0* C);
/* ET_CLASS.set_interface_checked */
extern void T82f210(GE_context* ac, T0* C);
/* ET_CLASS.set_flattening_error */
extern void T82f209(GE_context* ac, T0* C);
/* ET_CLASS.set_features_flattened */
extern void T82f208(GE_context* ac, T0* C);
/* ET_CLASS.set_ancestors_error */
extern void T82f207(GE_context* ac, T0* C);
/* ET_CLASS.set_ancestors_built */
extern void T82f206(GE_context* ac, T0* C);
/* ET_CLASS.set_syntax_error */
extern void T82f205(GE_context* ac, T0* C);
/* ET_CLASS.set_parsed */
extern void T82f204(GE_context* ac, T0* C);
/* ET_CLASS.set_group */
extern void T82f203(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.unknown_group */
extern unsigned char ge807os12259;
extern T0* ge807ov12259;
extern T0* T81f2(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.make */
extern T0* T393c30(GE_context* ac);
/* ET_CLASS.make_unknown */
extern T0* T82c202(GE_context* ac);
/* ET_CLASS.make */
extern void T82f214(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.make */
extern T0* T82c214(GE_context* ac, T0* a1);
/* ET_CLASS_CODES.class_code */
extern T8 T397f1(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].found_item */
extern T8 T765f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_item */
extern T8 T765f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].found */
extern T1 T765f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].search */
extern void T765f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].search_position */
extern void T765f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].hash_position */
extern T6 T765f23(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_NAME_TESTER.test */
extern T1 T464f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.same_class_name */
extern T1 T181f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_item */
extern T0* T765f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_item */
extern T6 T765f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_item */
extern T6 T765f26(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS_CODES.codes_by_name */
extern unsigned char ge786os20601;
extern T0* ge786ov20601;
extern T0* T397f2(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.iteration_cursor_class_name */
extern unsigned char ge807os11376;
extern T0* ge807ov11376;
extern T0* T81f132(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.iterable_class_name */
extern unsigned char ge807os11375;
extern T0* ge807ov11375;
extern T0* T81f131(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disposable_class_name */
extern unsigned char ge807os11361;
extern T0* ge807ov11361;
extern T0* T81f130(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.system_object_class_name */
extern unsigned char ge807os11397;
extern T0* ge807ov11397;
extern T0* T81f129(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.any_class_name */
extern unsigned char ge807os11353;
extern T0* ge807ov11353;
extern T0* T81f128(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.array_class_name */
extern unsigned char ge807os11355;
extern T0* ge807ov11355;
extern T0* T81f127(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.typed_pointer_class_name */
extern unsigned char ge807os11401;
extern T0* ge807ov11401;
extern T0* T81f126(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_class_name */
extern unsigned char ge807os11400;
extern T0* ge807ov11400;
extern T0* T81f125(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.special_class_name */
extern unsigned char ge807os11393;
extern T0* ge807ov11393;
extern T0* T81f124(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.routine_class_name */
extern unsigned char ge807os11392;
extern T0* ge807ov11392;
extern T0* T81f123(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.procedure_class_name */
extern unsigned char ge807os11388;
extern T0* ge807ov11388;
extern T0* T81f122(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.predicate_class_name */
extern unsigned char ge807os11387;
extern T0* ge807ov11387;
extern T0* T81f121(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.function_class_name */
extern unsigned char ge807os11366;
extern T0* ge807ov11366;
extern T0* T81f120(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.tuple_class_name */
extern unsigned char ge807os11399;
extern T0* ge807ov11399;
extern T0* T81f119(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_class_name */
extern unsigned char ge807os11386;
extern T0* ge807ov11386;
extern T0* T81f118(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_class_name */
extern unsigned char ge807os11391;
extern T0* ge807ov11391;
extern T0* T81f117(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_class_name */
extern unsigned char ge807os11390;
extern T0* ge807ov11390;
extern T0* T81f116(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_class_name */
extern unsigned char ge807os11383;
extern T0* ge807ov11383;
extern T0* T81f115(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_class_name */
extern unsigned char ge807os11382;
extern T0* ge807ov11382;
extern T0* T81f114(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_class_name */
extern unsigned char ge807os11381;
extern T0* ge807ov11381;
extern T0* T81f113(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_class_name */
extern unsigned char ge807os11380;
extern T0* ge807ov11380;
extern T0* T81f112(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_class_name */
extern unsigned char ge807os11372;
extern T0* ge807ov11372;
extern T0* T81f111(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_class_name */
extern unsigned char ge807os11371;
extern T0* ge807ov11371;
extern T0* T81f110(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_class_name */
extern unsigned char ge807os11370;
extern T0* ge807ov11370;
extern T0* T81f109(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_class_name */
extern unsigned char ge807os11369;
extern T0* ge807ov11369;
extern T0* T81f108(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_class_name */
extern unsigned char ge807os11359;
extern T0* ge807ov11359;
extern T0* T81f107(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_class_name */
extern unsigned char ge807os11358;
extern T0* ge807ov11358;
extern T0* T81f106(GE_context* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].force_last */
extern void T765f37(GE_context* ac, T0* C, T8 a1, T0* a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_put */
extern void T765f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].force */
extern void T637f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].fill_with */
extern void T638f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].extend */
extern void T638f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_put */
extern void T765f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_put */
extern void T765f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].resize */
extern void T765f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_resize */
extern void T765f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].special_integer_ */
extern T0* T765f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_resize */
extern void T765f49(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].aliased_resized_area */
extern T0* T637f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME].aliased_resized_area */
extern T0* T638f3(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_resize */
extern void T765f48(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].aliased_resized_area */
extern T0* T1383f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [NATURAL_8].aliased_resized_area */
extern T0* T541f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_resize */
extern void T765f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_modulus */
extern T6 T765f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_capacity */
extern T6 T765f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_put */
extern void T765f41(GE_context* ac, T0* C, T8 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [NATURAL_8].force */
extern void T1383f4(GE_context* ac, T0* C, T0* a1, T8 a2, T6 a3);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].unset_found_item */
extern void T765f40(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_class_name */
extern unsigned char ge807os11356;
extern T0* ge807ov11356;
extern T0* T81f105(GE_context* ac, T0* C);
/* ET_CLASS_CODES.tokens */
extern T0* T397f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].set_key_equality_tester */
extern void T765f36(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_CODES.class_name_tester */
extern unsigned char ge856os3715;
extern T0* ge856ov3715;
extern T0* T397f4(GE_context* ac, T0* C);
/* ET_CLASS_NAME_TESTER.default_create */
extern T0* T464c2(GE_context* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_map */
extern T0* T765c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_with_equality_testers */
extern void T765f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_sparse_container */
extern void T765f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].set_internal_cursor */
extern void T765f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_cursor */
extern T0* T765f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME].make */
extern T0* T1384c4(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_slots */
extern void T765f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_clashes */
extern void T765f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_key_storage */
extern void T765f52(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].make */
extern T0* T637f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME].make_empty */
extern T0* T638c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].default_create */
extern T0* T637c3(GE_context* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_item_storage */
extern void T765f51(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].make */
extern T0* T1383f2(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].default_create */
extern T0* T1383c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.class_keyword */
extern unsigned char ge807os11727;
extern T0* ge807ov11727;
extern T0* T81f73(GE_context* ac, T0* C);
/* ET_KEYWORD.make_class */
extern T0* T396c36(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_procedures */
extern unsigned char ge807os12253;
extern T0* ge807ov12253;
extern T0* T81f72(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.make_with_capacity */
extern T0* T266c8(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].make */
extern T0* T861f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_PROCEDURE].make_empty */
extern T0* T860c5(GE_context* ac, T6 a1);
/* ET_PROCEDURE_LIST.fixed_array */
extern unsigned char ge690os12638;
extern T0* ge690ov12638;
extern T0* T266f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].default_create */
extern T0* T861c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_queries */
extern unsigned char ge807os12252;
extern T0* ge807ov12252;
extern T0* T81f71(GE_context* ac, T0* C);
/* ET_QUERY_LIST.make_with_capacity */
extern T0* T265c8(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].make */
extern T0* T859f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_QUERY].make_empty */
extern T0* T857c5(GE_context* ac, T6 a1);
/* ET_QUERY_LIST.fixed_array */
extern unsigned char ge692os12638;
extern T0* ge692ov12638;
extern T0* T265f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_QUERY].default_create */
extern T0* T859c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_ancestors */
extern unsigned char ge807os12249;
extern T0* ge807ov12249;
extern T0* T81f70(GE_context* ac, T0* C);
/* ET_BASE_TYPE_LIST.make_with_capacity */
extern T0* T395c7(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].make */
extern T0* T868f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].make_empty */
extern T0* T867c5(GE_context* ac, T6 a1);
/* ET_BASE_TYPE_LIST.fixed_array */
extern unsigned char ge869os7522;
extern T0* ge869ov7522;
extern T0* T395f4(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].default_create */
extern T0* T868c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.unknown_class_name */
extern unsigned char ge807os11403;
extern T0* ge807ov11403;
extern T0* T81f69(GE_context* ac, T0* C);
/* ET_CLASS.tokens */
extern T0* T82f82(GE_context* ac, T0* C);
/* GEC.tokens */
extern T0* T22f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile */
extern void T71f68(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile_system */
extern void T71f71(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.build_dynamic_type_sets */
extern void T71f75(GE_context* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T237f17(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T79f124(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_validity */
extern void T79f127(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_call_validity */
extern void T79f132(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_target_validity */
extern void T79f134(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f134ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.seeded_dynamic_feature */
extern T0* T317f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.seeded_dynamic_feature */
extern T0* T313f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_catcall_error */
extern void T79f138(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_catcall_error */
extern void T36f186(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info_message */
extern void T36f192(GE_context* ac, T0* C, T0* a1);
/* KL_STDOUT_FILE.put_line */
extern void T132f9(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_eiffel_error */
extern void T36f191(GE_context* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_catcall_error */
extern void T77f196(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info_message */
extern void T77f195(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_eiffel_error */
extern void T77f191(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.append_catcall_error_message */
extern void T79f139(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.position */
extern T0* T317f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.position */
extern T0* T313f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.string_ */
extern T0* T79f52(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.shared_error_message */
extern unsigned char ge1000os10196;
extern T0* ge1000ov10196;
extern T0* T79f51(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_feature_dynamic_type_sets */
extern void T79f126(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.wipe_out */
extern void T268f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].wipe_out */
extern void T371f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T371f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T371f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T371f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T371f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T371f41(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T721f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].set_after */
extern void T721f7(GE_context* ac, T0* C);
/* DS_CELL [INTEGER_32].put */
extern void T370f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_built */
extern void T309f59(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_built */
extern void T247f58(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_validity */
extern void T79f130(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE.wipe_out */
extern void T385f10(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].wipe_out */
extern void T174f50(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].slots_wipe_out */
extern void T174f59(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].clashes_wipe_out */
extern void T174f58(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].key_storage_wipe_out */
extern void T174f57(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].item_storage_wipe_out */
extern void T174f56(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].unset_found_item */
extern void T174f45(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].move_all_cursors_after */
extern void T174f55(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_next_cursor */
extern void T609f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_after */
extern void T609f10(GE_context* ac, T0* C);
/* ET_ACROSS_CURSOR_SCOPE.wipe_out */
extern void T384f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].wipe_out */
extern void T756f11(GE_context* ac, T0* C);
/* SPECIAL [ET_ACROSS_COMPONENT].keep_head */
extern void T754f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACROSS_COMPONENT].set_count */
extern void T754f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].move_all_cursors_after */
extern void T756f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT].set_next_cursor */
extern void T1380f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT].set_after */
extern void T1380f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].wipe_out */
extern void T383f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].slots_wipe_out */
extern void T383f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].clashes_wipe_out */
extern void T383f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].key_storage_wipe_out */
extern void T383f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_storage_wipe_out */
extern void T383f50(GE_context* ac, T0* C);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].keep_head */
extern void T740f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].set_count */
extern void T740f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].unset_found_item */
extern void T383f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].move_all_cursors_after */
extern void T383f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].set_next_cursor */
extern void T751f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].set_after */
extern void T751f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].forth */
extern void T383f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].cursor_forth */
extern void T383f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].add_traversing_cursor */
extern void T383f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].set_position */
extern void T751f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].remove_traversing_cursor */
extern void T383f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].clashes_item */
extern T6 T383f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_for_iteration */
extern T0* T383f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].cursor_item */
extern T0* T383f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_storage_item */
extern T0* T383f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].after */
extern T1 T383f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].cursor_after */
extern T1 T383f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].after */
extern T1 T751f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].start */
extern void T383f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].cursor_start */
extern void T383f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].cursor_off */
extern T1 T383f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].off */
extern T1 T751f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].is_empty */
extern T1 T383f27(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.wipe_out */
extern void T381f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].wipe_out */
extern void T750f11(GE_context* ac, T0* C);
/* SPECIAL [ET_NAMED_OBJECT_TEST].keep_head */
extern void T748f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_OBJECT_TEST].set_count */
extern void T748f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T750f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T1379f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].set_after */
extern void T1379f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].wipe_out */
extern void T380f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_wipe_out */
extern void T380f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_wipe_out */
extern void T380f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_wipe_out */
extern void T380f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_wipe_out */
extern void T380f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].unset_found_item */
extern void T380f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T380f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T744f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_after */
extern void T744f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].forth */
extern void T380f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_forth */
extern void T380f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].add_traversing_cursor */
extern void T380f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_position */
extern void T744f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].remove_traversing_cursor */
extern void T380f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_item */
extern T6 T380f33(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_context */
extern void T79f128(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.reset */
extern void T379f51(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.wipe_out */
extern void T379f53(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].keep_head */
extern void T743f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].keep_head */
extern void T262f7(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE].set_count */
extern void T262f9(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.fixed_array */
extern unsigned char ge895os7522;
extern T0* ge895ov7522;
extern T0* T379f4(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].default_create */
extern T0* T743c3(GE_context* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tokens */
extern T0* T79f99(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].force_last */
extern void T378f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].force */
extern void T741f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].fill_with */
extern void T740f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].extend */
extern void T740f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].resize */
extern void T378f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T741f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T740f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_capacity */
extern T6 T378f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].extendible */
extern T1 T378f8(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_for_iteration */
extern T0* T380f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_item */
extern T0* T380f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_item */
extern T0* T380f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].after */
extern T1 T380f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_after */
extern T1 T380f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].after */
extern T1 T744f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].start */
extern void T380f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_start */
extern void T380f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_off */
extern T1 T380f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].off */
extern T1 T744f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].is_empty */
extern T1 T380f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_preconditions_attachment_scope */
extern void T79f133(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_attachment_scope */
extern void T79f137(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].force_last */
extern void T387f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].force */
extern void T759f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ATTACHMENT_SCOPE].fill_with */
extern void T758f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ATTACHMENT_SCOPE].extend */
extern void T758f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].resize */
extern void T387f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T759f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T758f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].new_capacity */
extern T6 T387f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].extendible */
extern T1 T387f8(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].forth */
extern void T389f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].cursor_forth */
extern void T389f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].add_traversing_cursor */
extern void T389f58(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_PRECONDITIONS, ET_FEATURE].set_next_cursor */
extern void T761f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_PRECONDITIONS, ET_FEATURE].set_position */
extern void T761f10(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].remove_traversing_cursor */
extern void T389f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_PRECONDITIONS, ET_FEATURE].set_after */
extern void T761f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].clashes_item */
extern T6 T389f28(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE.merge_scope */
extern void T385f12(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].forth */
extern void T174f54(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_forth */
extern void T174f64(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].add_traversing_cursor */
extern void T174f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_position */
extern void T609f14(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].remove_traversing_cursor */
extern void T174f70(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].clashes_item */
extern T6 T174f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].remove */
extern void T174f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].remove_position */
extern void T174f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_storage_put */
extern void T174f76(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].item_storage_put */
extern void T174f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].key_storage_keep_head */
extern void T174f75(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_keep_head */
extern void T174f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].clashes_put */
extern void T174f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].slots_put */
extern void T174f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].move_cursors_forth */
extern void T174f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].internal_set_key_equality_tester */
extern void T174f72(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].key_equality_tester */
extern T0* T174f30(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].slots_item */
extern T6 T174f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].hash_position */
extern T6 T174f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_storage_item */
extern T6 T174f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_item */
extern T6 T174f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].search_position */
extern void T174f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].has */
extern T1 T174f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_for_iteration */
extern T6 T174f27(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_item */
extern T6 T174f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].after */
extern T1 T174f26(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_after */
extern T1 T174f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].after */
extern T1 T609f7(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].start */
extern void T174f52(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_start */
extern void T174f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].cursor_off */
extern T1 T174f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].off */
extern T1 T609f8(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].is_empty */
extern T1 T174f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].is_last */
extern T1 T389f25(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].cursor_is_last */
extern T1 T389f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].is_empty */
extern T1 T389f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].item_for_iteration */
extern T0* T389f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].cursor_item */
extern T0* T389f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].item_storage_item */
extern T0* T389f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].start */
extern void T389f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].cursor_start */
extern void T389f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].cursor_off */
extern T1 T389f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_PRECONDITIONS, ET_FEATURE].off */
extern T1 T761f5(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.copy_scope */
extern void T385f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].append_last */
extern void T174f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].extend_last */
extern void T174f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].forth */
extern void T609f13(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].put_last */
extern void T174f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].compress */
extern void T174f77(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].move_all_cursors */
extern void T174f78(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET_CURSOR [INTEGER_32].item */
extern T6 T609f4(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].start */
extern void T609f12(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].new_cursor */
extern T0* T174f20(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].make */
extern T0* T609c9(GE_context* ac, T0* a1);
/* DS_HASH_SET [INTEGER_32].resize */
extern void T174f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].clashes_resize */
extern void T174f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].special_integer_ */
extern T0* T174f37(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].key_storage_resize */
extern void T174f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_resize */
extern void T174f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].slots_resize */
extern void T174f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].new_modulus */
extern T6 T174f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].new_capacity */
extern T6 T174f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].extendible */
extern T1 T174f33(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_attachment_scope */
extern T0* T79f50(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].remove_last */
extern void T387f13(GE_context* ac, T0* C);
/* SPECIAL [ET_ATTACHMENT_SCOPE].keep_head */
extern void T758f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ATTACHMENT_SCOPE].set_count */
extern void T758f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].move_last_cursors_after */
extern void T387f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].set_next_cursor */
extern void T760f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].set_after */
extern void T760f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].last */
extern T0* T387f6(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.make */
extern T0* T385c9(GE_context* ac);
/* DS_HASH_SET [INTEGER_32].make */
extern T0* T174c38(GE_context* ac, T6 a1);
/* DS_HASH_SET [INTEGER_32].set_internal_cursor */
extern void T174f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].make_slots */
extern void T174f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_clashes */
extern void T174f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_key_storage */
extern void T174f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_item_storage */
extern void T174f41(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].is_empty */
extern T1 T387f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_assertions_attachment_scope */
extern void T79f136(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.build_scope */
extern void T386f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.assertion */
extern T0* T388f7(GE_context* ac, T0* C, T6 a1);
/* ET_PRECONDITIONS.item */
extern T0* T388f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].first */
extern T0* T389f20(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].force_last */
extern void T389f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].key_storage_put */
extern void T389f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].slots_put */
extern void T389f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].clashes_put */
extern void T389f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].slots_item */
extern T6 T389f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].hash_position */
extern T6 T389f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].resize */
extern void T389f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].clashes_resize */
extern void T389f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].special_integer_ */
extern T0* T389f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].key_storage_resize */
extern void T389f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].item_storage_resize */
extern void T389f54(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].aliased_resized_area */
extern T0* T764f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PRECONDITIONS].aliased_resized_area */
extern T0* T762f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].key_storage_item */
extern T0* T389f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].slots_resize */
extern void T389f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].new_modulus */
extern T6 T389f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].new_capacity */
extern T6 T389f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].item_storage_put */
extern void T389f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].force */
extern void T764f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].fill_with */
extern void T762f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].extend */
extern void T762f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].search_position */
extern void T389f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].unset_found_item */
extern void T389f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.add_precursors_with_preconditions_recursive */
extern void T79f135(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_LIST.item */
extern T0* T391f3(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].make_map */
extern T0* T389c38(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].make_with_equality_testers */
extern void T389f42(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].make_sparse_container */
extern void T389f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].set_internal_cursor */
extern void T389f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].new_cursor */
extern T0* T389f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_PRECONDITIONS, ET_FEATURE].make */
extern T0* T761c7(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].make_slots */
extern void T389f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].make_clashes */
extern void T389f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].make_key_storage */
extern void T389f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].make_item_storage */
extern void T389f59(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].make */
extern T0* T764f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_PRECONDITIONS].make_empty */
extern T0* T762c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].default_create */
extern T0* T764c3(GE_context* ac);
/* ET_FEATURE_CHECKER.check_preconditions_validity */
extern void T369f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECONDITIONS.set_validity_error */
extern void T388f20(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.set_validity_checked */
extern void T388f19(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.free_context */
extern void T369f60(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.tokens */
extern T0* T369f43(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.keep_object_tests */
extern void T381f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].keep_first */
extern void T750f12(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.current_universe */
extern T0* T369f41(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.build_scope */
extern void T382f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwbe0a_error */
extern void T36f196(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_validity_error */
extern void T36f189(GE_context* ac, T0* C, T0* a1);
/* KL_STANDARD_FILES.output */
extern unsigned char ge259os13355;
extern T0* ge259ov13355;
extern T0* T130f2(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.make */
extern T0* T132c5(GE_context* ac);
/* ET_ERROR_HANDLER.report_info */
extern void T36f193(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vwbe0a */
extern T0* T531c740(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.set_compilers */
extern void T531f739(GE_context* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.filename */
extern T0* T531f21(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.default_message_template */
extern T0* T531f19(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.null_position */
extern unsigned char ge1008os28007;
extern T0* ge1008ov28007;
extern T0* T531f12(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.make_default */
extern T0* T179c13(GE_context* ac);
/* ET_VALIDITY_ERROR.template_code */
extern T0* T531f15(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T36f23(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwbe0a_error */
extern void T77f197(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_validity_error */
extern void T77f189(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info */
extern void T77f192(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T77f24(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_type */
extern T1 T379f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_expression_validity */
extern void T369f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_expression_supplier */
extern void T369f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_expression_supplier */
extern void T883f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.add_supplier */
extern void T883f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].force_last */
extern void T880f42(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].slots_put */
extern void T880f60(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].clashes_put */
extern void T880f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].slots_item */
extern T6 T880f18(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].hash_position */
extern T6 T880f20(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.hash_code */
extern T6 T470f36(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].resize */
extern void T880f62(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].clashes_resize */
extern void T880f72(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].special_integer_ */
extern T0* T880f33(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].key_storage_resize */
extern void T880f71(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].item_storage_resize */
extern void T880f70(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1470f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1468f4(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].key_storage_item */
extern T0* T880f32(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].item_storage_item */
extern T0* T880f35(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].clashes_item */
extern T6 T880f26(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].slots_resize */
extern void T880f69(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].new_modulus */
extern T6 T880f23(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].new_capacity */
extern T6 T880f19(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].item_storage_put */
extern void T880f57(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].force */
extern void T1470f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NAMED_CLASS].fill_with */
extern void T1468f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NAMED_CLASS].extend */
extern void T1468f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].search_position */
extern void T880f56(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].key_equality_tester */
extern T0* T880f31(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].unset_found_item */
extern void T880f47(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.actual_class */
extern T0* T470f19(GE_context* ac, T0* C);
/* ET_CLASS.actual_class */
extern T0* T82f97(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.count */
extern T6 T381f3(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.new_context */
extern T0* T369f36(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove_last */
extern void T378f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_last_cursors_after */
extern void T378f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_next_cursor */
extern void T742f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_after */
extern void T742f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].last */
extern T0* T378f6(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.make_with_capacity */
extern T0* T379c50(GE_context* ac, T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.make_ast_list_with_capacity */
extern void T379f52(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].make */
extern T0* T743f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE].make_empty */
extern T0* T262c5(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].is_empty */
extern T1 T378f10(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.current_system */
extern T0* T369f38(GE_context* ac, T0* C);
/* ET_CLASS.current_system */
extern T0* T82f98(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.current_universe_impl */
extern T0* T369f37(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.error_handler */
extern T0* T369f34(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_fatal_error */
extern void T369f61(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe */
extern T0* T79f49(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe_impl */
extern T0* T79f114(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_feature_validity */
extern void T79f129(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_precursor */
extern T1 T247f34(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_current_type_needed */
extern void T309f58(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_current_type_needed */
extern void T247f57(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_dynamic_type_sets */
extern void T309f57(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.set_dynamic_type_sets */
extern void T247f55(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T237f13(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T79f120(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T237f12(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T79f119(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_assertion */
extern void T237f16(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_assertion */
extern void T79f123(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_debug */
extern void T237f15(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_debug */
extern void T79f122(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_creation */
extern void T309f55(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_creation */
extern void T247f53(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.is_creation_directly_exported_to */
extern T1 T82f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_directly_exported_to */
extern T1 T833f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_directly_exported_to */
extern T1 T1041f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.has_feature_name */
extern T1 T1041f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.has_class */
extern T1 T1010f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT.base_class */
extern T0* T497f3(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.has_class */
extern T1 T468f4(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR.is_empty */
extern T1 T1041f9(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc5a_error */
extern void T36f177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_system_error */
extern void T36f187(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc5a */
extern T0* T529c32(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T36f12(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc5a_error */
extern void T77f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_system_error */
extern void T77f187(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T77f12(GE_context* ac, T0* C);
/* ET_CLASS.named_query */
extern T0* T82f60(GE_context* ac, T0* C, T0* a1);
/* ET_QUERY_LIST.named_feature */
extern T0* T265f5(GE_context* ac, T0* C, T0* a1);
extern T1 T265f5ot1(T0* a1, T0** a2);
/* ET_CLASS.named_procedure */
extern T0* T82f59(GE_context* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.named_feature */
extern T0* T266f5(GE_context* ac, T0* C, T0* a1);
extern T1 T266f5ot1(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vsrc1a_error */
extern void T36f176(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_vsrc1a */
extern T0* T529c31(GE_context* ac, T0* a1);
/* ET_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T36f111(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vsrc1a_error */
extern void T77f177(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T77f112(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc4a_error */
extern void T36f175(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc4a */
extern T0* T529c30(GE_context* ac, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T36f24(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc4a_error */
extern void T77f176(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T77f25(GE_context* ac, T0* C);
/* ET_CLASS.is_preparsed */
extern T1 T82f55(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc6a_error */
extern void T36f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_ERROR.make_gvsrc6a */
extern T0* T529c29(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T36f22(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc6a_error */
extern void T77f175(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T77f23(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_create_feature_name */
extern unsigned char ge807os11473;
extern T0* ge807ov11473;
extern T0* T81f4(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc3a_error */
extern void T36f173(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.make_gvsrc3a */
extern T0* T529c28(GE_context* ac);
/* ET_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T36f21(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc3a_error */
extern void T77f174(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T77f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile_kernel */
extern void T71f73(GE_context* ac, T0* C);
extern T1 T71f73ot1(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_gvkfe6a_error */
extern void T36f184(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkfe6a */
extern T0* T531c738(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ARRAY [ET_TYPE].item */
extern T0* T263f4(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T36f18(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe6a_error */
extern void T77f185(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T77f18(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_exception_data_feature_name */
extern unsigned char ge807os11628;
extern T0* ge807ov11628;
extern T0* T81f17(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvkfe4a_error */
extern void T36f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe4a */
extern T0* T531c737(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T36f17(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe4a_error */
extern void T77f184(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T77f17(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.init_exception_manager_feature_name */
extern unsigned char ge807os11526;
extern T0* ge807ov11526;
extern T0* T81f16(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_target_closed_feature_name */
extern unsigned char ge807os11554;
extern T0* ge807ov11554;
extern T0* T81f15(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.closed_operands_feature_name */
extern unsigned char ge807os11462;
extern T0* ge807ov11462;
extern T0* T81f14(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_pointer_feature */
extern T6 T81f13(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.to_pointer_feature_name */
extern unsigned char ge807os11655;
extern T0* ge807ov11655;
extern T0* T81f11(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_item_feature_name */
extern unsigned char ge807os11590;
extern T0* ge807ov11590;
extern T0* T81f10(GE_context* ac, T0* C);
/* UT_VERSION.is_less */
extern T1 T78f5(GE_context* ac, T0* C, T0* a1);
/* UT_VERSION.build */
extern T6 T78f14(GE_context* ac, T0* C);
/* UT_VERSION.has_build */
extern T1 T78f13(GE_context* ac, T0* C);
/* UT_VERSION.revision */
extern T6 T78f12(GE_context* ac, T0* C);
/* UT_VERSION.has_revision */
extern T1 T78f11(GE_context* ac, T0* C);
/* UT_VERSION.minor */
extern T6 T78f10(GE_context* ac, T0* C);
/* UT_VERSION.has_minor */
extern T1 T78f9(GE_context* ac, T0* C);
/* UT_VERSION.major */
extern T6 T78f8(GE_context* ac, T0* C);
/* UT_VERSION.has_major */
extern T1 T78f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.ise_6_0_6_7057 */
extern unsigned char ge191os1996;
extern T0* ge191ov1996;
extern T0* T71f47(GE_context* ac, T0* C);
/* UT_VERSION.make */
extern T0* T78c17(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_TOKEN_CONSTANTS.upper_feature_name */
extern unsigned char ge807os11665;
extern T0* ge807ov11665;
extern T0* T81f9(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.lower_feature_name */
extern unsigned char ge807os11564;
extern T0* ge807ov11564;
extern T0* T81f8(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.area_feature_name */
extern unsigned char ge807os11426;
extern T0* ge807ov11426;
extern T0* T81f7(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.capacity_feature_name */
extern unsigned char ge807os11449;
extern T0* ge807ov11449;
extern T0* T81f6(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvkfe3a_error */
extern void T36f182(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvkfe3a */
extern T0* T531c736(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T36f16(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe3a_error */
extern void T77f183(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T77f16(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe1a_error */
extern void T36f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe1a */
extern T0* T531c735(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T36f15(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe1a_error */
extern void T77f182(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T77f15(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe2a_error */
extern void T36f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe2a */
extern T0* T531c734(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T36f14(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe2a_error */
extern void T77f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T77f14(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.count_feature_name */
extern unsigned char ge807os11468;
extern T0* ge807ov11468;
extern T0* T81f5(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvknl1a_error */
extern void T36f179(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvknl1a */
extern T0* T529c33(GE_context* ac, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T36f13(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvknl1a_error */
extern void T77f180(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T77f13(GE_context* ac, T0* C);
/* DT_SYSTEM_CLOCK.date_time_now */
extern T0* T241f10(GE_context* ac, T0* C);
/* DT_SYSTEM_CLOCK.set_date_time_to_now */
extern void T241f12(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.set_precise_hour_minute_second */
extern void T240f58(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_DATE_TIME.set_year_month_day */
extern void T240f57(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_SYSTEM_CLOCK.set_local_time */
extern void T241f13(GE_context* ac, T0* C);
/* C_DATE.second_now */
extern T6 T644f6(GE_context* ac, T0* C);
/* C_DATE.get_tm_sec */
extern T6 T644f13(GE_context* ac, T0* C, T14 a1);
/* C_DATE.minute_now */
extern T6 T644f5(GE_context* ac, T0* C);
/* C_DATE.get_tm_min */
extern T6 T644f12(GE_context* ac, T0* C, T14 a1);
/* C_DATE.hour_now */
extern T6 T644f4(GE_context* ac, T0* C);
/* C_DATE.get_tm_hour */
extern T6 T644f11(GE_context* ac, T0* C, T14 a1);
/* C_DATE.day_now */
extern T6 T644f15(GE_context* ac, T0* C);
/* C_DATE.get_tm_mday */
extern T6 T644f10(GE_context* ac, T0* C, T14 a1);
/* C_DATE.month_now */
extern T6 T644f8(GE_context* ac, T0* C);
/* C_DATE.get_tm_mon */
extern T6 T644f9(GE_context* ac, T0* C, T14 a1);
/* C_DATE.year_now */
extern T6 T644f7(GE_context* ac, T0* C);
/* C_DATE.get_tm_year */
extern T6 T644f14(GE_context* ac, T0* C, T14 a1);
/* C_DATE.update */
extern void T644f23(GE_context* ac, T0* C);
/* POINTER.memory_free */
extern void T14f11(GE_context* ac, T14* C);
/* POINTER.default_pointer */
extern T14 T14f10(GE_context* ac, T14* C);
/* POINTER.c_free */
extern void T14f14(GE_context* ac, T14* C, T14 a1);
/* C_DATE.get_millitm */
extern T6 T644f21(GE_context* ac, T0* C, T14 a1);
/* C_DATE.tm_structure_size */
extern T6 T644f20(GE_context* ac, T0* C);
/* C_DATE.localtime */
extern T14 T644f19(GE_context* ac, T0* C, T14 a1);
/* C_DATE.gmtime */
extern T14 T644f18(GE_context* ac, T0* C, T14 a1);
/* C_DATE.get_time */
extern void T644f25(GE_context* ac, T0* C, T14 a1, T14 a2);
/* C_DATE.ftime */
extern void T644f24(GE_context* ac, T0* C, T14 a1);
/* C_DATE.time_t_structure_size */
extern T6 T644f17(GE_context* ac, T0* C);
/* C_DATE.timeb_structure_size */
extern T6 T644f16(GE_context* ac, T0* C);
/* C_DATE.default_create */
extern T0* T644c22(GE_context* ac);
/* DT_DATE_TIME.make_from_storage */
extern T0* T240c56(GE_context* ac, T6 a1, T6 a2);
/* DT_SHARED_SYSTEM_CLOCK.system_clock */
extern unsigned char ge1374os16237;
extern T0* ge1374ov16237;
extern T0* T239f1(GE_context* ac, T0* C);
/* DT_SYSTEM_CLOCK.make */
extern T0* T241c11(GE_context* ac);
/* DT_SHARED_SYSTEM_CLOCK.default_create */
extern T0* T239c2(GE_context* ac);
/* ET_DYNAMIC_SYSTEM.error_handler */
extern T0* T71f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.activate_dynamic_type_set_builder */
extern void T71f72(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile_all */
extern void T71f70(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.compile_all */
extern T0* T71f70ac1(T0* a1);
/* ET_DYNAMIC_SYSTEM.compile_all_features */
extern void T71f74(GE_context* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.item */
extern T0* T266f7(GE_context* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.item */
extern T0* T265f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.set_dynamic_type_set_builder */
extern void T71f67(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern T0* T79c118(GE_context* ac, T0* a1);
/* DS_CELL [INTEGER_32].make */
extern T0* T370c2(GE_context* ac, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_feature */
extern unsigned char ge1000os10342;
extern T0* ge1000ov10342;
extern T0* T79f55(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_feature */
extern unsigned char ge924os10748;
extern T0* ge924ov10748;
extern T0* T79f103(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern T0* T533c71(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DEFERRED_PROCEDURE.make */
extern void T533f71p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.deferred_keyword */
extern unsigned char ge807os11733;
extern T0* ge807ov11733;
extern T0* T81f571(GE_context* ac, T0* C);
/* ET_KEYWORD.make_deferred */
extern T0* T396c45(GE_context* ac);
/* ET_DEFERRED_PROCEDURE.tokens */
extern T0* T533f34(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_type */
extern unsigned char ge1000os10341;
extern T0* ge1000ov10341;
extern T0* T79f54(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.make */
extern T0* T369c58(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].make */
extern T0* T387c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].set_internal_cursor */
extern void T387f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].new_cursor */
extern T0* T387f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].make */
extern T0* T760c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].make */
extern T0* T759f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ATTACHMENT_SCOPE].make_empty */
extern T0* T758c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].default_create */
extern T0* T759c3(GE_context* ac);
/* ET_ATTACHMENT_SCOPE_BUILDER.make */
extern T0* T386c3(GE_context* ac);
/* ET_ACROSS_CURSOR_SCOPE.make */
extern T0* T384c6(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].make */
extern T0* T756c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].set_internal_cursor */
extern void T756f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].new_cursor */
extern T0* T756f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT].make */
extern T0* T1380c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT].make */
extern T0* T755f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACROSS_COMPONENT].make_empty */
extern T0* T754c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT].default_create */
extern T0* T755c3(GE_context* ac);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_map */
extern T0* T383c41(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_with_equality_testers */
extern void T383f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_sparse_container */
extern void T383f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].set_internal_cursor */
extern void T383f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].new_cursor */
extern T0* T383f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make */
extern T0* T751c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_slots */
extern void T383f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].new_modulus */
extern T6 T383f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_clashes */
extern void T383f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_key_storage */
extern void T383f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_item_storage */
extern void T383f57(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T741f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].make_empty */
extern T0* T740c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].default_create */
extern T0* T741c3(GE_context* ac);
/* ET_OBJECT_TEST_SCOPE_BUILDER.make */
extern T0* T382c8(GE_context* ac);
/* ET_OBJECT_TEST_SCOPE_BUILDER.tokens */
extern T0* T382f5(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.make */
extern T0* T381c6(GE_context* ac);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].make */
extern T0* T750c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T750f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T750f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].make */
extern T0* T1379c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].make */
extern T0* T749f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_OBJECT_TEST].make_empty */
extern T0* T748c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].default_create */
extern T0* T749c3(GE_context* ac);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_map */
extern T0* T380c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_with_equality_testers */
extern void T380f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_sparse_container */
extern void T380f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T380f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T380f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make */
extern T0* T744c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_slots */
extern void T380f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_modulus */
extern T6 T380f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_clashes */
extern void T380f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_key_storage */
extern void T380f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_item_storage */
extern void T380f55(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T378c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].set_internal_cursor */
extern void T378f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_cursor */
extern T0* T378f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T742c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T377c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].set_internal_cursor */
extern void T377f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].new_cursor */
extern T0* T377f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T739c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T736f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].make_empty */
extern T0* T738c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].default_create */
extern T0* T736c3(GE_context* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T376c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].set_internal_cursor */
extern void T376f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_cursor */
extern T0* T376f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T735c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T732f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].make_empty */
extern T0* T734c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].default_create */
extern T0* T732c3(GE_context* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T375c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].set_internal_cursor */
extern void T375f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_cursor */
extern T0* T375f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T731c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T728f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].make_empty */
extern T0* T730c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].default_create */
extern T0* T728c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].make */
extern T0* T374c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].set_internal_cursor */
extern void T374f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_cursor */
extern T0* T374f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].make */
extern T0* T727c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].make */
extern T0* T724f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].make_empty */
extern T0* T726c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].default_create */
extern T0* T724c3(GE_context* ac);
/* ET_FEATURE_CHECKER.dummy_feature */
extern T0* T369f49(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.make */
extern T0* T372c17(GE_context* ac);
/* ET_TYPE_CHECKER.dummy_feature */
extern unsigned char ge948os19981;
extern T0* ge948ov19981;
extern T0* T372f14(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.tokens */
extern T0* T372f12(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.make */
extern void T372f17p1(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make_feature_checker */
extern void T79f125(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_context */
extern T0* T79f56(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_new_instance_types */
extern void T71f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].force */
extern void T76f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].slots_put */
extern void T76f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].clashes_put */
extern void T76f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].resize */
extern void T76f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].clashes_resize */
extern void T76f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].special_integer_ */
extern T0* T76f34(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].key_storage_resize */
extern void T76f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_resize */
extern void T76f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].slots_resize */
extern void T76f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_capacity */
extern T6 T76f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_put */
extern void T76f46(GE_context* ac, T0* C, T0* a1, T6 a2);
/* STRING_8.starts_with */
extern T1 T17f13(GE_context* ac, T0* C, T0* a1);
/* STRING_8.is_empty */
extern T1 T17f12(GE_context* ac, T0* C);
/* STRING_8.right_adjust */
extern void T17f52(GE_context* ac, T0* C);
/* CHARACTER_8.is_space */
extern T1 T2f4(GE_context* ac, T2* C);
/* STRING_8.left_adjust */
extern void T17f51(GE_context* ac, T0* C);
/* STRING_8.twin */
extern T0* T17f6(GE_context* ac, T0* C);
/* STRING_8.copy */
extern void T17f53(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.read_line */
extern void T29f49(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.unread_character */
extern void T29f54(GE_context* ac, T0* C, T2 a1);
/* detachable KL_LINKABLE [CHARACTER_8].put_right */
extern void T126f4(GE_context* ac, T0* C, T0* a1);
/* detachable KL_LINKABLE [CHARACTER_8].make */
extern T0* T126c3(GE_context* ac, T2 a1);
/* KL_TEXT_INPUT_FILE.string_ */
extern T0* T29f28(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].make_equal */
extern T0* T76c37(GE_context* ac, T6 a1);
/* AP_STRING_OPTION.parameter */
extern T0* T46f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_catcall_warning_mode */
extern void T71f65(GE_context* ac, T0* C, T1 a1);
/* GEC.catcall_warning_mode */
extern T1 T22f32(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_catcall_error_mode */
extern void T71f64(GE_context* ac, T0* C, T1 a1);
/* GEC.catcall_error_mode */
extern T1 T22f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_full_class_checking */
extern void T71f63(GE_context* ac, T0* C, T1 a1);
/* GEC.is_gelint */
extern T1 T22f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.make */
extern T0* T71c62(GE_context* ac, T0* a1);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.make */
extern T0* T71f62ac1(T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.make */
extern T0* T237c11(GE_context* ac, T0* a1);
/* ET_DYNAMIC_SYSTEM.make_basic_types */
extern void T71f69(GE_context* ac, T0* C);
/* GEC.is_verbose */
extern T1 T22f29(GE_context* ac, T0* C);
/* GEC.qualified_anchored_types_enabled */
extern T1 T22f28(GE_context* ac, T0* C);
/* GEC.ise_latest */
extern unsigned char ge191os2017;
extern T0* ge191ov2017;
extern T0* T22f27(GE_context* ac, T0* C);
/* UT_VERSION.make_latest */
extern T0* T78c16(GE_context* ac);
/* ET_ERROR_HANDLER.set_ise */
extern void T36f172(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.set_ise */
extern void T77f173(GE_context* ac, T0* C);
/* GEC.null_error_handler */
extern unsigned char ge1013os2019;
extern T0* ge1013ov2019;
extern T0* T22f26(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.make_null */
extern T0* T77c172(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.null_output_stream */
extern T0* T77f21(GE_context* ac, T0* C);
/* GEC.is_silent */
extern T1 T22f25(GE_context* ac, T0* C);
/* GEC.parse_ace_file */
extern void T22f46(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.syntax_error */
extern T1 T68f141(GE_context* ac, T0* C);
/* ET_LACE_PARSER.parse_file */
extern void T68f248(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yyparse */
extern void T68f252(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_pop_last_value */
extern void T68f265(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.yy_push_error_value */
extern void T68f264(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_do_action */
extern void T68f263(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.add_external_value */
extern void T68f278(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.object_option */
extern unsigned char ge1059os6510;
extern T0* ge1059ov6510;
extern T0* T68f223(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_identifier */
extern T0* T68f140(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_position */
extern void T181f111(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].force_last */
extern void T136f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].resize */
extern void T136f29(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].new_capacity */
extern T6 T136f18(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].extendible */
extern T1 T136f17(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.include_path_option */
extern unsigned char ge1059os6507;
extern T0* ge1059ov6507;
extern T0* T68f222(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_gac_assembly */
extern T0* T68f174(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_public_key_token_id */
extern void T229f116(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_public_key_token */
extern void T229f121(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_culture_id */
extern void T229f115(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_culture */
extern void T229f120(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_version_id */
extern void T229f114(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_version */
extern void T229f119(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.unknown_system */
extern unsigned char ge807os12260;
extern T0* ge807ov12260;
extern T0* T81f3(GE_context* ac, T0* C);
/* ET_SYSTEM.make */
extern T0* T33c159(GE_context* ac, T0* a1);
/* ET_SYSTEM.set_default_class_mapping */
extern void T33f167(GE_context* ac, T0* C);
/* ET_SYSTEM.set_wide_character_ref_class_mapping */
extern void T33f225(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_class_mapping */
extern void T33f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.set_mapped_class */
extern void T470f51(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.set_marked */
extern void T470f52(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.set_marked */
extern void T82f223(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.is_unknown */
extern T1 T82f63(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.wide_character_ref_class_name */
extern unsigned char ge807os11423;
extern T0* ge807ov11423;
extern T0* T81f165(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_ref_class_name */
extern unsigned char ge807os11407;
extern T0* ge807ov11407;
extern T0* T81f149(GE_context* ac, T0* C);
/* ET_SYSTEM.set_wide_character_class_mapping */
extern void T33f224(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_string_class_mapping */
extern void T33f223(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.string_class_name */
extern unsigned char ge807os11394;
extern T0* ge807ov11394;
extern T0* T81f157(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_8_class_name */
extern unsigned char ge807os11395;
extern T0* ge807ov11395;
extern T0* T81f148(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_ref_class_mapping */
extern void T33f222(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.real_ref_class_name */
extern unsigned char ge807os11420;
extern T0* ge807ov11420;
extern T0* T81f164(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_ref_class_name */
extern unsigned char ge807os11421;
extern T0* ge807ov11421;
extern T0* T81f147(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_class_mapping */
extern void T33f221(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_natural_ref_class_mapping */
extern void T33f220(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.natural_ref_class_name */
extern unsigned char ge807os11414;
extern T0* ge807ov11414;
extern T0* T81f163(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_ref_class_name */
extern unsigned char ge807os11417;
extern T0* ge807ov11417;
extern T0* T81f146(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_class_mapping */
extern void T33f219(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_integer_ref_class_mapping */
extern void T33f218(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.integer_ref_class_name */
extern unsigned char ge807os11409;
extern T0* ge807ov11409;
extern T0* T81f162(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_ref_class_name */
extern unsigned char ge807os11412;
extern T0* ge807ov11412;
extern T0* T81f145(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_class_mapping */
extern void T33f217(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_double_ref_class_mapping */
extern void T33f216(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.double_ref_class_name */
extern unsigned char ge807os11408;
extern T0* ge807ov11408;
extern T0* T81f161(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_ref_class_name */
extern unsigned char ge807os11422;
extern T0* ge807ov11422;
extern T0* T81f144(GE_context* ac, T0* C);
/* ET_SYSTEM.set_double_class_mapping */
extern void T33f215(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_character_ref_class_mapping */
extern void T33f214(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.character_ref_class_name */
extern unsigned char ge807os11405;
extern T0* ge807ov11405;
extern T0* T81f160(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_ref_class_name */
extern unsigned char ge807os11406;
extern T0* ge807ov11406;
extern T0* T81f143(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_class_mapping */
extern void T33f213(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_kernel_types */
extern void T33f166(GE_context* ac, T0* C);
/* ET_SYSTEM.set_wide_character_type */
extern void T33f212(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.make */
extern T0* T80c107(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_MASTER_CLASS.set_in_system */
extern void T470f49(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM.set_typed_pointer_type */
extern void T33f211(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.like_current */
extern unsigned char ge807os11668;
extern T0* ge807ov11668;
extern T0* T81f151(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.make */
extern T0* T503c70(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.like_keyword */
extern unsigned char ge807os11753;
extern T0* ge807ov11753;
extern T0* T81f570(GE_context* ac, T0* C);
/* ET_KEYWORD.make_like */
extern T0* T396c44(GE_context* ac);
/* ET_LIKE_CURRENT.tokens */
extern T0* T503f4(GE_context* ac, T0* C);
/* ET_SYSTEM.set_type_type */
extern void T33f210(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_like_current */
extern unsigned char ge807os11670;
extern T0* ge807ov11670;
extern T0* T81f159(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_keyword */
extern unsigned char ge807os11734;
extern T0* ge807ov11734;
extern T0* T81f150(GE_context* ac, T0* C);
/* ET_KEYWORD.make_detachable */
extern T0* T396c38(GE_context* ac);
/* ET_SYSTEM.set_system_string_type */
extern void T33f209(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.system_string_class_name */
extern unsigned char ge807os11398;
extern T0* ge807ov11398;
extern T0* T81f158(GE_context* ac, T0* C);
/* ET_SYSTEM.set_system_object_type */
extern void T33f208(GE_context* ac, T0* C);
/* ET_PARENT_LIST.put_first */
extern void T467f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].force */
extern void T1154f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_ITEM].fill_with */
extern void T1155f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_ITEM].extend */
extern void T1155f10(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_LIST.fixed_array */
extern unsigned char ge542os12638;
extern T0* ge542ov12638;
extern T0* T467f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].default_create */
extern T0* T1154c3(GE_context* ac);
/* ET_PARENT_LIST.make_with_capacity */
extern T0* T467c10(GE_context* ac, T6 a1);
/* ET_PARENT_LIST.make_with_capacity */
extern void T467f10p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].make */
extern T0* T1154f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].make_empty */
extern T0* T1155c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.inherit_keyword */
extern unsigned char ge807os11749;
extern T0* ge807ov11749;
extern T0* T81f567(GE_context* ac, T0* C);
/* ET_KEYWORD.make_inherit */
extern T0* T396c43(GE_context* ac);
/* ET_PARENT_LIST.tokens */
extern T0* T467f4(GE_context* ac, T0* C);
/* ET_PARENT.make */
extern T0* T466c11(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_PARENT.tokens */
extern T0* T466f9(GE_context* ac, T0* C);
/* ET_PARENT.has_feature_adaptation */
extern T1 T466f8(GE_context* ac, T0* C);
/* ET_SYSTEM.set_string_type */
extern void T33f207(GE_context* ac, T0* C);
/* ET_SYSTEM.set_string_32_type */
extern void T33f206(GE_context* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.make */
extern T0* T469c6(GE_context* ac, T0* a1);
/* ET_BRACED_TYPE_LIST.make */
extern T0* T1315c8(GE_context* ac);
/* ET_BRACED_TYPE_LIST.make */
extern void T1315f8p1(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].make */
extern T0* T1174f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].make_empty */
extern T0* T1176c5(GE_context* ac, T6 a1);
/* ET_BRACED_TYPE_LIST.fixed_array */
extern unsigned char ge905os12638;
extern T0* ge905ov12638;
extern T0* T1315f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].default_create */
extern T0* T1174c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.right_brace_symbol */
extern unsigned char ge807os11711;
extern T0* ge807ov11711;
extern T0* T81f584(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_brace */
extern T0* T345c88(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_brace_symbol */
extern unsigned char ge807os11706;
extern T0* ge807ov11706;
extern T0* T81f583(GE_context* ac, T0* C);
/* ET_SYMBOL.make_left_brace */
extern T0* T345c87(GE_context* ac);
/* ET_BRACED_TYPE_LIST.tokens */
extern T0* T1315f5(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_32_class_name */
extern unsigned char ge807os11396;
extern T0* ge807ov11396;
extern T0* T81f156(GE_context* ac, T0* C);
/* ET_SYSTEM.set_string_8_type */
extern void T33f205(GE_context* ac, T0* C);
/* ET_SYSTEM.set_special_type */
extern void T33f204(GE_context* ac, T0* C);
/* ET_SYSTEM.set_routine_type */
extern void T33f203(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_64_type */
extern void T33f202(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_32_type */
extern void T33f201(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_type */
extern void T33f200(GE_context* ac, T0* C);
/* ET_SYSTEM.set_procedure_type */
extern void T33f199(GE_context* ac, T0* C);
/* ET_SYSTEM.set_predicate_type */
extern void T33f198(GE_context* ac, T0* C);
/* ET_SYSTEM.set_pointer_type */
extern void T33f197(GE_context* ac, T0* C);
/* ET_SYSTEM.set_none_type */
extern void T33f196(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_class */
extern void T470f50(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_first_local_non_override_class */
extern void T470f56(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.update_intrinsic_class */
extern void T470f58(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.set_intrinsic_class */
extern void T470f60(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T470f60ac1(T0* a1);
/* Creation of agent #2 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T470f60ac2(T0* a1);
/* Creation of agent #3 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T470f60ac3(T0* a1);
extern T1 T470f60ot1(T0* a1, T0** a2);
/* ET_MASTER_CLASS.mark_overridden */
extern void T470f57(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_overriding_class */
extern void T470f59(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].force_last */
extern void T1317f16(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].force */
extern void T635f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_MASTER_CLASS].fill_with */
extern void T636f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_MASTER_CLASS].extend */
extern void T636f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].resize */
extern void T1317f22(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].aliased_resized_area */
extern T0* T635f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MASTER_CLASS].aliased_resized_area */
extern T0* T636f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].new_capacity */
extern T6 T1317f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].extendible */
extern T1 T1317f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].make */
extern T0* T1317c14(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].set_internal_cursor */
extern void T1317f21(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].new_cursor */
extern T0* T1317f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].make */
extern T0* T1528c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].make */
extern T0* T635f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].make_empty */
extern T0* T636c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].default_create */
extern T0* T635c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_master_classes */
extern unsigned char ge807os12267;
extern T0* ge807ov12267;
extern T0* T81f569(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_override */
extern T1 T470f21(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_override */
extern T1 T82f100(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].do_all */
extern void T1317f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].item */
extern T0* T1317f7(GE_context* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.unmark_overridden */
extern void T470f61(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_overriding_class */
extern void T470f62(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove_first */
extern void T1317f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove */
extern void T1317f20(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].keep_head */
extern void T636f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].set_count */
extern void T636f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_left */
extern void T1317f27(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_cursors_left */
extern void T1317f26(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_position */
extern void T1528f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove_last */
extern void T1317f25(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_last_cursors_after */
extern void T1317f31(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_next_cursor */
extern void T1528f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_after */
extern void T1528f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].first */
extern T0* T1317f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].is_empty */
extern T1 T1317f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].delete */
extern void T1317f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_all_cursors_after */
extern void T1317f24(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].force_first */
extern void T1316f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].put */
extern void T1316f27(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_cursors_right */
extern void T1316f33(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_position */
extern void T1527f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].move_right */
extern void T1316f32(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].force */
extern void T1005f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLASS].fill_with */
extern void T1006f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLASS].extend */
extern void T1006f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].put_last */
extern void T1316f23(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].resize */
extern void T1316f25(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].aliased_resized_area */
extern T0* T1005f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLASS].aliased_resized_area */
extern T0* T1006f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_capacity */
extern T6 T1316f12(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].extendible */
extern T1 T1316f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].make */
extern T0* T1316c15(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].set_internal_cursor */
extern void T1316f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_cursor */
extern T0* T1316f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].make */
extern T0* T1527c9(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].make */
extern T0* T1005f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].make_empty */
extern T0* T1006c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].default_create */
extern T0* T1005c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_classes */
extern unsigned char ge807os12266;
extern T0* ge807ov12266;
extern T0* T81f568(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.tokens */
extern T0* T470f20(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_override_class */
extern void T470f55(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_in_override_group */
extern T1 T82f99(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_ignored_class */
extern void T470f54(GE_context* ac, T0* C, T0* a1);
/* ET_NONE_GROUP.make */
extern T0* T505c29(GE_context* ac, T0* a1);
/* ET_AST_FACTORY.new_class */
extern T0* T402f1(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.none_class_name */
extern unsigned char ge807os11384;
extern T0* ge807ov11384;
extern T0* T81f155(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_64_type */
extern void T33f195(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_32_type */
extern void T33f194(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_16_type */
extern void T33f193(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_8_type */
extern void T33f192(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_type */
extern void T33f191(GE_context* ac, T0* C);
/* ET_SYSTEM.set_iterable_type */
extern void T33f190(GE_context* ac, T0* C);
/* ET_SYSTEM.set_ise_exception_manager_type */
extern void T33f189(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ise_exception_manager_class_name */
extern unsigned char ge807os11374;
extern T0* ge807ov11374;
extern T0* T81f154(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_64_type */
extern void T33f188(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_32_type */
extern void T33f187(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_16_type */
extern void T33f186(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_8_type */
extern void T33f185(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_type */
extern void T33f184(GE_context* ac, T0* C);
/* ET_SYSTEM.set_function_type */
extern void T33f183(GE_context* ac, T0* C);
/* ET_SYSTEM.set_exception_manager_type */
extern void T33f182(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_class_name */
extern unsigned char ge807os11364;
extern T0* ge807ov11364;
extern T0* T81f153(GE_context* ac, T0* C);
/* ET_SYSTEM.set_exception_type */
extern void T33f181(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_class_name */
extern unsigned char ge807os11363;
extern T0* ge807ov11363;
extern T0* T81f152(GE_context* ac, T0* C);
/* ET_SYSTEM.set_double_type */
extern void T33f180(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_32_type */
extern void T33f179(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_8_type */
extern void T33f178(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_type */
extern void T33f177(GE_context* ac, T0* C);
/* ET_SYSTEM.set_boolean_type */
extern void T33f176(GE_context* ac, T0* C);
/* ET_SYSTEM.set_array_type */
extern void T33f175(GE_context* ac, T0* C);
/* ET_SYSTEM.set_tuple_type */
extern void T33f174(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T504c17(GE_context* ac, T0* a1);
/* ET_SYSTEM.set_any_type */
extern void T33f173(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.put_first */
extern void T468f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].force */
extern void T1007f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLIENT_ITEM].fill_with */
extern void T1008f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLIENT_ITEM].extend */
extern void T1008f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT.make */
extern T0* T497c6(GE_context* ac, T0* a1, T0* a2);
/* ET_CLIENT_LIST.make_with_capacity */
extern T0* T468c10(GE_context* ac, T6 a1);
/* ET_SYSTEM.make_adapted */
extern void T33f165(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.default_read_only_value */
extern unsigned char ge731os3714;
extern T1 ge731ov3714;
extern T1 T33f147(GE_context* ac, T0* C);
/* ET_SYSTEM.set_unknown_kernel_types */
extern void T33f164(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_convert_feature */
extern unsigned char ge807os12247;
extern T0* ge807ov12247;
extern T0* T81f142(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_generic_class_type */
extern unsigned char ge807os12257;
extern T0* ge807ov12257;
extern T0* T81f141(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.make */
extern T0* T251c29(GE_context* ac);
/* ET_ACTUAL_PARAMETER_LIST.make */
extern void T251f29p1(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.empty_actual_parameters */
extern unsigned char ge807os12265;
extern T0* ge807ov12265;
extern T0* T81f140(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_tuple_type */
extern unsigned char ge807os12258;
extern T0* ge807ov12258;
extern T0* T81f139(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_parents */
extern unsigned char ge807os12251;
extern T0* ge807ov12251;
extern T0* T81f137(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_parent */
extern unsigned char ge807os12250;
extern T0* ge807ov12250;
extern T0* T81f136(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_class_type */
extern unsigned char ge807os12256;
extern T0* ge807ov12256;
extern T0* T81f135(GE_context* ac, T0* C);
/* ET_SYSTEM.set_system_name */
extern void T33f163(GE_context* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.make */
extern T0* T429c1(GE_context* ac);
/* DS_ARRAYED_LIST [STRING_8].make */
extern void T136f22(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].make */
extern T0* T136c22(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].set_internal_cursor */
extern void T136f28(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].new_cursor */
extern T0* T136f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].make */
extern T0* T462c9(GE_context* ac, T0* a1);
/* ET_SYSTEM.set_preparse_shallow_mode */
extern void T33f162(GE_context* ac, T0* C);
/* ET_SYSTEM.set_default_keyword_usage */
extern void T33f161(GE_context* ac, T0* C);
/* ET_SYSTEM.set_use_detachable_keyword */
extern void T33f172(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM.set_use_attached_keyword */
extern void T33f171(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM.set_use_reference_keyword */
extern void T33f170(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM.set_use_note_keyword */
extern void T33f169(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM.set_use_attribute_keyword */
extern void T33f168(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM.initialize */
extern void T33f160(GE_context* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.make_empty */
extern T0* T196c6(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T625c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T625f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T625f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1370c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1369f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T1368c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T1369c3(GE_context* ac);
/* ET_CLUSTERS.make_empty */
extern T0* T770c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_CLUSTER].make */
extern T0* T1419c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].set_internal_cursor */
extern void T1419f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].new_cursor */
extern T0* T1419f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLUSTER].make */
extern T0* T1606c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].make */
extern T0* T1605f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLUSTER].make_empty */
extern T0* T1604c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].default_create */
extern T0* T1605c3(GE_context* ac);
/* ET_ADAPTED_LIBRARIES.make_empty */
extern T0* T189c6(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].make */
extern T0* T622c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].set_internal_cursor */
extern void T622f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].new_cursor */
extern T0* T622f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY].make */
extern T0* T1364c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].make */
extern T0* T1363f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_LIBRARY].make_empty */
extern T0* T1362c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].default_create */
extern T0* T1363c3(GE_context* ac);
/* ET_SYSTEM.initialize */
extern void T33f160p1(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].set_key_equality_tester */
extern void T232f39(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.class_name_tester */
extern T0* T33f141(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_map */
extern T0* T232c38(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_with_equality_testers */
extern void T232f41(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_sparse_container */
extern void T232f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].set_internal_cursor */
extern void T232f48(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T232f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].make */
extern T0* T634c10(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].unset_found_item */
extern void T232f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_slots */
extern void T232f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_modulus */
extern T6 T232f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_clashes */
extern void T232f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_key_storage */
extern void T232f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_item_storage */
extern void T232f43(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.default_ast_factory */
extern unsigned char ge807os12264;
extern T0* ge807ov12264;
extern T0* T81f134(GE_context* ac, T0* C);
/* ET_AST_FACTORY.make */
extern T0* T402c354(GE_context* ac);
/* ET_TOKEN_CONSTANTS.standard_error_handler */
extern unsigned char ge807os12263;
extern T0* ge807ov12263;
extern T0* T81f133(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.make_standard */
extern T0* T36c171(GE_context* ac);
/* ET_SYSTEM.tokens */
extern T0* T33f145(GE_context* ac, T0* C);
/* ET_LACE_PARSER.tokens */
extern T0* T68f241(GE_context* ac, T0* C);
/* ET_LACE_AST_FACTORY.new_gac_assembly */
extern T0* T202f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make */
extern T0* T229c112(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_dotnet_gac_assembly */
extern void T229f117(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_dotnet_assembly */
extern void T229f122(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_from_system */
extern void T229f123(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_default_class_mapping */
extern void T229f128(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T229f181(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_class_mapping */
extern void T229f182(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_class */
extern T0* T229f97(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].force_last_new */
extern void T232f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_put */
extern void T232f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_put */
extern void T232f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_put */
extern void T232f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_put */
extern void T232f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_item */
extern T6 T232f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].hash_position */
extern T6 T232f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].resize */
extern void T232f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_resize */
extern void T232f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].special_integer_ */
extern T0* T232f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_resize */
extern void T232f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_resize */
extern void T232f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_item */
extern T0* T232f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_item */
extern T6 T232f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_resize */
extern void T232f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_capacity */
extern T6 T232f25(GE_context* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.make */
extern T0* T470c48(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].found_item */
extern T0* T232f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_item */
extern T0* T232f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].found */
extern T1 T232f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].search */
extern void T232f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].search_position */
extern void T232f51(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_wide_character_class_mapping */
extern void T229f180(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_class_mapping */
extern void T229f179(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_ref_class_mapping */
extern void T229f178(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_class_mapping */
extern void T229f177(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_ref_class_mapping */
extern void T229f176(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_class_mapping */
extern void T229f175(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_ref_class_mapping */
extern void T229f174(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_class_mapping */
extern void T229f173(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_double_ref_class_mapping */
extern void T229f172(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_double_class_mapping */
extern void T229f171(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_ref_class_mapping */
extern void T229f170(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_class_mapping */
extern void T229f169(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.tokens */
extern T0* T229f102(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_kernel_types */
extern void T229f127(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_wide_character_type */
extern void T229f168(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_typed_pointer_type */
extern void T229f167(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_type_type */
extern void T229f166(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_system_string_type */
extern void T229f165(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_system_object_type */
extern void T229f164(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_type */
extern void T229f163(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_32_type */
extern void T229f162(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_8_type */
extern void T229f161(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_special_type */
extern void T229f160(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_routine_type */
extern void T229f159(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_64_type */
extern void T229f158(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_32_type */
extern void T229f157(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_type */
extern void T229f156(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_procedure_type */
extern void T229f155(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_predicate_type */
extern void T229f154(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_pointer_type */
extern void T229f153(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_none_type */
extern void T229f152(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_imported_class */
extern void T470f53(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].force_first */
extern void T1317f15(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].put */
extern void T1317f23(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_cursors_right */
extern void T1317f30(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_right */
extern void T1317f29(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].put_last */
extern void T1317f28(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_64_type */
extern void T229f151(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_32_type */
extern void T229f150(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_16_type */
extern void T229f149(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_8_type */
extern void T229f148(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_type */
extern void T229f147(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_iterable_type */
extern void T229f146(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_ise_exception_manager_type */
extern void T229f145(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_64_type */
extern void T229f144(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_32_type */
extern void T229f143(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_16_type */
extern void T229f142(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_8_type */
extern void T229f141(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_type */
extern void T229f140(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_function_type */
extern void T229f139(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_exception_manager_type */
extern void T229f138(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_exception_type */
extern void T229f137(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_double_type */
extern void T229f136(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_32_type */
extern void T229f135(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_8_type */
extern void T229f134(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_type */
extern void T229f133(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_boolean_type */
extern void T229f132(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_array_type */
extern void T229f131(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_tuple_type */
extern void T229f130(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_any_type */
extern void T229f129(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_adapted */
extern void T229f126(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.default_read_only_value */
extern unsigned char ge711os3714;
extern T1 ge711ov3714;
extern T1 T229f96(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_unknown_kernel_types */
extern void T229f125(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.initialize */
extern void T229f124(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.class_name_tester */
extern T0* T229f104(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLIES.make_empty */
extern T0* T446c5(GE_context* ac);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].make */
extern T0* T1313c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1313f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1313f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY].make */
extern T0* T1526c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].make */
extern T0* T1310f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_ASSEMBLY].make_empty */
extern T0* T1311c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].default_create */
extern T0* T1310c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].force */
extern void T228f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].fill_with */
extern void T227f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].extend */
extern void T227f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T228f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T227f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_classname_prefix_id */
extern void T229f113(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_classname_prefix */
extern void T229f118(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_classname_prefix_id */
extern void T216f106(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T216f108(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.new_assembly */
extern T0* T68f171(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_AST_FACTORY.new_assembly */
extern T0* T202f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.make */
extern T0* T216c105(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.make_dotnet_assembly */
extern void T216f107(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.make_from_system */
extern void T216f109(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.set_default_class_mapping */
extern void T216f114(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T216f167(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_class_mapping */
extern void T216f168(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.master_class */
extern T0* T216f90(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_wide_character_class_mapping */
extern void T216f166(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_class_mapping */
extern void T216f165(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_ref_class_mapping */
extern void T216f164(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_class_mapping */
extern void T216f163(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_ref_class_mapping */
extern void T216f162(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_class_mapping */
extern void T216f161(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_ref_class_mapping */
extern void T216f160(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_class_mapping */
extern void T216f159(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_double_ref_class_mapping */
extern void T216f158(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_double_class_mapping */
extern void T216f157(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_ref_class_mapping */
extern void T216f156(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_class_mapping */
extern void T216f155(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.tokens */
extern T0* T216f95(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_kernel_types */
extern void T216f113(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T216f154(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T216f153(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_type_type */
extern void T216f152(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_system_string_type */
extern void T216f151(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_system_object_type */
extern void T216f150(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_type */
extern void T216f149(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_32_type */
extern void T216f148(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_8_type */
extern void T216f147(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_special_type */
extern void T216f146(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_routine_type */
extern void T216f145(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_64_type */
extern void T216f144(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_32_type */
extern void T216f143(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_type */
extern void T216f142(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_procedure_type */
extern void T216f141(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_predicate_type */
extern void T216f140(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_pointer_type */
extern void T216f139(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_none_type */
extern void T216f138(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T216f137(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T216f136(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T216f135(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T216f134(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_type */
extern void T216f133(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_iterable_type */
extern void T216f132(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T216f131(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T216f130(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T216f129(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T216f128(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T216f127(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_type */
extern void T216f126(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_function_type */
extern void T216f125(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T216f124(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_exception_type */
extern void T216f123(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_double_type */
extern void T216f122(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_32_type */
extern void T216f121(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_8_type */
extern void T216f120(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_type */
extern void T216f119(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_boolean_type */
extern void T216f118(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_array_type */
extern void T216f117(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_tuple_type */
extern void T216f116(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_any_type */
extern void T216f115(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.make_adapted */
extern void T216f112(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T216f89(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T216f111(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.initialize */
extern void T216f110(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T216f97(GE_context* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T196f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T625f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T1369f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T1368f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T1368f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T625f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1369f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1368f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T625f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T625f7(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_assemblies */
extern T0* T68f168(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_assemblies */
extern T0* T202f6(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.make */
extern T0* T196c10(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].put_last */
extern void T625f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].force */
extern void T226f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].fill_with */
extern void T219f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].extend */
extern void T219f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].aliased_resized_area */
extern T0* T226f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].aliased_resized_area */
extern T0* T219f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_EXCLUDE.put_last */
extern void T215f7(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_EXCLUDE.make */
extern T0* T215c6(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].force */
extern void T225f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LACE_EXCLUDE].fill_with */
extern void T224f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LACE_EXCLUDE].extend */
extern void T224f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].aliased_resized_area */
extern T0* T225f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LACE_EXCLUDE].aliased_resized_area */
extern T0* T224f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_CLUSTER.set_subclusters */
extern void T214f58(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_parent */
extern void T213f5(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_parent */
extern void T214f62(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_exclude */
extern void T214f57(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.new_cluster */
extern T0* T68f158(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].force_last */
extern void T203f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_put */
extern void T203f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_put */
extern void T203f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_put */
extern void T203f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_item */
extern T6 T203f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].hash_position */
extern T6 T203f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].resize */
extern void T203f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_resize */
extern void T203f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].special_integer_ */
extern T0* T203f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_resize */
extern void T203f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_resize */
extern void T203f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_item */
extern T0* T203f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_item */
extern T6 T203f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_resize */
extern void T203f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_modulus */
extern T6 T203f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_capacity */
extern T6 T203f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_put */
extern void T203f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search_position */
extern void T203f44(GE_context* ac, T0* C, T0* a1);
/* detachable KL_EQUALITY_TESTER [ET_IDENTIFIER].test */
extern T1 T302f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.is_equal */
extern T1 T181f26(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.any_ */
extern T0* T181f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].unset_found_item */
extern void T203f39(GE_context* ac, T0* C);
/* ET_LACE_AST_FACTORY.new_cluster */
extern T0* T202f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_CLUSTER.make */
extern T0* T214c53(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T214f59(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T213f6(GE_context* ac, T0* C, T1 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].aliased_resized_area */
extern T0* T223f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_CLUSTER].aliased_resized_area */
extern T0* T222f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_qualified_subcluster */
extern T0* T68f156(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LACE_PARSER.report_error */
extern void T68f276(GE_context* ac, T0* C, T0* a1);
extern T1 T68f276ot1(T0* a1, T0** a2);
/* ET_LACE_ERROR_HANDLER.report_error */
extern void T69f7(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.report_error_message */
extern void T69f8(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.message */
extern T0* T69f5(GE_context* ac, T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.append_decimal_integer */
extern void T231f6(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_LACE_PARSER.integer_ */
extern T0* T68f219(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.add_subcluster */
extern void T214f61(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make_empty */
extern T0* T213c7(GE_context* ac);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].make */
extern T0* T631c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].set_internal_cursor */
extern void T631f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_cursor */
extern T0* T631f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].make */
extern T0* T1372c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].make */
extern T0* T223f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTER].make_empty */
extern T0* T222c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].default_create */
extern T0* T223c3(GE_context* ac);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found_item */
extern T0* T203f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_item */
extern T0* T203f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found */
extern T1 T203f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search */
extern void T203f35(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_read_only */
extern void T214f56(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_recursive */
extern void T214f55(GE_context* ac, T0* C, T1 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].force */
extern void T223f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].fill_with */
extern void T222f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].extend */
extern void T222f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_abstract */
extern void T214f54(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTERS.put_last */
extern void T213f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].force_last */
extern void T631f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].resize */
extern void T631f14(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_capacity */
extern T6 T631f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].extendible */
extern T1 T631f7(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_clusters */
extern T0* T68f151(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_clusters */
extern T0* T202f4(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make */
extern T0* T213c3(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].put_last */
extern void T631f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].force */
extern void T221f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LACE_CLUSTERS].fill_with */
extern void T218f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LACE_CLUSTERS].extend */
extern void T218f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].aliased_resized_area */
extern T0* T221f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LACE_CLUSTERS].aliased_resized_area */
extern T0* T218f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_default_value */
extern T0* T68f146(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.trace_option */
extern unsigned char ge1059os6512;
extern T0* ge1059ov6512;
extern T0* T68f240(GE_context* ac, T0* C);
/* ET_LACE_PARSER.metadata_cache_path_option */
extern unsigned char ge1059os6508;
extern T0* ge1059ov6508;
extern T0* T68f239(GE_context* ac, T0* C);
/* ET_LACE_PARSER.msil_clr_version_option */
extern unsigned char ge1059os6509;
extern T0* ge1059ov6509;
extern T0* T68f238(GE_context* ac, T0* C);
/* ET_LACE_PARSER.exception_trace_option */
extern unsigned char ge1059os6506;
extern T0* ge1059ov6506;
extern T0* T68f237(GE_context* ac, T0* C);
/* ET_LACE_PARSER.no_value */
extern unsigned char ge1059os6513;
extern T0* ge1059ov6513;
extern T0* T68f236(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yes_value */
extern unsigned char ge1059os6514;
extern T0* ge1059ov6514;
extern T0* T68f235(GE_context* ac, T0* C);
/* ET_LACE_PARSER.console_application_option */
extern unsigned char ge1059os6505;
extern T0* ge1059ov6505;
extern T0* T68f234(GE_context* ac, T0* C);
/* ET_LACE_PARSER.override_cluster_option */
extern unsigned char ge1059os6511;
extern T0* ge1059ov6511;
extern T0* T68f233(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM].aliased_resized_area */
extern T0* T220f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_SYSTEM].aliased_resized_area */
extern T0* T217f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_system */
extern T0* T68f142(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_ast_factory */
extern void T70f203(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_ast_factory */
extern T0* T202f3(GE_context* ac, T0* C);
/* ET_LACE_AST_FACTORY.new_error_handler */
extern T0* T202f10(GE_context* ac, T0* C);
/* ET_LACE_AST_FACTORY.new_system */
extern T0* T202f9(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.make */
extern T0* T70c182(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.set_default_class_mapping */
extern void T70f211(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_wide_character_ref_class_mapping */
extern void T70f284(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_class_mapping */
extern void T70f297(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.set_wide_character_class_mapping */
extern void T70f283(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_string_class_mapping */
extern void T70f282(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_real_ref_class_mapping */
extern void T70f281(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_real_class_mapping */
extern void T70f280(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_natural_ref_class_mapping */
extern void T70f279(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_natural_class_mapping */
extern void T70f278(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_integer_ref_class_mapping */
extern void T70f277(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_integer_class_mapping */
extern void T70f276(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_double_ref_class_mapping */
extern void T70f275(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_double_class_mapping */
extern void T70f274(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_character_ref_class_mapping */
extern void T70f273(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_character_class_mapping */
extern void T70f272(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_kernel_types */
extern void T70f210(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_wide_character_type */
extern void T70f271(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_typed_pointer_type */
extern void T70f270(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_type_type */
extern void T70f269(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_system_string_type */
extern void T70f268(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_system_object_type */
extern void T70f267(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_string_type */
extern void T70f266(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_string_32_type */
extern void T70f265(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_string_8_type */
extern void T70f264(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_special_type */
extern void T70f263(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_routine_type */
extern void T70f262(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_real_64_type */
extern void T70f261(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_real_32_type */
extern void T70f260(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_real_type */
extern void T70f259(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_procedure_type */
extern void T70f258(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_predicate_type */
extern void T70f257(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_pointer_type */
extern void T70f256(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_none_type */
extern void T70f255(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_64_type */
extern void T70f254(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_32_type */
extern void T70f253(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_16_type */
extern void T70f252(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_8_type */
extern void T70f251(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_type */
extern void T70f250(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_iterable_type */
extern void T70f249(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_ise_exception_manager_type */
extern void T70f248(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_64_type */
extern void T70f247(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_32_type */
extern void T70f246(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_16_type */
extern void T70f245(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_8_type */
extern void T70f244(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_type */
extern void T70f243(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_function_type */
extern void T70f242(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_exception_manager_type */
extern void T70f241(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_exception_type */
extern void T70f240(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_double_type */
extern void T70f239(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_character_32_type */
extern void T70f238(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_character_8_type */
extern void T70f237(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_character_type */
extern void T70f236(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_boolean_type */
extern void T70f235(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_array_type */
extern void T70f234(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_tuple_type */
extern void T70f233(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_any_type */
extern void T70f232(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.make_adapted */
extern void T70f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.default_read_only_value */
extern T1 T70f172(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_unknown_kernel_types */
extern void T70f208(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_system_name */
extern void T70f207(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_preparse_shallow_mode */
extern void T70f206(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_default_keyword_usage */
extern void T70f205(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_use_detachable_keyword */
extern void T70f216(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_use_attached_keyword */
extern void T70f215(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_use_reference_keyword */
extern void T70f214(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_use_note_keyword */
extern void T70f213(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_use_attribute_keyword */
extern void T70f212(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.initialize */
extern void T70f204(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.initialize */
extern void T70f204p1(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.class_name_tester */
extern T0* T70f162(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.tokens */
extern T0* T70f175(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM].force */
extern void T220f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LACE_SYSTEM].fill_with */
extern void T217f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_SYSTEM].extend */
extern void T217f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_root_creation */
extern void T70f191(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_root_type */
extern void T70f190(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_dotnet_assemblies */
extern void T70f189(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_clusters */
extern void T70f188(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.set_system */
extern void T68f277(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_trace_mode */
extern void T70f187(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_exception_trace_mode */
extern void T70f186(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_console_application_mode */
extern void T70f185(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_external_object_pathnames */
extern void T70f184(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_external_include_pathnames */
extern void T70f183(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].forth */
extern void T206f40(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_forth */
extern void T206f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].add_traversing_cursor */
extern void T206f64(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].remove_traversing_cursor */
extern void T206f63(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_override */
extern void T214f60(GE_context* ac, T0* C, T1 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_for_iteration */
extern T0* T206f31(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_item */
extern T0* T206f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].after */
extern T1 T206f23(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_after */
extern T1 T206f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].after */
extern T1 T629f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].start */
extern void T206f39(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_start */
extern void T206f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_off */
extern T1 T206f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].off */
extern T1 T629f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].is_empty */
extern T1 T206f32(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_push_last_value */
extern void T68f262(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.accept */
extern void T68f261(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_do_error_action */
extern void T68f259(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.report_eof_expected_error */
extern void T68f275(GE_context* ac, T0* C);
/* ET_LACE_PARSER.read_token */
extern void T68f258(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_execute_action */
extern void T68f274(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.text_item */
extern T2 T68f221(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.string_ */
extern T0* T68f132(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_identifier_from_buffer */
extern T0* T68f220(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.platform */
extern T0* T68f218(GE_context* ac, T0* C);
/* STRING_8.to_integer */
extern T6 T17f23(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parsed_integer */
extern T6 T766f13(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parse_string_with_type */
extern void T766f17(GE_context* ac, T0* C, T0* a1, T6 a2);
/* STRING_TO_INTEGER_CONVERTOR.parse_character */
extern void T766f23(GE_context* ac, T0* C, T2 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflowed */
extern T1 T766f15(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.overflow_checker */
extern unsigned char ge1539os28943;
extern T0* ge1539ov28943;
extern T0* T766f14(GE_context* ac, T0* C);
/* CHARACTER_8.is_digit */
extern T1 T2f25(GE_context* ac, T2* C);
/* STRING_TO_INTEGER_CONVERTOR.reset */
extern void T766f22(GE_context* ac, T0* C, T6 a1);
/* STRING_8.ctoi_convertor */
extern unsigned char ge1530os491;
extern T0* ge1530ov491;
extern T0* T17f33(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators_acceptable */
extern void T766f21(GE_context* ac, T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators_acceptable */
extern void T766f20(GE_context* ac, T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators */
extern void T766f19(GE_context* ac, T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators */
extern void T766f18(GE_context* ac, T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.make */
extern T0* T766c16(GE_context* ac);
/* ET_LACE_PARSER.set_start_condition */
extern void T68f282(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.text_substring */
extern T0* T68f215(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_LACE_PARSER.text */
extern T0* T68f199(GE_context* ac, T0* C);
/* ET_LACE_PARSER.text_count */
extern T6 T68f191(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_execute_eof_action */
extern void T68f273(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.terminate */
extern void T68f281(GE_context* ac, T0* C);
/* ET_LACE_PARSER.wrap */
extern T1 T68f126(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_refill_input_buffer */
extern void T68f272(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_set_content */
extern void T68f270(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_null_trans_state */
extern T6 T68f125(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.yy_previous_state */
extern T6 T68f217(GE_context* ac, T0* C);
/* ET_LACE_PARSER.fatal_error */
extern void T68f271(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_character */
extern void T131f8(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_PARSER.std */
extern T0* T68f188(GE_context* ac, T0* C);
/* ET_LACE_PARSER.special_integer_ */
extern T0* T68f161(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_init_value_stacks */
extern void T68f257(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_clear_all */
extern void T68f266(GE_context* ac, T0* C);
/* ET_LACE_PARSER.clear_all */
extern void T68f279(GE_context* ac, T0* C);
/* ET_LACE_PARSER.clear_stacks */
extern void T68f283(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_clear_value_stacks */
extern void T68f285(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].keep_head */
extern void T219f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].set_count */
extern void T219f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_SYSTEM].keep_head */
extern void T217f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_SYSTEM].set_count */
extern void T217f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].keep_head */
extern void T227f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].set_count */
extern void T227f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_EXCLUDE].keep_head */
extern void T224f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_EXCLUDE].set_count */
extern void T224f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_CLUSTERS].keep_head */
extern void T218f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_CLUSTERS].set_count */
extern void T218f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTER].keep_head */
extern void T222f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTER].set_count */
extern void T222f9(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.abort */
extern void T68f260(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].wipe_out */
extern void T136f27(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].move_all_cursors_after */
extern void T136f33(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T462f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_after */
extern void T462f10(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].wipe_out */
extern void T206f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].slots_wipe_out */
extern void T206f55(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_wipe_out */
extern void T206f54(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_wipe_out */
extern void T206f53(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_wipe_out */
extern void T206f52(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].move_all_cursors_after */
extern void T206f51(GE_context* ac, T0* C);
/* ET_LACE_PARSER.set_input_buffer */
extern void T68f251(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_load_input_buffer */
extern void T68f256(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_file_buffer */
extern T0* T68f143(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].wipe_out */
extern void T203f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_wipe_out */
extern void T203f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_wipe_out */
extern void T203f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_wipe_out */
extern void T203f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_wipe_out */
extern void T203f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].move_all_cursors_after */
extern void T203f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_next_cursor */
extern void T628f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_after */
extern void T628f7(GE_context* ac, T0* C);
/* ET_LACE_PARSER.reset */
extern void T68f250(GE_context* ac, T0* C);
/* ET_LACE_PARSER.reset_compressed_scanner_skeleton */
extern void T68f255(GE_context* ac, T0* C);
/* ET_LACE_PARSER.reset */
extern void T68f255p1(GE_context* ac, T0* C);
/* ET_LACE_PARSER.make */
extern T0* T68c247(GE_context* ac, T0* a1);
/* ET_LACE_PARSER.make_with_factory */
extern void T68f249(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_parser_skeleton */
extern void T68f254(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_build_parser_tables */
extern void T68f269(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yycheck_template */
extern unsigned char ge1058os6422;
extern T0* ge1058ov6422;
extern T0* T68f187(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yyfixed_array */
extern T0* T68f242(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yycheck_template_2 */
extern void T68f291(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yyarray_subcopy */
extern void T68f298(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_LACE_PARSER.integer_array_ */
extern T0* T68f246(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yycheck_template_1 */
extern void T68f290(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yytable_template */
extern unsigned char ge1058os6419;
extern T0* ge1058ov6419;
extern T0* T68f186(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytable_template_2 */
extern void T68f289(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yytable_template_1 */
extern void T68f288(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yypgoto_template */
extern unsigned char ge1058os6418;
extern T0* ge1058ov6418;
extern T0* T68f185(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yypact_template */
extern unsigned char ge1058os6417;
extern T0* ge1058ov6417;
extern T0* T68f184(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yydefgoto_template */
extern unsigned char ge1058os6416;
extern T0* ge1058ov6416;
extern T0* T68f183(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yydefact_template */
extern unsigned char ge1058os6415;
extern T0* ge1058ov6415;
extern T0* T68f182(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytypes2_template */
extern unsigned char ge1058os6414;
extern T0* ge1058ov6414;
extern T0* T68f181(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytypes1_template */
extern unsigned char ge1058os6413;
extern T0* ge1058ov6413;
extern T0* T68f180(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yyr1_template */
extern unsigned char ge1058os6412;
extern T0* ge1058ov6412;
extern T0* T68f179(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytranslate_template */
extern unsigned char ge1058os6409;
extern T0* ge1058ov6409;
extern T0* T68f178(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytranslate_template_2 */
extern void T68f287(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yytranslate_template_1 */
extern void T68f286(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_create_value_stacks */
extern void T68f268(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].make */
extern T0* T226f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].make_empty */
extern T0* T219c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].default_create */
extern T0* T226c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM].make */
extern T0* T220f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_SYSTEM].make_empty */
extern T0* T217c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM].default_create */
extern T0* T220c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T228f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].make_empty */
extern T0* T227c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].default_create */
extern T0* T228c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].make */
extern T0* T225f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_EXCLUDE].make_empty */
extern T0* T224c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].default_create */
extern T0* T225c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].make */
extern T0* T221f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_CLUSTERS].make_empty */
extern T0* T218c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].default_create */
extern T0* T221c3(GE_context* ac);
/* ET_LACE_PARSER.make_lace_scanner */
extern void T68f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_with_buffer */
extern void T68f267(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_initialize */
extern void T68f280(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_initialize */
extern void T68f280p1(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_build_tables */
extern void T68f284(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_accept_template */
extern unsigned char ge1060os6909;
extern T0* ge1060ov6909;
extern T0* T68f231(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_fixed_array */
extern T0* T68f244(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_meta_template */
extern unsigned char ge1060os6908;
extern T0* ge1060ov6908;
extern T0* T68f230(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_ec_template */
extern unsigned char ge1060os6905;
extern T0* ge1060ov6905;
extern T0* T68f229(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_ec_template_2 */
extern void T68f297(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_array_subcopy */
extern void T68f299(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_LACE_PARSER.yy_ec_template_1 */
extern void T68f296(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_def_template */
extern unsigned char ge1060os6904;
extern T0* ge1060ov6904;
extern T0* T68f228(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_base_template */
extern unsigned char ge1060os6903;
extern T0* ge1060ov6903;
extern T0* T68f227(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_chk_template */
extern unsigned char ge1060os6900;
extern T0* ge1060ov6900;
extern T0* T68f226(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_chk_template_2 */
extern void T68f295(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_chk_template_1 */
extern void T68f294(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_nxt_template */
extern unsigned char ge1060os6897;
extern T0* ge1060ov6897;
extern T0* T68f225(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_nxt_template_2 */
extern void T68f293(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_nxt_template_1 */
extern void T68f292(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.empty_buffer */
extern T0* T68f135(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T203c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_with_equality_testers */
extern void T203f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_sparse_container */
extern void T203f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].set_internal_cursor */
extern void T203f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_cursor */
extern T0* T203f30(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T628c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_slots */
extern void T203f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_clashes */
extern void T203f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_key_storage */
extern void T203f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_item_storage */
extern void T203f55(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [ET_IDENTIFIER].default_create */
extern T0* T302c2(GE_context* ac);
/* ET_LACE_AST_FACTORY.make */
extern T0* T202c11(GE_context* ac);
/* ET_LACE_ERROR_HANDLER.make_standard */
extern T0* T69c6(GE_context* ac);
/* ET_LACE_ERROR_HANDLER.std */
extern T0* T69f4(GE_context* ac, T0* C);
/* GEC.parse_ecf_file */
extern void T22f45(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.to_boolean */
extern T1 T846f59(GE_context* ac, T0* C);
/* STRING_8.to_boolean */
extern T1 T17f42(GE_context* ac, T0* C);
/* UC_UTF8_STRING.is_boolean */
extern T1 T846f58(GE_context* ac, T0* C);
/* STRING_8.is_boolean */
extern T1 T17f41(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.value */
extern T0* T67f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.has_error */
extern T1 T63f5(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_file */
extern void T62f99(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].wipe_out */
extern void T178f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_wipe_out */
extern void T178f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_wipe_out */
extern void T178f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_wipe_out */
extern void T178f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_wipe_out */
extern void T178f42(GE_context* ac, T0* C);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].keep_head */
extern void T616f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].set_count */
extern void T616f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].unset_found_item */
extern void T178f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].move_all_cursors_after */
extern void T178f40(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_next_cursor */
extern void T619f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_after */
extern void T619f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].wipe_out */
extern void T177f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_wipe_out */
extern void T177f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_wipe_out */
extern void T177f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_wipe_out */
extern void T177f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_wipe_out */
extern void T177f48(GE_context* ac, T0* C);
/* SPECIAL [ET_ECF_LIBRARY].keep_head */
extern void T612f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_LIBRARY].set_count */
extern void T612f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].unset_found_item */
extern void T177f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].move_all_cursors_after */
extern void T177f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_next_cursor */
extern void T611f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_after */
extern void T611f9(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_file */
extern void T62f99p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.last_error_description */
extern T0* T164f128(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.position */
extern T0* T164f120(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_POSITION].first */
extern T0* T571f6(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.positions */
extern T0* T164f93(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_positions */
extern T0* T164f122(GE_context* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].remove */
extern void T572f7(GE_context* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].item */
extern T0* T572f4(GE_context* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].is_empty */
extern T1 T572f3(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_POSITION].force_last */
extern void T571f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_POSITION].put_right */
extern void T1344f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_POSITION].attach_left */
extern void T1344f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_POSITION].make */
extern T0* T1344c4(GE_context* ac, T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].make */
extern T0* T571c7(GE_context* ac);
/* DS_BILINKED_LIST [XM_POSITION].set_internal_cursor */
extern void T571f9(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].new_cursor */
extern T0* T571f5(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_POSITION].make */
extern T0* T1345c3(GE_context* ac, T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].copy */
extern void T572f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_EIFFEL_SCANNER].put_right */
extern void T1346f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_EIFFEL_SCANNER].make */
extern T0* T1346c3(GE_context* ac, T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].make */
extern T0* T572c5(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.report_syntax_error */
extern void T63f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_error */
extern void T63f13(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_error_message */
extern void T63f14(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_error_message */
extern void T63f14p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.message */
extern T0* T63f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.default_message */
extern T0* T200f9(GE_context* ac, T0* C);
/* ET_ECF_ERROR.message */
extern T0* T200f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.arguments */
extern unsigned char ge293os1977;
extern T0* ge293ov1977;
extern T0* T200f6(GE_context* ac, T0* C);
/* KL_ARGUMENTS.make */
extern T0* T30c5(GE_context* ac);
/* KL_ARGUMENTS.argument */
extern T0* T30f2(GE_context* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.as_string_8 */
extern T0* T400f8(GE_context* ac, T0* C);
/* IMMUTABLE_STRING_32.code */
extern T10 T400f10(GE_context* ac, T0* C, T6 a1);
/* ARGUMENTS_32.argument */
extern T0* T399f1(GE_context* ac, T0* C, T6 a1);
/* ARRAY [IMMUTABLE_STRING_32].item */
extern T0* T870f5(GE_context* ac, T0* C, T6 a1);
/* ARGUMENTS_32.internal_argument_array */
extern unsigned char ge1411os20622;
extern T0* ge1411ov20622;
extern T0* T399f3(GE_context* ac, T0* C);
/* ARRAY [IMMUTABLE_STRING_32].put */
extern void T870f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARGUMENTS_32.i_th_argument_string */
extern T0* T399f4(GE_context* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.make_from_string */
extern T0* T400c13(GE_context* ac, T0* a1);
/* STRING_32.area_lower */
extern T6 T18f7(GE_context* ac, T0* C);
/* NATIVE_STRING.set_shared_from_pointer */
extern void T367f14(GE_context* ac, T0* C, T14 a1);
/* NATIVE_STRING.set_shared_from_pointer_and_count */
extern void T367f15(GE_context* ac, T0* C, T14 a1, T6 a2);
/* MANAGED_POINTER.set_from_pointer */
extern void T128f17(GE_context* ac, T0* C, T14 a1, T6 a2);
/* ARGUMENTS_32.default_pointer */
extern T14 T399f6(GE_context* ac, T0* C);
/* ARRAY [IMMUTABLE_STRING_32].compare_objects */
extern void T870f7(GE_context* ac, T0* C);
/* ARRAY [IMMUTABLE_STRING_32].make_filled */
extern T0* T870c6(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [IMMUTABLE_STRING_32].make_filled_area */
extern void T870f9(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [IMMUTABLE_STRING_32].make_filled */
extern T0* T869c8(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [IMMUTABLE_STRING_32].fill_with */
extern void T869f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [IMMUTABLE_STRING_32].extend */
extern void T869f7(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [IMMUTABLE_STRING_32].make_empty */
extern void T869f4(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [IMMUTABLE_STRING_32].make_empty */
extern T0* T869c4(GE_context* ac, T6 a1);
/* IMMUTABLE_STRING_32.make_empty */
extern T0* T400c12(GE_context* ac);
/* IMMUTABLE_STRING_32.make */
extern void T400f16(GE_context* ac, T0* C, T6 a1);
/* KL_ARGUMENTS.internal_arguments */
extern unsigned char ge1410os3253;
extern T0* ge1410ov3253;
extern T0* T30f3(GE_context* ac, T0* C);
/* ARGUMENTS_32.default_create */
extern T0* T399c7(GE_context* ac);
/* ARRAY [STRING_8].valid_index */
extern T1 T142f4(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.to_integer */
extern T6 T846f29(GE_context* ac, T0* C);
/* UC_UTF8_STRING.ctoi_convertor */
extern T0* T846f48(GE_context* ac, T0* C);
/* UC_UTF8_STRING.is_integer */
extern T1 T846f28(GE_context* ac, T0* C);
/* UC_UTF8_STRING.is_valid_integer_or_natural */
extern T1 T846f47(GE_context* ac, T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.is_integral_integer */
extern T1 T766f12(GE_context* ac, T0* C);
/* STRING_8.is_integer */
extern T1 T17f35(GE_context* ac, T0* C);
/* STRING_8.is_valid_integer_or_natural */
extern T1 T17f39(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ERROR.string_ */
extern T0* T200f8(GE_context* ac, T0* C);
/* ET_ECF_ERROR.make_syntax */
extern T0* T200c190(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.filename */
extern T0* T200f14(GE_context* ac, T0* C);
/* ET_ECF_ERROR.default_message_template */
extern T0* T200f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.add_dependent_universes */
extern void T200f274(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T200f274ot1(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].item */
extern T0* T851f9(GE_context* ac, T0* C, T6 a1);
/* XM_TREE_CALLBACKS_PIPE.last_error */
extern T0* T157f8(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.make */
extern T0* T179c11(GE_context* ac, T6 a1, T6 a2);
/* ET_COMPRESSED_POSITION.set_position */
extern void T179f12(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_ECF_ERROR_HANDLER.report_eabx_error */
extern void T63f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabx */
extern T0* T200c189(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.element_name */
extern T0* T62f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_POSITION_TABLE.item */
extern T0* T155f2(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].forth */
extern void T842f11(GE_context* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_forth */
extern void T843f12(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].add_traversing_cursor */
extern void T843f13(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_next_cursor */
extern void T842f14(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].remove_traversing_cursor */
extern void T843f14(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set */
extern void T842f12(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].go_after */
extern void T842f10(GE_context* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_go_after */
extern void T843f11(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_after */
extern void T842f13(GE_context* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_off */
extern T1 T843f6(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].off */
extern T1 T842f7(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].item */
extern T0* T842f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].start */
extern void T842f9(GE_context* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_start */
extern void T843f10(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].new_cursor */
extern T0* T843f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T842c8(GE_context* ac, T0* a1);
/* XM_POSITION_TABLE.has */
extern T1 T155f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_system */
extern T0* T175f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.make */
extern T0* T64c189(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.make_system */
extern void T64f207(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_default_class_mapping */
extern void T64f235(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_wide_character_ref_class_mapping */
extern void T64f299(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_class_mapping */
extern void T64f301(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.set_wide_character_class_mapping */
extern void T64f298(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_string_class_mapping */
extern void T64f297(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_real_ref_class_mapping */
extern void T64f296(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_real_class_mapping */
extern void T64f295(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_natural_ref_class_mapping */
extern void T64f294(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_natural_class_mapping */
extern void T64f293(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_integer_ref_class_mapping */
extern void T64f292(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_integer_class_mapping */
extern void T64f291(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_double_ref_class_mapping */
extern void T64f290(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_double_class_mapping */
extern void T64f289(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_character_ref_class_mapping */
extern void T64f288(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_character_class_mapping */
extern void T64f287(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_kernel_types */
extern void T64f234(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_wide_character_type */
extern void T64f286(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_typed_pointer_type */
extern void T64f285(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_type_type */
extern void T64f284(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_string_type */
extern void T64f283(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_object_type */
extern void T64f282(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_type */
extern void T64f281(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_32_type */
extern void T64f280(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_8_type */
extern void T64f279(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_special_type */
extern void T64f278(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_routine_type */
extern void T64f277(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_64_type */
extern void T64f276(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_32_type */
extern void T64f275(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_type */
extern void T64f274(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_procedure_type */
extern void T64f273(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_predicate_type */
extern void T64f272(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_pointer_type */
extern void T64f271(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_none_type */
extern void T64f270(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_64_type */
extern void T64f269(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_32_type */
extern void T64f268(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_16_type */
extern void T64f267(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_8_type */
extern void T64f266(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_type */
extern void T64f265(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_iterable_type */
extern void T64f264(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_ise_exception_manager_type */
extern void T64f263(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_64_type */
extern void T64f262(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_32_type */
extern void T64f261(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_16_type */
extern void T64f260(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_8_type */
extern void T64f259(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_type */
extern void T64f258(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_function_type */
extern void T64f257(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_exception_manager_type */
extern void T64f256(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_exception_type */
extern void T64f255(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_double_type */
extern void T64f254(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_32_type */
extern void T64f253(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_8_type */
extern void T64f252(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_type */
extern void T64f251(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_boolean_type */
extern void T64f250(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_array_type */
extern void T64f249(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_tuple_type */
extern void T64f248(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_any_type */
extern void T64f247(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.make_adapted */
extern void T64f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.default_read_only_value */
extern T1 T64f169(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_unknown_kernel_types */
extern void T64f232(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_name */
extern void T64f231(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_preparse_shallow_mode */
extern void T64f230(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_default_keyword_usage */
extern void T64f214(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_use_detachable_keyword */
extern void T64f212(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_use_attached_keyword */
extern void T64f211(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_use_reference_keyword */
extern void T64f210(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_use_note_keyword */
extern void T64f209(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_use_attribute_keyword */
extern void T64f208(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.initialize */
extern void T64f229(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.initialize */
extern void T64f229p1(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.class_name_tester */
extern T0* T64f183(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.tokens */
extern T0* T64f171(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.make */
extern void T64f189p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.build_system_config */
extern void T62f101(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.build_system_config */
extern T0* T62f101ac1(void);
/* ET_ECF_ADAPTED_LIBRARY.propagate_read_only */
extern void T195f21(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_read_only */
extern void T188f205(GE_context* ac, T0* C, T1 a1);
/* ET_LIBRARY.set_read_only */
extern void T459f177(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM_PARSER.parse_dotnet_assemblies */
extern void T62f104(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T62f104ot1(T0* a1, T0** a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].force_last_new */
extern void T178f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_put */
extern void T178f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_put */
extern void T178f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].force */
extern void T620f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].fill_with */
extern void T616f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].extend */
extern void T616f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_put */
extern void T178f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_put */
extern void T178f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_item */
extern T6 T178f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].hash_position */
extern T6 T178f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].resize */
extern void T178f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_resize */
extern void T178f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].special_integer_ */
extern T0* T178f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_resize */
extern void T178f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_resize */
extern void T178f54(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T620f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T616f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_item */
extern T0* T178f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_item */
extern T6 T178f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_resize */
extern void T178f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_modulus */
extern T6 T178f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_capacity */
extern T6 T178f21(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_dotnet_assembly */
extern T0* T175f2(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.make */
extern T0* T197c100(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.make_from_system */
extern void T197f101(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.set_default_class_mapping */
extern void T197f106(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T197f159(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_class_mapping */
extern void T197f160(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_class */
extern T0* T197f86(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_class_mapping */
extern void T197f158(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_class_mapping */
extern void T197f157(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_ref_class_mapping */
extern void T197f156(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_class_mapping */
extern void T197f155(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_ref_class_mapping */
extern void T197f154(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_class_mapping */
extern void T197f153(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_ref_class_mapping */
extern void T197f152(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_class_mapping */
extern void T197f151(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_ref_class_mapping */
extern void T197f150(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_class_mapping */
extern void T197f149(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_ref_class_mapping */
extern void T197f148(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_class_mapping */
extern void T197f147(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.tokens */
extern T0* T197f93(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_kernel_types */
extern void T197f105(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T197f146(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T197f145(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_type_type */
extern void T197f144(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_system_string_type */
extern void T197f143(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_system_object_type */
extern void T197f142(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_type */
extern void T197f141(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_32_type */
extern void T197f140(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_8_type */
extern void T197f139(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_special_type */
extern void T197f138(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_routine_type */
extern void T197f137(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_64_type */
extern void T197f136(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_32_type */
extern void T197f135(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_type */
extern void T197f134(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_procedure_type */
extern void T197f133(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_predicate_type */
extern void T197f132(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_pointer_type */
extern void T197f131(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_none_type */
extern void T197f130(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T197f129(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T197f128(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T197f127(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T197f126(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_type */
extern void T197f125(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_iterable_type */
extern void T197f124(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T197f123(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T197f122(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T197f121(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T197f120(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T197f119(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_type */
extern void T197f118(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_function_type */
extern void T197f117(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T197f116(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_exception_type */
extern void T197f115(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_type */
extern void T197f114(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_32_type */
extern void T197f113(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_8_type */
extern void T197f112(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_type */
extern void T197f111(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_boolean_type */
extern void T197f110(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_array_type */
extern void T197f109(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_tuple_type */
extern void T197f108(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_any_type */
extern void T197f107(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.make_adapted */
extern void T197f104(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T197f85(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T197f103(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.initialize */
extern void T197f102(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T197f84(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_dotnet_assembly */
extern void T199f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].found_item */
extern T0* T178f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_item */
extern T0* T178f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].found */
extern T1 T178f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].search */
extern void T178f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].search_position */
extern void T178f46(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.as_lower */
extern T0* T846f11(GE_context* ac, T0* C);
/* UC_UTF8_STRING.to_lower */
extern void T846f82(GE_context* ac, T0* C);
/* STRING_8.as_lower */
extern T0* T17f25(GE_context* ac, T0* C);
/* STRING_8.to_lower */
extern void T17f65(GE_context* ac, T0* C);
/* STRING_8.to_lower_area */
extern void T17f67(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_ECF_SYSTEM_PARSER.operating_system */
extern T0* T62f21(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.dirname */
extern T0* T121f6(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.root_directory */
extern unsigned char ge265os12744;
extern T0* ge265ov12744;
extern T0* T121f15(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.is_root_directory */
extern T1 T121f14(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.dirname */
extern T0* T120f6(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.root_directory */
extern unsigned char ge268os12744;
extern T0* ge268ov12744;
extern T0* T120f17(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_root_directory */
extern T1 T120f16(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.is_relative_pathname */
extern T1 T121f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.execution_environment */
extern T0* T62f20(GE_context* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T196f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T625f9(GE_context* ac, T0* C, T6 a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T196f2(GE_context* ac, T0* C);
/* ET_ECF_TARGET.fill_options */
extern void T65f36(GE_context* ac, T0* C, T0* a1);
extern T1 T65f36ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.set_trace_mode */
extern void T64f320(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_obsolete_routine_type_mode */
extern void T64f319(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_obsolete_routine_type_mode */
extern void T188f187(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.ecf_1_15_0 */
extern unsigned char ge189os6308;
extern T0* ge189ov6308;
extern T0* T65f17(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_type_mark */
extern unsigned char ge807os11680;
extern T0* ge807ov11680;
extern T0* T81f62(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_detachable_mark */
extern void T344f19(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_implicit_attachment_type_mark */
extern void T64f318(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_implicit_attachment_type_mark */
extern void T188f186(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.tokens */
extern T0* T65f16(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_target_type_attachment_mode */
extern void T64f317(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_target_type_attachment_mode */
extern void T188f185(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_attachment_type_conformance_mode */
extern void T64f316(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_attachment_type_conformance_mode */
extern void T188f184(GE_context* ac, T0* C, T1 a1);
/* UC_UTF8_STRING.same_string */
extern T1 T846f19(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_OPTIONS.value */
extern T0* T812f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.fill_settings */
extern void T65f40(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_unknown_builtin_reported */
extern void T64f325(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_exception_trace_mode */
extern void T64f324(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_multithreaded_mode */
extern void T64f323(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.string_ */
extern T0* T65f23(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_console_application_mode */
extern void T64f322(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SETTINGS.value */
extern T0* T811f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.fill_root */
extern void T65f39(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.fill_root */
extern void T814f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_root_creation */
extern void T64f327(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_root_type */
extern void T64f326(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_ALL_CLASSES.fill_root */
extern void T815f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.unset_root_type */
extern void T64f328(GE_context* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.do_adapted */
extern void T189f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].do_all */
extern void T622f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].item */
extern T0* T622f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].forth */
extern void T177f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_forth */
extern void T177f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].add_traversing_cursor */
extern void T177f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_position */
extern void T611f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].remove_traversing_cursor */
extern void T177f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_item */
extern T6 T177f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_for_iteration */
extern T0* T177f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_item */
extern T0* T177f29(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_item */
extern T0* T177f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].after */
extern T1 T177f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_after */
extern T1 T177f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].after */
extern T1 T611f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].start */
extern void T177f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_start */
extern void T177f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_off */
extern T1 T177f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].off */
extern T1 T611f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].is_empty */
extern T1 T177f21(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_libraries */
extern void T62f103(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.select_target */
extern void T188f116(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.fill_universe */
extern void T65f37(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T65f37ot1(T0* a1);
/* ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern void T809f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern T0* T809f5ac1(T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARY.fill_external_libraries */
extern void T808f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARY.file_system */
extern T0* T808f4(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.unix_file_system */
extern T0* T808f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.windows_file_system */
extern T0* T808f6(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.operating_system */
extern T0* T808f5(GE_context* ac, T0* C);
/* UC_UTF8_STRING.starts_with */
extern T1 T846f60(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.is_enabled */
extern T1 T808f3(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].do_all */
extern void T1448f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].item */
extern T0* T1448f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern void T807f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern T0* T807f5ac1(T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_OBJECT.fill_external_objects */
extern void T806f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_OBJECT.file_system */
extern T0* T806f4(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.unix_file_system */
extern T0* T806f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.windows_file_system */
extern T0* T806f6(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.operating_system */
extern T0* T806f5(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.is_enabled */
extern T1 T806f3(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].do_all */
extern void T1447f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].item */
extern T0* T1447f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern void T805f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern T0* T805f5ac1(T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDE.fill_external_includes */
extern void T804f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDE.file_system */
extern T0* T804f4(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.unix_file_system */
extern T0* T804f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.windows_file_system */
extern T0* T804f6(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.operating_system */
extern T0* T804f5(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.is_enabled */
extern T1 T804f3(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].do_all */
extern void T1446f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].item */
extern T0* T1446f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_dotnet */
extern void T64f321(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.is_enabled */
extern T1 T199f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T801f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T1443f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T801f3(GE_context* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.put_last */
extern void T189f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].force_last */
extern void T622f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].force */
extern void T1363f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_LIBRARY].fill_with */
extern void T1362f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_LIBRARY].extend */
extern void T1362f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].resize */
extern void T622f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1363f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1362f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].new_capacity */
extern T6 T622f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].extendible */
extern T1 T622f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_LIBRARY.is_enabled */
extern T1 T195f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.library */
extern T0* T800f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].item */
extern T0* T1442f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_LIBRARIES.count */
extern T6 T800f3(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.fill_file_rules */
extern void T798f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_CLUSTER.fill_file_rules */
extern T0* T798f71ac1(T0* a1, T0* a2);
/* ET_ECF_CLUSTERS.do_all */
extern void T799f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.fill_file_rules */
extern void T803f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T803f7ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T803f7ac2(T0* a1);
/* ET_ECF_FILE_RULE.is_enabled */
extern T1 T802f8(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.put_last */
extern void T803f5(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].force_last */
extern void T1445f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].force */
extern void T1620f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_FILE_RULE].fill_with */
extern void T1621f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_FILE_RULE].extend */
extern void T1621f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].resize */
extern void T1445f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T1620f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T1621f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].new_capacity */
extern T6 T1445f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].extendible */
extern T1 T1445f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].do_if */
extern void T1445f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].item */
extern T0* T1445f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_TARGET.fill_file_rules */
extern void T65f41(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_FILE_RULES.make_empty */
extern T0* T803c6(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].make */
extern T0* T1445c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].set_internal_cursor */
extern void T1445f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].new_cursor */
extern T0* T1445f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE].make */
extern T0* T1622c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].make */
extern T0* T1620f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_FILE_RULE].make_empty */
extern T0* T1621c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].default_create */
extern T0* T1620c3(GE_context* ac);
/* ET_ECF_CLUSTER.fill_subclusters */
extern void T798f70(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.add_subcluster */
extern void T798f76(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_parent */
extern void T798f66(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.put_last */
extern void T799f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].force_last */
extern void T1441f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].force */
extern void T1609f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_CLUSTER].fill_with */
extern void T1608f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_CLUSTER].extend */
extern void T1608f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].resize */
extern void T1441f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T1609f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T1608f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].new_capacity */
extern T6 T1441f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].extendible */
extern T1 T1441f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.set_subclusters */
extern void T798f77(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_parent */
extern void T799f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.make_empty */
extern T0* T799c8(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].make */
extern T0* T1441c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].set_internal_cursor */
extern void T1441f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].new_cursor */
extern T0* T1441f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].make */
extern T0* T1610c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].make */
extern T0* T1609f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].make_empty */
extern T0* T1608c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].default_create */
extern T0* T1609c3(GE_context* ac);
/* ET_CLUSTERS.put_last */
extern void T770f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].force_last */
extern void T1419f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].force */
extern void T1605f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLUSTER].fill_with */
extern void T1604f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLUSTER].extend */
extern void T1604f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].resize */
extern void T1419f13(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].aliased_resized_area */
extern T0* T1605f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLUSTER].aliased_resized_area */
extern T0* T1604f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].new_capacity */
extern T6 T1419f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].extendible */
extern T1 T1419f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.is_enabled */
extern T1 T798f34(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.cluster */
extern T0* T799f4(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTERS.count */
extern T6 T799f3(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eabw_error */
extern void T63f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabw */
extern T0* T200c192(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.set_library */
extern void T195f15(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.parse_adapted_library */
extern void T194f99(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.parse_file */
extern void T194f101(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.parse_file */
extern void T194f101p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.element_name */
extern T0* T194f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.build_system_config */
extern void T194f102(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY_PARSER.new_library */
extern T0* T194f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].force_last_new */
extern void T177f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_put */
extern void T177f69(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_put */
extern void T177f68(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].force */
extern void T615f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_LIBRARY].fill_with */
extern void T612f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_LIBRARY].extend */
extern void T612f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_put */
extern void T177f67(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_put */
extern void T177f66(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_item */
extern T6 T177f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].hash_position */
extern T6 T177f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].resize */
extern void T177f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_resize */
extern void T177f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].special_integer_ */
extern T0* T177f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_resize */
extern void T177f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_resize */
extern void T177f71(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T615f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T612f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_item */
extern T0* T177f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_resize */
extern void T177f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_modulus */
extern T6 T177f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_capacity */
extern T6 T177f32(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_LIBRARY_PARSER.fill_system_config */
extern void T194f103(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T194f103ot1(T0* a1, T0** a2);
/* ET_ECF_LIBRARY.set_library_target */
extern void T188f121(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.target_by_name */
extern T0* T187f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.string_ */
extern T0* T187f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].item */
extern T0* T621f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_eabq_error */
extern void T63f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabq */
extern T0* T200c197(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabp_error */
extern void T63f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabp */
extern T0* T200c196(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.set_targets */
extern void T188f120(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eaby_error */
extern void T63f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaby */
extern T0* T200c195(GE_context* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].forth */
extern void T416f12(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_forth */
extern void T838f15(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].add_traversing_cursor */
extern void T838f19(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_next_cursor */
extern void T416f17(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_traversing_cursor */
extern void T838f20(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set */
extern void T416f15(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_ECF_TARGETS.put_last */
extern void T187f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].force_last */
extern void T621f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].force */
extern void T1360f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET].fill_with */
extern void T1359f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET].extend */
extern void T1359f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].resize */
extern void T621f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].aliased_resized_area */
extern T0* T1360f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_TARGET].aliased_resized_area */
extern T0* T1359f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].new_capacity */
extern T6 T621f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].extendible */
extern T1 T621f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_targets */
extern T0* T175f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.make */
extern T0* T187c8(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].put_last */
extern void T621f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].make */
extern T0* T621c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].set_internal_cursor */
extern void T621f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].new_cursor */
extern T0* T621f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET].make */
extern T0* T1361c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].make */
extern T0* T1360f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_TARGET].make_empty */
extern T0* T1359c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].default_create */
extern T0* T1360c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_target */
extern T0* T194f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T194f27ot1(T0* a1, T0** a2);
/* ET_ECF_TARGET.set_external_objects */
extern void T65f35(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_libraries */
extern void T65f34(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_includes */
extern void T65f33(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_file_rules */
extern void T65f32(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_dotnet_assemblies */
extern void T65f31(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_libraries */
extern void T65f30(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_clusters */
extern void T65f29(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.add_option */
extern void T194f106(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_OPTIONS.set_primary_value */
extern void T812f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_value */
extern T0* T812f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.add_setting */
extern void T194f105(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SETTINGS.set_primary_value */
extern void T811f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SETTINGS.primary_value */
extern T0* T811f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_esve_error */
extern void T63f95(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_esve */
extern T0* T200c273(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_esvm_error */
extern void T63f94(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_esvm */
extern T0* T200c272(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_esne_error */
extern void T63f93(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_esne */
extern T0* T200c271(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_esnm_error */
extern void T63f92(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_esnm */
extern T0* T200c270(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.add_variable */
extern void T194f104(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_VARIABLES.set_primary_value */
extern void T67f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_VARIABLES.primary_value */
extern T0* T67f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabu_error */
extern void T63f91(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabu */
extern T0* T200c269(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabt_error */
extern void T63f90(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabt */
extern T0* T200c268(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabs_error */
extern void T63f89(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabs */
extern T0* T200c267(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabr_error */
extern void T63f88(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabr */
extern T0* T200c266(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_TARGET.set_root */
extern void T65f28(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.new_root */
extern T0* T194f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ROOT_CLASS.set_creation_procedure_name */
extern void T814f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacc_error */
extern void T63f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacc */
extern T0* T200c236(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_root_class */
extern T0* T175f21(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.make */
extern T0* T814c3(GE_context* ac, T0* a1);
/* ET_ECF_LIBRARY_PARSER.attribute_value */
extern T0* T194f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacb_error */
extern void T63f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacb */
extern T0* T200c235(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaca_error */
extern void T63f56(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaca */
extern T0* T200c234(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_root_all_classes */
extern T0* T175f20(GE_context* ac, T0* C);
/* ET_ECF_ROOT_ALL_CLASSES.make */
extern T0* T815c1(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.report_eabz_error */
extern void T63f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabz */
extern T0* T200c233(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY_PARSER.is_false */
extern T1 T194f53(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.is_true */
extern T1 T194f52(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECTS.put_last */
extern void T807f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].force_last */
extern void T1447f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].force */
extern void T1626f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].fill_with */
extern void T1627f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].extend */
extern void T1627f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].resize */
extern void T1447f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T1626f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T1627f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].new_capacity */
extern T6 T1447f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].extendible */
extern T1 T1447f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_objects */
extern T0* T175f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECTS.make */
extern T0* T807c3(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].put_last */
extern void T1447f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1447c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].set_internal_cursor */
extern void T1447f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].new_cursor */
extern T0* T1447f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1628c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1626f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].make_empty */
extern T0* T1627c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].default_create */
extern T0* T1626c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_external_object */
extern T0* T194f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T194f44ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_OBJECT.set_condition */
extern void T806f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONDITIONS.put_last */
extern void T813f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].force_last */
extern void T1449f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION].force */
extern void T1632f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_CONDITION].fill_with */
extern void T1633f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_CONDITION].extend */
extern void T1633f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].resize */
extern void T1449f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION].aliased_resized_area */
extern T0* T1632f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_CONDITION].aliased_resized_area */
extern T0* T1633f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].new_capacity */
extern T6 T1449f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].extendible */
extern T1 T1449f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_conditions */
extern T0* T175f13(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONDITIONS.make_ored */
extern T0* T813c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].put_last */
extern void T1449f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].make */
extern T0* T1449c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].set_internal_cursor */
extern void T1449f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].new_cursor */
extern T0* T1449f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION].make */
extern T0* T1634c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION].make */
extern T0* T1632f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CONDITION].make_empty */
extern T0* T1633c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION].default_create */
extern T0* T1632c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_condition */
extern T0* T194f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T194f56ot1(T0* a1, T0** a2);
/* ET_ECF_LIBRARY_PARSER.new_version_condition */
extern T0* T194f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabj_error */
extern void T63f87(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabj */
extern T0* T200c265(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_COMPILER_VERSION_CONDITION.make */
extern T0* T825c5(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabi_error */
extern void T63f86(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabi */
extern T0* T200c264(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabh_error */
extern void T63f85(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR.make_eabh */
extern T0* T200c263(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR_HANDLER.report_eabg_error */
extern void T63f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabg */
extern T0* T200c262(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabf_error */
extern void T63f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabf */
extern T0* T200c261(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* UT_VERSION.make_major_minor */
extern T0* T78c19(GE_context* ac, T6 a1, T6 a2);
/* UT_VERSION.make_major */
extern T0* T78c18(GE_context* ac, T6 a1);
/* ET_ECF_LIBRARY_PARSER.new_custom_condition */
extern T0* T194f82(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaar_error */
extern void T63f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaar */
extern T0* T200c260(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaas_error */
extern void T63f81(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaas */
extern T0* T200c259(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_custom_condition */
extern T0* T175f29(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_ECF_CUSTOM_CONDITION.make */
extern T0* T823c7(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_CUSTOM_CONDITION.make_excluded */
extern T0* T823c6(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaaq_error */
extern void T63f80(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaaq */
extern T0* T200c258(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaap_error */
extern void T63f79(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaap */
extern T0* T200c257(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaao_error */
extern void T63f78(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaao */
extern T0* T200c256(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaan_error */
extern void T63f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaan */
extern T0* T200c255(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.new_dynamic_runtime_condition */
extern T0* T194f80(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaaw_error */
extern void T63f76(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaaw */
extern T0* T200c254(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_dynamic_runtime_condition */
extern T0* T175f28(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.make */
extern T0* T822c3(GE_context* ac, T1 a1);
/* ET_ECF_ERROR_HANDLER.report_eaav_error */
extern void T63f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaav */
extern T0* T200c253(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.new_dotnet_condition */
extern T0* T194f78(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaau_error */
extern void T63f74(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaau */
extern T0* T200c252(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_dotnet_condition */
extern T0* T175f27(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_DOTNET_CONDITION.make */
extern T0* T821c3(GE_context* ac, T1 a1);
/* ET_ECF_ERROR_HANDLER.report_eaat_error */
extern void T63f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaat */
extern T0* T200c251(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.new_concurrency_condition */
extern T0* T194f76(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eade_error */
extern void T63f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eade */
extern T0* T200c250(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eadd_error */
extern void T63f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eadd */
extern T0* T200c249(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_concurrency_condition */
extern T0* T175f26(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_CONCURRENCY_CONDITION.make */
extern T0* T820c6(GE_context* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.make_excluded */
extern T0* T820c5(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eadc_error */
extern void T63f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eadc */
extern T0* T200c248(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eadb_error */
extern void T63f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadb */
extern T0* T200c247(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY_PARSER.new_multithreaded_condition */
extern T0* T194f74(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaay_error */
extern void T63f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaay */
extern T0* T200c246(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_multithreaded_condition */
extern T0* T175f25(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_MULTITHREADED_CONDITION.make */
extern T0* T819c3(GE_context* ac, T1 a1);
/* ET_ECF_ERROR_HANDLER.report_eaax_error */
extern void T63f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaax */
extern T0* T200c245(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.new_build_condition */
extern T0* T194f72(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaag_error */
extern void T63f66(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaag */
extern T0* T200c244(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaah_error */
extern void T63f65(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaah */
extern T0* T200c243(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_build_condition */
extern T0* T175f24(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_BUILD_CONDITION.make */
extern T0* T818c6(GE_context* ac, T0* a1);
/* ET_ECF_BUILD_CONDITION.make_excluded */
extern T0* T818c5(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eaaf_error */
extern void T63f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaaf */
extern T0* T200c242(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaae_error */
extern void T63f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaae */
extern T0* T200c241(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY_PARSER.new_platform_condition */
extern T0* T194f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabb_error */
extern void T63f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabb */
extern T0* T200c240(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabc_error */
extern void T63f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabc */
extern T0* T200c239(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_platform_condition */
extern T0* T175f23(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_PLATFORM_CONDITION.make */
extern T0* T817c7(GE_context* ac, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.make_excluded */
extern T0* T817c6(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eaba_error */
extern void T63f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaba */
extern T0* T200c238(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaaz_error */
extern void T63f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaaz */
extern T0* T200c237(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_condition */
extern T0* T175f22(GE_context* ac, T0* C);
/* ET_ECF_CONDITIONS.make_anded_empty */
extern T0* T813c7(GE_context* ac);
/* ET_ECF_AST_FACTORY.new_external_object */
extern T0* T175f19(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECT.make */
extern T0* T806c8(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacn_error */
extern void T63f54(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacn */
extern T0* T200c232(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacm_error */
extern void T63f53(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacm */
extern T0* T200c231(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARIES.put_last */
extern void T809f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].force_last */
extern void T1448f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].force */
extern void T1629f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].fill_with */
extern void T1630f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].extend */
extern void T1630f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].resize */
extern void T1448f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T1629f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T1630f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].new_capacity */
extern T6 T1448f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].extendible */
extern T1 T1448f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_libraries */
extern T0* T175f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARIES.make */
extern T0* T809c3(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].put_last */
extern void T1448f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1448c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].set_internal_cursor */
extern void T1448f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].new_cursor */
extern T0* T1448f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1631c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1629f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].make_empty */
extern T0* T1630c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].default_create */
extern T0* T1629c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_external_library */
extern T0* T194f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T194f42ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_LIBRARY.set_condition */
extern void T808f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_library */
extern T0* T175f18(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.make */
extern T0* T808c8(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacl_error */
extern void T63f52(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacl */
extern T0* T200c230(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eack_error */
extern void T63f51(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eack */
extern T0* T200c229(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDES.put_last */
extern void T805f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].force_last */
extern void T1446f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].force */
extern void T1623f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].fill_with */
extern void T1624f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].extend */
extern void T1624f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].resize */
extern void T1446f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T1623f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T1624f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].new_capacity */
extern T6 T1446f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].extendible */
extern T1 T1446f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_includes */
extern T0* T175f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDES.make */
extern T0* T805c3(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].put_last */
extern void T1446f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1446c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].set_internal_cursor */
extern void T1446f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].new_cursor */
extern T0* T1446f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1625c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1623f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].make_empty */
extern T0* T1624c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].default_create */
extern T0* T1623c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_external_include */
extern T0* T194f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T194f40ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_INCLUDE.set_condition */
extern void T804f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_include */
extern T0* T175f17(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDE.make */
extern T0* T804c8(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacj_error */
extern void T63f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacj */
extern T0* T200c228(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaci_error */
extern void T63f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaci */
extern T0* T200c227(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_file_rules */
extern T0* T175f8(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.make */
extern T0* T803c4(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].put_last */
extern void T1445f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.new_file_rule */
extern T0* T194f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T194f38ot1(T0* a1, T0** a2);
/* ET_ECF_FILE_RULE.set_condition */
extern void T802f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_file_rule */
extern T0* T175f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_FILE_RULE.make */
extern T0* T802c10(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_FILE_RULE.compiled_regexp */
extern T0* T802f6(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].forth */
extern void T368f14(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].put_last */
extern void T1444f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].force */
extern void T1617f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].fill_with */
extern void T1618f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].extend */
extern void T1618f7(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_compiled */
extern T1 T303f300(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].item */
extern T0* T368f8(GE_context* ac, T0* C);
/* ET_ECF_FILE_RULE.operating_system */
extern T0* T802f7(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].start */
extern void T368f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1444c9(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].set_internal_cursor */
extern void T1444f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].new_cursor */
extern T0* T1444f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1619c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1617f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].make_empty */
extern T0* T1618c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].default_create */
extern T0* T1617c2(GE_context* ac);
/* DS_HASH_SET [STRING_8].force_last */
extern void T76f68(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.text */
extern T0* T154f20(GE_context* ac, T0* C);
extern T1 T154f20ot1(T0* a1, T0** a2);
/* XM_ELEMENT.string_ */
extern T0* T154f21(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T801f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T1443f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T1615f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T1614f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T1614f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T1443f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1615f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1614f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1443f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T1443f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_adapted_dotnet_assemblies */
extern T0* T175f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.make */
extern T0* T801c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].put_last */
extern void T1443f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1443c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1443f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1443f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1616c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1615f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T1614c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T1615c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_adapted_dotnet_assembly */
extern T0* T194f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T194f36ot1(T0* a1, T0** a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_condition */
extern void T199f18(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_class_renamings */
extern void T199f17(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacs_error */
extern void T63f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacs */
extern T0* T200c221(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.case_insensitive_string_equality_tester */
extern unsigned char ge221os4487;
extern T0* ge221ov4487;
extern T0* T194f11(GE_context* ac, T0* C);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.default_create */
extern T0* T183c3(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.report_eacr_error */
extern void T63f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacr */
extern T0* T200c220(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacq_error */
extern void T63f41(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacq */
extern T0* T200c219(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacp_error */
extern void T63f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacp */
extern T0* T200c218(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaco_error */
extern void T63f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaco */
extern T0* T200c217(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T199f16(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacw_error */
extern void T63f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eacw */
extern T0* T200c226(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_read_only */
extern void T199f15(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_AST_FACTORY.new_adapted_dotnet_assembly */
extern T0* T175f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make */
extern T0* T199c14(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make_adapted_dotnet_assembly */
extern void T199f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T199f11(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_dotnet_assembly */
extern unsigned char ge807os12262;
extern T0* ge807ov12262;
extern T0* T81f242(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.make */
extern T0* T447c100(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.make_from_system */
extern void T447f101(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.set_default_class_mapping */
extern void T447f106(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T447f159(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_class_mapping */
extern void T447f160(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_class */
extern T0* T447f86(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_wide_character_class_mapping */
extern void T447f158(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_string_class_mapping */
extern void T447f157(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_real_ref_class_mapping */
extern void T447f156(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_real_class_mapping */
extern void T447f155(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_natural_ref_class_mapping */
extern void T447f154(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_natural_class_mapping */
extern void T447f153(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_integer_ref_class_mapping */
extern void T447f152(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_integer_class_mapping */
extern void T447f151(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_double_ref_class_mapping */
extern void T447f150(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_double_class_mapping */
extern void T447f149(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_character_ref_class_mapping */
extern void T447f148(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_character_class_mapping */
extern void T447f147(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.tokens */
extern T0* T447f93(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_kernel_types */
extern void T447f105(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T447f146(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T447f145(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_type_type */
extern void T447f144(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_system_string_type */
extern void T447f143(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_system_object_type */
extern void T447f142(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_type */
extern void T447f141(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_32_type */
extern void T447f140(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_8_type */
extern void T447f139(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_special_type */
extern void T447f138(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_routine_type */
extern void T447f137(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_64_type */
extern void T447f136(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_32_type */
extern void T447f135(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_type */
extern void T447f134(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_procedure_type */
extern void T447f133(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_predicate_type */
extern void T447f132(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_pointer_type */
extern void T447f131(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_none_type */
extern void T447f130(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T447f129(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T447f128(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T447f127(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T447f126(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_type */
extern void T447f125(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_iterable_type */
extern void T447f124(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T447f123(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T447f122(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T447f121(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T447f120(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T447f119(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_type */
extern void T447f118(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_function_type */
extern void T447f117(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T447f116(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_exception_type */
extern void T447f115(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_double_type */
extern void T447f114(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_32_type */
extern void T447f113(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_8_type */
extern void T447f112(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_type */
extern void T447f111(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_boolean_type */
extern void T447f110(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_array_type */
extern void T447f109(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_tuple_type */
extern void T447f108(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_any_type */
extern void T447f107(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.make_adapted */
extern void T447f104(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T447f85(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T447f103(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.initialize */
extern void T447f102(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T447f84(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.tokens */
extern T0* T199f10(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eada_error */
extern void T63f47(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eada */
extern T0* T200c225(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacz_error */
extern void T63f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacz */
extern T0* T200c224(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacy_error */
extern void T63f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacy */
extern T0* T200c223(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacx_error */
extern void T63f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacx */
extern T0* T200c222(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_LIBRARIES.put_last */
extern void T800f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].force_last */
extern void T1442f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].force */
extern void T1612f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].fill_with */
extern void T1611f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].extend */
extern void T1611f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].resize */
extern void T1442f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1612f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1611f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].new_capacity */
extern T6 T1442f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].extendible */
extern T1 T1442f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_adapted_libraries */
extern T0* T175f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.make */
extern T0* T800c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].put_last */
extern void T1442f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1442c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].set_internal_cursor */
extern void T1442f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].new_cursor */
extern T0* T1442f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1613c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1612f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].make_empty */
extern T0* T1611c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].default_create */
extern T0* T1612c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_adapted_library */
extern T0* T194f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T194f34ot1(T0* a1, T0** a2);
/* ET_ECF_ADAPTED_LIBRARY.set_condition */
extern void T195f20(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_class_renamings */
extern void T195f19(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_classname_prefix */
extern void T195f18(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacv_error */
extern void T63f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eacv */
extern T0* T200c216(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.set_read_only */
extern void T195f17(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_AST_FACTORY.new_adapted_library */
extern T0* T175f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.make */
extern T0* T195c14(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.make_adapted_library */
extern void T195f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_LIBRARY.default_read_only_value */
extern T1 T195f10(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_library */
extern unsigned char ge807os12261;
extern T0* ge807ov12261;
extern T0* T81f220(GE_context* ac, T0* C);
/* ET_LIBRARY.make */
extern T0* T459c101(GE_context* ac, T0* a1, T0* a2);
/* ET_LIBRARY.make_from_system */
extern void T459f102(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.set_default_class_mapping */
extern void T459f107(GE_context* ac, T0* C);
/* ET_LIBRARY.set_wide_character_ref_class_mapping */
extern void T459f160(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_class_mapping */
extern void T459f161(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.set_wide_character_class_mapping */
extern void T459f159(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_string_class_mapping */
extern void T459f158(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_real_ref_class_mapping */
extern void T459f157(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_real_class_mapping */
extern void T459f156(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_natural_ref_class_mapping */
extern void T459f155(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_natural_class_mapping */
extern void T459f154(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_integer_ref_class_mapping */
extern void T459f153(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_integer_class_mapping */
extern void T459f152(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_double_ref_class_mapping */
extern void T459f151(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_double_class_mapping */
extern void T459f150(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_character_ref_class_mapping */
extern void T459f149(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_character_class_mapping */
extern void T459f148(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.tokens */
extern T0* T459f95(GE_context* ac, T0* C);
/* ET_LIBRARY.set_kernel_types */
extern void T459f106(GE_context* ac, T0* C);
/* ET_LIBRARY.set_wide_character_type */
extern void T459f147(GE_context* ac, T0* C);
/* ET_LIBRARY.set_typed_pointer_type */
extern void T459f146(GE_context* ac, T0* C);
/* ET_LIBRARY.set_type_type */
extern void T459f145(GE_context* ac, T0* C);
/* ET_LIBRARY.set_system_string_type */
extern void T459f144(GE_context* ac, T0* C);
/* ET_LIBRARY.set_system_object_type */
extern void T459f143(GE_context* ac, T0* C);
/* ET_LIBRARY.set_string_type */
extern void T459f142(GE_context* ac, T0* C);
/* ET_LIBRARY.set_string_32_type */
extern void T459f141(GE_context* ac, T0* C);
/* ET_LIBRARY.set_string_8_type */
extern void T459f140(GE_context* ac, T0* C);
/* ET_LIBRARY.set_special_type */
extern void T459f139(GE_context* ac, T0* C);
/* ET_LIBRARY.set_routine_type */
extern void T459f138(GE_context* ac, T0* C);
/* ET_LIBRARY.set_real_64_type */
extern void T459f137(GE_context* ac, T0* C);
/* ET_LIBRARY.set_real_32_type */
extern void T459f136(GE_context* ac, T0* C);
/* ET_LIBRARY.set_real_type */
extern void T459f135(GE_context* ac, T0* C);
/* ET_LIBRARY.set_procedure_type */
extern void T459f134(GE_context* ac, T0* C);
/* ET_LIBRARY.set_predicate_type */
extern void T459f133(GE_context* ac, T0* C);
/* ET_LIBRARY.set_pointer_type */
extern void T459f132(GE_context* ac, T0* C);
/* ET_LIBRARY.set_none_type */
extern void T459f131(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_64_type */
extern void T459f130(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_32_type */
extern void T459f129(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_16_type */
extern void T459f128(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_8_type */
extern void T459f127(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_type */
extern void T459f126(GE_context* ac, T0* C);
/* ET_LIBRARY.set_iterable_type */
extern void T459f125(GE_context* ac, T0* C);
/* ET_LIBRARY.set_ise_exception_manager_type */
extern void T459f124(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_64_type */
extern void T459f123(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_32_type */
extern void T459f122(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_16_type */
extern void T459f121(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_8_type */
extern void T459f120(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_type */
extern void T459f119(GE_context* ac, T0* C);
/* ET_LIBRARY.set_function_type */
extern void T459f118(GE_context* ac, T0* C);
/* ET_LIBRARY.set_exception_manager_type */
extern void T459f117(GE_context* ac, T0* C);
/* ET_LIBRARY.set_exception_type */
extern void T459f116(GE_context* ac, T0* C);
/* ET_LIBRARY.set_double_type */
extern void T459f115(GE_context* ac, T0* C);
/* ET_LIBRARY.set_character_32_type */
extern void T459f114(GE_context* ac, T0* C);
/* ET_LIBRARY.set_character_8_type */
extern void T459f113(GE_context* ac, T0* C);
/* ET_LIBRARY.set_character_type */
extern void T459f112(GE_context* ac, T0* C);
/* ET_LIBRARY.set_boolean_type */
extern void T459f111(GE_context* ac, T0* C);
/* ET_LIBRARY.set_array_type */
extern void T459f110(GE_context* ac, T0* C);
/* ET_LIBRARY.set_tuple_type */
extern void T459f109(GE_context* ac, T0* C);
/* ET_LIBRARY.set_any_type */
extern void T459f108(GE_context* ac, T0* C);
/* ET_LIBRARY.make_adapted */
extern void T459f105(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.default_read_only_value */
extern T1 T459f86(GE_context* ac, T0* C);
/* ET_LIBRARY.set_unknown_kernel_types */
extern void T459f104(GE_context* ac, T0* C);
/* ET_LIBRARY.initialize */
extern void T459f103(GE_context* ac, T0* C);
/* ET_LIBRARY.initialize */
extern void T459f103p1(GE_context* ac, T0* C);
/* ET_LIBRARY.class_name_tester */
extern T0* T459f85(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.tokens */
extern T0* T195f11(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eaad_error */
extern void T63f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaad */
extern T0* T200c215(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaac_error */
extern void T63f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaac */
extern T0* T200c214(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaab_error */
extern void T63f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaab */
extern T0* T200c213(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaaa_error */
extern void T63f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaaa */
extern T0* T200c212(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.new_override */
extern T0* T194f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T194f32ot1(T0* a1, T0** a2);
/* ET_ECF_CLUSTER.set_condition */
extern void T798f63(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_ecf_file_rules */
extern void T798f62(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_ecf_subclusters */
extern void T798f61(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacu_error */
extern void T63f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eacu */
extern T0* T200c211(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.set_read_only */
extern void T798f60(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ERROR_HANDLER.report_each_error */
extern void T63f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_each */
extern T0* T200c210(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.set_recursive */
extern void T798f59(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_override */
extern void T798f58(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_AST_FACTORY.new_cluster */
extern T0* T175f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.make */
extern T0* T798c57(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.set_use_obsolete_syntax */
extern void T798f65(GE_context* ac, T0* C, T1 a1);
/* UT_VERSION.is_less_equal */
extern T1 T78f15(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.ecf_1_4_0 */
extern unsigned char ge189os6306;
extern T0* ge189ov6306;
extern T0* T798f33(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T798f64(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T799f9(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ERROR_HANDLER.report_eacg_error */
extern void T63f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacg */
extern T0* T200c209(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eace_error */
extern void T63f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eace */
extern T0* T200c208(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacf_error */
extern void T63f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacf */
extern T0* T200c207(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacd_error */
extern void T63f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacd */
extern T0* T200c206(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_clusters */
extern T0* T175f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.make */
extern T0* T799c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].put_last */
extern void T1441f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.new_cluster */
extern T0* T194f30(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
extern T1 T194f30ot1(T0* a1, T0** a2);
/* ET_ECF_ERROR_HANDLER.report_eact_error */
extern void T63f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eact */
extern T0* T200c205(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaam_error */
extern void T63f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaam */
extern T0* T200c204(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaal_error */
extern void T63f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaal */
extern T0* T200c203(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaaj_error */
extern void T63f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaaj */
extern T0* T200c202(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaak_error */
extern void T63f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaak */
extern T0* T200c201(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaai_error */
extern void T63f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaai */
extern T0* T200c200(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_target */
extern T0* T175f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.make */
extern T0* T65c27(GE_context* ac, T0* a1);
/* ET_ECF_OPTIONS.make */
extern T0* T812c7(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_OPTIONS.make */
extern T0* T812f7ac1(T0* a1);
/* KL_STRING_ROUTINES.case_insensitive_hash_code */
extern T6 T34f16(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_hash_function */
extern void T54f101(GE_context* ac, T0* C, T0* a1);
/* KL_AGENT_HASH_FUNCTION [STRING_8].make */
extern T0* T1398c3(GE_context* ac, T0* a1);
/* ET_ECF_OPTIONS.string_ */
extern T0* T812f4(GE_context* ac, T0* C);
/* ET_ECF_OPTIONS.case_insensitive_string_equality_tester */
extern T0* T812f3(GE_context* ac, T0* C);
/* ET_ECF_SETTINGS.make */
extern T0* T811c7(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_SETTINGS.make */
extern T0* T811f7ac1(T0* a1);
/* ET_ECF_SETTINGS.string_ */
extern T0* T811f4(GE_context* ac, T0* C);
/* ET_ECF_SETTINGS.case_insensitive_string_equality_tester */
extern T0* T811f3(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.set_secondary_variables */
extern void T67f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.execution_environment */
extern T0* T65f20(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.make */
extern T0* T67c8(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_VARIABLES.make */
extern T0* T67f8ac1(T0* a1);
/* ET_ECF_VARIABLES.string_ */
extern T0* T67f6(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.case_insensitive_string_equality_tester */
extern T0* T67f5(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.execution_environment */
extern T0* T67f4(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eabe_error */
extern void T63f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabe */
extern T0* T200c199(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabd_error */
extern void T63f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabd */
extern T0* T200c198(GE_context* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].item */
extern T0* T416f8(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].start */
extern void T416f11(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_start */
extern void T838f14(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_off */
extern T1 T838f6(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].off */
extern T1 T416f9(GE_context* ac, T0* C);
/* XM_ELEMENT.new_cursor */
extern T0* T154f9(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].new_cursor */
extern T0* T838f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].make */
extern T0* T416c10(GE_context* ac, T0* a1);
/* ET_ECF_LIBRARY.set_ecf_version */
extern void T188f119(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.ecf_version */
extern T0* T194f25(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.matches */
extern T1 T303f188(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_ecf_namespace */
extern void T188f118(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_uuid */
extern void T188f117(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabn_error */
extern void T63f98(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabn */
extern T0* T200c277(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.attribute_name */
extern T0* T194f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabm_error */
extern void T63f97(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabm */
extern T0* T200c276(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].found_item */
extern T0* T177f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].found */
extern T1 T177f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].search */
extern void T177f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].search_position */
extern void T177f64(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabo_error */
extern void T63f96(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabo */
extern T0* T200c275(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_library */
extern T0* T175f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.make */
extern T0* T188c115(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.make_library */
extern void T188f123(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.make_from_system */
extern void T188f124(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.set_default_class_mapping */
extern void T188f129(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_wide_character_ref_class_mapping */
extern void T188f182(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_class_mapping */
extern void T188f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.set_wide_character_class_mapping */
extern void T188f181(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_string_class_mapping */
extern void T188f180(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_real_ref_class_mapping */
extern void T188f179(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_real_class_mapping */
extern void T188f178(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_natural_ref_class_mapping */
extern void T188f177(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_natural_class_mapping */
extern void T188f176(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_integer_ref_class_mapping */
extern void T188f175(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_integer_class_mapping */
extern void T188f174(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_double_ref_class_mapping */
extern void T188f173(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_double_class_mapping */
extern void T188f172(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_character_ref_class_mapping */
extern void T188f171(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_character_class_mapping */
extern void T188f170(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.tokens */
extern T0* T188f106(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_kernel_types */
extern void T188f128(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_wide_character_type */
extern void T188f169(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_typed_pointer_type */
extern void T188f168(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_type_type */
extern void T188f167(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_system_string_type */
extern void T188f166(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_system_object_type */
extern void T188f165(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_type */
extern void T188f164(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_32_type */
extern void T188f163(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_8_type */
extern void T188f162(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_special_type */
extern void T188f161(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_routine_type */
extern void T188f160(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_64_type */
extern void T188f159(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_32_type */
extern void T188f158(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_type */
extern void T188f157(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_procedure_type */
extern void T188f156(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_predicate_type */
extern void T188f155(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_pointer_type */
extern void T188f154(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_none_type */
extern void T188f153(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_64_type */
extern void T188f152(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_32_type */
extern void T188f151(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_16_type */
extern void T188f150(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_8_type */
extern void T188f149(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_type */
extern void T188f148(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_iterable_type */
extern void T188f147(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_ise_exception_manager_type */
extern void T188f146(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_64_type */
extern void T188f145(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_32_type */
extern void T188f144(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_16_type */
extern void T188f143(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_8_type */
extern void T188f142(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_type */
extern void T188f141(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_function_type */
extern void T188f140(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_exception_manager_type */
extern void T188f139(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_exception_type */
extern void T188f138(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_double_type */
extern void T188f137(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_32_type */
extern void T188f136(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_8_type */
extern void T188f135(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_type */
extern void T188f134(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_boolean_type */
extern void T188f133(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_array_type */
extern void T188f132(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_tuple_type */
extern void T188f131(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_any_type */
extern void T188f130(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.make_adapted */
extern void T188f127(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.default_read_only_value */
extern T1 T188f97(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_unknown_kernel_types */
extern void T188f126(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.initialize */
extern void T188f125(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.initialize */
extern void T188f125p1(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.class_name_tester */
extern T0* T188f96(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.make_config */
extern void T188f122(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.attribute_by_name */
extern T0* T154f5(GE_context* ac, T0* C, T0* a1);
extern T1 T154f5ot1(T0* a1, T0** a2);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].go_after */
extern void T416f14(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_go_after */
extern void T838f17(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_after */
extern void T416f16(GE_context* ac, T0* C);
/* XM_ELEMENT.attribute_same_name */
extern T1 T154f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_string */
extern T1 T154f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.string_equality_tester */
extern unsigned char ge313os1986;
extern T0* ge313ov1986;
extern T0* T154f15(GE_context* ac, T0* C);
/* UC_STRING_EQUALITY_TESTER.default_create */
extern T0* T57c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.string_ */
extern T0* T194f16(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY_PARSER.windows_file_system */
extern T0* T194f15(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY_PARSER.file_system */
extern T0* T194f14(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY_PARSER.unix_file_system */
extern T0* T194f21(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY_PARSER.operating_system */
extern T0* T194f20(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eabv_error */
extern void T63f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabv */
extern T0* T200c191(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ADAPTED_LIBRARIES.library */
extern T0* T189f4(GE_context* ac, T0* C, T6 a1);
/* ET_ADAPTED_LIBRARIES.count */
extern T6 T189f3(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.select_target */
extern void T64f190(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.update_state */
extern void T65f38(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_STATE.set_dotnet */
extern void T186f11(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.set_scoop */
extern void T186f10(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.set_multithreaded */
extern void T186f9(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.set_finalize_mode */
extern void T186f8(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.make */
extern T0* T186c7(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_TARGETS.target */
extern T0* T187f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_TARGETS.count */
extern T6 T187f3(GE_context* ac, T0* C);
/* ET_ECF_TARGETS.is_empty */
extern T1 T187f4(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_system */
extern T0* T62f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.fill_system_config */
extern void T62f105(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T62f105ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.set_library_target */
extern void T64f206(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.attribute_name */
extern T0* T62f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.set_targets */
extern void T64f205(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_target */
extern T0* T62f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T62f27ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.add_option */
extern void T62f108(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_setting */
extern void T62f107(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_variable */
extern void T62f106(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.new_root */
extern T0* T62f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.attribute_value */
extern T0* T62f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.is_false */
extern T1 T62f54(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.is_true */
extern T1 T62f53(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_object */
extern T0* T62f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T62f45ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_condition */
extern T0* T62f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T62f57ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_version_condition */
extern T0* T62f85(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_custom_condition */
extern T0* T62f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_dynamic_runtime_condition */
extern T0* T62f81(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_dotnet_condition */
extern T0* T62f79(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_concurrency_condition */
extern T0* T62f77(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_multithreaded_condition */
extern T0* T62f75(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_build_condition */
extern T0* T62f73(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_platform_condition */
extern T0* T62f71(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_external_library */
extern T0* T62f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T62f43ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_external_include */
extern T0* T62f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T62f41ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_file_rule */
extern T0* T62f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T62f39ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assembly */
extern T0* T62f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T62f37ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.case_insensitive_string_equality_tester */
extern T0* T62f14(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_adapted_library */
extern T0* T62f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T62f35ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_override */
extern T0* T62f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T62f33ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_cluster */
extern T0* T62f31(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
extern T1 T62f31ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.set_ecf_version */
extern void T64f204(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.ecf_version */
extern T0* T62f25(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_ecf_namespace */
extern void T64f203(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_uuid */
extern void T64f202(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabl_error */
extern void T63f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabl */
extern T0* T200c194(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabk_error */
extern void T63f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabk */
extern T0* T200c193(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.string_ */
extern T0* T62f19(GE_context* ac, T0* C);
/* XM_TREE_CALLBACKS_PIPE.document */
extern T0* T157f5(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.is_correct */
extern T1 T164f140(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.parse_from_stream */
extern void T164f206(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.parse_with_events */
extern void T164f213(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_finish */
extern void T164f219(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.parse */
extern void T164f218(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_pop_last_value */
extern void T164f228(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.yy_push_error_value */
extern void T164f227(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_do_action */
extern void T164f226(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_notation_declaration */
extern void T164f256(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_notation_declaration */
extern void T577f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.set_public */
extern void T585f5(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T584f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T586f4(GE_context* ac, T0* C, T6 a1);
/* XM_DTD_EXTERNAL_ID.set_system */
extern void T585f4(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_external_id */
extern T0* T164f174(GE_context* ac, T0* C);
/* XM_DTD_EXTERNAL_ID.make */
extern T0* T585c3(GE_context* ac);
/* XM_EIFFEL_PARSER.when_pe_entity_declared */
extern void T164f255(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].force_new */
extern void T573f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_put */
extern void T573f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_put */
extern void T573f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].force */
extern void T1351f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].fill_with */
extern void T1347f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].extend */
extern void T1347f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_put */
extern void T573f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_put */
extern void T573f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_item */
extern T6 T573f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].hash_position */
extern T6 T573f27(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_item */
extern T6 T573f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].resize */
extern void T573f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_resize */
extern void T573f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].special_integer_ */
extern T0* T573f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_resize */
extern void T573f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_resize */
extern void T573f55(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1351f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1347f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_item */
extern T0* T573f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_resize */
extern void T573f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_modulus */
extern T6 T573f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_capacity */
extern T6 T573f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].unset_found_item */
extern void T573f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].has */
extern T1 T573f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].search_position */
extern void T573f40(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_def */
extern T0* T608c210(GE_context* ac, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_literal */
extern void T608f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.default_create */
extern T0* T575c3(GE_context* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.make_scanner */
extern void T608f213(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T608f215(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset_sent */
extern void T608f218(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T608f215p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T608f215p0(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T608f215p2(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T608f215p3(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.make_with_buffer */
extern void T608f214(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_load_input_buffer */
extern void T608f217(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_content */
extern void T608f220(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T608f216(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T608f216p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_build_tables */
extern void T608f219(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template */
extern unsigned char ge1292os28295;
extern T0* ge1292ov28295;
extern T0* T608f54(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_fixed_array */
extern T0* T608f57(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_5 */
extern void T608f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_array_subcopy */
extern void T608f292(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PE_ENTITY_DEF.integer_array_ */
extern T0* T608f59(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_4 */
extern void T608f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_3 */
extern void T608f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_2 */
extern void T608f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_1 */
extern void T608f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_meta_template */
extern unsigned char ge1292os28294;
extern T0* ge1292ov28294;
extern T0* T608f52(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template */
extern unsigned char ge1292os28291;
extern T0* ge1292ov28291;
extern T0* T608f93(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_2 */
extern void T608f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_1 */
extern void T608f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template */
extern unsigned char ge1292os28285;
extern T0* ge1292ov28285;
extern T0* T608f71(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_5 */
extern void T608f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_4 */
extern void T608f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_3 */
extern void T608f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_2 */
extern void T608f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_1 */
extern void T608f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template */
extern unsigned char ge1292os28279;
extern T0* ge1292ov28279;
extern T0* T608f61(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_5 */
extern void T608f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_4 */
extern void T608f224(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_3 */
extern void T608f223(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_2 */
extern void T608f222(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_1 */
extern void T608f221(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template */
extern unsigned char ge1292os28251;
extern T0* ge1292ov28251;
extern T0* T608f55(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_27 */
extern void T608f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_26 */
extern void T608f290(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_25 */
extern void T608f289(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_24 */
extern void T608f288(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_23 */
extern void T608f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_22 */
extern void T608f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_21 */
extern void T608f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_20 */
extern void T608f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_19 */
extern void T608f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_18 */
extern void T608f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_17 */
extern void T608f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_16 */
extern void T608f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_15 */
extern void T608f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_14 */
extern void T608f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_13 */
extern void T608f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_12 */
extern void T608f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_11 */
extern void T608f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_10 */
extern void T608f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_9 */
extern void T608f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_8 */
extern void T608f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_7 */
extern void T608f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_6 */
extern void T608f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_5 */
extern void T608f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_4 */
extern void T608f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_3 */
extern void T608f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_2 */
extern void T608f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_1 */
extern void T608f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template */
extern unsigned char ge1292os28223;
extern T0* ge1292ov28223;
extern T0* T608f51(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_27 */
extern void T608f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_26 */
extern void T608f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_25 */
extern void T608f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_24 */
extern void T608f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_23 */
extern void T608f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_22 */
extern void T608f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_21 */
extern void T608f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_20 */
extern void T608f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_19 */
extern void T608f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_18 */
extern void T608f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_17 */
extern void T608f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_16 */
extern void T608f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_15 */
extern void T608f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_14 */
extern void T608f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_13 */
extern void T608f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_12 */
extern void T608f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_11 */
extern void T608f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_10 */
extern void T608f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_9 */
extern void T608f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_8 */
extern void T608f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_7 */
extern void T608f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_6 */
extern void T608f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_5 */
extern void T608f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_4 */
extern void T608f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_3 */
extern void T608f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_2 */
extern void T608f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_1 */
extern void T608f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.special_integer_ */
extern T0* T608f56(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.empty_buffer */
extern T0* T608f53(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.make */
extern T0* T1343c8(GE_context* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.make_external */
extern void T608f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_external_entity */
extern T0* T164f173(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.make_external */
extern T0* T605c209(GE_context* ac, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_scanner */
extern void T605f210(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T605f212(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T605f212p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T605f212p0(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T605f212p2(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.make_with_buffer */
extern void T605f211(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_load_input_buffer */
extern void T605f214(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_content */
extern void T605f216(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T605f213(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T605f213p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_build_tables */
extern void T605f215(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template */
extern T0* T605f52(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_fixed_array */
extern T0* T605f55(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_5 */
extern void T605f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_array_subcopy */
extern void T605f288(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_ENTITY_DEF.integer_array_ */
extern T0* T605f57(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_4 */
extern void T605f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_3 */
extern void T605f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_2 */
extern void T605f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_1 */
extern void T605f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_meta_template */
extern T0* T605f50(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template */
extern T0* T605f90(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template_2 */
extern void T605f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template_1 */
extern void T605f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template */
extern T0* T605f69(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_5 */
extern void T605f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_4 */
extern void T605f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_3 */
extern void T605f224(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_2 */
extern void T605f223(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_1 */
extern void T605f222(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template */
extern T0* T605f59(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_5 */
extern void T605f221(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_4 */
extern void T605f220(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_3 */
extern void T605f219(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_2 */
extern void T605f218(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_1 */
extern void T605f217(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template */
extern T0* T605f53(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_27 */
extern void T605f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_26 */
extern void T605f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_25 */
extern void T605f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_24 */
extern void T605f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_23 */
extern void T605f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_22 */
extern void T605f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_21 */
extern void T605f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_20 */
extern void T605f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_19 */
extern void T605f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_18 */
extern void T605f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_17 */
extern void T605f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_16 */
extern void T605f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_15 */
extern void T605f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_14 */
extern void T605f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_13 */
extern void T605f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_12 */
extern void T605f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_11 */
extern void T605f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_10 */
extern void T605f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_9 */
extern void T605f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_8 */
extern void T605f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_7 */
extern void T605f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_6 */
extern void T605f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_5 */
extern void T605f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_4 */
extern void T605f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_3 */
extern void T605f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_2 */
extern void T605f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_1 */
extern void T605f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template */
extern T0* T605f49(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_27 */
extern void T605f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_26 */
extern void T605f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_25 */
extern void T605f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_24 */
extern void T605f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_23 */
extern void T605f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_22 */
extern void T605f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_21 */
extern void T605f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_20 */
extern void T605f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_19 */
extern void T605f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_18 */
extern void T605f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_17 */
extern void T605f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_16 */
extern void T605f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_15 */
extern void T605f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_14 */
extern void T605f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_13 */
extern void T605f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_12 */
extern void T605f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_11 */
extern void T605f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_10 */
extern void T605f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_9 */
extern void T605f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_8 */
extern void T605f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_7 */
extern void T605f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_6 */
extern void T605f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_5 */
extern void T605f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_4 */
extern void T605f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_3 */
extern void T605f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_2 */
extern void T605f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_1 */
extern void T605f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.special_integer_ */
extern T0* T605f70(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.empty_buffer */
extern T0* T605f65(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_entity_declaration */
extern void T164f254(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_DTD_CALLBACKS_NULL.on_entity_declaration */
extern void T577f7(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_EIFFEL_PARSER.when_entity_declared */
extern void T164f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_literal_entity */
extern T0* T164f172(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_literal */
extern T0* T605c208(GE_context* ac, T0* a1, T0* a2);
/* XM_DTD_ATTRIBUTE_CONTENT.set_default_value */
extern void T594f26(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_fixed */
extern void T594f25(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_implied */
extern void T594f24(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_required */
extern void T594f23(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].aliased_resized_area */
extern T0* T596f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].aliased_resized_area */
extern T0* T598f4(GE_context* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING_8].force_last */
extern void T597f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [STRING_8].put_right */
extern void T1358f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [STRING_8].attach_left */
extern void T1358f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [STRING_8].make */
extern T0* T1358c4(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.new_string_bilinked_list */
extern T0* T164f169(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].set_equality_tester */
extern void T597f12(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.string_equality_tester */
extern T0* T164f184(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].make */
extern T0* T597c10(GE_context* ac);
/* DS_BILINKED_LIST [STRING_8].set_internal_cursor */
extern void T597f13(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].new_cursor */
extern T0* T597f6(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].make */
extern T0* T1357c8(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].force */
extern void T596f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].fill_with */
extern void T598f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].extend */
extern void T598f10(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration_list */
extern void T594f22(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration */
extern void T594f27(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.default_enumeration_list */
extern unsigned char ge1202os28771;
extern T0* ge1202ov28771;
extern T0* T594f11(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].make */
extern T0* T143c17(GE_context* ac);
/* DS_LINKED_LIST [STRING_8].set_internal_cursor */
extern void T143f22(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].new_cursor */
extern T0* T143f11(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].make */
extern T0* T173c8(GE_context* ac, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_notation */
extern void T594f21(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_token */
extern void T594f20(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_entity */
extern void T594f19(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_list_type */
extern void T594f18(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id_ref */
extern void T594f17(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id */
extern void T594f16(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_data */
extern void T594f15(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content */
extern T0* T164f168(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T593f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T595f4(GE_context* ac, T0* C, T6 a1);
/* XM_DTD_ATTRIBUTE_CONTENT.make */
extern T0* T594c12(GE_context* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].force */
extern void T593f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].fill_with */
extern void T595f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].extend */
extern void T595f10(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.copy_default */
extern void T594f14(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_implied */
extern T1 T594f10(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_required */
extern T1 T594f9(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.has_default_value */
extern T1 T594f8(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_fixed */
extern T1 T594f7(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_name */
extern void T594f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].force */
extern void T590f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].fill_with */
extern void T592f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].extend */
extern void T592f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T590f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T592f4(GE_context* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].force_last */
extern void T591f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].put_right */
extern void T1356f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].attach_left */
extern void T1356f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1356c4(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content_list */
extern T0* T164f166(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T591c7(GE_context* ac);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].set_internal_cursor */
extern void T591f9(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].new_cursor */
extern T0* T591f5(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1355c8(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.on_attribute_declarations */
extern void T164f252(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].forth */
extern void T1355f10(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_forth */
extern void T591f11(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].add_traversing_cursor */
extern void T591f12(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set_next_cursor */
extern void T1355f12(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].remove_traversing_cursor */
extern void T591f13(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set */
extern void T1355f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* XM_EIFFEL_PARSER.on_attribute_declaration */
extern void T164f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_DTD_CALLBACKS_NULL.on_attribute_declaration */
extern void T577f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].item */
extern T0* T1355f6(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].start */
extern void T1355f9(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_start */
extern void T591f10(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_off */
extern T1 T591f6(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].off */
extern T1 T1355f7(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_more */
extern void T588f11(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_mixed */
extern T0* T588c10(GE_context* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_mixed */
extern void T588f21(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_choice */
extern void T588f19(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_list */
extern void T588f16(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_default */
extern void T588f22(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one */
extern void T588f12(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_sequence */
extern void T588f20(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1354c6(GE_context* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].set_internal_cursor */
extern void T1354f9(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].new_cursor */
extern T0* T1354f5(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1537c3(GE_context* ac, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_sequence */
extern T0* T588c9(GE_context* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_last */
extern void T1354f8(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].put_right */
extern void T1538f5(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].attach_left */
extern void T1538f6(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1538c4(GE_context* ac, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_choice */
extern T0* T588c8(GE_context* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_first */
extern void T1354f7(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.element_name */
extern T0* T164f161(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_name */
extern T0* T588c15(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.set_element_repetition */
extern void T164f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_one */
extern void T588f14(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one_or_more */
extern void T588f13(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_any */
extern T0* T588c7(GE_context* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_any */
extern void T588f18(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].force */
extern void T587f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].fill_with */
extern void T589f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].extend */
extern void T589f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T587f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T589f4(GE_context* ac, T0* C, T6 a1);
/* XM_DTD_ELEMENT_CONTENT.make_empty */
extern T0* T588c6(GE_context* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_empty */
extern void T588f17(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_element_declaration */
extern void T164f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_element_declaration */
extern void T577f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_attribute */
extern void T164f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].has */
extern T1 T582f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].search_position */
extern void T582f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].hash_position */
extern T6 T582f24(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.hash_code */
extern T6 T579f16(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.item */
extern T0* T579f17(GE_context* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING_8].item */
extern T0* T597f8(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].test */
extern T1 T1352f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_item */
extern T0* T582f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_item */
extern T0* T582f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_item */
extern T6 T582f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_equality_tester */
extern T0* T582f17(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_item */
extern T6 T582f25(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].force */
extern void T581f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].fill_with */
extern void T583f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].extend */
extern void T583f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T581f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T583f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].force_new */
extern void T582f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_put */
extern void T582f39(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_put */
extern void T582f38(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_put */
extern void T582f37(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].resize */
extern void T582f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_resize */
extern void T582f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].special_integer_ */
extern T0* T582f28(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_resize */
extern void T582f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_resize */
extern void T582f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_resize */
extern void T582f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_modulus */
extern T6 T582f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_capacity */
extern T6 T582f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].unset_found_item */
extern void T582f35(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_name_set */
extern T0* T164f154(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_equal */
extern T0* T582c31(GE_context* ac, T6 a1);
/* detachable KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T1352c2(GE_context* ac);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make */
extern void T582f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].set_internal_cursor */
extern void T582f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_cursor */
extern T0* T582f21(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME].make */
extern T0* T1353c4(GE_context* ac, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_slots */
extern void T582f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_clashes */
extern void T582f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_key_storage */
extern void T582f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_item_storage */
extern void T582f40(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].make */
extern T0* T578f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].make_empty */
extern T0* T580c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T578c3(GE_context* ac);
/* XM_EIFFEL_PARSER.on_start_tag */
extern void T164f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER.on_end_tag */
extern void T164f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER_NAME.local_part */
extern T0* T579f11(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].forth */
extern void T1357f10(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_forth */
extern void T597f15(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].add_traversing_cursor */
extern void T597f16(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T1357f12(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T597f17(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set */
extern void T1357f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [STRING_8].item */
extern T0* T1357f6(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].start */
extern void T1357f9(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_start */
extern void T597f14(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].cursor_off */
extern T1 T597f9(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].off */
extern T1 T1357f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.string_ */
extern T0* T579f10(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.last */
extern T0* T579f9(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].last */
extern T0* T597f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.ns_prefix */
extern T0* T579f8(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.is_namespace_name */
extern T1 T579f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern void T579f18(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern T0* T579c18(GE_context* ac);
/* XM_EIFFEL_PARSER_NAME.new_string_bilinked_list */
extern T0* T579f15(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.string_equality_tester */
extern T0* T579f14(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_start_tag_finish */
extern void T164f246(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.is_equal */
extern T1 T579f6(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.same_string */
extern T1 T579f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.when_external_dtd */
extern void T164f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern T0* T606c201(GE_context* ac);
/* XM_EIFFEL_SCANNER_DTD.set_start_condition */
extern void T606f208(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern void T606f201p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T606f210(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T606f210p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T606f210p0(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_with_buffer */
extern void T606f209(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_load_input_buffer */
extern void T606f220(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_content */
extern void T606f221(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T606f219(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T606f219p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_build_tables */
extern void T606f224(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template */
extern T0* T606f195(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_fixed_array */
extern T0* T606f198(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_5 */
extern void T606f295(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_array_subcopy */
extern void T606f296(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER_DTD.integer_array_ */
extern T0* T606f200(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_4 */
extern void T606f294(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_3 */
extern void T606f293(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_2 */
extern void T606f292(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_1 */
extern void T606f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_meta_template */
extern T0* T606f194(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template */
extern T0* T606f193(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template_2 */
extern void T606f290(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template_1 */
extern void T606f289(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template */
extern T0* T606f192(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_5 */
extern void T606f288(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_4 */
extern void T606f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_3 */
extern void T606f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_2 */
extern void T606f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_1 */
extern void T606f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template */
extern T0* T606f191(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_5 */
extern void T606f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_4 */
extern void T606f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_3 */
extern void T606f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_2 */
extern void T606f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_1 */
extern void T606f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template */
extern T0* T606f190(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_27 */
extern void T606f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_26 */
extern void T606f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_25 */
extern void T606f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_24 */
extern void T606f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_23 */
extern void T606f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_22 */
extern void T606f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_21 */
extern void T606f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_20 */
extern void T606f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_19 */
extern void T606f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_18 */
extern void T606f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_17 */
extern void T606f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_16 */
extern void T606f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_15 */
extern void T606f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_14 */
extern void T606f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_13 */
extern void T606f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_12 */
extern void T606f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_11 */
extern void T606f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_10 */
extern void T606f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_9 */
extern void T606f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_8 */
extern void T606f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_7 */
extern void T606f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_6 */
extern void T606f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_5 */
extern void T606f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_4 */
extern void T606f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_3 */
extern void T606f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_2 */
extern void T606f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_1 */
extern void T606f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template */
extern T0* T606f189(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_27 */
extern void T606f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_26 */
extern void T606f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_25 */
extern void T606f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_24 */
extern void T606f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_23 */
extern void T606f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_22 */
extern void T606f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_21 */
extern void T606f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_20 */
extern void T606f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_19 */
extern void T606f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_18 */
extern void T606f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_17 */
extern void T606f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_16 */
extern void T606f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_15 */
extern void T606f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_14 */
extern void T606f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_13 */
extern void T606f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_12 */
extern void T606f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_11 */
extern void T606f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_10 */
extern void T606f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_9 */
extern void T606f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_8 */
extern void T606f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_7 */
extern void T606f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_6 */
extern void T606f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_5 */
extern void T606f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_4 */
extern void T606f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_3 */
extern void T606f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_2 */
extern void T606f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_1 */
extern void T606f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.special_integer_ */
extern T0* T606f62(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.empty_buffer */
extern T0* T606f50(GE_context* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].force */
extern void T572f8(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.null_resolver */
extern unsigned char ge1290os14159;
extern T0* ge1290ov14159;
extern T0* T164f94(GE_context* ac, T0* C);
/* XM_NULL_EXTERNAL_RESOLVER.last_error */
extern T0* T575f1(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.resolve_external_id */
extern void T164f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.resolve */
extern void T575f5(GE_context* ac, T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_public */
extern void T575f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].force */
extern void T584f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].fill_with */
extern void T586f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].extend */
extern void T586f10(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_end */
extern void T164f244(GE_context* ac, T0* C);
/* XM_DTD_CALLBACKS_NULL.on_dtd_end */
extern void T577f5(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_doctype */
extern void T164f243(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.on_doctype */
extern void T577f4(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_DECLARATION.set_encoding */
extern void T601f9(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_DECLARATION.set_stand_alone */
extern void T601f8(GE_context* ac, T0* C, T1 a1);
/* XM_EIFFEL_DECLARATION.set_version */
extern void T601f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].force */
extern void T600f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].fill_with */
extern void T602f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].extend */
extern void T602f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T600f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T602f4(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_DECLARATION.make */
extern T0* T601c7(GE_context* ac);
/* XM_EIFFEL_DECLARATION.process */
extern void T601f10(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_xml_declaration */
extern void T164f287(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_PARSER.apply_encoding */
extern void T164f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_content */
extern void T164f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_processing_instruction */
extern void T164f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_dtd_processing_instruction */
extern void T577f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_processing_instruction */
extern void T164f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_dtd_comment */
extern void T164f238(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_CALLBACKS_NULL.on_dtd_comment */
extern void T577f2(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_comment */
extern void T164f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.entity_referenced_in_entity_value */
extern T0* T164f144(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.defined_entity_referenced */
extern T0* T164f196(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.external_entity_to_string */
extern T0* T164f202(GE_context* ac, T0* C, T0* a1);
/* STRING_8.remove */
extern void T17f73(GE_context* ac, T0* C, T6 a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_finish */
extern void T575f6(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_string */
extern void T847f30(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.string_ */
extern T0* T847f8(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.platform */
extern T0* T231f2(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.integer_ */
extern T0* T164f203(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.make_from_stream */
extern T0* T847c29(GE_context* ac, T0* a1);
/* DS_LINKED_QUEUE [CHARACTER_8].make */
extern T0* T1455c5(GE_context* ac);
/* XM_NULL_EXTERNAL_RESOLVER.last_stream */
extern T0* T575f2(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item */
extern T0* T573f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_item */
extern T0* T573f35(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.string_ */
extern T0* T164f89(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.force_error */
extern void T164f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.report_error */
extern void T164f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_error */
extern void T164f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.last_error_extended_description */
extern T0* T164f92(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.safe_error_component */
extern T0* T164f87(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_safe_error_character */
extern T1 T164f97(GE_context* ac, T0* C, T2 a1);
/* XM_EIFFEL_PARSER.setup_error_state */
extern void T164f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.onstring_utf8 */
extern T0* T164f133(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.maximum_item_code */
extern T6 T164f191(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_latin1 */
extern T1 T164f190(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_from_utf8 */
extern T0* T164f186(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.make_from_utf8 */
extern T0* T846c66(GE_context* ac, T0* a1);
/* UC_UTF8_STRING.append_utf8 */
extern void T846f84(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_ROUTINES.valid_utf8 */
extern T1 T845f1(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_ROUTINES.is_encoded_next_byte */
extern T1 T845f10(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.is_encoded_second_byte */
extern T1 T845f5(GE_context* ac, T0* C, T2 a1, T2 a2);
/* UC_UTF8_ROUTINES.is_encoded_first_byte */
extern T1 T845f2(GE_context* ac, T0* C, T2 a1);
/* XM_EIFFEL_PARSER.utf8 */
extern T0* T164f189(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.is_string_mode_ascii */
extern T1 T164f187(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.onstring_ascii */
extern T0* T164f131(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_unicode */
extern T1 T164f185(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string */
extern T0* T164f142(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_string */
extern unsigned char ge1290os14226;
extern T0* ge1290ov14226;
extern T0* T164f195(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_uc */
extern unsigned char ge1290os14227;
extern T0* ge1290ov14227;
extern T0* T164f194(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_empty */
extern T0* T164f201(GE_context* ac, T0* C);
/* UC_UTF8_STRING.make_empty */
extern T0* T846c70(GE_context* ac);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].force */
extern void T578f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].fill_with */
extern void T580f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].extend */
extern void T580f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T578f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T580f4(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.namespace_force_last */
extern void T164f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER_NAME.force_last */
extern void T579f19(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.can_force_last */
extern T1 T579f12(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_namespace_name */
extern T0* T164f141(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_namespaces */
extern T0* T579c20(GE_context* ac);
/* XM_EIFFEL_PARSER.yy_push_last_value */
extern void T164f225(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.accept */
extern void T164f224(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_do_error_action */
extern void T164f222(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.report_eof_expected_error */
extern void T164f233(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.read_token */
extern void T164f221(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.process_attribute_entity */
extern void T164f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity_scanner */
extern void T164f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_start_condition */
extern void T605f290(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_start_condition */
extern void T608f294(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.apply_input_buffer */
extern void T605f289(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.make */
extern T0* T898c9(GE_context* ac, T0* a1);
/* UC_UTF8_ROUTINES.to_utf8 */
extern T0* T845f32(GE_context* ac, T0* C, T0* a1);
extern T1 T845f32ot1(T0* a1, T0** a2);
/* UC_UTF8_ROUTINES.append_code_to_utf8 */
extern void T845f37(GE_context* ac, T0* C, T0* a1, T6 a2);
/* UC_UTF8_ROUTINES.integer_ */
extern T0* T845f29(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.utf8 */
extern T0* T605f68(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.fatal_error */
extern void T605f297(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.apply_input_buffer */
extern void T608f293(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.utf8 */
extern T0* T608f70(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.fatal_error */
extern void T608f301(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_literal */
extern T1 T605f63(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.is_external */
extern T1 T605f66(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_literal */
extern T1 T608f65(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_external */
extern T1 T608f68(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.process_entity */
extern void T164f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_pe_entity */
extern void T164f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.special_integer_ */
extern T0* T164f124(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_init_value_stacks */
extern void T164f220(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_clear_all */
extern void T164f229(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.clear_all */
extern void T164f257(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.clear_stacks */
extern void T164f263(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T164f264(GE_context* ac, T0* C);
/* SPECIAL [XM_EIFFEL_DECLARATION].keep_head */
extern void T602f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].set_count */
extern void T602f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].keep_head */
extern void T598f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].set_count */
extern void T598f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].keep_head */
extern void T595f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].set_count */
extern void T595f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].keep_head */
extern void T592f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].set_count */
extern void T592f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].keep_head */
extern void T589f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].set_count */
extern void T589f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].keep_head */
extern void T586f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].set_count */
extern void T586f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].keep_head */
extern void T583f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].set_count */
extern void T583f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].keep_head */
extern void T580f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].set_count */
extern void T580f9(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.abort */
extern void T164f223(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_start */
extern void T164f217(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.reset_error_state */
extern void T164f216(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.reset */
extern void T164f212(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].wipe_out */
extern void T573f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_wipe_out */
extern void T573f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_wipe_out */
extern void T573f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_wipe_out */
extern void T573f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_wipe_out */
extern void T573f44(GE_context* ac, T0* C);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].keep_head */
extern void T1347f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].set_count */
extern void T1347f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].move_all_cursors_after */
extern void T573f42(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_next_cursor */
extern void T1350f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_after */
extern void T1350f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.make_scanner */
extern void T164f210(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.make_scanner */
extern T0* T568c199(GE_context* ac);
/* XM_EIFFEL_SCANNER.reset */
extern void T568f207(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T568f207p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T568f207p0(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.make_with_buffer */
extern void T568f206(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_load_input_buffer */
extern void T568f215(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_set_content */
extern void T568f216(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T568f214(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T568f214p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_build_tables */
extern void T568f222(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template */
extern T0* T568f193(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_fixed_array */
extern T0* T568f196(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_5 */
extern void T568f293(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_array_subcopy */
extern void T568f294(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER.integer_array_ */
extern T0* T568f198(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template_4 */
extern void T568f292(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_3 */
extern void T568f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_2 */
extern void T568f290(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_1 */
extern void T568f289(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_meta_template */
extern T0* T568f192(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template */
extern T0* T568f191(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template_2 */
extern void T568f288(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_ec_template_1 */
extern void T568f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template */
extern T0* T568f190(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_def_template_5 */
extern void T568f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_4 */
extern void T568f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_3 */
extern void T568f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_2 */
extern void T568f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_1 */
extern void T568f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template */
extern T0* T568f189(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_base_template_5 */
extern void T568f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_4 */
extern void T568f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_3 */
extern void T568f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_2 */
extern void T568f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_1 */
extern void T568f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template */
extern T0* T568f188(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_27 */
extern void T568f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_26 */
extern void T568f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_25 */
extern void T568f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_24 */
extern void T568f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_23 */
extern void T568f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_22 */
extern void T568f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_21 */
extern void T568f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_20 */
extern void T568f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_19 */
extern void T568f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_18 */
extern void T568f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_17 */
extern void T568f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_16 */
extern void T568f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_15 */
extern void T568f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_14 */
extern void T568f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_13 */
extern void T568f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_12 */
extern void T568f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_11 */
extern void T568f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_10 */
extern void T568f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_9 */
extern void T568f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_8 */
extern void T568f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_7 */
extern void T568f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_6 */
extern void T568f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_5 */
extern void T568f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_4 */
extern void T568f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_3 */
extern void T568f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_2 */
extern void T568f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_1 */
extern void T568f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template */
extern T0* T568f187(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_nxt_template_27 */
extern void T568f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_26 */
extern void T568f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_25 */
extern void T568f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_24 */
extern void T568f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_23 */
extern void T568f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_22 */
extern void T568f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_21 */
extern void T568f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_20 */
extern void T568f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_19 */
extern void T568f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_18 */
extern void T568f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_17 */
extern void T568f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_16 */
extern void T568f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_15 */
extern void T568f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_14 */
extern void T568f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_13 */
extern void T568f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_12 */
extern void T568f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_11 */
extern void T568f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_10 */
extern void T568f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_9 */
extern void T568f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_8 */
extern void T568f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_7 */
extern void T568f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_6 */
extern void T568f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_5 */
extern void T568f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_4 */
extern void T568f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_3 */
extern void T568f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_2 */
extern void T568f224(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_1 */
extern void T568f223(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.special_integer_ */
extern T0* T568f51(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.empty_buffer */
extern T0* T568f70(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.canonical_pathname */
extern T0* T121f4(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname_to_string */
extern T0* T121f18(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.item */
extern T0* T538f8(GE_context* ac, T0* C, T6 a1);
/* KL_PATHNAME.is_parent */
extern T1 T538f7(GE_context* ac, T0* C, T6 a1);
/* KL_PATHNAME.is_current */
extern T1 T538f11(GE_context* ac, T0* C, T6 a1);
/* KL_PATHNAME.set_canonical */
extern void T538f21(GE_context* ac, T0* C);
/* KL_PATHNAME.append_current */
extern void T538f23(GE_context* ac, T0* C);
/* KL_PATHNAME.append_name */
extern void T538f28(GE_context* ac, T0* C, T0* a1);
/* ARRAY [STRING_8].force */
extern void T142f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [STRING_8].capacity */
extern T6 T142f9(GE_context* ac, T0* C);
/* ARRAY [STRING_8].set_area */
extern void T142f16(GE_context* ac, T0* C, T0* a1);
/* ARRAY [STRING_8].make_empty_area */
extern void T142f15(GE_context* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].additional_space */
extern T6 T142f8(GE_context* ac, T0* C);
/* ARRAY [STRING_8].empty_area */
extern T1 T142f7(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.string_to_pathname */
extern T0* T121f19(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.append_parent */
extern void T538f24(GE_context* ac, T0* C);
/* KL_PATHNAME.set_relative */
extern void T538f22(GE_context* ac, T0* C, T1 a1);
/* KL_PATHNAME.make */
extern T0* T538c20(GE_context* ac);
/* KL_WINDOWS_FILE_SYSTEM.canonical_pathname */
extern T0* T120f4(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.pathname_to_string */
extern T0* T120f21(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.string_to_pathname */
extern T0* T120f20(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_drive */
extern void T538f27(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_sharename */
extern void T538f26(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_hostname */
extern void T538f25(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname_from_file_system */
extern T0* T121f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.any_ */
extern T0* T121f17(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname_from_file_system */
extern T0* T120f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.any_ */
extern T0* T120f19(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.windows_file_system */
extern T0* T62f16(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.file_system */
extern T0* T62f12(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.unix_file_system */
extern T0* T62f22(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_finalize_mode */
extern void T62f98(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM_PARSER.make */
extern T0* T62c97(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T62f100(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.create_library_parser */
extern void T62f102(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.set_parsed_dotnet_assemblies */
extern void T194f98(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.set_parsed_libraries */
extern void T194f97(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.make_with_factory */
extern T0* T194c96(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.make_with_factory */
extern void T194f96p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.create_library_parser */
extern void T194f100(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.string_equality_tester */
extern T0* T194f13(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY_PARSER.make_with_factory */
extern void T194f96p0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.ise_latest */
extern T0* T194f12(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.enable_position_table */
extern void T159f10(GE_context* ac, T0* C, T0* a1);
/* XM_POSITION_TABLE.make */
extern T0* T155c4(GE_context* ac);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T843c7(GE_context* ac);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].set_internal_cursor */
extern void T843f8(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.set_callbacks */
extern void T164f208(GE_context* ac, T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.make */
extern T0* T157c10(GE_context* ac);
/* XM_TREE_CALLBACKS_PIPE.callbacks_pipe */
extern T0* T157f9(GE_context* ac, T0* C, T0* a1);
/* ARRAY [XM_CALLBACKS_FILTER].item */
extern T0* T557f4(GE_context* ac, T0* C, T6 a1);
/* XM_CALLBACKS_TO_TREE_FILTER.make_null */
extern T0* T159c9(GE_context* ac);
/* XM_CALLBACKS_TO_TREE_FILTER.make_next */
extern void T159f11(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.initialize */
extern void T159f12(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_equal */
extern T0* T559c31(GE_context* ac, T6 a1);
/* detachable KL_EQUALITY_TESTER [XM_NAMESPACE].default_create */
extern T0* T1339c2(GE_context* ac);
/* DS_HASH_SET [XM_NAMESPACE].make */
extern void T559f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].set_internal_cursor */
extern void T559f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].new_cursor */
extern T0* T559f24(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [XM_NAMESPACE].make */
extern T0* T1340c4(GE_context* ac, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].unset_found_item */
extern void T559f37(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_slots */
extern void T559f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_modulus */
extern T6 T559f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_clashes */
extern void T559f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_key_storage */
extern void T559f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_item_storage */
extern void T559f33(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].make */
extern T0* T1341f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_NAMESPACE].make_empty */
extern T0* T1342c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].default_create */
extern T0* T1341c3(GE_context* ac);
/* XM_DOCUMENT.make */
extern T0* T153c10(GE_context* ac);
/* XM_DOCUMENT.make_with_root_named */
extern void T153f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DOCUMENT.force_last */
extern void T153f12(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].force_last */
extern void T836f12(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].force_last */
extern void T836f12p1(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_DOCUMENT_NODE].put_right */
extern void T1450f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_DOCUMENT_NODE].make */
extern T0* T1450c3(GE_context* ac, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].before_addition */
extern void T836f14(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.before_addition */
extern void T153f13(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.equality_delete */
extern void T154f28(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].remove */
extern void T416f13(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_at_cursor */
extern void T838f16(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_all_cursors */
extern void T838f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_current_cell */
extern void T416f18(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_ELEMENT_NODE].put */
extern void T1562f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_ELEMENT_NODE].put_right */
extern void T1562f4(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_last_cell */
extern void T838f23(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_ELEMENT_NODE].forget_right */
extern void T1562f5(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_last */
extern void T838f22(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_last_cursors_after */
extern void T838f27(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].wipe_out */
extern void T838f25(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_all_cursors_after */
extern void T838f28(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].is_last */
extern T1 T416f7(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_is_last */
extern T1 T838f10(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_first */
extern void T838f21(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_first_cell */
extern void T838f26(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].is_first */
extern T1 T416f6(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_is_first */
extern T1 T838f9(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.equality_delete */
extern void T153f14(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].forth */
extern void T1407f13(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_forth */
extern void T836f17(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].add_traversing_cursor */
extern void T836f18(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_next_cursor */
extern void T1407f16(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_traversing_cursor */
extern void T836f23(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set */
extern void T1407f15(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].remove */
extern void T1407f12(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_at_cursor */
extern void T836f16(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_all_cursors */
extern void T836f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_current_cell */
extern void T1407f17(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_DOCUMENT_NODE].put */
extern void T1450f6(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_last_cell */
extern void T836f21(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_DOCUMENT_NODE].forget_right */
extern void T1450f5(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_last */
extern void T836f20(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_last_cursors_after */
extern void T836f26(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_after */
extern void T1407f18(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].wipe_out */
extern void T836f24(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_all_cursors_after */
extern void T836f27(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].is_last */
extern T1 T1407f7(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_is_last */
extern T1 T836f10(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_first */
extern void T836f19(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_first_cell */
extern void T836f25(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].is_first */
extern T1 T1407f6(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_is_first */
extern T1 T836f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].item */
extern T0* T1407f8(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].start */
extern void T1407f11(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_start */
extern void T836f15(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_off */
extern T1 T836f8(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].off */
extern T1 T1407f9(GE_context* ac, T0* C);
/* XM_DOCUMENT.new_cursor */
extern T0* T153f7(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].new_cursor */
extern T0* T836f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].make */
extern T0* T1407c10(GE_context* ac, T0* a1);
/* XM_DOCUMENT.last */
extern T0* T153f6(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].last */
extern T0* T836f7(GE_context* ac, T0* C);
/* XM_DOCUMENT.is_empty */
extern T1 T153f5(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].is_empty */
extern T1 T836f6(GE_context* ac, T0* C);
/* XM_ELEMENT.make */
extern T0* T154c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].make */
extern T0* T838c11(GE_context* ac);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_internal_cursor */
extern void T838f12(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].make */
extern T0* T836c11(GE_context* ac);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_internal_cursor */
extern void T836f13(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.default_ns */
extern unsigned char ge1245os13720;
extern T0* ge1245ov13720;
extern T0* T153f3(GE_context* ac, T0* C);
/* XM_NAMESPACE.make_default */
extern T0* T520c7(GE_context* ac);
/* XM_NAMESPACE.make */
extern void T520f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE.make */
extern T0* T520c8(GE_context* ac, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.null_callbacks */
extern T0* T159f7(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.make */
extern T0* T558c1(GE_context* ac);
/* XM_TREE_CALLBACKS_PIPE.new_stop_on_error */
extern T0* T157f7(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.make_null */
extern T0* T158c5(GE_context* ac);
/* XM_STOP_ON_ERROR_FILTER.make_next */
extern void T158f6(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.initialize */
extern void T158f7(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.null_callbacks */
extern T0* T158f4(GE_context* ac, T0* C);
/* XM_TREE_CALLBACKS_PIPE.new_namespace_resolver */
extern T0* T157f6(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.make_null */
extern T0* T555c26(GE_context* ac);
/* XM_NAMESPACE_RESOLVER.make_next */
extern void T555f37(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.initialize */
extern void T555f38(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_make */
extern void T555f42(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.new_string_queue */
extern T0* T555f20(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].make */
extern T0* T1338c6(GE_context* ac);
/* XM_NAMESPACE_RESOLVER_CONTEXT.make */
extern T0* T1336c10(GE_context* ac);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1535c8(GE_context* ac);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].set_internal_cursor */
extern void T1535f11(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].new_cursor */
extern T0* T1535f6(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1536c8(GE_context* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER.null_callbacks */
extern T0* T555f13(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.set_string_mode_mixed */
extern void T164f207(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.make */
extern T0* T164c205(GE_context* ac);
/* XM_EIFFEL_PARSER.new_entities_table */
extern T0* T164f91(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].set_key_equality_tester */
extern void T573f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map_default */
extern T0* T573c36(GE_context* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map */
extern void T573f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_with_equality_testers */
extern void T573f53(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_sparse_container */
extern void T573f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].set_internal_cursor */
extern void T573f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_cursor */
extern T0* T573f34(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].make */
extern T0* T1350c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_slots */
extern void T573f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_clashes */
extern void T573f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_key_storage */
extern void T573f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_item_storage */
extern void T573f59(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].make */
extern T0* T1351f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].make_empty */
extern T0* T1347c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].default_create */
extern T0* T1351c3(GE_context* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].default_capacity */
extern T6 T573f30(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.make_parser */
extern void T164f211(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_build_parser_tables */
extern void T164f215(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yycheck_template */
extern unsigned char ge1286os14101;
extern T0* ge1286ov14101;
extern T0* T164f88(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yyfixed_array */
extern T0* T164f183(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_4 */
extern void T164f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyarray_subcopy */
extern void T164f286(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PARSER.integer_array_ */
extern T0* T164f204(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yycheck_template_3 */
extern void T164f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_2 */
extern void T164f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_1 */
extern void T164f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template */
extern unsigned char ge1286os14096;
extern T0* ge1286ov14096;
extern T0* T164f86(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytable_template_4 */
extern void T164f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_3 */
extern void T164f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_2 */
extern void T164f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_1 */
extern void T164f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypgoto_template */
extern unsigned char ge1286os14095;
extern T0* ge1286ov14095;
extern T0* T164f84(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yypact_template */
extern unsigned char ge1286os14091;
extern T0* ge1286ov14091;
extern T0* T164f129(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yypact_template_3 */
extern void T164f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypact_template_2 */
extern void T164f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypact_template_1 */
extern void T164f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefgoto_template */
extern unsigned char ge1286os14090;
extern T0* ge1286ov14090;
extern T0* T164f127(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yydefact_template */
extern unsigned char ge1286os14086;
extern T0* ge1286ov14086;
extern T0* T164f125(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yydefact_template_3 */
extern void T164f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefact_template_2 */
extern void T164f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefact_template_1 */
extern void T164f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes2_template */
extern unsigned char ge1286os14085;
extern T0* ge1286ov14085;
extern T0* T164f123(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template */
extern unsigned char ge1286os14081;
extern T0* ge1286ov14081;
extern T0* T164f121(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template_3 */
extern void T164f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes1_template_2 */
extern void T164f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes1_template_1 */
extern void T164f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyr1_template */
extern unsigned char ge1286os14078;
extern T0* ge1286ov14078;
extern T0* T164f119(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yyr1_template_2 */
extern void T164f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyr1_template_1 */
extern void T164f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytranslate_template */
extern unsigned char ge1286os14075;
extern T0* ge1286ov14075;
extern T0* T164f106(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytranslate_template_2 */
extern void T164f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytranslate_template_1 */
extern void T164f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yy_create_value_stacks */
extern void T164f214(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].make */
extern T0* T600f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].make_empty */
extern T0* T602c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].default_create */
extern T0* T600c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].make */
extern T0* T596f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].make_empty */
extern T0* T598c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].default_create */
extern T0* T596c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T593f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].make_empty */
extern T0* T595c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].default_create */
extern T0* T593c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T590f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make_empty */
extern T0* T592c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].default_create */
extern T0* T590c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T587f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].make_empty */
extern T0* T589c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].default_create */
extern T0* T587c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].make */
extern T0* T584f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].make_empty */
extern T0* T586c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].default_create */
extern T0* T584c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make */
extern T0* T581f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make_empty */
extern T0* T583c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].default_create */
extern T0* T581c3(GE_context* ac);
/* XM_EIFFEL_PARSER.initialize */
extern void T164f209(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.null_dtd_callbacks */
extern T0* T164f112(GE_context* ac, T0* C);
/* XM_DTD_CALLBACKS_NULL.make */
extern T0* T577c1(GE_context* ac);
/* XM_EIFFEL_PARSER.null_callbacks */
extern T0* T164f104(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_key_equality_tester */
extern void T178f36(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.string_equality_tester */
extern T0* T62f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_map */
extern T0* T178c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_with_equality_testers */
extern void T178f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_sparse_container */
extern void T178f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_internal_cursor */
extern void T178f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_cursor */
extern T0* T178f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make */
extern T0* T619c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_slots */
extern void T178f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_clashes */
extern void T178f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_key_storage */
extern void T178f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_item_storage */
extern void T178f57(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].make */
extern T0* T620f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].make_empty */
extern T0* T616c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].default_create */
extern T0* T620c3(GE_context* ac);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].set_key_equality_tester */
extern void T177f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_map */
extern T0* T177c40(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_with_equality_testers */
extern void T177f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_sparse_container */
extern void T177f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].set_internal_cursor */
extern void T177f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_cursor */
extern T0* T177f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].make */
extern T0* T611c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_slots */
extern void T177f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_clashes */
extern void T177f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_key_storage */
extern void T177f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_item_storage */
extern void T177f57(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].make */
extern T0* T615f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_LIBRARY].make_empty */
extern T0* T612c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].default_create */
extern T0* T615c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T62f100p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ise_latest */
extern T0* T62f17(GE_context* ac, T0* C);
/* ET_ECF_AST_FACTORY.make */
extern T0* T175c31(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.make_standard */
extern T0* T63c8(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.std */
extern T0* T63f6(GE_context* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.set_variable_value */
extern void T66f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.put */
extern void T201f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.eif_putenv */
extern T6 T201f9(GE_context* ac, T0* C, T14 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].force */
extern void T626f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* SPECIAL [NATIVE_STRING].force */
extern void T1371f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [NATIVE_STRING].extend */
extern void T1371f7(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].position */
extern T6 T626f22(GE_context* ac, T0* C);
/* SPECIAL [IMMUTABLE_STRING_32].force */
extern void T869f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [BOOLEAN].force */
extern void T124f7(GE_context* ac, T0* C, T1 a1, T6 a2);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].deleted_position */
extern T6 T626f21(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].add_space */
extern void T626f37(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].accommodate */
extern void T626f38(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_indexes_map */
extern void T626f42(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_deleted_marks */
extern void T626f41(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_keys */
extern void T626f40(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_content */
extern void T626f39(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].put */
extern void T626f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_conflict */
extern void T626f45(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].found */
extern T1 T626f31(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].occupied */
extern T1 T626f29(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].empty_duplicate */
extern T0* T626f28(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].compare_objects */
extern void T626f44(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].make */
extern T0* T626c34(GE_context* ac, T6 a1);
/* SPECIAL [NATIVE_STRING].make_empty */
extern T0* T1371c4(GE_context* ac, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].soon_full */
extern T1 T626f20(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].not_found */
extern T1 T626f19(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].internal_search */
extern void T626f36(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].same_keys */
extern T1 T626f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* IMMUTABLE_STRING_32.is_equal */
extern T1 T400f7(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_32].same_items */
extern T1 T16f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].hash_code_of */
extern T6 T626f25(GE_context* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.hash_code */
extern T6 T400f6(GE_context* ac, T0* C);
/* IMMUTABLE_STRING_32.item */
extern T3 T400f9(GE_context* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.make_from_string_general */
extern T0* T400c11(GE_context* ac, T0* a1);
/* UC_UTF8_STRING.to_string_32 */
extern T0* T846f26(GE_context* ac, T0* C);
/* STRING_8.to_string_32 */
extern T0* T17f38(GE_context* ac, T0* C);
/* IMMUTABLE_STRING_32.make_from_string_32 */
extern void T400f15(GE_context* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.make_from_string_8 */
extern void T400f14(GE_context* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.make_from_area_and_bounds */
extern void T400f17(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* EXECUTION_ENVIRONMENT.environ */
extern unsigned char ge1661os9802;
extern T0* ge1661ov9802;
extern T0* T201f7(GE_context* ac, T0* C);
/* GEC.execution_environment */
extern T0* T22f22(GE_context* ac, T0* C);
/* GEC.parse_xace_file */
extern void T22f44(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.has_error */
extern T1 T53f5(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.parse_file */
extern void T52f262(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_parser_error */
extern void T53f9(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error */
extern void T53f10(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T53f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T53f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.message */
extern T0* T53f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_VALIDATOR.validate_system_doc */
extern void T160f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_root_element_error */
extern void T53f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.make */
extern T0* T774c8(GE_context* ac, T0* a1, T0* a2);
/* XM_DEFAULT_POSITION.out */
extern T0* T569f6(GE_context* ac, T0* C);
/* XM_DEFAULT_POSITION.string_ */
extern T0* T569f5(GE_context* ac, T0* C);
/* XM_ELEMENT.position */
extern T0* T154f7(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.null_position */
extern unsigned char ge1245os13719;
extern T0* ge1245ov13719;
extern T0* T154f11(GE_context* ac, T0* C);
/* XM_DEFAULT_POSITION.make */
extern T0* T569c7(GE_context* ac, T0* a1, T6 a2, T6 a3, T6 a4);
/* ET_XACE_VALIDATOR.validate_system */
extern void T160f35(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T160f35ot1(T0* a1, T0** a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_element_error */
extern void T53f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.make */
extern T0* T776c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.validate_external */
extern void T160f38(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T160f38ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_export */
extern void T160f42(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T160f42ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_feature */
extern unsigned char ge1155os5016;
extern T0* ge1155ov5016;
extern T0* T160f29(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_class */
extern unsigned char ge1155os4991;
extern T0* ge1155ov4991;
extern T0* T160f27(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_export */
extern unsigned char ge1155os5014;
extern T0* ge1155ov5014;
extern T0* T160f26(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_link_library */
extern unsigned char ge1155os5017;
extern T0* ge1155ov5017;
extern T0* T160f25(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_location */
extern unsigned char ge1155os5000;
extern T0* ge1155ov5000;
extern T0* T160f13(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_include_dir */
extern unsigned char ge1155os5013;
extern T0* ge1155ov5013;
extern T0* T160f24(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_element_obsoleted_by_element_warning */
extern void T53f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning */
extern void T53f18(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning_message */
extern void T53f19(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T427c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_external */
extern unsigned char ge1155os5004;
extern T0* ge1155ov5004;
extern T0* T160f11(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_option */
extern void T160f37(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T160f37ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_optimize */
extern unsigned char ge1155os5012;
extern T0* ge1155ov5012;
extern T0* T160f23(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_debug */
extern unsigned char ge1155os5011;
extern T0* ge1155ov5011;
extern T0* T160f22(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_check */
extern unsigned char ge1155os5010;
extern T0* ge1155ov5010;
extern T0* T160f21(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_loop */
extern unsigned char ge1155os5009;
extern T0* ge1155ov5009;
extern T0* T160f20(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_invariant */
extern unsigned char ge1155os5008;
extern T0* ge1155ov5008;
extern T0* T160f19(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_ensure */
extern unsigned char ge1155os5007;
extern T0* ge1155ov5007;
extern T0* T160f18(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_require */
extern unsigned char ge1155os5006;
extern T0* ge1155ov5006;
extern T0* T160f17(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_value */
extern unsigned char ge1155os4996;
extern T0* ge1155ov4996;
extern T0* T160f16(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_option_warning */
extern void T53f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.make */
extern T0* T780c9(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.uc_name */
extern unsigned char ge1155os4995;
extern T0* ge1155ov4995;
extern T0* T780f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].has */
extern T1 T419f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search_position */
extern void T419f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].hash_position */
extern T6 T419f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_item */
extern T0* T419f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_item */
extern T6 T419f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_item */
extern T6 T419f27(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTION_NAMES.option_codes */
extern unsigned char ge1127os5213;
extern T0* ge1127ov5213;
extern T0* T408f2(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].put_new */
extern void T419f40(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_put */
extern void T419f47(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_put */
extern void T419f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_put */
extern void T419f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_put */
extern void T419f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].unset_found_item */
extern void T419f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_key_equality_tester */
extern void T419f39(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTION_NAMES.string_equality_tester */
extern T0* T408f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_map */
extern T0* T419c37(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_with_equality_testers */
extern void T419f42(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_sparse_container */
extern void T419f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_internal_cursor */
extern void T419f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_cursor */
extern T0* T419f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8].make */
extern T0* T878c4(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_slots */
extern void T419f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_modulus */
extern T6 T419f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_clashes */
extern void T419f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_key_storage */
extern void T419f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_item_storage */
extern void T419f49(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_VALIDATOR.options */
extern unsigned char ge1114os5248;
extern T0* ge1114ov5248;
extern T0* T160f15(GE_context* ac, T0* C);
/* ET_XACE_OPTION_NAMES.default_create */
extern T0* T408c228(GE_context* ac);
/* ET_XACE_VALIDATOR.uc_option */
extern unsigned char ge1155os5003;
extern T0* ge1155ov5003;
extern T0* T160f10(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_mount */
extern void T160f36(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T160f36ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_exclude */
extern void T160f41(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_exclude_element_warning */
extern void T53f25(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.make */
extern T0* T779c8(GE_context* ac, T0* a1);
/* ET_XACE_VALIDATOR.uc_exclude */
extern unsigned char ge1155os5018;
extern T0* ge1155ov5018;
extern T0* T160f14(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_mount */
extern unsigned char ge1155os4999;
extern T0* ge1155ov4999;
extern T0* T160f9(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_cluster */
extern void T160f39(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T160f39ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_class */
extern void T160f43(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T160f43ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_feature */
extern void T160f44(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T160f44ot1(T0* a1, T0** a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_cluster_element_warning */
extern void T53f24(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.make */
extern T0* T778c8(GE_context* ac, T0* a1);
/* ET_XACE_VALIDATOR.validate_named_cluster */
extern void T160f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_non_empty_attribute_expected_error */
extern void T53f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.make */
extern T0* T424c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_cluster */
extern unsigned char ge1155os4994;
extern T0* ge1155ov4994;
extern T0* T160f5(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_description */
extern unsigned char ge1155os5002;
extern T0* ge1155ov5002;
extern T0* T160f8(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_root */
extern void T160f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_creation */
extern unsigned char ge1155os4992;
extern T0* ge1155ov4992;
extern T0* T160f28(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_element_error */
extern void T53f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ELEMENT_ERROR.make */
extern T0* T777c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.element_by_name */
extern T0* T154f8(GE_context* ac, T0* C, T0* a1);
extern T1 T154f8ot1(T0* a1, T0** a2);
/* XM_ELEMENT.named_same_name */
extern T1 T154f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_namespace */
extern T1 T154f14(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE.is_equal */
extern T1 T520f4(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE.string_ */
extern T0* T520f3(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_root */
extern unsigned char ge1155os4990;
extern T0* ge1155ov4990;
extern T0* T160f12(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_attribute_error */
extern void T53f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.make */
extern T0* T775c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.has_attribute_by_name */
extern T1 T154f6(GE_context* ac, T0* C, T0* a1);
extern T1 T154f6ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_name */
extern T0* T160f7(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_system */
extern unsigned char ge1155os4989;
extern T0* ge1155ov4989;
extern T0* T160f6(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.string_ */
extern T0* T160f3(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].wipe_out */
extern void T162f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].slots_wipe_out */
extern void T162f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].clashes_wipe_out */
extern void T162f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].key_storage_wipe_out */
extern void T162f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].item_storage_wipe_out */
extern void T162f41(GE_context* ac, T0* C);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].keep_head */
extern void T566f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].set_count */
extern void T566f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].unset_found_item */
extern void T162f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].move_all_cursors_after */
extern void T162f39(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8].set_next_cursor */
extern void T565f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8].set_after */
extern void T565f7(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_root_class_name */
extern void T61f187(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.unset_root_type */
extern void T61f219(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_root_type */
extern void T61f218(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_system */
extern T0* T52f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.set_use_boehm_gc */
extern void T61f205(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM_PARSER.options */
extern T0* T52f19(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.garbage_collector */
extern T0* T404f107(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_garbage_collector */
extern unsigned char ge1126os21565;
extern T0* ge1126ov21565;
extern T0* T404f131(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.options */
extern T0* T404f118(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_trace_mode */
extern void T61f204(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.trace */
extern T1 T404f106(GE_context* ac, T0* C);
/* UT_TRISTATE.is_true */
extern T1 T789f3(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_trace_declared */
extern T1 T404f127(GE_context* ac, T0* C);
/* UT_TRISTATE.is_undefined */
extern T1 T789f2(GE_context* ac, T0* C);
/* UT_TRISTATE.is_false */
extern T1 T789f4(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_exception_trace_mode */
extern void T61f203(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.exception_trace */
extern T1 T404f105(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_exception_trace_declared */
extern T1 T404f124(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_console_application_mode */
extern void T61f202(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.console_application */
extern T1 T404f104(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_console_application_declared */
extern T1 T404f121(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.replace_all_characters */
extern T0* T52f18(GE_context* ac, T0* C, T0* a1, T2 a2, T2 a3);
/* UC_UTF8_STRING.put */
extern void T846f72(GE_context* ac, T0* C, T2 a1, T6 a2);
/* ET_XACE_SYSTEM.merge_externals */
extern void T61f201(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.merge_externals */
extern void T413f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].item */
extern T0* T414f10(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_CLUSTERS.merge_externals */
extern void T411f6(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.merge_externals */
extern void T410f70(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].forth */
extern void T462f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_forth */
extern void T136f32(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_position */
extern void T462f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].add_traversing_cursor */
extern void T136f37(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].remove_traversing_cursor */
extern void T136f38(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_EXTERNALS.put_link_library */
extern void T403f7(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].force_last */
extern void T143f18(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [STRING_8].put_right */
extern void T550f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [STRING_8].make */
extern T0* T550c3(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].item */
extern T0* T462f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_item */
extern T0* T136f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].after */
extern T1 T462f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].start */
extern void T462f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_start */
extern void T136f31(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].off */
extern T1 T462f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].before */
extern T1 T462f7(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.link */
extern T0* T404f110(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_link */
extern unsigned char ge1126os21579;
extern T0* ge1126ov21579;
extern T0* T404f95(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].set_equality_tester */
extern void T136f39(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.string_equality_tester */
extern T0* T404f117(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_link_declared */
extern T1 T404f138(GE_context* ac, T0* C);
/* ET_XACE_EXTERNALS.put_include_directory */
extern void T403f6(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.header */
extern T0* T404f109(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_header */
extern unsigned char ge1126os21568;
extern T0* ge1126ov21568;
extern T0* T404f137(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_header_declared */
extern T1 T404f135(GE_context* ac, T0* C);
/* ET_XACE_EXTERNALS.put_c_compiler_options */
extern void T403f5(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.c_compiler_options */
extern T0* T404f108(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_c_compiler_options */
extern unsigned char ge1126os21545;
extern T0* ge1126ov21545;
extern T0* T404f134(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_c_compiler_options_declared */
extern T1 T404f132(GE_context* ac, T0* C);
/* ET_XACE_EXTERNALS.make */
extern T0* T403c4(GE_context* ac);
/* ET_XACE_SYSTEM.mount_libraries */
extern void T61f200(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.mount_libraries */
extern void T413f8(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.mount_libraries */
extern void T411f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTERS.put_last */
extern void T411f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].force_last */
extern void T872f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].force */
extern void T1466f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].fill_with */
extern void T1465f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].extend */
extern void T1465f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].resize */
extern void T872f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].aliased_resized_area */
extern T0* T1466f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_CLUSTER].aliased_resized_area */
extern T0* T1465f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].new_capacity */
extern T6 T872f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].extendible */
extern T1 T872f7(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_CLUSTER.set_library_prefix */
extern void T410f76(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_library_prefix */
extern void T411f13(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_mounted */
extern void T410f77(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_mounted */
extern void T411f17(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.make_empty */
extern T0* T411c5(GE_context* ac);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].make */
extern T0* T872c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].set_internal_cursor */
extern void T872f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].new_cursor */
extern T0* T872f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].make */
extern T0* T1467c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].make */
extern T0* T1466f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_CLUSTER].make_empty */
extern T0* T1465c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].default_create */
extern T0* T1466c3(GE_context* ac);
/* ET_XACE_SYSTEM_PARSER.fill_system */
extern void T52f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T52f265ot1(T0* a1, T0** a2);
extern T1 T52f265ot2(T0* a1, T0** a2);
/* ET_XACE_SYSTEM.set_mounted_libraries */
extern void T61f210(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_options */
extern void T61f209(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_creation_procedure_name */
extern void T61f208(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_root_creation */
extern void T61f240(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_system_name */
extern void T61f207(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_clusters */
extern void T61f206(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG.merge_libraries */
extern void T418f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.merge_libraries */
extern void T413f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARY.set_root */
extern void T412f12(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_MOUNTED_LIBRARY.cloned_object */
extern T0* T412f8(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARY.twin */
extern T0* T412f9(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARY.copy */
extern void T412f13(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.set_root */
extern void T413f7(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].is_empty */
extern T1 T414f6(GE_context* ac, T0* C);
/* ET_XACE_CLUSTERS.merge_libraries */
extern void T411f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.merge_libraries */
extern void T410f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_override */
extern void T410f69(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.cluster_by_name */
extern T0* T411f2(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.string_ */
extern T0* T411f3(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.override_cluster */
extern T0* T404f103(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_override_cluster */
extern unsigned char ge1126os21597;
extern T0* ge1126ov21597;
extern T0* T404f120(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_override_cluster_declared */
extern T1 T404f102(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.fill_externals */
extern void T52f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T52f267ot1(T0* a1, T0** a2);
/* ET_XACE_CLUSTER.put_class_option */
extern void T410f61(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].put_last */
extern void T871f7(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_XACE_CLASS_OPTIONS].put_right */
extern void T1464f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1464c3(GE_context* ac, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].make */
extern T0* T871c6(GE_context* ac);
/* detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].set_internal_cursor */
extern void T871f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].new_cursor */
extern T0* T871f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1463c3(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_export */
extern T0* T52f150(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T52f150ot1(T0* a1, T0** a2);
/* ET_XACE_OPTIONS.set_export_option */
extern void T404f173(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].is_empty */
extern T1 T773f6(GE_context* ac, T0* C);
/* ET_XACE_CLASS_OPTIONS.put_feature_option */
extern void T421f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].put_last */
extern void T773f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_XACE_FEATURE_OPTIONS].put_right */
extern void T1440f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1440c3(GE_context* ac, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T773c7(GE_context* ac);
/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].set_internal_cursor */
extern void T773f9(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].new_cursor */
extern T0* T773f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1439c3(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_exported_feature */
extern T0* T52f258(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_AST_FACTORY.new_feature_options */
extern T0* T152f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_FEATURE_OPTIONS.make */
extern T0* T772c3(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.uc_alias */
extern unsigned char ge1155os5015;
extern T0* ge1155ov5015;
extern T0* T52f260(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_feature */
extern T0* T52f257(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_class_options */
extern T0* T152f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLASS_OPTIONS.make */
extern T0* T421c4(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.uc_export */
extern T0* T52f149(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_header */
extern void T404f184(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_include_dir */
extern T0* T52f148(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_link */
extern void T404f195(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_location */
extern T0* T52f147(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_link_library */
extern T0* T52f146(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_options */
extern T0* T152f3(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.make */
extern T0* T404c143(GE_context* ac);
/* ET_XACE_SYSTEM_PARSER.uc_external */
extern T0* T52f32(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.new_options */
extern T0* T52f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.fill_options */
extern void T52f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T52f266ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.uc_debug */
extern T0* T52f145(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_optimize */
extern T0* T52f144(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_check */
extern T0* T52f142(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_loop */
extern T0* T52f139(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_invariant */
extern T0* T52f137(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_ensure */
extern T0* T52f135(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_enable */
extern unsigned char ge1155os5005;
extern T0* ge1155ov5005;
extern T0* T52f133(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_require */
extern T0* T52f132(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_wedit */
extern void T404f237(GE_context* ac, T0* C, T1 a1);
/* UT_TRISTATE.set_false */
extern void T789f8(GE_context* ac, T0* C);
/* UT_TRISTATE.set_true */
extern void T789f6(GE_context* ac, T0* C);
/* UT_TRISTATE.make_undefined */
extern T0* T789c7(GE_context* ac);
/* UT_TRISTATE.set_undefined */
extern void T789f9(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_warning */
extern void T404f236(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_warning */
extern unsigned char ge1126os21430;
extern T0* ge1126ov21430;
extern T0* T404f100(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].put_last */
extern void T76f69(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].compress */
extern void T76f70(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].key_storage_keep_head */
extern void T76f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_keep_head */
extern void T76f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].move_all_cursors */
extern void T76f72(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].key_storage_put */
extern void T76f71(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_XACE_OPTIONS.set_void_safety */
extern void T404f235(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_void_safety */
extern unsigned char ge1126os21429;
extern T0* ge1126ov21429;
extern T0* T404f98(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_visible_filename */
extern void T404f234(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_version */
extern void T404f233(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_verbose */
extern void T404f232(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_use_full_cluster_name_as_namespace */
extern void T404f231(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_use_cluster_name_as_namespace */
extern void T404f230(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_trace */
extern void T404f229(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_target */
extern void T404f228(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_target */
extern unsigned char ge1126os21427;
extern T0* ge1126ov21427;
extern T0* T404f96(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_syntax */
extern void T404f227(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_syntax */
extern unsigned char ge1126os21426;
extern T0* ge1126ov21426;
extern T0* T404f139(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_strip_option */
extern void T404f226(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_storable_filename */
extern void T404f225(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_stack_size */
extern void T404f224(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_split */
extern void T404f223(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_shared_library_definition */
extern void T404f222(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_reloads_optimization */
extern void T404f221(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_recursive */
extern void T404f220(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_read_only */
extern void T404f219(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_public_key_token */
extern void T404f218(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_profile */
extern void T404f217(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_prefix_option */
extern void T404f216(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_precompiled */
extern void T404f215(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_portable_code_generation */
extern void T404f214(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_override_cluster */
extern void T404f213(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_old_verbatim_strings */
extern void T404f212(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_no_default_lib */
extern void T404f211(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_namespace */
extern void T404f210(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_multithreaded */
extern void T404f209(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_use_optimized_precompile */
extern void T404f208(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_key_file_name */
extern void T404f207(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_generation_version */
extern void T404f206(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_generation */
extern void T404f205(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_culture */
extern void T404f204(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_clr_version */
extern void T404f203(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_classes_per_module */
extern void T404f202(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_msil_assembly_compatibility */
extern void T404f201(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_metadata_cache_path */
extern void T404f200(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_map */
extern void T404f199(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_manifest_string_trace */
extern void T404f198(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_linux_fpu_double_precision */
extern void T404f197(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_linker */
extern void T404f196(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_linker */
extern unsigned char ge1126os21425;
extern T0* ge1126ov21425;
extern T0* T404f136(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_line_generation */
extern void T404f194(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_leaves_optimization */
extern void T404f193(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_layout_optimization */
extern void T404f192(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_layout */
extern void T404f191(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_layout */
extern unsigned char ge1126os21424;
extern T0* ge1126ov21424;
extern T0* T404f133(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_jumps_optimization */
extern void T404f190(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_inlining_size */
extern void T404f189(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_inlining */
extern void T404f188(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_inlining */
extern unsigned char ge1126os21423;
extern T0* ge1126ov21423;
extern T0* T404f130(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_include */
extern void T404f187(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_il_verifiable */
extern void T404f186(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_high_memory_compiler */
extern void T404f185(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_heap_size */
extern void T404f183(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_gc_info */
extern void T404f182(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_garbage_collector */
extern void T404f181(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_garbage_collector */
extern unsigned char ge1126os21422;
extern T0* ge1126ov21422;
extern T0* T404f128(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_full_class_checking */
extern void T404f180(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_fst_optimization */
extern void T404f179(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_positive_integer_expected_error */
extern void T53f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.make */
extern T0* T426c8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_OPTIONS.set_fst_expansion_factor */
extern void T404f178(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_force_32bits */
extern void T404f177(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_flat_fst_optimization */
extern void T404f176(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_finalize_option */
extern void T404f175(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_external_runtime */
extern void T404f174(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_exclude */
extern void T404f172(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_exception_trace */
extern void T404f171(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_enforce_unique_class_names */
extern void T404f170(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_ecf_library */
extern void T404f169(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_dynamic_runtime */
extern void T404f168(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dotnet_naming_convention */
extern void T404f167(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_document */
extern void T404f166(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_debugger */
extern void T404f165(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_debug_tag */
extern void T404f164(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_debug_option */
extern void T404f163(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dead_code_removal */
extern void T404f162(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_dead_code_removal */
extern unsigned char ge1126os21421;
extern T0* ge1126ov21421;
extern T0* T404f125(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_c_compiler_options */
extern void T404f161(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_culture */
extern void T404f160(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_create_keyword_extension */
extern void T404f159(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_console_application */
extern void T404f158(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_component */
extern void T404f157(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_cls_compliant */
extern void T404f156(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_clean */
extern void T404f155(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_check_vape */
extern void T404f154(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_case_insensitive */
extern void T404f153(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_callback */
extern void T404f152(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_callback */
extern unsigned char ge1126os21420;
extern T0* ge1126ov21420;
extern T0* T404f122(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_automatic_backup */
extern void T404f151(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_attached_by_default */
extern void T404f150(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_attribute_value_error */
extern void T53f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.make */
extern T0* T425c8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.string_ */
extern T0* T425f4(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_assertion */
extern void T404f149(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_assertion */
extern unsigned char ge1126os21419;
extern T0* ge1126ov21419;
extern T0* T404f119(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_assembly */
extern void T404f148(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_array_optimization */
extern void T404f147(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_arguments */
extern void T404f146(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_address_expression */
extern void T404f145(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_boolean_expected_error */
extern void T53f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.make */
extern T0* T423c8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_SYSTEM_PARSER.is_false */
extern T1 T52f131(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_abstract */
extern void T404f144(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM_PARSER.is_true */
extern T1 T52f130(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_item */
extern T6 T419f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_item */
extern T6 T419f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found */
extern T1 T419f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search */
extern void T419f38(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.option_codes */
extern T0* T52f34(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.string_equality_tester */
extern T0* T52f156(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_value */
extern T0* T52f33(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_option */
extern T0* T52f30(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.put_last */
extern void T413f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].force_last */
extern void T414f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].force */
extern void T875f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].fill_with */
extern void T874f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].extend */
extern void T874f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].resize */
extern void T414f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].aliased_resized_area */
extern T0* T875f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].aliased_resized_area */
extern T0* T874f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].new_capacity */
extern T6 T414f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].extendible */
extern T1 T414f8(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_multiple_library_prefix_error */
extern void T53f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.make */
extern T0* T422c8(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARY.same_library_prefix */
extern T1 T412f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARY.string_ */
extern T0* T412f6(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.item */
extern T0* T413f2(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.string_ */
extern T0* T413f3(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_mounted_libraries */
extern T0* T152f2(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.make_empty */
extern T0* T413c5(GE_context* ac);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T414c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].set_internal_cursor */
extern void T414f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].new_cursor */
extern T0* T414f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T876c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T875f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].make_empty */
extern T0* T874c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].default_create */
extern T0* T875c3(GE_context* ac);
/* ET_XACE_SYSTEM_PARSER.new_mount */
extern T0* T52f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MOUNTED_LIBRARY.set_library_prefix */
extern void T412f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_prefix */
extern unsigned char ge1155os5001;
extern T0* ge1155ov5001;
extern T0* T52f153(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_mounted_library */
extern T0* T152f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MOUNTED_LIBRARY.make */
extern T0* T412c10(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_cannot_read_file_error */
extern void T53f28(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.parse_library */
extern void T167f253(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_library */
extern void T167f254(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T167f254ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG.set_libraries */
extern void T418f12(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG.set_clusters */
extern void T418f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_externals */
extern void T167f256(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T167f256ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_export */
extern T0* T167f139(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T167f139ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_exported_feature */
extern T0* T167f247(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_alias */
extern T0* T167f249(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_feature */
extern T0* T167f246(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_class */
extern T0* T167f142(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_export */
extern T0* T167f138(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_include_dir */
extern T0* T167f137(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_location */
extern T0* T167f136(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_link_library */
extern T0* T167f135(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_external */
extern T0* T167f21(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_options */
extern T0* T167f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_options */
extern void T167f255(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T167f255ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_debug */
extern T0* T167f134(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_optimize */
extern T0* T167f133(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_check */
extern T0* T167f131(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_loop */
extern T0* T167f128(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_invariant */
extern T0* T167f126(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_ensure */
extern T0* T167f124(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_enable */
extern T0* T167f122(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_require */
extern T0* T167f121(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.is_false */
extern T1 T167f120(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.is_true */
extern T1 T167f119(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.option_codes */
extern T0* T167f23(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.string_equality_tester */
extern T0* T167f144(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_value */
extern T0* T167f22(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_option */
extern T0* T167f19(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_mount */
extern T0* T167f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.execution_environment */
extern T0* T167f146(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_mount */
extern T0* T167f17(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG.set_library_prefix */
extern void T418f10(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_prefix */
extern T0* T167f16(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG.set_options */
extern void T418f9(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_cluster */
extern T0* T167f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T167f15ot1(T0* a1, T0** a2);
/* ET_XACE_CLUSTER.set_libraries */
extern void T410f67(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_subclusters */
extern void T410f66(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_parent */
extern void T411f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_parent */
extern void T410f75(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_options */
extern void T410f65(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_read_only */
extern void T410f64(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.read_only */
extern T1 T404f116(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_read_only_declared */
extern T1 T404f115(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.set_recursive */
extern void T410f63(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.recursive */
extern T1 T404f114(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_recursive_declared */
extern T1 T404f113(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.set_abstract */
extern void T410f62(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.abstract */
extern T1 T404f112(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_abstract_declared */
extern T1 T404f111(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_class */
extern T0* T167f143(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T167f143ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_feature */
extern T0* T167f248(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T167f248ot1(T0* a1, T0** a2);
/* ET_XACE_CLUSTER.set_cluster_prefix */
extern void T410f60(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_relative */
extern void T410f59(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_relative */
extern unsigned char ge1155os4998;
extern T0* ge1155ov4998;
extern T0* T167f141(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_attribute_obsoleted_by_element_warning */
extern void T53f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T781c8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_abstract */
extern unsigned char ge1155os4997;
extern T0* ge1155ov4997;
extern T0* T167f140(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_cluster */
extern T0* T152f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_CLUSTER.make */
extern T0* T410c58(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T410f68(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T411f12(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_cluster */
extern T0* T167f13(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.string_ */
extern T0* T167f12(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG.set_name */
extern void T418f8(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_name */
extern T0* T167f145(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.execution_environment */
extern T0* T52f157(GE_context* ac, T0* C);
/* UC_UTF8_STRING.has_substring */
extern T1 T846f64(GE_context* ac, T0* C, T0* a1);
/* STRING_8.has_substring */
extern T1 T17f43(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].force_new */
extern void T162f52(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].key_storage_put */
extern void T162f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].item_storage_put */
extern void T162f57(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG].force */
extern void T567f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].fill_with */
extern void T566f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].extend */
extern void T566f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].slots_put */
extern void T162f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].clashes_put */
extern void T162f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].slots_item */
extern T6 T162f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].hash_position */
extern T6 T162f27(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].clashes_item */
extern T6 T162f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].resize */
extern void T162f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].clashes_resize */
extern void T162f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].special_integer_ */
extern T0* T162f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].key_storage_resize */
extern void T162f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].item_storage_resize */
extern void T162f60(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG].aliased_resized_area */
extern T0* T567f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].aliased_resized_area */
extern T0* T566f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].key_storage_item */
extern T0* T162f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].slots_resize */
extern void T162f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].new_modulus */
extern T6 T162f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].new_capacity */
extern T6 T162f24(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_AST_FACTORY.new_library */
extern T0* T152f5(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG.make */
extern T0* T418c7(GE_context* ac);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].found_item */
extern T0* T162f22(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].item_storage_item */
extern T0* T162f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].found */
extern T1 T162f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].search */
extern void T162f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].search_position */
extern void T162f53(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_mount */
extern T0* T52f28(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_clusters */
extern T0* T152f1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.make */
extern T0* T411c8(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].put_last */
extern void T872f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_cluster */
extern T0* T52f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T52f27ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.new_class */
extern T0* T52f154(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T52f154ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.new_feature */
extern T0* T52f259(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T52f259ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.uc_relative */
extern T0* T52f152(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_abstract */
extern T0* T52f151(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_cluster */
extern T0* T52f25(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_creation */
extern T0* T52f24(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_class */
extern T0* T52f23(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_root */
extern T0* T52f22(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.new_eiffel_error_handler */
extern T0* T52f17(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_ast_factory */
extern void T61f199(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_eiffel_ast_factory */
extern T0* T52f16(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.make */
extern T0* T61c186(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.set_default_class_mapping */
extern void T61f217(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_wide_character_ref_class_mapping */
extern void T61f293(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_class_mapping */
extern void T61f306(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.set_wide_character_class_mapping */
extern void T61f292(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_string_class_mapping */
extern void T61f291(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_real_ref_class_mapping */
extern void T61f290(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_real_class_mapping */
extern void T61f289(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_natural_ref_class_mapping */
extern void T61f288(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_natural_class_mapping */
extern void T61f287(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_integer_ref_class_mapping */
extern void T61f286(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_integer_class_mapping */
extern void T61f285(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_double_ref_class_mapping */
extern void T61f284(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_double_class_mapping */
extern void T61f283(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_character_ref_class_mapping */
extern void T61f282(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_character_class_mapping */
extern void T61f281(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_kernel_types */
extern void T61f216(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_wide_character_type */
extern void T61f280(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_typed_pointer_type */
extern void T61f279(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_type_type */
extern void T61f278(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_system_string_type */
extern void T61f277(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_system_object_type */
extern void T61f276(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_string_type */
extern void T61f275(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_string_32_type */
extern void T61f274(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_string_8_type */
extern void T61f273(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_special_type */
extern void T61f272(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_routine_type */
extern void T61f271(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_real_64_type */
extern void T61f270(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_real_32_type */
extern void T61f269(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_real_type */
extern void T61f268(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_procedure_type */
extern void T61f267(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_predicate_type */
extern void T61f266(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_pointer_type */
extern void T61f265(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_none_type */
extern void T61f264(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_64_type */
extern void T61f263(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_32_type */
extern void T61f262(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_16_type */
extern void T61f261(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_8_type */
extern void T61f260(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_type */
extern void T61f259(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_iterable_type */
extern void T61f258(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_ise_exception_manager_type */
extern void T61f257(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_64_type */
extern void T61f256(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_32_type */
extern void T61f255(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_16_type */
extern void T61f254(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_8_type */
extern void T61f253(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_type */
extern void T61f252(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_function_type */
extern void T61f251(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_exception_manager_type */
extern void T61f250(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_exception_type */
extern void T61f249(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_double_type */
extern void T61f248(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_character_32_type */
extern void T61f247(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_character_8_type */
extern void T61f246(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_character_type */
extern void T61f245(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_boolean_type */
extern void T61f244(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_array_type */
extern void T61f243(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_tuple_type */
extern void T61f242(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_any_type */
extern void T61f241(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.make_adapted */
extern void T61f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.default_read_only_value */
extern T1 T61f159(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_unknown_kernel_types */
extern void T61f214(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_preparse_shallow_mode */
extern void T61f213(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_default_keyword_usage */
extern void T61f212(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_use_detachable_keyword */
extern void T61f224(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_use_attached_keyword */
extern void T61f223(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_use_reference_keyword */
extern void T61f222(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_use_note_keyword */
extern void T61f221(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_use_attribute_keyword */
extern void T61f220(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.initialize */
extern void T61f211(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.initialize */
extern void T61f211p1(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.class_name_tester */
extern T0* T61f166(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.tokens */
extern T0* T61f164(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_name */
extern T0* T52f15(GE_context* ac, T0* C);
/* XM_ELEMENT.set_name */
extern void T154f23(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_system */
extern T0* T52f14(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.preprocess_element */
extern void T161f11(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T161f11ot1(T0* a1, T0** a2);
/* ET_XACE_PREPROCESSOR.should_strip_element */
extern T1 T161f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_invalid_expression_error */
extern void T53f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_INVALID_EXPRESSION_ERROR.make */
extern T0* T1386c8(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_PREPROCESSOR.is_expression_true */
extern T1 T161f8(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.template_expander */
extern T0* T161f4(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.string_ */
extern T0* T161f9(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.is_valid_expression */
extern T1 T161f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.uc_unless */
extern unsigned char ge1155os5020;
extern T0* ge1155ov5020;
extern T0* T161f6(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.uc_if */
extern unsigned char ge1155os5019;
extern T0* ge1155ov5019;
extern T0* T161f5(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.expand_attribute_variables */
extern void T161f12(GE_context* ac, T0* C, T0* a1);
extern T1 T161f12ot1(T0* a1, T0** a2);
/* XM_ATTRIBUTE.set_value */
extern void T405f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_VALIDATOR.validate_library_doc */
extern void T160f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_library */
extern void T160f33(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T160f33ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_library */
extern unsigned char ge1155os4993;
extern T0* ge1155ov4993;
extern T0* T160f4(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_library */
extern T0* T52f155(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.string_ */
extern T0* T52f21(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.make_with_variables */
extern T0* T52c261(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.make_with_variables_and_factory */
extern void T52f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM_PARSER.create_library_parser */
extern void T52f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.set_parsed_libraries */
extern void T167f251(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.make_with_variables_and_factory */
extern T0* T167c250(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.create_library_parser */
extern void T167f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EXPAT_PARSER_FACTORY.new_expat_parser */
extern T0* T163f2(GE_context* ac, T0* C);
/* XM_EXPAT_PARSER_FACTORY.is_expat_parser_available */
extern T1 T163f1(GE_context* ac, T0* C);
/* XM_EXPAT_PARSER_FACTORY.default_create */
extern T0* T163c3(GE_context* ac);
/* ET_XACE_VALIDATOR.make */
extern T0* T160c30(GE_context* ac, T0* a1);
/* ET_XACE_PREPROCESSOR.make */
extern T0* T161c10(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].set_key_equality_tester */
extern void T162f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_map */
extern T0* T162c35(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_with_equality_testers */
extern void T162f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_sparse_container */
extern void T162f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].set_internal_cursor */
extern void T162f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].new_cursor */
extern T0* T162f29(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8].make */
extern T0* T565c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_slots */
extern void T162f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_clashes */
extern void T162f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_key_storage */
extern void T162f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_item_storage */
extern void T162f46(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG].make */
extern T0* T567f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].make_empty */
extern T0* T566c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG].default_create */
extern T0* T567c3(GE_context* ac);
/* ET_XACE_AST_FACTORY.make */
extern T0* T152c9(GE_context* ac);
/* DS_LINKED_LIST_CURSOR [STRING_8].forth */
extern void T173f10(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_forth */
extern void T143f24(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].add_traversing_cursor */
extern void T143f25(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T173f12(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T143f26(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set */
extern void T173f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* UC_UTF8_STRING.index_of */
extern T6 T846f24(GE_context* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.index_of_item_code */
extern T6 T846f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.index_of */
extern T6 T17f28(GE_context* ac, T0* C, T2 a1, T6 a2);
/* DS_LINKED_LIST_CURSOR [STRING_8].item */
extern T0* T173f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].start */
extern void T173f9(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_start */
extern void T143f23(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].cursor_off */
extern T1 T143f13(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].off */
extern T1 T173f7(GE_context* ac, T0* C);
/* ST_SPLITTER.split */
extern T0* T55f6(GE_context* ac, T0* C, T0* a1);
/* ST_SPLITTER.do_split */
extern T0* T55f8(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ST_SPLITTER.string_ */
extern T0* T55f5(GE_context* ac, T0* C);
/* ST_SPLITTER.make */
extern T0* T55c9(GE_context* ac);
/* ST_SPLITTER.set_separators */
extern void T55f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].put */
extern void T174f39(GE_context* ac, T0* C, T6 a1);
/* GEC.string_equality_tester */
extern T0* T22f21(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.make_standard */
extern T0* T53c8(GE_context* ac);
/* ET_XACE_DEFAULT_ERROR_HANDLER.std */
extern T0* T53f6(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.same_string */
extern T1 T34f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.elks_same_string */
extern T1 T34f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.same_unicode_string */
extern T1 T846f18(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.unicode_substring_index */
extern T6 T846f42(GE_context* ac, T0* C, T0* a1, T6 a2);
/* GEC.string_ */
extern T0* T22f18(GE_context* ac, T0* C);
/* INTEGER_32.is_greater */
extern T1 T6f1(GE_context* ac, T6* C, T6 a1);
/* KL_TEXT_INPUT_FILE.is_open_read */
extern T1 T29f14(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_read */
extern T1 T29f27(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T29f47(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_closed */
extern T1 T29f17(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_open_read */
extern void T29f52(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.default_pointer */
extern T14 T29f21(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T29f52p1(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_open */
extern T14 T29f24(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.old_is_readable */
extern T1 T29f16(GE_context* ac, T0* C);
/* FILE_INFO.is_readable */
extern T1 T129f8(GE_context* ac, T0* C);
/* FILE_INFO.file_eaccess */
extern T1 T129f6(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.make */
extern void T29f45(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern T0* T29c45(GE_context* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern void T29f45p1(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.old_make */
extern void T29f50(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make_with_name */
extern void T29f55(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.set_name */
extern void T29f58(GE_context* ac, T0* C, T0* a1);
/* GEC.parse_arguments */
extern void T22f43(GE_context* ac, T0* C);
/* AP_ERROR.make_invalid_parameter_error */
extern T0* T40c21(GE_context* ac, T0* a1, T0* a2);
/* AP_INTEGER_OPTION.parameter */
extern T6 T45f12(GE_context* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].last */
extern T6 T150f7(GE_context* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].is_empty */
extern T1 T150f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].first */
extern T0* T136f11(GE_context* ac, T0* C);
/* UT_ERROR_HANDLER.report_info_message */
extern void T32f8(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_usage_instruction */
extern T0* T50f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].forth */
extern void T138f17(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_forth */
extern void T138f21(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_position */
extern void T547f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].add_traversing_cursor */
extern void T138f22(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_next_cursor */
extern void T547f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].remove_traversing_cursor */
extern void T138f23(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.alternative_usage_instruction */
extern T0* T50f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ST_WORD_WRAPPER.wrapped_string */
extern T0* T151f5(GE_context* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.canonify_whitespace */
extern void T151f12(GE_context* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.is_space */
extern T1 T151f8(GE_context* ac, T0* C, T2 a1);
/* ST_WORD_WRAPPER.string_ */
extern T0* T151f4(GE_context* ac, T0* C);
/* ST_WORD_WRAPPER.set_new_line_indentation */
extern void T151f10(GE_context* ac, T0* C, T6 a1);
/* AP_DISPLAY_HELP_FLAG.wrapper */
extern unsigned char ge7os4935;
extern T0* ge7ov4935;
extern T0* T50f25(GE_context* ac, T0* C);
/* ST_WORD_WRAPPER.set_maximum_text_width */
extern void T151f11(GE_context* ac, T0* C, T6 a1);
/* ST_WORD_WRAPPER.make */
extern T0* T151c9(GE_context* ac);
/* KL_UNIX_FILE_SYSTEM.basename */
extern T0* T121f2(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.basename */
extern T0* T120f2(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.arguments */
extern T0* T50f17(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.file_system */
extern T0* T50f16(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.unix_file_system */
extern T0* T50f11(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.windows_file_system */
extern T0* T50f10(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.operating_system */
extern T0* T50f9(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.forth */
extern void T39f17(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_forth */
extern void T39f19(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.add_traversing_cursor */
extern void T39f20(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T140f9(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.remove_traversing_cursor */
extern void T39f21(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set */
extern void T140f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* AP_ALTERNATIVE_OPTIONS_LIST.item_for_iteration */
extern T0* T39f6(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_item */
extern T0* T39f8(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.after */
extern T1 T39f5(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_after */
extern T1 T39f7(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.start */
extern void T39f16(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_start */
extern void T39f18(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_off */
extern T1 T39f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].off */
extern T1 T140f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item_for_iteration */
extern T0* T138f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_item */
extern T0* T138f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T138f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_after */
extern T1 T138f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T547f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].start */
extern void T138f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_start */
extern void T138f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_after */
extern void T547f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].is_empty */
extern T1 T138f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].off */
extern T1 T547f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].before */
extern T1 T547f6(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.usage_instruction */
extern T0* T50f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].forth */
extern void T137f20(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_forth */
extern void T137f24(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_position */
extern void T543f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].add_traversing_cursor */
extern void T137f25(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T543f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].remove_traversing_cursor */
extern void T137f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].item_for_iteration */
extern T0* T137f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_item */
extern T0* T137f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].after */
extern T1 T137f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_after */
extern T1 T137f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].after */
extern T1 T543f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].start */
extern void T137f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_start */
extern void T137f23(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_after */
extern void T543f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].is_empty */
extern T1 T137f15(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].off */
extern T1 T543f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].before */
extern T1 T543f6(GE_context* ac, T0* C);
/* GEC.report_version_number */
extern void T22f49(GE_context* ac, T0* C);
/* UT_ERROR_HANDLER.report_info */
extern void T32f10(GE_context* ac, T0* C, T0* a1);
/* UT_VERSION_NUMBER.make */
extern T0* T87c8(GE_context* ac, T0* a1);
/* AP_PARSER.parse_arguments */
extern void T38f27(GE_context* ac, T0* C);
/* AP_PARSER.parse_list */
extern void T38f29(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.final_error_action */
extern void T38f33(GE_context* ac, T0* C);
/* AP_PARSER.exceptions */
extern unsigned char ge295os1976;
extern T0* ge295ov1976;
extern T0* T38f20(GE_context* ac, T0* C);
/* KL_EXCEPTIONS.default_create */
extern T0* T37c1(GE_context* ac);
/* AP_ERROR_HANDLER.report_error_message */
extern void T139f10(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR_HANDLER.report_error_message */
extern void T139f10p1(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.check_options_after_parsing */
extern void T38f32(GE_context* ac, T0* C);
/* AP_ERROR.make_surplus_option_error */
extern T0* T40c23(GE_context* ac, T0* a1);
/* AP_ERROR_HANDLER.report_error */
extern void T139f9(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR_HANDLER.message */
extern T0* T139f6(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_missing_option_error */
extern T0* T40c22(GE_context* ac, T0* a1);
/* AP_PARSER.parse_argument */
extern void T38f31(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.parse_short */
extern void T38f35(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_missing_parameter_error */
extern T0* T40c25(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].off */
extern T1 T136f15(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_off */
extern T1 T136f13(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_unknown_option_error */
extern T0* T40c24(GE_context* ac, T0* a1);
/* CHARACTER_8.out */
extern T0* T2f1(GE_context* ac, T2* C);
/* AP_PARSER.parse_long */
extern void T38f34(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_unnecessary_parameter_error */
extern T0* T40c26(GE_context* ac, T0* a1, T0* a2);
/* AP_PARSER.string_ */
extern T0* T38f22(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].forth */
extern void T136f25(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].item_for_iteration */
extern T0* T136f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].after */
extern T1 T136f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_after */
extern T1 T136f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].start */
extern void T136f24(GE_context* ac, T0* C);
/* AP_PARSER.reset_parser */
extern void T38f30(GE_context* ac, T0* C);
/* AP_PARSER.all_options */
extern T0* T38f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].has */
extern T1 T137f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].make */
extern T0* T137c17(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].set_internal_cursor */
extern void T137f21(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_cursor */
extern T0* T137f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].make */
extern T0* T543c8(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].make */
extern T0* T546f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [AP_OPTION].make_empty */
extern T0* T545c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].default_create */
extern T0* T546c3(GE_context* ac);
/* AP_ERROR_HANDLER.reset */
extern void T139f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].force */
extern void T136f23(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].put */
extern void T136f30(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_cursors_right */
extern void T136f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_right */
extern void T136f35(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].put_last */
extern void T136f34(GE_context* ac, T0* C, T0* a1);
/* KL_ARGUMENTS.argument_count */
extern T6 T30f4(GE_context* ac, T0* C);
/* AP_PARSER.arguments */
extern T0* T38f23(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].force_last */
extern void T138f15(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].force */
extern void T549f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].fill_with */
extern void T548f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].extend */
extern void T548f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern void T138f19(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T549f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T548f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_capacity */
extern T6 T138f12(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].extendible */
extern T1 T138f10(GE_context* ac, T0* C, T6 a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.make */
extern T0* T39c11(GE_context* ac, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.old_make */
extern void T39f14(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_internal_cursor */
extern void T39f15(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.new_cursor */
extern T0* T39f10(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].make */
extern T0* T140c7(GE_context* ac, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_parameters_description */
extern void T39f13(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_introduction_option */
extern void T39f12(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.make */
extern T0* T41c19(GE_context* ac, T2 a1, T0* a2);
/* AP_FLAG.set_long_form */
extern void T41f21(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.set_short_form */
extern void T41f23(GE_context* ac, T0* C, T2 a1);
/* AP_FLAG.initialize */
extern void T41f20(GE_context* ac, T0* C);
/* AP_STRING_OPTION.set_parameter_description */
extern void T46f25(GE_context* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.set_description */
extern void T46f24(GE_context* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.make_with_long_form */
extern T0* T46c23(GE_context* ac, T0* a1);
/* AP_STRING_OPTION.set_long_form */
extern void T46f27(GE_context* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.initialize */
extern void T46f26(GE_context* ac, T0* C);
/* AP_STRING_OPTION.initialize */
extern void T46f26p1(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.set_parameter_description */
extern void T45f25(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.set_description */
extern void T45f24(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.make_with_long_form */
extern T0* T45c23(GE_context* ac, T0* a1);
/* AP_INTEGER_OPTION.set_long_form */
extern void T45f27(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.initialize */
extern void T45f26(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T45f26p1(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T45f26p0(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.set_parameter_description */
extern void T44f28(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.set_description */
extern void T44f27(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.make_with_long_form */
extern T0* T44c26(GE_context* ac, T0* a1);
/* AP_BOOLEAN_OPTION.set_long_form */
extern void T44f30(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.initialize */
extern void T44f29(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T44f29p1(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T44f29p0(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.set_parameter_description */
extern void T43f28(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.extend */
extern void T43f27(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.update_parameter_description */
extern void T43f32(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].forth */
extern void T143f21(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].is_last */
extern T1 T143f10(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_is_last */
extern T1 T143f8(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].item_for_iteration */
extern T0* T143f9(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_item */
extern T0* T143f7(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].after */
extern T1 T143f12(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_after */
extern T1 T143f6(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].start */
extern void T143f20(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.set_description */
extern void T43f26(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.make_with_long_form */
extern T0* T43c25(GE_context* ac, T0* a1);
/* AP_ENUMERATION_OPTION.set_long_form */
extern void T43f30(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.initialize */
extern void T43f29(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].set_equality_tester */
extern void T143f19(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.string_equality_tester */
extern T0* T43f14(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T43f29p1(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T43f29p0(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].force_last */
extern void T137f18(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].force */
extern void T546f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [AP_OPTION].fill_with */
extern void T545f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].extend */
extern void T545f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].resize */
extern void T137f22(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].aliased_resized_area */
extern T0* T546f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_OPTION].aliased_resized_area */
extern T0* T545f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_capacity */
extern T6 T137f14(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].extendible */
extern T1 T137f13(GE_context* ac, T0* C, T6 a1);
/* AP_FLAG.set_description */
extern void T41f18(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.make_with_long_form */
extern T0* T41c17(GE_context* ac, T0* a1);
/* AP_PARSER.set_parameters_description */
extern void T38f26(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.set_application_description */
extern void T38f25(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.make */
extern T0* T38c24(GE_context* ac);
/* AP_DISPLAY_HELP_FLAG.set_description */
extern void T50f36(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.make */
extern T0* T50c35(GE_context* ac, T2 a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.set_long_form */
extern void T50f39(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.set_short_form */
extern void T50f38(GE_context* ac, T0* C, T2 a1);
/* AP_DISPLAY_HELP_FLAG.initialize */
extern void T50f37(GE_context* ac, T0* C);
/* AP_PARSER.make_empty */
extern void T38f28(GE_context* ac, T0* C);
/* AP_ERROR_HANDLER.make_standard */
extern T0* T139c7(GE_context* ac);
/* AP_ERROR_HANDLER.std */
extern T0* T139f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T138c14(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].set_internal_cursor */
extern void T138f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_cursor */
extern T0* T138f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T547c8(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T549f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make_empty */
extern T0* T548c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].default_create */
extern T0* T549c3(GE_context* ac);
/* UT_ERROR_HANDLER.make_standard */
extern T0* T32c7(GE_context* ac);
/* UT_ERROR_HANDLER.std */
extern T0* T32f4(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.set_ise_library_variable */
extern void T31f7(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.execution_environment */
extern T0* T31f3(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.ise_eiffel_value */
extern T0* T31f2(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.ise_library_value */
extern T0* T31f1(GE_context* ac, T0* C);
/* GEC.ise_variables */
extern unsigned char ge1167os2018;
extern T0* ge1167ov2018;
extern T0* T22f20(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.default_create */
extern T0* T31c6(GE_context* ac);
/* KL_ARGUMENTS.set_program_name */
extern void T30f6(GE_context* ac, T0* C, T0* a1);
/* GEC.arguments */
extern T0* T22f24(GE_context* ac, T0* C);
/* KL_EXCEPTIONS.die */
extern void T37f2(GE_context* ac, T0* C, T6 a1);
/* GEC.exceptions */
extern T0* T22f19(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.set_exception_data */
extern void T19f15(GE_context* ac, T0* C, T6 a1, T1 a2, T6 a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T6 a11, T1 a12);
/* ISE_EXCEPTION_MANAGER.exception_from_data */
extern T0* T19f7(GE_context* ac, T0* C);
extern T1 T19f7ot1(T0* a1, T0** a2);
extern T1 T19f7ot2(T0* a1, T0** a2);
extern T1 T19f7ot3(T0* a1, T0** a2);
extern T1 T19f7ot4(T0* a1, T0** a2);
extern T1 T19f7ot5(T0* a1, T0** a2);
extern T1 T19f7ot6(T0* a1, T0** a2);
extern T1 T19f7ot7(T0* a1, T0** a2);
/* COM_FAILURE.set_exception_information */
extern void T99f15(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.ccom_hresult_to_string */
extern T0* T99f11(GE_context* ac, T0* C, T6 a1);
/* INTEGER_32.to_hex_string */
extern T0* T6f24(GE_context* ac, T6* C);
/* COM_FAILURE.set_hresult_code */
extern void T99f14(GE_context* ac, T0* C, T6 a1);
/* OPERATING_SYSTEM_FAILURE.set_error_code */
extern void T98f9(GE_context* ac, T0* C, T6 a1);
/* IO_FAILURE.set_error_code */
extern void T97f11(GE_context* ac, T0* C, T6 a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_signal_code */
extern void T96f9(GE_context* ac, T0* C, T6 a1);
/* INVARIANT_VIOLATION.set_is_entry */
extern void T95f9(GE_context* ac, T0* C, T1 a1);
/* ROUTINE_FAILURE.set_class_name */
extern void T90f10(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_routine_name */
extern void T90f9(GE_context* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_from_code */
extern T0* T19f10(GE_context* ac, T0* C, T6 a1);
/* SERIALIZATION_FAILURE.default_create */
extern T0* T119c6(GE_context* ac);
/* OLD_VIOLATION.default_create */
extern T0* T92c6(GE_context* ac);
/* COM_FAILURE.default_create */
extern T0* T99c12(GE_context* ac);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.default_create */
extern T0* T118c6(GE_context* ac);
/* MISMATCH_FAILURE.default_create */
extern T0* T116c6(GE_context* ac);
/* OPERATING_SYSTEM_FAILURE.default_create */
extern T0* T98c7(GE_context* ac);
/* IO_FAILURE.set_code */
extern void T97f9(GE_context* ac, T0* C, T6 a1);
/* IO_FAILURE.default_create */
extern T0* T97c8(GE_context* ac);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.default_create */
extern T0* T115c6(GE_context* ac);
/* VOID_ASSIGNED_TO_EXPANDED.default_create */
extern T0* T114c6(GE_context* ac);
/* EXTERNAL_FAILURE.default_create */
extern T0* T113c6(GE_context* ac);
/* CREATE_ON_DEFERRED.default_create */
extern T0* T112c6(GE_context* ac);
/* RESUMPTION_FAILURE.default_create */
extern T0* T111c6(GE_context* ac);
/* RESCUE_FAILURE.default_create */
extern T0* T110c6(GE_context* ac);
/* EIFFEL_RUNTIME_PANIC.set_code */
extern void T100f9(GE_context* ac, T0* C, T6 a1);
/* EIFFEL_RUNTIME_PANIC.code */
extern T6 T100f7(GE_context* ac, T0* C);
/* EIFFEL_RUNTIME_PANIC.default_create */
extern T0* T100c8(GE_context* ac);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.default_create */
extern T0* T96c7(GE_context* ac);
/* LOOP_INVARIANT_VIOLATION.default_create */
extern T0* T109c6(GE_context* ac);
/* VARIANT_VIOLATION.default_create */
extern T0* T108c6(GE_context* ac);
/* BAD_INSPECT_VALUE.default_create */
extern T0* T107c6(GE_context* ac);
/* ROUTINE_FAILURE.default_create */
extern T0* T90c8(GE_context* ac);
/* CHECK_VIOLATION.default_create */
extern T0* T106c6(GE_context* ac);
/* INVARIANT_VIOLATION.default_create */
extern T0* T95c7(GE_context* ac);
/* FLOATING_POINT_FAILURE.default_create */
extern T0* T105c6(GE_context* ac);
/* POSTCONDITION_VIOLATION.default_create */
extern T0* T104c6(GE_context* ac);
/* PRECONDITION_VIOLATION.default_create */
extern T0* T103c6(GE_context* ac);
/* NO_MORE_MEMORY.set_code */
extern void T94f10(GE_context* ac, T0* C, T6 a1);
/* NO_MORE_MEMORY.code */
extern T6 T94f7(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.no_memory_exception_object_cell */
extern unsigned char ge1694os1922;
extern T0* ge1694ov1922;
extern T0* T19f6(GE_context* ac, T0* C);
/* CELL [NO_MORE_MEMORY].put */
extern T0* T26c2(GE_context* ac, T0* a1);
/* NO_MORE_MEMORY.default_create */
extern T0* T94c8(GE_context* ac);
/* VOID_TARGET.default_create */
extern T0* T88c6(GE_context* ac);
/* ISE_EXCEPTION_MANAGER.exception_data */
extern T0* T19f9(GE_context* ac, T0* C);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].put */
extern void T24f2(GE_context* ac, T0* C, T0* a1);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].put */
extern T0* T24c2(GE_context* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_data_cell */
extern unsigned char ge1694os1920;
extern T0* ge1694ov1920;
extern T0* T19f4(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.init_exception_manager */
extern void T19f14(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.unraisable_exceptions */
extern unsigned char ge1694os1918;
extern T0* ge1694ov1918;
extern T0* T19f3(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].force */
extern void T23f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].position */
extern T6 T23f22(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].deleted_position */
extern T6 T23f21(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].add_space */
extern void T23f38(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].accommodate */
extern void T23f39(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_indexes_map */
extern void T23f43(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_deleted_marks */
extern void T23f42(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_keys */
extern void T23f41(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_content */
extern void T23f40(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].put */
extern void T23f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_conflict */
extern void T23f46(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].found */
extern T1 T23f31(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].occupied */
extern T1 T23f29(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].empty_duplicate */
extern T0* T23f28(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].compare_objects */
extern void T23f45(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].soon_full */
extern T1 T23f20(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].not_found */
extern T1 T23f19(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].internal_search */
extern void T23f37(GE_context* ac, T0* C, T6 a1);
/* ISE_EXCEPTION_MANAGER.unignorable_exceptions */
extern unsigned char ge1694os1917;
extern T0* ge1694ov1917;
extern T0* T19f2(GE_context* ac, T0* C);
/* KL_DIRECTORY.dispose */
extern void T329f30(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.dispose */
extern void T304f28(GE_context* ac, T0* C);
/* MANAGED_POINTER.dispose */
extern void T128f10(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.dispose */
extern void T29f46(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_close */
extern void T29f51(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_close */
extern void T29f56(GE_context* ac, T0* C, T14 a1);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].record */
extern void T1825f5(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T1753f12(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T1753f12p1(GE_context* ac, T0* C, T6 a1);
/* DS_BILINKABLE [INTEGER_32].forget_left */
extern void T1826f8(GE_context* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].forget_right */
extern void T1826f7(GE_context* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].put_right */
extern void T1826f6(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].attach_left */
extern void T1826f11(GE_context* ac, T0* C, T0* a1);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].item */
extern T0* T1828f4(GE_context* ac, T0* C, T6 a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].record */
extern void T1823f4(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].record */
extern void T1821f5(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.add */
extern void T1753f11(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.item */
extern T6 T1730f14(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.upper */
extern T6 T1753f6(GE_context* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.lower */
extern T6 T1753f7(GE_context* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.add */
extern void T1753f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T1422f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T291f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T290f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T287f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_OR_ELSE_OPERATOR.reset */
extern void T1262f34(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.reset */
extern void T1261f34(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.reset */
extern void T943f73(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.reset */
extern void T930f55(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.reset */
extern void T924f53(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].remove */
extern void T1441f15(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].keep_head */
extern void T1608f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].set_count */
extern void T1608f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_left */
extern void T1441f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_cursors_left */
extern void T1441f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_position */
extern void T1610f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].remove_last */
extern void T1441f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_last_cursors_after */
extern void T1441f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_next_cursor */
extern void T1610f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_after */
extern void T1610f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].remove */
extern void T872f15(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_CLUSTER].keep_head */
extern void T1465f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_CLUSTER].set_count */
extern void T1465f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].move_left */
extern void T872f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].move_cursors_left */
extern void T872f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].set_position */
extern void T1467f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].remove_last */
extern void T872f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].move_last_cursors_after */
extern void T872f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].set_next_cursor */
extern void T1467f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].set_after */
extern void T1467f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].remove */
extern void T631f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].move_left */
extern void T631f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].move_cursors_left */
extern void T631f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].set_position */
extern void T1372f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].remove_last */
extern void T631f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].move_last_cursors_after */
extern void T631f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].set_next_cursor */
extern void T1372f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].set_after */
extern void T1372f7(GE_context* ac, T0* C);
/* XM_CHARACTER_DATA.node_set_parent */
extern void T1410f4(GE_context* ac, T0* C, T0* a1);
/* XM_ATTRIBUTE.node_set_parent */
extern void T405f6(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T1422f8(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T1422f8p1(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.reset */
extern void T286f16(GE_context* ac, T0* C);
extern T1 T286f16ot1(T0* a1, T0** a2);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T1254f12(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.type */
extern T0* T1254f6(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T1254f12p1(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.name */
extern T0* T1254f7(GE_context* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.reset */
extern void T1252f13(GE_context* ac, T0* C);
/* ET_CREATE_INSTRUCTION.reset */
extern void T1250f14(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.reset */
extern void T326f6(GE_context* ac, T0* C);
/* ET_CREATE_INSTRUCTION.type */
extern T0* T1250f6(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.reset */
extern void T1249f14(GE_context* ac, T0* C);
/* ET_LOOP_INSTRUCTION.reset */
extern void T1247f15(GE_context* ac, T0* C);
/* ET_LOOP_INSTRUCTION.until_expression */
extern T0* T1247f9(GE_context* ac, T0* C);
/* ET_VARIANT.reset */
extern void T1181f7(GE_context* ac, T0* C);
/* ET_LOOP_INVARIANTS.reset */
extern void T1133f11(GE_context* ac, T0* C);
/* ET_COMPOUND.reset */
extern void T331f13(GE_context* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.reset */
extern void T1246f7(GE_context* ac, T0* C);
/* ET_ASSIGNMENT.reset */
extern void T1245f7(GE_context* ac, T0* C);
extern T1 T1245f7ot1(T0* a1, T0** a2);
/* ET_ASSIGNER_INSTRUCTION.reset */
extern void T1244f17(GE_context* ac, T0* C);
extern T1 T1244f17ot1(T0* a1, T0** a2);
/* ET_ASSIGNER_INSTRUCTION.dummy_name */
extern unsigned char ge737os32115;
extern T0* ge737ov32115;
extern T0* T1244f6(GE_context* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.reset */
extern void T1112f10(GE_context* ac, T0* C);
/* ET_WHEN_PART_LIST.reset */
extern void T1187f7(GE_context* ac, T0* C);
/* ET_WHEN_PART.reset */
extern void T1184f4(GE_context* ac, T0* C);
/* ET_CHOICE_LIST.reset */
extern void T1003f11(GE_context* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.expression */
extern T0* T1112f6(GE_context* ac, T0* C);
/* ET_IF_INSTRUCTION.reset */
extern void T1094f12(GE_context* ac, T0* C);
/* ET_ELSEIF_PART_LIST.reset */
extern void T1052f7(GE_context* ac, T0* C);
/* ET_ELSEIF_PART.reset */
extern void T1049f6(GE_context* ac, T0* C);
/* ET_ELSEIF_PART.expression */
extern T0* T1049f3(GE_context* ac, T0* C);
/* ET_IF_INSTRUCTION.expression */
extern T0* T1094f7(GE_context* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.reset */
extern void T1046f7(GE_context* ac, T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T991f15(GE_context* ac, T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T991f15p1(GE_context* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset */
extern void T960f25(GE_context* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset_unfolded_form */
extern void T960f26(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.reset */
extern void T940f18(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T287f15(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T287f15p1(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T287f15p0(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.process */
extern void T1422f7(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.process */
extern void T1254f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.process */
extern void T1252f12(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.process */
extern void T1250f13(GE_context* ac, T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.process */
extern void T1249f13(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.process */
extern void T1247f14(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT_ATTEMPT.process */
extern void T1246f6(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT.process */
extern void T1245f6(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.process */
extern void T1244f16(GE_context* ac, T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.process */
extern void T1112f9(GE_context* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.process */
extern void T1094f11(GE_context* ac, T0* C, T0* a1);
/* ET_DEBUG_INSTRUCTION.process */
extern void T1046f6(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.process */
extern void T991f14(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.process */
extern void T960f24(GE_context* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.process */
extern void T940f17(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.process */
extern void T287f11(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_RANGE.reset */
extern void T1251f8(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.set_sign */
extern void T1202f66(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_sign */
extern void T1201f66(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_sign */
extern void T1200f66(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_sign */
extern void T1199f66(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_sign */
extern void T1198f66(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_type */
extern void T1202f71(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_type */
extern void T1201f71(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_type */
extern void T1200f71(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_type */
extern void T1199f71(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_type */
extern void T1198f71(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_cast_type */
extern void T1202f67(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_cast_type */
extern void T1201f67(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_cast_type */
extern void T1200f67(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_cast_type */
extern void T1199f67(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_cast_type */
extern void T1198f67(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.set_type */
extern void T1209f43(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_type */
extern void T1208f43(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_type */
extern void T1195f44(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.set_cast_type */
extern void T1209f39(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_cast_type */
extern void T1208f39(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_cast_type */
extern void T1195f40(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.set_prefix */
extern void T1236f47(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.tokens */
extern T0* T1236f12(GE_context* ac, T0* C);
/* ET_INFIX_NAME.set_prefix */
extern void T1234f105(GE_context* ac, T0* C);
/* ET_INFIX_NAME.tokens */
extern T0* T1234f41(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.set_prefix */
extern void T1233f73(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.set_prefix */
extern void T1232f91(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.set_prefix */
extern void T858f86(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.tokens */
extern T0* T858f5(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.set_prefix */
extern void T832f73(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.tokens */
extern T0* T832f17(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.set_infix */
extern void T1236f46(GE_context* ac, T0* C);
/* ET_INFIX_NAME.set_infix */
extern void T1234f104(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.set_infix */
extern void T1233f72(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.tokens */
extern T0* T1233f32(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.set_infix */
extern void T1232f90(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.tokens */
extern T0* T1232f27(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.set_infix */
extern void T858f85(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.set_infix */
extern void T832f72(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.reset */
extern void T1236f48(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.reset */
extern void T858f87(GE_context* ac, T0* C);
/* XM_PROCESSING_INSTRUCTION.node_set_parent */
extern void T1409f6(GE_context* ac, T0* C, T0* a1);
/* XM_COMMENT.node_set_parent */
extern void T1408f5(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.node_set_parent */
extern void T154f24(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1273f35(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1272f37(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1271f36(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1270f36(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1269f38(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1268f37(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T1273f36(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T1272f38(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T1271f37(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_across_components */
extern void T1270f37(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_across_components */
extern void T1269f39(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_across_components */
extern void T1268f38(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T1852f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_type */
extern void T1852f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T237f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T79f532(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_actual_argument_dynamic_types */
extern void T79f184(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.error_handler */
extern T0* T237f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_fatal_error */
extern void T237f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T1851f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_type */
extern void T1851f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T830f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T830f18ot1(T0* a1, T0** a2);
extern T1 T830f18ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T830f18p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T830f18p1ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T532f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TARGET_LIST.item */
extern T0* T1335f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T532f17p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T532f17p1ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_type_from_type_set */
extern void T334f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FUNCTION_TYPE.put_type_from_type_set */
extern void T333f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.put_type_from_type_set */
extern void T322f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_from_type_set */
extern void T317f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_tuple_label */
extern void T317f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T237f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T79f528(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f528ot1(T0* a1, T0** a2);
extern T1 T79f528ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_argument_dynamic_types */
extern void T79f531(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_feature */
extern void T317f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T317f15ot1(T0* a1, T0** a2);
extern T1 T317f15ot2(T0* a1, T0** a2);
extern T1 T317f15ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type */
extern void T830f20(GE_context* ac, T0* C, T0* a1);
extern T1 T830f20ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PRECURSOR.is_builtin_function_item */
extern T1 T309f47(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.builtin_function_feature */
extern T6 T309f48(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.is_builtin_function_item */
extern T1 T247f45(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.builtin_function_feature */
extern T6 T247f46(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_routine_call */
extern T1 T309f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.builtin_procedure_feature */
extern T6 T309f49(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.is_builtin_routine_call */
extern T1 T247f44(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.builtin_procedure_feature */
extern T6 T247f47(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_from_type_set */
extern void T313f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_tuple_label */
extern void T313f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T237f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T79f527(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f527ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_result_dynamic_types */
extern void T79f530(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T313f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T313f16p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T313f16p1ot1(T0* a1, T0** a2);
extern T1 T313f16p1ot2(T0* a1, T0** a2);
extern T1 T313f16p1ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_type_from_type_set */
extern void T305f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type_from_type_set */
extern void T273f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TYPE.put_type_from_type_set */
extern void T238f80(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T1852f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T1851f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.propagate_can_be_void */
extern void T830f19(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.propagate_can_be_void */
extern void T317f13(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.propagate_can_be_void */
extern void T313f15(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.propagate_can_be_void */
extern void T273f21(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_stream */
extern void T608f295(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T608f302(GE_context* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.name */
extern T0* T204f16(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T608f302p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.new_file_buffer */
extern T0* T608f73(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_stream */
extern void T606f202(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T606f211(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T606f211p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.new_file_buffer */
extern T0* T606f55(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_stream */
extern void T605f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T605f298(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T605f298p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.new_file_buffer */
extern T0* T605f71(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_stream */
extern void T568f200(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T568f208(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T568f208p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.new_file_buffer */
extern T0* T568f46(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T608f296(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T608f296p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T608f296p0(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_action */
extern void T608f306(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.from_hexadecimal */
extern void T1343f10(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.hexadecimal_to_integer */
extern T6 T34f17(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_CHARACTER_ENTITY.string_ */
extern T0* T1343f7(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.to_utf8 */
extern T0* T1343f3(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.utf8 */
extern T0* T1343f6(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_ascii */
extern T1 T1343f2(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_valid */
extern T1 T1343f5(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_code */
extern T1 T771f24(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.unicode */
extern T0* T1343f4(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.from_decimal */
extern void T1343f9(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.has_normalized_newline */
extern T1 T608f203(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_substring */
extern T0* T608f183(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_PE_ENTITY_DEF.text_count */
extern T6 T608f182(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.system_literal_text */
extern T0* T608f164(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_item */
extern T2 T608f209(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T608f123(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern unsigned char ge1294os28356;
extern T0* ge1294ov28356;
extern T0* T608f123p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_line_column */
extern void T608f310(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text */
extern T0* T608f107(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.pop_start_condition */
extern void T608f309(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition */
extern void T608f307(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_last_token */
extern void T608f308(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_eof_action */
extern void T608f305(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.wrap */
extern T1 T608f101(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_refill_input_buffer */
extern void T608f304(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_null_trans_state */
extern T6 T608f100(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_previous_state */
extern T6 T608f99(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.terminate */
extern void T608f303(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T606f203(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T606f203p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_action */
extern void T606f217(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.has_normalized_newline */
extern T1 T606f183(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_substring */
extern T0* T606f163(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER_DTD.text_count */
extern T6 T606f162(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.system_literal_text */
extern T0* T606f144(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_item */
extern T2 T606f197(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.normalized_newline */
extern T0* T606f106(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_line_column */
extern void T606f223(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text */
extern T0* T606f80(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.pop_start_condition */
extern void T606f222(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition */
extern void T606f218(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_eof_action */
extern void T606f216(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.wrap */
extern T1 T606f68(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_refill_input_buffer */
extern void T606f215(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_null_trans_state */
extern T6 T606f67(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_previous_state */
extern T6 T606f66(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.fatal_error */
extern void T606f214(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.terminate */
extern void T606f213(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_last_token */
extern void T606f212(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T605f292(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T605f292p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_action */
extern void T605f301(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.has_normalized_newline */
extern T1 T605f200(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_substring */
extern T0* T605f180(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_ENTITY_DEF.text_count */
extern T6 T605f179(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.system_literal_text */
extern T0* T605f161(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_item */
extern T2 T605f207(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T605f120(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T605f120p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_line_column */
extern void T605f306(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text */
extern T0* T605f104(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.pop_start_condition */
extern void T605f305(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition */
extern void T605f302(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.set_last_token */
extern void T605f304(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_eof_action */
extern void T605f300(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.terminate */
extern void T605f303(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.wrap */
extern T1 T605f98(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_refill_input_buffer */
extern void T605f299(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_null_trans_state */
extern T6 T605f97(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_previous_state */
extern T6 T605f96(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.read_token */
extern void T568f201(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_execute_action */
extern void T568f212(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.has_normalized_newline */
extern T1 T568f181(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.text_substring */
extern T0* T568f161(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER.text_count */
extern T6 T568f160(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.system_literal_text */
extern T0* T568f142(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.text_item */
extern T2 T568f195(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.normalized_newline */
extern T0* T568f101(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_set_line_column */
extern void T568f220(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.text */
extern T0* T568f75(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.pop_start_condition */
extern void T568f219(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.set_start_condition */
extern void T568f221(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.push_start_condition */
extern void T568f213(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.set_last_token */
extern void T568f218(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_execute_eof_action */
extern void T568f211(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.terminate */
extern void T568f217(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.wrap */
extern T1 T568f63(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_refill_input_buffer */
extern void T568f210(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_null_trans_state */
extern T6 T568f62(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_previous_state */
extern T6 T568f61(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.fatal_error */
extern void T568f209(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T608f298(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition_dtd_ignore */
extern void T606f205(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T605f294(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T568f203(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_encoding */
extern void T608f299(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.set_encoding */
extern void T847f31(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_encoding */
extern void T606f206(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_encoding */
extern void T605f295(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_encoding */
extern void T568f204(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_from_resolver */
extern void T608f300(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_from_resolver */
extern void T606f207(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_from_resolver */
extern void T605f296(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T568f205(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.close_input */
extern void T608f297(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.close_input */
extern void T606f204(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.close_input */
extern void T605f293(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.close_input */
extern void T568f202(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.reset */
extern void T1235f8(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.preparse */
extern void T447f162(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.preparse */
extern void T229f183(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.preparse */
extern void T216f169(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.preparse */
extern void T197f162(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.parse_all */
extern void T447f164(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.parse_all */
extern void T229f185(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.parse_all */
extern void T216f171(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.parse_all */
extern void T197f164(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_classes */
extern void T447f163(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_kernel_class */
extern void T447f177(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_imported_class */
extern void T470f87(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_imported_class */
extern T1 T470f31(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].has */
extern T1 T1317f13(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.is_declared_locally */
extern T1 T470f29(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T447f176(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.native_array_class_name */
extern unsigned char ge807os11378;
extern T0* ge807ov11378;
extern T0* T81f572(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.import_classes */
extern void T229f184(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.import_kernel_class */
extern void T229f198(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.import_kernel_classes */
extern void T229f197(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.import_classes */
extern void T216f170(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.import_kernel_class */
extern void T216f184(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T216f183(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.import_classes */
extern void T197f163(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.import_kernel_class */
extern void T197f177(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T197f176(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.consume */
extern void T447f161(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assembly */
extern void T788f6(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gaaaa_error */
extern void T36f238(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_assembly_error */
extern void T36f265(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.make_gaaaa */
extern T0* T1683c14(GE_context* ac, T0* a1);
/* ET_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T36f40(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gaaaa_error */
extern void T77f239(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_assembly_error */
extern void T77f266(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T77f41(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.error_handler */
extern T0* T788f2(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.consume */
extern void T229f199(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_gac_assembly */
extern void T788f7(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.consume */
extern void T216f185(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.consume */
extern void T197f161(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T447f165(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T447f165ac1(T0* a1);
/* ET_DOTNET_ASSEMBLIES.do_all */
extern void T446f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].item */
extern T0* T1313f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].force_last */
extern void T471f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].slots_put */
extern void T471f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_UNIVERSE].clashes_put */
extern void T471f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_UNIVERSE].slots_item */
extern T6 T471f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].hash_position */
extern T6 T471f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].resize */
extern void T471f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].clashes_resize */
extern void T471f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].special_integer_ */
extern T0* T471f33(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].key_storage_resize */
extern void T471f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_resize */
extern void T471f59(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].aliased_resized_area */
extern T0* T1321f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_UNIVERSE].aliased_resized_area */
extern T0* T1319f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].key_storage_item */
extern T0* T471f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_item */
extern T0* T471f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].clashes_item */
extern T6 T471f17(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].slots_resize */
extern void T471f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].new_modulus */
extern T6 T471f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].new_capacity */
extern T6 T471f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_put */
extern void T471f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].force */
extern void T1321f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_UNIVERSE].fill_with */
extern void T1319f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_UNIVERSE].extend */
extern void T1319f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].search_position */
extern void T471f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].key_equality_tester */
extern T0* T471f25(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].unset_found_item */
extern void T471f47(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].has */
extern T1 T471f24(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.add_universe_recursive */
extern void T229f186(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.add_universe_recursive */
extern T0* T229f186ac1(T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T216f172(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T216f172ac1(T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T197f165(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T197f165ac1(T0* a1);
/* ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T447f166(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T447f166ac1(T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].force_last */
extern void T445f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_put */
extern void T445f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_put */
extern void T445f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_item */
extern T6 T445f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].hash_position */
extern T6 T445f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].resize */
extern void T445f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_resize */
extern void T445f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].special_integer_ */
extern T0* T445f26(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_storage_resize */
extern void T445f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_resize */
extern void T445f45(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1310f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1311f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_storage_item */
extern T0* T445f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_item */
extern T0* T445f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_item */
extern T6 T445f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_resize */
extern void T445f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_modulus */
extern T6 T445f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T445f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_put */
extern void T445f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].force */
extern void T1310f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DOTNET_ASSEMBLY].fill_with */
extern void T1311f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_ASSEMBLY].extend */
extern void T1311f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].search_position */
extern void T445f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_equality_tester */
extern T0* T445f24(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].unset_found_item */
extern void T445f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].has */
extern T1 T445f29(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T229f187(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T229f187ac1(T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T216f173(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T216f173ac1(T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T197f166(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T197f166ac1(T0* a1);
/* ET_LIBRARY.dotnet_assemblies_do_if */
extern void T459f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_if */
extern void T196f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.dotnet_assemblies_do_if */
extern void T188f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.dotnet_assemblies_do_if */
extern void T70f310(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.dotnet_assemblies_do_if */
extern void T64f314(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.dotnet_assemblies_do_if */
extern void T61f318(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.clusters_do_explicit */
extern void T459f179(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTERS.do_explicit */
extern void T770f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.do_recursive */
extern void T799f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].item */
extern T0* T1419f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_LIBRARY.clusters_do_explicit */
extern void T188f204(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.clusters_do_explicit */
extern void T70f311(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.do_explicit */
extern void T213f11(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.do_recursive */
extern void T213f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.clusters_do_explicit */
extern void T64f315(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.clusters_do_explicit */
extern void T61f319(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.do_explicit */
extern void T411f15(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.do_recursive */
extern void T411f16(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_scm_read_mapping */
extern void T798f67(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_scm_read_mapping */
extern void T410f71(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_scm_read_mapping */
extern void T214f65(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_scm_write_mapping */
extern void T798f68(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_scm_write_mapping */
extern void T410f72(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_scm_write_mapping */
extern void T214f66(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_preparsed */
extern void T798f74(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_preparsed */
extern void T410f78(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_preparsed */
extern void T214f68(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.add_recursive_cluster */
extern void T798f75(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.new_recursive_cluster */
extern T0* T798f41(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_implicit */
extern void T798f79(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_file_rules */
extern void T798f78(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.string_ */
extern T0* T798f40(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.add_recursive_cluster */
extern void T410f79(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.add_subcluster */
extern void T410f82(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.new_recursive_cluster */
extern T0* T410f42(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_use_obsolete_syntax */
extern void T410f84(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_implicit */
extern void T410f83(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.string_ */
extern T0* T410f41(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.add_recursive_cluster */
extern void T214f69(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.new_recursive_cluster */
extern T0* T214f44(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_use_obsolete_syntax */
extern void T214f71(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_implicit */
extern void T214f70(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.name */
extern T0* T214f22(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.string_ */
extern T0* T214f39(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.set_provider_constraint */
extern void T798f72(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_provider_constraint */
extern void T799f12(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_provider_constraint */
extern void T410f80(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_provider_constraint */
extern void T411f18(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_provider_constraint */
extern void T214f63(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_provider_constraint */
extern void T213f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_dependant_constraint */
extern void T798f73(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_dependant_constraint */
extern void T799f13(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_dependant_constraint */
extern void T410f81(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_dependant_constraint */
extern void T411f19(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_dependant_constraint */
extern void T214f64(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_dependant_constraint */
extern void T213f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.process */
extern void T798f69(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.process */
extern void T410f73(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.process */
extern void T214f67(GE_context* ac, T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.reset */
extern void T1277f7(GE_context* ac, T0* C);
/* ET_TAGGED_ASSERTION.process */
extern void T1277f8(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_tagged_assertion */
extern void T1300f105(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_cast_type */
extern void T1197f38(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.set_cast_type */
extern void T1196f42(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_cast_type */
extern void T831f38(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_type */
extern void T1197f42(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.set_type */
extern void T1196f46(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_type */
extern void T831f41(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T1275f10(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.reset */
extern void T954f75(GE_context* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.process */
extern void T1275f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_typed_open_argument */
extern void T1300f104(GE_context* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.process */
extern void T954f76(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_question_mark_symbol */
extern void T1300f101(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.reset */
extern void T1591f6(GE_context* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.reset */
extern void T1274f9(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.process */
extern void T1591f7(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_implicit_current_target */
extern void T1300f99(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_OPEN_TARGET.process */
extern void T1274f10(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_open_target */
extern void T1300f103(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.set_index */
extern void T1855f25(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.set_index */
extern void T1854f24(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.set_index */
extern void T1853f20(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.set_index */
extern void T1790f6(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.set_index */
extern void T1716f17(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.set_index */
extern void T1591f8(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.set_index */
extern void T1275f12(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_OPEN_TARGET.set_index */
extern void T1274f11(GE_context* ac, T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.set_index */
extern void T954f77(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1273f39(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1272f41(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1271f40(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1270f40(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1269f42(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1268f41(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.set_arguments */
extern void T988f35(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.set_seed */
extern void T1262f35(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_AND_THEN_OPERATOR.set_seed */
extern void T1261f35(GE_context* ac, T0* C, T6 a1);
/* ET_SYMBOL_OPERATOR.set_seed */
extern void T943f74(GE_context* ac, T0* C, T6 a1);
/* ET_KEYWORD_OPERATOR.set_seed */
extern void T930f56(GE_context* ac, T0* C, T6 a1);
/* ET_FREE_OPERATOR.set_seed */
extern void T924f54(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_SYMBOL.set_seed */
extern void T649f106(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_validity_checked */
extern void T1231f82(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.set_validity_checked */
extern void T1230f79(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_validity_checked */
extern void T1228f78(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.set_validity_checked */
extern void T1227f80(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.set_validity_checked */
extern void T1226f79(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.set_validity_checked */
extern void T533f73(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.set_validity_checked */
extern void T527f74(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.set_validity_checked */
extern void T365f75(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_validity_checked */
extern void T364f77(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_validity_checked */
extern void T362f77(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.set_validity_checked */
extern void T330f78(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_validity_checked */
extern void T259f83(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_validity_error */
extern void T1231f83(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.set_validity_error */
extern void T1230f80(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_validity_error */
extern void T1228f79(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.set_validity_error */
extern void T1227f81(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.set_validity_error */
extern void T1226f80(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.set_validity_error */
extern void T533f74(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.set_validity_error */
extern void T527f75(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.set_validity_error */
extern void T365f76(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_validity_error */
extern void T364f78(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_validity_error */
extern void T362f78(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.set_validity_error */
extern void T330f79(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_validity_error */
extern void T259f84(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_id */
extern void T1231f79(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_id */
extern void T1230f76(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_id */
extern void T1228f75(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_id */
extern void T1227f77(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_id */
extern void T1226f76(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_id */
extern void T533f77(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_id */
extern void T527f78(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_id */
extern void T365f72(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_id */
extern void T364f74(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_id */
extern void T362f74(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_id */
extern void T330f75(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_id */
extern void T259f80(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_feature */
extern void T1231f108(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_feature */
extern void T1230f107(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_feature */
extern void T1228f104(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_feature */
extern void T1227f109(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_feature */
extern void T1226f107(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_feature */
extern void T533f102(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_feature */
extern void T527f105(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_feature */
extern void T365f95(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_feature */
extern void T364f99(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_feature */
extern void T362f98(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_implementation_feature */
extern void T330f105(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_feature */
extern void T259f110(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_class */
extern void T1231f109(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_class */
extern void T1230f108(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_class */
extern void T1228f105(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_class */
extern void T1227f110(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_class */
extern void T1226f108(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_class */
extern void T533f103(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_class */
extern void T527f106(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_class */
extern void T365f96(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_class */
extern void T364f100(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_class */
extern void T362f99(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_implementation_class */
extern void T330f106(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_class */
extern void T259f111(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_preconditions */
extern void T1231f106(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_preconditions */
extern void T1230f105(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_preconditions */
extern void T1228f102(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_preconditions */
extern void T1227f107(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_preconditions */
extern void T1226f105(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_preconditions */
extern void T533f100(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_preconditions */
extern void T527f103(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_preconditions */
extern void T365f93(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_preconditions */
extern void T364f97(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_preconditions */
extern void T362f96(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_preconditions */
extern void T330f103(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_preconditions */
extern void T259f108(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_postconditions */
extern void T1231f107(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_postconditions */
extern void T1230f106(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_postconditions */
extern void T1228f103(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_postconditions */
extern void T1227f108(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_postconditions */
extern void T1226f106(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_postconditions */
extern void T533f101(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_postconditions */
extern void T527f104(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_postconditions */
extern void T365f94(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_postconditions */
extern void T364f98(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_postconditions */
extern void T362f97(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_postconditions */
extern void T330f104(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_postconditions */
extern void T259f109(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_first_precursor */
extern void T1231f104(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_first_precursor */
extern void T1230f103(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_first_precursor */
extern void T1228f100(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_first_precursor */
extern void T1227f105(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_first_precursor */
extern void T1226f103(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_first_precursor */
extern void T533f98(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_first_precursor */
extern void T527f101(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_precursor */
extern void T365f89(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_precursor */
extern void T364f93(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_precursor */
extern void T362f92(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_precursor */
extern void T330f99(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_first_precursor */
extern void T259f104(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_other_precursors */
extern void T1231f105(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_precursors */
extern void T1230f104(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_precursors */
extern void T1228f101(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_precursors */
extern void T1227f106(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_precursors */
extern void T1226f104(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_precursors */
extern void T533f99(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_precursors */
extern void T527f102(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_precursors */
extern void T365f90(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_precursors */
extern void T364f94(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_precursors */
extern void T362f93(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_other_precursors */
extern void T330f100(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_precursors */
extern void T259f105(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_version */
extern void T1231f101(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_version */
extern void T1230f100(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_version */
extern void T1228f97(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_version */
extern void T1227f102(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_version */
extern void T1226f100(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_version */
extern void T533f95(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_version */
extern void T527f98(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_version */
extern void T365f91(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_version */
extern void T364f95(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_version */
extern void T362f94(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_version */
extern void T330f101(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_version */
extern void T259f106(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_clients */
extern void T1231f93(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_clients */
extern void T1230f93(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_clients */
extern void T1228f89(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_clients */
extern void T1227f95(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_clients */
extern void T1226f93(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_clients */
extern void T533f87(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_clients */
extern void T527f91(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_clients */
extern void T365f82(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_clients */
extern void T364f84(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_clients */
extern void T362f84(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_clients */
extern void T330f91(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_clients */
extern void T259f95(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_seed */
extern void T1231f100(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_first_seed */
extern void T1230f99(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_first_seed */
extern void T1228f96(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_first_seed */
extern void T1227f101(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_first_seed */
extern void T1226f99(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_first_seed */
extern void T533f94(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_first_seed */
extern void T527f97(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_first_seed */
extern void T365f87(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_seed */
extern void T364f91(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_seed */
extern void T362f90(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_seed */
extern void T330f97(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_first_seed */
extern void T259f102(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_other_seeds */
extern void T1231f103(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_seeds */
extern void T1230f102(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_seeds */
extern void T1228f99(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_seeds */
extern void T1227f104(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_seeds */
extern void T1226f102(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_seeds */
extern void T533f97(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_seeds */
extern void T527f100(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_seeds */
extern void T365f88(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_seeds */
extern void T364f92(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_seeds */
extern void T362f91(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_other_seeds */
extern void T330f98(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_seeds */
extern void T259f103(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.process */
extern void T1231f81(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.process */
extern void T1230f78(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.process */
extern void T1228f77(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.process */
extern void T1227f79(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.process */
extern void T1226f78(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.process */
extern void T533f72(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.process */
extern void T527f73(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.process */
extern void T365f74(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.process */
extern void T364f76(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.process */
extern void T362f76(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.process */
extern void T330f77(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.process */
extern void T259f82(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_index */
extern void T1273f38(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_index */
extern void T1272f40(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_index */
extern void T1271f39(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_index */
extern void T1270f39(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_index */
extern void T1269f41(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_index */
extern void T1268f40(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.set_index */
extern void T1267f24(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_OBJECT_TEST.set_index */
extern void T1266f29(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.set_index */
extern void T1265f21(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.set_index */
extern void T1264f26(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TYPE.set_index */
extern void T1263f22(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.set_index */
extern void T1260f24(GE_context* ac, T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.set_index */
extern void T1259f21(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT_ADDRESS.set_index */
extern void T1258f21(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.set_index */
extern void T1257f21(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.set_index */
extern void T1256f21(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.set_index */
extern void T1255f25(GE_context* ac, T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.set_index */
extern void T1209f38(GE_context* ac, T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.set_index */
extern void T1208f38(GE_context* ac, T0* C, T6 a1);
/* ET_FALSE_CONSTANT.set_index */
extern void T1207f34(GE_context* ac, T0* C, T6 a1);
/* ET_TRUE_CONSTANT.set_index */
extern void T1206f34(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_index */
extern void T1204f36(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.set_index */
extern void T1203f36(GE_context* ac, T0* C, T6 a1);
/* ET_BINARY_INTEGER_CONSTANT.set_index */
extern void T1202f65(GE_context* ac, T0* C, T6 a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_index */
extern void T1201f65(GE_context* ac, T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_index */
extern void T1200f65(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_index */
extern void T1199f65(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_index */
extern void T1198f65(GE_context* ac, T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.set_index */
extern void T1197f37(GE_context* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.set_index */
extern void T1196f41(GE_context* ac, T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.set_index */
extern void T1195f39(GE_context* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.set_index */
extern void T1172f28(GE_context* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.set_index */
extern void T1169f29(GE_context* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.set_index */
extern void T1150f22(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.set_index */
extern void T1136f27(GE_context* ac, T0* C, T6 a1);
/* ET_CALL_AGENT.set_index */
extern void T988f30(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.set_index */
extern void T985f25(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_EXPRESSION.set_index */
extern void T957f33(GE_context* ac, T0* C, T6 a1);
/* ET_VOID.set_index */
extern void T946f30(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.set_index */
extern void T831f37(GE_context* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.set_index */
extern void T747f26(GE_context* ac, T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.set_index */
extern void T325f26(GE_context* ac, T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.set_index */
extern void T321f21(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_index */
extern void T320f23(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST.set_index */
extern void T319f24(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT.set_index */
extern void T312f33(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.set_index */
extern void T293f29(GE_context* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_index */
extern void T291f23(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_index */
extern void T290f26(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT.set_index */
extern void T285f34(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_index */
extern void T181f109(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.reset */
extern void T1855f24(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.reset */
extern void T1854f23(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.reset */
extern void T1853f19(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.reset */
extern void T1716f19(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.reset */
extern void T1273f46(GE_context* ac, T0* C);
extern T1 T1273f46ot1(T0* a1, T0** a2);
/* ET_POSTCONDITIONS.reset */
extern void T885f22(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.reset_validity_checked */
extern void T885f19(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.reset */
extern void T885f22p1(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.reset */
extern void T388f22(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.reset_validity_checked */
extern void T388f21(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.reset */
extern void T388f22p1(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset */
extern void T261f14(GE_context* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.reset */
extern void T1556f10(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.reset */
extern void T264f9(GE_context* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.reset */
extern void T972f13(GE_context* ac, T0* C);
extern T1 T972f13ot1(T0* a1, T0** a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T1272f50(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.reset */
extern void T332f14(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.reset */
extern void T1557f10(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.type */
extern T0* T1557f6(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.name */
extern T0* T1557f5(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.reset */
extern void T1125f9(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.type */
extern T0* T1125f6(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.name */
extern T0* T1125f5(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.local_variable */
extern T0* T1557f4(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.local_variable */
extern T0* T1125f4(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T1272f50p1(GE_context* ac, T0* C);
extern T1 T1272f50p1ot1(T0* a1, T0** a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T1271f48(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T1271f48p1(GE_context* ac, T0* C);
extern T1 T1271f48p1ot1(T0* a1, T0** a2);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.reset */
extern void T1270f47(GE_context* ac, T0* C);
extern T1 T1270f47ot1(T0* a1, T0** a2);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T1269f51(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T1269f51p1(GE_context* ac, T0* C);
extern T1 T1269f51p1ot1(T0* a1, T0** a2);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T1268f49(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T1268f49p1(GE_context* ac, T0* C);
extern T1 T1268f49p1ot1(T0* a1, T0** a2);
/* ET_ONCE_MANIFEST_STRING.reset */
extern void T1267f27(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.reset */
extern void T1266f31(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.reset */
extern void T1265f23(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.reset */
extern void T1264f27(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.reset */
extern void T1263f23(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.reset */
extern void T1260f25(GE_context* ac, T0* C);
extern T1 T1260f25ot1(T0* a1, T0** a2);
extern T1 T1260f25ot2(T0* a1, T0** a2);
extern T1 T1260f25ot3(T0* a1, T0** a2);
/* ET_EXPRESSION_ADDRESS.reset */
extern void T1259f23(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.reset */
extern void T1258f23(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.reset */
extern void T1257f23(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.reset */
extern void T1256f23(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.reset */
extern void T1255f28(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.reset */
extern void T1209f42(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.reset */
extern void T1208f42(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.reset */
extern void T1207f38(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.reset */
extern void T1206f38(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.reset */
extern void T1204f42(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.reset */
extern void T1203f42(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.reset */
extern void T1202f72(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.reset */
extern void T1201f72(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.reset */
extern void T1200f72(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.reset */
extern void T1199f72(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.reset */
extern void T1198f72(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.reset */
extern void T1197f41(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.reset */
extern void T1196f45(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.reset */
extern void T1195f43(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.reset */
extern void T1172f31(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T1169f32(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.type */
extern T0* T1169f10(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T1169f32p1(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.name */
extern T0* T1169f11(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.reset */
extern void T1150f24(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.reset */
extern void T1136f30(GE_context* ac, T0* C);
extern T1 T1136f30ot1(T0* a1, T0** a2);
/* ET_CALL_AGENT.reset */
extern void T988f33(GE_context* ac, T0* C);
extern T1 T988f33ot1(T0* a1, T0** a2);
/* ET_BRACKET_EXPRESSION.reset */
extern void T985f26(GE_context* ac, T0* C);
/* ET_BRACKET_ARGUMENT_LIST.reset */
extern void T982f13(GE_context* ac, T0* C);
extern T1 T982f13ot1(T0* a1, T0** a2);
/* ET_BRACKET_SYMBOL.reset */
extern void T649f105(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset */
extern void T957f42(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset_unfolded_form */
extern void T957f43(GE_context* ac, T0* C);
/* ET_VOID.reset */
extern void T946f34(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.reset */
extern void T831f40(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.reset */
extern void T747f29(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.reset */
extern void T325f29(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.type */
extern T0* T325f16(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.reset */
extern void T321f22(GE_context* ac, T0* C);
extern T1 T321f22ot1(T0* a1, T0** a2);
extern T1 T321f22ot2(T0* a1, T0** a2);
/* ET_OBJECT_EQUALITY_EXPRESSION.reset */
extern void T320f24(GE_context* ac, T0* C);
extern T1 T320f24ot1(T0* a1, T0** a2);
extern T1 T320f24ot2(T0* a1, T0** a2);
/* ET_OBJECT_TEST.reset */
extern void T319f26(GE_context* ac, T0* C);
/* ET_RESULT.reset */
extern void T312f35(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.reset */
extern void T293f33(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T291f24(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T291f24p1(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T290f31(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T290f31p1(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T290f31p0(GE_context* ac, T0* C);
/* ET_CURRENT.reset */
extern void T285f36(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.process */
extern void T1855f23(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_FROM_EXPRESSION.process */
extern void T1854f22(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.process */
extern void T1853f18(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.process */
extern void T1716f18(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.process */
extern void T1273f37(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.process */
extern void T1272f39(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.process */
extern void T1271f38(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.process */
extern void T1270f38(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.process */
extern void T1269f40(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.process */
extern void T1268f39(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.process */
extern void T1267f23(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_OBJECT_TEST.process */
extern void T1266f28(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.process */
extern void T1265f20(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_EXPRESSION.process */
extern void T1264f25(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TYPE.process */
extern void T1263f21(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.process */
extern void T1260f23(GE_context* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.process */
extern void T1259f20(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT_ADDRESS.process */
extern void T1258f20(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.process */
extern void T1257f20(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.process */
extern void T1256f20(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.process */
extern void T1255f24(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.process */
extern void T1209f37(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.process */
extern void T1208f37(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.process */
extern void T1207f33(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.process */
extern void T1206f33(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.process */
extern void T1204f35(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.process */
extern void T1203f35(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.process */
extern void T1202f64(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.process */
extern void T1201f64(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.process */
extern void T1200f64(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.process */
extern void T1199f64(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.process */
extern void T1198f64(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.process */
extern void T1197f36(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.process */
extern void T1196f40(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.process */
extern void T1195f38(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.process */
extern void T1172f27(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.process */
extern void T1169f28(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.process */
extern void T1150f21(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.process */
extern void T1136f26(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.process */
extern void T988f29(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.process */
extern void T985f24(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.process */
extern void T957f32(GE_context* ac, T0* C, T0* a1);
/* ET_VOID.process */
extern void T946f29(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.process */
extern void T831f36(GE_context* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.process */
extern void T747f25(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.process */
extern void T325f27(GE_context* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.process */
extern void T321f20(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.process */
extern void T320f22(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST.process */
extern void T319f23(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT.process */
extern void T312f30(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.process */
extern void T293f31(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.process */
extern void T291f22(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.process */
extern void T290f27(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.process */
extern void T285f31(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.process */
extern void T181f112(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.propagate_can_be_void */
extern void T532f18(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.propagate_can_be_void */
extern void T334f85(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.propagate_can_be_void */
extern void T333f85(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.propagate_can_be_void */
extern void T322f84(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.propagate_can_be_void */
extern void T305f84(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.propagate_can_be_void */
extern void T238f81(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.set_never_void */
extern void T830f16(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.set_never_void */
extern void T532f16(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_never_void */
extern void T334f79(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_never_void */
extern void T333f79(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_never_void */
extern void T322f78(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_never_void */
extern void T305f78(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_never_void */
extern void T273f15(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.set_never_void */
extern void T238f76(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_target */
extern void T830f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_target */
extern void T532f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TARGET_LIST.force_last */
extern void T1335f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].force */
extern void T1533f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].fill_with */
extern void T1532f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].extend */
extern void T1532f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.fixed_array */
extern unsigned char ge995os7522;
extern T0* ge995ov7522;
extern T0* T1335f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].default_create */
extern T0* T1533c3(GE_context* ac);
/* ET_DYNAMIC_TARGET_LIST.resize */
extern void T1335f12(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T1533f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T1532f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.new_capacity */
extern T6 T1335f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.capacity */
extern T6 T1335f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_TARGET_LIST.has */
extern T1 T1335f3(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.index_of */
extern T6 T1335f5(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.put_last */
extern void T1335f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.make_with_capacity */
extern T0* T1335c9(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].make */
extern T0* T1533f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TARGET].make_empty */
extern T0* T1532c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_target */
extern void T273f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T1404f20(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_unaliased_to_string */
extern void T1403f22(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_unaliased_to_string */
extern void T642f28(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T504f18(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_unaliased_to_string */
extern void T251f28(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T1404f21(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_to_string */
extern void T1403f23(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_to_string */
extern void T642f29(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T504f19(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_to_string */
extern void T251f30(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T1404f22(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.reset */
extern void T1403f24(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset */
extern void T642f30(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T504f20(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset */
extern void T251f32(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T1404f23(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.reset_qualified_anchored_types */
extern void T1403f25(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T642f33(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T504f21(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T251f33(GE_context* ac, T0* C);
/* ET_LIBRARY.classes_do_all */
extern void T459f168(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].forth */
extern void T634f12(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_forth */
extern void T232f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].add_traversing_cursor */
extern void T232f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_next_cursor */
extern void T634f16(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_position */
extern void T634f15(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].remove_traversing_cursor */
extern void T232f65(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_after */
extern void T634f14(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_mapped */
extern T1 T470f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].item */
extern T0* T634f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_item */
extern T0* T232f34(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].after */
extern T1 T634f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].start */
extern void T634f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_start */
extern void T232f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_off */
extern T1 T232f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].off */
extern T1 T634f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].is_empty */
extern T1 T232f36(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T447f167(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T447f167p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_all */
extern void T229f189(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_all */
extern void T229f189p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_all */
extern void T216f175(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_all */
extern void T216f175p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T197f167(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T197f167p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.classes_do_all */
extern void T188f194(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.classes_do_all */
extern void T70f303(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.classes_do_all */
extern void T64f307(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.classes_do_all */
extern void T61f311(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.classes_do_all */
extern void T33f234(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.classes_do_until */
extern void T459f169(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].go_after */
extern void T634f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_go_after */
extern void T232f64(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.classes_do_until */
extern void T447f168(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_until */
extern void T229f190(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_until */
extern void T216f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_until */
extern void T197f168(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.classes_do_until */
extern void T188f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.classes_do_until */
extern void T70f304(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_until */
extern void T64f308(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.classes_do_until */
extern void T61f312(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.classes_do_until */
extern void T33f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.classes_do_if_until */
extern void T459f171(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.classes_do_if_until */
extern void T447f170(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_if_until */
extern void T229f192(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_if_until */
extern void T216f178(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if_until */
extern void T197f170(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.classes_do_if_until */
extern void T188f197(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_SYSTEM.classes_do_if_until */
extern void T70f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.classes_do_if_until */
extern void T64f310(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM.classes_do_if_until */
extern void T61f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SYSTEM.classes_do_if_until */
extern void T33f237(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIBRARY.master_classes_do_until */
extern void T459f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T447f172(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_until */
extern void T229f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T216f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T197f172(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.master_classes_do_until */
extern void T188f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.master_classes_do_until */
extern void T70f307(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_until */
extern void T64f311(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.master_classes_do_until */
extern void T61f315(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.master_classes_do_until */
extern void T33f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_all */
extern void T459f172(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].do_all */
extern void T232f40(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T447f171(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_all */
extern void T229f193(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T216f179(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T197f171(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.master_classes_do_all */
extern void T188f198(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.master_classes_do_all */
extern void T70f293(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.master_classes_do_all */
extern void T64f244(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.master_classes_do_all */
extern void T61f302(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.master_classes_do_all */
extern void T33f232(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.classes_do_if */
extern void T459f170(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T447f169(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T447f169p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_if */
extern void T229f191(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_if */
extern void T229f191p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_if */
extern void T216f177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_if */
extern void T216f177p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T197f169(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T197f169p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.classes_do_if */
extern void T188f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.classes_do_if */
extern void T70f305(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_if */
extern void T64f309(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.classes_do_if */
extern void T61f313(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.classes_do_if */
extern void T33f236(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_if */
extern void T459f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].do_if */
extern void T232f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T447f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_if */
extern void T229f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T216f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T197f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.master_classes_do_if */
extern void T188f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.master_classes_do_if */
extern void T70f308(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_if */
extern void T64f312(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.master_classes_do_if */
extern void T61f316(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.master_classes_do_if */
extern void T33f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_if_until */
extern void T459f175(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T447f174(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_if_until */
extern void T229f196(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T216f182(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T197f174(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.master_classes_do_if_until */
extern void T188f201(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_SYSTEM.master_classes_do_if_until */
extern void T70f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.master_classes_do_if_until */
extern void T64f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM.master_classes_do_if_until */
extern void T61f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SYSTEM.master_classes_do_if_until */
extern void T33f240(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.resolve_unfolded_tuple_actual_parameters */
extern void T188f206(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_1 */
extern void T80f109(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.attached_keyword */
extern unsigned char ge807os11724;
extern T0* ge807ov11724;
extern T0* T81f241(GE_context* ac, T0* C);
/* ET_KEYWORD.make_attached */
extern T0* T396c42(GE_context* ac);
/* ET_CLASS_TYPE.tokens */
extern T0* T80f28(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T1404c19(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.make */
extern T0* T1403c21(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ET_CLASS.is_routine_class */
extern T1 T82f108(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.resolve_unfolded_tuple_actual_parameters */
extern void T70f298(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.resolve_unfolded_tuple_actual_parameters */
extern void T64f302(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.resolve_unfolded_tuple_actual_parameters */
extern void T61f308(GE_context* ac, T0* C);
/* ET_SYSTEM.resolve_unfolded_tuple_actual_parameters */
extern void T33f228(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.universes_do_all */
extern void T188f207(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_all */
extern void T196f12(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.universes_do_all */
extern void T189f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.universes_do_all */
extern void T70f300(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.universes_do_all */
extern void T64f339(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.universes_do_all */
extern void T61f321(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.universes_do_all */
extern void T33f229(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.universes_do_if */
extern void T459f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_if */
extern void T196f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_LIBRARIES.universes_do_if */
extern void T189f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.universes_do_if */
extern void T447f175(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLIES.universes_do_if */
extern void T446f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.universes_do_if */
extern void T229f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.universes_do_if */
extern void T216f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.universes_do_if */
extern void T197f175(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.universes_do_if */
extern void T188f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.universes_do_if */
extern void T70f322(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.universes_do_if */
extern void T64f338(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.universes_do_if */
extern void T61f331(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.universes_do_if */
extern void T33f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.append_unaliased_to_string */
extern void T1421f73(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_unaliased_to_string */
extern void T1243f76(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_unaliased_to_string */
extern void T1242f77(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_unaliased_to_string */
extern void T1241f78(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T1214f82(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T1086f79(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.append_unaliased_to_string */
extern void T866f70(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_unaliased_to_string */
extern void T503f71(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_unaliased_to_string */
extern void T260f103(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.append_unaliased_to_string */
extern void T82f217(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_unaliased_to_string */
extern void T80f108(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_to_string */
extern void T1421f69(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.upper_name */
extern T0* T1421f41(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.append_to_string */
extern void T1243f73(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_to_string */
extern void T1242f78(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_to_string */
extern void T1241f79(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_to_string */
extern void T1214f83(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.upper_name */
extern T0* T1214f11(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.append_to_string */
extern void T1086f80(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.upper_name */
extern T0* T1086f9(GE_context* ac, T0* C);
/* ET_LIKE_N.append_to_string */
extern void T866f69(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_to_string */
extern void T503f72(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_to_string */
extern void T260f104(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.append_to_string */
extern void T82f224(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_to_string */
extern void T80f110(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.process */
extern void T1421f72(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.process */
extern void T1243f77(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.process */
extern void T1242f79(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.process */
extern void T1241f80(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.process */
extern void T1214f85(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.process */
extern void T1086f82(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.process */
extern void T866f71(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.process */
extern void T503f74(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.process */
extern void T260f105(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.process */
extern void T82f215(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.process */
extern void T80f111(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.reset_qualified_anchored_types */
extern void T1421f71(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset_qualified_anchored_types */
extern void T1243f75(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset_qualified_anchored_types */
extern void T1242f81(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.reset_qualified_anchored_types */
extern void T1241f82(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T1214f86(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T1086f83(GE_context* ac, T0* C);
/* ET_LIKE_N.reset_qualified_anchored_types */
extern void T866f73(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.reset_qualified_anchored_types */
extern void T503f76(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.reset_qualified_anchored_types */
extern void T260f107(GE_context* ac, T0* C);
/* ET_CLASS.reset_qualified_anchored_types */
extern void T82f265(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.reset_qualified_anchored_types */
extern void T80f113(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reset */
extern void T1421f70(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset */
extern void T1243f74(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset */
extern void T1242f80(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.reset */
extern void T1241f81(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.is_like_argument */
extern T1 T1241f21(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset */
extern void T1214f84(GE_context* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.reset */
extern void T1024f14(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset */
extern void T1086f81(GE_context* ac, T0* C);
/* ET_LIKE_N.reset */
extern void T866f72(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.reset */
extern void T503f75(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.reset */
extern void T260f106(GE_context* ac, T0* C);
/* ET_CLASS.reset_type */
extern void T82f264(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.reset */
extern void T80f112(GE_context* ac, T0* C);
extern T1 T80f112ot1(T0* a1, T0** a2);
extern T1 T80f112ot2(T0* a1, T0** a2);
extern T1 T80f112ot3(T0* a1, T0** a2);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class */
extern void T1329f5(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class */
extern void T1328f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class */
extern void T1327f4(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class */
extern void T1326f5(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class */
extern void T1305f6(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class */
extern void T1304f11(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class */
extern void T1303f13(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class */
extern void T1298f11(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_class */
extern void T1297f12(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_class */
extern void T1296f18(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class */
extern void T1295f10(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class */
extern void T1294f7(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class */
extern void T1293f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class */
extern void T1282f16(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class */
extern void T1281f13(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.process_class */
extern void T443f16(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.internal_process_class */
extern void T443f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove */
extern void T1302f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_position */
extern void T1302f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_put */
extern void T1302f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].item_storage_put */
extern void T1302f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].key_storage_keep_head */
extern void T1302f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_keep_head */
extern void T1302f46(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].keep_head */
extern void T1006f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].set_count */
extern void T1006f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_put */
extern void T1302f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].slots_put */
extern void T1302f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].clashes_item */
extern T6 T1302f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].move_cursors_forth */
extern void T1302f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_position */
extern void T1524f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_next_cursor */
extern void T1524f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_after */
extern void T1524f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].internal_set_key_equality_tester */
extern void T1302f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].key_equality_tester */
extern T0* T1302f24(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].slots_item */
extern T6 T1302f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].hash_position */
extern T6 T1302f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].key_storage_item */
extern T0* T1302f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_item */
extern T0* T1302f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].search_position */
extern void T1302f40(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].unset_found_item */
extern void T1302f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].last */
extern T0* T1302f17(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].is_empty */
extern T1 T1302f28(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_parents_validity */
extern void T443f23(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.check_parents_validity */
extern void T1303f9(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.check_constraint_creations_validity */
extern void T443f22(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creation_validity */
extern void T443f27(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0a_error */
extern void T77f201(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtgc0a */
extern T0* T531c743(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T77f27(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtgc0a_error */
extern void T36f200(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T36f26(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0b_error */
extern void T77f200(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vtgc0b */
extern T0* T531c742(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vtgc0b_error */
extern void T36f199(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcp3c_error */
extern void T77f199(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3c */
extern T0* T531c741(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T77f26(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp3c_error */
extern void T36f198(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T36f25(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.feature_name */
extern T0* T1024f7(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.item */
extern T0* T1024f10(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.current_universe */
extern T0* T443f14(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.constraint_base_type */
extern T0* T1086f8(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.creation_procedures */
extern T0* T1086f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter */
extern T0* T642f11(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.formal_parameter */
extern T0* T1214f10(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.formal_parameter */
extern T0* T1086f5(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.item */
extern T0* T642f10(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.is_dotnet */
extern T1 T82f73(GE_context* ac, T0* C);
/* ET_CLASS.is_in_dotnet_assembly */
extern T1 T82f88(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_signatures_validity */
extern void T443f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].wipe_out */
extern void T1283f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_wipe_out */
extern void T1283f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1283f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1283f56(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_FEATURE_NAME].keep_head */
extern void T1074f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME].set_count */
extern void T1074f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1283f55(GE_context* ac, T0* C);
/* SPECIAL [ET_FLATTENED_FEATURE].keep_head */
extern void T1488f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].set_count */
extern void T1488f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].unset_found_item */
extern void T1283f54(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1283f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_next_cursor */
extern void T1487f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_after */
extern void T1487f10(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].forth */
extern void T1283f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_forth */
extern void T1283f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1283f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_position */
extern void T1487f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1283f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_item */
extern T6 T1283f21(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.check_signature_validity */
extern void T443f26(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_validity */
extern void T1296f11(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1521f10(GE_context* ac, T0* C);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1522f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1522f12(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1521f12(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1522f13(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set */
extern void T1521f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_SIGNATURE_CHECKER.check_selected_signature_validity */
extern void T1296f14(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1296f14ot1(T0* a1);
extern T1 T1296f14ot2(T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.is_empty */
extern T1 T261f8(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_tuple_actual_parameters_unfolded */
extern void T1296f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SIGNATURE_CHECKER.tokens */
extern T0* T1296f5(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd2c_error */
extern void T77f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2c */
extern T0* T531c784(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.upper_name */
extern T0* T80f93(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T77f58(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd2c_error */
extern void T36f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T36f57(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2d_error */
extern void T77f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2d */
extern T0* T531c783(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.name */
extern T0* T1307f15(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdrd2d_error */
extern void T36f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.error_handler */
extern T0* T1296f7(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.current_system */
extern T0* T1296f9(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.set_fatal_error */
extern void T1296f15(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.set */
extern void T379f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.force_last */
extern void T379f54(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].force */
extern void T743f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_TYPE].fill_with */
extern void T262f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].extend */
extern void T262f10(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.resize */
extern void T379f58(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].aliased_resized_area */
extern T0* T743f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE].aliased_resized_area */
extern T0* T262f4(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.new_capacity */
extern T6 T379f18(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.capacity */
extern T6 T379f14(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1521f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1521f9(GE_context* ac, T0* C);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1522f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1522f6(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1521f7(GE_context* ac, T0* C);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1522f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1521c8(GE_context* ac, T0* a1);
/* ET_PARENT_FEATURE.is_deferred */
extern T1 T1307f11(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.has_undefine */
extern T1 T1307f16(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_joined_signature_validity */
extern void T1296f13(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0b_error */
extern void T77f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_VALIDITY_ERROR.make_vdjr0b */
extern T0* T531c782(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T77f60(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr0b_error */
extern void T36f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T36f59(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr0a_error */
extern void T77f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0a */
extern T0* T531c781(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0a_error */
extern void T36f261(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0c_error */
extern void T77f261(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0c */
extern T0* T531c780(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0c_error */
extern void T36f260(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_redeclared_signature_validity */
extern void T1296f12(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1296f12ot1(T0* a1);
extern T1 T1296f12ot2(T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd6b_error */
extern void T77f260(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6b */
extern T0* T531c779(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T77f59(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd6b_error */
extern void T36f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T36f58(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2a_error */
extern void T77f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2a */
extern T0* T531c778(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2a_error */
extern void T36f258(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd2b_error */
extern void T77f258(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2b */
extern T0* T531c777(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2b_error */
extern void T36f257(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_for_iteration */
extern T0* T1283f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_item */
extern T0* T1283f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_item */
extern T0* T1283f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T1283f25(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_after */
extern T1 T1283f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T1487f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].start */
extern void T1283f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_start */
extern void T1283f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_off */
extern T1 T1283f40(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].off */
extern T1 T1487f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].is_empty */
extern T1 T1283f36(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_feature_adaptations */
extern void T443f25(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_inherited_features */
extern void T443f28(GE_context* ac, T0* C, T0* a1);
extern T1 T443f28ot1(T0* a1, T0** a2);
/* ET_INHERITED_FEATURE.set_flattened_parent */
extern void T1308f33(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_flattened_feature */
extern void T1308f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found_item */
extern T0* T1283f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found */
extern T1 T1283f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search */
extern void T1283f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search_position */
extern void T1283f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].hash_position */
extern T6 T1283f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_NAME_TESTER.test */
extern T1 T1284f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_item */
extern T0* T1283f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_item */
extern T6 T1283f27(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1291f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].wipe_out */
extern void T1506f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].slots_wipe_out */
extern void T1506f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].clashes_wipe_out */
extern void T1506f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1506f45(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_ALIAS_NAME].keep_head */
extern void T977f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME].set_count */
extern void T977f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1506f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].unset_found_item */
extern void T1506f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].move_all_cursors_after */
extern void T1506f42(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME].set_next_cursor */
extern void T1661f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME].set_after */
extern void T1661f7(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replication */
extern void T1291f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].wipe_out */
extern void T1507f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_wipe_out */
extern void T1507f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_wipe_out */
extern void T1507f56(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_wipe_out */
extern void T1507f55(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_wipe_out */
extern void T1507f54(GE_context* ac, T0* C);
/* SPECIAL [ET_REPLICABLE_FEATURE].keep_head */
extern void T1663f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].set_count */
extern void T1663f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].unset_found_item */
extern void T1507f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].move_all_cursors_after */
extern void T1507f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_next_cursor */
extern void T1662f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_after */
extern void T1662f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].forth */
extern void T1507f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_forth */
extern void T1507f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].add_traversing_cursor */
extern void T1507f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_position */
extern void T1662f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].remove_traversing_cursor */
extern void T1507f65(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_item */
extern T6 T1507f23(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replicated_feature */
extern void T1291f36(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vmrc2b_error */
extern void T77f257(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2b */
extern T0* T531c776(GE_context* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].after */
extern T1 T1670f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1670f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1513f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_position */
extern void T1670f13(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1513f15(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1670f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1513f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1670f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_item */
extern T0* T1513f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1670f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1513f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_after */
extern void T1670f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1513f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1670f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].before */
extern T1 T1670f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1513f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1670c9(GE_context* ac, T0* a1);
/* ET_VALIDITY_ERROR.ast_position */
extern T0* T531f134(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].first */
extern T0* T1513f7(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T77f57(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmrc2b_error */
extern void T36f256(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T36f56(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.selected_feature */
extern T0* T1308f19(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.has_select */
extern T1 T1307f14(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.selected_feature */
extern T0* T1508f15(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.add_replicated_feature */
extern void T1308f37(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].force_last */
extern void T1522f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_PARENT_FEATURE].put_right */
extern void T1863f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_PARENT_FEATURE].make */
extern T0* T1863c3(GE_context* ac, T0* a1);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1522c7(GE_context* ac);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].set_internal_cursor */
extern void T1522f9(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.add_replicated_feature */
extern void T1508f33(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_seed */
extern T1 T1307f21(GE_context* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_selected */
extern void T1308f39(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.set_selected */
extern void T1508f35(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.set_replicated */
extern void T1308f38(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.put */
extern void T1432f13(GE_context* ac, T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].resize */
extern void T522f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ARRAY [INTEGER_32].conservative_resize */
extern void T521f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].conservative_resize_with_default */
extern void T521f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ET_FEATURE_IDS.integer_array_ */
extern T0* T1432f5(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.has */
extern T1 T1432f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.make */
extern T0* T1432c9(GE_context* ac, T6 a1);
/* ET_REDECLARED_FEATURE.set_replicated */
extern void T1508f34(GE_context* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.has_selected_feature */
extern T1 T1308f18(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.has_selected_feature */
extern T1 T1508f21(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmrc2a_error */
extern void T77f256(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2a */
extern T0* T531c775(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vmrc2a_error */
extern void T36f255(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1291f19(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.current_system */
extern T0* T1291f20(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1291f29(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].forth */
extern void T1512f16(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_forth */
extern void T1512f18(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].add_traversing_cursor */
extern void T1512f19(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set_next_cursor */
extern void T1666f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].remove_traversing_cursor */
extern void T1512f20(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set */
extern void T1666f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].put_last */
extern void T1513f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].force */
extern void T1668f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PARENT_FEATURE].fill_with */
extern void T1669f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_FEATURE].extend */
extern void T1669f7(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.seeded_feature */
extern T0* T1308f28(GE_context* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.seeded_feature */
extern T0* T1508f26(GE_context* ac, T0* C, T6 a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].item_for_iteration */
extern T0* T1512f7(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_item */
extern T0* T1512f10(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].after */
extern T1 T1512f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_after */
extern T1 T1512f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].start */
extern void T1512f15(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_start */
extern void T1512f17(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_off */
extern T1 T1512f11(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].off */
extern T1 T1666f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1513c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].set_internal_cursor */
extern void T1513f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].make */
extern T0* T1668f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_PARENT_FEATURE].make_empty */
extern T0* T1669c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].default_create */
extern T0* T1668c2(GE_context* ac);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_for_iteration */
extern T6 T1507f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_key */
extern T6 T1507f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1507f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_for_iteration */
extern T0* T1507f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_item */
extern T0* T1507f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1507f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].after */
extern T1 T1507f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_after */
extern T1 T1507f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].after */
extern T1 T1662f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].start */
extern void T1507f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_start */
extern void T1507f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_off */
extern T1 T1507f29(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].off */
extern T1 T1662f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].is_empty */
extern T1 T1507f28(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.item */
extern T6 T1432f6(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.record_replicable_feature */
extern void T1291f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].force_new */
extern void T1507f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_put */
extern void T1507f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_put */
extern void T1507f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].force */
extern void T1665f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].fill_with */
extern void T1663f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].extend */
extern void T1663f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_put */
extern void T1507f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_put */
extern void T1507f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_item */
extern T6 T1507f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].hash_position */
extern T6 T1507f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].resize */
extern void T1507f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_resize */
extern void T1507f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1507f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_resize */
extern void T1507f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_resize */
extern void T1507f68(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T1665f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T1663f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_resize */
extern void T1507f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_modulus */
extern T6 T1507f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_capacity */
extern T6 T1507f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].replace_found_item */
extern void T1507f47(GE_context* ac, T0* C, T0* a1);
/* ET_REPLICATED_FEATURE.make */
extern T0* T1511c6(GE_context* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].make */
extern T0* T1512c12(GE_context* ac);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].set_internal_cursor */
extern void T1512f14(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].new_cursor */
extern T0* T1512f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].make */
extern T0* T1666c7(GE_context* ac, T0* a1);
/* ET_REPLICATED_FEATURE.put_feature */
extern void T1511f7(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].force_last */
extern void T1512f13(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_ADAPTED_FEATURE].put_right */
extern void T1667f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_ADAPTED_FEATURE].make */
extern T0* T1667c3(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found_item */
extern T0* T1507f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found */
extern T1 T1507f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search */
extern void T1507f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search_position */
extern void T1507f58(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1291f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vmss1a_error */
extern void T77f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmss1a */
extern T0* T531c768(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T77f50(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss1a_error */
extern void T36f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T36f49(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs1a_error */
extern void T77f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs1a */
extern T0* T531c767(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T77f49(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs1a_error */
extern void T36f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T36f48(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].wipe_out */
extern void T1505f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].slots_wipe_out */
extern void T1505f62(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].clashes_wipe_out */
extern void T1505f61(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].key_storage_wipe_out */
extern void T1505f60(GE_context* ac, T0* C);
/* SPECIAL [ET_CALL_NAME].keep_head */
extern void T1654f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CALL_NAME].set_count */
extern void T1654f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].item_storage_wipe_out */
extern void T1505f59(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].unset_found_item */
extern void T1505f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].move_all_cursors_after */
extern void T1505f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].set_next_cursor */
extern void T1658f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].set_after */
extern void T1658f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].forth */
extern void T1505f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_forth */
extern void T1505f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].add_traversing_cursor */
extern void T1505f72(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].set_position */
extern void T1658f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].remove_traversing_cursor */
extern void T1505f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].clashes_item */
extern T6 T1505f26(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdus1a_error */
extern void T77f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus1a */
extern T0* T531c766(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T77f48(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus1a_error */
extern void T36f246(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T36f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].key_for_iteration */
extern T0* T1505f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_key */
extern T0* T1505f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].key_storage_item */
extern T0* T1505f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].item_for_iteration */
extern T1 T1505f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_item */
extern T1 T1505f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].item_storage_item */
extern T1 T1505f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].after */
extern T1 T1505f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_after */
extern T1 T1505f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].after */
extern T1 T1658f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].start */
extern void T1505f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_start */
extern void T1505f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_off */
extern T1 T1505f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].off */
extern T1 T1658f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].is_empty */
extern T1 T1505f35(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].wipe_out */
extern void T1504f43(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].slots_wipe_out */
extern void T1504f60(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].clashes_wipe_out */
extern void T1504f59(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].key_storage_wipe_out */
extern void T1504f58(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].item_storage_wipe_out */
extern void T1504f57(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].unset_found_item */
extern void T1504f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].move_all_cursors_after */
extern void T1504f56(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].set_next_cursor */
extern void T1657f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].set_after */
extern void T1657f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].forth */
extern void T1504f42(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].cursor_forth */
extern void T1504f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].add_traversing_cursor */
extern void T1504f74(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].set_position */
extern void T1657f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].remove_traversing_cursor */
extern void T1504f73(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].clashes_item */
extern T6 T1504f22(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel2a_error */
extern void T77f246(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vlel2a */
extern T0* T531c765(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T77f47(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel2a_error */
extern void T36f245(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T36f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].item_for_iteration */
extern T0* T1504f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].cursor_item */
extern T0* T1504f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].item_storage_item */
extern T0* T1504f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].after */
extern T1 T1504f19(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].cursor_after */
extern T1 T1504f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].after */
extern T1 T1657f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].start */
extern void T1504f41(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].cursor_start */
extern void T1504f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].cursor_off */
extern T1 T1504f34(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].off */
extern T1 T1657f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].wipe_out */
extern void T1501f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].slots_wipe_out */
extern void T1501f59(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].clashes_wipe_out */
extern void T1501f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].key_storage_wipe_out */
extern void T1501f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_storage_wipe_out */
extern void T1501f56(GE_context* ac, T0* C);
/* SPECIAL [ET_RENAME].keep_head */
extern void T1649f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_RENAME].set_count */
extern void T1649f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].unset_found_item */
extern void T1501f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].move_all_cursors_after */
extern void T1501f55(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].set_next_cursor */
extern void T1648f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].set_after */
extern void T1648f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].forth */
extern void T1501f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].cursor_forth */
extern void T1501f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].add_traversing_cursor */
extern void T1501f74(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].set_position */
extern void T1648f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].remove_traversing_cursor */
extern void T1501f73(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].clashes_item */
extern T6 T1501f22(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc1a_error */
extern void T77f245(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vhrc1a */
extern T0* T531c764(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T77f46(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc1a_error */
extern void T36f244(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T36f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_for_iteration */
extern T0* T1501f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].cursor_item */
extern T0* T1501f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_storage_item */
extern T0* T1501f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].after */
extern T1 T1501f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].cursor_after */
extern T1 T1501f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].after */
extern T1 T1648f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].start */
extern void T1501f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].cursor_start */
extern void T1501f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].cursor_off */
extern T1 T1501f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].off */
extern T1 T1648f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].force_last_new */
extern void T1506f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].key_storage_put */
extern void T1506f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].force */
extern void T976f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME].fill_with */
extern void T977f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME].extend */
extern void T977f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].item_storage_put */
extern void T1506f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].force */
extern void T1073f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME].fill_with */
extern void T1074f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME].extend */
extern void T1074f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].slots_put */
extern void T1506f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].clashes_put */
extern void T1506f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].slots_item */
extern T6 T1506f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].hash_position */
extern T6 T1506f27(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].resize */
extern void T1506f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].clashes_resize */
extern void T1506f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].special_integer_ */
extern T0* T1506f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].key_storage_resize */
extern void T1506f56(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T976f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T977f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].item_storage_resize */
extern void T1506f55(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1073f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1074f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].key_storage_item */
extern T0* T1506f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].clashes_item */
extern T6 T1506f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].slots_resize */
extern void T1506f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].new_modulus */
extern T6 T1506f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].new_capacity */
extern T6 T1506f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].has */
extern T1 T1506f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].search_position */
extern void T1506f40(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_TESTER.test */
extern T1 T1287f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].put_last_new */
extern void T1283f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_put */
extern void T1283f83(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_put */
extern void T1283f82(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].force */
extern void T1491f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].fill_with */
extern void T1488f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].extend */
extern void T1488f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_put */
extern void T1283f76(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_put */
extern void T1283f77(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].compress */
extern void T1283f81(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_keep_head */
extern void T1283f89(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_keep_head */
extern void T1283f88(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors */
extern void T1283f87(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1291f23(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_next */
extern void T1308f31(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.make */
extern T0* T1308c29(GE_context* ac, T0* a1);
/* ET_PARENT_FEATURE.other_seeds */
extern T0* T1307f10(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.first_seed */
extern T6 T1307f9(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.reset */
extern void T1308f30(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.put_parent_feature */
extern void T1308f34(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_IDS.cloned_object */
extern T0* T1432f4(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.twin */
extern T0* T1432f3(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.copy */
extern void T1432f12(GE_context* ac, T0* C, T0* a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].cloned_array */
extern T0* T522f1(GE_context* ac, T0* C, T0* a1);
/* ARRAY [INTEGER_32].twin */
extern T0* T521f9(GE_context* ac, T0* C);
/* ARRAY [INTEGER_32].copy */
extern void T521f18(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [INTEGER_32].twin */
extern T0* T123f7(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.has_seed */
extern T1 T1308f22(GE_context* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.is_other_seeds_shared */
extern T1 T1308f21(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.set_merged_feature */
extern void T1307f29(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.put_parent_feature */
extern void T1508f30(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.has_seed */
extern T1 T1508f20(GE_context* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.is_other_seeds_shared */
extern T1 T1508f19(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].replace_found_item */
extern void T1283f70(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1291f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.set_next */
extern void T1508f29(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.make */
extern T0* T1508c27(GE_context* ac, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.reset */
extern void T1508f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].found_item */
extern T0* T1506f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].item_storage_item */
extern T0* T1506f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].found */
extern T1 T1506f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].search */
extern void T1506f39(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_select_name */
extern void T1307f26(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_redefine_name */
extern void T1307f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].replace_found_item */
extern void T1505f46(GE_context* ac, T0* C, T1 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].item_storage_put */
extern void T1505f54(GE_context* ac, T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].found_item */
extern T1 T1505f25(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.set_undefine_name */
extern void T1307f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].found_key */
extern T0* T1505f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].found */
extern T1 T1505f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].search */
extern void T1505f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].search_position */
extern void T1505f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].hash_position */
extern T6 T1505f28(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_NAME_TESTER.test */
extern T1 T1502f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].slots_item */
extern T6 T1505f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].remove_found_item */
extern void T1504f40(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].remove_position */
extern void T1504f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].key_storage_put */
extern void T1504f72(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CALL_NAME].item_storage_put */
extern void T1504f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].force */
extern void T1656f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CALL_NAME].fill_with */
extern void T1654f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_NAME].extend */
extern void T1654f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].key_storage_keep_head */
extern void T1504f71(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].item_storage_keep_head */
extern void T1504f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].clashes_put */
extern void T1504f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CALL_NAME].slots_put */
extern void T1504f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CALL_NAME].move_cursors_forth */
extern void T1504f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].search_position */
extern void T1504f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].internal_set_key_equality_tester */
extern void T1504f68(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].key_equality_tester */
extern T0* T1504f33(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].slots_item */
extern T6 T1504f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].hash_position */
extern T6 T1504f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].key_storage_item */
extern T0* T1504f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].found */
extern T1 T1504f17(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].search */
extern void T1504f39(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_new_name */
extern void T1307f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].remove_found_item */
extern void T1501f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].remove_position */
extern void T1501f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].key_storage_put */
extern void T1501f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_storage_put */
extern void T1501f66(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_RENAME].force */
extern void T1655f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_RENAME].fill_with */
extern void T1649f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].extend */
extern void T1649f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].key_storage_keep_head */
extern void T1501f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_storage_keep_head */
extern void T1501f71(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].clashes_put */
extern void T1501f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].slots_put */
extern void T1501f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].move_cursors_forth */
extern void T1501f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].search_position */
extern void T1501f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].internal_set_key_equality_tester */
extern void T1501f69(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].slots_item */
extern T6 T1501f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].hash_position */
extern T6 T1501f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].key_storage_item */
extern T0* T1501f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].found_item */
extern T0* T1501f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].found */
extern T1 T1501f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].search */
extern void T1501f42(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1291f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_next */
extern void T1307f28(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.make */
extern T0* T1307c22(GE_context* ac, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.reset */
extern void T1307f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].resize */
extern void T1283f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_resize */
extern void T1283f80(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].special_integer_ */
extern T0* T1283f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_resize */
extern void T1283f79(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_resize */
extern void T1283f78(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1491f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1488f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_resize */
extern void T1283f75(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_modulus */
extern T6 T1283f33(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_select_table */
extern void T1291f34(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss2a_error */
extern void T77f255(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vmss2a */
extern T0* T531c774(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T77f56(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss2a_error */
extern void T36f254(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T36f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].put_new */
extern void T1505f51(GE_context* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].key_storage_put */
extern void T1505f69(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].slots_put */
extern void T1505f64(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].clashes_put */
extern void T1505f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.feature_name */
extern T0* T500f4(GE_context* ac, T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.item */
extern T0* T500f5(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].resize */
extern void T1505f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].clashes_resize */
extern void T1505f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].special_integer_ */
extern T0* T1505f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].key_storage_resize */
extern void T1505f67(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].aliased_resized_area */
extern T0* T1656f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_NAME].aliased_resized_area */
extern T0* T1654f3(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].item_storage_resize */
extern void T1505f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].slots_resize */
extern void T1505f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].new_modulus */
extern T6 T1505f24(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_redefine_table */
extern void T1291f33(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs3a_error */
extern void T77f254(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdrs3a */
extern T0* T531c773(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T77f55(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs3a_error */
extern void T36f253(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T36f54(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_undefine_table */
extern void T1291f32(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus4a_error */
extern void T77f253(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdus4a */
extern T0* T531c772(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T77f54(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus4a_error */
extern void T36f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T36f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].is_empty */
extern T1 T1504f31(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_export_table */
extern void T1291f31(GE_context* ac, T0* C, T0* a1);
extern T1 T1291f31ot1(T0* a1, T0** a2);
extern T1 T1291f31ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vlel3a_error */
extern void T77f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel3a */
extern T0* T531c771(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T77f53(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel3a_error */
extern void T36f251(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T36f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].found_item */
extern T0* T1504f32(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].put_new */
extern void T1504f45(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.feature_name */
extern T0* T1071f5(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_EXPORT.item */
extern T0* T1071f6(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].resize */
extern void T1504f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].clashes_resize */
extern void T1504f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].special_integer_ */
extern T0* T1504f35(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].key_storage_resize */
extern void T1504f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].item_storage_resize */
extern void T1504f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].slots_resize */
extern void T1504f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].new_modulus */
extern T6 T1504f36(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel1a_error */
extern void T77f251(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel1a */
extern T0* T531c770(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T77f52(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel1a_error */
extern void T36f250(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T36f51(GE_context* ac, T0* C, T0* a1);
/* ET_EXPORT_LIST.item */
extern T0* T499f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].is_empty */
extern T1 T1501f32(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_rename_table */
extern void T1291f30(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc2a_error */
extern void T77f250(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc2a */
extern T0* T531c769(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T77f51(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc2a_error */
extern void T36f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T36f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].put_new */
extern void T1501f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_RENAME_LIST.rename_pair */
extern T0* T498f4(GE_context* ac, T0* C, T6 a1);
/* ET_RENAME.rename_pair */
extern T0* T1220f5(GE_context* ac, T0* C);
/* ET_RENAME_LIST.item */
extern T0* T498f5(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].resize */
extern void T1501f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].clashes_resize */
extern void T1501f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].special_integer_ */
extern T0* T1501f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].key_storage_resize */
extern void T1501f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_storage_resize */
extern void T1501f63(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].aliased_resized_area */
extern T0* T1655f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME].aliased_resized_area */
extern T0* T1649f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].slots_resize */
extern void T1501f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].new_modulus */
extern T6 T1501f39(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1291f26(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn0a_error */
extern void T77f244(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0a */
extern T0* T531c763(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T77f45(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn0a_error */
extern void T36f243(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T36f44(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1292f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].wipe_out */
extern void T1517f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1517f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1517f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1517f43(GE_context* ac, T0* C);
/* SPECIAL [ET_DOTNET_FEATURE].keep_head */
extern void T1671f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].set_count */
extern void T1671f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1517f42(GE_context* ac, T0* C);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].keep_head */
extern void T1674f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].set_count */
extern void T1674f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].unset_found_item */
extern void T1517f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1517f40(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_next_cursor */
extern void T1677f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_after */
extern void T1677f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].wipe_out */
extern void T1515f33(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1515f47(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1515f46(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1515f45(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1515f44(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].unset_found_item */
extern void T1515f41(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1515f43(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1672f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_after */
extern void T1672f7(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_any_features */
extern void T1292f22(GE_context* ac, T0* C, T0* a1);
extern T1 T1292f22ot1(T0* a1, T0** a2);
extern T1 T1292f22ot2(T0* a1, T0** a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1292f16(GE_context* ac, T0* C, T0* a1);
/* ET_RENAME.make */
extern T0* T1220c6(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_keyword */
extern unsigned char ge807os11722;
extern T0* ge807ov11722;
extern T0* T81f590(GE_context* ac, T0* C);
/* ET_KEYWORD.make_as */
extern T0* T396c60(GE_context* ac);
/* ET_RENAME.tokens */
extern T0* T1220f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].has */
extern T1 T1283f37(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1292f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_system */
extern T0* T1292f14(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1292f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1292f13(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1292f24(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].forth */
extern void T1519f15(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_forth */
extern void T1519f17(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].add_traversing_cursor */
extern void T1519f18(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1679f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].remove_traversing_cursor */
extern void T1519f19(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set */
extern void T1679f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].item_for_iteration */
extern T0* T1519f7(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_item */
extern T0* T1519f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].after */
extern T1 T1519f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_after */
extern T1 T1519f8(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].start */
extern void T1519f14(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_start */
extern void T1519f16(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_off */
extern T1 T1519f10(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].off */
extern T1 T1679f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found_item */
extern T0* T1517f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1517f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found */
extern T1 T1517f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search */
extern void T1517f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search_position */
extern void T1517f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].hash_position */
extern T6 T1517f22(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.test */
extern T1 T1514f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1517f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_item */
extern T6 T1517f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_item */
extern T6 T1517f23(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_feature */
extern void T1292f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1292f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found_item */
extern T0* T1515f24(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1515f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found */
extern T1 T1515f26(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search */
extern void T1515f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search_position */
extern void T1515f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].hash_position */
extern T6 T1515f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1515f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_item */
extern T6 T1515f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_equality_tester */
extern T0* T1515f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_item */
extern T6 T1515f20(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_universe */
extern T0* T1292f12(GE_context* ac, T0* C);
/* ET_CLASS.is_system_object_class */
extern T1 T82f72(GE_context* ac, T0* C);
/* ET_PARENT_LIST.is_empty */
extern T1 T467f7(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1292f20(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_feature */
extern void T1292f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].force_last */
extern void T1515f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_put */
extern void T1515f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_put */
extern void T1515f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_capacity */
extern T6 T1515f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_put */
extern void T1515f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].force */
extern void T1673f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].fill_with */
extern void T1671f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].extend */
extern void T1671f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].force_last_new */
extern void T1517f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_put */
extern void T1517f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_put */
extern void T1517f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].force */
extern void T1678f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].fill_with */
extern void T1674f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].extend */
extern void T1674f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_put */
extern void T1517f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_put */
extern void T1517f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].resize */
extern void T1517f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_resize */
extern void T1517f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1517f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_resize */
extern void T1517f55(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T1673f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T1671f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_resize */
extern void T1517f54(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T1678f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T1674f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_resize */
extern void T1517f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_modulus */
extern T6 T1517f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_capacity */
extern T6 T1517f21(GE_context* ac, T0* C, T6 a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].make */
extern T0* T1519c11(GE_context* ac);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1519f13(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1519f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1679c7(GE_context* ac, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].force_last */
extern void T1519f12(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_DOTNET_FEATURE].put_right */
extern void T1680f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_DOTNET_FEATURE].make */
extern T0* T1680c3(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].force_last_new */
extern void T1283f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_capacity */
extern T6 T1283f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].resize */
extern void T1515f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_resize */
extern void T1515f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1515f27(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_resize */
extern void T1515f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_resize */
extern void T1515f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_resize */
extern void T1515f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_modulus */
extern T6 T1515f28(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.resolve_signatures_unfolded_tuple_actual_parameters */
extern void T443f20(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T443f24(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_type */
extern void T1305f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INTERFACE_CHECKER.check_qualified_anchored_signatures_validity */
extern void T443f19(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_signatures_validity */
extern void T1304f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.reset_fatal_error */
extern void T1304f10(GE_context* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_compilation_status */
extern void T77f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_compilation_status */
extern void T36f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_LIST.parent */
extern T0* T467f6(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT.parent */
extern T0* T466f10(GE_context* ac, T0* C);
/* ET_PARENT_LIST.item */
extern T0* T467f8(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.parents */
extern T0* T82f93(GE_context* ac, T0* C);
/* ET_CLASS.is_any_class */
extern T1 T82f111(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.current_system */
extern T0* T443f13(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.set_fatal_error */
extern void T443f17(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.make */
extern T0* T443c15(GE_context* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern T0* T1305c4(GE_context* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern void T1305f4p1(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.tokens */
extern T0* T1305f3(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.make */
extern T0* T1296c10(GE_context* ac);
/* ET_SIGNATURE_CHECKER.make */
extern void T1296f10p1(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1292c18(GE_context* ac);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_key_equality_tester */
extern void T1517f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_map */
extern T0* T1517c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_with_equality_testers */
extern void T1517f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_sparse_container */
extern void T1517f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1517f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1517f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1677c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_slots */
extern void T1517f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_clashes */
extern void T1517f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_key_storage */
extern void T1517f58(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].make */
extern T0* T1673f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].make_empty */
extern T0* T1671c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].default_create */
extern T0* T1673c3(GE_context* ac);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_item_storage */
extern void T1517f57(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T1678f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make_empty */
extern T0* T1674c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].default_create */
extern T0* T1678c3(GE_context* ac);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_equality_tester */
extern void T1515f32(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.make */
extern T0* T1514c2(GE_context* ac);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make */
extern T0* T1515c31(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1515f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1515f25(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1672c6(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_slots */
extern void T1515f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_clashes */
extern void T1515f39(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_key_storage */
extern void T1515f38(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_item_storage */
extern void T1515f37(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1292f18p1(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1292f11(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1291c24(GE_context* ac);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_map */
extern T0* T1507c42(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1507f49(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_sparse_container */
extern void T1507f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].set_internal_cursor */
extern void T1507f75(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_cursor */
extern T0* T1507f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1662c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_slots */
extern void T1507f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_clashes */
extern void T1507f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_key_storage */
extern void T1507f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_item_storage */
extern void T1507f71(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].make */
extern T0* T1665f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].make_empty */
extern T0* T1663c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].default_create */
extern T0* T1665c3(GE_context* ac);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].set_key_equality_tester */
extern void T1506f36(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.alias_name_tester */
extern unsigned char ge854os25249;
extern T0* ge854ov25249;
extern T0* T1291f17(GE_context* ac, T0* C);
/* ET_ALIAS_NAME_TESTER.default_create */
extern T0* T1287c2(GE_context* ac);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_map */
extern T0* T1506c35(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_with_equality_testers */
extern void T1506f41(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_sparse_container */
extern void T1506f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].set_internal_cursor */
extern void T1506f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].new_cursor */
extern T0* T1506f32(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME].make */
extern T0* T1661c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_slots */
extern void T1506f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_clashes */
extern void T1506f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_key_storage */
extern void T1506f59(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].make */
extern T0* T976f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME].make_empty */
extern T0* T977c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].default_create */
extern T0* T976c3(GE_context* ac);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_item_storage */
extern void T1506f58(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].make */
extern T0* T1073f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME].make_empty */
extern T0* T1074c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].default_create */
extern T0* T1073c3(GE_context* ac);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].set_key_equality_tester */
extern void T1505f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_map */
extern T0* T1505c43(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_with_equality_testers */
extern void T1505f52(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_sparse_container */
extern void T1505f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].set_internal_cursor */
extern void T1505f77(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].new_cursor */
extern T0* T1505f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].make */
extern T0* T1658c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_slots */
extern void T1505f76(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_clashes */
extern void T1505f75(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_key_storage */
extern void T1505f74(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].make */
extern T0* T1656f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CALL_NAME].make_empty */
extern T0* T1654c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].default_create */
extern T0* T1656c3(GE_context* ac);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_item_storage */
extern void T1505f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].set_equality_tester */
extern void T1504f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].make */
extern T0* T1504c37(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].set_internal_cursor */
extern void T1504f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].new_cursor */
extern T0* T1504f20(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].make */
extern T0* T1657c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].make_slots */
extern void T1504f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].make_clashes */
extern void T1504f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].make_key_storage */
extern void T1504f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].make_item_storage */
extern void T1504f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].set_key_equality_tester */
extern void T1501f41(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.call_name_tester */
extern unsigned char ge855os32923;
extern T0* ge855ov32923;
extern T0* T1291f16(GE_context* ac, T0* C);
/* ET_CALL_NAME_TESTER.default_create */
extern T0* T1502c2(GE_context* ac);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_map */
extern T0* T1501c40(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_with_equality_testers */
extern void T1501f49(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_sparse_container */
extern void T1501f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].set_internal_cursor */
extern void T1501f79(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].new_cursor */
extern T0* T1501f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].make */
extern T0* T1648c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_slots */
extern void T1501f78(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_clashes */
extern void T1501f77(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_key_storage */
extern void T1501f76(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_item_storage */
extern void T1501f75(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].make */
extern T0* T1655f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_RENAME].make_empty */
extern T0* T1649c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].default_create */
extern T0* T1655c3(GE_context* ac);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1291f24p1(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1291f18(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1283f45(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.feature_name_tester */
extern unsigned char ge857os11352;
extern T0* ge857ov11352;
extern T0* T443f10(GE_context* ac, T0* C);
/* ET_FEATURE_NAME_TESTER.default_create */
extern T0* T1284c2(GE_context* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_map */
extern T0* T1283c44(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1283f50(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_sparse_container */
extern void T1283f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_internal_cursor */
extern void T1283f67(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T1283f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1487c9(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_slots */
extern void T1283f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_clashes */
extern void T1283f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_key_storage */
extern void T1283f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_item_storage */
extern void T1283f63(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].make */
extern T0* T1491f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].make_empty */
extern T0* T1488c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].default_create */
extern T0* T1491c3(GE_context* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern T0* T1304c8(GE_context* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern void T1304f8p1(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1304f5(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.set_classes_to_be_processed */
extern void T1303f8(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.make */
extern T0* T1303c7(GE_context* ac);
/* ET_PARENT_CHECKER3.make */
extern void T1303f7p1(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.tokens */
extern T0* T1303f4(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].make */
extern T0* T1302c32(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_CLASS].set_internal_cursor */
extern void T1302f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].new_cursor */
extern T0* T1302f29(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].make */
extern T0* T1524c6(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_CLASS].make_slots */
extern void T1302f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_modulus */
extern T6 T1302f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_clashes */
extern void T1302f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_key_storage */
extern void T1302f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_item_storage */
extern void T1302f34(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.make */
extern void T443f15p1(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.tokens */
extern T0* T443f11(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.error_handler */
extern T0* T443f12(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.process_class */
extern void T442f29(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.internal_process_class */
extern void T442f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_features */
extern void T442f34(GE_context* ac, T0* C);
extern T1 T442f34ot1(T0* a1, T0** a2);
extern T1 T442f34ot2(T0* a1, T0** a2);
/* ET_FEATURE_FLATTENER.check_kernel_features_validity */
extern void T442f45(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.forth_feature_name */
extern unsigned char ge807os11495;
extern T0* ge807ov11495;
extern T0* T81f631(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.after_feature_name */
extern unsigned char ge807os11424;
extern T0* ge807ov11424;
extern T0* T81f630(GE_context* ac, T0* C);
/* ET_CLASS.is_iteration_cursor_class */
extern T1 T82f153(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_cursor_feature_name */
extern unsigned char ge807os11582;
extern T0* ge807ov11582;
extern T0* T81f629(GE_context* ac, T0* C);
/* ET_CLASS.is_iterable_class */
extern T1 T82f152(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dispose_feature_name */
extern unsigned char ge807os11478;
extern T0* ge807ov11478;
extern T0* T81f628(GE_context* ac, T0* C);
/* ET_CLASS.is_disposable_class */
extern T1 T82f151(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe5a_error */
extern void T77f335(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe5a */
extern T0* T531c847(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T77f99(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe5a_error */
extern void T36f334(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T36f98(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_equal_feature_name */
extern unsigned char ge807os11543;
extern T0* ge807ov11543;
extern T0* T81f627(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.copy_feature_name */
extern unsigned char ge807os11467;
extern T0* ge807ov11467;
extern T0* T81f626(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.tokens */
extern T0* T442f21(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_convert_validity */
extern void T442f44(GE_context* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.convert_feature */
extern T0* T1036f4(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_PROCEDURE.convert_feature */
extern T0* T1224f6(GE_context* ac, T0* C);
/* ET_CONVERT_FUNCTION.convert_feature */
extern T0* T1223f5(GE_context* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.item */
extern T0* T1036f5(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_creators_validity */
extern void T442f43(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcp2a_error */
extern void T77f334(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp2a */
extern T0* T531c846(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T77f98(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp2a_error */
extern void T36f333(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T36f97(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp2b_error */
extern void T77f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp2b */
extern T0* T531c845(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp2b_error */
extern void T36f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6a_error */
extern void T77f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcc6a */
extern T0* T531c844(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T77f97(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc6a_error */
extern void T36f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T36f96(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp3b_error */
extern void T77f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3b */
extern T0* T531c843(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3b_error */
extern void T36f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcp3a_error */
extern void T77f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3a */
extern T0* T531c842(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3a_error */
extern void T36f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.feature_name */
extern T0* T1041f8(GE_context* ac, T0* C, T6 a1);
/* ET_CREATOR.item */
extern T0* T1041f11(GE_context* ac, T0* C, T6 a1);
/* ET_CREATOR_LIST.item */
extern T0* T833f5(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp1a_error */
extern void T77f329(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp1a */
extern T0* T531c841(GE_context* ac, T0* a1, T0* a2);
/* ET_CREATOR.position */
extern T0* T1041f12(GE_context* ac, T0* C);
/* ET_CREATOR.first */
extern T0* T1041f15(GE_context* ac, T0* C);
/* ET_CLIENTS.position */
extern T0* T1010f12(GE_context* ac, T0* C);
/* ET_CLIENT.position */
extern T0* T497f5(GE_context* ac, T0* C);
/* ET_CLIENTS.first */
extern T0* T1010f15(GE_context* ac, T0* C);
/* ET_CLIENTS.is_empty */
extern T1 T1010f14(GE_context* ac, T0* C);
/* ET_CREATOR.clients_clause */
extern T0* T1041f14(GE_context* ac, T0* C);
extern T1 T1041f14ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T77f96(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp1a_error */
extern void T36f328(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T36f95(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.first */
extern T0* T833f3(GE_context* ac, T0* C);
/* ET_CREATOR_LIST.is_empty */
extern T1 T833f6(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_assigners_validity */
extern void T442f42(GE_context* ac, T0* C);
extern T1 T442f42ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vfac4a_error */
extern void T77f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_VALIDITY_ERROR.make_vfac4a */
extern T0* T531c840(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_NULL_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T77f95(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac4a_error */
extern void T36f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T36f94(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac3a_error */
extern void T77f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfac3a */
extern T0* T531c839(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T77f94(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac3a_error */
extern void T36f326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T36f93(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac2a_error */
extern void T77f326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfac2a */
extern T0* T531c838(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T77f93(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac2a_error */
extern void T36f325(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T36f92(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1b_error */
extern void T77f325(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1b */
extern T0* T531c837(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T77f92(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac1b_error */
extern void T36f324(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T36f91(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1a_error */
extern void T77f324(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1a */
extern T0* T531c836(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfac1a_error */
extern void T36f323(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcch2a_error */
extern void T77f320(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.set_ise_reported */
extern void T531f760(GE_context* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vcch2a */
extern T0* T531c832(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T77f89(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch2a_error */
extern void T36f319(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T36f88(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1a_error */
extern void T77f319(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1a */
extern T0* T531c831(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T77f88(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch1a_error */
extern void T36f318(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T36f87(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1b_error */
extern void T77f318(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1b */
extern T0* T531c830(GE_context* ac, T0* a1, T0* a2);
/* ET_INHERITED_FEATURE.name */
extern T0* T1308f27(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vcch1b_error */
extern void T36f317(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].go_after */
extern void T1283f74(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_go_after */
extern void T1283f86(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_has_deferred_features */
extern void T82f263(GE_context* ac, T0* C, T1 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].wipe_out */
extern void T1286f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_wipe_out */
extern void T1286f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_wipe_out */
extern void T1286f56(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1286f55(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1286f54(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].unset_found_item */
extern void T1286f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].move_all_cursors_after */
extern void T1286f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_next_cursor */
extern void T1493f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_after */
extern void T1493f7(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_signature_validity */
extern void T442f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].force_last_new */
extern void T1286f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_put */
extern void T1286f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_put */
extern void T1286f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_put */
extern void T1286f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_put */
extern void T1286f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_item */
extern T6 T1286f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].hash_position */
extern T6 T1286f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].resize */
extern void T1286f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_resize */
extern void T1286f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].special_integer_ */
extern T0* T1286f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_resize */
extern void T1286f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_resize */
extern void T1286f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_item */
extern T0* T1286f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_item */
extern T6 T1286f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_resize */
extern void T1286f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_modulus */
extern T6 T1286f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_capacity */
extern T6 T1286f23(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1f_error */
extern void T77f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1f */
extern T0* T531c829(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.alias_lower_name */
extern T0* T531f235(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T77f87(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav1f_error */
extern void T36f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T36f86(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1c_error */
extern void T77f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1c */
extern T0* T531c828(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1c_error */
extern void T36f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4b_error */
extern void T77f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4b */
extern T0* T531c827(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T77f86(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav4b_error */
extern void T36f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T36f85(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav2b_error */
extern void T77f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2b */
extern T0* T531c826(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T77f85(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav2b_error */
extern void T36f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T36f84(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1g_error */
extern void T77f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1g */
extern T0* T531c825(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.alias_name */
extern T0* T1307f13(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vfav1g_error */
extern void T36f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1d_error */
extern void T77f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1d */
extern T0* T531c824(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1d_error */
extern void T36f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4c_error */
extern void T77f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4c */
extern T0* T531c823(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4c_error */
extern void T36f310(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2c_error */
extern void T77f310(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2c */
extern T0* T531c822(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2c_error */
extern void T36f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1h_error */
extern void T77f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1h */
extern T0* T531c821(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1h_error */
extern void T36f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1e_error */
extern void T77f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1e */
extern T0* T531c820(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1e_error */
extern void T36f307(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4d_error */
extern void T77f307(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4d */
extern T0* T531c819(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4d_error */
extern void T36f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2d_error */
extern void T77f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2d */
extern T0* T531c818(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2d_error */
extern void T36f305(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found_item */
extern T0* T1286f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_item */
extern T0* T1286f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found */
extern T1 T1286f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search */
extern void T1286f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search_position */
extern void T1286f47(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_redeclared_signatures_checked */
extern void T82f262(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_FLATTENER.check_anchored_signatures */
extern void T442f40(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.check_signatures */
extern void T1295f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].wipe_out */
extern void T1520f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].wipe_out */
extern void T717f19(GE_context* ac, T0* C);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].keep_head */
extern void T1373f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].set_count */
extern void T1373f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].wipe_out */
extern void T1681f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_wipe_out */
extern void T1681f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_wipe_out */
extern void T1681f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_wipe_out */
extern void T1681f42(GE_context* ac, T0* C);
/* SPECIAL [ET_LIKE_FEATURE].keep_head */
extern void T1724f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LIKE_FEATURE].set_count */
extern void T1724f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_wipe_out */
extern void T1681f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].unset_found_item */
extern void T1681f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].move_all_cursors_after */
extern void T1681f39(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].set_next_cursor */
extern void T1763f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].set_after */
extern void T1763f7(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].wipe_out */
extern void T1601f12(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].move_all_cursors_after */
extern void T1601f15(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_next_cursor */
extern void T1726f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_after */
extern void T1726f10(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].reset */
extern void T1520f15(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat2a_error */
extern void T77f371(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat2a */
extern T0* T531c882(GE_context* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].forth */
extern void T1726f14(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_forth */
extern void T1601f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_position */
extern void T1726f15(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].add_traversing_cursor */
extern void T1601f19(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].remove_traversing_cursor */
extern void T1601f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].go_after */
extern void T1726f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_go_after */
extern void T1601f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].off */
extern T1 T1726f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].before */
extern T1 T1726f8(GE_context* ac, T0* C);
/* ET_CLASS.seeded_feature */
extern T0* T82f157(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].item */
extern T0* T1726f6(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_item */
extern T0* T1601f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].after */
extern T1 T1726f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].start */
extern void T1726f12(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_start */
extern void T1601f16(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].new_cursor */
extern T0* T1601f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].make */
extern T0* T1726c9(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T77f73(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat2a_error */
extern void T36f370(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T36f72(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1295f5(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.current_system */
extern T0* T1295f7(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1295f14(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].is_empty */
extern T1 T1601f6(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].sort */
extern void T1520f11(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].put_last */
extern void T1601f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].force */
extern void T1725f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LIKE_FEATURE].fill_with */
extern void T1724f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_FEATURE].extend */
extern void T1724f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].item */
extern T0* T1601f8(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].make */
extern T0* T1601c10(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].set_internal_cursor */
extern void T1601f14(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].make */
extern T0* T1725f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LIKE_FEATURE].make_empty */
extern T0* T1724c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].default_create */
extern T0* T1725c3(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.report_vffd7b_error */
extern void T77f305(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7b */
extern T0* T531c817(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T77f84(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd7b_error */
extern void T36f304(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T36f83(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7a_error */
extern void T77f304(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7a */
extern T0* T531c816(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd7a_error */
extern void T36f303(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1b_error */
extern void T77f303(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1b */
extern T0* T531c815(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1b_error */
extern void T36f302(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1a_error */
extern void T77f302(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1a */
extern T0* T531c814(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1a_error */
extern void T36f301(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav4a_error */
extern void T77f301(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav4a */
extern T0* T531c813(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav4a_error */
extern void T36f300(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav2a_error */
extern void T77f300(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav2a */
extern T0* T531c812(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav2a_error */
extern void T36f299(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd6a_error */
extern void T77f299(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd6a */
extern T0* T531c811(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd6a_error */
extern void T36f298(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd5a_error */
extern void T77f298(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd5a */
extern T0* T531c810(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T77f83(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd5a_error */
extern void T36f297(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T36f82(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd4a_error */
extern void T77f297(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd4a */
extern T0* T531c809(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T77f82(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd4a_error */
extern void T36f296(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T36f81(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T442f39(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_type */
extern void T1294f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.check_signature_vtct_validity */
extern void T442f38(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_vtct_validity */
extern void T1296f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.resolve_identifier_signature */
extern void T442f37(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrfa0a_error */
extern void T77f323(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrfa0a */
extern T0* T531c835(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T77f91(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrfa0a_error */
extern void T36f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T36f90(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item */
extern T0* T1283f39(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0a_error */
extern void T77f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0a */
extern T0* T531c834(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vreg_error */
extern T1 T77f32(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0a_error */
extern void T36f321(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vreg_error */
extern T1 T36f31(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_type */
extern void T1293f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_PROCEDURE].wipe_out */
extern void T729f16(GE_context* ac, T0* C);
/* SPECIAL [ET_PROCEDURE].keep_head */
extern void T860f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_PROCEDURE].set_count */
extern void T860f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_all_cursors_after */
extern void T729f23(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T1377f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_after */
extern void T1377f12(GE_context* ac, T0* C);
/* ET_CLASS.set_procedures */
extern void T82f237(GE_context* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.set_declared_count */
extern void T266f10(GE_context* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.put_first */
extern void T266f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].force */
extern void T861f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].fill_with */
extern void T860f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].extend */
extern void T860f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].item */
extern T0* T729f7(GE_context* ac, T0* C, T6 a1);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort */
extern void T1565f3(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort_with_comparator */
extern void T1565f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_PROCEDURE].swap */
extern void T729f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].replace */
extern void T729f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_SEEDED_PROCEDURE_COMPARATOR.less_than */
extern T1 T1704f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.procedure_sorter */
extern unsigned char ge925os25248;
extern T0* ge925ov25248;
extern T0* T442f26(GE_context* ac, T0* C);
/* DS_QUICK_SORTER [ET_PROCEDURE].make */
extern T0* T1565c2(GE_context* ac, T0* a1);
/* ET_SEEDED_PROCEDURE_COMPARATOR.make */
extern T0* T1704c2(GE_context* ac);
/* DS_ARRAYED_LIST [ET_QUERY].wipe_out */
extern void T733f16(GE_context* ac, T0* C);
/* SPECIAL [ET_QUERY].keep_head */
extern void T857f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_QUERY].set_count */
extern void T857f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_all_cursors_after */
extern void T733f23(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_next_cursor */
extern void T1378f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_after */
extern void T1378f12(GE_context* ac, T0* C);
/* ET_CLASS.set_queries */
extern void T82f236(GE_context* ac, T0* C, T0* a1);
/* ET_QUERY_LIST.set_declared_count */
extern void T265f10(GE_context* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.put_first */
extern void T265f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].force */
extern void T859f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_QUERY].fill_with */
extern void T857f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].extend */
extern void T857f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].item */
extern T0* T733f7(GE_context* ac, T0* C, T6 a1);
/* DS_QUICK_SORTER [ET_QUERY].subsort */
extern void T1564f3(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_QUERY].subsort_with_comparator */
extern void T1564f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_QUERY].swap */
extern void T733f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].replace */
extern void T733f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_SEEDED_QUERY_COMPARATOR.less_than */
extern T1 T1701f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.query_sorter */
extern unsigned char ge925os25247;
extern T0* ge925ov25247;
extern T0* T442f25(GE_context* ac, T0* C);
/* DS_QUICK_SORTER [ET_QUERY].make */
extern T0* T1564c2(GE_context* ac, T0* a1);
/* ET_SEEDED_QUERY_COMPARATOR.make */
extern T0* T1701c2(GE_context* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].back */
extern void T1283f73(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_back */
extern void T1283f85(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_before */
extern void T1487f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].force_last */
extern void T733f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].resize */
extern void T733f24(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].aliased_resized_area */
extern T0* T859f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUERY].aliased_resized_area */
extern T0* T857f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_capacity */
extern T6 T733f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].extendible */
extern T1 T733f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_last */
extern void T729f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].resize */
extern void T729f24(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].aliased_resized_area */
extern T0* T861f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PROCEDURE].aliased_resized_area */
extern T0* T860f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_capacity */
extern T6 T729f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].extendible */
extern T1 T729f10(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.flatten_feature */
extern void T442f36(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_inherited_feature */
extern void T442f48(GE_context* ac, T0* C, T0* a1);
extern T1 T442f48ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vdjr2b_error */
extern void T77f342(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2b */
extern T0* T531c854(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T77f102(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr2b_error */
extern void T36f341(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T36f101(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn2b_error */
extern void T77f341(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2b */
extern T0* T531c853(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T77f101(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn2b_error */
extern void T36f340(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T36f100(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2a_error */
extern void T77f340(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2a */
extern T0* T531c852(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr2a_error */
extern void T36f339(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn2a_error */
extern void T77f339(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2a */
extern T0* T531c851(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn2a_error */
extern void T36f338(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.process_replicated_seeds */
extern void T442f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_INHERITED_FEATURE.set_other_seeds */
extern void T1308f36(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.set_other_seeds */
extern void T1508f32(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_first_seed */
extern void T1308f35(GE_context* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_first_seed */
extern void T1508f31(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.replace */
extern void T1432f10(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.first */
extern T6 T1432f8(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.remove */
extern void T1432f11(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT_FEATURE.extended_name */
extern T0* T1307f20(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.make */
extern T0* T1235c7(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].wipe_out */
extern void T1301f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_wipe_out */
extern void T1301f66(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_wipe_out */
extern void T1301f65(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_wipe_out */
extern void T1301f64(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_wipe_out */
extern void T1301f63(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].unset_found_item */
extern void T1301f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].move_all_cursors_after */
extern void T1301f62(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_next_cursor */
extern void T1523f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_after */
extern void T1523f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].forth */
extern void T1301f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_forth */
extern void T1301f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].add_traversing_cursor */
extern void T1301f76(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_position */
extern void T1523f10(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove_traversing_cursor */
extern void T1301f75(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_item */
extern T6 T1301f30(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_LIST.put_first */
extern void T391f6(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_LIST.fixed_array */
extern unsigned char ge664os12638;
extern T0* ge664ov12638;
extern T0* T391f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_for_iteration */
extern T0* T1301f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_item */
extern T0* T1301f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1301f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].after */
extern T1 T1301f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_after */
extern T1 T1301f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].after */
extern T1 T1523f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].start */
extern void T1301f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_start */
extern void T1301f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_off */
extern T1 T1301f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].off */
extern T1 T1523f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].is_empty */
extern T1 T1301f34(GE_context* ac, T0* C);
/* ET_FEATURE_LIST.make_with_capacity */
extern T0* T391c5(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove */
extern void T1301f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove_position */
extern void T1301f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_put */
extern void T1301f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_put */
extern void T1301f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_keep_head */
extern void T1301f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_keep_head */
extern void T1301f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_put */
extern void T1301f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_put */
extern void T1301f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].move_cursors_forth */
extern void T1301f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].internal_set_key_equality_tester */
extern void T1301f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_item */
extern T6 T1301f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].hash_position */
extern T6 T1301f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1301f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].search_position */
extern void T1301f53(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENTS.same_clients */
extern T1 T1010f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.same_clients */
extern T1 T468f9(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.clients */
extern T0* T1307f19(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.has_rename */
extern T1 T1307f18(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmfn0c_error */
extern void T77f338(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0c */
extern T0* T531c850(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0c_error */
extern void T36f337(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.same_version */
extern T1 T1307f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].force_last */
extern void T1301f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].resize */
extern void T1301f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_resize */
extern void T1301f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1301f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_resize */
extern void T1301f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_resize */
extern void T1301f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_resize */
extern void T1301f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_modulus */
extern T6 T1301f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_capacity */
extern T6 T1301f25(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_no_redeclaration_validity */
extern void T442f53(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs4a_error */
extern void T77f353(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdrs4a */
extern T0* T531c865(GE_context* ac, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.feature_lower_name */
extern T0* T531f282(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T77f105(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs4a_error */
extern void T36f352(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T36f104(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_redefine */
extern T1 T1307f12(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_redefine_clause_validity */
extern void T442f56(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2b_error */
extern void T77f364(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2b */
extern T0* T531c876(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T77f111(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs2b_error */
extern void T36f363(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T36f110(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2a_error */
extern void T77f363(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2a */
extern T0* T531c875(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs2a_error */
extern void T36f362(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.check_undefine_clause_validity */
extern void T442f55(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2b_error */
extern void T77f362(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2b */
extern T0* T531c874(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T77f110(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus2b_error */
extern void T36f361(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T36f109(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2a_error */
extern void T77f361(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2a */
extern T0* T531c873(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdus2a_error */
extern void T36f360(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdus3a_error */
extern void T77f360(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus3a */
extern T0* T531c872(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T77f109(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus3a_error */
extern void T36f359(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T36f108(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_rename_clause_validity */
extern void T442f54(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4d_error */
extern void T77f359(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4d */
extern T0* T531c871(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T77f108(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc4d_error */
extern void T36f358(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T36f107(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4c_error */
extern void T77f358(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4c */
extern T0* T531c870(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4c_error */
extern void T36f357(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vfav4e_error */
extern void T77f357(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4e */
extern T0* T531c869(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4e_error */
extern void T36f356(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4b_error */
extern void T77f356(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4b */
extern T0* T531c868(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4b_error */
extern void T36f355(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4a_error */
extern void T77f355(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4a */
extern T0* T531c867(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4a_error */
extern void T36f354(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc5a_error */
extern void T77f354(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc5a */
extern T0* T531c866(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T77f107(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc5a_error */
extern void T36f353(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T36f106(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.is_replicated */
extern T1 T1308f20(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T442f27(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T442f27ac1(T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].wipe_out */
extern void T1289f16(GE_context* ac, T0* C);
/* SPECIAL [ET_CLIENT_LIST].keep_head */
extern void T1495f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_LIST].set_count */
extern void T1495f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_all_cursors_after */
extern void T1289f21(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_next_cursor */
extern void T1496f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_after */
extern void T1496f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].wipe_out */
extern void T1290f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_wipe_out */
extern void T1290f66(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_wipe_out */
extern void T1290f65(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_wipe_out */
extern void T1290f64(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_wipe_out */
extern void T1290f63(GE_context* ac, T0* C);
/* SPECIAL [ET_CLIENT].keep_head */
extern void T1500f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT].set_count */
extern void T1500f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].unset_found_item */
extern void T1290f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].move_all_cursors_after */
extern void T1290f62(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_next_cursor */
extern void T1498f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_after */
extern void T1498f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].back */
extern void T1290f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_back */
extern void T1290f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].add_traversing_cursor */
extern void T1290f72(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_position */
extern void T1498f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].remove_traversing_cursor */
extern void T1290f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_before */
extern void T1498f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_item */
extern T6 T1290f31(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENTS.put_first */
extern void T1010f17(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.fixed_array */
extern T0* T1010f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_for_iteration */
extern T0* T1290f22(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_item */
extern T0* T1290f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_item */
extern T0* T1290f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].before */
extern T1 T1290f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_before */
extern T1 T1290f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].before */
extern T1 T1498f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].finish */
extern void T1290f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_finish */
extern void T1290f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_off */
extern T1 T1290f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].off */
extern T1 T1498f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].is_empty */
extern T1 T1290f36(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].for_all */
extern T1 T1719f6(GE_context* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].forth */
extern void T1811f8(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_forth */
extern void T1719f12(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].forth */
extern void T1498f17(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_forth */
extern void T1290f75(GE_context* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].go_after */
extern void T1811f7(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_go_after */
extern void T1719f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].go_after */
extern void T1498f16(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_go_after */
extern void T1290f74(GE_context* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].item */
extern T0* T1811f4(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_item */
extern T0* T1719f7(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].key */
extern T0* T1498f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_key */
extern T0* T1290f40(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_item */
extern T0* T1290f35(GE_context* ac, T0* C, T6 a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].after */
extern T1 T1811f3(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].after */
extern T1 T1498f8(GE_context* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].start */
extern void T1811f6(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_start */
extern void T1719f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].start */
extern void T1498f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_start */
extern void T1290f73(GE_context* ac, T0* C, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].new_cursor */
extern T0* T1719f4(GE_context* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].make */
extern T0* T1811c5(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_cursor */
extern T0* T1290f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].make */
extern T0* T1498c10(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].keys */
extern T0* T1290f39(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].make */
extern T0* T1719c8(GE_context* ac, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].set_internal_cursor */
extern void T1719f9(GE_context* ac, T0* C, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].new_cursor_with_table_cursor */
extern T0* T1719f5(GE_context* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].make_with_table_cursor */
extern T0* T1811c9(GE_context* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].is_empty */
extern T1 T1289f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].force */
extern void T1290f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_put */
extern void T1290f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_put */
extern void T1290f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_put */
extern void T1290f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_item */
extern T6 T1290f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].hash_position */
extern T6 T1290f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].resize */
extern void T1290f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_resize */
extern void T1290f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].special_integer_ */
extern T0* T1290f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_resize */
extern void T1290f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_resize */
extern void T1290f68(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].aliased_resized_area */
extern T0* T1499f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT].aliased_resized_area */
extern T0* T1500f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_resize */
extern void T1290f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_modulus */
extern T6 T1290f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_capacity */
extern T6 T1290f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_put */
extern void T1290f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].force */
extern void T1499f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLIENT].fill_with */
extern void T1500f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT].extend */
extern void T1500f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].search_position */
extern void T1290f54(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.client */
extern T0* T1010f9(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENT.client */
extern T0* T497f4(GE_context* ac, T0* C);
/* ET_CLIENTS.item */
extern T0* T1010f11(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.client */
extern T0* T468f6(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.item */
extern T0* T468f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].remove */
extern void T1289f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_left */
extern void T1289f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_cursors_left */
extern void T1289f19(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_position */
extern void T1496f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].remove_last */
extern void T1289f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_last_cursors_after */
extern void T1289f22(GE_context* ac, T0* C);
/* ET_CLIENTS.is_none */
extern T1 T1010f8(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.is_none */
extern T1 T468f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].item */
extern T0* T1289f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].first */
extern T0* T1289f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].force_last */
extern void T1289f14(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].force */
extern void T1494f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLIENT_LIST].fill_with */
extern void T1495f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT_LIST].extend */
extern void T1495f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].resize */
extern void T1289f17(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1494f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1495f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].new_capacity */
extern T6 T1289f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].extendible */
extern T1 T1289f10(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_EXPORT.clients */
extern T0* T1071f9(GE_context* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.clients */
extern T0* T1221f6(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.has_feature_name */
extern T1 T1071f8(GE_context* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.has_feature_name */
extern T1 T1221f5(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.is_all */
extern T1 T1071f7(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.flatten_redeclared_feature */
extern void T442f47(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_precursor_validity */
extern void T442f52(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_feature_validity */
extern void T1300f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd3b_error */
extern void T77f337(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3b */
extern T0* T531c849(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_POSTCONDITIONS.position */
extern T0* T885f12(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.first */
extern T0* T885f14(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.is_empty */
extern T1 T885f13(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T77f100(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd3b_error */
extern void T36f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T36f99(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.is_ensure_then */
extern T1 T885f11(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd3a_error */
extern void T77f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3a */
extern T0* T531c848(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.position */
extern T0* T388f12(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.first */
extern T0* T388f14(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.is_empty */
extern T1 T388f13(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdrd3a_error */
extern void T36f335(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.is_require_else */
extern T1 T388f8(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_redeclaration_validity */
extern void T442f51(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd6a_error */
extern void T77f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6a */
extern T0* T531c864(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd6a_error */
extern void T36f351(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4b_error */
extern void T77f351(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4b */
extern T0* T531c863(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T77f106(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd4b_error */
extern void T36f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T36f105(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd4c_error */
extern void T77f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4c */
extern T0* T531c862(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4c_error */
extern void T36f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn0b_error */
extern void T77f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_ge_reported */
extern void T531f762(GE_context* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vmfn0b */
extern T0* T531c861(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0b_error */
extern void T36f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4a_error */
extern void T77f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4a */
extern T0* T531c860(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4a_error */
extern void T36f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrs4b_error */
extern void T77f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs4b */
extern T0* T531c859(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs4b_error */
extern void T36f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd5a_error */
extern void T77f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd5a */
extern T0* T531c858(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T77f104(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd5a_error */
extern void T36f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T36f103(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7c_error */
extern void T77f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7c */
extern T0* T531c857(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T77f103(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd7c_error */
extern void T36f344(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T36f102(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7a_error */
extern void T77f344(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7a */
extern T0* T531c856(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7a_error */
extern void T36f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd7b_error */
extern void T77f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7b */
extern T0* T531c855(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7b_error */
extern void T36f342(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REDECLARED_FEATURE.is_replicated */
extern T1 T1508f17(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_builtin_feature_validity */
extern void T442f49(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_feature_validity */
extern void T1299f14(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss3a_error */
extern void T77f321(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmss3a */
extern T0* T531c833(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T77f90(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss3a_error */
extern void T36f320(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T36f89(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_immediate_feature */
extern void T442f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T1283f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_before */
extern T1 T1283f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T1487f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].finish */
extern void T1283f72(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_finish */
extern void T1283f84(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_feature_adaptations */
extern void T442f35(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_parents_validity */
extern void T442f33(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.check_parents_validity */
extern void T1297f8(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_formal_parameters_validity */
extern void T442f32(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.check_formal_parameters_validity */
extern void T1298f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_constraint_validity */
extern void T1298f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.constraint */
extern T0* T1086f6(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.current_system */
extern T0* T442f23(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.set_fatal_error */
extern void T442f30(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.make */
extern T0* T442c28(GE_context* ac);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_map */
extern T0* T1301c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1301f40(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_sparse_container */
extern void T1301f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].set_internal_cursor */
extern void T1301f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_cursor */
extern T0* T1301f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].make */
extern T0* T1523c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_slots */
extern void T1301f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_clashes */
extern void T1301f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_key_storage */
extern void T1301f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_item_storage */
extern void T1301f42(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.make */
extern T0* T1300c9(GE_context* ac);
/* ET_PRECURSOR_CHECKER.dummy_feature */
extern unsigned char ge941os35040;
extern T0* ge941ov35040;
extern T0* T1300f5(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.current_system */
extern T0* T1300f6(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.make */
extern void T1300f9p1(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.tokens */
extern T0* T1300f4(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.make */
extern T0* T1299c13(GE_context* ac);
/* ET_BUILTIN_FEATURE_CHECKER.tokens */
extern T0* T1299f3(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern T0* T1298c8(GE_context* ac);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern void T1298f8p1(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.tokens */
extern T0* T1298f4(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.make */
extern T0* T1297c7(GE_context* ac);
/* ET_PARENT_CHECKER2.make */
extern void T1297f7p1(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.tokens */
extern T0* T1297f4(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern T0* T1295c8(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].make_default */
extern T0* T1520c10(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].make */
extern void T1520f14(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_map */
extern T0* T1681c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_with_equality_testers */
extern void T1681f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_sparse_container */
extern void T1681f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].set_internal_cursor */
extern void T1681f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].new_cursor */
extern T0* T1681f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].make */
extern T0* T1763c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_slots */
extern void T1681f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].new_modulus */
extern T6 T1681f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_clashes */
extern void T1681f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_key_storage */
extern void T1681f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_item_storage */
extern void T1681f55(GE_context* ac, T0* C, T6 a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern void T1295f8p1(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1295f6(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern T0* T1294c5(GE_context* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern void T1294f5p1(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.tokens */
extern T0* T1294f3(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern T0* T1293c7(GE_context* ac);
/* ET_IDENTIFIER_TYPE_RESOLVER.tokens */
extern T0* T1293f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_map */
extern T0* T1290c41(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_with_equality_testers */
extern void T1290f42(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_sparse_container */
extern void T1290f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].set_internal_cursor */
extern void T1290f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_slots */
extern void T1290f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_clashes */
extern void T1290f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_key_storage */
extern void T1290f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_item_storage */
extern void T1290f44(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].make */
extern T0* T1499f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT].make_empty */
extern T0* T1500c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].default_create */
extern T0* T1499c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].make */
extern T0* T1289c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].set_internal_cursor */
extern void T1289f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].new_cursor */
extern T0* T1289f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].make */
extern T0* T1496c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].make */
extern T0* T1494f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_LIST].make_empty */
extern T0* T1495c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].default_create */
extern T0* T1494c3(GE_context* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_key_equality_tester */
extern void T1286f35(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.alias_name_tester */
extern T0* T442f20(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_map */
extern T0* T1286c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_with_equality_testers */
extern void T1286f36(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_sparse_container */
extern void T1286f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_internal_cursor */
extern void T1286f43(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T1286f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1493c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_slots */
extern void T1286f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_clashes */
extern void T1286f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_key_storage */
extern void T1286f39(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_item_storage */
extern void T1286f38(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].make */
extern T0* T729c15(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].set_internal_cursor */
extern void T729f22(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_cursor */
extern T0* T729f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].make */
extern T0* T1377c9(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].make */
extern T0* T733c15(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].set_internal_cursor */
extern void T733f22(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_cursor */
extern T0* T733f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].make */
extern T0* T1378c9(GE_context* ac, T0* a1);
/* ET_FEATURE_FLATTENER.feature_name_tester */
extern T0* T442f24(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.make */
extern void T442f28p1(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.error_handler */
extern T0* T442f22(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.process_class */
extern void T441f12(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.internal_process_class */
extern void T441f14(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1a_error */
extern void T77f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1a */
extern T0* T531c750(GE_context* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].after */
extern T1 T1527f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].forth */
extern void T1527f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_forth */
extern void T1316f36(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].add_traversing_cursor */
extern void T1316f37(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_next_cursor */
extern void T1527f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_traversing_cursor */
extern void T1316f38(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].item */
extern T0* T1527f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_item */
extern T0* T1316f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].start */
extern void T1527f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_start */
extern void T1316f35(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_after */
extern void T1527f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].off */
extern T1 T1527f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].before */
extern T1 T1527f8(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T77f35(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr1a_error */
extern void T36f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T36f34(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].first */
extern T0* T1316f9(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.set_parents_inheritance_error */
extern void T441f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].wipe_out */
extern void T1279f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].wipe_out */
extern void T1482f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_wipe_out */
extern void T1482f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_wipe_out */
extern void T1482f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_wipe_out */
extern void T1482f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_wipe_out */
extern void T1482f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].unset_found_item */
extern void T1482f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].move_all_cursors_after */
extern void T1482f41(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_next_cursor */
extern void T1645f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_after */
extern void T1645f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].wipe_out */
extern void T1316f24(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_all_cursors_after */
extern void T1316f31(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].reset */
extern void T1279f17(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].is_empty */
extern T1 T1316f8(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.check_parents_validity */
extern void T441f18(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.check_parents_validity */
extern void T1281f9(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.check_formal_parameters_validity */
extern void T441f17(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameters_validity */
extern void T1282f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_cycles */
extern void T1282f15(GE_context* ac, T0* C);
extern T1 T1282f15ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3h_error */
extern void T77f243(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3h */
extern T0* T531c761(GE_context* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].after */
extern T1 T1647f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].forth */
extern void T1647f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_forth */
extern void T1486f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_position */
extern void T1647f14(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].add_traversing_cursor */
extern void T1486f19(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1647f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].remove_traversing_cursor */
extern void T1486f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].item */
extern T0* T1647f4(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_item */
extern T0* T1486f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].start */
extern void T1647f12(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_start */
extern void T1486f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_after */
extern void T1647f10(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].is_empty */
extern T1 T1486f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].off */
extern T1 T1647f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].before */
extern T1 T1647f8(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1486f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].make */
extern T0* T1647c9(GE_context* ac, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].first */
extern T0* T1486f8(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T77f44(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg3h_error */
extern void T36f242(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T36f43(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].wipe_out */
extern void T1485f12(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].wipe_out */
extern void T1646f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_wipe_out */
extern void T1646f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_wipe_out */
extern void T1646f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_wipe_out */
extern void T1646f41(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].keep_head */
extern void T1087f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].set_count */
extern void T1087f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_wipe_out */
extern void T1646f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].unset_found_item */
extern void T1646f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1646f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1761f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].set_after */
extern void T1761f7(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].wipe_out */
extern void T1486f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1486f15(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].reset */
extern void T1485f14(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint_base_type */
extern void T1214f80(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.set_constraint_base_type */
extern void T1086f78(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].item */
extern T0* T1486f7(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3e_error */
extern void T77f242(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3e */
extern T0* T531c759(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3e_error */
extern void T36f241(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_CHECKER1.ise_6_1_latest */
extern unsigned char ge191os2000;
extern T0* ge191ov2000;
extern T0* T1282f10(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.current_system */
extern T0* T1282f9(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].sort */
extern void T1485f11(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].put_last */
extern void T1486f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].force */
extern void T1085f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].fill_with */
extern void T1087f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].extend */
extern void T1087f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].make */
extern T0* T1486c11(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].set_internal_cursor */
extern void T1486f14(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].make */
extern T0* T1085f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].make_empty */
extern T0* T1087c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].default_create */
extern T0* T1085c3(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].count */
extern T6 T1485f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_validity */
extern void T1282f14(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg2a_error */
extern void T77f241(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg2a */
extern T0* T531c758(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T77f43(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg2a_error */
extern void T36f240(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T36f42(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg1a_error */
extern void T77f240(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg1a */
extern T0* T531c757(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T77f42(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg1a_error */
extern void T36f239(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T36f41(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.error_handler */
extern T0* T1282f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_fatal_error */
extern void T1282f13(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.current_universe */
extern T0* T1282f6(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.set_ancestors */
extern void T441f16(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_ancestors */
extern void T82f242(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].wipe_out */
extern void T1280f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_wipe_out */
extern void T1280f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_wipe_out */
extern void T1280f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_wipe_out */
extern void T1280f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_wipe_out */
extern void T1280f44(GE_context* ac, T0* C);
/* SPECIAL [ET_BASE_TYPE].keep_head */
extern void T867f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].set_count */
extern void T867f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].unset_found_item */
extern void T1280f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].move_all_cursors_after */
extern void T1280f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_next_cursor */
extern void T1425f13(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_after */
extern void T1425f12(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].forth */
extern void T1425f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_forth */
extern void T1280f65(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].add_traversing_cursor */
extern void T1280f67(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_position */
extern void T1425f14(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].remove_traversing_cursor */
extern void T1280f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_item */
extern T6 T1280f25(GE_context* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_LIST.put_last */
extern void T395f8(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].force */
extern void T868f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].fill_with */
extern void T867f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].extend */
extern void T867f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].item */
extern T0* T1425f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_item */
extern T0* T1280f34(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_item */
extern T0* T1280f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].after */
extern T1 T1425f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].start */
extern void T1425f10(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_start */
extern void T1280f64(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_off */
extern T1 T1280f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].off */
extern T1 T1425f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].is_empty */
extern T1 T1280f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_cursor */
extern T0* T1280f20(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].make */
extern T0* T1425c9(GE_context* ac, T0* a1);
/* ET_ANCESTOR_BUILDER.add_parent_to_ancestors */
extern void T441f21(GE_context* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.item */
extern T0* T395f5(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].force_new */
extern void T1280f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_put */
extern void T1280f53(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_put */
extern void T1280f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_put */
extern void T1280f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_put */
extern void T1280f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_item */
extern T6 T1280f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].hash_position */
extern T6 T1280f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].resize */
extern void T1280f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_resize */
extern void T1280f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].special_integer_ */
extern T0* T1280f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_resize */
extern void T1280f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_resize */
extern void T1280f56(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].aliased_resized_area */
extern T0* T868f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BASE_TYPE].aliased_resized_area */
extern T0* T867f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_item */
extern T0* T1280f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_resize */
extern void T1280f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_modulus */
extern T6 T1280f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_capacity */
extern T6 T1280f23(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvagp0a_error */
extern void T77f238(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvagp0a */
extern T0* T531c756(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T77f40(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvagp0a_error */
extern void T36f237(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T36f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].found_item */
extern T0* T1280f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].found */
extern T1 T1280f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].search */
extern void T1280f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].search_position */
extern void T1280f48(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso2a_error */
extern void T77f237(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso2a */
extern T0* T531c755(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T77f39(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso2a_error */
extern void T36f236(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T36f38(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtct0a_error */
extern void T77f236(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtct0a */
extern T0* T531c754(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtct_error */
extern T1 T77f38(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtct0a_error */
extern void T36f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtct_error */
extern T1 T36f37(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso1a_error */
extern void T77f235(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso1a */
extern T0* T531c753(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T77f37(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso1a_error */
extern void T36f234(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T36f36(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhay0a_error */
extern void T77f234(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vhay0a */
extern T0* T531c752(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhay_error */
extern T1 T77f36(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhay0a_error */
extern void T36f233(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vhay_error */
extern T1 T36f35(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1b_error */
extern void T77f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1b */
extern T0* T531c751(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr1b_error */
extern void T36f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_CLASS].item */
extern T0* T1316f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].sort */
extern void T1279f12(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_class_to_sorter */
extern void T441f15(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.add_parents_to_sorter */
extern void T441f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force_relation */
extern void T1279f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put_indexed_relation */
extern void T1279f19(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].count */
extern T6 T1279f8(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].index_of */
extern T6 T1279f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found_item */
extern T6 T1482f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_item */
extern T6 T1482f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found */
extern T1 T1482f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search */
extern void T1482f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search_position */
extern void T1482f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].hash_position */
extern T6 T1482f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_item */
extern T0* T1482f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_item */
extern T6 T1482f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_item */
extern T6 T1482f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force */
extern void T1279f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put */
extern void T1279f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].put_new */
extern void T1482f37(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_put */
extern void T1482f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_put */
extern void T1482f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_put */
extern void T1482f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_put */
extern void T1482f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].resize */
extern void T1482f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_resize */
extern void T1482f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].special_integer_ */
extern T0* T1482f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_resize */
extern void T1482f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_resize */
extern void T1482f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_resize */
extern void T1482f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_modulus */
extern T6 T1482f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].capacity */
extern T6 T1279f9(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.current_universe */
extern T0* T441f10(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has */
extern T1 T1279f7(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].has */
extern T1 T1482f21(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.current_system */
extern T0* T441f9(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.set_fatal_error */
extern void T441f13(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.make */
extern T0* T441c11(GE_context* ac);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern T0* T1282c11(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make_default */
extern T0* T1485c10(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make */
extern void T1485f13(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_map */
extern T0* T1646c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_with_equality_testers */
extern void T1646f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_sparse_container */
extern void T1646f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].set_internal_cursor */
extern void T1646f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1646f26(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].make */
extern T0* T1761c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_slots */
extern void T1646f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].new_modulus */
extern T6 T1646f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_clashes */
extern void T1646f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_key_storage */
extern void T1646f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_item_storage */
extern void T1646f53(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern void T1282f11p1(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.tokens */
extern T0* T1282f8(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.make */
extern T0* T1281c8(GE_context* ac);
/* ET_PARENT_CHECKER1.tokens */
extern T0* T1281f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_map */
extern T0* T1280c37(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_with_equality_testers */
extern void T1280f41(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_sparse_container */
extern void T1280f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].set_internal_cursor */
extern void T1280f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_slots */
extern void T1280f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_clashes */
extern void T1280f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_key_storage */
extern void T1280f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_item_storage */
extern void T1280f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make_default */
extern T0* T1279c11(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make */
extern void T1279f16(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_map */
extern T0* T1482c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_with_equality_testers */
extern void T1482f40(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_sparse_container */
extern void T1482f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].set_internal_cursor */
extern void T1482f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_cursor */
extern T0* T1482f32(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].make */
extern T0* T1645c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_slots */
extern void T1482f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_clashes */
extern void T1482f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_key_storage */
extern void T1482f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_item_storage */
extern void T1482f56(GE_context* ac, T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.make */
extern void T441f11p1(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.tokens */
extern T0* T441f7(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.error_handler */
extern T0* T441f8(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.process_class */
extern void T440f7(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.internal_process_class */
extern void T440f9(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.check_cluster_dependence_constraints */
extern void T440f10(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].forth */
extern void T1330f12(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].cursor_forth */
extern void T880f61(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].add_traversing_cursor */
extern void T880f64(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_next_cursor */
extern void T1330f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_position */
extern void T1330f15(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].remove_traversing_cursor */
extern void T880f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_after */
extern void T1330f13(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gcdep_error */
extern void T77f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_cluster_error */
extern void T77f226(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_ERROR.make_gcdep */
extern T0* T1543c26(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].forth */
extern void T1644f12(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_forth */
extern void T1461f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].add_traversing_cursor */
extern void T1461f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_next_cursor */
extern void T1644f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_position */
extern void T1644f10(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].remove_traversing_cursor */
extern void T1461f58(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_after */
extern void T1644f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_item */
extern T6 T1461f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].key */
extern T0* T1644f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_key */
extern T0* T1461f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_item */
extern T0* T1461f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].after */
extern T1 T1644f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].start */
extern void T1644f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_start */
extern void T1461f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_off */
extern T1 T1461f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].off */
extern T1 T1644f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].new_cursor */
extern T0* T1461f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].make */
extern T0* T1644c9(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].is_empty */
extern T1 T1461f23(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T77f81(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcdep_error */
extern void T36f295(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_cluster_error */
extern void T36f225(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T36f80(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcpro_error */
extern void T77f295(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLUSTER_ERROR.make_gcpro */
extern T0* T1543c25(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T77f80(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcpro_error */
extern void T36f294(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T36f79(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T1 T856f10(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T856f10ac1(T0* a1, T0* a2, T0* a3);
/* Creation of agent #2 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T856f10ac2(T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T856f10ac3(T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T856f10ac4(T0* a1, T0* a2);
extern T1 T856f10ot1(T0* a1, T0** a2);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.matches_pathname */
extern T1 T856f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* LX_DFA_WILDCARD.recognizes */
extern T1 T1460f12(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.longest_end_position */
extern T6 T1460f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* LX_DFA_WILDCARD.is_compiled */
extern T1 T1460f15(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].there_exists */
extern T1 T136f21(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_ */
extern T0* T856f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].there_exists */
extern T1 T1461f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_item */
extern T0* T1461f30(GE_context* ac, T0* C, T6 a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.group_pathname */
extern T0* T856f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.replace_backslashes */
extern void T856f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].item */
extern T0* T1330f4(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].cursor_item */
extern T0* T880f34(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].after */
extern T1 T1330f7(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].start */
extern void T1330f10(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].cursor_start */
extern void T880f55(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].cursor_off */
extern T1 T880f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].off */
extern T1 T1330f8(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].is_empty */
extern T1 T880f27(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].new_cursor */
extern T0* T880f21(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].make */
extern T0* T1330c9(GE_context* ac, T0* a1);
/* ET_CLASS.first_non_override_overridden_class */
extern T0* T82f150(GE_context* ac, T0* C);
/* ET_CLASS.master_class_in_universe */
extern T0* T82f167(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.scm_mapped_cluster */
extern T0* T440f5(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.current_system */
extern T0* T440f4(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.set_fatal_error */
extern void T440f8(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.make */
extern T0* T440c6(GE_context* ac);
/* ET_PROVIDER_CHECKER.tokens */
extern T0* T440f2(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.error_handler */
extern T0* T440f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_class */
extern void T439f943(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.reset_preparsed */
extern void T82f222(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_class */
extern void T788f5(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaab_error */
extern void T36f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaab */
extern T0* T1543c23(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T36f28(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcaab_error */
extern void T77f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T77f29(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvscn1b_error */
extern void T36f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvscn1b */
extern T0* T531c744(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T36f27(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvscn1b_error */
extern void T77f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T77f28(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.current_system */
extern T0* T439f687(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.syntax_error */
extern T1 T439f680(GE_context* ac, T0* C);
/* ET_CLASS.set_filename */
extern void T82f221(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_file */
extern void T439f947(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_EIFFEL_PARSER.yyparse */
extern void T439f952(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_pop_last_value */
extern void T439f964(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_push_error_value */
extern void T439f963(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action */
extern void T439f962(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_801_1000 */
extern void T439f989(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_917 */
extern void T439f1922(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_counter */
extern void T439f1931(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].force */
extern void T889f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].resize */
extern void T889f14(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].new_capacity */
extern T6 T889f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].extendible */
extern T1 T889f6(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_916 */
extern void T439f1921(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_915 */
extern void T439f1920(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_914 */
extern void T439f1919(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].force */
extern void T934f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_REAL_CONSTANT].fill_with */
extern void T936f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_REAL_CONSTANT].extend */
extern void T936f10(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_cast_type */
extern void T1204f38(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_cast_type */
extern void T1203f38(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_target_type */
extern T0* T402f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.ast_factory */
extern T0* T439f686(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_913 */
extern void T439f1918(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_sign */
extern void T1204f37(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_sign */
extern void T1203f37(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_912 */
extern void T439f1917(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_911 */
extern void T439f1916(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_910 */
extern void T439f1915(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_909 */
extern void T439f1914(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_908 */
extern void T439f1913(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_907 */
extern void T439f1912(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].force */
extern void T926f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].fill_with */
extern void T928f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].extend */
extern void T928f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_906 */
extern void T439f1911(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_905 */
extern void T439f1910(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_904 */
extern void T439f1909(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_903 */
extern void T439f1908(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_902 */
extern void T439f1907(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_901 */
extern void T439f1906(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_900 */
extern void T439f1905(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].force */
extern void T912f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].fill_with */
extern void T914f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].extend */
extern void T914f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_899 */
extern void T439f1904(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_898 */
extern void T439f1903(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].force */
extern void T918f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].fill_with */
extern void T920f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].extend */
extern void T920f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_897 */
extern void T439f1902(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T918f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T920f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_896 */
extern void T439f1901(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_895 */
extern void T439f1900(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_894 */
extern void T439f1899(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_893 */
extern void T439f1898(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].force */
extern void T932f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING].fill_with */
extern void T933f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING].extend */
extern void T933f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_892 */
extern void T439f1897(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T932f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T933f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_891 */
extern void T439f1896(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_890 */
extern void T439f1895(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_889 */
extern void T439f1894(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_888 */
extern void T439f1893(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_887 */
extern void T439f1892(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_886 */
extern void T439f1891(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_885 */
extern void T439f1890(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_884 */
extern void T439f1889(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_883 */
extern void T439f1888(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_882 */
extern void T439f1887(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_881 */
extern void T439f1886(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_880 */
extern void T439f1885(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_879 */
extern void T439f1884(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_878 */
extern void T439f1883(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_877 */
extern void T439f1882(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_876 */
extern void T439f1881(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_875 */
extern void T439f1880(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_874 */
extern void T439f1879(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_873 */
extern void T439f1878(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_872 */
extern void T439f1877(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_871 */
extern void T439f1876(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_870 */
extern void T439f1875(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_869 */
extern void T439f1874(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_868 */
extern void T439f1873(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_867 */
extern void T439f1872(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_866 */
extern void T439f1871(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].force */
extern void T966f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].fill_with */
extern void T967f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].extend */
extern void T967f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T966f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T967f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_typed_open_argument */
extern T0* T402f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.make */
extern T0* T1275c9(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.question_mark_symbol */
extern unsigned char ge807os11709;
extern T0* ge807ov11709;
extern T0* T81f769(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.make */
extern T0* T954c71(GE_context* ac);
/* ET_QUESTION_MARK_SYMBOL.make_leaf */
extern void T954f73(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.tokens */
extern T0* T954f12(GE_context* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.tokens */
extern T0* T1275f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_865 */
extern void T439f1870(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_864 */
extern void T439f1869(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_863 */
extern void T439f1868(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].force */
extern void T968f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].fill_with */
extern void T970f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].extend */
extern void T970f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T968f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T970f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.increment_counter */
extern void T439f1932(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].replace */
extern void T889f12(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_argument_operand_comma */
extern T0* T402f321(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_862 */
extern void T439f1867(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].force */
extern void T971f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].fill_with */
extern void T973f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].extend */
extern void T973f10(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put_first */
extern void T972f12(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.fixed_array */
extern unsigned char ge465os12638;
extern T0* ge465ov12638;
extern T0* T972f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T968c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_861 */
extern void T439f1866(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T971f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T973f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_argument_operands */
extern T0* T402f320(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern T0* T972c11(GE_context* ac, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern void T972f11p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T968f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make_empty */
extern T0* T970c5(GE_context* ac, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.tokens */
extern T0* T972f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.counter_value */
extern T6 T439f859(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_symbol */
extern T0* T439f861(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].item */
extern T0* T893f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_860 */
extern void T439f1865(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_859 */
extern void T439f1864(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_symbol */
extern void T439f1935(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].force */
extern void T893f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].force */
extern void T908f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL].fill_with */
extern void T909f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL].extend */
extern void T909f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].resize */
extern void T893f12(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T908f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T909f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].new_capacity */
extern T6 T893f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].extendible */
extern T1 T893f6(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_858 */
extern void T439f1863(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_counter */
extern void T439f1929(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_symbol */
extern void T439f1934(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].remove */
extern void T893f10(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_SYMBOL].keep_head */
extern void T909f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL].set_count */
extern void T909f9(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_857 */
extern void T439f1862(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_856 */
extern void T439f1861(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_855 */
extern void T439f1860(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].force */
extern void T974f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_TARGET].fill_with */
extern void T975f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_TARGET].extend */
extern void T975f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T974f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T975f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_open_target */
extern T0* T402f319(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AGENT_OPEN_TARGET.make */
extern T0* T1274c8(GE_context* ac, T0* a1);
/* ET_AGENT_OPEN_TARGET.tokens */
extern T0* T1274f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_854 */
extern void T439f1859(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_853 */
extern void T439f1858(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_852 */
extern void T439f1857(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_851 */
extern void T439f1856(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_agent_identifier_target */
extern T0* T439f904(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_across_cursor */
extern void T181f120(GE_context* ac, T0* C, T1 a1);
/* ET_ACROSS_COMPONENT_LIST.across_component */
extern T0* T1194f3(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_COMPONENT_LIST.index_of_name */
extern T6 T1194f5(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_object_test_local */
extern void T181f119(GE_context* ac, T0* C, T1 a1);
/* ET_OBJECT_TEST_LIST.index_of_name */
extern T6 T1193f4(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.set_used */
extern void T1557f9(GE_context* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE.set_used */
extern void T1125f8(GE_context* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.local_variable */
extern T0* T332f4(GE_context* ac, T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.item */
extern T0* T332f7(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_local */
extern void T181f118(GE_context* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.index_of */
extern T6 T332f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.set_used */
extern void T1556f9(GE_context* ac, T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT.set_used */
extern void T264f8(GE_context* ac, T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT_LIST.index_of */
extern T6 T261f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_850 */
extern void T439f1855(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_start_closure */
extern void T439f1943(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].force */
extern void T895f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].force */
extern void T1477f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].fill_with */
extern void T1476f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].extend */
extern void T1476f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].resize */
extern void T895f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].aliased_resized_area */
extern T0* T1477f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].aliased_resized_area */
extern T0* T1476f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].new_capacity */
extern T6 T895f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].extendible */
extern T1 T895f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].is_empty */
extern T1 T895f6(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].force */
extern void T894f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].force */
extern void T1475f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].fill_with */
extern void T1474f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].extend */
extern void T1474f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].resize */
extern void T894f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1475f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1474f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].new_capacity */
extern T6 T894f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].extendible */
extern T1 T894f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].is_empty */
extern T1 T894f6(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T891f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T1130f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].fill_with */
extern void T1131f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].extend */
extern void T1131f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].resize */
extern void T891f13(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T1130f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T1131f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].new_capacity */
extern T6 T891f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].extendible */
extern T1 T891f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].is_empty */
extern T1 T891f5(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T890f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T1083f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].fill_with */
extern void T1084f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].extend */
extern void T1084f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].resize */
extern void T890f13(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1083f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1084f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].new_capacity */
extern T6 T890f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].extendible */
extern T1 T890f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].is_empty */
extern T1 T890f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_849 */
extern void T439f1854(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_848 */
extern void T439f1853(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].force */
extern void T724f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].fill_with */
extern void T726f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].extend */
extern void T726f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].aliased_resized_area */
extern T0* T724f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_AGENT].aliased_resized_area */
extern T0* T726f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.register_inline_agent */
extern void T439f1949(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_end_closure */
extern void T439f1951(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].remove */
extern void T895f13(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].keep_head */
extern void T1476f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].set_count */
extern void T1476f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].item */
extern T0* T895f7(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].remove */
extern void T894f13(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].keep_head */
extern void T1474f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].set_count */
extern void T1474f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].item */
extern T0* T894f7(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].remove */
extern void T891f12(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].keep_head */
extern void T1131f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].set_count */
extern void T1131f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].item */
extern T0* T891f6(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].remove */
extern void T890f12(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].keep_head */
extern void T1084f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].set_count */
extern void T1084f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].item */
extern T0* T890f6(GE_context* ac, T0* C);
/* ET_ACROSS_COMPONENT_LIST.cloned_across_component_list */
extern T0* T1194f4(GE_context* ac, T0* C);
/* ET_ACROSS_COMPONENT_LIST.put_last */
extern void T1194f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT].force */
extern void T755f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ACROSS_COMPONENT].fill_with */
extern void T754f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACROSS_COMPONENT].extend */
extern void T754f10(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_COMPONENT_LIST.fixed_array */
extern unsigned char ge631os7522;
extern T0* ge631ov7522;
extern T0* T1194f6(GE_context* ac, T0* C);
/* ET_ACROSS_COMPONENT_LIST.make_with_capacity */
extern T0* T1194c9(GE_context* ac, T6 a1);
/* ET_OBJECT_TEST_LIST.cloned_object_test_list */
extern T0* T1193f3(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_LIST.put_last */
extern void T1193f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].force */
extern void T749f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NAMED_OBJECT_TEST].fill_with */
extern void T748f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NAMED_OBJECT_TEST].extend */
extern void T748f10(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.fixed_array */
extern unsigned char ge683os7522;
extern T0* ge683ov7522;
extern T0* T1193f5(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_LIST.make_with_capacity */
extern T0* T1193c9(GE_context* ac, T6 a1);
/* ET_AST_FACTORY.new_external_procedure_inline_agent */
extern T0* T402f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1273f43(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_alias_clause */
extern void T1273f42(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1273f41(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1273f40(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make */
extern T0* T1273c34(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_procedure */
extern void T1273f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1273f45(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.make */
extern T0* T1591c5(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.agent_keyword */
extern unsigned char ge807os11718;
extern T0* ge807ov11718;
extern T0* T81f757(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.make */
extern T0* T903c13(GE_context* ac);
/* ET_AGENT_KEYWORD.make_token */
extern void T903f15(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_KEYWORD.make_leaf */
extern void T903f16(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.tokens */
extern T0* T903f7(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1273f15(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_external_language */
extern T0* T402f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_847 */
extern void T439f1852(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_846 */
extern void T439f1851(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_procedure_inline_agent */
extern T0* T402f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T1272f48(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1272f47(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_compound */
extern void T1272f46(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_keys */
extern void T1272f45(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_locals */
extern void T1272f44(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1272f43(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1272f42(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make */
extern T0* T1272c36(GE_context* ac, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1272f49(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1272f16(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_compound */
extern T0* T402f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_COMPOUND.set_keyword */
extern void T331f10(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.once_keyword */
extern unsigned char ge807os11759;
extern T0* ge807ov11759;
extern T0* T81f625(GE_context* ac, T0* C);
/* ET_KEYWORD.make_once */
extern T0* T396c46(GE_context* ac);
/* ET_AST_FACTORY.tokens */
extern T0* T402f353(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_845 */
extern void T439f1850(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_844 */
extern void T439f1849(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_procedure_inline_agent */
extern T0* T402f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T1271f46(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1271f45(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_compound */
extern void T1271f44(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_locals */
extern void T1271f43(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1271f42(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1271f41(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.make */
extern T0* T1271c35(GE_context* ac, T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1271f47(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1271f16(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_843 */
extern void T439f1848(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_842 */
extern void T439f1847(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_external_function_inline_agent */
extern T0* T402f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1270f44(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_alias_clause */
extern void T1270f43(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1270f42(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1270f41(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make */
extern T0* T1270c35(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_function */
extern void T1270f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1270f46(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1270f16(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_colon_type */
extern T0* T402f167(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_841 */
extern void T439f1846(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_840 */
extern void T439f1845(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_function_inline_agent */
extern T0* T402f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T1269f49(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1269f48(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_compound */
extern void T1269f47(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_keys */
extern void T1269f46(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_locals */
extern void T1269f45(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1269f44(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1269f43(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make */
extern T0* T1269c37(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1269f50(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1269f17(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_839 */
extern void T439f1844(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_838 */
extern void T439f1843(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_function_inline_agent */
extern T0* T402f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_DO_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T1268f47(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1268f46(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_compound */
extern void T1268f45(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_locals */
extern void T1268f44(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1268f43(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1268f42(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.make */
extern T0* T1268c36(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1268f48(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1268f17(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_837 */
extern void T439f1842(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_836 */
extern void T439f1841(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_inline_agent_actual_arguments */
extern void T439f1948(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_835 */
extern void T439f1840(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].force */
extern void T987f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CALL_AGENT].fill_with */
extern void T989f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CALL_AGENT].extend */
extern void T989f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T987f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T989f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_call_agent */
extern T0* T402f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_agent_keyword */
extern void T988f32(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.make */
extern T0* T988c31(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.tokens */
extern T0* T988f9(GE_context* ac, T0* C);
/* ET_CALL_AGENT.make_unqualified */
extern T0* T988c28(GE_context* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_dot_feature_name */
extern T0* T402f244(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_834 */
extern void T439f1839(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_833 */
extern void T439f1838(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].force */
extern void T956f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].fill_with */
extern void T958f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].extend */
extern void T958f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T956f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T958f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_across_expression_header */
extern T0* T439f903(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_COMPONENT_LIST.force_last */
extern void T1194f11(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_COMPONENT_LIST.resize */
extern void T1194f13(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT].aliased_resized_area */
extern T0* T755f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACROSS_COMPONENT].aliased_resized_area */
extern T0* T754f4(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_COMPONENT_LIST.new_capacity */
extern T6 T1194f8(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_COMPONENT_LIST.capacity */
extern T6 T1194f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_component_list */
extern T0* T439f920(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_across_all_expression */
extern T0* T402f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_ACROSS_EXPRESSION.set_variant_part */
extern void T957f38(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_invariant_part */
extern void T957f37(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.make_all */
extern T0* T957c31(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_EXPRESSION.create_unfolded_form */
extern void T957f41(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.across_keyword */
extern unsigned char ge807os11717;
extern T0* ge807ov11717;
extern T0* T81f756(GE_context* ac, T0* C);
/* ET_KEYWORD.make_across */
extern T0* T396c52(GE_context* ac);
/* ET_ACROSS_EXPRESSION.tokens */
extern T0* T957f16(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.true_keyword */
extern unsigned char ge807os11775;
extern T0* ge807ov11775;
extern T0* T81f245(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.make */
extern T0* T1206c32(GE_context* ac);
/* ET_TRUE_CONSTANT.make_token */
extern void T1206f36(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.make_leaf */
extern void T1206f37(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.tokens */
extern T0* T1206f11(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.tokens */
extern T0* T439f664(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_832 */
extern void T439f1837(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_all_expression */
extern T0* T439f902(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACROSS_EXPRESSION.set_end_keyword */
extern void T957f39(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_all */
extern void T957f40(GE_context* ac, T0* C, T1 a1);
/* ET_ACROSS_EXPRESSION.set_iteration_conditional */
extern void T957f35(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_until_conditional */
extern void T957f34(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_conditional */
extern T0* T402f259(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_KEYWORD_EXPRESSION.make */
extern T0* T1560c3(GE_context* ac, T0* a1, T0* a2);
/* ET_KEYWORD.is_inspect */
extern T1 T396f25(GE_context* ac, T0* C);
/* ET_KEYWORD.is_if */
extern T1 T396f24(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_831 */
extern void T439f1836(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_some_expression */
extern T0* T439f901(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACROSS_EXPRESSION.set_some */
extern void T957f36(GE_context* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_830 */
extern void T439f1835(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_829 */
extern void T439f1834(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_828 */
extern void T439f1833(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_827 */
extern void T439f1832(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_826 */
extern void T439f1831(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_825 */
extern void T439f1830(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].force */
extern void T1171f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].fill_with */
extern void T1173f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].extend */
extern void T1173f10(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.put_first */
extern void T1172f29(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].force */
extern void T1075f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].fill_with */
extern void T1077f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].extend */
extern void T1077f10(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.fixed_array */
extern unsigned char ge828os12638;
extern T0* ge828ov12638;
extern T0* T1172f13(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].default_create */
extern T0* T1075c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_824 */
extern void T439f1829(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T1171f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T1173f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_strip_expression */
extern T0* T402f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_STRIP_EXPRESSION.set_strip_keyword */
extern void T1172f30(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern T0* T1172c26(GE_context* ac, T6 a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern void T1172f26p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].make */
extern T0* T1075f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].make_empty */
extern T0* T1077c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.strip_keyword */
extern unsigned char ge807os11773;
extern T0* ge807ov11773;
extern T0* T81f759(GE_context* ac, T0* C);
/* ET_KEYWORD.make_strip */
extern T0* T396c51(GE_context* ac);
/* ET_STRIP_EXPRESSION.tokens */
extern T0* T1172f11(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_keyword */
extern T0* T439f858(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].item */
extern T0* T892f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_823 */
extern void T439f1828(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_822 */
extern void T439f1827(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_keyword */
extern void T439f1930(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].force */
extern void T892f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].force */
extern void T900f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD].fill_with */
extern void T901f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD].extend */
extern void T901f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].resize */
extern void T892f12(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T900f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T901f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].new_capacity */
extern T6 T892f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].extendible */
extern T1 T892f6(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_821 */
extern void T439f1826(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_keyword */
extern void T439f1928(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].remove */
extern void T892f10(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_KEYWORD].keep_head */
extern void T901f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD].set_count */
extern void T901f9(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_820 */
extern void T439f1825(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_819 */
extern void T439f1824(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].force */
extern void T1144f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].fill_with */
extern void T1145f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].extend */
extern void T1145f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_818 */
extern void T439f1823(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T1144f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T1145f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_tuple */
extern T0* T402f310(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_TUPLE.set_left_symbol */
extern void T293f32(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_817 */
extern void T439f1822(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_816 */
extern void T439f1821(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_815 */
extern void T439f1820(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_814 */
extern void T439f1819(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_813 */
extern void T439f1818(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].force */
extern void T1135f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].fill_with */
extern void T1137f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].extend */
extern void T1137f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.put_first */
extern void T1136f28(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.fixed_array */
extern T0* T1136f12(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_812 */
extern void T439f1817(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T1135f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T1137f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_array */
extern T0* T402f309(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_ARRAY.set_left_symbol */
extern void T1136f29(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern T0* T1136c25(GE_context* ac, T6 a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern void T1136f25p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_array_symbol */
extern unsigned char ge807os11710;
extern T0* ge807ov11710;
extern T0* T81f585(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_array */
extern T0* T345c89(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_array_symbol */
extern unsigned char ge807os11705;
extern T0* ge807ov11705;
extern T0* T81f758(GE_context* ac, T0* C);
/* ET_SYMBOL.make_left_array */
extern T0* T345c83(GE_context* ac);
/* ET_MANIFEST_ARRAY.tokens */
extern T0* T1136f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_811 */
extern void T439f1816(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_810 */
extern void T439f1815(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_809 */
extern void T439f1814(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_808 */
extern void T439f1813(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_807 */
extern void T439f1812(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].force */
extern void T1149f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].fill_with */
extern void T1151f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].extend */
extern void T1151f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T1149f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T1151f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parenthesized_expression */
extern T0* T402f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.set_left_parenthesis */
extern void T1150f23(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.make */
extern T0* T1150c20(GE_context* ac, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.tokens */
extern T0* T1150f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_806 */
extern void T439f1811(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_ARGUMENT_LIST].force */
extern void T981f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_ARGUMENT_LIST].fill_with */
extern void T983f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_ARGUMENT_LIST].extend */
extern void T983f10(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_ARGUMENT_LIST.put_first */
extern void T982f12(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_ARGUMENT_LIST.fixed_array */
extern T0* T982f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_805 */
extern void T439f1810(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_ARGUMENT_LIST].aliased_resized_area */
extern T0* T981f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BRACKET_ARGUMENT_LIST].aliased_resized_area */
extern T0* T983f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_bracket_arguments */
extern T0* T402f307(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern T0* T982c11(GE_context* ac, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.tokens */
extern T0* T982f5(GE_context* ac, T0* C);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern void T982f11p1(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern void T982f11p0(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_804 */
extern void T439f1809(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_803 */
extern void T439f1808(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].force */
extern void T984f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].fill_with */
extern void T986f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].extend */
extern void T986f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T984f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T986f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_802 */
extern void T439f1807(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_bracket_expression */
extern T0* T402f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.make */
extern T0* T985c23(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_801 */
extern void T439f1806(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601_800 */
extern void T439f988(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_800 */
extern void T439f1805(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_799 */
extern void T439f1804(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_798 */
extern void T439f1803(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_797 */
extern void T439f1802(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_796 */
extern void T439f1801(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_795 */
extern void T439f1800(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_794 */
extern void T439f1799(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_793 */
extern void T439f1798(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_792 */
extern void T439f1797(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_791 */
extern void T439f1796(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_once_manifest_string */
extern T0* T439f900(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_once_manifest_string */
extern T0* T402f351(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.set_once_keyword */
extern void T1267f26(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.make */
extern T0* T1267c22(GE_context* ac, T0* a1);
/* ET_ONCE_MANIFEST_STRING.tokens */
extern T0* T1267f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_790 */
extern void T439f1795(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_789 */
extern void T439f1794(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_788 */
extern void T439f1793(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_787 */
extern void T439f1792(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_786 */
extern void T439f1791(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_785 */
extern void T439f1790(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_784 */
extern void T439f1789(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_783 */
extern void T439f1788(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_782 */
extern void T439f1787(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_781 */
extern void T439f1786(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_780 */
extern void T439f1785(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_779 */
extern void T439f1784(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_778 */
extern void T439f1783(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_named_object_test */
extern T0* T439f899(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_OBJECT_TEST_LIST.force_last */
extern void T1193f11(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.resize */
extern void T1193f13(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T749f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T748f4(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.new_capacity */
extern T6 T1193f7(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.capacity */
extern T6 T1193f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_object_test_list */
extern T0* T439f921(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_named_object_test */
extern T0* T402f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NAMED_OBJECT_TEST.set_attached_keyword */
extern void T747f27(GE_context* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.make */
extern T0* T747c24(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NAMED_OBJECT_TEST.make_object_test */
extern void T747f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NAMED_OBJECT_TEST.tokens */
extern T0* T747f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_777 */
extern void T439f1782(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_776 */
extern void T439f1781(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_object_test */
extern T0* T402f305(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST.set_attached_keyword */
extern void T319f25(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST.make */
extern T0* T319c22(GE_context* ac, T0* a1, T0* a2);
/* ET_OBJECT_TEST.tokens */
extern T0* T319f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_775 */
extern void T439f1780(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_774 */
extern void T439f1779(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_old_object_test */
extern T0* T439f898(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_AST_FACTORY.new_old_object_test */
extern T0* T402f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_OLD_OBJECT_TEST.set_left_brace */
extern void T1266f30(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_OBJECT_TEST.make */
extern T0* T1266c27(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.colon_symbol */
extern unsigned char ge807os11699;
extern T0* ge807ov11699;
extern T0* T81f582(GE_context* ac, T0* C);
/* ET_SYMBOL.make_colon */
extern T0* T345c86(GE_context* ac);
/* ET_OLD_OBJECT_TEST.tokens */
extern T0* T1266f12(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.raise_error */
extern void T439f1924(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_6_1_0 */
extern unsigned char ge191os1999;
extern T0* ge191ov1999;
extern T0* T439f886(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_773 */
extern void T439f1778(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_old_expression */
extern T0* T402f304(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.set_old_keyword */
extern void T1265f22(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.make */
extern T0* T1265c19(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.old_keyword */
extern unsigned char ge807os11758;
extern T0* ge807ov11758;
extern T0* T81f768(GE_context* ac, T0* C);
/* ET_KEYWORD.make_old */
extern T0* T396c49(GE_context* ac);
/* ET_OLD_EXPRESSION.tokens */
extern T0* T1265f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_772 */
extern void T439f1777(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_expression */
extern T0* T402f302(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.make */
extern T0* T1264c24(GE_context* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_operator */
extern T0* T402f303(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_prefix */
extern void T924f50(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.tokens */
extern T0* T924f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_771 */
extern void T439f1776(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_770 */
extern void T439f1775(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_prefix_minus_expression */
extern T0* T439f897(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T439f897ot1(T0* a1, T0** a2);
extern T1 T439f897ot2(T0* a1, T0** a2);
/* ET_AST_FACTORY.new_prefix_minus_operator */
extern T0* T402f348(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_minus */
extern void T943f71(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.tokens */
extern T0* T943f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_769 */
extern void T439f1774(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_prefix_plus_expression */
extern T0* T439f896(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T439f896ot1(T0* a1, T0** a2);
extern T1 T439f896ot2(T0* a1, T0** a2);
/* ET_AST_FACTORY.new_prefix_plus_operator */
extern T0* T402f347(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_plus */
extern void T943f70(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_768 */
extern void T439f1773(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_767 */
extern void T439f1772(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_766 */
extern void T439f1771(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_765 */
extern void T439f1770(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_764 */
extern void T439f1769(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_763 */
extern void T439f1768(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_762 */
extern void T439f1767(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_761 */
extern void T439f1766(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_760 */
extern void T439f1765(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_manifest_type */
extern T0* T402f301(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.make */
extern T0* T1263c20(GE_context* ac, T0* a1);
/* ET_MANIFEST_TYPE.tokens */
extern T0* T1263f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_759 */
extern void T439f1764(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_758 */
extern void T439f1763(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_757 */
extern void T439f1762(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_756 */
extern void T439f1761(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_755 */
extern void T439f1760(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_754 */
extern void T439f1759(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_object_equality_expression */
extern T0* T402f300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T320c21(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_753 */
extern void T439f1758(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_752 */
extern void T439f1757(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_equality_expression */
extern T0* T402f299(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.make */
extern T0* T321c19(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_751 */
extern void T439f1756(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_750 */
extern void T439f1755(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_expression */
extern T0* T402f294(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.make */
extern T0* T1260c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_749 */
extern void T439f1754(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_else_operator */
extern T0* T402f298(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_OR_ELSE_OPERATOR.set_or_keyword */
extern void T1262f33(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.make */
extern T0* T1262c32(GE_context* ac);
/* ET_TOKEN_CONSTANTS.else_keyword */
extern unsigned char ge807os11736;
extern T0* ge807ov11736;
extern T0* T81f594(GE_context* ac, T0* C);
/* ET_KEYWORD.make_else */
extern T0* T396c64(GE_context* ac);
/* ET_TOKEN_CONSTANTS.or_keyword */
extern unsigned char ge807os11760;
extern T0* ge807ov11760;
extern T0* T81f767(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.make_or */
extern T0* T930c47(GE_context* ac);
/* ET_KEYWORD_OPERATOR.make_token */
extern void T930f53(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_leaf */
extern void T930f54(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.tokens */
extern T0* T930f7(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.tokens */
extern T0* T1262f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_748 */
extern void T439f1753(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_then_operator */
extern T0* T402f297(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_AND_THEN_OPERATOR.set_and_keyword */
extern void T1261f33(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.make */
extern T0* T1261c32(GE_context* ac);
/* ET_TOKEN_CONSTANTS.then_keyword */
extern unsigned char ge807os11774;
extern T0* ge807ov11774;
extern T0* T81f598(GE_context* ac, T0* C);
/* ET_KEYWORD.make_then */
extern T0* T396c68(GE_context* ac);
/* ET_TOKEN_CONSTANTS.and_keyword */
extern unsigned char ge807os11719;
extern T0* ge807ov11719;
extern T0* T81f766(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.make_and */
extern T0* T930c49(GE_context* ac);
/* ET_INFIX_AND_THEN_OPERATOR.tokens */
extern T0* T1261f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_747 */
extern void T439f1752(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_746 */
extern void T439f1751(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_745 */
extern void T439f1750(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_744 */
extern void T439f1749(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_743 */
extern void T439f1748(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_742 */
extern void T439f1747(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_741 */
extern void T439f1746(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_740 */
extern void T439f1745(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_739 */
extern void T439f1744(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_738 */
extern void T439f1743(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_737 */
extern void T439f1742(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_736 */
extern void T439f1741(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_735 */
extern void T439f1740(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_minus_operator */
extern T0* T402f296(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_minus */
extern void T943f69(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_734 */
extern void T439f1739(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_plus_operator */
extern T0* T402f295(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_plus */
extern void T943f68(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_733 */
extern void T439f1738(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_free_operator */
extern T0* T402f293(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_infix */
extern void T924f49(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_732 */
extern void T439f1737(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_731 */
extern void T439f1736(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_730 */
extern void T439f1735(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].force */
extern void T1189f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WRITABLE].fill_with */
extern void T1190f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WRITABLE].extend */
extern void T1190f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T1189f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T1190f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_729 */
extern void T439f1734(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_writable */
extern T0* T439f895(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_728 */
extern void T439f1733(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_expression_address */
extern T0* T402f292(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.set_dollar */
extern void T1259f22(GE_context* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.make */
extern T0* T1259c19(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.dollar_symbol */
extern unsigned char ge807os11701;
extern T0* ge807ov11701;
extern T0* T81f765(GE_context* ac, T0* C);
/* ET_SYMBOL.make_dollar */
extern T0* T345c79(GE_context* ac);
/* ET_EXPRESSION_ADDRESS.tokens */
extern T0* T1259f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_727 */
extern void T439f1732(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_result_address */
extern T0* T402f291(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.set_dollar */
extern void T1258f22(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT_ADDRESS.make */
extern T0* T1258c19(GE_context* ac);
/* ET_RESULT_ADDRESS.tokens */
extern T0* T1258f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_726 */
extern void T439f1731(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_current_address */
extern T0* T402f290(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.set_dollar */
extern void T1257f22(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.make */
extern T0* T1257c19(GE_context* ac);
/* ET_CURRENT_ADDRESS.tokens */
extern T0* T1257f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_725 */
extern void T439f1730(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_feature_address */
extern T0* T439f894(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T439f894ot1(T0* a1, T0** a2);
/* ET_AST_FACTORY.new_feature_address */
extern T0* T402f346(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.set_dollar */
extern void T1256f22(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.make */
extern T0* T1256c19(GE_context* ac, T0* a1);
/* ET_FEATURE_ADDRESS.tokens */
extern T0* T1256f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_724 */
extern void T439f1729(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_expression_comma */
extern T0* T402f289(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_723 */
extern void T439f1728(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].force */
extern void T962f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].fill_with */
extern void T963f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].extend */
extern void T963f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_722 */
extern void T439f1727(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T962f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T963f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_actual_arguments */
extern T0* T402f288(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_721 */
extern void T439f1726(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_720 */
extern void T439f1725(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_719 */
extern void T439f1724(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_718 */
extern void T439f1723(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_717 */
extern void T439f1722(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_716 */
extern void T439f1721(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_call_expression */
extern T0* T402f285(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_715 */
extern void T439f1720(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_5_7_59914 */
extern unsigned char ge191os1991;
extern T0* ge191ov1991;
extern T0* T439f870(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_714 */
extern void T439f1719(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_713 */
extern void T439f1718(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_712 */
extern void T439f1717(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_711 */
extern void T439f1716(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_710 */
extern void T439f1715(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_709 */
extern void T439f1714(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_708 */
extern void T439f1713(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_707 */
extern void T439f1712(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_expression */
extern T0* T439f893(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_unqualified_call_expression */
extern T0* T402f345(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_706 */
extern void T439f1711(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_expression */
extern T0* T402f287(GE_context* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_precursor_keyword */
extern void T1255f27(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_parent_prefixed */
extern void T1255f26(GE_context* ac, T0* C, T1 a1);
/* ET_PRECURSOR_EXPRESSION.make */
extern T0* T1255c23(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.precursor_keyword */
extern unsigned char ge807os11761;
extern T0* ge807ov11761;
extern T0* T81f764(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.make */
extern T0* T906c18(GE_context* ac);
/* ET_PRECURSOR_KEYWORD.make_token */
extern void T906f20(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.make_leaf */
extern void T906f21(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.tokens */
extern T0* T906f7(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.tokens */
extern T0* T1255f9(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_class_name */
extern T0* T402f283(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_705 */
extern void T439f1710(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_704 */
extern void T439f1709(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].force */
extern void T1168f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].fill_with */
extern void T1170f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].extend */
extern void T1170f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1168f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1170f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_static_call_expression */
extern T0* T402f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_EXPRESSION.set_feature_keyword */
extern void T1169f30(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.make */
extern T0* T1169c27(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make_qualified_call */
extern void T1169f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_703 */
extern void T439f1708(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_702 */
extern void T439f1707(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_701 */
extern void T439f1706(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_700 */
extern void T439f1705(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_699 */
extern void T439f1704(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_698 */
extern void T439f1703(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_697 */
extern void T439f1702(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].force */
extern void T1114f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INSTRUCTION].fill_with */
extern void T1116f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INSTRUCTION].extend */
extern void T1116f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T1114f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T1116f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_static_call_instruction */
extern T0* T402f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.set_feature_keyword */
extern void T1254f9(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.make */
extern T0* T1254c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_INSTRUCTION.make_qualified_call */
extern void T1254f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_696 */
extern void T439f1701(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_695 */
extern void T439f1700(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_instruction */
extern T0* T402f282(GE_context* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_precursor_keyword */
extern void T1252f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_prefixed */
extern void T1252f10(GE_context* ac, T0* C, T1 a1);
/* ET_PRECURSOR_INSTRUCTION.make */
extern T0* T1252c9(GE_context* ac, T0* a1, T0* a2);
/* ET_PRECURSOR_INSTRUCTION.tokens */
extern T0* T1252f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_694 */
extern void T439f1699(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_693 */
extern void T439f1698(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_call_instruction */
extern T0* T402f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_692 */
extern void T439f1697(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_691 */
extern void T439f1696(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_instruction */
extern T0* T439f892(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_instruction */
extern void T181f121(GE_context* ac, T0* C, T1 a1);
/* ET_AST_FACTORY.new_unqualified_call_instruction */
extern T0* T402f344(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.make */
extern T0* T1422c6(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_690 */
extern void T439f1695(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].force */
extern void T1138f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].fill_with */
extern void T1140f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].extend */
extern void T1140f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T1138f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T1140f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_string_comma */
extern T0* T402f280(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_689 */
extern void T439f1694(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].force */
extern void T1141f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].fill_with */
extern void T1143f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].extend */
extern void T1143f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.put_first */
extern void T1142f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.fixed_array */
extern unsigned char ge609os12638;
extern T0* ge609ov12638;
extern T0* T1142f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T1138c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_688 */
extern void T439f1693(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T1141f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T1143f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_string_list */
extern T0* T402f279(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern T0* T1142c9(GE_context* ac, T6 a1);
/* ET_MANIFEST_STRING_LIST.tokens */
extern T0* T1142f5(GE_context* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern void T1142f9p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].make */
extern T0* T1138f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].make_empty */
extern T0* T1140c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_687 */
extern void T439f1692(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_686 */
extern void T439f1691(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_685 */
extern void T439f1690(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_684 */
extern void T439f1689(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_683 */
extern void T439f1688(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].force */
extern void T1045f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].fill_with */
extern void T1047f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].extend */
extern void T1047f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T1045f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T1047f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_debug_instruction */
extern T0* T402f278(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEBUG_INSTRUCTION.make */
extern T0* T1046c5(GE_context* ac, T0* a1, T0* a2);
/* ET_DEBUG_INSTRUCTION.tokens */
extern T0* T1046f4(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_debug_compound */
extern T0* T402f277(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.debug_keyword */
extern unsigned char ge807os11732;
extern T0* ge807ov11732;
extern T0* T81f602(GE_context* ac, T0* C);
/* ET_KEYWORD.make_debug */
extern T0* T396c72(GE_context* ac);
/* ET_COMPOUND.make */
extern T0* T331c9(GE_context* ac);
/* ET_COMPOUND.make */
extern void T331f9p1(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].make */
extern T0* T1114f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].make_empty */
extern T0* T1116c5(GE_context* ac, T6 a1);
/* ET_COMPOUND.fixed_array */
extern unsigned char ge749os12638;
extern T0* ge749ov12638;
extern T0* T331f7(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].default_create */
extern T0* T1114c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.do_keyword */
extern unsigned char ge807os11735;
extern T0* ge807ov11735;
extern T0* T81f591(GE_context* ac, T0* C);
/* ET_KEYWORD.make_do */
extern T0* T396c61(GE_context* ac);
/* ET_COMPOUND.tokens */
extern T0* T331f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_682 */
extern void T439f1687(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].force */
extern void T1014f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONDITIONAL].fill_with */
extern void T1016f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONDITIONAL].extend */
extern void T1016f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T1014f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T1016f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_681 */
extern void T439f1686(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_680 */
extern void T439f1685(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].force */
extern void T959f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].fill_with */
extern void T961f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].extend */
extern void T961f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T959f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T961f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_across_instruction_header */
extern T0* T439f891(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_FACTORY.new_across_instruction */
extern T0* T402f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ACROSS_INSTRUCTION.set_variant_part */
extern void T960f21(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_invariant_part */
extern void T960f20(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.make */
extern T0* T960c16(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACROSS_INSTRUCTION.create_unfolded_form */
extern void T960f23(GE_context* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.tokens */
extern T0* T960f14(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_679 */
extern void T439f1684(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].force */
extern void T996f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].fill_with */
extern void T998f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].extend */
extern void T998f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T996f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T998f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_678 */
extern void T439f1683(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_choice_attribute_constant */
extern T0* T439f890(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_677 */
extern void T439f1682(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_676 */
extern void T439f1681(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_675 */
extern void T439f1680(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].force */
extern void T993f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE].fill_with */
extern void T995f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE].extend */
extern void T995f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].aliased_resized_area */
extern T0* T993f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE].aliased_resized_area */
extern T0* T995f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_range */
extern T0* T402f276(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CHOICE_RANGE.make */
extern T0* T1251c7(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.dotdot_symbol */
extern unsigned char ge807os11703;
extern T0* ge807ov11703;
extern T0* T81f587(GE_context* ac, T0* C);
/* ET_SYMBOL.make_dotdot */
extern T0* T345c91(GE_context* ac);
/* ET_CHOICE_RANGE.tokens */
extern T0* T1251f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_674 */
extern void T439f1679(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_673 */
extern void T439f1678(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].force */
extern void T999f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_ITEM].fill_with */
extern void T1001f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_ITEM].extend */
extern void T1001f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T999f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T1001f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_comma */
extern T0* T402f275(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_672 */
extern void T439f1677(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].force */
extern void T1002f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_LIST].fill_with */
extern void T1004f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_LIST].extend */
extern void T1004f10(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.put_first */
extern void T1003f9(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.fixed_array */
extern unsigned char ge747os12638;
extern T0* ge747ov12638;
extern T0* T1003f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].default_create */
extern T0* T999c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_671 */
extern void T439f1676(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T1002f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T1004f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_list */
extern T0* T402f274(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_CHOICE_LIST.set_when_keyword */
extern void T1003f10(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern T0* T1003c8(GE_context* ac, T6 a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern void T1003f8p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].make */
extern T0* T999f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].make_empty */
extern T0* T1001c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.when_keyword */
extern unsigned char ge807os11782;
extern T0* ge807ov11782;
extern T0* T81f599(GE_context* ac, T0* C);
/* ET_KEYWORD.make_when */
extern T0* T396c69(GE_context* ac);
/* ET_CHOICE_LIST.tokens */
extern T0* T1003f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_670 */
extern void T439f1675(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_669 */
extern void T439f1674(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_668 */
extern void T439f1673(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_667 */
extern void T439f1672(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_666 */
extern void T439f1671(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].force */
extern void T1183f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART].fill_with */
extern void T1185f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART].extend */
extern void T1185f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T1183f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T1185f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_part */
extern T0* T402f273(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_WHEN_PART.make */
extern T0* T1184c3(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_665 */
extern void T439f1670(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].force */
extern void T1186f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART_LIST].fill_with */
extern void T1188f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART_LIST].extend */
extern void T1188f10(GE_context* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.put_first */
extern void T1187f6(GE_context* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.fixed_array */
extern unsigned char ge779os12638;
extern T0* ge779ov12638;
extern T0* T1187f3(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].default_create */
extern T0* T1183c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_664 */
extern void T439f1669(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T1186f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T1188f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_part_list */
extern T0* T402f272(GE_context* ac, T0* C, T6 a1);
/* ET_WHEN_PART_LIST.make_with_capacity */
extern T0* T1187c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].make */
extern T0* T1183f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].make_empty */
extern T0* T1185c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_663 */
extern void T439f1668(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_662 */
extern void T439f1667(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_661 */
extern void T439f1666(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].force */
extern void T1111f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].fill_with */
extern void T1113f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].extend */
extern void T1113f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T1111f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T1113f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inspect_instruction */
extern T0* T402f271(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_INSTRUCTION.set_else_compound */
extern void T1112f8(GE_context* ac, T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.make */
extern T0* T1112c7(GE_context* ac, T0* a1, T0* a2);
/* ET_INSPECT_INSTRUCTION.tokens */
extern T0* T1112f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_660 */
extern void T439f1665(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_659 */
extern void T439f1664(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].force */
extern void T1048f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART].fill_with */
extern void T1050f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART].extend */
extern void T1050f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T1048f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T1050f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_part */
extern T0* T402f270(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ELSEIF_PART.make */
extern T0* T1049c4(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_658 */
extern void T439f1663(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].force */
extern void T1051f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].fill_with */
extern void T1053f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].extend */
extern void T1053f10(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.put_first */
extern void T1052f6(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.fixed_array */
extern unsigned char ge754os12638;
extern T0* ge754ov12638;
extern T0* T1052f3(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].default_create */
extern T0* T1048c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_657 */
extern void T439f1662(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T1051f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T1053f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_part_list */
extern T0* T402f269(GE_context* ac, T0* C, T6 a1);
/* ET_ELSEIF_PART_LIST.make_with_capacity */
extern T0* T1052c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].make */
extern T0* T1048f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].make_empty */
extern T0* T1050c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_656 */
extern void T439f1661(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_655 */
extern void T439f1660(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].force */
extern void T1093f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_IF_INSTRUCTION].fill_with */
extern void T1095f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_IF_INSTRUCTION].extend */
extern void T1095f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T1093f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T1095f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_if_instruction */
extern T0* T402f268(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_IF_INSTRUCTION.set_else_compound */
extern void T1094f10(GE_context* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.set_elseif_parts */
extern void T1094f9(GE_context* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.make */
extern T0* T1094c8(GE_context* ac, T0* a1, T0* a2);
/* ET_IF_INSTRUCTION.tokens */
extern T0* T1094f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_654 */
extern void T439f1659(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_653 */
extern void T439f1658(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_652 */
extern void T439f1657(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_651 */
extern void T439f1656(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_650 */
extern void T439f1655(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_649 */
extern void T439f1654(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].force */
extern void T1038f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].fill_with */
extern void T1039f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].extend */
extern void T1039f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T1038f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T1039f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_create_expression */
extern T0* T402f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.set_create_keyword */
extern void T325f28(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_qualified_call */
extern T0* T402f264(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_648 */
extern void T439f1653(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_647 */
extern void T439f1652(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_create_instruction */
extern T0* T402f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.set_create_keyword */
extern void T1250f12(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.make */
extern T0* T1250c11(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_INSTRUCTION.tokens */
extern T0* T1250f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_646 */
extern void T439f1651(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_645 */
extern void T439f1650(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_644 */
extern void T439f1649(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_643 */
extern void T439f1648(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_bang_instruction */
extern T0* T402f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BANG_INSTRUCTION.set_left_bang */
extern void T1249f12(GE_context* ac, T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.make */
extern T0* T1249c11(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.bang_symbol */
extern unsigned char ge807os11698;
extern T0* ge807ov11698;
extern T0* T81f763(GE_context* ac, T0* C);
/* ET_SYMBOL.make_bang */
extern T0* T345c78(GE_context* ac);
/* ET_BANG_INSTRUCTION.tokens */
extern T0* T1249f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_642 */
extern void T439f1647(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_641 */
extern void T439f1646(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_640 */
extern void T439f1645(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_639 */
extern void T439f1644(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.start_check_instruction */
extern void T439f1947(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_638 */
extern void T439f1643(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].force */
extern void T990f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].fill_with */
extern void T992f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].extend */
extern void T992f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T990f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T992f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_check_instruction */
extern T0* T439f889(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].remove_last */
extern void T896f15(GE_context* ac, T0* C);
/* SPECIAL [ET_ASSERTION_ITEM].keep_head */
extern void T1478f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].set_count */
extern void T1478f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_last_cursors_after */
extern void T896f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_next_cursor */
extern void T1480f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_after */
extern void T1480f6(GE_context* ac, T0* C);
/* ET_CHECK_INSTRUCTION.put_first */
extern void T991f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].force */
extern void T1479f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].fill_with */
extern void T1478f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].extend */
extern void T1478f10(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.fixed_array */
extern unsigned char ge490os12638;
extern T0* ge490ov12638;
extern T0* T991f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].default_create */
extern T0* T1479c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].item */
extern T0* T896f7(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_check_instruction */
extern T0* T402f342(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_CHECK_INSTRUCTION.set_check_keyword */
extern void T991f13(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.set_then_compound */
extern void T991f12(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern T0* T991c10(GE_context* ac, T6 a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern void T991f10p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].make */
extern T0* T1479f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].make_empty */
extern T0* T1478c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.check_keyword */
extern unsigned char ge807os11726;
extern T0* ge807ov11726;
extern T0* T81f601(GE_context* ac, T0* C);
/* ET_KEYWORD.make_check */
extern T0* T396c71(GE_context* ac);
/* ET_CHECK_INSTRUCTION.tokens */
extern T0* T991f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].remove_last */
extern void T271f27(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].move_last_cursors_after */
extern void T271f28(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].last */
extern T6 T271f14(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_637 */
extern void T439f1642(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_636 */
extern void T439f1641(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_635 */
extern void T439f1640(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_634 */
extern void T439f1639(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_null_instruction */
extern T0* T402f262(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_633 */
extern void T439f1638(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_632 */
extern void T439f1637(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_631 */
extern void T439f1636(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_630 */
extern void T439f1635(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_instruction */
extern T0* T439f888(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ACROSS_INSTRUCTION.set_end_keyword */
extern void T960f22(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_loop_compound */
extern void T960f19(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_until_conditional */
extern void T960f18(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_from_compound */
extern void T960f17(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_629 */
extern void T439f1634(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_instruction */
extern T0* T402f261(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LOOP_INSTRUCTION.set_has_old_variant_syntax */
extern void T1247f13(GE_context* ac, T0* C, T1 a1);
/* ET_LOOP_INSTRUCTION.set_variant_part */
extern void T1247f12(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.set_invariant_part */
extern void T1247f11(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.make */
extern T0* T1247c10(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LOOP_INSTRUCTION.tokens */
extern T0* T1247f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_6_3_7_4554 */
extern unsigned char ge191os2006;
extern T0* ge191ov2006;
extern T0* T439f887(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_628 */
extern void T439f1633(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_instruction_old_syntax */
extern T0* T402f260(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_EIFFEL_PARSER.yy_do_action_627 */
extern void T439f1632(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_626 */
extern void T439f1631(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_625 */
extern void T439f1630(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_624 */
extern void T439f1629(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_assignment_attempt */
extern T0* T402f258(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT_ATTEMPT.make */
extern T0* T1246c5(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_attempt_symbol */
extern unsigned char ge807os11697;
extern T0* ge807ov11697;
extern T0* T81f589(GE_context* ac, T0* C);
/* ET_SYMBOL.make_assign_attempt */
extern T0* T345c93(GE_context* ac);
/* ET_ASSIGNMENT_ATTEMPT.tokens */
extern T0* T1246f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_623 */
extern void T439f1628(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_assignment */
extern T0* T402f257(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT.make */
extern T0* T1245c5(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_symbol */
extern unsigned char ge807os11696;
extern T0* ge807ov11696;
extern T0* T81f588(GE_context* ac, T0* C);
/* ET_SYMBOL.make_assign */
extern T0* T345c92(GE_context* ac);
/* ET_ASSIGNMENT.tokens */
extern T0* T1245f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_622 */
extern void T439f1627(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_assigner_instruction */
extern T0* T402f256(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.make */
extern T0* T1244c15(GE_context* ac, T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.tokens */
extern T0* T1244f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_621 */
extern void T439f1626(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_620 */
extern void T439f1625(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_619 */
extern void T439f1624(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_618 */
extern void T439f1623(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_617 */
extern void T439f1622(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].force */
extern void T1012f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_COMPOUND].fill_with */
extern void T1013f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_COMPOUND].extend */
extern void T1013f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T1012f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T1013f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_616 */
extern void T439f1621(GE_context* ac, T0* C);
/* ET_COMPOUND.put_first */
extern void T331f11(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_615 */
extern void T439f1620(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_compound */
extern T0* T402f255(GE_context* ac, T0* C, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern T0* T331c12(GE_context* ac, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern void T331f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_614 */
extern void T439f1619(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_613 */
extern void T439f1618(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_612 */
extern void T439f1617(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_611 */
extern void T439f1616(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_empty_compound */
extern T0* T402f254(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_610 */
extern void T439f1615(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_609 */
extern void T439f1614(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_compound */
extern T0* T402f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.loop_keyword */
extern unsigned char ge807os11755;
extern T0* ge807ov11755;
extern T0* T81f596(GE_context* ac, T0* C);
/* ET_KEYWORD.make_loop */
extern T0* T396c66(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_608 */
extern void T439f1613(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_607 */
extern void T439f1612(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_606 */
extern void T439f1611(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_from_compound */
extern T0* T402f252(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.from_keyword */
extern unsigned char ge807os11744;
extern T0* ge807ov11744;
extern T0* T81f595(GE_context* ac, T0* C);
/* ET_KEYWORD.make_from */
extern T0* T396c65(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_605 */
extern void T439f1610(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_rescue_compound */
extern T0* T402f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.rescue_keyword */
extern unsigned char ge807os11767;
extern T0* ge807ov11767;
extern T0* T81f611(GE_context* ac, T0* C);
/* ET_KEYWORD.make_rescue */
extern T0* T396c81(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_604 */
extern void T439f1609(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_else_compound */
extern T0* T402f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_603 */
extern void T439f1608(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_602 */
extern void T439f1607(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_then_compound */
extern T0* T402f249(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_601 */
extern void T439f1606(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401_600 */
extern void T439f987(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_600 */
extern void T439f1605(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_attribute_compound */
extern T0* T402f248(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.attribute_keyword */
extern unsigned char ge807os11725;
extern T0* ge807ov11725;
extern T0* T81f623(GE_context* ac, T0* C);
/* ET_KEYWORD.make_attribute */
extern T0* T396c93(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_599 */
extern void T439f1604(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_compound */
extern T0* T402f247(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_598 */
extern void T439f1603(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].force */
extern void T1160f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].fill_with */
extern void T1162f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].extend */
extern void T1162f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T1160f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T1162f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_qualified_like_type */
extern T0* T402f246(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.make */
extern T0* T1243c72(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_attachment_symbol_separate_keyword */
extern T0* T402f136(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.make */
extern T0* T1217c18(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_597 */
extern void T439f1602(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_596 */
extern void T439f1601(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_595 */
extern void T439f1600(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_594 */
extern void T439f1599(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_attachment_separate_keywords */
extern T0* T402f135(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.make */
extern T0* T1216c18(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_593 */
extern void T439f1598(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_592 */
extern void T439f1597(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_591 */
extern void T439f1596(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_590 */
extern void T439f1595(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_589 */
extern void T439f1594(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_like_braced_type */
extern T0* T402f245(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_like_keyword */
extern void T1242f76(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.make */
extern T0* T1242c75(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.tokens */
extern T0* T1242f23(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_588 */
extern void T439f1593(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_587 */
extern void T439f1592(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_586 */
extern void T439f1591(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_585 */
extern void T439f1590(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_584 */
extern void T439f1589(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_583 */
extern void T439f1588(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_582 */
extern void T439f1587(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_581 */
extern void T439f1586(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_580 */
extern void T439f1585(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_579 */
extern void T439f1584(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_578 */
extern void T439f1583(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_577 */
extern void T439f1582(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].force */
extern void T1121f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LIKE_TYPE].fill_with */
extern void T1123f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LIKE_TYPE].extend */
extern void T1123f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T1121f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T1123f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_576 */
extern void T439f1581(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_like_current */
extern T0* T402f243(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.set_like_keyword */
extern void T503f73(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_575 */
extern void T439f1580(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_574 */
extern void T439f1579(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_573 */
extern void T439f1578(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_572 */
extern void T439f1577(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_571 */
extern void T439f1576(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_570 */
extern void T439f1575(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_569 */
extern void T439f1574(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_568 */
extern void T439f1573(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_567 */
extern void T439f1572(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.current_universe */
extern T0* T439f885(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_566 */
extern void T439f1571(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_like_feature */
extern T0* T402f242(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.set_like_keyword */
extern void T1241f77(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.make */
extern T0* T1241c76(GE_context* ac, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.tokens */
extern T0* T1241f24(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_565 */
extern void T439f1570(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_564 */
extern void T439f1569(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_563 */
extern void T439f1568(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_562 */
extern void T439f1567(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_561 */
extern void T439f1566(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_560 */
extern void T439f1565(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_559 */
extern void T439f1564(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_558 */
extern void T439f1563(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_557 */
extern void T439f1562(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_556 */
extern void T439f1561(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_555 */
extern void T439f1560(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_554 */
extern void T439f1559(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_553 */
extern void T439f1558(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T651f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T648f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_labeled_actual_parameter_semicolon */
extern T0* T402f241(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_actual_parameter */
extern T0* T402f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LABELED_ACTUAL_PARAMETER.make */
extern T0* T1239c9(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_552 */
extern void T439f1557(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_551 */
extern void T439f1556(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].force */
extern void T964f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].fill_with */
extern void T965f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].extend */
extern void T965f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.add_to_actual_parameter_list */
extern void T439f1946(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_comma_actual_parameter */
extern T0* T402f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T1558c9(GE_context* ac, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.first */
extern T0* T251f15(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_label_comma */
extern T0* T402f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_550 */
extern void T439f1555(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_549 */
extern void T439f1554(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_548 */
extern void T439f1553(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_547 */
extern void T439f1552(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T964f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T965f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_actual_parameters */
extern T0* T402f236(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T251f31(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_546 */
extern void T439f1551(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_545 */
extern void T439f1550(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_544 */
extern void T439f1549(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_543 */
extern void T439f1548(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_542 */
extern void T439f1547(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_541 */
extern void T439f1546(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_actual_parameter_comma */
extern T0* T402f237(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_540 */
extern void T439f1545(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_539 */
extern void T439f1544(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_tuple_type */
extern T0* T439f884(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_tuple_type */
extern T0* T402f341(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.set_tuple_keyword */
extern void T260f102(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.providers_enabled */
extern T1 T439f905(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_538 */
extern void T439f1543(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_named_type */
extern T0* T439f883(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_class_type */
extern T0* T402f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_generic_class_type */
extern T0* T402f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_FACTORY.new_formal_parameter_type */
extern T0* T402f340(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.make */
extern T0* T1421c68(GE_context* ac, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_CLASS.formal_parameter */
extern T0* T82f132(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter_by_name */
extern T0* T642f9(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_537 */
extern void T439f1542(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_536 */
extern void T439f1541(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_535 */
extern void T439f1540(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_534 */
extern void T439f1539(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_533 */
extern void T439f1538(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_532 */
extern void T439f1537(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_531 */
extern void T439f1536(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_530 */
extern void T439f1535(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_529 */
extern void T439f1534(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_528 */
extern void T439f1533(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_527 */
extern void T439f1532(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_526 */
extern void T439f1531(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_525 */
extern void T439f1530(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_524 */
extern void T439f1529(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_523 */
extern void T439f1528(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_522 */
extern void T439f1527(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_521 */
extern void T439f1526(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_520 */
extern void T439f1525(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_519 */
extern void T439f1524(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_518 */
extern void T439f1523(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_517 */
extern void T439f1522(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_516 */
extern void T439f1521(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_515 */
extern void T439f1520(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_514 */
extern void T439f1519(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_513 */
extern void T439f1518(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_512 */
extern void T439f1517(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_511 */
extern void T439f1516(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_510 */
extern void T439f1515(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_509 */
extern void T439f1514(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_508 */
extern void T439f1513(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_507 */
extern void T439f1512(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_506 */
extern void T439f1511(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_505 */
extern void T439f1510(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_504 */
extern void T439f1509(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_503 */
extern void T439f1508(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_502 */
extern void T439f1507(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_501 */
extern void T439f1506(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_500 */
extern void T439f1505(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_499 */
extern void T439f1504(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_498 */
extern void T439f1503(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_497 */
extern void T439f1502(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_496 */
extern void T439f1501(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_495 */
extern void T439f1500(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_494 */
extern void T439f1499(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_493 */
extern void T439f1498(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_492 */
extern void T439f1497(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_491 */
extern void T439f1496(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_490 */
extern void T439f1495(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_489 */
extern void T439f1494(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_488 */
extern void T439f1493(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_487 */
extern void T439f1492(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_486 */
extern void T439f1491(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_485 */
extern void T439f1490(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_484 */
extern void T439f1489(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_483 */
extern void T439f1488(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_482 */
extern void T439f1487(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_481 */
extern void T439f1486(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_480 */
extern void T439f1485(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_479 */
extern void T439f1484(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_478 */
extern void T439f1483(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_477 */
extern void T439f1482(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_476 */
extern void T439f1481(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_475 */
extern void T439f1480(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_474 */
extern void T439f1479(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_473 */
extern void T439f1478(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_472 */
extern void T439f1477(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_471 */
extern void T439f1476(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_470 */
extern void T439f1475(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_469 */
extern void T439f1474(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_468 */
extern void T439f1473(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_467 */
extern void T439f1472(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_466 */
extern void T439f1471(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_465 */
extern void T439f1470(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_464 */
extern void T439f1469(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_463 */
extern void T439f1468(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_462 */
extern void T439f1467(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_461 */
extern void T439f1466(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_460 */
extern void T439f1465(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_459 */
extern void T439f1464(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_458 */
extern void T439f1463(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_457 */
extern void T439f1462(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_456 */
extern void T439f1461(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_455 */
extern void T439f1460(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].force */
extern void T1180f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_VARIANT].fill_with */
extern void T1182f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_VARIANT].extend */
extern void T1182f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_454 */
extern void T439f1459(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].aliased_resized_area */
extern T0* T1180f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_VARIANT].aliased_resized_area */
extern T0* T1182f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_453 */
extern void T439f1458(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_variant */
extern T0* T402f235(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VARIANT.set_variant_keyword */
extern void T1181f6(GE_context* ac, T0* C, T0* a1);
/* ET_VARIANT.make */
extern T0* T1181c5(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.variant_keyword */
extern unsigned char ge807os11780;
extern T0* ge807ov11780;
extern T0* T81f616(GE_context* ac, T0* C);
/* ET_KEYWORD.make_variant */
extern T0* T396c86(GE_context* ac);
/* ET_VARIANT.tokens */
extern T0* T1181f4(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_tag */
extern T0* T402f123(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_452 */
extern void T439f1457(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_451 */
extern void T439f1456(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].force */
extern void T1132f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].fill_with */
extern void T1134f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].extend */
extern void T1134f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T1132f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T1134f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_loop_invariants */
extern T0* T439f882(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].wipe_out */
extern void T896f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_all_cursors_after */
extern void T896f18(GE_context* ac, T0* C);
/* ET_LOOP_INVARIANTS.put_first */
extern void T1133f9(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.fixed_array */
extern T0* T1133f5(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_invariants */
extern T0* T402f339(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_LOOP_INVARIANTS.set_invariant_keyword */
extern void T1133f10(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern T0* T1133c8(GE_context* ac, T6 a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern void T1133f8p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.invariant_keyword */
extern unsigned char ge807os11751;
extern T0* ge807ov11751;
extern T0* T81f624(GE_context* ac, T0* C);
/* ET_KEYWORD.make_invariant */
extern T0* T396c94(GE_context* ac);
/* ET_LOOP_INVARIANTS.tokens */
extern T0* T1133f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_450 */
extern void T439f1455(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_449 */
extern void T439f1454(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_448 */
extern void T439f1453(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_447 */
extern void T439f1452(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_446 */
extern void T439f1451(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].force */
extern void T1117f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INVARIANTS].fill_with */
extern void T1118f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INVARIANTS].extend */
extern void T1118f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T1117f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T1118f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_invariants */
extern T0* T439f881(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.wipe_out_last_across_components_stack */
extern void T439f969(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].wipe_out */
extern void T895f12(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].i_th */
extern T0* T895f5(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_COMPONENT_LIST.wipe_out */
extern void T1194f10(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT].keep_head */
extern void T755f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.wipe_out_last_object_tests_stack */
extern void T439f968(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].wipe_out */
extern void T894f12(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].i_th */
extern T0* T894f5(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.wipe_out */
extern void T1193f10(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].keep_head */
extern void T749f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.wipe_out_last_local_variables_stack */
extern void T439f967(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].wipe_out */
extern void T891f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.wipe_out_last_formal_arguments_stack */
extern void T439f966(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].wipe_out */
extern void T890f10(GE_context* ac, T0* C);
/* ET_INVARIANTS.set_across_components */
extern void T886f32(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.set_object_tests */
extern void T886f31(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.put_first */
extern void T886f30(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.fixed_array */
extern T0* T886f10(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_invariants */
extern T0* T402f338(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_INVARIANTS.set_invariant_keyword */
extern void T886f33(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.make_with_capacity */
extern T0* T886c25(GE_context* ac, T0* a1, T6 a2);
/* ET_INVARIANTS.make_assertions_with_capacity */
extern void T886f34(GE_context* ac, T0* C, T6 a1);
/* ET_INVARIANTS.tokens */
extern T0* T886f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_445 */
extern void T439f1450(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_444 */
extern void T439f1449(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_443 */
extern void T439f1448(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_442 */
extern void T439f1447(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].force */
extern void T1158f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_POSTCONDITIONS].fill_with */
extern void T1159f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_POSTCONDITIONS].extend */
extern void T1159f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T1158f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T1159f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_postconditions */
extern T0* T439f880(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_POSTCONDITIONS.put_first */
extern void T885f16(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.fixed_array */
extern T0* T885f9(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_postconditions */
extern T0* T402f337(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_POSTCONDITIONS.set_then_keyword */
extern void T885f18(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.set_ensure_keyword */
extern void T885f17(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern T0* T885c15(GE_context* ac, T6 a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern void T885f15p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.ensure_keyword */
extern unsigned char ge807os11739;
extern T0* ge807ov11739;
extern T0* T81f751(GE_context* ac, T0* C);
/* ET_KEYWORD.make_ensure */
extern T0* T396c53(GE_context* ac);
/* ET_POSTCONDITIONS.tokens */
extern T0* T885f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_441 */
extern void T439f1446(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_440 */
extern void T439f1445(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_439 */
extern void T439f1444(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_438 */
extern void T439f1443(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_437 */
extern void T439f1442(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_preconditions */
extern T0* T439f879(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.put_first */
extern void T388f16(GE_context* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.fixed_array */
extern T0* T388f11(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_preconditions */
extern T0* T402f336(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_PRECONDITIONS.set_else_keyword */
extern void T388f18(GE_context* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.set_require_keyword */
extern void T388f17(GE_context* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern T0* T388c15(GE_context* ac, T6 a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern void T388f15p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.require_keyword */
extern unsigned char ge807os11766;
extern T0* ge807ov11766;
extern T0* T81f1264(GE_context* ac, T0* C);
/* ET_KEYWORD.make_require */
extern T0* T396c56(GE_context* ac);
/* ET_PRECONDITIONS.tokens */
extern T0* T388f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_436 */
extern void T439f1441(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_435 */
extern void T439f1440(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_434 */
extern void T439f1439(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_433 */
extern void T439f1438(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_432 */
extern void T439f1437(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_tagged_assertion */
extern void T439f1945(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T439f1945ot1(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].force_last */
extern void T896f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].resize */
extern void T896f20(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1479f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1478f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_capacity */
extern T6 T896f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].extendible */
extern T1 T896f9(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_assertion_semicolon */
extern T0* T402f323(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_tagged_assertion */
extern T0* T402f324(GE_context* ac, T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.make */
extern T0* T1277c5(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.report_syntax_error */
extern void T439f991(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_syntax_error */
extern void T36f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.make */
extern T0* T1544c18(GE_context* ac, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.set_compilers */
extern void T1544f19(GE_context* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_syntax_error */
extern void T77f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.set_syntax_error */
extern void T439f995(GE_context* ac, T0* C);
/* ET_FILE_POSITION.make */
extern T0* T1278c12(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ET_FILE_POSITION.make_compressed_position */
extern void T1278f13(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.set_position */
extern void T1278f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.column */
extern T6 T1278f3(GE_context* ac, T0* C);
/* ET_FILE_POSITION.line */
extern T6 T1278f6(GE_context* ac, T0* C);
/* ET_FILE_POSITION.is_null */
extern T1 T1278f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.current_position */
extern T0* T439f676(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].last */
extern T0* T896f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].is_empty */
extern T1 T896f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_431 */
extern void T439f1436(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_430 */
extern void T439f1435(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_expression_assertion */
extern void T439f1944(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T439f1944ot1(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].replace */
extern void T896f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_TAGGED_ASSERTION.set_expression */
extern void T1277f6(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_429 */
extern void T439f1434(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_428 */
extern void T439f1433(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_427 */
extern void T439f1432(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_426 */
extern void T439f1431(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_425 */
extern void T439f1430(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_424 */
extern void T439f1429(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].force */
extern void T1127f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].fill_with */
extern void T1129f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].extend */
extern void T1129f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T1127f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T1129f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_variable_semicolon */
extern T0* T402f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_local_variable */
extern T0* T402f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LOCAL_VARIABLE.make */
extern T0* T1125c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_423 */
extern void T439f1428(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_422 */
extern void T439f1427(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].force */
extern void T1124f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].fill_with */
extern void T1126f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].extend */
extern void T1126f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T1124f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T1126f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_comma_variable */
extern T0* T402f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LOCAL_COMMA_VARIABLE.make */
extern T0* T1557c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_type */
extern unsigned char ge1025os24408;
extern T0* ge1025ov24408;
extern T0* T439f877(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_421 */
extern void T439f1426(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_local_name_comma */
extern T0* T402f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_420 */
extern void T439f1425(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.put_first */
extern void T332f12(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.fixed_array */
extern unsigned char ge680os12638;
extern T0* ge680ov12638;
extern T0* T332f10(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T1127c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_419 */
extern void T439f1424(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_418 */
extern void T439f1423(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.set_declared_type */
extern void T1557f8(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.first */
extern T0* T332f6(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.is_empty */
extern T1 T332f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_417 */
extern void T439f1422(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_416 */
extern void T439f1421(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_local_variables */
extern T0* T439f878(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_AST_FACTORY.new_local_variables */
extern T0* T402f335(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_LOCAL_VARIABLE_LIST.set_local_keyword */
extern void T332f13(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern T0* T332c11(GE_context* ac, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern void T332f11p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T1127f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].make_empty */
extern T0* T1129c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.local_keyword */
extern unsigned char ge807os11754;
extern T0* ge807ov11754;
extern T0* T81f604(GE_context* ac, T0* C);
/* ET_KEYWORD.make_local */
extern T0* T396c74(GE_context* ac);
/* ET_LOCAL_VARIABLE_LIST.tokens */
extern T0* T332f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_415 */
extern void T439f1420(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_414 */
extern void T439f1419(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_413 */
extern void T439f1418(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_412 */
extern void T439f1417(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_411 */
extern void T439f1416(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_410 */
extern void T439f1415(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].force */
extern void T1080f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].fill_with */
extern void T1082f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].extend */
extern void T1082f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T1080f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T1082f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_argument_semicolon */
extern T0* T402f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_formal_argument */
extern T0* T402f229(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_ARGUMENT.make */
extern T0* T264c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_409 */
extern void T439f1414(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_408 */
extern void T439f1413(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].force */
extern void T1078f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].fill_with */
extern void T1079f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].extend */
extern void T1079f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T1078f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T1079f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_comma_argument */
extern T0* T402f228(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.make */
extern T0* T1556c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_407 */
extern void T439f1412(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_argument_name_comma */
extern T0* T402f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_406 */
extern void T439f1411(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.put_first */
extern void T261f13(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.fixed_array */
extern unsigned char ge668os12638;
extern T0* ge668ov12638;
extern T0* T261f11(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T1080c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_405 */
extern void T439f1410(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_404 */
extern void T439f1409(GE_context* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_declared_type */
extern void T1556f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.first */
extern T0* T261f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_403 */
extern void T439f1408(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_402 */
extern void T439f1407(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_formal_arguments */
extern T0* T439f876(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AST_FACTORY.new_formal_arguments */
extern T0* T402f334(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T261c12(GE_context* ac, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern void T261f12p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T1080f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].make_empty */
extern T0* T1082c5(GE_context* ac, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.tokens */
extern T0* T261f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401 */
extern void T439f1406(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201_400 */
extern void T439f986(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_400 */
extern void T439f1405(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_399 */
extern void T439f1404(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_398 */
extern void T439f1403(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_397 */
extern void T439f1402(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_396 */
extern void T439f1401(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_invalid_alias_name */
extern T0* T439f875(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_alias_free_name */
extern T0* T439f919(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_alias_free_name */
extern T0* T402f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_FREE_NAME.set_alias_keyword */
extern void T1236f45(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.make_infix */
extern T0* T1236c44(GE_context* ac, T0* a1);
/* ET_ALIAS_FREE_NAME.string_ */
extern T0* T1236f10(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.default_keyword */
extern unsigned char ge812os29520;
extern T0* ge812ov29520;
extern T0* T1236f15(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_keyword */
extern unsigned char ge807os11720;
extern T0* ge807ov11720;
extern T0* T81f600(GE_context* ac, T0* C);
/* ET_KEYWORD.make_alias */
extern T0* T396c70(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_395 */
extern void T439f1400(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_parenthesis_name */
extern T0* T402f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.set_alias_keyword */
extern void T858f64(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.make_parenthesis */
extern T0* T858c84(GE_context* ac, T0* a1);
/* ET_ALIAS_NAME.default_keyword */
extern T0* T858f60(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_394 */
extern void T439f1399(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_bracket_name */
extern T0* T402f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_bracket */
extern T0* T858c83(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_393 */
extern void T439f1398(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_392 */
extern void T439f1397(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_dotdot_name */
extern T0* T402f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_dotdot */
extern T0* T858c82(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_391 */
extern void T439f1396(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_xor_name */
extern T0* T402f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_xor */
extern T0* T858c81(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_390 */
extern void T439f1395(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_implies_name */
extern T0* T402f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_implies */
extern T0* T858c80(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_389 */
extern void T439f1394(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_else_name */
extern T0* T402f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or_else */
extern T0* T858c79(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_388 */
extern void T439f1393(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_name */
extern T0* T402f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or */
extern T0* T858c78(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_387 */
extern void T439f1392(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_then_name */
extern T0* T402f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and_then */
extern T0* T858c77(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_386 */
extern void T439f1391(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_name */
extern T0* T402f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and */
extern T0* T858c76(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_385 */
extern void T439f1390(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_ge_name */
extern T0* T402f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_ge */
extern T0* T858c75(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_384 */
extern void T439f1389(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_gt_name */
extern T0* T402f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_gt */
extern T0* T858c74(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_383 */
extern void T439f1388(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_le_name */
extern T0* T402f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_le */
extern T0* T858c73(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_382 */
extern void T439f1387(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_lt_name */
extern T0* T402f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_lt */
extern T0* T858c72(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_381 */
extern void T439f1386(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_power_name */
extern T0* T402f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_power */
extern T0* T858c71(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_380 */
extern void T439f1385(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_mod_name */
extern T0* T402f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_mod */
extern T0* T858c70(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_379 */
extern void T439f1384(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_div_name */
extern T0* T402f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_div */
extern T0* T858c69(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_378 */
extern void T439f1383(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_divide_name */
extern T0* T402f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_divide */
extern T0* T858c68(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_377 */
extern void T439f1382(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_times_name */
extern T0* T402f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_times */
extern T0* T858c67(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_376 */
extern void T439f1381(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_minus_name */
extern T0* T402f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_minus */
extern T0* T858c66(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_375 */
extern void T439f1380(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_plus_name */
extern T0* T402f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_plus */
extern T0* T858c65(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_374 */
extern void T439f1379(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_not_name */
extern T0* T402f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_not */
extern T0* T858c63(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_373 */
extern void T439f1378(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].force */
extern void T1059f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].fill_with */
extern void T1060f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].extend */
extern void T1060f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T1059f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T1060f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_aliased_feature_name */
extern T0* T402f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_372 */
extern void T439f1377(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_371 */
extern void T439f1376(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_invalid_infix_name */
extern T0* T439f874(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_infix_free_name */
extern T0* T439f918(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_infix_free_name */
extern T0* T402f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_FREE_NAME.set_infix_keyword */
extern void T832f69(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.make */
extern T0* T832c68(GE_context* ac, T0* a1);
/* ET_INFIX_FREE_NAME.string_ */
extern T0* T832f7(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.default_keyword */
extern unsigned char ge840os29520;
extern T0* ge840ov29520;
extern T0* T832f6(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_keyword */
extern unsigned char ge807os11748;
extern T0* ge807ov11748;
extern T0* T81f603(GE_context* ac, T0* C);
/* ET_KEYWORD.make_infix */
extern T0* T396c73(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_370 */
extern void T439f1375(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_369 */
extern void T439f1374(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_invalid_prefix_name */
extern T0* T439f873(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_prefix_free_name */
extern T0* T439f917(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_name */
extern T0* T402f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_FREE_NAME.set_prefix_keyword */
extern void T1233f69(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.make */
extern T0* T1233c68(GE_context* ac, T0* a1);
/* ET_PREFIX_FREE_NAME.string_ */
extern T0* T1233f29(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.default_keyword */
extern unsigned char ge852os29520;
extern T0* ge852ov29520;
extern T0* T1233f30(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.prefix_keyword */
extern unsigned char ge807os11762;
extern T0* ge807ov11762;
extern T0* T81f609(GE_context* ac, T0* C);
/* ET_KEYWORD.make_prefix */
extern T0* T396c79(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_368 */
extern void T439f1373(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_367 */
extern void T439f1372(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_366 */
extern void T439f1371(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_365 */
extern void T439f1370(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_364 */
extern void T439f1369(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_363 */
extern void T439f1368(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_362 */
extern void T439f1367(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_361 */
extern void T439f1366(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_360 */
extern void T439f1365(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_359 */
extern void T439f1364(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_358 */
extern void T439f1363(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_357 */
extern void T439f1362(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_356 */
extern void T439f1361(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_355 */
extern void T439f1360(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_354 */
extern void T439f1359(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_353 */
extern void T439f1358(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_352 */
extern void T439f1357(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_xor_name */
extern T0* T402f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.set_infix_keyword */
extern void T1234f85(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_NAME.make_xor */
extern T0* T1234c101(GE_context* ac, T0* a1);
/* ET_INFIX_NAME.default_keyword */
extern T0* T1234f45(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_351 */
extern void T439f1356(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_implies_name */
extern T0* T402f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_implies */
extern T0* T1234c100(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_350 */
extern void T439f1355(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_else_name */
extern T0* T402f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or_else */
extern T0* T1234c99(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_349 */
extern void T439f1354(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_name */
extern T0* T402f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or */
extern T0* T1234c98(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_348 */
extern void T439f1353(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_then_name */
extern T0* T402f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and_then */
extern T0* T1234c97(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_347 */
extern void T439f1352(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_name */
extern T0* T402f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and */
extern T0* T1234c96(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_346 */
extern void T439f1351(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_ge_name */
extern T0* T402f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_ge */
extern T0* T1234c95(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_345 */
extern void T439f1350(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_gt_name */
extern T0* T402f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_gt */
extern T0* T1234c94(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_344 */
extern void T439f1349(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_le_name */
extern T0* T402f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_le */
extern T0* T1234c93(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_343 */
extern void T439f1348(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_lt_name */
extern T0* T402f193(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_lt */
extern T0* T1234c92(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_342 */
extern void T439f1347(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_power_name */
extern T0* T402f192(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_power */
extern T0* T1234c91(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_341 */
extern void T439f1346(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_mod_name */
extern T0* T402f191(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_mod */
extern T0* T1234c90(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_340 */
extern void T439f1345(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_div_name */
extern T0* T402f190(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_div */
extern T0* T1234c89(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_339 */
extern void T439f1344(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_divide_name */
extern T0* T402f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_divide */
extern T0* T1234c88(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_338 */
extern void T439f1343(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_times_name */
extern T0* T402f188(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_times */
extern T0* T1234c87(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_337 */
extern void T439f1342(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_minus_name */
extern T0* T402f187(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_minus */
extern T0* T1234c86(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_336 */
extern void T439f1341(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_plus_name */
extern T0* T402f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_plus */
extern T0* T1234c84(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_335 */
extern void T439f1340(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_334 */
extern void T439f1339(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_minus_name */
extern T0* T402f184(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.set_prefix_keyword */
extern void T1232f85(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_NAME.make_minus */
extern T0* T1232c87(GE_context* ac, T0* a1);
/* ET_PREFIX_NAME.default_keyword */
extern T0* T1232f31(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_333 */
extern void T439f1338(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_plus_name */
extern T0* T402f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_plus */
extern T0* T1232c86(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_332 */
extern void T439f1337(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_not_name */
extern T0* T402f182(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_not */
extern T0* T1232c84(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_331 */
extern void T439f1336(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_330 */
extern void T439f1335(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].force */
extern void T978f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ASSIGNER].fill_with */
extern void T980f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ASSIGNER].extend */
extern void T980f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T978f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T980f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_assigner */
extern T0* T402f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_329 */
extern void T439f1334(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_328 */
extern void T439f1333(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].force */
extern void T1061f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].fill_with */
extern void T1063f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].extend */
extern void T1063f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T1061f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T1063f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_external_alias */
extern T0* T402f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_327 */
extern void T439f1332(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_326 */
extern void T439f1331(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].force */
extern void T948f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].fill_with */
extern void T950f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].extend */
extern void T950f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_325 */
extern void T439f1330(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T948f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T950f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_324 */
extern void T439f1329(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_323 */
extern void T439f1328(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_322 */
extern void T439f1327(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_external_procedure */
extern T0* T439f872(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_AST_FACTORY.new_external_procedure */
extern T0* T402f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EXTERNAL_PROCEDURE.set_first_indexing */
extern void T1231f94(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_alias_clause */
extern void T1231f92(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_postconditions */
extern void T1231f91(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_preconditions */
extern void T1231f90(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_obsolete_message */
extern void T1231f89(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_is_keyword */
extern void T1231f88(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_keyword */
extern unsigned char ge807os11752;
extern T0* ge807ov11752;
extern T0* T81f593(GE_context* ac, T0* C);
/* ET_KEYWORD.make_is */
extern T0* T396c63(GE_context* ac);
/* ET_EXTERNAL_PROCEDURE.make */
extern T0* T1231c76(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.tokens */
extern T0* T1231f35(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_321 */
extern void T439f1326(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_320 */
extern void T439f1325(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_deferred_procedure */
extern T0* T402f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13);
/* ET_DEFERRED_PROCEDURE.set_first_indexing */
extern void T533f88(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_postconditions */
extern void T533f86(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_preconditions */
extern void T533f85(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_obsolete_message */
extern void T533f84(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_is_keyword */
extern void T533f83(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_319 */
extern void T439f1324(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_318 */
extern void T439f1323(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_procedure */
extern T0* T402f178(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_ONCE_PROCEDURE.set_first_indexing */
extern void T1230f94(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_rescue_clause */
extern void T1230f92(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_postconditions */
extern void T1230f91(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_compound */
extern void T1230f90(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_keys */
extern void T1230f89(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_locals */
extern void T1230f88(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_preconditions */
extern void T1230f87(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_obsolete_message */
extern void T1230f86(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_is_keyword */
extern void T1230f85(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.make */
extern T0* T1230c73(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.tokens */
extern T0* T1230f37(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_317 */
extern void T439f1322(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_316 */
extern void T439f1321(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_procedure */
extern T0* T402f177(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DO_PROCEDURE.set_first_indexing */
extern void T527f92(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_rescue_clause */
extern void T527f90(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_postconditions */
extern void T527f89(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_compound */
extern void T527f88(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_locals */
extern void T527f87(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_preconditions */
extern void T527f86(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_obsolete_message */
extern void T527f85(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_is_keyword */
extern void T527f84(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_315 */
extern void T439f1320(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_314 */
extern void T439f1319(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_external_function */
extern T0* T439f871(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_AST_FACTORY.new_external_function */
extern T0* T402f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EXTERNAL_FUNCTION.set_first_indexing */
extern void T259f96(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_alias_clause */
extern void T259f94(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_postconditions */
extern void T259f93(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_preconditions */
extern void T259f92(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_obsolete_message */
extern void T259f91(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_assigner */
extern void T259f90(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_is_keyword */
extern void T259f89(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.make */
extern T0* T259c77(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_FUNCTION.tokens */
extern T0* T259f57(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_313 */
extern void T439f1318(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_312 */
extern void T439f1317(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_311 */
extern void T439f1316(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_310 */
extern void T439f1315(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_deferred_function */
extern T0* T402f175(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DEFERRED_FUNCTION.set_first_indexing */
extern void T1228f90(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_postconditions */
extern void T1228f88(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_preconditions */
extern void T1228f87(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_obsolete_message */
extern void T1228f86(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_assigner */
extern void T1228f85(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_is_keyword */
extern void T1228f84(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.make */
extern T0* T1228c72(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.make */
extern void T1228f72p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.tokens */
extern T0* T1228f42(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_309 */
extern void T439f1314(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_308 */
extern void T439f1313(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_307 */
extern void T439f1312(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_306 */
extern void T439f1311(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_function */
extern T0* T402f174(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17, T0* a18);
/* ET_ONCE_FUNCTION.set_first_indexing */
extern void T1227f96(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_rescue_clause */
extern void T1227f94(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_postconditions */
extern void T1227f93(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_compound */
extern void T1227f92(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_keys */
extern void T1227f91(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_locals */
extern void T1227f90(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_preconditions */
extern void T1227f89(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_obsolete_message */
extern void T1227f88(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_assigner */
extern void T1227f87(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_is_keyword */
extern void T1227f86(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.make */
extern T0* T1227c74(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ONCE_FUNCTION.tokens */
extern T0* T1227f44(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_305 */
extern void T439f1310(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_304 */
extern void T439f1309(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_303 */
extern void T439f1308(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_302 */
extern void T439f1307(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_function */
extern T0* T402f172(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_DO_FUNCTION.set_first_indexing */
extern void T1226f94(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_rescue_clause */
extern void T1226f92(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_postconditions */
extern void T1226f91(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_compound */
extern void T1226f90(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_locals */
extern void T1226f89(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_preconditions */
extern void T1226f88(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_obsolete_message */
extern void T1226f87(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_assigner */
extern void T1226f86(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_is_keyword */
extern void T1226f85(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.make */
extern T0* T1226c73(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DO_FUNCTION.tokens */
extern T0* T1226f44(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_301 */
extern void T439f1306(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_300 */
extern void T439f1305(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_299 */
extern void T439f1304(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_298 */
extern void T439f1303(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_unique_attribute */
extern T0* T402f171(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_UNIQUE_ATTRIBUTE.set_assigner */
extern void T364f83(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.make */
extern T0* T364c71(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.unique_keyword */
extern unsigned char ge807os11778;
extern T0* ge807ov11778;
extern T0* T81f1262(GE_context* ac, T0* C);
/* ET_KEYWORD.make_unique */
extern T0* T396c55(GE_context* ac);
/* ET_UNIQUE_ATTRIBUTE.tokens */
extern T0* T364f55(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_297 */
extern void T439f1302(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_296 */
extern void T439f1301(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_constant_attribute */
extern T0* T402f170(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CONSTANT_ATTRIBUTE.set_assigner */
extern void T362f83(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.make */
extern T0* T362c71(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTANT_ATTRIBUTE.tokens */
extern T0* T362f55(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_295 */
extern void T439f1300(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_294 */
extern void T439f1299(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_extended_attribute */
extern T0* T402f169(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_EXTENDED_ATTRIBUTE.set_first_indexing */
extern void T330f92(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_rescue_clause */
extern void T330f90(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_postconditions */
extern void T330f89(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_compound */
extern void T330f88(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_locals */
extern void T330f87(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_preconditions */
extern void T330f86(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_obsolete_message */
extern void T330f85(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_assigner */
extern void T330f84(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.make */
extern T0* T330c72(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.make */
extern void T330f72p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.tokens */
extern T0* T330f58(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_293 */
extern void T439f1298(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_attribute */
extern T0* T402f168(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ATTRIBUTE.set_assigner */
extern void T365f81(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.make */
extern T0* T365c69(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ATTRIBUTE.tokens */
extern T0* T365f53(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_292 */
extern void T439f1297(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_291 */
extern void T439f1296(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_procedure_synonym */
extern void T439f1942(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].back */
extern void T729f21(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_back */
extern void T729f28(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].add_traversing_cursor */
extern void T729f29(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_traversing_cursor */
extern void T729f30(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_position */
extern void T1377f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left */
extern void T729f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left_cursor */
extern void T729f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put */
extern void T729f31(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_right */
extern void T729f34(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_right */
extern void T729f33(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put_last */
extern void T729f32(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].index */
extern T6 T1377f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_index */
extern T6 T729f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].forth */
extern void T729f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_forth */
extern void T729f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].before */
extern T1 T729f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_before */
extern T1 T729f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].before */
extern T1 T1377f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_procedure_synonym */
extern T0* T439f869(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_290 */
extern void T439f1295(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_extended_feature_name_comma */
extern T0* T402f166(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_289 */
extern void T439f1294(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_288 */
extern void T439f1293(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_287 */
extern void T439f1292(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_procedure */
extern void T439f1941(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].finish */
extern void T729f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_finish */
extern void T729f25(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].off */
extern T1 T1377f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].after */
extern T1 T1377f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_286 */
extern void T439f1291(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_285 */
extern void T439f1290(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_query_synonym */
extern void T439f1940(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].back */
extern void T733f21(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_back */
extern void T733f28(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].add_traversing_cursor */
extern void T733f29(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_traversing_cursor */
extern void T733f30(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_position */
extern void T1378f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left */
extern void T733f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left_cursor */
extern void T733f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_QUERY].put */
extern void T733f31(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_right */
extern void T733f34(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_right */
extern void T733f33(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].put_last */
extern void T733f32(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].index */
extern T6 T1378f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_index */
extern T6 T733f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].forth */
extern void T733f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_forth */
extern void T733f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].before */
extern T1 T733f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_before */
extern T1 T733f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].before */
extern T1 T1378f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_query_synonym */
extern T0* T439f868(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_284 */
extern void T439f1289(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_283 */
extern void T439f1288(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_282 */
extern void T439f1287(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_281 */
extern void T439f1286(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_query */
extern void T439f1939(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].finish */
extern void T733f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_finish */
extern void T733f25(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].off */
extern T1 T1378f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].after */
extern T1 T1378f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_280 */
extern void T439f1285(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_279 */
extern void T439f1284(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_278 */
extern void T439f1283(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_277 */
extern void T439f1282(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_276 */
extern void T439f1281(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_275 */
extern void T439f1280(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].force */
extern void T1064f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].fill_with */
extern void T1066f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].extend */
extern void T1066f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T1064f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T1066f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_clause */
extern T0* T402f165(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CLAUSE.make */
extern T0* T1065c4(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.feature_keyword */
extern unsigned char ge807os11743;
extern T0* ge807ov11743;
extern T0* T81f614(GE_context* ac, T0* C);
/* ET_KEYWORD.make_feature */
extern T0* T396c84(GE_context* ac);
/* ET_FEATURE_CLAUSE.tokens */
extern T0* T1065f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_any_clients */
extern T0* T439f867(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_client */
extern T0* T439f865(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_client */
extern T0* T402f330(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_274 */
extern void T439f1279(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_273 */
extern void T439f1278(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_272 */
extern void T439f1277(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_271 */
extern void T439f1276(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].force */
extern void T1067f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].fill_with */
extern void T1069f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].extend */
extern void T1069f10(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE_LIST.put_first */
extern void T1068f5(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE_LIST.fixed_array */
extern unsigned char ge522os12638;
extern T0* ge522ov12638;
extern T0* T1068f3(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].default_create */
extern T0* T1064c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_270 */
extern void T439f1275(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T1067f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T1069f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_clauses */
extern T0* T402f164(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CLAUSE_LIST.make_with_capacity */
extern T0* T1068c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].make */
extern T0* T1064f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].make_empty */
extern T0* T1066c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_269 */
extern void T439f1274(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_features */
extern void T439f1938(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_268 */
extern void T439f1273(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_267 */
extern void T439f1272(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_266 */
extern void T439f1271(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].force */
extern void T1174f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_ITEM].fill_with */
extern void T1176f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_ITEM].extend */
extern void T1176f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T1174f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T1176f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_comma */
extern T0* T402f163(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_265 */
extern void T439f1270(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].force */
extern void T1177f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_LIST].fill_with */
extern void T1179f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_LIST].extend */
extern void T1179f10(GE_context* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.put_first */
extern void T1315f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_264 */
extern void T439f1269(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T1177f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T1179f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_types */
extern T0* T402f162(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACED_TYPE_LIST.set_left_brace */
extern void T1315f11(GE_context* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern T0* T1315c9(GE_context* ac, T6 a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern void T1315f9p1(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_263 */
extern void T439f1268(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_262 */
extern void T439f1267(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_261 */
extern void T439f1266(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_260 */
extern void T439f1265(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].force */
extern void T1029f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE].fill_with */
extern void T1031f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE].extend */
extern void T1031f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T1029f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T1031f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_procedure */
extern T0* T402f161(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_PROCEDURE.make */
extern T0* T1224c9(GE_context* ac, T0* a1, T0* a2);
/* ET_CONVERT_PROCEDURE.tokens */
extern T0* T1224f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_259 */
extern void T439f1264(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_convert_function */
extern T0* T402f160(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FUNCTION.make */
extern T0* T1223c8(GE_context* ac, T0* a1, T0* a2);
/* ET_CONVERT_FUNCTION.tokens */
extern T0* T1223f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_258 */
extern void T439f1263(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].force */
extern void T1032f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].fill_with */
extern void T1034f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].extend */
extern void T1034f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T1032f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T1034f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_feature_comma */
extern T0* T402f159(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_257 */
extern void T439f1262(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].force */
extern void T1035f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].fill_with */
extern void T1037f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].extend */
extern void T1037f10(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_FEATURE_LIST.put_first */
extern void T1036f9(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_FEATURE_LIST.fixed_array */
extern unsigned char ge513os12638;
extern T0* ge513ov12638;
extern T0* T1036f7(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T1032c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_256 */
extern void T439f1261(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T1035f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T1037f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_features */
extern T0* T402f158(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern T0* T1036c8(GE_context* ac, T6 a1);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern void T1036f8p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].make */
extern T0* T1032f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].make_empty */
extern T0* T1034c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.convert_keyword */
extern unsigned char ge807os11728;
extern T0* ge807ov11728;
extern T0* T81f613(GE_context* ac, T0* C);
/* ET_KEYWORD.make_convert */
extern T0* T396c83(GE_context* ac);
/* ET_CONVERT_FEATURE_LIST.tokens */
extern T0* T1036f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_255 */
extern void T439f1260(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_254 */
extern void T439f1259(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_253 */
extern void T439f1258(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_252 */
extern void T439f1257(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_251 */
extern void T439f1256(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_250 */
extern void T439f1255(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T1075f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T1077f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_name_comma */
extern T0* T402f155(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_249 */
extern void T439f1254(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].force */
extern void T1040f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR].fill_with */
extern void T1042f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR].extend */
extern void T1042f10(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR.put_first */
extern void T1041f17(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR.fixed_array */
extern T0* T1041f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_248 */
extern void T439f1253(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].aliased_resized_area */
extern T0* T1040f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATOR].aliased_resized_area */
extern T0* T1042f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_creator */
extern T0* T402f157(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CREATOR.make_with_capacity */
extern T0* T1041c16(GE_context* ac, T0* a1, T6 a2);
/* ET_CREATOR.make_feature_name_list_with_capacity */
extern void T1041f18(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.creation_keyword */
extern unsigned char ge807os11730;
extern T0* ge807ov11730;
extern T0* T81f617(GE_context* ac, T0* C);
/* ET_KEYWORD.make_creation */
extern T0* T396c87(GE_context* ac);
/* ET_CREATOR.tokens */
extern T0* T1041f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_247 */
extern void T439f1252(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_246 */
extern void T439f1251(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_245 */
extern void T439f1250(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_244 */
extern void T439f1249(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_243 */
extern void T439f1248(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_242 */
extern void T439f1247(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_241 */
extern void T439f1246(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_240 */
extern void T439f1245(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_239 */
extern void T439f1244(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_238 */
extern void T439f1243(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_237 */
extern void T439f1242(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_236 */
extern void T439f1241(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_235 */
extern void T439f1240(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_234 */
extern void T439f1239(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].force */
extern void T1043f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR_LIST].fill_with */
extern void T1044f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR_LIST].extend */
extern void T1044f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T1043f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T1044f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_233 */
extern void T439f1238(GE_context* ac, T0* C);
/* ET_CREATOR_LIST.put_first */
extern void T833f10(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.fixed_array */
extern unsigned char ge517os12638;
extern T0* ge517ov12638;
extern T0* T833f7(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].default_create */
extern T0* T1040c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_232 */
extern void T439f1237(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_creators */
extern T0* T402f156(GE_context* ac, T0* C, T6 a1);
/* ET_CREATOR_LIST.make_with_capacity */
extern T0* T833c9(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].make */
extern T0* T1040f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].make_empty */
extern T0* T1042c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_231 */
extern void T439f1236(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_230 */
extern void T439f1235(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_229 */
extern void T439f1234(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_228 */
extern void T439f1233(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_227 */
extern void T439f1232(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].force */
extern void T1119f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].fill_with */
extern void T1120f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].extend */
extern void T1120f10(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.put_first */
extern void T500f9(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.fixed_array */
extern T0* T500f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_226 */
extern void T439f1231(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T1119f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T1120f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_keyword_feature_name_list */
extern T0* T402f154(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern T0* T500c8(GE_context* ac, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern void T500f8p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.redefine_keyword */
extern unsigned char ge807os11763;
extern T0* ge807ov11763;
extern T0* T81f621(GE_context* ac, T0* C);
/* ET_KEYWORD.make_redefine */
extern T0* T396c91(GE_context* ac);
/* ET_KEYWORD_FEATURE_NAME_LIST.tokens */
extern T0* T500f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_225 */
extern void T439f1230(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_224 */
extern void T439f1229(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_223 */
extern void T439f1228(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_222 */
extern void T439f1227(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_221 */
extern void T439f1226(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_220 */
extern void T439f1225(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_219 */
extern void T439f1224(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_218 */
extern void T439f1223(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_217 */
extern void T439f1222(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_216 */
extern void T439f1221(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_215 */
extern void T439f1220(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_214 */
extern void T439f1219(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_213 */
extern void T439f1218(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_212 */
extern void T439f1217(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_211 */
extern void T439f1216(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_210 */
extern void T439f1215(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_209 */
extern void T439f1214(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T1007f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T1008f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_client_comma */
extern T0* T439f866(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_client_comma */
extern T0* T402f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_208 */
extern void T439f1213(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_207 */
extern void T439f1212(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].force */
extern void T1009f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLIENTS].fill_with */
extern void T1011f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLIENTS].extend */
extern void T1011f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_206 */
extern void T439f1211(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_205 */
extern void T439f1210(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T1009f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T1011f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_clients */
extern T0* T402f153(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CLIENTS.set_left_brace */
extern void T1010f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.make_with_capacity */
extern T0* T1010c19(GE_context* ac, T6 a1);
/* ET_CLIENTS.make_with_capacity */
extern void T1010f19p1(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENTS.tokens */
extern T0* T1010f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_204 */
extern void T439f1209(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_203 */
extern void T439f1208(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_none_clients */
extern T0* T402f152(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.make */
extern T0* T1010c16(GE_context* ac);
/* ET_CLIENTS.make */
extern void T1010f16p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_202 */
extern void T439f1207(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201 */
extern void T439f1206(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_1_200 */
extern void T439f985(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_200 */
extern void T439f1205(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].force */
extern void T1070f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_EXPORT].fill_with */
extern void T1072f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_EXPORT].extend */
extern void T1072f10(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.put_first */
extern void T1071f11(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.fixed_array */
extern T0* T1071f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_199 */
extern void T439f1204(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T1070f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T1072f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_export */
extern T0* T402f150(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_with_capacity */
extern T0* T1071c10(GE_context* ac, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_feature_name_list_with_capacity */
extern void T1071f12(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_198 */
extern void T439f1203(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_197 */
extern void T439f1202(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].force */
extern void T1054f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT].fill_with */
extern void T1056f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT].extend */
extern void T1056f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].aliased_resized_area */
extern T0* T1054f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPORT].aliased_resized_area */
extern T0* T1056f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_null_export */
extern T0* T402f151(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_196 */
extern void T439f1201(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_195 */
extern void T439f1200(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_194 */
extern void T439f1199(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_193 */
extern void T439f1198(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_all_export */
extern T0* T402f149(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALL_EXPORT.make */
extern T0* T1221c7(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.all_keyword */
extern unsigned char ge807os11721;
extern T0* ge807ov11721;
extern T0* T81f762(GE_context* ac, T0* C);
/* ET_KEYWORD.make_all */
extern T0* T396c48(GE_context* ac);
/* ET_ALL_EXPORT.tokens */
extern T0* T1221f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_192 */
extern void T439f1197(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].force */
extern void T1057f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT_LIST].fill_with */
extern void T1058f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT_LIST].extend */
extern void T1058f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T1057f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T1058f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_191 */
extern void T439f1196(GE_context* ac, T0* C);
/* ET_EXPORT_LIST.put_first */
extern void T499f8(GE_context* ac, T0* C, T0* a1);
/* ET_EXPORT_LIST.fixed_array */
extern unsigned char ge520os12638;
extern T0* ge520ov12638;
extern T0* T499f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].default_create */
extern T0* T1054c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_190 */
extern void T439f1195(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_exports */
extern T0* T402f148(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_EXPORT_LIST.make_with_capacity */
extern T0* T499c7(GE_context* ac, T6 a1);
/* ET_EXPORT_LIST.make_with_capacity */
extern void T499f7p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].make */
extern T0* T1054f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].make_empty */
extern T0* T1056c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.export_keyword */
extern unsigned char ge807os11741;
extern T0* ge807ov11741;
extern T0* T81f608(GE_context* ac, T0* C);
/* ET_KEYWORD.make_export */
extern T0* T396c78(GE_context* ac);
/* ET_EXPORT_LIST.tokens */
extern T0* T499f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_189 */
extern void T439f1194(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_188 */
extern void T439f1193(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_187 */
extern void T439f1192(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_186 */
extern void T439f1191(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_185 */
extern void T439f1190(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_184 */
extern void T439f1189(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].force */
extern void T1163f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_ITEM].fill_with */
extern void T1165f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_ITEM].extend */
extern void T1165f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T1163f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T1165f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_rename_comma */
extern T0* T402f147(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_183 */
extern void T439f1188(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_rename */
extern T0* T402f146(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_182 */
extern void T439f1187(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].force */
extern void T1166f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_LIST].fill_with */
extern void T1167f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_LIST].extend */
extern void T1167f10(GE_context* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.put_first */
extern void T498f9(GE_context* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.fixed_array */
extern unsigned char ge547os12638;
extern T0* ge547ov12638;
extern T0* T498f7(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].default_create */
extern T0* T1163c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_181 */
extern void T439f1186(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T1166f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T1167f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_renames */
extern T0* T402f145(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_RENAME_LIST.make_with_capacity */
extern T0* T498c8(GE_context* ac, T6 a1);
/* ET_RENAME_LIST.make_with_capacity */
extern void T498f8p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].make */
extern T0* T1163f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].make_empty */
extern T0* T1165c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.rename_keyword */
extern unsigned char ge807os11765;
extern T0* ge807ov11765;
extern T0* T81f610(GE_context* ac, T0* C);
/* ET_KEYWORD.make_rename */
extern T0* T396c80(GE_context* ac);
/* ET_RENAME_LIST.tokens */
extern T0* T498f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_180 */
extern void T439f1185(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_179 */
extern void T439f1184(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_178 */
extern void T439f1183(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_177 */
extern void T439f1182(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_176 */
extern void T439f1181(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T1154f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T1155f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parent_semicolon */
extern T0* T402f144(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_175 */
extern void T439f1180(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_174 */
extern void T439f1179(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].force */
extern void T1156f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_LIST].fill_with */
extern void T1157f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_LIST].extend */
extern void T1157f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_173 */
extern void T439f1178(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_172 */
extern void T439f1177(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_171 */
extern void T439f1176(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T1156f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T1157f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parents */
extern T0* T402f143(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_170 */
extern void T439f1175(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_169 */
extern void T439f1174(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_168 */
extern void T439f1173(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_167 */
extern void T439f1172(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_166 */
extern void T439f1171(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_165 */
extern void T439f1170(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].force */
extern void T1152f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT].fill_with */
extern void T1153f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT].extend */
extern void T1153f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].aliased_resized_area */
extern T0* T1152f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT].aliased_resized_area */
extern T0* T1153f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_parent */
extern T0* T439f864(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_AST_FACTORY.new_parent */
extern T0* T402f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_CLASS.has_formal_parameter */
extern T1 T82f131(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_parameter */
extern T1 T642f8(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_164 */
extern void T439f1169(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_163 */
extern void T439f1168(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_162 */
extern void T439f1167(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_161 */
extern void T439f1166(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_160 */
extern void T439f1165(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_159 */
extern void T439f1164(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_158 */
extern void T439f1163(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_157 */
extern void T439f1162(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_156 */
extern void T439f1161(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_155 */
extern void T439f1160(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_154 */
extern void T439f1159(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_153 */
extern void T439f1158(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].force */
extern void T1146f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_OBSOLETE].fill_with */
extern void T1148f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_OBSOLETE].extend */
extern void T1148f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T1146f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T1148f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_obsolete_message */
extern T0* T402f142(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_152 */
extern void T439f1157(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_151 */
extern void T439f1156(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].force */
extern void T1017f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T1019f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].extend */
extern void T1019f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1017f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1019f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter_semicolon */
extern T0* T402f141(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter */
extern T0* T402f139(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.make */
extern T0* T1218c6(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_150 */
extern void T439f1155(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_149 */
extern void T439f1154(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].force */
extern void T1020f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].fill_with */
extern void T1022f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].extend */
extern void T1022f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.add_to_constraint_actual_parameter_list */
extern void T439f1937(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.put_first */
extern void T1021f13(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge877os12638;
extern T0* ge877ov12638;
extern T0* T1021f8(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T1017c3(GE_context* ac);
/* ET_AST_FACTORY.new_constraint_labeled_comma_actual_parameter */
extern T0* T402f140(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T1219c6(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.first */
extern T0* T1021f7(GE_context* ac, T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T1021f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_148 */
extern void T439f1153(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_147 */
extern void T439f1152(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_146 */
extern void T439f1151(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_145 */
extern void T439f1150(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1020f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1022f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_actual_parameters */
extern T0* T402f137(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T1021f14(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T1021c12(GE_context* ac, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T1021f12p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T1017f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T1019c5(GE_context* ac, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T1021f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_144 */
extern void T439f1149(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_143 */
extern void T439f1148(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_142 */
extern void T439f1147(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_141 */
extern void T439f1146(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_140 */
extern void T439f1145(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_139 */
extern void T439f1144(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_constraint_actual_parameter_comma */
extern T0* T402f138(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_138 */
extern void T439f1143(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_constraint_named_type */
extern T0* T439f863(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_constraint_named_type */
extern T0* T402f326(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.make */
extern T0* T1215c7(GE_context* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_generic_named_type */
extern T0* T402f325(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.make */
extern T0* T1420c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_137 */
extern void T439f1142(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_136 */
extern void T439f1141(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_135 */
extern void T439f1140(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_134 */
extern void T439f1139(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_133 */
extern void T439f1138(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_132 */
extern void T439f1137(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_131 */
extern void T439f1136(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_130 */
extern void T439f1135(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].force */
extern void T1026f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].fill_with */
extern void T1028f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].extend */
extern void T1028f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T1026f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T1028f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_129 */
extern void T439f1134(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_128 */
extern void T439f1133(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_127 */
extern void T439f1132(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_126 */
extern void T439f1131(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_125 */
extern void T439f1130(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_124 */
extern void T439f1129(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_123 */
extern void T439f1128(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_122 */
extern void T439f1127(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_121 */
extern void T439f1126(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_120 */
extern void T439f1125(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_119 */
extern void T439f1124(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_118 */
extern void T439f1123(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_117 */
extern void T439f1122(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_116 */
extern void T439f1121(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_115 */
extern void T439f1120(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_114 */
extern void T439f1119(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_113 */
extern void T439f1118(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_112 */
extern void T439f1117(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_111 */
extern void T439f1116(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_110 */
extern void T439f1115(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_109 */
extern void T439f1114(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_108 */
extern void T439f1113(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_107 */
extern void T439f1112(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_106 */
extern void T439f1111(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_105 */
extern void T439f1110(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_104 */
extern void T439f1109(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_103 */
extern void T439f1108(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_102 */
extern void T439f1107(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_101 */
extern void T439f1106(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_100 */
extern void T439f1105(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_99 */
extern void T439f1104(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_98 */
extern void T439f1103(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_97 */
extern void T439f1102(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_96 */
extern void T439f1101(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_95 */
extern void T439f1100(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_94 */
extern void T439f1099(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_93 */
extern void T439f1098(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_92 */
extern void T439f1097(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_91 */
extern void T439f1096(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_90 */
extern void T439f1095(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_89 */
extern void T439f1094(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_88 */
extern void T439f1093(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_87 */
extern void T439f1092(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_86 */
extern void T439f1091(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_85 */
extern void T439f1090(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_84 */
extern void T439f1089(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].force */
extern void T1023f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].fill_with */
extern void T1025f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].extend */
extern void T1025f10(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.put_first */
extern void T1024f13(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.fixed_array */
extern T0* T1024f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_83 */
extern void T439f1088(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T1023f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T1025f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_creator */
extern T0* T402f134(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern T0* T1024c12(GE_context* ac, T6 a1);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern void T1024f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.tokens */
extern T0* T1024f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_82 */
extern void T439f1087(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_81 */
extern void T439f1086(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_80 */
extern void T439f1085(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_79 */
extern void T439f1084(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_78 */
extern void T439f1083(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T1085f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T1087f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.register_constraint */
extern void T439f1936(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].force_last */
extern void T897f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].resize */
extern void T897f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_capacity */
extern T6 T897f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].extendible */
extern T1 T897f7(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constrained_formal_parameter */
extern T0* T402f133(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_type_mark */
extern void T1214f77(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make */
extern T0* T1214c76(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make_unconstrained */
extern void T1214f79(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.arrow_symbol */
extern unsigned char ge807os11695;
extern T0* ge807ov11695;
extern T0* T81f586(GE_context* ac, T0* C);
/* ET_SYMBOL.make_arrow */
extern T0* T345c90(GE_context* ac);
/* ET_CONSTRAINED_FORMAL_PARAMETER.tokens */
extern T0* T1214f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.dummy_constraint */
extern T0* T439f862(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_77 */
extern void T439f1082(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_76 */
extern void T439f1081(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_75 */
extern void T439f1080(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_74 */
extern void T439f1079(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_73 */
extern void T439f1078(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_72 */
extern void T439f1077(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_formal_parameter */
extern T0* T402f132(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.set_type_mark */
extern void T1086f76(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.make */
extern T0* T1086c75(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_71 */
extern void T439f1076(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_70 */
extern void T439f1075(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_69 */
extern void T439f1074(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].force */
extern void T1088f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].fill_with */
extern void T1090f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].extend */
extern void T1090f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1088f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1090f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_parameter_comma */
extern T0* T402f131(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_68 */
extern void T439f1073(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].force */
extern void T1091f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].fill_with */
extern void T1092f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].extend */
extern void T1092f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T642f31(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_index */
extern void T1214f78(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.set_index */
extern void T1086f77(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.capacity */
extern T6 T642f16(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T642f31p1(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge527os12638;
extern T0* ge527ov12638;
extern T0* T642f15(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T1088c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_67 */
extern void T439f1072(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1091f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1092f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_parameters */
extern T0* T402f130(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_PARAMETER_LIST.set_left_bracket */
extern void T642f32(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern T0* T642c26(GE_context* ac, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern void T642f26p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T1088f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].make_empty */
extern T0* T1090c5(GE_context* ac, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.tokens */
extern T0* T642f13(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_66 */
extern void T439f1071(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_65 */
extern void T439f1070(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_formal_parameters */
extern void T439f1933(GE_context* ac, T0* C, T0* a1);
extern T1 T439f1933ot1(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].wipe_out */
extern void T897f11(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].keep_head */
extern void T1028f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].set_count */
extern void T1028f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].move_all_cursors_after */
extern void T897f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_next_cursor */
extern void T1481f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_after */
extern void T1481f6(GE_context* ac, T0* C);
/* ET_CLASS.set_formal_parameters */
extern void T82f235(GE_context* ac, T0* C, T0* a1);
extern T1 T82f235ot1(T0* a1);
/* ET_FORMAL_PARAMETER_LIST.remove */
extern void T642f27(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T1088f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T1090f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].set_count */
extern void T1090f9(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint */
extern void T1214f81(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].item */
extern T0* T897f6(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_64 */
extern void T439f1069(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_63 */
extern void T439f1068(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_62 */
extern void T439f1067(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_61 */
extern void T439f1066(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_60 */
extern void T439f1065(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_59 */
extern void T439f1064(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_58 */
extern void T439f1063(GE_context* ac, T0* C);
/* ET_CLASS.set_external_keyword */
extern void T82f233(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_frozen_keyword */
extern void T82f232(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_class_mark */
extern void T82f238(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_class_keyword */
extern void T82f231(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_class */
extern T0* T439f860(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_in_system */
extern void T82f241(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.set_time_stamp */
extern void T82f230(GE_context* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.add_last_local_class */
extern void T470f69(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_non_override_class */
extern void T470f84(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].force_last */
extern void T1316f22(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_override_class */
extern void T470f83(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_ignored_class */
extern void T470f82(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_name */
extern void T82f240(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.reset */
extern void T82f239(GE_context* ac, T0* C);
/* ET_CLASS.reset_parsed */
extern void T82f229(GE_context* ac, T0* C);
/* ET_CLASS.reset_ancestors_built */
extern void T82f228(GE_context* ac, T0* C);
/* ET_CLASS.reset_features_flattened */
extern void T82f227(GE_context* ac, T0* C);
/* ET_CLASS.reset_interface_checked */
extern void T82f226(GE_context* ac, T0* C);
/* ET_CLASS.reset_implementation_checked */
extern void T82f225(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.set_modified */
extern void T470f68(GE_context* ac, T0* C, T1 a1);
/* KL_UNIX_FILE_SYSTEM.same_pathnames */
extern T1 T121f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_PATHNAME.same_pathname */
extern T1 T538f14(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.is_subpathname */
extern T1 T538f16(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.string_ */
extern T0* T538f18(GE_context* ac, T0* C);
/* KL_PATHNAME.string_equality_tester */
extern T0* T538f19(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.same_pathnames */
extern T1 T120f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_PATHNAME.same_case_insensitive */
extern T1 T538f13(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.is_case_insensitive_subpathname */
extern T1 T538f15(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.case_insensitive_string_equality_tester */
extern T0* T538f17(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.file_system */
extern T0* T439f916(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.unix_file_system */
extern T0* T439f925(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.windows_file_system */
extern T0* T439f924(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.operating_system */
extern T0* T439f923(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvscn1a_error */
extern void T36f223(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvscn1a */
extern T0* T531c745(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvscn1a_error */
extern void T77f224(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MASTER_CLASS.first_local_class */
extern T0* T470f23(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.has_local_class */
extern T1 T470f22(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_hidden_class */
extern T1 T470f27(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].has */
extern T1 T1316f13(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_ignored_class */
extern T1 T470f26(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_non_override_class */
extern T1 T470f25(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_override_class */
extern T1 T470f24(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_57 */
extern void T439f1062(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_56 */
extern void T439f1061(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_55 */
extern void T439f1060(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_54 */
extern void T439f1059(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].force */
extern void T1105f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].fill_with */
extern void T1107f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].extend */
extern void T1107f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].aliased_resized_area */
extern T0* T1105f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].aliased_resized_area */
extern T0* T1107f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_indexing_term_comma */
extern T0* T402f129(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_53 */
extern void T439f1058(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].force */
extern void T1102f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM].fill_with */
extern void T1104f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM].extend */
extern void T1104f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].aliased_resized_area */
extern T0* T1102f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INDEXING_TERM].aliased_resized_area */
extern T0* T1104f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_custom_attribute */
extern T0* T402f128(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CUSTOM_ATTRIBUTE.make */
extern T0* T1213c5(GE_context* ac, T0* a1, T0* a2);
/* ET_CUSTOM_ATTRIBUTE.tokens */
extern T0* T1213f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_52 */
extern void T439f1057(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_51 */
extern void T439f1056(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_50 */
extern void T439f1055(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_49 */
extern void T439f1054(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_48 */
extern void T439f1053(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_47 */
extern void T439f1052(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_46 */
extern void T439f1051(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_45 */
extern void T439f1050(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].force */
extern void T1108f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].fill_with */
extern void T1110f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].extend */
extern void T1110f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_44 */
extern void T439f1049(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].aliased_resized_area */
extern T0* T1108f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].aliased_resized_area */
extern T0* T1110f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_indexing_terms */
extern T0* T402f127(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_43 */
extern void T439f1048(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].force */
extern void T1099f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_ITEM].fill_with */
extern void T1101f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_ITEM].extend */
extern void T1101f10(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_indexing_semicolon */
extern T0* T402f125(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_42 */
extern void T439f1047(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_41 */
extern void T439f1046(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].aliased_resized_area */
extern T0* T1099f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INDEXING_ITEM].aliased_resized_area */
extern T0* T1101f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_tagged_indexing */
extern T0* T402f124(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_40 */
extern void T439f1045(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_indexing */
extern T0* T402f126(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_39 */
extern void T439f1044(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_38 */
extern void T439f1043(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].force */
extern void T1096f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_LIST].fill_with */
extern void T1098f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_LIST].extend */
extern void T1098f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].aliased_resized_area */
extern T0* T1096f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INDEXING_LIST].aliased_resized_area */
extern T0* T1098f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_37 */
extern void T439f1042(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_36 */
extern void T439f1041(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_35 */
extern void T439f1040(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_34 */
extern void T439f1039(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_indexings */
extern T0* T402f122(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_33 */
extern void T439f1038(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_32 */
extern void T439f1037(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_31 */
extern void T439f1036(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_30 */
extern void T439f1035(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_29 */
extern void T439f1034(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_28 */
extern void T439f1033(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_27 */
extern void T439f1032(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_26 */
extern void T439f1031(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_25 */
extern void T439f1030(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_24 */
extern void T439f1029(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_23 */
extern void T439f1028(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_22 */
extern void T439f1027(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_21 */
extern void T439f1026(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_20 */
extern void T439f1025(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_19 */
extern void T439f1024(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_18 */
extern void T439f1023(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_17 */
extern void T439f1022(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_16 */
extern void T439f1021(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_providers */
extern void T439f1927(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].wipe_out */
extern void T880f38(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].slots_wipe_out */
extern void T880f54(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].clashes_wipe_out */
extern void T880f53(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].key_storage_wipe_out */
extern void T880f52(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].item_storage_wipe_out */
extern void T880f51(GE_context* ac, T0* C);
/* SPECIAL [ET_NAMED_CLASS].keep_head */
extern void T1468f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_CLASS].set_count */
extern void T1468f9(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].move_all_cursors_after */
extern void T880f50(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].forth */
extern void T880f41(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].put_last */
extern void T880f40(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].compress */
extern void T880f58(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].key_storage_keep_head */
extern void T880f68(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].item_storage_keep_head */
extern void T880f67(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].move_all_cursors */
extern void T880f66(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].key_storage_put */
extern void T880f65(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].item_for_iteration */
extern T0* T880f17(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].after */
extern T1 T880f22(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].cursor_after */
extern T1 T880f24(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].start */
extern void T880f39(GE_context* ac, T0* C);
/* ET_CLASS.set_providers */
extern void T82f234(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].make */
extern T0* T880c36(GE_context* ac, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].set_internal_cursor */
extern void T880f48(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].make_slots */
extern void T880f46(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].make_clashes */
extern void T880f45(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].make_key_storage */
extern void T880f44(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].make_item_storage */
extern void T880f43(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].make */
extern T0* T1470f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_CLASS].make_empty */
extern T0* T1468c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].default_create */
extern T0* T1470c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_15 */
extern void T439f1020(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_to_inheritance_end */
extern void T439f1926(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.set_class_to_end */
extern void T439f1925(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CLASS.set_end_keyword */
extern void T82f261(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_second_indexing */
extern void T82f260(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_invariants */
extern void T82f259(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_feature_clauses */
extern void T82f258(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_convert_features */
extern void T82f257(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_creators */
extern void T82f256(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_parent_clause */
extern void T82f255(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_obsolete_message */
extern void T82f254(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT.set_end_keyword */
extern void T466f12(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_LIST.last */
extern T0* T467f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_14 */
extern void T439f1019(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_13 */
extern void T439f1018(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_12 */
extern void T439f1017(GE_context* ac, T0* C);
/* ET_CLASS.set_first_indexing */
extern void T82f253(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_11 */
extern void T439f1016(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_10 */
extern void T439f1015(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_9 */
extern void T439f1014(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_8 */
extern void T439f1013(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_7 */
extern void T439f1012(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_6 */
extern void T439f1011(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_5 */
extern void T439f1010(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_4 */
extern void T439f1009(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_3 */
extern void T439f1008(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_2 */
extern void T439f1007(GE_context* ac, T0* C);
/* ET_CLASS.set_leading_break */
extern void T82f252(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_1 */
extern void T439f1006(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_push_last_value */
extern void T439f961(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].force */
extern void T953f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].fill_with */
extern void T955f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].extend */
extern void T955f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T953f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T955f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].force */
extern void T951f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].fill_with */
extern void T952f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].extend */
extern void T952f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T951f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T952f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].force */
extern void T945f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_VOID].fill_with */
extern void T947f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_VOID].extend */
extern void T947f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].aliased_resized_area */
extern T0* T945f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_VOID].aliased_resized_area */
extern T0* T947f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].force */
extern void T942f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].fill_with */
extern void T944f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].extend */
extern void T944f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T942f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T944f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].force */
extern void T939f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].fill_with */
extern void T941f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].extend */
extern void T941f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T939f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T941f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].force */
extern void T937f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RESULT].fill_with */
extern void T938f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RESULT].extend */
extern void T938f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].aliased_resized_area */
extern T0* T937f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RESULT].aliased_resized_area */
extern T0* T938f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T934f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T936f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].force */
extern void T929f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].fill_with */
extern void T931f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].extend */
extern void T931f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T929f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T931f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T926f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T928f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].force */
extern void T923f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FREE_OPERATOR].fill_with */
extern void T925f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FREE_OPERATOR].extend */
extern void T925f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T923f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T925f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].force */
extern void T921f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CURRENT].fill_with */
extern void T922f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CURRENT].extend */
extern void T922f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].aliased_resized_area */
extern T0* T921f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CURRENT].aliased_resized_area */
extern T0* T922f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].force */
extern void T915f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BREAK].fill_with */
extern void T917f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BREAK].extend */
extern void T917f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].aliased_resized_area */
extern T0* T915f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BREAK].aliased_resized_area */
extern T0* T917f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T912f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T914f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].force */
extern void T910f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_POSITION].fill_with */
extern void T911f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_POSITION].extend */
extern void T911f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].aliased_resized_area */
extern T0* T910f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_POSITION].aliased_resized_area */
extern T0* T911f3(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].force */
extern void T905f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].fill_with */
extern void T907f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].extend */
extern void T907f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T905f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T907f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].force */
extern void T902f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_KEYWORD].fill_with */
extern void T904f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_KEYWORD].extend */
extern void T904f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T902f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T904f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.accept */
extern void T439f960(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action */
extern void T439f958(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_error */
extern void T439f984(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1600_1799 */
extern void T439f983(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_eof_expected_error */
extern void T439f1005(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1400_1599 */
extern void T439f982(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1200_1399 */
extern void T439f981(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1000_1199 */
extern void T439f980(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_800_999 */
extern void T439f979(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_600_799 */
extern void T439f978(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_400_599 */
extern void T439f977(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_200_399 */
extern void T439f976(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_0_199 */
extern void T439f975(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.read_token */
extern void T439f957(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_execute_action */
extern void T439f974(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.less */
extern void T439f1004(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_break */
extern void T439f993(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_comment */
extern T0* T402f16(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_break */
extern T0* T402f15(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_underscored_real_constant */
extern T0* T402f14(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_position */
extern void T1204f39(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_REAL_CONSTANT.make */
extern T0* T1204c34(GE_context* ac, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.make_leaf */
extern void T1204f40(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_literal */
extern T0* T439f929(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_regular_real_constant */
extern T0* T402f13(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_position */
extern void T1203f39(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_REAL_CONSTANT.make */
extern T0* T1203c34(GE_context* ac, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.make_leaf */
extern void T1203f40(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_binary_integer_constant */
extern T0* T402f12(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_position */
extern void T1202f68(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_BINARY_INTEGER_CONSTANT.make */
extern T0* T1202c63(GE_context* ac, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.compute_value */
extern void T1202f70(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.make_leaf */
extern void T1202f69(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_octal_integer_constant */
extern T0* T402f11(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_position */
extern void T1201f68(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_OCTAL_INTEGER_CONSTANT.make */
extern T0* T1201c63(GE_context* ac, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.compute_value */
extern void T1201f70(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.make_leaf */
extern void T1201f69(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_hexadecimal_integer_constant */
extern T0* T402f10(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_position */
extern void T1200f68(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make */
extern T0* T1200c63(GE_context* ac, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.compute_value */
extern void T1200f70(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make_leaf */
extern void T1200f69(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_silu_error */
extern void T36f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_silu_error */
extern void T77f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sifu_error */
extern void T36f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sifu_error */
extern void T77f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_underscored_integer_constant */
extern T0* T402f9(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_position */
extern void T1199f68(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make */
extern T0* T1199c63(GE_context* ac, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.compute_value */
extern void T1199f70(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make_leaf */
extern void T1199f69(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_regular_integer_constant */
extern T0* T402f8(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_position */
extern void T1198f68(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_INTEGER_CONSTANT.make */
extern T0* T1198c63(GE_context* ac, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.compute_value */
extern void T1198f70(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.make_leaf */
extern void T1198f69(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_ssnp_error */
extern void T36f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnp_error */
extern void T77f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssel_error */
extern void T36f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssel_error */
extern void T77f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnl_error */
extern void T36f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnl_error */
extern void T77f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sssc_error */
extern void T36f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sssc_error */
extern void T77f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sscu_error */
extern void T36f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sscu_error */
extern void T77f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssac_error */
extern void T36f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssac_error */
extern void T77f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssas_error */
extern void T36f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssas_error */
extern void T77f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssao_error */
extern void T36f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssao_error */
extern void T77f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_special_manifest_string */
extern T0* T402f7(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_position */
extern void T1197f39(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_special_manifest_string */
extern T0* T439f932(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.make */
extern T0* T1197c35(GE_context* ac, T0* a1, T0* a2);
/* ET_SPECIAL_MANIFEST_STRING.make_leaf */
extern void T1197f40(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.integer_ */
extern T0* T439f936(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_verbatim_string */
extern T0* T402f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* ET_VERBATIM_STRING.set_position */
extern void T1196f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_verbatim_string */
extern T0* T439f931(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_VERBATIM_STRING.make */
extern T0* T1196c39(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_VERBATIM_STRING.make_leaf */
extern void T1196f44(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.is_verbatim_string_closer */
extern T1 T439f702(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.text */
extern T0* T439f700(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].force_new */
extern void T419f54(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].resize */
extern void T419f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_resize */
extern void T419f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].special_integer_ */
extern T0* T419f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_resize */
extern void T419f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_resize */
extern void T419f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_resize */
extern void T419f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_capacity */
extern T6 T419f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_key */
extern T0* T419f34(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.strings */
extern unsigned char ge1029os22286;
extern T0* ge1029ov22286;
extern T0* T439f915(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.string_equality_tester */
extern T0* T439f922(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.append_text_to_string */
extern void T439f2108(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.append_substring_to_string */
extern void T854f14(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.any_ */
extern T0* T854f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.string_ */
extern T0* T439f914(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.string_buffer */
extern unsigned char ge1029os22287;
extern T0* ge1029ov22287;
extern T0* T439f913(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.text_substring */
extern T0* T439f698(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.append_text_substring_to_string */
extern void T439f2107(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PARSER.process_regular_manifest_string */
extern void T439f1003(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_regular_manifest_string */
extern T0* T402f5(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_position */
extern void T831f39(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_MANIFEST_STRING.make */
extern T0* T831c34(GE_context* ac, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.make_leaf */
extern void T831f35(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_sceq_error */
extern void T36f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sceq_error */
extern void T77f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scqq_error */
extern void T36f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scqq_error */
extern void T77f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scac_error */
extern void T36f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scac_error */
extern void T77f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scas_error */
extern void T36f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scas_error */
extern void T77f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scao_error */
extern void T36f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scao_error */
extern void T77f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_c3_character_constant */
extern T0* T402f4(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_position */
extern void T1195f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_c3_character_constant */
extern T0* T439f930(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.make */
extern T0* T1195c37(GE_context* ac, T0* a1, T3 a2);
/* ET_C3_CHARACTER_CONSTANT.make_leaf */
extern void T1195f42(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_c2_character_constant */
extern void T439f1002(GE_context* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_c2_character_constant */
extern T0* T402f121(GE_context* ac, T0* C, T2 a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.set_position */
extern void T1209f40(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_C2_CHARACTER_CONSTANT.make */
extern T0* T1209c36(GE_context* ac, T3 a1);
/* ET_C2_CHARACTER_CONSTANT.make_leaf */
extern void T1209f41(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_scsc_error */
extern void T36f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scsc_error */
extern void T77f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sccu_error */
extern void T36f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sccu_error */
extern void T77f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.process_c1_character_constant */
extern void T439f1001(GE_context* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_c1_character_constant */
extern T0* T402f120(GE_context* ac, T0* C, T2 a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.set_position */
extern void T1208f40(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.make */
extern T0* T1208c36(GE_context* ac, T3 a1);
/* ET_C1_CHARACTER_CONSTANT.make_leaf */
extern void T1208f41(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_sctq_error */
extern void T36f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sctq_error */
extern void T77f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_free_operator */
extern T0* T402f3(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_position */
extern void T924f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FREE_OPERATOR.make_prefix */
extern T0* T924c47(GE_context* ac, T0* a1);
/* ET_FREE_OPERATOR.string_ */
extern T0* T924f10(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.make_token */
extern void T924f51(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_leaf */
extern void T924f52(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_start_condition */
extern void T439f994(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.more */
extern void T439f1000(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_identifier */
extern void T439f999(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_detachable_keyword */
extern T0* T402f119(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.set_position */
extern void T396f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.use_detachable_keyword */
extern T1 T439f834(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_reference_keyword */
extern T0* T402f118(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_reference */
extern T0* T396c59(GE_context* ac);
/* ET_EIFFEL_PARSER.use_reference_keyword */
extern T1 T439f832(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_keyword */
extern T0* T402f117(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_position */
extern void T906f19(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_invariant_keyword */
extern T0* T402f116(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_attribute_keyword */
extern T0* T402f115(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_attribute_keyword */
extern T1 T439f828(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_undefine_keyword */
extern T0* T402f114(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.undefine_keyword */
extern unsigned char ge807os11777;
extern T0* ge807ov11777;
extern T0* T81f622(GE_context* ac, T0* C);
/* ET_KEYWORD.make_undefine */
extern T0* T396c92(GE_context* ac);
/* ET_AST_FACTORY.new_separate_keyword */
extern T0* T402f113(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_separate */
extern T0* T396c58(GE_context* ac);
/* ET_AST_FACTORY.new_redefine_keyword */
extern T0* T402f112(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_obsolete_keyword */
extern T0* T402f111(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.obsolete_keyword */
extern unsigned char ge807os11757;
extern T0* ge807ov11757;
extern T0* T81f620(GE_context* ac, T0* C);
/* ET_KEYWORD.make_obsolete */
extern T0* T396c90(GE_context* ac);
/* ET_AST_FACTORY.new_indexing_keyword */
extern T0* T402f110(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.indexing_keyword */
extern unsigned char ge807os11747;
extern T0* ge807ov11747;
extern T0* T81f619(GE_context* ac, T0* C);
/* ET_KEYWORD.make_indexing */
extern T0* T396c89(GE_context* ac);
/* ET_AST_FACTORY.new_external_keyword */
extern T0* T402f109(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.external_keyword */
extern unsigned char ge807os11742;
extern T0* ge807ov11742;
extern T0* T81f618(GE_context* ac, T0* C);
/* ET_KEYWORD.make_external */
extern T0* T396c88(GE_context* ac);
/* ET_AST_FACTORY.new_expanded_keyword */
extern T0* T402f108(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_expanded */
extern T0* T396c57(GE_context* ac);
/* ET_AST_FACTORY.new_deferred_keyword */
extern T0* T402f107(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_creation_keyword */
extern T0* T402f106(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_attached_keyword */
extern T0* T402f105(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_attached_keyword */
extern T1 T439f817(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_variant_keyword */
extern T0* T402f104(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_require_keyword */
extern T0* T402f103(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_inspect_keyword */
extern T0* T402f102(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.inspect_keyword */
extern unsigned char ge807os11750;
extern T0* ge807ov11750;
extern T0* T81f615(GE_context* ac, T0* C);
/* ET_KEYWORD.make_inspect */
extern T0* T396c85(GE_context* ac);
/* ET_AST_FACTORY.new_inherit_keyword */
extern T0* T402f101(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_implies_keyword */
extern T0* T402f100(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.set_position */
extern void T930f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_OPERATOR.make_implies */
extern T0* T930c52(GE_context* ac);
/* ET_AST_FACTORY.new_feature_keyword */
extern T0* T402f99(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_convert_keyword */
extern T0* T402f98(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_current_keyword */
extern T0* T402f97(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.set_position */
extern void T285f35(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_unique_keyword */
extern T0* T402f96(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_select_keyword */
extern T0* T402f95(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.select_keyword */
extern unsigned char ge807os11770;
extern T0* ge807ov11770;
extern T0* T81f612(GE_context* ac, T0* C);
/* ET_KEYWORD.make_select */
extern T0* T396c82(GE_context* ac);
/* ET_AST_FACTORY.new_result_keyword */
extern T0* T402f94(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT.set_position */
extern void T312f34(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_rescue_keyword */
extern T0* T402f93(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_rename_keyword */
extern T0* T402f92(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_prefix_keyword */
extern T0* T402f91(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_frozen_keyword */
extern T0* T402f90(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_frozen */
extern T0* T396c54(GE_context* ac);
/* ET_AST_FACTORY.new_export_keyword */
extern T0* T402f89(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_ensure_keyword */
extern T0* T402f88(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_elseif_keyword */
extern T0* T402f87(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.elseif_keyword */
extern unsigned char ge807os11737;
extern T0* ge807ov11737;
extern T0* T81f607(GE_context* ac, T0* C);
/* ET_KEYWORD.make_elseif */
extern T0* T396c77(GE_context* ac);
/* ET_AST_FACTORY.new_create_keyword */
extern T0* T402f86(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_keyword */
extern T0* T402f85(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.assign_keyword */
extern unsigned char ge807os11723;
extern T0* ge807ov11723;
extern T0* T81f606(GE_context* ac, T0* C);
/* ET_KEYWORD.make_assign */
extern T0* T396c76(GE_context* ac);
/* ET_AST_FACTORY.new_across_keyword */
extern T0* T402f84(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_until_keyword */
extern T0* T402f83(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.until_keyword */
extern unsigned char ge807os11779;
extern T0* ge807ov11779;
extern T0* T81f605(GE_context* ac, T0* C);
/* ET_KEYWORD.make_until */
extern T0* T396c75(GE_context* ac);
/* ET_AST_FACTORY.new_identifier */
extern T0* T402f82(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.last_identifier */
extern T0* T437f127(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].replace_found_item */
extern void T419f60(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.strings */
extern T0* T437f130(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.tokens */
extern T0* T437f57(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.string_equality_tester */
extern T0* T437f132(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.append_text_substring_to_string */
extern void T437f196(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PREPARSER.string_ */
extern T0* T437f129(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.string_buffer */
extern T0* T437f128(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_identifier */
extern T0* T439f933(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_strip_keyword */
extern T0* T402f81(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_retry_keyword */
extern T0* T402f80(GE_context* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.set_position */
extern void T940f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_RETRY_INSTRUCTION.make */
extern T0* T940c13(GE_context* ac);
/* ET_RETRY_INSTRUCTION.make_token */
extern void T940f15(GE_context* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.make_leaf */
extern void T940f16(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.tokens */
extern T0* T940f7(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_local_keyword */
extern T0* T402f79(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_infix_keyword */
extern T0* T402f78(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_false_keyword */
extern T0* T402f77(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.set_position */
extern void T1207f35(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FALSE_CONSTANT.make */
extern T0* T1207c32(GE_context* ac);
/* ET_FALSE_CONSTANT.make_token */
extern void T1207f36(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.make_leaf */
extern void T1207f37(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.tokens */
extern T0* T1207f11(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_debug_keyword */
extern T0* T402f76(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_class_keyword */
extern T0* T402f75(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_check_keyword */
extern T0* T402f74(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_alias_keyword */
extern T0* T402f73(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_agent_keyword */
extern T0* T402f72(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_KEYWORD.set_position */
extern void T903f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_when_keyword */
extern T0* T402f71(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_void_keyword */
extern T0* T402f70(GE_context* ac, T0* C, T0* a1);
/* ET_VOID.set_position */
extern void T946f31(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_VOID.make */
extern T0* T946c28(GE_context* ac);
/* ET_VOID.make_token */
extern void T946f32(GE_context* ac, T0* C, T0* a1);
/* ET_VOID.make_leaf */
extern void T946f33(GE_context* ac, T0* C);
/* ET_VOID.tokens */
extern T0* T946f11(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_true_keyword */
extern T0* T402f69(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.set_position */
extern void T1206f35(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_then_keyword */
extern T0* T402f68(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_some_keyword */
extern T0* T402f67(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_some */
extern T0* T396c50(GE_context* ac);
/* ET_AST_FACTORY.new_note_keyword */
extern T0* T402f66(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.note_keyword */
extern unsigned char ge807os11756;
extern T0* ge807ov11756;
extern T0* T81f597(GE_context* ac, T0* C);
/* ET_KEYWORD.make_note */
extern T0* T396c67(GE_context* ac);
/* ET_EIFFEL_PARSER.use_note_keyword */
extern T1 T439f776(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_keyword */
extern T0* T402f65(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_like_keyword */
extern T0* T402f64(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_from_keyword */
extern T0* T402f63(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_else_keyword */
extern T0* T402f62(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_xor_keyword */
extern T0* T402f61(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_xor */
extern T0* T930c51(GE_context* ac);
/* ET_AST_FACTORY.new_old_keyword */
extern T0* T402f60(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_not_keyword */
extern T0* T402f59(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_not */
extern T0* T930c50(GE_context* ac);
/* ET_AST_FACTORY.new_end_keyword */
extern T0* T402f58(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_all_keyword */
extern T0* T402f57(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_and_keyword */
extern T0* T402f56(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_or_keyword */
extern T0* T402f55(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_is_keyword */
extern T0* T402f54(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_if_keyword */
extern T0* T402f53(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.if_keyword */
extern unsigned char ge807os11746;
extern T0* ge807ov11746;
extern T0* T81f592(GE_context* ac, T0* C);
/* ET_KEYWORD.make_if */
extern T0* T396c62(GE_context* ac);
/* ET_AST_FACTORY.new_do_keyword */
extern T0* T402f52(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_as_keyword */
extern T0* T402f51(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_keyword */
extern T0* T402f2(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_two_char_symbol */
extern void T439f998(GE_context* ac, T0* C, T2 a1, T2 a2);
/* ET_AST_FACTORY.new_assign_attempt_symbol */
extern T0* T402f50(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_symbol */
extern T0* T402f49(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_dotdot_symbol */
extern T0* T402f48(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_arrow_symbol */
extern T0* T402f47(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_array_symbol */
extern T0* T402f46(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.set_position */
extern void T345f77(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_le_symbol */
extern T0* T402f45(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_position */
extern void T943f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_SYMBOL_OPERATOR.make_le */
extern T0* T943c67(GE_context* ac);
/* ET_SYMBOL_OPERATOR.make_leaf */
extern void T943f72(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_right_array_symbol */
extern T0* T402f44(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_ge_symbol */
extern T0* T402f43(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_ge */
extern T0* T943c66(GE_context* ac);
/* ET_AST_FACTORY.new_mod_symbol */
extern T0* T402f42(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_mod */
extern T0* T943c65(GE_context* ac);
/* ET_AST_FACTORY.new_not_tilde_symbol */
extern T0* T402f41(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_not_tilde */
extern T0* T345c82(GE_context* ac);
/* ET_AST_FACTORY.new_not_equal_symbol */
extern T0* T402f40(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_not_equal */
extern T0* T345c81(GE_context* ac);
/* ET_AST_FACTORY.new_div_symbol */
extern T0* T402f39(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_div */
extern T0* T943c64(GE_context* ac);
/* ET_EIFFEL_PARSER.text_count */
extern T6 T439f684(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_set_line_column */
extern void T439f997(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_one_char_symbol */
extern void T439f996(GE_context* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_tilde_symbol */
extern T0* T402f38(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_tilde */
extern T0* T345c80(GE_context* ac);
/* ET_AST_FACTORY.new_dollar_symbol */
extern T0* T402f37(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_bracket_symbol */
extern T0* T402f36(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_bracket_symbol */
extern T0* T402f35(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.set_position */
extern void T649f104(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_right_brace_symbol */
extern T0* T402f34(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_brace_symbol */
extern T0* T402f33(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_parenthesis_symbol */
extern T0* T402f32(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_parenthesis_symbol */
extern T0* T402f31(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_question_mark_symbol */
extern T0* T402f30(GE_context* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.set_position */
extern void T954f72(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_bang_symbol */
extern T0* T402f29(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_symbol */
extern T0* T402f28(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_comma_symbol */
extern T0* T402f27(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.comma_symbol */
extern unsigned char ge807os11700;
extern T0* ge807ov11700;
extern T0* T81f581(GE_context* ac, T0* C);
/* ET_SYMBOL.make_comma */
extern T0* T345c85(GE_context* ac);
/* ET_AST_FACTORY.new_semicolon_symbol */
extern T0* T402f26(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.semicolon_symbol */
extern T0* T81f580(GE_context* ac, T0* C);
/* ET_SEMICOLON_SYMBOL.make */
extern T0* T949c4(GE_context* ac);
/* ET_SEMICOLON_SYMBOL.make_leaf */
extern void T949f5(GE_context* ac, T0* C);
/* ET_SEMICOLON_SYMBOL.tokens */
extern T0* T949f3(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_dot_symbol */
extern T0* T402f25(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.dot_symbol */
extern unsigned char ge807os11702;
extern T0* ge807ov11702;
extern T0* T81f579(GE_context* ac, T0* C);
/* ET_SYMBOL.make_dot */
extern T0* T345c84(GE_context* ac);
/* ET_AST_FACTORY.new_lt_symbol */
extern T0* T402f24(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_lt */
extern T0* T943c63(GE_context* ac);
/* ET_AST_FACTORY.new_gt_symbol */
extern T0* T402f23(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_gt */
extern T0* T943c62(GE_context* ac);
/* ET_AST_FACTORY.new_equal_symbol */
extern T0* T402f22(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_equal */
extern T0* T345c76(GE_context* ac);
/* ET_AST_FACTORY.new_power_symbol */
extern T0* T402f21(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_power */
extern T0* T943c61(GE_context* ac);
/* ET_AST_FACTORY.new_divide_symbol */
extern T0* T402f20(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_divide */
extern T0* T943c60(GE_context* ac);
/* ET_AST_FACTORY.new_times_symbol */
extern T0* T402f19(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_times */
extern T0* T943c59(GE_context* ac);
/* ET_AST_FACTORY.new_plus_symbol */
extern T0* T402f18(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_plus */
extern T0* T943c58(GE_context* ac);
/* ET_AST_FACTORY.new_minus_symbol */
extern T0* T402f17(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_minus */
extern T0* T943c56(GE_context* ac);
/* ET_EIFFEL_PARSER.text_item */
extern T2 T439f683(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_execute_eof_action */
extern void T439f973(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_sseq_error */
extern void T36f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sseq_error */
extern void T77f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.terminate */
extern void T439f992(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.wrap */
extern T1 T439f638(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_refill_input_buffer */
extern void T439f972(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_set_content */
extern void T439f955(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_null_trans_state */
extern T6 T439f637(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_previous_state */
extern T6 T439f636(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.fatal_error */
extern void T439f971(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.special_integer_ */
extern T0* T439f613(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_init_value_stacks */
extern void T439f956(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_clear_all */
extern void T439f965(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.clear_all */
extern void T439f990(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.clear_stacks */
extern void T439f1923(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T439f1950(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_WRITABLE].keep_head */
extern void T1190f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WRITABLE].set_count */
extern void T1190f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].keep_head */
extern void T1188f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].set_count */
extern void T1188f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].keep_head */
extern void T1185f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].set_count */
extern void T1185f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].keep_head */
extern void T1182f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].set_count */
extern void T1182f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].keep_head */
extern void T1179f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].set_count */
extern void T1179f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].keep_head */
extern void T1176f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].set_count */
extern void T1176f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].keep_head */
extern void T1173f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].set_count */
extern void T1173f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].keep_head */
extern void T1170f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].set_count */
extern void T1170f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].keep_head */
extern void T1167f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].set_count */
extern void T1167f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].keep_head */
extern void T1165f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].set_count */
extern void T1165f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].keep_head */
extern void T1162f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].set_count */
extern void T1162f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_PRECONDITIONS].keep_head */
extern void T762f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_PRECONDITIONS].set_count */
extern void T762f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].keep_head */
extern void T1159f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].set_count */
extern void T1159f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].keep_head */
extern void T1157f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].set_count */
extern void T1157f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].keep_head */
extern void T1155f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].set_count */
extern void T1155f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].keep_head */
extern void T1153f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].set_count */
extern void T1153f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].keep_head */
extern void T1151f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].set_count */
extern void T1151f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].keep_head */
extern void T1148f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].set_count */
extern void T1148f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].keep_head */
extern void T1145f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].set_count */
extern void T1145f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].keep_head */
extern void T1143f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].set_count */
extern void T1143f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].keep_head */
extern void T1140f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].set_count */
extern void T1140f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].keep_head */
extern void T1137f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].set_count */
extern void T1137f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].keep_head */
extern void T1134f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].set_count */
extern void T1134f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].keep_head */
extern void T1129f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].set_count */
extern void T1129f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].keep_head */
extern void T1126f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].set_count */
extern void T1126f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].keep_head */
extern void T1123f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].set_count */
extern void T1123f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].keep_head */
extern void T1120f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].set_count */
extern void T1120f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].keep_head */
extern void T1118f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].set_count */
extern void T1118f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].keep_head */
extern void T1116f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].set_count */
extern void T1116f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].keep_head */
extern void T1113f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].set_count */
extern void T1113f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].keep_head */
extern void T726f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].set_count */
extern void T726f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].keep_head */
extern void T1110f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].set_count */
extern void T1110f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].keep_head */
extern void T1107f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].set_count */
extern void T1107f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM].keep_head */
extern void T1104f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM].set_count */
extern void T1104f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_ITEM].keep_head */
extern void T1101f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_ITEM].set_count */
extern void T1101f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_LIST].keep_head */
extern void T1098f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_LIST].set_count */
extern void T1098f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].keep_head */
extern void T1095f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].set_count */
extern void T1095f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].keep_head */
extern void T1092f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].set_count */
extern void T1092f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].keep_head */
extern void T1082f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].set_count */
extern void T1082f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].keep_head */
extern void T1079f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].set_count */
extern void T1079f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].keep_head */
extern void T1077f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].set_count */
extern void T1077f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].keep_head */
extern void T1072f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].set_count */
extern void T1072f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].keep_head */
extern void T1069f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].set_count */
extern void T1069f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].keep_head */
extern void T1066f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].set_count */
extern void T1066f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].keep_head */
extern void T1063f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].set_count */
extern void T1063f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].keep_head */
extern void T1060f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].set_count */
extern void T1060f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].keep_head */
extern void T1058f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].set_count */
extern void T1058f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].keep_head */
extern void T1056f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].set_count */
extern void T1056f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].keep_head */
extern void T1053f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].set_count */
extern void T1053f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].keep_head */
extern void T1050f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].set_count */
extern void T1050f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].keep_head */
extern void T1047f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].set_count */
extern void T1047f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].keep_head */
extern void T1044f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].set_count */
extern void T1044f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].keep_head */
extern void T1042f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].set_count */
extern void T1042f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].keep_head */
extern void T1039f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].set_count */
extern void T1039f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].keep_head */
extern void T1037f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].set_count */
extern void T1037f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].keep_head */
extern void T1034f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].set_count */
extern void T1034f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].keep_head */
extern void T1031f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].set_count */
extern void T1031f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].keep_head */
extern void T1025f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].set_count */
extern void T1025f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].keep_head */
extern void T1022f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].set_count */
extern void T1022f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T1019f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].set_count */
extern void T1019f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].keep_head */
extern void T1016f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].set_count */
extern void T1016f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].keep_head */
extern void T1013f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].set_count */
extern void T1013f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].keep_head */
extern void T1011f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].set_count */
extern void T1011f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].keep_head */
extern void T1008f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].set_count */
extern void T1008f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].keep_head */
extern void T1004f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].set_count */
extern void T1004f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].keep_head */
extern void T1001f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].set_count */
extern void T1001f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].keep_head */
extern void T998f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].set_count */
extern void T998f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].keep_head */
extern void T995f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].set_count */
extern void T995f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].keep_head */
extern void T992f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].set_count */
extern void T992f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].keep_head */
extern void T683f7(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].set_count */
extern void T683f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].keep_head */
extern void T989f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].set_count */
extern void T989f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].keep_head */
extern void T986f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].set_count */
extern void T986f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_ARGUMENT_LIST].keep_head */
extern void T983f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_ARGUMENT_LIST].set_count */
extern void T983f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].keep_head */
extern void T980f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].set_count */
extern void T980f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].keep_head */
extern void T975f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].set_count */
extern void T975f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].keep_head */
extern void T973f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].set_count */
extern void T973f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].keep_head */
extern void T970f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].set_count */
extern void T970f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].keep_head */
extern void T967f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].set_count */
extern void T967f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].keep_head */
extern void T965f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].set_count */
extern void T965f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T648f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].set_count */
extern void T648f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].keep_head */
extern void T963f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].set_count */
extern void T963f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].keep_head */
extern void T961f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].set_count */
extern void T961f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].keep_head */
extern void T958f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].set_count */
extern void T958f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].keep_head */
extern void T955f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].set_count */
extern void T955f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].keep_head */
extern void T952f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].set_count */
extern void T952f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].keep_head */
extern void T950f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].set_count */
extern void T950f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].keep_head */
extern void T947f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].set_count */
extern void T947f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].keep_head */
extern void T944f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].set_count */
extern void T944f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].keep_head */
extern void T941f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].set_count */
extern void T941f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].keep_head */
extern void T938f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].set_count */
extern void T938f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].keep_head */
extern void T936f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].set_count */
extern void T936f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].keep_head */
extern void T933f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].set_count */
extern void T933f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].keep_head */
extern void T931f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].set_count */
extern void T931f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].keep_head */
extern void T928f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].set_count */
extern void T928f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].keep_head */
extern void T925f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].set_count */
extern void T925f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].keep_head */
extern void T922f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].set_count */
extern void T922f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].keep_head */
extern void T920f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].set_count */
extern void T920f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].keep_head */
extern void T917f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].set_count */
extern void T917f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].keep_head */
extern void T914f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].set_count */
extern void T914f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].keep_head */
extern void T911f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].set_count */
extern void T911f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].keep_head */
extern void T907f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].set_count */
extern void T907f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].keep_head */
extern void T904f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].set_count */
extern void T904f9(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.abort */
extern void T439f959(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_load_input_buffer */
extern void T439f951(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T439f953(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].wipe_out */
extern void T893f9(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].wipe_out */
extern void T892f9(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].wipe_out */
extern void T889f9(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_end_of_file */
extern void T204f27(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T439f953p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T439f953p0(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T439f953p2(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.time_stamp */
extern T6 T29f42(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.date */
extern T6 T29f43(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.eif_file_date */
extern T6 T29f44(GE_context* ac, T0* C, T14 a1);
/* ET_EIFFEL_PARSER.tmp_file */
extern T0* T439f678(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.shared_file */
extern unsigned char ge1029os22320;
extern T0* ge1029ov22320;
extern T0* T439f911(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_preparsed */
extern void T82f220(GE_context* ac, T0* C);
/* ET_CLASS.is_in_cluster */
extern T1 T82f95(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.error_handler */
extern T0* T439f666(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_fatal_error */
extern void T439f946(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.process_class */
extern void T436f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_suppliers */
extern void T82f219(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.internal_process_class */
extern void T436f22(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].extend */
extern void T880f37(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].put */
extern void T880f49(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_invariants_validity */
extern void T436f25(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_invariants_validity */
extern void T369f65(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INVARIANTS.set_validity_error */
extern void T886f28(GE_context* ac, T0* C);
/* ET_INVARIANTS.set_validity_checked */
extern void T886f27(GE_context* ac, T0* C);
/* ET_INVARIANTS.assertion */
extern T0* T886f11(GE_context* ac, T0* C, T6 a1);
/* ET_INVARIANTS.item */
extern T0* T886f12(GE_context* ac, T0* C, T6 a1);
/* ET_INVARIANTS.reset_validity_checked */
extern void T886f26(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_supplier_handler */
extern void T369f64(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.set_supplier_handler */
extern void T372f18(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_features_validity */
extern void T436f24(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.check_procedure_validity */
extern void T436f27(GE_context* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_PROCEDURE].wipe_out */
extern void T881f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].slots_wipe_out */
extern void T881f51(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].clashes_wipe_out */
extern void T881f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_wipe_out */
extern void T881f49(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_wipe_out */
extern void T881f48(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].unset_found_item */
extern void T881f43(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].move_all_cursors_after */
extern void T881f47(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T1472f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_after */
extern void T1472f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].forth */
extern void T881f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_forth */
extern void T881f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].add_traversing_cursor */
extern void T881f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_position */
extern void T1472f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].remove_traversing_cursor */
extern void T881f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].clashes_item */
extern T6 T881f23(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_procedure_validity */
extern void T436f30(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_FEATURE_CHECKER.check_precursor_feature_validity */
extern void T369f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_PROCEDURE].item_for_iteration */
extern T0* T881f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_item */
extern T0* T881f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_item */
extern T0* T881f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].after */
extern T1 T881f34(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_after */
extern T1 T881f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].after */
extern T1 T1472f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].start */
extern void T881f36(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_start */
extern void T881f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].cursor_off */
extern T1 T881f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].off */
extern T1 T1472f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].is_empty */
extern T1 T881f21(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_feature_validity */
extern void T369f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.build_preconditions_attachment_scope */
extern void T369f71(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.free_attachment_scope */
extern void T369f74(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.new_attachment_scope */
extern T0* T369f39(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.build_assertions_attachment_scope */
extern void T369f73(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.add_precursors_with_preconditions_recursive */
extern void T369f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.feature_checker */
extern T0* T369f35(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_assertions_validity */
extern void T436f28(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_FEATURE_CHECKER.check_postconditions_validity */
extern void T369f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_POSTCONDITIONS.set_validity_error */
extern void T885f21(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.set_validity_checked */
extern void T885f20(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.assertion */
extern T0* T885f10(GE_context* ac, T0* C, T6 a1);
/* ET_POSTCONDITIONS.item */
extern T0* T885f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.set_precursor_procedures */
extern void T369f68(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_query_validity */
extern void T436f26(GE_context* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_QUERY].wipe_out */
extern void T882f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].slots_wipe_out */
extern void T882f51(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].clashes_wipe_out */
extern void T882f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].key_storage_wipe_out */
extern void T882f49(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].item_storage_wipe_out */
extern void T882f48(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].unset_found_item */
extern void T882f43(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].move_all_cursors_after */
extern void T882f47(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_next_cursor */
extern void T1473f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_after */
extern void T1473f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].forth */
extern void T882f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_forth */
extern void T882f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].add_traversing_cursor */
extern void T882f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_position */
extern void T1473f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].remove_traversing_cursor */
extern void T882f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].clashes_item */
extern T6 T882f23(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_query_validity */
extern void T436f29(GE_context* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_QUERY].item_for_iteration */
extern T0* T882f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_item */
extern T0* T882f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].item_storage_item */
extern T0* T882f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].after */
extern T1 T882f34(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_after */
extern T1 T882f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].after */
extern T1 T1473f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].start */
extern void T882f36(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_start */
extern void T882f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].cursor_off */
extern T1 T882f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].off */
extern T1 T1473f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].is_empty */
extern T1 T882f21(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_precursor_queries */
extern void T369f66(GE_context* ac, T0* C, T0* a1);
/* ET_SUPPLIER_BUILDER.set */
extern void T883f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IMPLEMENTATION_CHECKER.current_system */
extern T0* T436f12(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_fatal_error */
extern void T436f21(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.set_suppliers_enabled */
extern void T436f17(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.set_short_mode */
extern void T436f20(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.set_flat_dbc_mode */
extern void T436f16(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.set_flat_mode */
extern void T436f15(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.make */
extern T0* T436c14(GE_context* ac);
/* ET_IMPLEMENTATION_CHECKER.make_with_feature_checker */
extern void T436f19(GE_context* ac, T0* C, T0* a1);
/* ET_SUPPLIER_BUILDER.make */
extern T0* T883c5(GE_context* ac);
/* ET_SUPPLIER_BUILDER.dummy_suppliers */
extern unsigned char ge946os30465;
extern T0* ge946ov30465;
extern T0* T883f4(GE_context* ac, T0* C);
/* ET_SUPPLIER_BUILDER.tokens */
extern T0* T883f3(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].make */
extern T0* T882c35(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_QUERY].set_internal_cursor */
extern void T882f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].new_cursor */
extern T0* T882f33(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].make */
extern T0* T1473c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_QUERY].make_slots */
extern void T882f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].new_modulus */
extern T6 T882f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_clashes */
extern void T882f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_key_storage */
extern void T882f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_item_storage */
extern void T882f39(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make */
extern T0* T881c35(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].set_internal_cursor */
extern void T881f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].new_cursor */
extern T0* T881f33(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].make */
extern T0* T1472c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].make_slots */
extern void T881f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_modulus */
extern T6 T881f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_clashes */
extern void T881f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_key_storage */
extern void T881f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_item_storage */
extern void T881f39(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.make_class_processor */
extern void T436f23(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.tokens */
extern T0* T436f13(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.error_handler */
extern T0* T436f11(GE_context* ac, T0* C);
/* ET_AST_NULL_PROCESSOR.process_class */
extern void T429f2(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_class */
extern void T372f22(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_identifier */
extern void T1300f24(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_identifier */
extern void T386f46(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_identifier */
extern void T382f51(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_identifier */
extern void T369f167(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_expression_validity */
extern void T369f225(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T369f225ot1(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vuex1a_error */
extern void T36f409(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuex1a */
extern T0* T531c919(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T36f130(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuex1a_error */
extern void T77f410(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T77f131(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn2c_error */
extern void T36f410(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn2c */
extern T0* T531c920(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T36f112(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn2c_error */
extern void T77f411(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T77f113(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_expression_validity */
extern void T369f288(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_query_call_type_validity */
extern void T369f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T369f312ot1(T0* a1, T0** a2);
extern T1 T369f312ot2(T0* a1, T0** a2);
extern T1 T369f312ot3(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.copy_type_context */
extern void T379f60(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.item */
extern T0* T379f15(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set_root_context */
extern void T379f61(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_unqualified_call_expression */
extern void T369f339(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.reset_fatal_error */
extern void T369f313(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_actual_arguments_validity */
extern void T369f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T369f316ot1(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vuar2b_error */
extern void T36f474(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vuar2b */
extern T0* T531c984(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T36f123(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2b_error */
extern void T77f475(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T77f124(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar2a_error */
extern void T36f394(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar2a */
extern T0* T531c904(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vuar2a_error */
extern void T77f395(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vdpr4b_error */
extern void T36f473(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vdpr4b */
extern T0* T531c983(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T36f152(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr4b_error */
extern void T77f474(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T77f153(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.remove_last */
extern void T379f55(GE_context* ac, T0* C);
/* ET_CLASS.is_basic */
extern T1 T82f127(GE_context* ac, T0* C);
/* ET_CLASS_CODES.is_basic */
extern T1 T397f34(GE_context* ac, T0* C, T8 a1);
/* ET_BRACKET_ARGUMENT_LIST.put */
extern void T982f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_ACTUAL_ARGUMENT_LIST.put */
extern void T286f17(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_BRACKET_ARGUMENT_LIST.item */
extern T0* T982f8(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.item */
extern T0* T286f5(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.convert_expression */
extern T0* T369f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_builtin_conversion */
extern void T369f368(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_BUILTIN_EXPRESSION.make */
extern T0* T1853c17(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_qualified_call_expression */
extern void T369f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_TO_EXPRESSION.make */
extern T0* T1855c22(GE_context* ac, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_creation_expression */
extern void T369f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FROM_EXPRESSION.make */
extern T0* T1854c21(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.convert_feature */
extern T0* T372f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.convert_from_feature */
extern T0* T82f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BRACED_TYPE_LIST.has_named_type_with_type_marks */
extern T1 T1315f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TOKEN_CONSTANTS.attached_separate_type_mark */
extern unsigned char ge807os11673;
extern T0* ge807ov11673;
extern T0* T81f1266(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.separate_keyword */
extern unsigned char ge807os11771;
extern T0* ge807ov11771;
extern T0* T81f1289(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identity_type */
extern unsigned char ge807os11671;
extern T0* ge807ov11671;
extern T0* T81f698(GE_context* ac, T0* C);
/* ET_CLASS.convert_to_feature */
extern T0* T82f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context */
extern T1 T379f40(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context_with_type_marks */
extern T1 T379f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.tokens */
extern T0* T379f17(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.attached_like_current */
extern unsigned char ge807os11669;
extern T0* ge807ov11669;
extern T0* T81f1263(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.is_entity_attached */
extern T1 T369f47(GE_context* ac, T0* C, T0* a1);
extern T1 T369f47ot1(T0* a1);
extern T1 T369f47ot2(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE.has_name */
extern T1 T385f8(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.has_result */
extern T1 T385f6(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_attached */
extern T1 T379f41(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_detachable */
extern T1 T379f44(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vuar1b_error */
extern void T36f472(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuar1b */
extern T0* T531c982(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T36f124(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar1b_error */
extern void T77f473(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T77f125(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar1a_error */
extern void T36f395(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuar1a */
extern T0* T531c905(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vuar1a_error */
extern void T77f396(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr4a_error */
extern void T36f471(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr4a */
extern T0* T531c981(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr4a_error */
extern void T77f472(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_vape_validity */
extern void T369f337(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vape0a_error */
extern void T36f481(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0a */
extern T0* T531c991(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vape_error */
extern T1 T36f136(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vape0a_error */
extern void T77f482(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vape_error */
extern T1 T77f137(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.parenthesis_call */
extern T0* T181f88(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_query_parenthesis_call_validity */
extern void T369f243(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T369f243ot1(T0* a1, T0** a2);
extern T1 T369f243ot2(T0* a1, T0** a2);
extern T1 T369f243ot3(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_expression_validity */
extern void T369f310(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T369f310ot1(T0* a1, T0** a2);
extern T1 T369f310ot2(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vkcn2a_error */
extern void T36f373(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn2a */
extern T0* T531c883(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vkcn2a_error */
extern void T77f374(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_instruction_validity */
extern void T369f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T369f309ot1(T0* a1, T0** a2);
extern T1 T369f309ot2(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vkcn1a_error */
extern void T36f415(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn1a */
extern T0* T531c925(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T36f129(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn1a_error */
extern void T77f416(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T77f130(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_instruction_validity */
extern void T369f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_call_instruction */
extern void T369f344(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_validity */
extern void T369f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_vape_validity */
extern void T369f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vape0b_error */
extern void T36f430(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape0b */
extern T0* T531c940(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vape0b_error */
extern void T77f431(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vuex2b_error */
extern void T36f393(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuex2b */
extern T0* T531c903(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T36f113(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuex2b_error */
extern void T77f394(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T77f114(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuta2a_error */
extern void T36f392(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuta2a */
extern T0* T531c902(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T36f122(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuta2a_error */
extern void T77f393(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T77f123(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_query_call_expression_validity */
extern void T369f244(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.set_parenthesis_call_position */
extern void T369f308(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIS_SYMBOL.set_position */
extern void T1784f83(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_CLASS.named_feature */
extern T0* T82f148(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_SYMBOL.make */
extern T0* T1784c81(GE_context* ac);
/* ET_PARENTHESIS_SYMBOL.make_leaf */
extern void T1784f85(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.tokens */
extern T0* T1784f35(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.has_implementation_error */
extern T1 T369f46(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_expression_validity */
extern void T369f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuao0c_error */
extern void T36f464(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0c */
extern T0* T531c974(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T36f147(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuao0c_error */
extern void T77f465(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T77f148(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuao0a_error */
extern void T36f463(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0a */
extern T0* T531c973(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuao0a_error */
extern void T77f464(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuao0b_error */
extern void T36f462(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0b */
extern T0* T531c972(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuao0b_error */
extern void T77f463(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_object_test_local_parenthesis_call_validity */
extern void T369f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T369f336ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_identifier_parenthesis_call_validity */
extern void T369f351(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T369f351ot1(T0* a1, T0** a2);
extern T1 T369f351ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_unqualified_across_cursor_call_expression_validity */
extern void T369f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuac0c_error */
extern void T36f455(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0c */
extern T0* T531c965(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T36f144(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuac0c_error */
extern void T77f456(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T77f145(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuac0a_error */
extern void T36f454(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0a */
extern T0* T531c964(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuac0a_error */
extern void T77f455(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuac0b_error */
extern void T36f453(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0b */
extern T0* T531c963(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuac0b_error */
extern void T77f454(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_across_cursor_parenthesis_call_validity */
extern void T369f335(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T369f335ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_unqualified_local_variable_call_expression_validity */
extern void T369f285(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvual0a_error */
extern void T36f450(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0a */
extern T0* T531c960(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvual_error */
extern T1 T36f142(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0a_error */
extern void T77f451(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvual_error */
extern T1 T77f143(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvual0b_error */
extern void T36f449(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0b */
extern T0* T531c959(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvual0b_error */
extern void T77f450(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_local_variable_parenthesis_call_validity */
extern void T369f334(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T369f334ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_expression_validity */
extern void T369f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuaa0a_error */
extern void T36f446(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0a */
extern T0* T531c956(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T36f140(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0a_error */
extern void T77f447(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T77f141(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuaa0b_error */
extern void T36f445(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0b */
extern T0* T531c955(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0b_error */
extern void T77f446(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_parenthesis_call_validity */
extern void T369f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T369f333ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_current_type_needed */
extern void T369f109(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_call_instruction_validity */
extern void T369f224(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn1c_error */
extern void T36f408(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1c */
extern T0* T531c918(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn1c_error */
extern void T77f409(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_instruction_validity */
extern void T369f283(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_unqualified_call_instruction */
extern void T369f338(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_instruction_validity */
extern void T369f282(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvuio0c_error */
extern void T36f461(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0c */
extern T0* T531c971(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T36f146(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuio0c_error */
extern void T77f462(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T77f147(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuio0a_error */
extern void T36f460(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0a */
extern T0* T531c970(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuio0a_error */
extern void T77f461(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuio0b_error */
extern void T36f459(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0b */
extern T0* T531c969(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuio0b_error */
extern void T77f460(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_across_cursor_call_instruction_validity */
extern void T369f281(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvuic0c_error */
extern void T36f458(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0c */
extern T0* T531c968(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T36f145(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuic0c_error */
extern void T77f459(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T77f146(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuic0a_error */
extern void T36f457(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0a */
extern T0* T531c967(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuic0a_error */
extern void T77f458(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuic0b_error */
extern void T36f456(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0b */
extern T0* T531c966(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuic0b_error */
extern void T77f457(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_local_variable_call_instruction_validity */
extern void T369f280(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvuil0a_error */
extern void T36f452(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0a */
extern T0* T531c962(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T36f143(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuil0a_error */
extern void T77f453(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T77f144(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuil0b_error */
extern void T36f451(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0b */
extern T0* T531c961(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuil0b_error */
extern void T77f452(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_instruction_validity */
extern void T369f279(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvuia0a_error */
extern void T36f448(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0a */
extern T0* T531c958(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T36f141(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuia0a_error */
extern void T77f449(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T77f142(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuia0b_error */
extern void T36f447(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0b */
extern T0* T531c957(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuia0b_error */
extern void T77f448(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER.is_instruction */
extern T1 T181f33(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_across_cursor_validity */
extern void T369f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.current_closure_impl */
extern T0* T369f44(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_across_cursor */
extern void T369f259(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].found_item */
extern T0* T383f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].found */
extern T1 T383f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].search */
extern void T383f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].search_position */
extern void T383f65(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].hash_position */
extern T6 T383f32(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.hash_code */
extern T6 T960f15(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.hash_code */
extern T6 T957f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].key_storage_item */
extern T0* T383f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].slots_item */
extern T6 T383f34(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_veen9b_error */
extern void T36f384(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen9b */
extern T0* T531c894(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen9_error */
extern T1 T36f119(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen9b_error */
extern void T77f385(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen9_error */
extern T1 T77f120(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen9a_error */
extern void T36f383(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen9a */
extern T0* T531c893(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen9a_error */
extern void T77f384(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACROSS_CURSOR_SCOPE.across_component */
extern T0* T384f3(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].item */
extern T0* T756f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_object_test_local_validity */
extern void T369f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST_LIST.object_test */
extern T0* T1193f8(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_object_test_local */
extern void T369f256(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].found_item */
extern T0* T380f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].found */
extern T1 T380f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].search */
extern void T380f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].search_position */
extern void T380f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].hash_position */
extern T6 T380f32(GE_context* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.hash_code */
extern T6 T747f21(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.hash_code */
extern T6 T1266f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_item */
extern T0* T380f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_item */
extern T6 T380f34(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_veen8b_error */
extern void T36f382(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen8b */
extern T0* T531c892(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen8_error */
extern T1 T36f118(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen8b_error */
extern void T77f383(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen8_error */
extern T1 T77f119(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen8a_error */
extern void T36f381(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen8a */
extern T0* T531c891(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen8a_error */
extern void T77f382(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST_SCOPE.object_test */
extern T0* T381f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].item */
extern T0* T750f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_local_variable_validity */
extern void T369f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_variable */
extern void T369f264(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vevi0a_error */
extern void T36f407(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vevi0a */
extern T0* T531c917(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vevi_error */
extern T1 T36f60(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vevi0a_error */
extern void T77f408(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vevi_error */
extern T1 T77f61(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_expanded */
extern T1 T379f45(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_veen2c_error */
extern void T36f387(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2c */
extern T0* T531c897(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen2_error */
extern T1 T36f121(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2c_error */
extern void T77f388(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen2_error */
extern T1 T77f122(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen2e_error */
extern void T36f386(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2e */
extern T0* T531c896(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2e_error */
extern void T77f387(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_validity */
extern void T369f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_formal_argument */
extern void T369f263(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_identifier */
extern void T79f233(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_expression_validity */
extern void T79f255(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f255ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_expression_validity */
extern void T79f285(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_call_type_validity */
extern void T79f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f318ot1(T0* a1, T0** a2);
extern T1 T79f318ot2(T0* a1, T0** a2);
extern T1 T79f318ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_validity */
extern void T79f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_expression_supplier */
extern void T79f369(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_expression */
extern void T79f317(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f317ot1(T0* a1, T0** a2);
extern T1 T79f317ot2(T0* a1, T0** a2);
extern T1 T79f317ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_dynamic_type_set */
extern void T79f161(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.put */
extern void T268f16(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_like_argument_dynamic_types */
extern void T79f395(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dynamic_type_set */
extern T0* T79f111(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_operand_dynamic_types */
extern void T79f393(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_dynamic_types */
extern void T79f392(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.reset_fatal_error */
extern void T79f311(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_arguments_validity */
extern void T79f294(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T79f294ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.convert_expression */
extern T0* T79f107(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_conversion */
extern void T79f529(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_expression */
extern void T79f394(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f394ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_qualified_call_target_dynamic_types */
extern void T79f376(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_expression */
extern void T79f491(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.is_entity_attached */
extern T1 T79f106(GE_context* ac, T0* C, T0* a1);
extern T1 T79f106ot1(T0* a1);
extern T1 T79f106ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_vape_validity */
extern void T79f310(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_parenthesis_call_validity */
extern void T79f280(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T79f280ot1(T0* a1, T0** a2);
extern T1 T79f280ot2(T0* a1, T0** a2);
extern T1 T79f280ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_expression_validity */
extern void T79f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T79f316ot1(T0* a1, T0** a2);
extern T1 T79f316ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_instruction_validity */
extern void T79f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T79f315ot1(T0* a1, T0** a2);
extern T1 T79f315ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_instruction_validity */
extern void T79f288(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_instruction */
extern void T79f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.make */
extern T0* T317c11(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ASSIGNER_INSTRUCTION.target */
extern T0* T1244f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_validity */
extern void T79f371(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_vape_validity */
extern void T79f388(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_expression_validity */
extern void T79f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_parenthesis_call_position */
extern void T79f313(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.has_implementation_error */
extern T1 T79f102(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_expression_validity */
extern void T79f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_parenthesis_call_validity */
extern void T79f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f309ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_identifier_parenthesis_call_validity */
extern void T79f391(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T79f391ot1(T0* a1, T0** a2);
extern T1 T79f391ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_across_cursor_call_expression_validity */
extern void T79f283(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_cursor_parenthesis_call_validity */
extern void T79f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f308ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_expression_validity */
extern void T79f282(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_parenthesis_call_validity */
extern void T79f307(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f307ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_expression_validity */
extern void T79f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_parenthesis_call_validity */
extern void T79f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f306ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current_type_needed */
extern void T79f198(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_instruction_validity */
extern void T79f254(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_instruction_validity */
extern void T79f279(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_instruction */
extern void T79f312(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f312ot1(T0* a1, T0** a2);
extern T1 T79f312ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_instruction_validity */
extern void T79f278(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_across_cursor_call_instruction_validity */
extern void T79f277(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_instruction_validity */
extern void T79f276(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_instruction_validity */
extern void T79f275(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_cursor_validity */
extern void T79f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_closure_impl */
extern T0* T79f57(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_cursor */
extern void T79f274(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_validity */
extern void T79f252(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_local */
extern void T79f273(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_validity */
extern void T79f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable */
extern void T79f272(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_validity */
extern void T79f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument */
extern void T79f271(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_identifier */
extern void T74f927(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_identifier_call_expression */
extern void T74f935(GE_context* ac, T0* C, T0* a1);
extern T1 T74f935ot1(T0* a1, T0** a2);
extern T1 T74f935ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PRECURSOR.is_constant_attribute */
extern T1 T309f20(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_constant_attribute */
extern T1 T247f27(GE_context* ac, T0* C);
/* ET_C_GENERATOR.in_target */
extern T1 T74f446(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].is_empty */
extern T1 T275f11(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_attribute */
extern T1 T309f18(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_attribute */
extern T1 T247f23(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_unqualified_identifier_call_instruction */
extern void T74f934(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand */
extern void T74f933(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_closed_operand */
extern T1 T181f32(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_agent_open_operand */
extern void T74f932(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_open_operand */
extern T1 T181f31(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_local */
extern void T74f931(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test_local_name */
extern void T74f939(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_current */
extern void T1300f40(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_current */
extern void T386f45(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_current */
extern void T382f50(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current */
extern void T369f166(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_validity */
extern void T369f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_current */
extern void T369f278(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current */
extern void T79f319(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_validity */
extern void T79f396(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current */
extern void T79f447(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_current */
extern void T74f928(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_current */
extern void T74f936(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_qualified_call_expression */
extern void T1300f57(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_actual_argument_list */
extern void T1300f90(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_qualified_call_expression */
extern void T386f50(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_qualified_call_expression */
extern void T382f55(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_qualified_call_expression */
extern void T369f171(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_expression_validity */
extern void T369f184(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T369f184ot1(T0* a1, T0** a2);
extern T1 T369f184ot2(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vuex2a_error */
extern void T36f374(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuex2a */
extern T0* T531c884(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuex2a_error */
extern void T77f375(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_expression_validity */
extern void T369f245(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_tuple_label_expression */
extern void T369f314(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.formal_parameter_type */
extern T0* T82f188(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].replace */
extern void T1766f11(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].item */
extern T0* T1766f7(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].put_last */
extern void T1766f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].force */
extern void T1873f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].fill_with */
extern void T1872f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].extend */
extern void T1872f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].resize */
extern void T1766f9(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1873f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1872f4(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1766c8(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].set_internal_cursor */
extern void T1766f12(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].new_cursor */
extern T0* T1766f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1874c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1873f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].make_empty */
extern T0* T1872c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].default_create */
extern T0* T1873c3(GE_context* ac);
/* ET_ERROR_HANDLER.report_vuar1c_error */
extern void T36f426(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar1c */
extern T0* T531c936(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar1c_error */
extern void T77f427(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuta2b_error */
extern void T36f425(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuta2b */
extern T0* T531c935(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vuta2b_error */
extern void T77f426(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T379f42(GE_context* ac, T0* C, T0* a1);
extern T1 T379f42ot1(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.put_last */
extern void T379f56(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.put */
extern void T379f57(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.last */
extern T0* T379f16(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.set_boolean_operator */
extern void T1264f28(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.is_boolean_class */
extern T1 T82f192(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_qualified_dotnet_query_call_expression_validity */
extern void T369f242(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.free_overloaded_queries */
extern void T369f307(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].force_last */
extern void T376f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].force */
extern void T732f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].fill_with */
extern void T734f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].extend */
extern void T734f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].resize */
extern void T376f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].aliased_resized_area */
extern T0* T732f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].aliased_resized_area */
extern T0* T734f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_capacity */
extern T6 T376f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].extendible */
extern T1 T376f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].first */
extern T0* T733f14(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.keep_best_overloaded_features */
extern void T369f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* DS_ARRAYED_LIST [ET_PROCEDURE].keep_first */
extern void T729f38(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].keep_first */
extern void T733f38(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.free_overloaded_features */
extern void T369f350(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].force_last */
extern void T377f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].force */
extern void T736f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].fill_with */
extern void T738f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].extend */
extern void T738f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].resize */
extern void T377f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].aliased_resized_area */
extern T0* T736f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].aliased_resized_area */
extern T0* T738f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].new_capacity */
extern T6 T377f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].extendible */
extern T1 T377f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].has */
extern T1 T737f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove */
extern void T737f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].move_left */
extern void T737f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_cursors_left */
extern void T737f20(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_position */
extern void T1860f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove_last */
extern void T737f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_last_cursors_after */
extern void T737f22(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_next_cursor */
extern void T1860f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_after */
extern void T1860f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].item */
extern T0* T737f11(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type */
extern T1 T379f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_FEATURE].wipe_out */
extern void T737f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_all_cursors_after */
extern void T737f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].force_last */
extern void T737f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].resize */
extern void T737f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_capacity */
extern T6 T737f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].extendible */
extern T1 T737f9(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.new_overloaded_features */
extern T0* T369f52(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].remove_last */
extern void T377f15(GE_context* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].keep_head */
extern void T738f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].set_count */
extern void T738f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].move_last_cursors_after */
extern void T377f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].set_next_cursor */
extern void T739f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].set_after */
extern void T739f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].last */
extern T0* T377f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].make */
extern T0* T737c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].set_internal_cursor */
extern void T737f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_cursor */
extern T0* T737f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].make */
extern T0* T1860c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].is_empty */
extern T1 T377f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove */
extern void T729f37(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_left */
extern void T729f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_left */
extern void T729f40(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_last */
extern void T729f39(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_last_cursors_after */
extern void T729f42(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].remove */
extern void T733f37(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_left */
extern void T733f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_left */
extern void T733f40(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_last */
extern void T733f39(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].move_last_cursors_after */
extern void T733f42(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].is_empty */
extern T1 T733f13(GE_context* ac, T0* C);
/* ET_CLASS.add_overloaded_queries */
extern void T82f268(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUERY_LIST.add_overloaded_features */
extern void T265f14(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T265f14ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.new_overloaded_queries */
extern T0* T369f50(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].remove_last */
extern void T376f15(GE_context* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].keep_head */
extern void T734f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].set_count */
extern void T734f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].move_last_cursors_after */
extern void T376f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_next_cursor */
extern void T735f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_after */
extern void T735f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].last */
extern T0* T376f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].is_empty */
extern T1 T376f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_expression */
extern void T79f336(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_expression_validity */
extern void T79f413(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f413ot1(T0* a1, T0** a2);
extern T1 T79f413ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_expression_validity */
extern void T79f457(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_expression */
extern void T79f492(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f492ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_query_call_expression_validity */
extern void T79f456(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_queries */
extern void T79f292(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.keep_best_overloaded_features */
extern void T79f291(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_features */
extern void T79f375(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_features */
extern T0* T79f110(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_queries */
extern T0* T79f105(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_qualified_call_expression */
extern void T74f929(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_expression */
extern void T74f937(GE_context* ac, T0* C, T0* a1);
extern T1 T74f937ot1(T0* a1, T0** a2);
extern T1 T74f937ot2(T0* a1, T0** a2);
extern T1 T74f937ot3(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_expressions_unfrozen */
extern void T74f942(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_expressions_frozen */
extern void T74f941(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_used */
extern void T74f940(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_result */
extern void T1300f42(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_result */
extern void T386f47(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_result */
extern void T382f52(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result */
extern void T369f168(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_validity */
extern void T369f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result */
extern void T369f289(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vevi0b_error */
extern void T36f412(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0b */
extern T0* T531c922(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vevi0b_error */
extern void T77f413(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2a_error */
extern void T36f391(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2a */
extern T0* T531c901(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2a_error */
extern void T77f392(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2g_error */
extern void T36f411(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2g */
extern T0* T531c921(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2g_error */
extern void T77f412(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2d_error */
extern void T36f390(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen2d */
extern T0* T531c900(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2d_error */
extern void T77f391(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_veen2b_error */
extern void T36f389(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2b */
extern T0* T531c899(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2b_error */
extern void T77f390(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2f_error */
extern void T36f388(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2f */
extern T0* T531c898(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2f_error */
extern void T77f389(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result */
extern void T79f321(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_validity */
extern void T79f398(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result */
extern void T79f449(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_result */
extern void T74f930(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_result */
extern void T74f938(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_tuple */
extern void T1300f41(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_tuple */
extern void T386f44(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_tuple */
extern void T382f49(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_tuple */
extern void T369f165(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_tuple_validity */
extern void T369f218(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T369f218ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_manifest_tuple */
extern void T369f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_tuple */
extern void T79f320(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_tuple_validity */
extern void T79f397(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f397ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_tuple */
extern void T79f448(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f448ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_manifest_tuple */
extern void T74f943(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple */
extern void T74f946(GE_context* ac, T0* C, T0* a1);
extern T1 T74f946ot1(T0* a1, T0** a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].force_last */
extern void T294f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_put */
extern void T294f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_put */
extern void T294f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_item */
extern T6 T294f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].hash_position */
extern T6 T294f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].resize */
extern void T294f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_resize */
extern void T294f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].special_integer_ */
extern T0* T294f32(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_resize */
extern void T294f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_resize */
extern void T294f61(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T688f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T687f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_item */
extern T0* T294f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_resize */
extern void T294f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_capacity */
extern T6 T294f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_put */
extern void T294f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].force */
extern void T688f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].fill_with */
extern void T687f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].extend */
extern void T687f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].search_position */
extern void T294f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_equality_tester */
extern T0* T294f30(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_do_procedure */
extern void T1300f17(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_compound */
extern void T1300f23(GE_context* ac, T0* C, T0* a1);
/* ET_COMPOUND.item */
extern T0* T331f5(GE_context* ac, T0* C, T6 a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_do_procedure */
extern void T1299f21(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure */
extern void T369f75(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_validity */
extern void T369f87(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_rescue_validity */
extern void T369f104(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_instructions_validity */
extern void T369f103(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_locals_validity */
extern void T369f102(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_supplier */
extern void T369f116(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_local_supplier */
extern void T883f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_variable_declaration */
extern void T369f115(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_local_type_validity */
extern void T369f114(GE_context* ac, T0* C, T0* a1);
extern T1 T369f114ot1(T0* a1, T0** a2);
/* ET_TYPE_CHECKER.check_creation_type_validity */
extern void T372f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T372f20ot1(T0* a1, T0** a2);
extern T1 T372f20ot2(T0* a1, T0** a2);
extern T1 T372f20ot3(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vtcg4a_error */
extern void T77f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4a */
extern T0* T531c799(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T77f72(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg4a_error */
extern void T36f280(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T36f71(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.ise_6_0_6_7358 */
extern unsigned char ge191os1997;
extern T0* ge191ov1997;
extern T0* T372f13(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtcg4b_error */
extern void T77f280(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4b */
extern T0* T531c798(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vtcg4b_error */
extern void T36f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_CONSTRAINT_CREATOR.has_feature */
extern T1 T1024f8(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.is_empty */
extern T1 T1024f9(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.error_handler */
extern T0* T372f11(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.set_fatal_error */
extern void T372f21(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.current_system */
extern T0* T372f10(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.check_type_validity */
extern void T372f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vrle1a_error */
extern void T36f229(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle1a */
extern T0* T531c749(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T36f33(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle1a_error */
extern void T77f230(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T77f34(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle2a_error */
extern void T36f228(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle2a */
extern T0* T531c748(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T36f32(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle2a_error */
extern void T77f229(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T77f33(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0b_error */
extern void T36f227(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0b */
extern T0* T531c747(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vreg0b_error */
extern void T77f228(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_across_components_validity */
extern void T369f101(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_object_tests_validity */
extern void T369f100(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuot3a_error */
extern void T36f226(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuot3a */
extern T0* T531c746(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T36f30(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuot3a_error */
extern void T77f227(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T77f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_6_4_7_7252 */
extern unsigned char ge191os2011;
extern T0* ge191ov2011;
extern T0* T369f40(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_formal_arguments_validity */
extern void T369f99(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_argument_supplier */
extern void T369f113(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_argument_supplier */
extern void T883f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_formal_argument_declaration */
extern void T369f112(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_signature_type_validity */
extern void T369f111(GE_context* ac, T0* C, T0* a1);
extern T1 T369f111ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure */
extern void T79f145(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T79f147(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_rescue_validity */
extern void T79f154(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_instructions_validity */
extern void T79f153(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_locals_validity */
extern void T79f152(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_supplier */
extern void T79f160(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable_declaration */
extern void T79f159(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_type_validity */
extern void T79f158(GE_context* ac, T0* C, T0* a1);
extern T1 T79f158ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_components_validity */
extern void T79f151(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_tests_validity */
extern void T79f150(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_4_7_7252 */
extern T0* T79f53(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_arguments_validity */
extern void T79f149(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_argument_supplier */
extern void T79f157(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument_declaration */
extern void T79f156(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_signature_type_validity */
extern void T79f155(GE_context* ac, T0* C, T0* a1);
extern T1 T79f155ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_do_procedure */
extern void T74f944(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure */
extern void T74f947(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_procedure */
extern void T74f949(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_address_routine */
extern void T74f951(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.argument_type_set */
extern T0* T74f448(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_address_routine_name */
extern void T74f957(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_feature_name_comment */
extern void T74f952(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_internal_routine */
extern void T74f950(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.print_internal_routine_body_declaration */
extern void T74f956(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_compound */
extern void T74f960(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_instruction */
extern void T74f961(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.reset_rescue_data */
extern void T74f959(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_malloc_current */
extern void T74f955(GE_context* ac, T0* C, T0* a1);
extern T1 T74f955ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.current_universe */
extern T0* T74f451(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_feature_trace_message_call */
extern void T74f954(GE_context* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_unindented_feature_info_message_call */
extern void T74f958(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_routine_name */
extern void T74f953(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T74f953ot1(T0* a1, T0** a2);
/* DS_HASH_SET [ET_FEATURE].force_last */
extern void T295f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].slots_put */
extern void T295f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].clashes_put */
extern void T295f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].resize */
extern void T295f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].clashes_resize */
extern void T295f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].special_integer_ */
extern T0* T295f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].key_storage_resize */
extern void T295f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_resize */
extern void T295f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].slots_resize */
extern void T295f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_capacity */
extern T6 T295f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_put */
extern void T295f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_PRECURSOR_CHECKER.process_deferred_procedure */
extern void T1300f11(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_deferred_procedure */
extern void T1299f15(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_procedure */
extern void T369f76(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_procedure_validity */
extern void T369f88(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_procedure */
extern void T79f146(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_procedure_validity */
extern void T79f148(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_procedure */
extern void T74f945(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_procedure */
extern void T74f948(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_named_object_test */
extern void T1300f84(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_named_object_test */
extern void T386f55(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_named_object_test */
extern void T382f60(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE.add_object_test */
extern void T381f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].force_last */
extern void T750f15(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].resize */
extern void T750f16(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T750f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].extendible */
extern T1 T750f8(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vuot1f_error */
extern void T77f507(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1f */
extern T0* T531c1016(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T77f127(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot1f_error */
extern void T36f506(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T36f126(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.error_handler */
extern T0* T382f6(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.current_system */
extern T0* T382f7(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.set_fatal_error */
extern void T382f62(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.process_named_object_test */
extern void T369f176(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_named_object_test_validity */
extern void T369f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_named_object_test */
extern void T369f268(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuot4b_error */
extern void T36f403(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuot4b */
extern T0* T531c913(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T36f127(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuot4b_error */
extern void T77f404(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T77f128(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot4a_error */
extern void T36f402(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuot4a */
extern T0* T531c912(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot4a_error */
extern void T77f403(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.ise_6_3_7_5660 */
extern unsigned char ge191os2007;
extern T0* ge191ov2007;
extern T0* T369f48(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vuot1e_error */
extern void T36f401(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1e */
extern T0* T531c911(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1e_error */
extern void T77f402(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1d_error */
extern void T36f400(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1d */
extern T0* T531c910(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1d_error */
extern void T77f401(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].remove_last */
extern void T374f15(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].move_last_cursors_after */
extern void T374f17(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_next_cursor */
extern void T727f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_after */
extern void T727f6(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vuot1c_error */
extern void T36f399(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1c */
extern T0* T531c909(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1c_error */
extern void T77f400(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1b_error */
extern void T36f398(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1b */
extern T0* T531c908(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1b_error */
extern void T77f399(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].item */
extern T0* T374f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].force_last */
extern void T374f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].resize */
extern void T374f16(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_capacity */
extern T6 T374f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].extendible */
extern T1 T374f10(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_vuot1a_error */
extern void T36f397(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1a */
extern T0* T531c907(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1a_error */
extern void T77f398(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].force_last */
extern void T380f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_put */
extern void T380f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_put */
extern void T380f66(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_put */
extern void T380f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].resize */
extern void T380f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_resize */
extern void T380f71(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].special_integer_ */
extern T0* T380f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_resize */
extern void T380f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_resize */
extern void T380f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_resize */
extern void T380f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T380f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_put */
extern void T380f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_CHECKER.check_type_validity */
extern void T369f117(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_named_object_test */
extern void T79f363(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_named_object_test_validity */
extern void T79f438(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_named_object_test */
extern void T79f483(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_named_object_test_dynamic_types */
extern void T79f512(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_constant_expression */
extern void T79f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].force_last */
extern void T371f62(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T371f34(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_3_7_5660 */
extern T0* T79f115(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_type_validity */
extern void T79f223(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_named_object_test */
extern void T74f962(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test */
extern void T74f1008(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].force_last */
extern void T280f14(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].force */
extern void T669f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST].fill_with */
extern void T668f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST].extend */
extern void T668f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].resize */
extern void T280f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].aliased_resized_area */
extern T0* T669f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBJECT_TEST].aliased_resized_area */
extern T0* T668f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].new_capacity */
extern T6 T280f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].extendible */
extern T1 T280f8(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_regular_manifest_string */
extern void T1300f43(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_manifest_string */
extern void T386f48(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_manifest_string */
extern void T382f53(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_manifest_string */
extern void T369f169(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_manifest_string_validity */
extern void T369f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_manifest_string_validity */
extern void T369f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_32_constant */
extern void T369f321(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_8_constant */
extern void T369f320(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vwmq0d_error */
extern void T36f428(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0d */
extern T0* T531c938(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.type_name */
extern T0* T531f190(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T36f69(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwmq0d_error */
extern void T77f429(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T77f70(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_manifest_string */
extern void T79f322(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_manifest_string_validity */
extern void T79f399(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_string_validity */
extern void T79f450(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_32_constant */
extern void T79f486(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_constant */
extern void T79f513(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_manifest_string_area_dynamic_type */
extern void T79f520(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_8_constant */
extern void T79f485(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_manifest_string */
extern void T74f963(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_manifest_string */
extern void T74f1009(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_string */
extern void T74f1058(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_void */
extern void T1300f52(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_void */
extern void T386f5(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_void */
extern void T382f10(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_void */
extern void T369f126(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_void_validity */
extern void T369f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_void_constant */
extern void T369f233(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_void */
extern void T79f331(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_void_validity */
extern void T79f408(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_void_constant */
extern void T79f453(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_void */
extern void T74f964(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_void */
extern void T74f1010(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_across_expression */
extern void T1300f86(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_invariants */
extern void T1300f91(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.assertion */
extern T0* T1133f6(GE_context* ac, T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.item */
extern T0* T1133f7(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_across_expression */
extern void T386f6(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_across_expression */
extern void T382f11(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_across_expression */
extern void T369f127(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_expression_validity */
extern void T369f179(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_across_expression */
extern void T369f237(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].remove_found_item */
extern void T383f63(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].remove_position */
extern void T383f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].key_storage_put */
extern void T383f71(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_storage_put */
extern void T383f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].key_storage_keep_head */
extern void T383f75(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_storage_keep_head */
extern void T383f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].clashes_put */
extern void T383f69(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].slots_put */
extern void T383f70(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].move_cursors_forth */
extern void T383f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].internal_set_key_equality_tester */
extern void T383f72(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_CURSOR_SCOPE.remove_across_components */
extern void T384f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].prune_last */
extern void T756f15(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.build_negated_scope */
extern void T382f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.build_negated_scope */
extern void T386f56(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_loop_variant_validity */
extern void T369f236(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vave0a_error */
extern void T36f422(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vave0a */
extern T0* T531c932(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vave_error */
extern T1 T36f134(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vave0a_error */
extern void T77f423(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vave_error */
extern T1 T77f135(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_invariant_validity */
extern void T369f235(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_CURSOR_SCOPE.add_across_component */
extern void T384f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].force_last */
extern void T756f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].resize */
extern void T756f16(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].new_capacity */
extern T6 T756f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].extendible */
extern T1 T756f8(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_across_component_header_validity */
extern void T369f234(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_instruction_validity */
extern void T369f232(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T369f295(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.free_overloaded_procedures */
extern void T369f340(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].force_last */
extern void T375f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].force */
extern void T728f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].fill_with */
extern void T730f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].extend */
extern void T730f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].resize */
extern void T375f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].aliased_resized_area */
extern T0* T728f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].aliased_resized_area */
extern T0* T730f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_capacity */
extern T6 T375f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].extendible */
extern T1 T375f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].first */
extern T0* T729f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].is_empty */
extern T1 T729f13(GE_context* ac, T0* C);
/* ET_CLASS.add_overloaded_procedures */
extern void T82f269(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PROCEDURE_LIST.add_overloaded_features */
extern void T266f14(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T266f14ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.new_overloaded_procedures */
extern T0* T369f51(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].remove_last */
extern void T375f15(GE_context* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].keep_head */
extern void T730f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].set_count */
extern void T730f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].move_last_cursors_after */
extern void T375f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_next_cursor */
extern void T731f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_after */
extern void T731f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].last */
extern T0* T375f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].is_empty */
extern T1 T375f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].force_last */
extern void T383f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].resize */
extern void T383f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].clashes_resize */
extern void T383f79(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].special_integer_ */
extern T0* T383f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].key_storage_resize */
extern void T383f78(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_storage_resize */
extern void T383f77(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].slots_resize */
extern void T383f76(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].new_capacity */
extern T6 T383f31(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_across_cursor_declaration */
extern void T369f297(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_CURSOR_SCOPE.hidden_across_component */
extern T0* T384f5(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit2e_error */
extern void T36f421(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2e */
extern T0* T531c931(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_voit2_error */
extern T1 T36f133(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_voit2e_error */
extern void T77f422(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_voit2_error */
extern T1 T77f134(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE.hidden_object_test */
extern T0* T381f5(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit2d_error */
extern void T36f420(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2d */
extern T0* T531c930(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2d_error */
extern void T77f421(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2c_error */
extern void T36f419(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2c */
extern T0* T531c929(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2c_error */
extern void T77f420(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2b_error */
extern void T36f418(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2b */
extern T0* T531c928(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2b_error */
extern void T77f419(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2a_error */
extern void T36f417(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2a */
extern T0* T531c927(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2a_error */
extern void T77f418(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit1a_error */
extern void T36f416(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_voit1a */
extern T0* T531c926(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_voit1_error */
extern T1 T36f132(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_voit1a_error */
extern void T77f417(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_voit1_error */
extern T1 T77f133(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_expression */
extern void T79f365(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_expression_validity */
extern void T79f440(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_expression */
extern void T79f484(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T79f374(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T79f374p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T79f373(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T79f373p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_component_header_validity */
extern void T79f289(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_instruction_validity */
extern void T79f256(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T79f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_procedures */
extern void T79f370(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_procedures */
extern T0* T79f109(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_cursor_declaration */
extern void T79f372(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_across_expression */
extern void T74f965(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_expression */
extern void T74f1011(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bracket_expression */
extern void T1300f70(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_ARGUMENT_LIST.process */
extern void T982f15(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bracket_argument_list */
extern void T1300f102(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_bracket_expression */
extern void T386f7(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_bracket_expression */
extern void T382f12(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bracket_expression */
extern void T369f128(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bracket_expression_validity */
extern void T369f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bracket_expression */
extern void T79f349(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bracket_expression_validity */
extern void T79f426(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_bracket_expression */
extern void T74f966(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bracket_expression */
extern void T74f1012(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_call_agent */
extern void T1300f74(GE_context* ac, T0* C, T0* a1);
extern T1 T1300f74ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_agent_argument_operand_list */
extern void T1300f95(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_call_agent */
extern void T386f8(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_call_agent */
extern void T382f13(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_agent */
extern void T369f129(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_agent_validity */
extern void T369f181(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T369f181ot1(T0* a1, T0** a2);
extern T1 T369f181ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_typed_call_agent_validity */
extern void T369f240(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T369f240ot1(T0* a1, T0** a2);
extern T1 T369f240ot2(T0* a1, T0** a2);
/* ET_CALL_AGENT.is_procedure */
extern T1 T988f20(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vpca1b_error */
extern void T36f424(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca1b */
extern T0* T531c934(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T36f135(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca1b_error */
extern void T77f425(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T77f136(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_tuple_label_call_agent_validity */
extern void T369f305(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_tuple_label_call_agent */
extern void T369f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_query_call_agent_validity */
extern void T369f304(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_query_call_agent */
extern void T369f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_agent_arguments_validity */
extern void T369f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T369f330ot1(T0* a1, T0** a2);
extern T1 T369f330ot2(T0* a1, T0** a2);
extern T1 T369f330ot3(T0* a1, T0** a2);
extern T1 T369f330ot4(T0* a1, T0** a2);
extern T1 T369f330ot5(T0* a1, T0** a2);
extern T1 T369f330ot6(T0* a1, T0** a2);
extern T1 T369f330ot7(T0* a1, T0** a2);
extern T1 T369f330ot8(T0* a1, T0** a2);
extern T1 T369f330ot9(T0* a1, T0** a2);
extern T1 T369f330ot10(T0* a1, T0** a2);
extern T1 T369f330ot11(T0* a1, T0** a2);
extern T1 T369f330ot12(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vpca5b_error */
extern void T36f480(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca5b */
extern T0* T531c990(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T36f155(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5b_error */
extern void T77f481(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T77f156(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca5a_error */
extern void T36f479(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca5a */
extern T0* T531c989(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca5a_error */
extern void T77f480(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca4b_error */
extern void T36f478(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca4b */
extern T0* T531c988(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T36f154(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca4b_error */
extern void T77f479(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T77f155(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca4a_error */
extern void T36f477(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca4a */
extern T0* T531c987(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca4a_error */
extern void T77f478(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put */
extern void T972f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.item */
extern T0* T972f8(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_vpca3b_error */
extern void T36f476(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca3b */
extern T0* T531c986(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T36f153(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3b_error */
extern void T77f477(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T77f154(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca3a_error */
extern void T36f475(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpca3a */
extern T0* T531c985(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpca3a_error */
extern void T77f476(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.force_first */
extern void T251f34(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resize */
extern void T251f35(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.new_capacity */
extern T6 T251f24(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.capacity */
extern T6 T251f23(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_implicit_agent_open_arguments */
extern void T369f329(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.put_last */
extern void T1789f7(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].force */
extern void T1876f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].fill_with */
extern void T1875f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].extend */
extern void T1875f7(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.fixed_array */
extern unsigned char ge468os7522;
extern T0* ge468ov7522;
extern T0* T1789f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].default_create */
extern T0* T1876c2(GE_context* ac);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.make */
extern T0* T1790c5(GE_context* ac, T0* a1, T6 a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.make_with_capacity */
extern T0* T1789c6(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T1876f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make_empty */
extern T0* T1875c4(GE_context* ac, T6 a1);
/* ET_ERROR_HANDLER.report_vpca2a_error */
extern void T36f470(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vpca2a */
extern T0* T531c980(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T36f151(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca2a_error */
extern void T77f471(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T77f152(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_procedure_call_agent_validity */
extern void T369f303(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_procedure_call_agent */
extern void T369f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_procedure */
extern void T988f34(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_qualified_call_agent_validity */
extern void T369f239(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T369f239ot1(T0* a1, T0** a2);
extern T1 T369f239ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_agent_validity */
extern void T369f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_query_call_agent_validity */
extern void T369f301(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_agent_validity */
extern void T369f300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_call_agent_validity */
extern void T369f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpca1a_error */
extern void T36f423(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpca1a */
extern T0* T531c933(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpca1a_error */
extern void T77f424(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_agent_validity */
extern void T369f299(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_query_call_agent */
extern void T369f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_agent_validity */
extern void T369f298(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_procedure_call_agent */
extern void T369f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_agent */
extern void T79f353(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_agent_validity */
extern void T79f430(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f430ot1(T0* a1, T0** a2);
extern T1 T79f430ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_call_agent_validity */
extern void T79f471(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f471ot1(T0* a1, T0** a2);
extern T1 T79f471ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_tuple_label_call_agent_validity */
extern void T79f503(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_call_agent */
extern void T79f518(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f518ot1(T0* a1, T0** a2);
extern T1 T79f518ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_query_call */
extern void T79f523(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.result_type_set */
extern T0* T334f71(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.is_empty */
extern T1 T268f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_query_call_agent_validity */
extern void T79f502(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_query_call_agent */
extern void T79f517(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_agent */
extern void T79f522(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T79f522ot1(T0* a1, T0** a2);
extern T1 T79f522ot2(T0* a1, T0** a2);
extern T1 T79f522ot3(T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_agent_closed_operands_dynamic_types */
extern void T79f525(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f525ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_agent_arguments_validity */
extern void T79f509(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T79f509ot1(T0* a1, T0** a2);
extern T1 T79f509ot2(T0* a1, T0** a2);
extern T1 T79f509ot3(T0* a1, T0** a2);
extern T1 T79f509ot4(T0* a1, T0** a2);
extern T1 T79f509ot5(T0* a1, T0** a2);
extern T1 T79f509ot6(T0* a1, T0** a2);
extern T1 T79f509ot7(T0* a1, T0** a2);
extern T1 T79f509ot8(T0* a1, T0** a2);
extern T1 T79f509ot9(T0* a1, T0** a2);
extern T1 T79f509ot10(T0* a1, T0** a2);
extern T1 T79f509ot11(T0* a1, T0** a2);
extern T1 T79f509ot12(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_implicit_agent_open_arguments */
extern void T79f508(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_procedure_call_agent_validity */
extern void T79f501(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_procedure_call_agent */
extern void T79f516(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_agent_validity */
extern void T79f470(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f470ot1(T0* a1, T0** a2);
extern T1 T79f470ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_agent_validity */
extern void T79f500(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_agent_validity */
extern void T79f499(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_agent_validity */
extern void T79f498(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_agent_validity */
extern void T79f469(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_agent_validity */
extern void T79f497(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_query_call_agent */
extern void T79f515(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_agent */
extern void T79f521(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T79f521ot1(T0* a1, T0** a2);
extern T1 T79f521ot2(T0* a1, T0** a2);
extern T1 T79f521ot3(T0* a1, T0** a2);
extern T1 T79f521ot4(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_call_agent_result_dynamic_types */
extern void T79f526(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_agent_validity */
extern void T79f496(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_procedure_call_agent */
extern void T79f514(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_call_agent */
extern void T74f967(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent */
extern void T74f1014(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent */
extern void T74f1060(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1060ot1(T0* a1, T0** a2);
extern T1 T74f1060ot2(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [ET_AGENT].force_last */
extern void T283f14(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].force */
extern void T678f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AGENT].fill_with */
extern void T677f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT].extend */
extern void T677f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].resize */
extern void T283f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].aliased_resized_area */
extern T0* T678f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT].aliased_resized_area */
extern T0* T677f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].new_capacity */
extern T6 T283f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].extendible */
extern T1 T283f8(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_agent_body_declaration */
extern void T74f1013(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_instruction */
extern void T74f1059(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1059ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_arguments */
extern void T287f14(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_name */
extern void T287f13(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_target */
extern void T287f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T290f30(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_name */
extern void T290f29(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_array */
extern void T1300f72(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.expression */
extern T0* T1136f13(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.item */
extern T0* T1136f7(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_array */
extern void T386f9(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_array */
extern void T382f14(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_array */
extern void T369f130(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_array_validity */
extern void T369f182(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T369f182ot1(T0* a1, T0** a2);
extern T1 T369f182ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_manifest_array */
extern void T369f241(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_ARRAY.put */
extern void T1136f31(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_array */
extern void T79f351(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_array_validity */
extern void T79f428(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f428ot1(T0* a1, T0** a2);
extern T1 T79f428ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_array */
extern void T79f467(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f467ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_manifest_array */
extern void T74f968(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array */
extern void T74f1015(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1015ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_parenthesized_expression */
extern void T1300f71(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_parenthesized_expression */
extern void T386f10(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_parenthesized_expression */
extern void T382f15(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_parenthesized_expression */
extern void T369f131(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_parenthesized_expression_validity */
extern void T369f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_parenthesized_expression */
extern void T79f350(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_parenthesized_expression_validity */
extern void T79f427(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_parenthesized_expression */
extern void T74f969(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_parenthesized_expression */
extern void T74f1016(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_expression */
extern void T1300f58(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_static_call_expression */
extern void T386f11(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_static_call_expression */
extern void T382f16(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_expression */
extern void T369f132(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_expression_validity */
extern void T369f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_static_query_call_expression_validity */
extern void T369f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_static_call_expression */
extern void T369f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_static_supplier */
extern void T369f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_static_supplier */
extern void T883f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_parenthesis_call_validity */
extern void T369f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T369f247ot1(T0* a1, T0** a2);
extern T1 T369f247ot2(T0* a1, T0** a2);
/* ET_STATIC_CALL_INSTRUCTION.set_parenthesis_call */
extern void T1254f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.set_parenthesis_call */
extern void T1169f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_dotnet_query_call_expression_validity */
extern void T369f246(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_expression */
extern void T79f337(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_expression_validity */
extern void T79f414(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_query_call_expression_validity */
extern void T79f390(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_expression */
extern void T79f446(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.set_static */
extern void T309f60(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_static */
extern void T247f59(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_supplier */
extern void T79f387(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_parenthesis_call_validity */
extern void T79f305(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T79f305ot1(T0* a1, T0** a2);
extern T1 T79f305ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_query_call_expression_validity */
extern void T79f458(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_expression */
extern void T74f970(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_expression */
extern void T74f1017(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1017ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_strip_expression */
extern void T1300f73(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_strip_expression */
extern void T386f12(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_strip_expression */
extern void T382f17(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_strip_expression */
extern void T369f133(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_strip_expression_validity */
extern void T369f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_strip_expression */
extern void T369f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwst2a_error */
extern void T36f377(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst2a */
extern T0* T531c887(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T36f115(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst2a_error */
extern void T77f378(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T77f116(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1a_error */
extern void T36f376(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vwst1a */
extern T0* T531c886(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T36f114(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1a_error */
extern void T77f377(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T77f115(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1b_error */
extern void T36f375(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst1b */
extern T0* T531c885(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwst1b_error */
extern void T77f376(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.feature_name */
extern T0* T1172f20(GE_context* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.item */
extern T0* T1172f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_strip_expression */
extern void T79f352(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_strip_expression_validity */
extern void T79f429(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_strip_expression */
extern void T79f468(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_strip_expression */
extern void T74f971(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_strip_expression */
extern void T74f1018(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c3_character_constant */
extern void T1300f87(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c3_character_constant */
extern void T386f13(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c3_character_constant */
extern void T382f18(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c3_character_constant */
extern void T369f134(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c3_character_constant_validity */
extern void T369f187(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_character_constant_validity */
extern void T369f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_32_constant */
extern void T369f319(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_8_constant */
extern void T369f318(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vwmq0c_error */
extern void T36f427(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0c */
extern T0* T531c937(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwmq0c_error */
extern void T77f428(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c3_character_constant */
extern void T79f366(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c3_character_constant_validity */
extern void T79f441(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_character_constant_validity */
extern void T79f454(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_32_constant */
extern void T79f490(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_8_constant */
extern void T79f489(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c3_character_constant */
extern void T74f972(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_character_constant */
extern void T74f1019(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_character_8 */
extern void T74f1061(GE_context* ac, T0* C, T2 a1);
/* UT_INTEGER_FORMATTER.put_decimal_natural_32 */
extern void T352f3(GE_context* ac, T0* C, T0* a1, T10 a2);
/* ET_PRECURSOR_CHECKER.process_verbatim_string */
extern void T1300f88(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_verbatim_string */
extern void T386f14(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_verbatim_string */
extern void T382f19(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_verbatim_string */
extern void T369f135(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_verbatim_string_validity */
extern void T369f188(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_verbatim_string */
extern void T79f367(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_verbatim_string_validity */
extern void T79f442(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_verbatim_string */
extern void T74f973(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_verbatim_string */
extern void T74f1020(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_special_manifest_string */
extern void T1300f89(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_special_manifest_string */
extern void T386f15(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_special_manifest_string */
extern void T382f20(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_special_manifest_string */
extern void T369f136(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_special_manifest_string_validity */
extern void T369f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_special_manifest_string */
extern void T79f368(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_special_manifest_string_validity */
extern void T79f443(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_special_manifest_string */
extern void T74f974(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_special_manifest_string */
extern void T74f1021(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_integer_constant */
extern void T1300f44(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_integer_constant */
extern void T386f16(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_integer_constant */
extern void T382f21(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_integer_constant */
extern void T369f137(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_integer_constant_validity */
extern void T369f190(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_integer_constant_validity */
extern void T369f110(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYMBOL_OPERATOR.is_minus */
extern T1 T943f16(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_natural_64_constant */
extern void T369f125(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_32_constant */
extern void T369f124(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_16_constant */
extern void T369f123(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_8_constant */
extern void T369f122(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_64_constant */
extern void T369f121(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_32_constant */
extern void T369f120(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_16_constant */
extern void T369f119(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvwmc2a_error */
extern void T36f278(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvwmc2a */
extern T0* T531c797(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T36f70(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvwmc2a_error */
extern void T77f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T77f71(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_8_constant */
extern void T369f118(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vwmq0a_error */
extern void T36f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0a */
extern T0* T531c796(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwmq0a_error */
extern void T77f278(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_integer_constant */
extern void T79f323(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_integer_constant_validity */
extern void T79f400(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_integer_constant_validity */
extern void T79f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_64_constant */
extern void T79f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_32_constant */
extern void T79f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_16_constant */
extern void T79f229(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_8_constant */
extern void T79f228(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_64_constant */
extern void T79f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_32_constant */
extern void T79f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_16_constant */
extern void T79f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_8_constant */
extern void T79f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_integer_constant */
extern void T74f975(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_integer_constant */
extern void T74f1022(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_integer_constant */
extern void T74f1062(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_64 */
extern void T267f17(GE_context* ac, T0* C, T11 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_64 */
extern void T269f18(GE_context* ac, T0* C, T11 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_32 */
extern void T267f16(GE_context* ac, T0* C, T10 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_32 */
extern void T269f17(GE_context* ac, T0* C, T10 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_16 */
extern void T267f15(GE_context* ac, T0* C, T9 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_16 */
extern void T269f16(GE_context* ac, T0* C, T9 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_8 */
extern void T267f14(GE_context* ac, T0* C, T8 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_8 */
extern void T269f15(GE_context* ac, T0* C, T8 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_64 */
extern void T267f10(GE_context* ac, T0* C, T7 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer_64 */
extern void T269f11(GE_context* ac, T0* C, T7 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_32 */
extern void T267f13(GE_context* ac, T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer_32 */
extern void T269f14(GE_context* ac, T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_16 */
extern void T267f12(GE_context* ac, T0* C, T5 a1);
/* INTEGER_16.to_integer_64 */
extern T7 T5f8(GE_context* ac, T5* C);
/* KL_STRING_OUTPUT_STREAM.put_integer_16 */
extern void T269f13(GE_context* ac, T0* C, T5 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_8 */
extern void T267f11(GE_context* ac, T0* C, T4 a1);
/* INTEGER_8.to_integer_64 */
extern T7 T4f8(GE_context* ac, T4* C);
/* KL_STRING_OUTPUT_STREAM.put_integer_8 */
extern void T269f12(GE_context* ac, T0* C, T4 a1);
/* ET_PRECURSOR_CHECKER.process_underscored_integer_constant */
extern void T1300f45(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T386f17(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T382f22(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_integer_constant */
extern void T369f138(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_integer_constant_validity */
extern void T369f191(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_integer_constant */
extern void T79f324(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_integer_constant_validity */
extern void T79f401(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_integer_constant */
extern void T74f976(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_integer_constant */
extern void T74f1023(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_hexadecimal_integer_constant */
extern void T1300f46(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T386f18(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T382f23(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_hexadecimal_integer_constant */
extern void T369f139(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_hexadecimal_integer_constant_validity */
extern void T369f192(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_hexadecimal_integer_constant */
extern void T79f325(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_hexadecimal_integer_constant_validity */
extern void T79f402(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_hexadecimal_integer_constant */
extern void T74f977(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_hexadecimal_integer_constant */
extern void T74f1024(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_octal_integer_constant */
extern void T1300f47(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_octal_integer_constant */
extern void T386f19(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_octal_integer_constant */
extern void T382f24(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_octal_integer_constant */
extern void T369f140(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_octal_integer_constant_validity */
extern void T369f193(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_octal_integer_constant */
extern void T79f326(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_octal_integer_constant_validity */
extern void T79f403(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_octal_integer_constant */
extern void T74f978(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_octal_integer_constant */
extern void T74f1025(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_binary_integer_constant */
extern void T1300f48(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_binary_integer_constant */
extern void T386f20(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_binary_integer_constant */
extern void T382f25(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_binary_integer_constant */
extern void T369f141(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_binary_integer_constant_validity */
extern void T369f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_binary_integer_constant */
extern void T79f327(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_binary_integer_constant_validity */
extern void T79f404(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_binary_integer_constant */
extern void T74f979(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_binary_integer_constant */
extern void T74f1026(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_real_constant */
extern void T1300f49(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_real_constant */
extern void T386f21(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_real_constant */
extern void T382f26(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_real_constant */
extern void T369f142(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_real_constant_validity */
extern void T369f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_real_constant_validity */
extern void T369f252(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_UNDERSCORED_REAL_CONSTANT.set_type */
extern void T1204f41(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_type */
extern void T1203f41(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_real_64_constant */
extern void T369f323(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_real_32_constant */
extern void T369f322(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vwmq0b_error */
extern void T36f429(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0b */
extern T0* T531c939(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwmq0b_error */
extern void T77f430(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_real_constant */
extern void T79f328(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_real_constant_validity */
extern void T79f405(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_real_constant_validity */
extern void T79f451(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_64_constant */
extern void T79f488(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_32_constant */
extern void T79f487(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_real_constant */
extern void T74f980(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_real_constant */
extern void T74f1027(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.is_negative */
extern T1 T1203f16(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_underscored_real_constant */
extern void T1300f50(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_real_constant */
extern void T386f22(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_real_constant */
extern void T382f27(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_real_constant */
extern void T369f143(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_real_constant_validity */
extern void T369f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_real_constant */
extern void T79f329(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_real_constant_validity */
extern void T79f406(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_real_constant */
extern void T74f981(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_real_constant */
extern void T74f1028(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.is_negative */
extern T1 T1204f16(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_true_constant */
extern void T1300f51(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_true_constant */
extern void T386f23(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_true_constant */
extern void T382f28(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_true_constant */
extern void T369f144(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_true_constant_validity */
extern void T369f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_boolean_constant */
extern void T369f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_true_constant */
extern void T79f330(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_true_constant_validity */
extern void T79f407(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_boolean_constant */
extern void T79f452(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_true_constant */
extern void T74f982(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_true_constant */
extern void T74f1029(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_false_constant */
extern void T1300f53(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_false_constant */
extern void T386f24(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_false_constant */
extern void T382f29(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_false_constant */
extern void T369f145(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_false_constant_validity */
extern void T369f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_false_constant */
extern void T79f332(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_false_constant_validity */
extern void T79f409(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_false_constant */
extern void T74f983(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_false_constant */
extern void T74f1030(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c1_character_constant */
extern void T1300f54(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c1_character_constant */
extern void T386f25(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c1_character_constant */
extern void T382f30(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c1_character_constant */
extern void T369f146(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c1_character_constant_validity */
extern void T369f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c1_character_constant */
extern void T79f333(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c1_character_constant_validity */
extern void T79f410(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c1_character_constant */
extern void T74f984(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c2_character_constant */
extern void T1300f55(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c2_character_constant */
extern void T386f26(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c2_character_constant */
extern void T382f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c2_character_constant */
extern void T369f147(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c2_character_constant_validity */
extern void T369f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c2_character_constant */
extern void T79f334(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c2_character_constant_validity */
extern void T79f411(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c2_character_constant */
extern void T74f985(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function */
extern void T1300f18(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_do_function */
extern void T1299f22(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function */
extern void T369f77(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_validity */
extern void T369f89(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vevi0c_error */
extern void T36f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0c */
extern T0* T531c785(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vevi0c_error */
extern void T77f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_result_supplier */
extern void T369f107(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_result_supplier */
extern void T883f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_result_declaration */
extern void T369f106(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_query_type_validity */
extern void T369f105(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function */
extern void T79f162(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_validity */
extern void T79f167(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_supplier */
extern void T79f174(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_declaration */
extern void T79f173(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_type_validity */
extern void T79f172(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_do_function */
extern void T74f986(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function */
extern void T74f1031(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_function */
extern void T74f1063(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function */
extern void T1300f19(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_once_function */
extern void T1299f23(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function */
extern void T369f78(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_validity */
extern void T369f90(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_keys_validity */
extern void T369f108(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vvok2a_error */
extern void T36f268(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vvok2a */
extern T0* T531c787(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T36f62(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vvok2a_error */
extern void T77f269(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T77f63(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_process_key */
extern T1 T1686f4(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_expected_key */
extern T1 T1686f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_STANDARD_ONCE_KEYS.string_ */
extern T0* T1686f10(GE_context* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.is_thread_key */
extern T1 T1686f3(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vvok1a_error */
extern void T36f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1a */
extern T0* T531c786(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T36f61(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vvok1a_error */
extern void T77f268(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T77f62(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_object_key */
extern T1 T1686f2(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.standard_once_keys */
extern unsigned char ge799os9344;
extern T0* ge799ov9344;
extern T0* T369f42(GE_context* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.default_create */
extern T0* T1686c11(GE_context* ac);
/* ET_MANIFEST_STRING_LIST.manifest_string */
extern T0* T1142f7(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_STRING_LIST.item */
extern T0* T1142f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function */
extern void T79f163(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_validity */
extern void T79f168(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_keys_validity */
extern void T79f175(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.standard_once_keys */
extern T0* T79f58(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_once_function */
extern void T74f987(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function */
extern void T74f1032(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.has_object_key */
extern T1 T1686f1(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.has_expected_key */
extern T1 T1686f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.standard_once_keys */
extern T0* T74f465(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_deferred_function */
extern void T1300f20(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_deferred_function */
extern void T1299f24(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_function */
extern void T369f79(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_function_validity */
extern void T369f91(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_function */
extern void T79f164(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_function_validity */
extern void T79f169(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_function */
extern void T74f988(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_function */
extern void T74f1033(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure */
extern void T1300f21(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_once_procedure */
extern void T1299f25(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure */
extern void T369f80(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_validity */
extern void T369f92(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure */
extern void T79f165(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_validity */
extern void T79f170(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_procedure */
extern void T74f989(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure */
extern void T74f1034(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure */
extern void T1300f22(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_external_procedure */
extern void T1299f26(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_external_procedure_validity */
extern void T1299f28(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_procedure_validity */
extern void T1299f30(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbu1a_error */
extern void T77f485(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbu1a */
extern T0* T531c994(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T77f159(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbu1a_error */
extern void T36f484(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T36f158(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.error_handler */
extern T0* T1299f7(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.current_system */
extern T0* T1299f9(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.set_fatal_error */
extern void T1299f56(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.unknown_builtin_reported */
extern T1 T1299f6(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_builtin_code */
extern void T1231f99(GE_context* ac, T0* C, T6 a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_real_procedure_validity */
extern void T1299f81(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.out_feature_name */
extern unsigned char ge807os11587;
extern T0* ge807ov11587;
extern T0* T81f972(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_64_feature_name */
extern unsigned char ge807os11494;
extern T0* ge807ov11494;
extern T0* T81f1243(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_32_feature_name */
extern unsigned char ge807os11493;
extern T0* ge807ov11493;
extern T0* T81f1241(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_64_feature_name */
extern unsigned char ge807os11455;
extern T0* ge807ov11455;
extern T0* T81f1239(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_32_feature_name */
extern unsigned char ge807os11454;
extern T0* ge807ov11454;
extern T0* T81f1237(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_double_feature_name */
extern unsigned char ge807os11652;
extern T0* ge807ov11652;
extern T0* T81f1175(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_real_feature_name */
extern unsigned char ge807os11660;
extern T0* ge807ov11660;
extern T0* T81f1234(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_64_feature_name */
extern unsigned char ge807os11659;
extern T0* ge807ov11659;
extern T0* T81f1232(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_feature_name */
extern unsigned char ge807os11658;
extern T0* ge807ov11658;
extern T0* T81f1230(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_positive_infinity_feature_name */
extern unsigned char ge807os11551;
extern T0* ge807ov11551;
extern T0* T81f1228(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_negative_infinity_feature_name */
extern unsigned char ge807os11550;
extern T0* ge807ov11550;
extern T0* T81f1226(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_nan_feature_name */
extern unsigned char ge807os11549;
extern T0* ge807ov11549;
extern T0* T81f1224(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_lt_feature_name */
extern unsigned char ge807os11517;
extern T0* ge807ov11517;
extern T0* T81f1165(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_less_feature_name */
extern unsigned char ge807os11547;
extern T0* ge807ov11547;
extern T0* T81f1164(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.prefix_plus_feature_name */
extern unsigned char ge807os11596;
extern T0* ge807ov11596;
extern T0* T81f1206(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identity_feature_name */
extern unsigned char ge807os11505;
extern T0* ge807ov11505;
extern T0* T81f1205(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.prefix_minus_feature_name */
extern unsigned char ge807os11594;
extern T0* ge807ov11594;
extern T0* T81f1162(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.opposite_feature_name */
extern unsigned char ge807os11586;
extern T0* ge807ov11586;
extern T0* T81f1161(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_power_feature_name */
extern unsigned char ge807os11523;
extern T0* ge807ov11523;
extern T0* T81f1159(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.power_feature_name */
extern unsigned char ge807os11593;
extern T0* ge807ov11593;
extern T0* T81f1158(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_divide_feature_name */
extern unsigned char ge807os11512;
extern T0* ge807ov11512;
extern T0* T81f1150(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.quotient_feature_name */
extern unsigned char ge807os11614;
extern T0* ge807ov11614;
extern T0* T81f1149(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_times_feature_name */
extern unsigned char ge807os11524;
extern T0* ge807ov11524;
extern T0* T81f1147(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.product_feature_name */
extern unsigned char ge807os11597;
extern T0* ge807ov11597;
extern T0* T81f1146(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_minus_feature_name */
extern unsigned char ge807os11518;
extern T0* ge807ov11518;
extern T0* T81f1144(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.minus_feature_name */
extern unsigned char ge807os11568;
extern T0* ge807ov11568;
extern T0* T81f1143(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs0a_error */
extern void T77f486(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkbs0a */
extern T0* T531c995(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T77f160(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs0a_error */
extern void T36f485(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T36f159(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.builtin_feature */
extern T6 T81f931(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_TOKEN_CONSTANTS.infix_plus_feature_name */
extern unsigned char ge807os11522;
extern T0* ge807ov11522;
extern T0* T81f968(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.plus_feature_name */
extern unsigned char ge807os11588;
extern T0* ge807ov11588;
extern T0* T81f967(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_real_ref_procedure_validity */
extern void T1299f80(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_TOKEN_CONSTANTS.positive_infinity_feature_name */
extern unsigned char ge807os11592;
extern T0* ge807ov11592;
extern T0* T81f1213(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.negative_infinity_feature_name */
extern unsigned char ge807os11581;
extern T0* ge807ov11581;
extern T0* T81f1211(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.nan_feature_name */
extern unsigned char ge807os11570;
extern T0* ge807ov11570;
extern T0* T81f1209(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_item_feature_name */
extern unsigned char ge807os11634;
extern T0* ge807ov11634;
extern T0* T81f932(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_ref_class_name */
extern unsigned char ge807os11418;
extern T0* ge807ov11418;
extern T0* T81f793(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_ref_class_name */
extern unsigned char ge807os11416;
extern T0* ge807ov11416;
extern T0* T81f790(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_ref_class_name */
extern unsigned char ge807os11415;
extern T0* ge807ov11415;
extern T0* T81f788(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_ref_class_name */
extern unsigned char ge807os11413;
extern T0* ge807ov11413;
extern T0* T81f786(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_ref_class_name */
extern unsigned char ge807os11411;
extern T0* ge807ov11411;
extern T0* T81f783(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_integer_procedure_validity */
extern void T1299f79(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.bit_not_feature_name */
extern unsigned char ge807os11439;
extern T0* ge807ov11439;
extern T0* T81f1203(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_xor_feature_name */
extern unsigned char ge807os11443;
extern T0* ge807ov11443;
extern T0* T81f1201(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_right_feature_name */
extern unsigned char ge807os11442;
extern T0* ge807ov11442;
extern T0* T81f1199(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_left_feature_name */
extern unsigned char ge807os11441;
extern T0* ge807ov11441;
extern T0* T81f1197(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_and_feature_name */
extern unsigned char ge807os11438;
extern T0* ge807ov11438;
extern T0* T81f1195(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_or_feature_name */
extern unsigned char ge807os11440;
extern T0* ge807ov11440;
extern T0* T81f1193(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_64_feature_name */
extern unsigned char ge807os11435;
extern T0* ge807ov11435;
extern T0* T81f1191(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_32_feature_name */
extern unsigned char ge807os11434;
extern T0* ge807ov11434;
extern T0* T81f1189(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_16_feature_name */
extern unsigned char ge807os11433;
extern T0* ge807ov11433;
extern T0* T81f1187(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_8_feature_name */
extern unsigned char ge807os11432;
extern T0* ge807ov11432;
extern T0* T81f1185(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_64_feature_name */
extern unsigned char ge807os11431;
extern T0* ge807ov11431;
extern T0* T81f1183(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_32_feature_name */
extern unsigned char ge807os11430;
extern T0* ge807ov11430;
extern T0* T81f1181(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_16_feature_name */
extern unsigned char ge807os11429;
extern T0* ge807ov11429;
extern T0* T81f1179(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_8_feature_name */
extern unsigned char ge807os11428;
extern T0* ge807ov11428;
extern T0* T81f1177(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_real_64_feature_name */
extern unsigned char ge807os11657;
extern T0* ge807ov11657;
extern T0* T81f1173(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_real_32_feature_name */
extern unsigned char ge807os11656;
extern T0* ge807ov11656;
extern T0* T81f1171(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_real_feature_name */
extern unsigned char ge807os11654;
extern T0* ge807ov11654;
extern T0* T81f1169(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_character_32_feature_name */
extern unsigned char ge807os11651;
extern T0* ge807ov11651;
extern T0* T81f940(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_character_8_feature_name */
extern unsigned char ge807os11650;
extern T0* ge807ov11650;
extern T0* T81f938(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_mod_feature_name */
extern unsigned char ge807os11519;
extern T0* ge807ov11519;
extern T0* T81f1156(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_remainder_feature_name */
extern unsigned char ge807os11537;
extern T0* ge807ov11537;
extern T0* T81f1155(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_div_feature_name */
extern unsigned char ge807os11511;
extern T0* ge807ov11511;
extern T0* T81f1153(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_quotient_feature_name */
extern unsigned char ge807os11536;
extern T0* ge807ov11536;
extern T0* T81f1152(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_integer_ref_procedure_validity */
extern void T1299f78(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_TOKEN_CONSTANTS.integer_8_ref_class_name */
extern unsigned char ge807os11410;
extern T0* ge807ov11410;
extern T0* T81f781(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_tuple_procedure_validity */
extern void T1299f77(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.reference_item_feature_name */
extern unsigned char ge807os11621;
extern T0* ge807ov11621;
extern T0* T81f80(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_item_feature_name */
extern unsigned char ge807os11618;
extern T0* ge807ov11618;
extern T0* T81f1106(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_item_feature_name */
extern unsigned char ge807os11616;
extern T0* ge807ov11616;
extern T0* T81f1104(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.object_comparison_feature_name */
extern unsigned char ge807os11585;
extern T0* ge807ov11585;
extern T0* T81f1101(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_item_feature_name */
extern unsigned char ge807os11578;
extern T0* ge807ov11578;
extern T0* T81f1099(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_item_feature_name */
extern unsigned char ge807os11576;
extern T0* ge807ov11576;
extern T0* T81f1097(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_item_feature_name */
extern unsigned char ge807os11573;
extern T0* ge807ov11573;
extern T0* T81f1095(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_item_feature_name */
extern unsigned char ge807os11571;
extern T0* ge807ov11571;
extern T0* T81f1093(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.item_code_feature_name */
extern unsigned char ge807os11561;
extern T0* ge807ov11561;
extern T0* T81f1091(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_item_feature_name */
extern unsigned char ge807os11533;
extern T0* ge807ov11533;
extern T0* T81f1089(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_item_feature_name */
extern unsigned char ge807os11531;
extern T0* ge807ov11531;
extern T0* T81f1087(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_item_feature_name */
extern unsigned char ge807os11529;
extern T0* ge807ov11529;
extern T0* T81f1085(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_item_feature_name */
extern unsigned char ge807os11527;
extern T0* ge807ov11527;
extern T0* T81f1083(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_item_feature_name */
extern unsigned char ge807os11458;
extern T0* ge807ov11458;
extern T0* T81f1080(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_item_feature_name */
extern unsigned char ge807os11456;
extern T0* ge807ov11456;
extern T0* T81f1078(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_item_feature_name */
extern unsigned char ge807os11445;
extern T0* ge807ov11445;
extern T0* T81f1075(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_object_comparison_feature_name */
extern unsigned char ge807os11639;
extern T0* ge807ov11639;
extern T0* T81f1138(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_reference_feature_name */
extern unsigned char ge807os11613;
extern T0* ge807ov11613;
extern T0* T81f77(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_real_64_feature_name */
extern unsigned char ge807os11612;
extern T0* ge807ov11612;
extern T0* T81f1135(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_real_32_feature_name */
extern unsigned char ge807os11611;
extern T0* ge807ov11611;
extern T0* T81f1133(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_pointer_feature_name */
extern unsigned char ge807os11610;
extern T0* ge807ov11610;
extern T0* T81f1131(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_64_feature_name */
extern unsigned char ge807os11609;
extern T0* ge807ov11609;
extern T0* T81f1129(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_32_feature_name */
extern unsigned char ge807os11608;
extern T0* ge807ov11608;
extern T0* T81f1127(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_16_feature_name */
extern unsigned char ge807os11607;
extern T0* ge807ov11607;
extern T0* T81f1125(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_8_feature_name */
extern unsigned char ge807os11606;
extern T0* ge807ov11606;
extern T0* T81f1123(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_64_feature_name */
extern unsigned char ge807os11605;
extern T0* ge807ov11605;
extern T0* T81f1121(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.ise_6_2_7_2906 */
extern unsigned char ge191os2003;
extern T0* ge191ov2003;
extern T0* T1299f10(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_32_feature_name */
extern unsigned char ge807os11604;
extern T0* ge807ov11604;
extern T0* T81f1119(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_16_feature_name */
extern unsigned char ge807os11603;
extern T0* ge807ov11603;
extern T0* T81f1117(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_8_feature_name */
extern unsigned char ge807os11602;
extern T0* ge807ov11602;
extern T0* T81f1115(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_character_32_feature_name */
extern unsigned char ge807os11601;
extern T0* ge807ov11601;
extern T0* T81f1113(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_character_8_feature_name */
extern unsigned char ge807os11600;
extern T0* ge807ov11600;
extern T0* T81f1111(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_tuple_feature */
extern T6 T81f1077(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.put_boolean_feature_name */
extern unsigned char ge807os11599;
extern T0* ge807ov11599;
extern T0* T81f1109(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_function_procedure_validity */
extern void T1299f76(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.detachable_formal_parameter_type */
extern T0* T1299f12(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_procedure_procedure_validity */
extern void T1299f75(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_platform_procedure_validity */
extern void T1299f74(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_bytes_feature_name */
extern unsigned char ge807os11667;
extern T0* ge807ov11667;
extern T0* T81f1073(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_thread_capable_feature_name */
extern unsigned char ge807os11555;
extern T0* ge807ov11555;
extern T0* T81f1071(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_scoop_capable_feature_name */
extern unsigned char ge807os11553;
extern T0* ge807ov11553;
extern T0* T81f1069(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_bytes_feature_name */
extern unsigned char ge807os11620;
extern T0* ge807ov11620;
extern T0* T81f1067(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_bytes_feature_name */
extern unsigned char ge807os11589;
extern T0* ge807ov11589;
extern T0* T81f1065(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_bytes_feature_name */
extern unsigned char ge807os11535;
extern T0* ge807ov11535;
extern T0* T81f1063(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.double_bytes_feature_name */
extern unsigned char ge807os11479;
extern T0* ge807ov11479;
extern T0* T81f1061(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_bytes_feature_name */
extern unsigned char ge807os11460;
extern T0* ge807ov11460;
extern T0* T81f1059(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_bytes_feature_name */
extern unsigned char ge807os11444;
extern T0* ge807ov11444;
extern T0* T81f1057(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_windows_feature_name */
extern unsigned char ge807os11559;
extern T0* ge807ov11559;
extern T0* T81f1055(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_vxworks_feature_name */
extern unsigned char ge807os11558;
extern T0* ge807ov11558;
extern T0* T81f1053(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_vms_feature_name */
extern unsigned char ge807os11557;
extern T0* ge807ov11557;
extern T0* T81f1051(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_unix_feature_name */
extern unsigned char ge807os11556;
extern T0* ge807ov11556;
extern T0* T81f1049(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_mac_feature_name */
extern unsigned char ge807os11548;
extern T0* ge807ov11548;
extern T0* T81f1047(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_platform_feature */
extern T6 T81f1046(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.is_dotnet_feature_name */
extern unsigned char ge807os11542;
extern T0* ge807ov11542;
extern T0* T81f1044(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.platform_class_name */
extern unsigned char ge807os11385;
extern T0* ge807ov11385;
extern T0* T81f780(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_internal_procedure_validity */
extern void T1299f73(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.max_type_id_feature_name */
extern unsigned char ge807os11567;
extern T0* ge807ov11567;
extern T0* T81f1042(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_internal_feature */
extern T6 T81f1041(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.type_of_type_feature_name */
extern unsigned char ge807os11664;
extern T0* ge807ov11664;
extern T0* T81f1039(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.internal_class_name */
extern unsigned char ge807os11373;
extern T0* ge807ov11373;
extern T0* T81f779(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_identified_routines_procedure_validity */
extern void T1299f72(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.eif_object_id_feature_name */
extern unsigned char ge807os11481;
extern T0* ge807ov11481;
extern T0* T81f1035(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_id_object_feature_name */
extern unsigned char ge807os11480;
extern T0* ge807ov11480;
extern T0* T81f1032(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_identified_feature */
extern T6 T81f1034(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.eif_object_id_free_feature_name */
extern unsigned char ge807os11482;
extern T0* ge807ov11482;
extern T0* T81f1037(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identified_routines_class_name */
extern unsigned char ge807os11367;
extern T0* ge807ov11367;
extern T0* T81f778(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_exception_manager_procedure_validity */
extern void T1299f71(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.builtin_ise_exception_manager_feature */
extern T6 T81f1031(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.developer_raise_feature_name */
extern unsigned char ge807os11474;
extern T0* ge807ov11474;
extern T0* T81f1029(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_factory_procedure_validity */
extern void T1299f70(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.builtin_exception_manager_factory_feature */
extern T6 T81f1028(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.exception_manager_feature_name */
extern unsigned char ge807os11485;
extern T0* ge807ov11485;
extern T0* T81f1026(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_factory_class_name */
extern unsigned char ge807os11365;
extern T0* ge807ov11365;
extern T0* T81f777(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_procedure_validity */
extern void T1299f69(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.type_of_code_feature_name */
extern unsigned char ge807os11663;
extern T0* ge807ov11663;
extern T0* T81f1016(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.last_exception_feature_name */
extern unsigned char ge807os11562;
extern T0* ge807ov11562;
extern T0* T81f1014(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_raisable_feature_name */
extern unsigned char ge807os11552;
extern T0* ge807ov11552;
extern T0* T81f1012(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_ignored_feature_name */
extern unsigned char ge807os11546;
extern T0* ge807ov11546;
extern T0* T81f1010(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_ignorable_feature_name */
extern unsigned char ge807os11545;
extern T0* ge807ov11545;
extern T0* T81f1008(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_caught_feature_name */
extern unsigned char ge807os11539;
extern T0* ge807ov11539;
extern T0* T81f1006(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_from_code_feature_name */
extern unsigned char ge807os11484;
extern T0* ge807ov11484;
extern T0* T81f1003(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_is_ignored_feature_name */
extern unsigned char ge807os11633;
extern T0* ge807ov11633;
extern T0* T81f1024(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raise_feature_name */
extern unsigned char ge807os11615;
extern T0* ge807ov11615;
extern T0* T81f1022(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ignore_feature_name */
extern unsigned char ge807os11506;
extern T0* ge807ov11506;
extern T0* T81f1020(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_exception_manager_feature */
extern T6 T81f1005(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.catch_feature_name */
extern unsigned char ge807os11450;
extern T0* ge807ov11450;
extern T0* T81f1018(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_memory_procedure_validity */
extern void T1299f68(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.argument_count_feature_name */
extern unsigned char ge807os11427;
extern T0* ge807ov11427;
extern T0* T81f978(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_memory_feature */
extern T6 T81f1000(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.free_feature_name */
extern unsigned char ge807os11496;
extern T0* ge807ov11496;
extern T0* T81f1001(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.memory_class_name */
extern unsigned char ge807os11377;
extern T0* ge807ov11377;
extern T0* T81f776(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_com_failure_procedure_validity */
extern void T1299f67(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.character_size_feature_name */
extern unsigned char ge807os11461;
extern T0* ge807ov11461;
extern T0* T81f994(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.c_strlen_feature_name */
extern unsigned char ge807os11447;
extern T0* ge807ov11447;
extern T0* T81f992(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.cwin_error_text_feature_name */
extern unsigned char ge807os11469;
extern T0* ge807ov11469;
extern T0* T81f990(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_facility_feature_name */
extern unsigned char ge807os11453;
extern T0* ge807ov11453;
extern T0* T81f988(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_code_feature_name */
extern unsigned char ge807os11452;
extern T0* ge807ov11452;
extern T0* T81f986(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_feature_name */
extern unsigned char ge807os11451;
extern T0* ge807ov11451;
extern T0* T81f983(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_com_failure_feature */
extern T6 T81f985(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.cwin_local_free_feature_name */
extern unsigned char ge807os11470;
extern T0* ge807ov11470;
extern T0* T81f996(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.com_failure_class_name */
extern unsigned char ge807os11360;
extern T0* ge807ov11360;
extern T0* T81f775(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_arguments_32_procedure_validity */
extern void T1299f66(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.i_th_argument_pointer_feature_name */
extern unsigned char ge807os11503;
extern T0* ge807ov11503;
extern T0* T81f981(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_arguments_32_feature */
extern T6 T81f980(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.arguments_32_class_name */
extern unsigned char ge807os11354;
extern T0* ge807ov11354;
extern T0* T81f774(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_procedure_validity */
extern void T1299f65(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_default_pointer_feature_name */
extern unsigned char ge807os11541;
extern T0* ge807ov11541;
extern T0* T81f976(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.hash_code_feature_name */
extern unsigned char ge807os11502;
extern T0* ge807ov11502;
extern T0* T81f974(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_integer_32_feature_name */
extern unsigned char ge807os11653;
extern T0* ge807ov11653;
extern T0* T81f970(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_ref_procedure_validity */
extern void T1299f64(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.pointer_ref_class_name */
extern unsigned char ge807os11419;
extern T0* ge807ov11419;
extern T0* T81f773(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_procedure_validity */
extern void T1299f63(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.infix_xor_feature_name */
extern unsigned char ge807os11525;
extern T0* ge807ov11525;
extern T0* T81f964(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_exclusive_feature_name */
extern unsigned char ge807os11476;
extern T0* ge807ov11476;
extern T0* T81f963(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.prefix_not_feature_name */
extern unsigned char ge807os11595;
extern T0* ge807ov11595;
extern T0* T81f958(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.negated_feature_name */
extern unsigned char ge807os11580;
extern T0* ge807ov11580;
extern T0* T81f957(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_implies_feature_name */
extern unsigned char ge807os11515;
extern T0* ge807ov11515;
extern T0* T81f961(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implication_feature_name */
extern unsigned char ge807os11507;
extern T0* ge807ov11507;
extern T0* T81f960(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_or_else_feature_name */
extern unsigned char ge807os11521;
extern T0* ge807ov11521;
extern T0* T81f955(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_semistrict_feature_name */
extern unsigned char ge807os11477;
extern T0* ge807ov11477;
extern T0* T81f954(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_or_feature_name */
extern unsigned char ge807os11520;
extern T0* ge807ov11520;
extern T0* T81f952(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_feature_name */
extern unsigned char ge807os11475;
extern T0* ge807ov11475;
extern T0* T81f951(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_and_then_feature_name */
extern unsigned char ge807os11509;
extern T0* ge807ov11509;
extern T0* T81f949(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conjuncted_semistrict_feature_name */
extern unsigned char ge807os11466;
extern T0* ge807ov11466;
extern T0* T81f948(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_boolean_feature */
extern T6 T81f943(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.infix_and_feature_name */
extern unsigned char ge807os11508;
extern T0* ge807ov11508;
extern T0* T81f946(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conjuncted_feature_name */
extern unsigned char ge807os11465;
extern T0* ge807ov11465;
extern T0* T81f945(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_ref_procedure_validity */
extern void T1299f62(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.boolean_ref_class_name */
extern unsigned char ge807os11404;
extern T0* ge807ov11404;
extern T0* T81f772(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_character_procedure_validity */
extern void T1299f61(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.natural_32_code_feature_name */
extern unsigned char ge807os11575;
extern T0* ge807ov11575;
extern T0* T81f936(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.code_feature_name */
extern unsigned char ge807os11463;
extern T0* ge807ov11463;
extern T0* T81f934(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_character_ref_procedure_validity */
extern void T1299f60(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BUILTIN_FEATURE_CHECKER.current_universe */
extern T0* T1299f5(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_special_procedure_validity */
extern void T1299f59(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.base_address_feature_name */
extern unsigned char ge807os11436;
extern T0* ge807ov11436;
extern T0* T81f922(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.aliased_resized_area_feature_name */
extern unsigned char ge807os11425;
extern T0* ge807ov11425;
extern T0* T81f920(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.element_size_feature_name */
extern unsigned char ge807os11483;
extern T0* ge807ov11483;
extern T0* T81f918(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_count_feature_name */
extern unsigned char ge807os11627;
extern T0* ge807ov11627;
extern T0* T81f928(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_feature_name */
extern unsigned char ge807os11598;
extern T0* ge807ov11598;
extern T0* T81f76(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.make_empty_feature_name */
extern unsigned char ge807os11566;
extern T0* ge807ov11566;
extern T0* T81f925(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_special_feature */
extern T6 T81f915(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.extend_feature_name */
extern unsigned char ge807os11486;
extern T0* ge807ov11486;
extern T0* T81f81(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_type_procedure_validity */
extern void T1299f58(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.type_id_feature_name */
extern unsigned char ge807os11662;
extern T0* ge807ov11662;
extern T0* T81f882(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.runtime_name_feature_name */
extern unsigned char ge807os11622;
extern T0* ge807ov11622;
extern T0* T81f880(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_field_feature_name */
extern unsigned char ge807os11619;
extern T0* ge807ov11619;
extern T0* T81f878(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_field_feature_name */
extern unsigned char ge807os11617;
extern T0* ge807ov11617;
extern T0* T81f876(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_field_feature_name */
extern unsigned char ge807os11591;
extern T0* ge807ov11591;
extern T0* T81f874(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_special_any_instance_feature_name */
extern unsigned char ge807os11584;
extern T0* ge807ov11584;
extern T0* T81f872(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.attached_formal_parameter_type */
extern T0* T1299f8(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.new_instance_feature_name */
extern unsigned char ge807os11583;
extern T0* ge807ov11583;
extern T0* T81f870(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_field_feature_name */
extern unsigned char ge807os11579;
extern T0* ge807ov11579;
extern T0* T81f868(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_field_feature_name */
extern unsigned char ge807os11577;
extern T0* ge807ov11577;
extern T0* T81f866(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_field_feature_name */
extern unsigned char ge807os11574;
extern T0* ge807ov11574;
extern T0* T81f864(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_field_feature_name */
extern unsigned char ge807os11572;
extern T0* ge807ov11572;
extern T0* T81f862(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.name_feature_name */
extern unsigned char ge807os11569;
extern T0* ge807ov11569;
extern T0* T81f860(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_expanded_feature_name */
extern unsigned char ge807os11544;
extern T0* ge807ov11544;
extern T0* T81f858(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_field_feature_name */
extern unsigned char ge807os11534;
extern T0* ge807ov11534;
extern T0* T81f856(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_field_feature_name */
extern unsigned char ge807os11532;
extern T0* ge807ov11532;
extern T0* T81f854(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_field_feature_name */
extern unsigned char ge807os11530;
extern T0* ge807ov11530;
extern T0* T81f852(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_field_feature_name */
extern unsigned char ge807os11528;
extern T0* ge807ov11528;
extern T0* T81f850(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.has_default_feature_name */
extern unsigned char ge807os11501;
extern T0* ge807ov11501;
extern T0* T81f848(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_type_feature_name */
extern unsigned char ge807os11500;
extern T0* ge807ov11500;
extern T0* T81f846(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_count_feature_name */
extern unsigned char ge807os11499;
extern T0* ge807ov11499;
extern T0* T81f844(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generating_type_feature_name */
extern unsigned char ge807os11497;
extern T0* ge807ov11497;
extern T0* T81f809(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_type_feature_name */
extern unsigned char ge807os11491;
extern T0* ge807ov11491;
extern T0* T81f841(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_static_type_feature_name */
extern unsigned char ge807os11490;
extern T0* ge807ov11490;
extern T0* T81f839(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_count_feature_name */
extern unsigned char ge807os11488;
extern T0* ge807ov11488;
extern T0* T81f835(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_feature_name */
extern unsigned char ge807os11487;
extern T0* ge807ov11487;
extern T0* T81f833(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_feature_name */
extern unsigned char ge807os11472;
extern T0* ge807ov11472;
extern T0* T81f831(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_field_feature_name */
extern unsigned char ge807os11459;
extern T0* ge807ov11459;
extern T0* T81f829(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_field_feature_name */
extern unsigned char ge807os11457;
extern T0* ge807ov11457;
extern T0* T81f827(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_field_feature_name */
extern unsigned char ge807os11446;
extern T0* ge807ov11446;
extern T0* T81f825(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.base_class_name_feature_name */
extern unsigned char ge807os11437;
extern T0* ge807ov11437;
extern T0* T81f822(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_reference_field_feature_name */
extern unsigned char ge807os11644;
extern T0* ge807ov11644;
extern T0* T81f912(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_64_field_feature_name */
extern unsigned char ge807os11643;
extern T0* ge807ov11643;
extern T0* T81f910(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_32_field_feature_name */
extern unsigned char ge807os11642;
extern T0* ge807ov11642;
extern T0* T81f908(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_pointer_field_feature_name */
extern unsigned char ge807os11641;
extern T0* ge807ov11641;
extern T0* T81f906(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_64_field_feature_name */
extern unsigned char ge807os11638;
extern T0* ge807ov11638;
extern T0* T81f904(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_32_field_feature_name */
extern unsigned char ge807os11637;
extern T0* ge807ov11637;
extern T0* T81f902(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_16_field_feature_name */
extern unsigned char ge807os11636;
extern T0* ge807ov11636;
extern T0* T81f900(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_8_field_feature_name */
extern unsigned char ge807os11635;
extern T0* ge807ov11635;
extern T0* T81f898(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_64_field_feature_name */
extern unsigned char ge807os11632;
extern T0* ge807ov11632;
extern T0* T81f896(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_32_field_feature_name */
extern unsigned char ge807os11631;
extern T0* ge807ov11631;
extern T0* T81f894(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_16_field_feature_name */
extern unsigned char ge807os11630;
extern T0* ge807ov11630;
extern T0* T81f892(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_8_field_feature_name */
extern unsigned char ge807os11629;
extern T0* ge807ov11629;
extern T0* T81f890(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_32_field_feature_name */
extern unsigned char ge807os11626;
extern T0* ge807ov11626;
extern T0* T81f888(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_8_field_feature_name */
extern unsigned char ge807os11625;
extern T0* ge807ov11625;
extern T0* T81f886(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_type_feature */
extern T6 T81f824(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.set_boolean_field_feature_name */
extern unsigned char ge807os11624;
extern T0* ge807ov11624;
extern T0* T81f884(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_any_procedure_validity */
extern void T1299f57(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.deep_twin_feature_name */
extern unsigned char ge807os11471;
extern T0* ge807ov11471;
extern T0* T81f817(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_deep_equal_feature_name */
extern unsigned char ge807os11540;
extern T0* ge807ov11540;
extern T0* T81f815(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.standard_twin_feature_name */
extern unsigned char ge807os11647;
extern T0* ge807ov11647;
extern T0* T81f813(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.tagged_out_feature_name */
extern unsigned char ge807os11648;
extern T0* ge807ov11648;
extern T0* T81f811(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generator_feature_name */
extern unsigned char ge807os11498;
extern T0* ge807ov11498;
extern T0* T81f807(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conforms_to_feature_name */
extern unsigned char ge807os11464;
extern T0* ge807ov11464;
extern T0* T81f805(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.same_type_feature_name */
extern unsigned char ge807os11623;
extern T0* ge807ov11623;
extern T0* T81f803(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.standard_is_equal_feature_name */
extern unsigned char ge807os11646;
extern T0* ge807ov11646;
extern T0* T81f801(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.twin_feature_name */
extern unsigned char ge807os11661;
extern T0* ge807ov11661;
extern T0* T81f797(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_any_feature */
extern T6 T81f799(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.standard_copy_feature_name */
extern unsigned char ge807os11645;
extern T0* ge807ov11645;
extern T0* T81f819(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.string_ */
extern T0* T1299f4(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.process_external_procedure */
extern void T369f81(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_validity */
extern void T369f93(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure */
extern void T79f166(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T79f171(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_procedure_validity */
extern void T79f176(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_set_reference_field */
extern void T79f183(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_formal_argument_dynamic_types */
extern void T79f185(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_reference */
extern void T79f182(GE_context* ac, T0* C, T0* a1);
extern T1 T79f182ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_procedure */
extern void T79f181(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_set_is_ignored */
extern void T79f180(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.argument_type_set */
extern T0* T79f69(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_raise */
extern void T79f179(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_ignore */
extern void T79f178(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_catch */
extern void T79f177(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_builtin_unknown */
extern T1 T1231f61(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_builtin */
extern T1 T1231f34(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T79f171p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_procedure */
extern void T74f990(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure */
extern void T74f1035(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_routine */
extern void T74f1064(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3, T1 a4);
/* ET_C_GENERATOR.flush_to_cpp_file */
extern void T74f1076(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_external_dllwin_body */
extern void T74f1075(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.print_external_cpp_body */
extern void T74f1074(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* DS_LINKED_LIST [STRING_8].item */
extern T0* T143f15(GE_context* ac, T0* C, T6 a1);
/* ST_SPLITTER.make_with_separators */
extern T0* T55c11(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.print_external_c_struct_body */
extern void T74f1073(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_external_c_body */
extern void T74f1072(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T1 a7);
/* ET_C_GENERATOR.print_external_c_prototype */
extern void T74f1071(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_C_GENERATOR.print_external_builtin_body */
extern void T74f1070(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_body */
extern void T74f1080(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_type_procedure_body */
extern void T74f1113(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_reference_field_body */
extern void T74f1204(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_real_64_field_body */
extern void T74f1203(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_basic_expanded_field_body */
extern void T74f1208(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_real_32_field_body */
extern void T74f1202(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_pointer_field_body */
extern void T74f1201(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_natural_64_field_body */
extern void T74f1200(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_natural_32_field_body */
extern void T74f1199(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_natural_16_field_body */
extern void T74f1198(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_natural_8_field_body */
extern void T74f1197(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_integer_64_field_body */
extern void T74f1196(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_integer_32_field_body */
extern void T74f1195(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_integer_16_field_body */
extern void T74f1194(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_integer_8_field_body */
extern void T74f1193(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_character_32_field_body */
extern void T74f1192(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_character_8_field_body */
extern void T74f1191(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_boolean_field_body */
extern void T74f1190(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_tuple_procedure_body */
extern void T74f1112(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_reference_body */
extern void T74f1189(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1189ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_64_body */
extern void T74f1188(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_basic_expanded_item_body */
extern void T74f1207(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1207ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_32_body */
extern void T74f1187(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_pointer_body */
extern void T74f1186(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_64_body */
extern void T74f1185(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_32_body */
extern void T74f1184(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_16_body */
extern void T74f1183(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_8_body */
extern void T74f1182(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_64_body */
extern void T74f1181(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_32_body */
extern void T74f1180(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_16_body */
extern void T74f1179(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_8_body */
extern void T74f1178(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_32_body */
extern void T74f1177(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_8_body */
extern void T74f1176(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_boolean_body */
extern void T74f1175(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_procedure_body */
extern void T74f1111(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_set_count_body */
extern void T74f1174(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1174ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_special_extend_body */
extern void T74f1173(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1173ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_external_builtin_sized_real_procedure_body */
extern void T74f1110(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_sized_integer_procedure_body */
extern void T74f1109(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_sized_character_procedure_body */
extern void T74f1108(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_procedure_body */
extern void T74f1107(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_procedure_body */
extern void T74f1106(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_memory_procedure_body */
extern void T74f1105(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_exception_manager_procedure_body */
extern void T74f1104(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_procedure_body */
extern void T74f1103(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_procedure_body */
extern void T74f1102(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_set_is_ignored_body */
extern void T74f1172(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_raise_body */
extern void T74f1171(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_ignore_body */
extern void T74f1170(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_catch_body */
extern void T74f1169(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_com_failure_procedure_body */
extern void T74f1101(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_procedure_body */
extern void T74f1100(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_procedure_body */
extern void T74f1099(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_body */
extern void T74f1079(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_type_function_body */
extern void T74f1098(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_real_64_field_body */
extern void T74f1168(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_basic_expanded_field_body */
extern void T74f1206(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_real_32_field_body */
extern void T74f1167(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_pointer_field_body */
extern void T74f1166(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_natural_64_field_body */
extern void T74f1165(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_natural_32_field_body */
extern void T74f1164(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_natural_16_field_body */
extern void T74f1163(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_natural_8_field_body */
extern void T74f1162(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_integer_64_field_body */
extern void T74f1161(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_integer_32_field_body */
extern void T74f1160(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_integer_16_field_body */
extern void T74f1159(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_integer_8_field_body */
extern void T74f1158(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_type_body */
extern void T74f1157(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generating_type_body */
extern void T74f1156(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_field_type_body */
extern void T74f1155(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_field_static_type_body */
extern void T74f1154(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_field_name_body */
extern void T74f1153(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_field_body */
extern void T74f1152(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_builtin_type_field_body */
extern T0* T74f1152ac1(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* ET_C_GENERATOR.print_builtin_type_character_32_field_body */
extern void T74f1151(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_character_8_field_body */
extern void T74f1150(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_boolean_field_body */
extern void T74f1149(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_semicolon_newline */
extern void T74f1116(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_indentation_assign_to_result */
extern void T74f1115(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_external_builtin_tuple_function_body */
extern void T74f1097(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern void T74f1148(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern T0* T74f1148ac1(T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T74f1148ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_real_64_item_body */
extern void T74f1147(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_basic_expanded_item_body */
extern void T74f1205(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1205ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_real_32_item_body */
extern void T74f1146(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_pointer_item_body */
extern void T74f1145(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_64_item_body */
extern void T74f1144(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_32_item_body */
extern void T74f1143(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_16_item_body */
extern void T74f1142(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_8_item_body */
extern void T74f1141(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_item_code_body */
extern void T74f1140(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1140ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_integer_64_item_body */
extern void T74f1139(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_32_item_body */
extern void T74f1138(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_16_item_body */
extern void T74f1137(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_8_item_body */
extern void T74f1136(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_32_item_body */
extern void T74f1135(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_8_item_body */
extern void T74f1134(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_boolean_item_body */
extern void T74f1133(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_function_body */
extern void T74f1096(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_aliased_resized_area_body */
extern void T74f1132(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1132ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_external_builtin_sized_real_function_body */
extern void T74f1095(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_sized_real_out_body */
extern void T74f1131(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_sized_integer_function_body */
extern void T74f1094(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_sized_character_function_body */
extern void T74f1093(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_function_body */
extern void T74f1092(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_out_body */
extern void T74f1130(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_platform_function_body */
extern void T74f1091(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_memory_function_body */
extern void T74f1090(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_internal_function_body */
extern void T74f1089(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_internal_type_of_type_body */
extern void T74f1129(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_function_body */
extern void T74f1088(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_function_body */
extern void T74f1087(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_factory_function_body */
extern void T74f1086(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_factory_exception_manager_body */
extern void T74f1128(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_function_body */
extern void T74f1085(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_type_of_code_body */
extern void T74f1127(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_last_exception_body */
extern void T74f1126(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_raisable_body */
extern void T74f1125(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_ignored_body */
extern void T74f1124(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_ignorable_body */
extern void T74f1123(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_caught_body */
extern void T74f1122(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_exception_from_code_body */
extern void T74f1121(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_com_failure_function_body */
extern void T74f1084(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_function_body */
extern void T74f1083(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_arguments_32_function_body */
extern void T74f1082(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_function_body */
extern void T74f1081(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body */
extern void T74f1120(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1120ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_tagged_out_body */
extern void T74f1119(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1119ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body */
extern void T74f1118(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1118ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_is_deep_equal_body */
extern void T74f1117(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_conforms_to_body */
extern void T74f1114(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_function */
extern T1 T1231f60(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_builtin */
extern T1 T259f41(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_external_c_inline_body */
extern void T74f1069(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_ROUTINES.as_lower */
extern T2 T1689f1(GE_context* ac, T0* C, T2 a1);
/* ET_C_GENERATOR.character_ */
extern unsigned char ge215os3805;
extern T0* ge215ov3805;
extern T0* T74f473(GE_context* ac, T0* C);
/* KL_CHARACTER_ROUTINES.default_create */
extern T0* T1689c2(GE_context* ac);
/* ET_C_GENERATOR.print_external_c_includes */
extern void T74f1068(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_header_filename */
extern void T74f1078(GE_context* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring_count */
extern T6 T303f301(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_feature_info_message_call */
extern void T74f1067(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_routine_name */
extern void T74f1066(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T74f1066ot1(T0* a1, T0** a2);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_feature */
extern void T1329f7(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_feature */
extern void T1328f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_feature */
extern void T1327f5(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_feature */
extern void T1326f7(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_feature */
extern void T1305f7(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1304f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_like_feature_validity */
extern void T1304f16(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat2b_error */
extern void T77f282(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat2b */
extern T0* T531c800(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat2b_error */
extern void T36f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1304f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1304f19(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.current_system */
extern T0* T1304f6(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.index */
extern T6 T1241f22(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.process_like_feature */
extern void T1303f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_feature */
extern void T1298f13(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_feature */
extern void T1297f16(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_feature */
extern void T1296f19(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1295f11(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_like_feature_to_sorter */
extern void T1295f16(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].force_relation */
extern void T1520f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].put_indexed_relation */
extern void T1520f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].force */
extern void T1520f16(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].put */
extern void T1520f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].put_new */
extern void T1681f36(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_put */
extern void T1681f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_put */
extern void T1681f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_put */
extern void T1681f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_put */
extern void T1681f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_item */
extern T6 T1681f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].hash_position */
extern T6 T1681f28(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.hash_code */
extern T6 T1241f73(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_item */
extern T6 T1681f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].resize */
extern void T1681f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_resize */
extern void T1681f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].special_integer_ */
extern T0* T1681f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_resize */
extern void T1681f49(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T1725f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T1724f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_resize */
extern void T1681f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_item */
extern T0* T1681f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_resize */
extern void T1681f45(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].resize */
extern void T1601f13(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].capacity */
extern T6 T1520f9(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].count */
extern T6 T1520f8(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].index_of */
extern T6 T1520f7(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].found_item */
extern T6 T1681f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_item */
extern T6 T1681f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].found */
extern T1 T1681f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].search */
extern void T1681f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].search_position */
extern void T1681f53(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_feature */
extern void T1294f8(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_feature */
extern void T1293f10(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_like_feature */
extern void T1293f14(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1a_error */
extern void T77f284(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat1a */
extern T0* T531c802(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T77f74(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat1a_error */
extern void T36f283(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T36f73(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1b_error */
extern void T77f283(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1b */
extern T0* T531c801(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1b_error */
extern void T36f282(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER_TYPE_RESOLVER.error_handler */
extern T0* T1293f5(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.current_system */
extern T0* T1293f6(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.set_fatal_error */
extern void T1293f17(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.resolve_like_argument */
extern void T1241f84(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolve_like_feature */
extern void T1241f83(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_feature */
extern void T1282f18(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_type */
extern void T1282f24(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_like_type_constraint */
extern void T1282f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3a_error */
extern void T77f370(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3a */
extern T0* T531c881(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3a_error */
extern void T36f369(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_like_feature */
extern void T1281f17(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_type */
extern void T1281f24(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_like_type_validity */
extern void T1281f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3a_error */
extern void T77f484(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3a */
extern T0* T531c993(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T77f158(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr3a_error */
extern void T36f483(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T36f157(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.error_handler */
extern T0* T1281f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.current_system */
extern T0* T1281f5(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.set_fatal_error */
extern void T1281f12(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.process_like_feature */
extern void T372f23(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_feature_validity */
extern void T372f29(GE_context* ac, T0* C, T0* a1);
extern T1 T372f29ot1(T0* a1, T0** a2);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_braced_type */
extern void T1329f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_qualified_like_identifier_validity */
extern void T1329f13(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_braced_type */
extern void T1328f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_qualified_like_identifier_validity */
extern void T1328f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.set_fatal_error */
extern void T1328f14(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.has_flattening_error */
extern T1 T470f38(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.features_flattened */
extern T1 T470f37(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_braced_type */
extern void T1327f6(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_qualified_like_identifier_validity */
extern void T1327f9(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_braced_type */
extern void T1326f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_qualified_like_identifier_validity */
extern void T1326f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_braced_type */
extern void T1305f8(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_qualified_like_identifier */
extern void T1305f10(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1304f13(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T1304f17(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1c_error */
extern void T77f285(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1c */
extern T0* T531c803(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1c_error */
extern void T36f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.resolve_identifier_type */
extern void T1243f78(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolve_identifier_type */
extern void T1242f82(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_TYPE.seed */
extern T6 T1243f22(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.seed */
extern T6 T1242f20(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.process_qualified_like_braced_type */
extern void T1303f18(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_braced_type */
extern void T1298f14(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_qualified_like_braced_type */
extern void T1297f17(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_qualified_like_braced_type */
extern void T1296f20(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_qualified_like_identifier_tuple_actual_parameters_unfolded */
extern void T1296f24(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_qualified_like_identifier_vtct_validity */
extern void T1296f23(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1295f12(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_qualified_like_identifier_to_sorter */
extern void T1295f17(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_braced_type */
extern void T1294f9(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_qualified_like_identifier */
extern void T1294f11(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_braced_type */
extern void T1293f11(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_qualified_like_identifier */
extern void T1293f15(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_braced_type */
extern void T1282f19(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_qualified_like_braced_type */
extern void T1281f18(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T372f24(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T372f30(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.report_qualified_anchored_type_supplier */
extern void T372f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.report_qualified_anchored_type_supplier */
extern void T883f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_type */
extern void T1329f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_type */
extern void T1328f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_type */
extern void T1327f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_type */
extern void T1326f9(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_type */
extern void T1305f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1304f14(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_qualified_like_type */
extern void T1303f19(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_type */
extern void T1298f15(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_qualified_like_type */
extern void T1297f18(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_qualified_like_type */
extern void T1296f21(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1295f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_type */
extern void T1294f10(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_type */
extern void T1293f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_type */
extern void T1282f20(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_qualified_like_type */
extern void T1281f19(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_qualified_like_type */
extern void T372f25(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_expression */
extern void T1300f59(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_precursor_validity */
extern void T1300f94(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3c_error */
extern void T77f511(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3c */
extern T0* T531c1020(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.tokens */
extern T0* T531f726(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T77f118(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr3c_error */
extern void T36f510(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T36f117(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3b_error */
extern void T77f510(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3b */
extern T0* T531c1019(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.position */
extern T0* T1252f8(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdpr3b_error */
extern void T36f509(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_parent_type */
extern void T1255f29(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_type */
extern void T1252f14(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_seed */
extern void T906f22(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3a_error */
extern void T77f509(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vdpr3a */
extern T0* T531c1018(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vdpr3a_error */
extern void T36f508(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vdpr2a_error */
extern void T77f508(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr2a */
extern T0* T531c1017(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T77f171(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr2a_error */
extern void T36f507(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T36f170(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.error_handler */
extern T0* T1300f8(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.set_fatal_error */
extern void T1300f97(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.current_universe */
extern T0* T1300f7(GE_context* ac, T0* C);
/* ET_IDENTIFIER.class_name */
extern T0* T181f94(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_precursor_expression */
extern void T386f27(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_precursor_expression */
extern void T382f32(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_expression */
extern void T369f148(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_expression_validity */
extern void T369f201(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T369f201ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_precursor_query_expression_validity */
extern void T369f255(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_SET [ET_QUERY].force_last */
extern void T882f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].slots_put */
extern void T882f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].clashes_put */
extern void T882f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].slots_item */
extern T6 T882f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].hash_position */
extern T6 T882f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].resize */
extern void T882f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].clashes_resize */
extern void T882f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].special_integer_ */
extern T0* T882f32(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].key_storage_resize */
extern void T882f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_resize */
extern void T882f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].key_storage_item */
extern T0* T882f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].slots_resize */
extern void T882f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].new_capacity */
extern T6 T882f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_put */
extern void T882f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].search_position */
extern void T882f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].key_equality_tester */
extern T0* T882f30(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_precursor_expression */
extern void T369f324(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_precursor_parenthesis_call_validity */
extern void T369f254(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T369f254ot1(T0* a1, T0** a2);
extern T1 T369f254ot2(T0* a1, T0** a2);
/* ET_PRECURSOR_INSTRUCTION.set_parenthesis_call */
extern void T1252f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.set_parenthesis_call */
extern void T1255f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.ancestor */
extern T0* T82f71(GE_context* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.base_type */
extern T0* T395f3(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_generic */
extern T1 T80f15(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdpr3d_error */
extern void T36f380(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3d */
extern T0* T531c890(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3d_error */
extern void T77f381(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr3e_error */
extern void T36f379(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3e */
extern T0* T531c889(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr3e_error */
extern void T77f380(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr1b_error */
extern void T36f378(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1b */
extern T0* T531c888(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T36f116(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr1b_error */
extern void T77f379(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T77f117(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_expression */
extern void T79f338(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_expression_validity */
extern void T79f415(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_query_expression_validity */
extern void T79f386(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_expression */
extern void T79f445(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.dynamic_precursor */
extern T0* T309f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FEATURE.dynamic_precursor */
extern T0* T247f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR_LIST.force_last */
extern void T310f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].force */
extern void T1697f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].fill_with */
extern void T1696f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].extend */
extern void T1696f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.fixed_array */
extern unsigned char ge978os7522;
extern T0* ge978ov7522;
extern T0* T310f4(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].default_create */
extern T0* T1697c3(GE_context* ac);
/* ET_DYNAMIC_PRECURSOR_LIST.resize */
extern void T310f10(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T1697f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T1696f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.new_capacity */
extern T6 T310f6(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.capacity */
extern T6 T310f5(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.put_last */
extern void T310f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.make_with_capacity */
extern T0* T310c7(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].make */
extern T0* T1697f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].make_empty */
extern T0* T1696c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_PRECURSOR.make */
extern T0* T309c52(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PRECURSOR.make_feature */
extern void T309f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T309f61ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PRECURSOR.builtin_internal_feature */
extern T6 T309f41(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.builtin_identified_feature */
extern T6 T309f39(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.tokens */
extern T0* T309f34(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.empty_dynamic_type_sets */
extern T0* T309f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_parenthesis_call_validity */
extern void T79f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T79f302ot1(T0* a1, T0** a2);
extern T1 T79f302ot2(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_precursor_expression */
extern void T74f991(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_expression */
extern void T74f1036(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_feature_address */
extern void T1300f82(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_feature_address */
extern void T386f28(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_feature_address */
extern void T382f33(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_feature_address */
extern void T369f149(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_feature_address_validity */
extern void T369f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuar4a_error */
extern void T36f385(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar4a */
extern T0* T531c895(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T36f120(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar4a_error */
extern void T77f386(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T77f121(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_function_address */
extern void T369f262(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_attribute_address */
extern void T369f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_address */
extern void T369f260(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_pointer_expression */
extern void T369f258(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_typed_pointer_expression */
extern void T369f257(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_feature_address */
extern void T79f361(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_address_validity */
extern void T79f437(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_function_address */
extern void T79f482(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.set_address */
extern void T309f62(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_address */
extern void T247f60(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_address */
extern void T79f481(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_address */
extern void T79f480(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_pointer_expression */
extern void T79f460(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_typed_pointer_expression */
extern void T79f459(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_feature_address */
extern void T74f992(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_address */
extern void T74f1037(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1037ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_FEATURE_LIST.is_empty */
extern T1 T308f8(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_current_address */
extern void T1300f60(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_current_address */
extern void T386f29(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_current_address */
extern void T382f34(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current_address */
extern void T369f150(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_address_validity */
extern void T369f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current_address */
extern void T79f339(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_address_validity */
extern void T79f416(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_current_address */
extern void T74f993(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_current_address */
extern void T74f1038(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1038ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_result_address */
extern void T1300f61(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_result_address */
extern void T386f30(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_result_address */
extern void T382f35(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result_address */
extern void T369f151(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_address_validity */
extern void T369f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result_address */
extern void T79f340(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_address_validity */
extern void T79f417(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_result_address */
extern void T74f994(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_result_address */
extern void T74f1039(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_expression_address */
extern void T1300f62(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_expression_address */
extern void T386f31(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_expression_address */
extern void T382f36(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_expression_address */
extern void T369f152(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expression_address_validity */
extern void T369f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_expression_address */
extern void T79f341(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_address_validity */
extern void T79f418(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_expression_address */
extern void T74f995(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_expression_address */
extern void T74f1040(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_expression */
extern void T1300f63(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_infix_expression */
extern void T386f32(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_expression */
extern void T382f37(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_expression */
extern void T369f153(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_expression_validity */
extern void T369f206(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T369f206ot1(T0* a1, T0** a2);
extern T1 T369f206ot2(T0* a1, T0** a2);
extern T1 T369f206ot3(T0* a1, T0** a2);
/* ET_INFIX_CAST_EXPRESSION.make */
extern T0* T1716c16(GE_context* ac, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_context */
extern T1 T379f43(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_context_with_type_marks */
extern T1 T379f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE.is_subset */
extern T1 T385f7(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].go_after */
extern void T174f79(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_go_after */
extern void T174f80(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.set_right */
extern void T1260f28(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.set_left */
extern void T1260f27(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.set_boolean_operator */
extern void T1260f26(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_expression */
extern void T79f342(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_expression_validity */
extern void T79f419(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f419ot1(T0* a1, T0** a2);
extern T1 T79f419ot2(T0* a1, T0** a2);
extern T1 T79f419ot3(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_infix_expression */
extern void T74f996(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_expression */
extern void T74f1041(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_type */
extern void T1300f66(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_type */
extern void T386f33(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_type */
extern void T382f38(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_type */
extern void T369f154(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_type_validity */
extern void T369f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_type */
extern void T369f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_type */
extern void T79f345(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_type_validity */
extern void T79f422(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_type */
extern void T79f464(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_manifest_type */
extern void T74f997(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_type */
extern void T74f1042(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_prefix_expression */
extern void T1300f67(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_prefix_expression */
extern void T386f34(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_prefix_expression */
extern void T382f39(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_prefix_expression */
extern void T369f155(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_prefix_expression_validity */
extern void T369f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_prefix_expression */
extern void T79f346(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_prefix_expression_validity */
extern void T79f423(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_prefix_expression */
extern void T74f998(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_prefix_expression */
extern void T74f1043(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_expression */
extern void T1300f68(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_old_expression */
extern void T386f35(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_old_expression */
extern void T382f40(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_expression */
extern void T369f156(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_old_expression_validity */
extern void T369f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vaol1a_error */
extern void T36f396(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vaol1a */
extern T0* T531c906(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T36f125(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vaol1a_error */
extern void T77f397(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T77f126(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_expression */
extern void T79f347(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_old_expression_validity */
extern void T79f424(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_old_expression */
extern void T74f999(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_old_expression */
extern void T74f1044(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_object_test */
extern void T1300f83(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_old_object_test */
extern void T386f36(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_old_object_test */
extern void T382f41(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_object_test */
extern void T369f157(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_object_test */
extern void T79f362(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_old_object_test */
extern void T74f1000(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_manifest_string */
extern void T1300f85(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_manifest_string */
extern void T386f37(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_manifest_string */
extern void T382f42(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_manifest_string */
extern void T369f158(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_manifest_string_validity */
extern void T369f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_manifest_string */
extern void T79f364(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_manifest_string_validity */
extern void T79f439(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_manifest_string */
extern void T74f1001(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_manifest_string */
extern void T74f1045(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].force_last */
extern void T297f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].key_storage_put */
extern void T297f66(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].force */
extern void T700f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].fill_with */
extern void T698f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].extend */
extern void T698f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].slots_put */
extern void T297f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].clashes_put */
extern void T297f64(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].slots_item */
extern T6 T297f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].hash_position */
extern T6 T297f33(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.hash_code */
extern T6 T1267f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].resize */
extern void T297f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].clashes_resize */
extern void T297f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].special_integer_ */
extern T0* T297f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].key_storage_resize */
extern void T297f69(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T700f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T698f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].item_storage_resize */
extern void T297f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].slots_resize */
extern void T297f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].new_capacity */
extern T6 T297f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].item_storage_put */
extern void T297f62(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].search_position */
extern void T297f61(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function_inline_agent */
extern void T1300f75(GE_context* ac, T0* C, T0* a1);
extern T1 T1300f75ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T386f38(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T382f43(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function_inline_agent */
extern void T369f159(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_inline_agent_validity */
extern void T369f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_query_inline_agent_validity */
extern void T369f275(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_query_inline_agent */
extern void T369f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].last */
extern T0* T374f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].is_empty */
extern T1 T374f8(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vevi0d_error */
extern void T36f404(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0d */
extern T0* T531c914(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vevi0d_error */
extern void T77f405(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_inline_agent_locals_validity */
extern void T369f274(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_local_supplier */
extern void T369f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_local_supplier */
extern void T883f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_local_variable_declaration */
extern void T369f327(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1h_error */
extern void T36f444(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1h */
extern T0* T531c954(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T36f137(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1h_error */
extern void T77f445(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T77f138(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1f_error */
extern void T36f443(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1f */
extern T0* T531c953(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1f_error */
extern void T77f444(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1d_error */
extern void T36f442(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1d */
extern T0* T531c952(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1d_error */
extern void T77f443(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1c_error */
extern void T36f441(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1c */
extern T0* T531c951(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1c_error */
extern void T77f442(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vrlv1b_error */
extern void T36f440(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv1b */
extern T0* T531c950(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T36f139(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv1b_error */
extern void T77f441(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T77f140(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv2b_error */
extern void T36f439(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv2b */
extern T0* T531c949(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T36f138(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv2b_error */
extern void T77f440(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T77f139(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vred0d_error */
extern void T36f438(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0d */
extern T0* T531c948(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vred0d_error */
extern void T77f439(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_inline_agent_across_components_validity */
extern void T369f273(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_inline_agent_object_tests_validity */
extern void T369f272(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuot3b_error */
extern void T36f437(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot3b */
extern T0* T531c947(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot3b_error */
extern void T77f438(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_supplier */
extern void T369f271(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_result_supplier */
extern void T883f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_declaration */
extern void T369f270(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inline_agent_formal_arguments_validity */
extern void T369f269(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_argument_supplier */
extern void T369f326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_argument_supplier */
extern void T883f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_formal_argument_declaration */
extern void T369f325(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1g_error */
extern void T36f436(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1g */
extern T0* T531c946(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1g_error */
extern void T77f437(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1e_error */
extern void T36f435(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1e */
extern T0* T531c945(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1e_error */
extern void T77f436(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1b_error */
extern void T36f434(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1b */
extern T0* T531c944(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1b_error */
extern void T77f435(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1a_error */
extern void T36f433(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1a */
extern T0* T531c943(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1a_error */
extern void T77f434(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vrfa0b_error */
extern void T36f432(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrfa0b */
extern T0* T531c942(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vrfa0b_error */
extern void T77f433(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0c_error */
extern void T36f431(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0c */
extern T0* T531c941(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vred0c_error */
extern void T77f432(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACROSS_CURSOR_SCOPE.hide_across_components */
extern void T384f10(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_CURSOR_SCOPE.count */
extern T6 T384f4(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.hide_object_tests */
extern void T381f9(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function_inline_agent */
extern void T79f354(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_inline_agent_validity */
extern void T79f431(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_inline_agent_validity */
extern void T79f478(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_query_inline_agent */
extern void T79f510(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent */
extern void T79f519(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f519ot1(T0* a1, T0** a2);
extern T1 T79f519ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_agent_result_dynamic_types */
extern void T79f524(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_locals_validity */
extern void T79f477(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_supplier */
extern void T79f507(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_variable_declaration */
extern void T79f506(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_across_components_validity */
extern void T79f476(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_object_tests_validity */
extern void T79f475(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_supplier */
extern void T79f474(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_declaration */
extern void T79f473(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_formal_arguments_validity */
extern void T79f472(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_argument_supplier */
extern void T79f505(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_formal_argument_declaration */
extern void T79f504(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function_inline_agent */
extern void T74f1002(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent */
extern void T74f1047(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent_body_declaration */
extern void T74f1046(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine_inline_agent_body_declaration */
extern void T74f1065(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_trace_message_call */
extern void T74f1077(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_PRECURSOR_CHECKER.process_once_function_inline_agent */
extern void T1300f76(GE_context* ac, T0* C, T0* a1);
extern T1 T1300f76ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T386f39(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T382f44(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function_inline_agent */
extern void T369f160(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_inline_agent_validity */
extern void T369f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpir3a_error */
extern void T36f405(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpir3a */
extern T0* T531c915(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T36f128(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir3a_error */
extern void T77f406(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T77f129(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function_inline_agent */
extern void T79f355(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_inline_agent_validity */
extern void T79f432(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_function_inline_agent */
extern void T74f1003(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent */
extern void T74f1049(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent_body_declaration */
extern void T74f1048(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function_inline_agent */
extern void T1300f77(GE_context* ac, T0* C, T0* a1);
extern T1 T1300f77ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T386f40(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T382f45(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function_inline_agent */
extern void T369f161(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_inline_agent_validity */
extern void T369f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpir3b_error */
extern void T36f406(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpir3b */
extern T0* T531c916(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpir3b_error */
extern void T77f407(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function_inline_agent */
extern void T79f356(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_inline_agent_validity */
extern void T79f433(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_function_inline_agent */
extern void T74f1004(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent */
extern void T74f1051(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent_body_declaration */
extern void T74f1050(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_procedure_inline_agent */
extern void T1300f78(GE_context* ac, T0* C, T0* a1);
extern T1 T1300f78ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T386f41(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T382f46(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure_inline_agent */
extern void T369f162(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_inline_agent_validity */
extern void T369f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_procedure_inline_agent_validity */
extern void T369f276(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_inline_agent */
extern void T369f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure_inline_agent */
extern void T79f357(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_inline_agent_validity */
extern void T79f434(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_procedure_inline_agent_validity */
extern void T79f479(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_inline_agent */
extern void T79f511(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_do_procedure_inline_agent */
extern void T74f1005(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent */
extern void T74f1053(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent_body_declaration */
extern void T74f1052(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure_inline_agent */
extern void T1300f79(GE_context* ac, T0* C, T0* a1);
extern T1 T1300f79ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T386f42(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T382f47(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure_inline_agent */
extern void T369f163(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_inline_agent_validity */
extern void T369f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure_inline_agent */
extern void T79f358(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_inline_agent_validity */
extern void T79f435(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_procedure_inline_agent */
extern void T74f1006(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent */
extern void T74f1055(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent_body_declaration */
extern void T74f1054(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure_inline_agent */
extern void T1300f80(GE_context* ac, T0* C, T0* a1);
extern T1 T1300f80ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T386f43(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T382f48(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure_inline_agent */
extern void T369f164(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_inline_agent_validity */
extern void T369f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure_inline_agent */
extern void T79f359(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_inline_agent_validity */
extern void T79f436(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_procedure_inline_agent */
extern void T74f1007(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent */
extern void T74f1057(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent_body_declaration */
extern void T74f1056(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter_type */
extern void T1329f10(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter_type */
extern void T1328f15(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter_type */
extern void T1327f12(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter_type */
extern void T1326f10(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter_type */
extern void T1305f11(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1304f20(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter_type */
extern void T1303f20(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter_type */
extern void T1298f16(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter_type */
extern void T1297f19(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter_type */
extern void T1296f27(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1295f19(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter_type */
extern void T1294f12(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter_type */
extern void T1293f19(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter_type */
extern void T1282f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameter_type_constraint */
extern void T1282f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3g_error */
extern void T77f369(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtct0b */
extern T0* T531c877(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3g_error */
extern void T36f368(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3f_error */
extern void T77f368(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3f */
extern T0* T531c880(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3f_error */
extern void T36f367(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3d_error */
extern void T77f367(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3d_error */
extern void T36f366(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3c_error */
extern void T77f366(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3c */
extern T0* T531c879(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3c_error */
extern void T36f365(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force_relation */
extern void T1485f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put_indexed_relation */
extern void T1485f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force */
extern void T1485f16(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put */
extern void T1485f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].put_new */
extern void T1646f36(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_put */
extern void T1646f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_put */
extern void T1646f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_put */
extern void T1646f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_put */
extern void T1646f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_item */
extern T6 T1646f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].hash_position */
extern T6 T1646f32(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.hash_code */
extern T6 T1214f73(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.hash_code */
extern T6 T1086f72(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_item */
extern T6 T1646f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].resize */
extern void T1646f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_resize */
extern void T1646f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].special_integer_ */
extern T0* T1646f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_resize */
extern void T1646f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_resize */
extern void T1646f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_item */
extern T0* T1646f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_resize */
extern void T1646f44(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].resize */
extern void T1486f16(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].capacity */
extern T6 T1485f9(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].index_of */
extern T6 T1485f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].found_item */
extern T6 T1646f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_item */
extern T6 T1646f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].found */
extern T1 T1646f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].search */
extern void T1646f58(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].search_position */
extern void T1646f59(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3b_error */
extern void T77f365(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3b */
extern T0* T531c878(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3b_error */
extern void T36f364(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_CHECKER1.process_formal_parameter_type */
extern void T1281f20(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter_type */
extern void T372f26(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class_type */
extern void T1329f4(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_class_type_validity */
extern void T1329f12(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.set_fatal_error */
extern void T1329f15(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class_type */
extern void T1328f11(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_actual_parameters_validity */
extern void T1328f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class_type */
extern void T1327f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_class_type_validity */
extern void T1327f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.set_fatal_error */
extern void T1327f11(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.has_ancestors_error */
extern T1 T470f43(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.ancestors_built */
extern T1 T470f42(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class_type */
extern void T1326f4(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_class_type_validity */
extern void T1326f12(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_syntax_error */
extern T1 T470f46(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_parsed */
extern T1 T470f45(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.set_fatal_error */
extern void T1326f15(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_preparsed */
extern T1 T470f41(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class_type */
extern void T1305f12(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_class_type */
extern void T1305f16(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_2 */
extern void T80f114(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1304f15(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_actual_parameters_validity */
extern void T1304f18(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class_type */
extern void T1303f10(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_class_type_validity */
extern void T1303f11(GE_context* ac, T0* C, T0* a1);
extern T1 T1303f11ot1(T0* a1, T0** a2);
extern T1 T1303f11ot2(T0* a1, T0** a2);
/* DS_HASH_SET [ET_CLASS].force_last */
extern void T1302f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].resize */
extern void T1302f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_resize */
extern void T1302f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].special_integer_ */
extern T0* T1302f31(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].key_storage_resize */
extern void T1302f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_resize */
extern void T1302f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].slots_resize */
extern void T1302f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_capacity */
extern T6 T1302f30(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT_CHECKER3.current_system */
extern T0* T1303f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.error_handler */
extern T0* T1303f5(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.set_fatal_error */
extern void T1303f12(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class_type */
extern void T1298f18(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_class_type_constraint */
extern void T1298f20(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg3a_error */
extern void T77f290(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vtcg3a */
extern T0* T531c808(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T77f78(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg3a_error */
extern void T36f289(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T36f77(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.error_handler */
extern T0* T1298f6(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.current_system */
extern T0* T1298f7(GE_context* ac, T0* C);
/* ET_CLASS.resolve_unfolded_tuple_actual_parameters_2 */
extern void T82f267(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_CHECKER2.current_universe */
extern T0* T1298f5(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.set_fatal_error */
extern void T1298f24(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.process_class_type */
extern void T1297f9(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_class_type_validity */
extern void T1297f10(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.error_handler */
extern T0* T1297f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.current_system */
extern T0* T1297f5(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.set_fatal_error */
extern void T1297f11(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.process_class_type */
extern void T1296f22(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_tuple_actual_parameters_unfolded */
extern void T1296f26(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_vtct_validity */
extern void T1296f25(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1295f15(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_actual_parameters_to_sorter */
extern void T1295f18(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class_type */
extern void T1294f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_class_type */
extern void T1294f17(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.current_universe */
extern T0* T1294f4(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class_type */
extern void T1293f13(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_actual_parameters */
extern void T1293f16(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.reset_fatal_error */
extern void T1293f18(GE_context* ac, T0* C, T1 a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class_type */
extern void T1282f23(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_class_type_constraint */
extern void T1282f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5a_error */
extern void T77f289(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_gvtcg5a */
extern T0* T531c807(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T77f77(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvtcg5a_error */
extern void T36f288(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T36f76(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_reference */
extern T1 T1214f13(GE_context* ac, T0* C);
/* ET_KEYWORD.is_reference */
extern T1 T396f11(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_reference */
extern T1 T1086f11(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5b_error */
extern void T77f288(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_gvtcg5b */
extern T0* T531c806(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_gvtcg5b_error */
extern void T36f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_expanded */
extern T1 T1214f12(GE_context* ac, T0* C);
/* ET_KEYWORD.is_expanded */
extern T1 T396f15(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_expanded */
extern T1 T1086f10(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtug2a_error */
extern void T77f287(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug2a */
extern T0* T531c805(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T77f76(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug2a_error */
extern void T36f286(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T36f75(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.resolve_unfolded_tuple_actual_parameters_1 */
extern void T82f266(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtug1a_error */
extern void T77f286(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug1a */
extern T0* T531c804(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T77f75(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug1a_error */
extern void T36f285(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T36f74(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class_type */
extern void T1281f10(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_class_type_validity */
extern void T1281f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.current_universe */
extern T0* T1281f7(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.process_class_type */
extern void T372f27(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_class_type_validity */
extern void T372f31(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.reset_fatal_error */
extern void T372f34(GE_context* ac, T0* C, T1 a1);
/* ET_TYPE_CHECKER.current_universe */
extern T0* T372f15(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_external_function */
extern void T1300f12(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_external_function */
extern void T1299f16(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_external_function_validity */
extern void T1299f27(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_function_validity */
extern void T1299f29(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_builtin_code */
extern void T259f101(GE_context* ac, T0* C, T6 a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_real_function_validity */
extern void T1299f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_real_ref_function_validity */
extern void T1299f54(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_integer_function_validity */
extern void T1299f53(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_integer_ref_function_validity */
extern void T1299f52(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_tuple_function_validity */
extern void T1299f51(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_function_function_validity */
extern void T1299f50(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_procedure_function_validity */
extern void T1299f49(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_platform_function_validity */
extern void T1299f48(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_internal_function_validity */
extern void T1299f47(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_identified_routines_function_validity */
extern void T1299f46(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_exception_manager_function_validity */
extern void T1299f45(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_factory_function_validity */
extern void T1299f44(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_function_validity */
extern void T1299f43(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_memory_function_validity */
extern void T1299f42(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.find_referers_feature_name */
extern unsigned char ge807os11492;
extern T0* ge807ov11492;
extern T0* T81f998(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_com_failure_function_validity */
extern void T1299f41(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_arguments_32_function_validity */
extern void T1299f40(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_function_validity */
extern void T1299f39(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_ref_function_validity */
extern void T1299f38(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_function_validity */
extern void T1299f37(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.ise_6_1_latest */
extern T0* T1299f11(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_ref_function_validity */
extern void T1299f36(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_character_function_validity */
extern void T1299f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_character_ref_function_validity */
extern void T1299f34(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_special_function_validity */
extern void T1299f33(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_type_function_validity */
extern void T1299f32(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.field_name_feature_name */
extern unsigned char ge807os11489;
extern T0* ge807ov11489;
extern T0* T81f837(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_any_function_validity */
extern void T1299f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function */
extern void T369f82(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_validity */
extern void T369f94(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function */
extern void T79f186(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T79f191(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_warning_message */
extern void T36f372(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_warning_message */
extern void T77f373(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_string_type_alive */
extern void T79f197(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.result_type_set */
extern T0* T79f70(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_function_validity */
extern void T79f196(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_new_special_any_instance */
extern void T79f222(GE_context* ac, T0* C, T0* a1);
extern T1 T79f222ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_new_instance */
extern void T79f221(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_generic_parameter_type */
extern void T79f220(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_field_static_type */
extern void T79f219(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_field_count */
extern void T79f218(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_field */
extern void T79f217(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_default */
extern void T79f216(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_reference_item */
extern void T79f215(GE_context* ac, T0* C, T0* a1);
extern T1 T79f215ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_item */
extern void T79f214(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_factory_exception_manager */
extern void T79f213(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_type_of_code */
extern void T79f212(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_last_exception */
extern void T79f211(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_raisable */
extern void T79f210(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignored */
extern void T79f209(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignorable */
extern void T79f208(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_caught */
extern void T79f207(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_exception_from_code */
extern void T79f206(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_internal_type_of_type */
extern void T79f205(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_eif_object_id */
extern void T79f204(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_eif_id_object */
extern void T79f203(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function_item */
extern void T79f202(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function */
extern void T79f201(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_twin */
extern void T79f200(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_builtin_unknown */
extern T1 T259f67(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T79f191p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_function */
extern void T74f1209(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function */
extern void T74f1220(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_tuple_type */
extern void T1329f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_tuple_type_validity */
extern void T1329f14(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_tuple_type */
extern void T1328f16(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_tuple_type */
extern void T1327f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_tuple_type_validity */
extern void T1327f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_tuple_type */
extern void T1326f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_tuple_type_validity */
extern void T1326f14(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_tuple_type */
extern void T1305f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_tuple_type */
extern void T1305f17(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1304f21(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_tuple_type */
extern void T1303f14(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_tuple_type */
extern void T1298f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_tuple_type_constraint */
extern void T1298f19(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_tuple_type */
extern void T1297f13(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_tuple_type_validity */
extern void T1297f22(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_tuple_type */
extern void T1296f28(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_tuple_actual_parameters_unfolded */
extern void T1296f34(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_vtct_validity */
extern void T1296f33(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1295f20(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_tuple_type */
extern void T1294f14(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_tuple_type */
extern void T1294f18(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_tuple_type */
extern void T1293f20(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_tuple_type */
extern void T1282f22(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_tuple_type_constraint */
extern void T1282f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_tuple_type */
extern void T1281f14(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_tuple_type_validity */
extern void T1281f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvhpr5a_error */
extern void T77f483(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr5a */
extern T0* T531c992(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T77f157(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr5a_error */
extern void T36f482(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T36f156(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_tuple_type */
extern void T372f28(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_tuple_type_validity */
extern void T372f32(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_qualified_call_instruction */
extern void T1300f25(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_qualified_call_instruction */
extern void T369f177(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_instruction */
extern void T79f234(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_qualified_call_instruction */
extern void T74f1210(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unqualified_call_expression */
extern void T1300f81(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T386f54(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T382f59(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unqualified_call_expression */
extern void T369f175(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_expression */
extern void T79f360(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_unqualified_call_expression */
extern void T74f1211(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_expression */
extern void T74f1221(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1221ot1(T0* a1, T0** a2);
extern T1 T74f1221ot2(T0* a1, T0** a2);
extern T1 T74f1221ot3(T0* a1, T0** a2);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T291f12(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_object_test */
extern void T1300f69(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_object_test */
extern void T386f53(GE_context* ac, T0* C, T0* a1);
extern T1 T386f53ot1(T0* a1);
extern T1 T386f53ot2(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE.add_name */
extern void T385f14(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_attribute */
extern void T385f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].force_last */
extern void T174f81(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE.add_formal_argument */
extern void T385f19(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_local_variable */
extern void T385f18(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_result */
extern void T385f13(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_object_test */
extern void T382f58(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_object_test */
extern void T369f174(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_test_validity */
extern void T369f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_object_test */
extern void T369f294(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_object_test_type */
extern void T369f293(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_test */
extern void T79f348(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_validity */
extern void T79f425(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test */
extern void T79f466(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_type */
extern void T79f465(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_object_test */
extern void T74f1212(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_object_equality_expression */
extern void T1300f65(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_object_equality_expression */
extern void T386f52(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_object_equality_expression */
extern void T382f57(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_object_equality_expression */
extern void T369f173(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_equality_expression_validity */
extern void T369f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_object_equality_expression */
extern void T369f292(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vweq0b_error */
extern void T36f414(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0b */
extern T0* T531c924(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vweq_error */
extern T1 T36f131(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vweq0b_error */
extern void T77f415(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vweq_error */
extern T1 T77f132(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_left */
extern void T320f26(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_right */
extern void T320f25(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.name */
extern unsigned char ge612os14863;
extern T0* ge612ov14863;
extern T0* T320f14(GE_context* ac, T0* C);
/* ET_IDENTIFIER.twin */
extern T0* T181f97(GE_context* ac, T0* C);
/* ET_IDENTIFIER.copy */
extern void T181f124(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.tokens */
extern T0* T320f17(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_equality_expression */
extern void T79f344(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_equality_expression_validity */
extern void T79f421(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_equality_expression */
extern void T79f463(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_object_equality_expression_target_dynamic_types */
extern void T79f495(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T1852c6(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_object_equality_expression */
extern void T74f1213(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_equality_expression */
extern void T1300f64(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_equality_expression */
extern void T386f51(GE_context* ac, T0* C, T0* a1);
extern T1 T386f51ot1(T0* a1);
extern T1 T386f51ot2(T0* a1);
extern T1 T386f51ot3(T0* a1, T0** a2);
extern T1 T386f51ot4(T0* a1);
extern T1 T386f51ot5(T0* a1);
extern T1 T386f51ot6(T0* a1, T0** a2);
/* ET_BRACKET_SYMBOL.is_equal_symbol */
extern T1 T649f96(GE_context* ac, T0* C);
/* ET_SYMBOL.is_equal_symbol */
extern T1 T345f70(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_equality_expression */
extern void T382f56(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_equality_expression */
extern void T369f172(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_equality_expression_validity */
extern void T369f229(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_equality_expression */
extern void T369f291(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vweq0a_error */
extern void T36f413(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0a */
extern T0* T531c923(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vweq0a_error */
extern void T77f414(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EQUALITY_EXPRESSION.set_left */
extern void T321f24(GE_context* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.set_right */
extern void T321f23(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_equality_expression */
extern void T79f343(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_equality_expression_validity */
extern void T79f420(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_equality_expression */
extern void T79f462(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_equality_expression_target_dynamic_types */
extern void T79f494(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.make */
extern T0* T1851c6(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_equality_expression */
extern void T74f1214(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_expression */
extern void T1300f56(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_create_expression */
extern void T386f49(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_create_expression */
extern void T382f54(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_expression */
extern void T369f170(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_expression_validity */
extern void T369f228(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_creation_expression_validity */
extern void T369f290(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T369f290ot1(T0* a1, T0** a2);
extern T1 T369f290ot2(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vgcc6c_error */
extern void T36f469(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6c */
extern T0* T531c979(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc6c_error */
extern void T77f470(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc8a_error */
extern void T36f468(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8a */
extern T0* T531c978(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T36f150(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc8a_error */
extern void T77f469(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T77f151(GE_context* ac, T0* C, T0* a1);
/* ET_AST_NULL_LEAF.column */
extern T6 T1888f3(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.line */
extern T6 T1888f2(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.last_position */
extern T0* T1854f19(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.last_position */
extern T0* T325f19(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vgcc1a_error */
extern void T36f467(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc1a */
extern T0* T531c977(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T36f149(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc1a_error */
extern void T77f468(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T77f150(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc5a_error */
extern void T36f466(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5a */
extern T0* T531c976(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T36f148(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc5a_error */
extern void T77f467(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T77f149(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_type_validity */
extern void T369f342(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_FROM_EXPRESSION.type_position */
extern T0* T1854f18(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.type_position */
extern T0* T325f18(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_create_supplier */
extern void T369f341(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_create_supplier */
extern void T883f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcc6b_error */
extern void T36f465(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6b */
extern T0* T531c975(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc6b_error */
extern void T77f466(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_expression */
extern void T79f335(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_expression_validity */
extern void T79f412(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_expression_validity */
extern void T79f455(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f455ot1(T0* a1, T0** a2);
extern T1 T79f455ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_type_validity */
extern void T79f383(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_create_supplier */
extern void T79f382(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_create_expression */
extern void T74f1215(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_expression */
extern void T74f1222(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_extended_attribute */
extern void T1300f13(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_extended_attribute */
extern void T1299f17(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_extended_attribute */
extern void T369f83(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_extended_attribute_validity */
extern void T369f95(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vevi0e_error */
extern void T36f269(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0e */
extern T0* T531c788(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vevi0e_error */
extern void T77f270(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_COMPOUND.has_non_null_instruction */
extern T1 T331f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_extended_attribute */
extern void T79f187(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_extended_attribute_validity */
extern void T79f192(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_extended_attribute */
extern void T74f1216(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_extended_attribute */
extern void T74f1223(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute */
extern void T74f1226(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_wrapper */
extern void T74f1227(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T291f26(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_name */
extern void T291f25(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_constant_attribute */
extern void T1300f14(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_constant_attribute */
extern void T1299f18(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_constant_attribute */
extern void T369f84(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_constant_attribute_validity */
extern void T369f96(GE_context* ac, T0* C, T0* a1);
extern T1 T369f96ot1(T0* a1, T0** a2);
extern T1 T369f96ot2(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vqmc5a_error */
extern void T36f275(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc5a */
extern T0* T531c794(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T36f67(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc5a_error */
extern void T77f276(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T77f68(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc4a_error */
extern void T36f274(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc4a */
extern T0* T531c793(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T36f66(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc4a_error */
extern void T77f275(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T77f67(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc3a_error */
extern void T36f273(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc3a */
extern T0* T531c792(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T36f65(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3a_error */
extern void T77f274(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T77f66(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc3b_error */
extern void T36f272(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vqmc3b */
extern T0* T531c791(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vqmc3b_error */
extern void T77f273(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vqmc2a_error */
extern void T36f271(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc2a */
extern T0* T531c790(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T36f64(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc2a_error */
extern void T77f272(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T77f65(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc1a_error */
extern void T36f270(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc1a */
extern T0* T531c789(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T36f63(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc1a_error */
extern void T77f271(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T77f64(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_constant_attribute */
extern void T79f188(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_constant_attribute_validity */
extern void T79f193(GE_context* ac, T0* C, T0* a1);
extern T1 T79f193ot1(T0* a1, T0** a2);
extern T1 T79f193ot2(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_constant_attribute */
extern void T74f1217(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_constant_attribute */
extern void T74f1224(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unique_attribute */
extern void T1300f15(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_unique_attribute */
extern void T1299f19(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unique_attribute */
extern void T369f85(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unique_attribute_validity */
extern void T369f97(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqui0a_error */
extern void T36f276(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqui0a */
extern T0* T531c795(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqui_error */
extern T1 T36f68(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqui0a_error */
extern void T77f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqui_error */
extern T1 T77f69(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unique_attribute */
extern void T79f189(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unique_attribute_validity */
extern void T79f194(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_unique_attribute */
extern void T74f1218(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unique_attribute */
extern void T74f1225(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_attribute */
extern void T1300f16(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_attribute */
extern void T1299f20(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_attribute */
extern void T369f86(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_attribute_validity */
extern void T369f98(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_attribute */
extern void T79f190(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_attribute_validity */
extern void T79f195(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_attribute */
extern void T74f1219(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_current */
extern void T1329f6(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_current */
extern void T1328f17(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_current */
extern void T1327f14(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_current */
extern void T1326f6(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_current */
extern void T1305f14(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1304f22(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_current */
extern void T1303f15(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_current */
extern void T1298f12(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_current */
extern void T1297f14(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_current */
extern void T1296f29(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1295f21(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_current */
extern void T1294f15(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_current */
extern void T1293f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_current */
extern void T1282f17(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_current */
extern void T1281f15(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_current */
extern void T372f35(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_current_validity */
extern void T372f39(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_n */
extern void T1329f16(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_n */
extern void T1328f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_n */
extern void T1327f15(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_n */
extern void T1326f16(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_n */
extern void T1305f15(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_n */
extern void T1304f23(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_n */
extern void T1303f16(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_n */
extern void T1298f21(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_n */
extern void T1297f15(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_n */
extern void T1296f30(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_n */
extern void T1295f22(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_n */
extern void T1294f16(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_n */
extern void T1293f22(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_n */
extern void T1282f29(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_n */
extern void T1281f16(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_n */
extern void T372f36(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter */
extern void T1329f17(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter */
extern void T1328f19(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter */
extern void T1327f16(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter */
extern void T1326f17(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter */
extern void T1305f18(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1304f24(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter */
extern void T1303f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter */
extern void T1298f22(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter */
extern void T1297f20(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter */
extern void T1296f31(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1295f23(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter */
extern void T1294f19(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter */
extern void T1293f23(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter */
extern void T1282f30(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter */
extern void T1281f21(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter */
extern void T372f37(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_constrained_formal_parameter */
extern void T1329f18(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_constrained_formal_parameter */
extern void T1328f20(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_constrained_formal_parameter */
extern void T1327f17(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_constrained_formal_parameter */
extern void T1326f18(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_constrained_formal_parameter */
extern void T1305f19(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1304f25(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_constrained_formal_parameter */
extern void T1303f22(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_constrained_formal_parameter */
extern void T1298f23(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_constrained_formal_parameter */
extern void T1297f21(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_constrained_formal_parameter */
extern void T1296f32(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1295f24(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_constrained_formal_parameter */
extern void T1294f20(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_constrained_formal_parameter */
extern void T1293f24(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_constrained_formal_parameter */
extern void T1282f31(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_constrained_formal_parameter */
extern void T1281f22(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T372f38(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_cluster */
extern void T439f1952(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_cluster */
extern void T439f2109(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PARSER.parse_cluster */
extern T0* T439f2109ac1(T0* a1);
/* Creation of agent #2 in feature ET_EIFFEL_PARSER.parse_cluster */
extern T0* T439f2109ac2(T0* a1);
/* ET_CLASS.is_in_group */
extern T1 T82f134(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_clusters */
extern void T439f2114(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.build_dependant_constraint */
extern void T439f2113(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make */
extern T0* T856c17(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].set_key_equality_tester */
extern void T1461f35(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_equality_tester */
extern T0* T856f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_map */
extern T0* T1461c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_with_equality_testers */
extern void T1461f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_sparse_container */
extern void T1461f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].set_internal_cursor */
extern void T1461f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].unset_found_item */
extern void T1461f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_slots */
extern void T1461f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].new_modulus */
extern T6 T1461f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_clashes */
extern void T1461f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_key_storage */
extern void T1461f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_item_storage */
extern void T1461f51(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].make */
extern T0* T1643f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].make_empty */
extern T0* T1640c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].default_create */
extern T0* T1643c2(GE_context* ac);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make_with_pathnames */
extern T0* T856c16(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].put_last */
extern void T1461f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_put */
extern void T1461f44(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_put */
extern void T1461f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_put */
extern void T1461f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_item */
extern T6 T1461f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].compress */
extern void T1461f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].hash_position */
extern T6 T1461f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_wipe_out */
extern void T1461f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_wipe_out */
extern void T1461f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_keep_head */
extern void T1461f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_keep_head */
extern void T1461f47(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].keep_head */
extern void T1640f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].set_count */
extern void T1640f8(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].move_all_cursors */
extern void T1461f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_put */
extern void T1461f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].force */
extern void T1643f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_WILDCARD].fill_with */
extern void T1640f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_WILDCARD].extend */
extern void T1640f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].search_position */
extern void T1461f39(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.compile */
extern T0* T1460c16(GE_context* ac, T0* a1, T1 a2);
/* LX_FULL_DFA.make */
extern T0* T1638c37(GE_context* ac, T0* a1);
/* LX_FULL_DFA.build */
extern void T1638f40(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_accept_table */
extern void T1638f46(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].first */
extern T0* T1727f6(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_nxt_table */
extern void T1638f45(GE_context* ac, T0* C);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].target */
extern T0* T1756f6(GE_context* ac, T0* C, T6 a1);
/* ARRAY [detachable LX_DFA_STATE].item */
extern T0* T1844f4(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.is_accepting */
extern T1 T1750f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].is_empty */
extern T1 T1727f11(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_transitions */
extern void T1638f44(GE_context* ac, T0* C, T0* a1);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].set_target */
extern void T1756f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [detachable LX_DFA_STATE].put */
extern void T1844f7(GE_context* ac, T0* C, T0* a1, T6 a2);
/* LX_SYMBOL_PARTITIONS.previous_symbol */
extern T6 T1753f4(GE_context* ac, T0* C, T6 a1);
/* LX_FULL_DFA.new_state */
extern T0* T1638f36(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_STATE.set_id */
extern void T1750f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].put_last */
extern void T1752f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].force */
extern void T1841f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_DFA_STATE].fill_with */
extern void T1840f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_DFA_STATE].extend */
extern void T1840f9(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_STATE.is_equal */
extern T1 T1750f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].is_equal */
extern T1 T1751f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].any_ */
extern T0* T1751f17(GE_context* ac, T0* C);
/* LX_DFA_STATE.any_ */
extern T0* T1750f14(GE_context* ac, T0* C);
/* LX_DFA_STATE.new_state */
extern T0* T1750f9(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.make */
extern T0* T1750c16(GE_context* ac, T0* a1, T6 a2, T6 a3);
extern T1 T1750f16ot1(T0* a1, T0** a2);
/* LX_RULE.set_useful */
extern void T1738f22(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [LX_RULE].sort */
extern void T1727f17(GE_context* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_RULE].sort */
extern void T1833f3(GE_context* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_RULE].sort_with_comparator */
extern void T1833f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_BUBBLE_SORTER [LX_RULE].subsort_with_comparator */
extern void T1833f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [LX_RULE].replace */
extern void T1727f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].less_than */
extern T1 T1866f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* LX_RULE.is_less */
extern T1 T1738f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].item */
extern T0* T1727f10(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.rule_sorter */
extern unsigned char ge20os37025;
extern T0* ge20ov37025;
extern T0* T1750f7(GE_context* ac, T0* C);
/* DS_BUBBLE_SORTER [LX_RULE].make */
extern T0* T1833c2(GE_context* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].make */
extern T0* T1866c2(GE_context* ac);
/* DS_ARRAYED_LIST [LX_NFA_STATE].sort */
extern void T1751f25(GE_context* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].sort */
extern void T1831f3(GE_context* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].sort_with_comparator */
extern void T1831f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].subsort_with_comparator */
extern void T1831f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [LX_NFA_STATE].replace */
extern void T1751f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].less_than */
extern T1 T1869f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* LX_NFA_STATE.is_less */
extern T1 T1759f9(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_STATE.bubble_sorter */
extern unsigned char ge20os37024;
extern T0* ge20ov37024;
extern T0* T1750f8(GE_context* ac, T0* C);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].make */
extern T0* T1831c2(GE_context* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].make */
extern T0* T1869c2(GE_context* ac);
/* DS_ARRAYED_LIST [LX_NFA_STATE].last */
extern T0* T1751f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].is_empty */
extern T1 T1751f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].force_last */
extern void T1727f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].force */
extern void T1813f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_RULE].fill_with */
extern void T1748f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_RULE].extend */
extern void T1748f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].resize */
extern void T1727f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].aliased_resized_area */
extern T0* T1813f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_RULE].aliased_resized_area */
extern T0* T1748f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].new_capacity */
extern T6 T1727f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].extendible */
extern T1 T1727f8(GE_context* ac, T0* C, T6 a1);
/* LX_NFA_STATE.is_accepting_head */
extern T1 T1759f6(GE_context* ac, T0* C);
/* LX_NFA_STATE.has_transition */
extern T1 T1759f8(GE_context* ac, T0* C);
/* LX_NFA_STATE.is_accepting */
extern T1 T1759f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].has */
extern T1 T1751f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].force_last */
extern void T1751f23(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].force */
extern void T1837f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_NFA_STATE].fill_with */
extern void T1835f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_NFA_STATE].extend */
extern void T1835f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].resize */
extern void T1751f28(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].aliased_resized_area */
extern T0* T1837f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_NFA_STATE].aliased_resized_area */
extern T0* T1835f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].new_capacity */
extern T6 T1751f12(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].extendible */
extern T1 T1751f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].make */
extern T0* T1727c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].set_internal_cursor */
extern void T1727f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].new_cursor */
extern T0* T1727f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_RULE].make */
extern T0* T1814c4(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].make */
extern T0* T1813f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_RULE].make_empty */
extern void T1748f7(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_RULE].make_empty */
extern T0* T1748c7(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].default_create */
extern T0* T1813c3(GE_context* ac);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].make */
extern T0* T1756c7(GE_context* ac, T6 a1, T6 a2);
/* KL_ARRAY_ROUTINES [detachable LX_DFA_STATE].default_create */
extern T0* T1845c1(GE_context* ac);
/* ARRAY [detachable LX_DFA_STATE].make_filled */
extern T0* T1844c5(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable LX_DFA_STATE].make_filled_area */
extern void T1844f6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_DFA_STATE].make_filled */
extern T0* T1840c8(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [LX_DFA_STATE].make_empty */
extern void T1840f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_DFA_STATE].make_empty */
extern T0* T1840c5(GE_context* ac, T6 a1);
/* LX_DFA_STATE.maximum_symbol */
extern T6 T1750f13(GE_context* ac, T0* C);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].upper */
extern T6 T1756f5(GE_context* ac, T0* C);
/* LX_DFA_STATE.minimum_symbol */
extern T6 T1750f12(GE_context* ac, T0* C);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].lower */
extern T6 T1756f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put_last */
extern void T1751f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].item */
extern T0* T1751f13(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].make */
extern T0* T1751c19(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].set_internal_cursor */
extern void T1751f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].new_cursor */
extern T0* T1751f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].make */
extern T0* T1838c9(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].make */
extern T0* T1837f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_NFA_STATE].make_empty */
extern T0* T1835c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].default_create */
extern T0* T1837c3(GE_context* ac);
/* LX_SYMBOL_PARTITIONS.is_representative */
extern T1 T1753f8(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.partition */
extern void T1750f18(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T1753f10(GE_context* ac, T0* C);
/* ARRAY [BOOLEAN].clear_all */
extern void T718f8(GE_context* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T1753f10p1(GE_context* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].put_left */
extern void T1826f9(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].attach_right */
extern void T1826f10(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].put */
extern void T1826f5(GE_context* ac, T0* C, T6 a1);
/* LX_FULL_DFA.resize */
extern void T1638f49(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].resize */
extern void T1752f10(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].aliased_resized_area */
extern T0* T1841f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_DFA_STATE].aliased_resized_area */
extern T0* T1840f4(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.capacity */
extern T6 T1753f5(GE_context* ac, T0* C);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].count */
extern T6 T1828f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_DFA_STATE].item */
extern T0* T1752f7(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.make */
extern T0* T1753c9(GE_context* ac, T6 a1, T6 a2);
/* LX_SYMBOL_PARTITIONS.make */
extern void T1753f9p1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].put */
extern void T1828f7(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].make_filled */
extern T0* T1828c6(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].make_filled_area */
extern void T1828f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].make_filled */
extern T0* T1827c4(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].fill_with */
extern void T1827f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].extend */
extern void T1827f8(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].make_empty */
extern void T1827f6(GE_context* ac, T0* C, T6 a1);
/* DS_BILINKABLE [INTEGER_32].make */
extern T0* T1826c4(GE_context* ac, T6 a1);
/* LX_FULL_DFA.put_eob_state */
extern void T1638f39(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].force_first */
extern void T1727f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].put */
extern void T1727f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [LX_RULE].move_cursors_right */
extern void T1727f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_RULE].set_position */
extern void T1814f5(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].move_right */
extern void T1727f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [LX_RULE].put_last */
extern void T1727f19(GE_context* ac, T0* C, T0* a1);
/* LX_RULE.make_default */
extern T0* T1738c14(GE_context* ac, T6 a1);
/* LX_RULE.dummy_action */
extern unsigned char ge100os37452;
extern T0* ge100ov37452;
extern T0* T1738f11(GE_context* ac, T0* C);
/* LX_ACTION.make */
extern T0* T1830c2(GE_context* ac, T0* a1);
/* LX_RULE.dummy_pattern */
extern unsigned char ge100os37451;
extern T0* ge100ov37451;
extern T0* T1738f12(GE_context* ac, T0* C);
/* LX_NFA.make_epsilon */
extern T0* T1735c12(GE_context* ac, T1 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put_first */
extern void T1751f21(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put */
extern void T1751f27(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [LX_NFA_STATE].move_cursors_right */
extern void T1751f31(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_position */
extern void T1838f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].move_right */
extern void T1751f30(GE_context* ac, T0* C, T6 a1, T6 a2);
/* LX_NFA_STATE.set_transition */
extern void T1759f11(GE_context* ac, T0* C, T0* a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].make */
extern T0* T1823c3(GE_context* ac, T0* a1);
/* LX_NFA_STATE.make */
extern T0* T1759c10(GE_context* ac, T1 a1);
/* LX_FULL_DFA.initialize */
extern void T1638f38(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_DFA.initialize_dfa */
extern void T1638f43(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* LX_FULL_DFA.put_start_condition */
extern void T1638f48(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.start_state */
extern T0* T1735f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].first */
extern T0* T1751f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA].item */
extern T0* T1757f7(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.item */
extern T0* T1728f9(GE_context* ac, T0* C, T6 a1);
/* LX_FULL_DFA.set_nfa_state_ids */
extern void T1638f47(GE_context* ac, T0* C, T0* a1);
/* LX_NFA_STATE.set_id */
extern void T1759f14(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].force */
extern void T1758f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_put */
extern void T1758f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_put */
extern void T1758f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_put */
extern void T1758f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_item */
extern T6 T1758f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_item */
extern T6 T1758f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].hash_position */
extern T6 T1758f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].resize */
extern void T1758f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_resize */
extern void T1758f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].special_integer_ */
extern T0* T1758f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_resize */
extern void T1758f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_resize */
extern void T1758f46(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].aliased_resized_area */
extern T0* T1734f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_NFA].aliased_resized_area */
extern T0* T1736f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_item */
extern T6 T1758f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_resize */
extern void T1758f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_modulus */
extern T6 T1758f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_capacity */
extern T6 T1758f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_put */
extern void T1758f39(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_NFA].force */
extern void T1734f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_NFA].fill_with */
extern void T1736f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_NFA].extend */
extern void T1736f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].search_position */
extern void T1758f36(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [INTEGER_32].test */
extern T1 T610f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].unset_found_item */
extern void T1758f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item */
extern T0* T1758f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_item */
extern T0* T1758f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].has */
extern T1 T1758f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make */
extern T0* T1758c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_with_equality_testers */
extern void T1758f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_sparse_container */
extern void T1758f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].set_internal_cursor */
extern void T1758f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_cursor */
extern T0* T1758f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32].make */
extern T0* T1848c4(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_slots */
extern void T1758f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_clashes */
extern void T1758f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_key_storage */
extern void T1758f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_item_storage */
extern void T1758f49(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].make */
extern T0* T1734f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_NFA].make_empty */
extern T0* T1736c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].default_create */
extern T0* T1734c3(GE_context* ac);
/* detachable KL_EQUALITY_TESTER [INTEGER_32].default_create */
extern T0* T610c2(GE_context* ac);
/* DS_ARRAYED_LIST [LX_DFA_STATE].make */
extern T0* T1752c8(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].set_internal_cursor */
extern void T1752f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].new_cursor */
extern T0* T1752f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE].make */
extern T0* T1842c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].make */
extern T0* T1841f1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].default_create */
extern T0* T1841c3(GE_context* ac);
/* LX_EQUIVALENCE_CLASSES.to_array */
extern T0* T1737f6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.lower */
extern T6 T1737f5(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.upper */
extern T6 T1737f4(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.built */
extern T1 T1737f3(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_eof_rules */
extern void T1638f42(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ARRAY [LX_RULE].put */
extern void T1749f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [LX_RULE].make_filled */
extern T0* T1749c4(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [LX_RULE].make_filled_area */
extern void T1749f6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_RULE].make_filled */
extern T0* T1748c5(GE_context* ac, T0* a1, T6 a2);
/* LX_FULL_DFA.build_rules */
extern void T1638f41(GE_context* ac, T0* C, T0* a1);
/* KL_ARRAY_ROUTINES [LX_RULE].make_empty_with_lower */
extern T0* T1754f1(GE_context* ac, T0* C, T6 a1);
/* ARRAY [LX_RULE].make_from_array */
extern T0* T1749c8(GE_context* ac, T0* a1);
/* ARRAY [LX_RULE].set_area */
extern void T1749f10(GE_context* ac, T0* C, T0* a1);
/* KL_ARRAY [LX_RULE].new_rebase */
extern void T1843f5(GE_context* ac, T0* C, T6 a1);
/* KL_ARRAY [LX_RULE].make_empty */
extern T0* T1843c4(GE_context* ac);
/* KL_ARRAY [LX_RULE].make_empty_area */
extern void T1843f6(GE_context* ac, T0* C, T6 a1);
/* ARRAY [LX_RULE].make_empty */
extern T0* T1749c7(GE_context* ac);
/* ARRAY [LX_RULE].make_empty_area */
extern void T1749f9(GE_context* ac, T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [LX_RULE].default_create */
extern T0* T1754c2(GE_context* ac);
/* LX_START_CONDITIONS.names */
extern T0* T1728f7(GE_context* ac, T0* C);
/* LX_START_CONDITIONS.first */
extern T0* T1728f6(GE_context* ac, T0* C);
/* KL_ARRAY_ROUTINES [STRING_8].make_empty_with_lower */
extern T0* T1815f1(GE_context* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].make_from_array */
extern T0* T142c18(GE_context* ac, T0* a1);
/* KL_ARRAY [STRING_8].new_rebase */
extern void T1877f5(GE_context* ac, T0* C, T6 a1);
/* KL_ARRAY [STRING_8].make_empty */
extern T0* T1877c4(GE_context* ac);
/* KL_ARRAY [STRING_8].make_empty_area */
extern void T1877f6(GE_context* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].make_empty */
extern T0* T142c17(GE_context* ac);
/* LX_START_CONDITIONS.string_array_routines */
extern unsigned char ge213os4328;
extern T0* ge213ov4328;
extern T0* T1728f11(GE_context* ac, T0* C);
/* KL_ARRAY_ROUTINES [STRING_8].default_create */
extern T0* T1815c2(GE_context* ac);
/* LX_WILDCARD_PARSER.parse_string */
extern void T1636f222(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.parse */
extern void T1636f226(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_pop_last_value */
extern void T1636f239(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_push_error_value */
extern void T1636f238(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_do_action */
extern void T1636f237(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_character_to_string */
extern T0* T1636f172(GE_context* ac, T0* C, T6 a1, T0* a2);
/* LX_WILDCARD_PARSER.new_symbol_nfa */
extern T0* T1636f217(GE_context* ac, T0* C, T6 a1);
/* LX_NFA.make_symbol */
extern T0* T1735c13(GE_context* ac, T6 a1, T1 a2);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].make */
extern T0* T1825c4(GE_context* ac, T6 a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].force_new */
extern void T1731f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].key_storage_put */
extern void T1731f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].item_storage_put */
extern void T1731f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].slots_put */
extern void T1731f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].clashes_put */
extern void T1731f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].slots_item */
extern T6 T1731f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].hash_position */
extern T6 T1731f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].clashes_item */
extern T6 T1731f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].resize */
extern void T1731f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].clashes_resize */
extern void T1731f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].special_integer_ */
extern T0* T1731f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].key_storage_resize */
extern void T1731f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].item_storage_resize */
extern void T1731f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].key_storage_item */
extern T0* T1731f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].slots_resize */
extern void T1731f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].new_modulus */
extern T6 T1731f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].new_capacity */
extern T6 T1731f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].unset_found_item */
extern void T1731f47(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.add */
extern void T1737f11(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.put */
extern void T1730f19(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.force_last */
extern void T1730f22(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.resize */
extern void T1730f23(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.new_capacity */
extern T6 T1730f13(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.extendible */
extern T1 T1730f11(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.last */
extern T6 T1730f12(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.is_empty */
extern T1 T1730f10(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.has */
extern T1 T1730f9(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.arrayed_has */
extern T1 T1730f15(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.make */
extern T0* T1730c18(GE_context* ac, T6 a1);
/* LX_SYMBOL_CLASS.set_internal_cursor */
extern void T1730f21(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.new_cursor */
extern T0* T1730f16(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].found_item */
extern T0* T1731f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].item_storage_item */
extern T0* T1731f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].found */
extern T1 T1731f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].search */
extern void T1731f43(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].search_position */
extern void T1731f45(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_epsilon_nfa */
extern T0* T1636f171(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.append_character_set_to_character_class */
extern T0* T1636f170(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.report_negative_range_in_character_class_error */
extern void T1636f272(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.make */
extern T0* T1808c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.filename */
extern T0* T1636f190(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T1732f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T1733f4(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_character_to_character_class */
extern T0* T1636f169(GE_context* ac, T0* C, T6 a1, T0* a2);
/* LX_WILDCARD_PARSER.new_character_class */
extern T0* T1636f168(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.set_negated */
extern void T1730f20(GE_context* ac, T0* C, T1 a1);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].force */
extern void T1732f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_SYMBOL_CLASS].fill_with */
extern void T1733f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_SYMBOL_CLASS].extend */
extern void T1733f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].force */
extern void T1731f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* LX_WILDCARD_PARSER.new_nfa_from_character_class */
extern T0* T1636f167(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.sort */
extern void T1730f24(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.arrayed_sort */
extern void T1730f25(GE_context* ac, T0* C, T0* a1);
/* DS_SHELL_SORTER [INTEGER_32].sort */
extern void T1865f3(GE_context* ac, T0* C, T0* a1);
/* DS_SHELL_SORTER [INTEGER_32].sort_with_comparator */
extern void T1865f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_SHELL_SORTER [INTEGER_32].subsort_with_comparator */
extern void T1865f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* LX_SYMBOL_CLASS.replace */
extern void T1730f27(GE_context* ac, T0* C, T6 a1, T6 a2);
/* LX_SYMBOL_CLASS.sorter */
extern unsigned char ge25os37486;
extern T0* ge25ov37486;
extern T0* T1730f17(GE_context* ac, T0* C);
/* DS_SHELL_SORTER [INTEGER_32].make */
extern T0* T1865c2(GE_context* ac, T0* a1);
/* LX_WILDCARD_PARSER.new_symbol_class_nfa */
extern T0* T1636f165(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.make_symbol_class */
extern T0* T1735c6(GE_context* ac, T0* a1, T1 a2);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].make */
extern T0* T1821c4(GE_context* ac, T0* a1, T0* a2);
/* LX_WILDCARD_PARSER.question_character_class */
extern T0* T1636f164(GE_context* ac, T0* C);
/* LX_NFA.build_optional */
extern void T1735f11(GE_context* ac, T0* C);
/* LX_NFA_STATE.set_epsilon_transition */
extern void T1759f12(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.final_state */
extern T0* T1735f5(GE_context* ac, T0* C);
/* LX_NFA.build_positive_closure */
extern void T1735f10(GE_context* ac, T0* C);
/* LX_NFA.build_closure */
extern void T1735f9(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.new_nfa_from_character */
extern T0* T1636f163(GE_context* ac, T0* C, T6 a1);
/* LX_NFA.build_concatenation */
extern void T1735f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].append_last */
extern void T1751f24(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].extend_last */
extern void T1751f29(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].forth */
extern void T1838f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_forth */
extern void T1751f33(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].add_traversing_cursor */
extern void T1751f34(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_next_cursor */
extern void T1838f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].remove_traversing_cursor */
extern void T1751f35(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].item */
extern T0* T1838f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_item */
extern T0* T1751f15(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].after */
extern T1 T1838f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].start */
extern void T1838f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_start */
extern void T1751f32(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_after */
extern void T1838f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].off */
extern T1 T1838f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].before */
extern T1 T1838f8(GE_context* ac, T0* C);
/* LX_NFA.build_union */
extern void T1735f7(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.report_unrecognized_rule_error */
extern void T1636f252(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.make */
extern T0* T1740c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_rule */
extern void T1636f251(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.add_nfa_to_all */
extern void T1728f13(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITION.put_nfa */
extern void T1755f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].force_last */
extern void T1757f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].resize */
extern void T1757f13(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].new_capacity */
extern T6 T1757f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].extendible */
extern T1 T1757f8(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.add_nfa_to_non_exclusive */
extern void T1728f15(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.is_empty */
extern T1 T1728f8(GE_context* ac, T0* C);
/* LX_DESCRIPTION.set_variable_trail_context */
extern void T1637f35(GE_context* ac, T0* C, T1 a1);
/* LX_RULE.set_column_count */
extern void T1738f21(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_line_count */
extern void T1738f20(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_trail_count */
extern void T1738f19(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_head_count */
extern void T1738f18(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_trail_context */
extern void T1738f17(GE_context* ac, T0* C, T1 a1);
/* LX_RULE.set_line_nb */
extern void T1738f16(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_pattern */
extern void T1738f15(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.set_accepted_rule */
extern void T1735f14(GE_context* ac, T0* C, T0* a1);
/* LX_NFA_STATE.set_accepted_rule */
extern void T1759f13(GE_context* ac, T0* C, T0* a1);
/* LX_DESCRIPTION.create_equiv_classes */
extern void T1637f34(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.make */
extern T0* T1737c9(GE_context* ac, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.initialize */
extern void T1737f12(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.check_options */
extern void T1636f250(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.report_full_and_variable_trailing_context_error */
extern void T1636f265(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.make */
extern T0* T1746c8(GE_context* ac);
/* LX_WILDCARD_PARSER.report_full_and_reject_error */
extern void T1636f264(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.make */
extern T0* T1745c8(GE_context* ac);
/* LX_WILDCARD_PARSER.report_full_and_meta_equiv_classes_error */
extern void T1636f263(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.make */
extern T0* T1744c8(GE_context* ac);
/* LX_WILDCARD_PARSER.build_equiv_classes */
extern void T1636f249(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].forth */
extern void T1739f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_forth */
extern void T1731f64(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].add_traversing_cursor */
extern void T1731f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].set_next_cursor */
extern void T1739f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].set_position */
extern void T1739f13(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].remove_traversing_cursor */
extern void T1731f65(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].set_after */
extern void T1739f12(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.convert_to_equivalence */
extern void T1730f26(GE_context* ac, T0* C, T0* a1);
/* LX_EQUIVALENCE_CLASSES.equivalence_class */
extern T6 T1737f8(GE_context* ac, T0* C, T6 a1);
/* LX_EQUIVALENCE_CLASSES.is_representative */
extern T1 T1737f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].item */
extern T0* T1739f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_item */
extern T0* T1731f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].after */
extern T1 T1739f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].start */
extern void T1739f10(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_start */
extern void T1731f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_off */
extern T1 T1731f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].off */
extern T1 T1739f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].is_empty */
extern T1 T1731f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].new_cursor */
extern T0* T1731f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].make */
extern T0* T1739c9(GE_context* ac, T0* a1);
/* LX_EQUIVALENCE_CLASSES.build */
extern void T1737f10(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_push_last_value */
extern void T1636f236(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.accept */
extern void T1636f235(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_do_error_action */
extern void T1636f233(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_error */
extern void T1636f248(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.report_eof_expected_error */
extern void T1636f247(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.read_token */
extern void T1636f232(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_execute_action */
extern void T1636f246(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_bad_character_error */
extern void T1636f262(GE_context* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.make */
extern T0* T1743c8(GE_context* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.report_bad_character_class_error */
extern void T1636f261(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.make */
extern T0* T1742c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.start_condition */
extern T6 T1636f185(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.process_escaped_character */
extern void T1636f260(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.text_count */
extern T6 T1636f206(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.report_missing_quote_error */
extern void T1636f259(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.make */
extern T0* T1741c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_character */
extern void T1636f258(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_character_out_of_range_error */
extern void T1636f268(GE_context* ac, T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.make */
extern T0* T1747c8(GE_context* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.text_item */
extern T2 T1636f182(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.less */
extern void T1636f257(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_set_line_column */
extern void T1636f267(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].item */
extern T0* T1731f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].has */
extern T1 T1731f27(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.text */
extern T0* T1636f176(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.set_start_condition */
extern void T1636f256(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_execute_eof_action */
extern void T1636f245(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.terminate */
extern void T1636f255(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.wrap */
extern T1 T1636f149(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_refill_input_buffer */
extern void T1636f244(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_set_content */
extern void T1636f242(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_null_trans_state */
extern T6 T1636f148(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_previous_state */
extern T6 T1636f147(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.fatal_error */
extern void T1636f243(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.std */
extern T0* T1636f173(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.special_integer_ */
extern T0* T1636f129(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_init_value_stacks */
extern void T1636f231(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_clear_all */
extern void T1636f240(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.clear_all */
extern void T1636f253(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.clear_stacks */
extern void T1636f266(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_clear_value_stacks */
extern void T1636f269(GE_context* ac, T0* C);
/* SPECIAL [LX_NFA].keep_head */
extern void T1736f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_NFA].set_count */
extern void T1736f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].keep_head */
extern void T1733f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].set_count */
extern void T1733f9(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.abort */
extern void T1636f234(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.set_input_buffer */
extern void T1636f225(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_load_input_buffer */
extern void T1636f230(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.new_string_buffer */
extern T0* T1636f131(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.make_from_description */
extern T0* T1636c221(GE_context* ac, T0* a1, T0* a2);
/* LX_ACTION_FACTORY.make */
extern T0* T1729c1(GE_context* ac);
/* LX_START_CONDITIONS.make */
extern void T1728f12(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.make */
extern T0* T1728c12(GE_context* ac, T6 a1);
/* LX_START_CONDITIONS.set_internal_cursor */
extern void T1728f16(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.new_cursor */
extern T0* T1728f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION].make */
extern T0* T1818c4(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].make */
extern T0* T1817f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_START_CONDITION].make_empty */
extern T0* T1816c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].default_create */
extern T0* T1817c2(GE_context* ac);
/* LX_WILDCARD_PARSER.make_parser_skeleton */
extern void T1636f224(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_build_parser_tables */
extern void T1636f229(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yycheck_template */
extern unsigned char ge85os36521;
extern T0* ge85ov36521;
extern T0* T1636f160(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yyfixed_array */
extern T0* T1636f211(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yytable_template */
extern unsigned char ge85os36520;
extern T0* ge85ov36520;
extern T0* T1636f158(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yypgoto_template */
extern unsigned char ge85os36519;
extern T0* ge85ov36519;
extern T0* T1636f157(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yypact_template */
extern unsigned char ge85os36518;
extern T0* ge85ov36518;
extern T0* T1636f156(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yydefgoto_template */
extern unsigned char ge85os36517;
extern T0* ge85ov36517;
extern T0* T1636f155(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yydefact_template */
extern unsigned char ge85os36516;
extern T0* ge85ov36516;
extern T0* T1636f154(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytypes2_template */
extern unsigned char ge85os36515;
extern T0* ge85ov36515;
extern T0* T1636f153(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytypes1_template */
extern unsigned char ge85os36514;
extern T0* ge85ov36514;
extern T0* T1636f144(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yyr1_template */
extern unsigned char ge85os36513;
extern T0* ge85ov36513;
extern T0* T1636f142(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template */
extern unsigned char ge85os36510;
extern T0* ge85ov36510;
extern T0* T1636f140(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template_2 */
extern void T1636f271(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yyarray_subcopy */
extern void T1636f275(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* LX_WILDCARD_PARSER.integer_array_ */
extern T0* T1636f220(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template_1 */
extern void T1636f270(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_create_value_stacks */
extern void T1636f228(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].make */
extern T0* T1732f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].make_empty */
extern T0* T1733c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].default_create */
extern T0* T1732c3(GE_context* ac);
/* LX_WILDCARD_PARSER.make_lex_scanner_from_description */
extern void T1636f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].set_key_equality_tester */
extern void T1731f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_map */
extern T0* T1731c40(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_with_equality_testers */
extern void T1731f46(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_sparse_container */
extern void T1731f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].set_internal_cursor */
extern void T1731f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_slots */
extern void T1731f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_clashes */
extern void T1731f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_key_storage */
extern void T1731f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_item_storage */
extern void T1731f58(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.string_equality_tester */
extern T0* T1636f117(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.make_with_buffer */
extern void T1636f227(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_initialize */
extern void T1636f241(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_initialize */
extern void T1636f241p1(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_build_tables */
extern void T1636f254(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_accept_template */
extern unsigned char ge86os36695;
extern T0* ge86ov36695;
extern T0* T1636f198(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_fixed_array */
extern T0* T1636f219(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_meta_template */
extern unsigned char ge86os36694;
extern T0* ge86ov36694;
extern T0* T1636f197(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_ec_template */
extern unsigned char ge86os36691;
extern T0* ge86ov36691;
extern T0* T1636f196(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_ec_template_2 */
extern void T1636f274(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_array_subcopy */
extern void T1636f276(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* LX_WILDCARD_PARSER.yy_ec_template_1 */
extern void T1636f273(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_def_template */
extern unsigned char ge86os36690;
extern T0* ge86ov36690;
extern T0* T1636f195(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_base_template */
extern unsigned char ge86os36689;
extern T0* ge86ov36689;
extern T0* T1636f194(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_chk_template */
extern unsigned char ge86os36688;
extern T0* ge86ov36688;
extern T0* T1636f193(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_nxt_template */
extern unsigned char ge86os36687;
extern T0* ge86ov36687;
extern T0* T1636f192(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.empty_buffer */
extern T0* T1636f119(GE_context* ac, T0* C);
/* LX_DESCRIPTION.set_case_insensitive */
extern void T1637f33(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_full_table */
extern void T1637f32(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_meta_equiv_classes_used */
extern void T1637f31(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_equiv_classes_used */
extern void T1637f30(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.make */
extern T0* T1637c29(GE_context* ac);
/* LX_START_CONDITIONS.make_with_initial */
extern T0* T1728c14(GE_context* ac, T6 a1);
/* LX_START_CONDITIONS.put_first */
extern void T1728f17(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.put */
extern void T1728f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* LX_START_CONDITIONS.move_cursors_right */
extern void T1728f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION].set_position */
extern void T1818f5(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.move_right */
extern void T1728f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].force */
extern void T1817f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_START_CONDITION].fill_with */
extern void T1816f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_START_CONDITION].extend */
extern void T1816f7(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.put_last */
extern void T1728f19(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITION.make */
extern T0* T1755c6(GE_context* ac, T0* a1, T6 a2, T1 a3);
/* DS_ARRAYED_LIST [LX_NFA].make */
extern T0* T1757c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].set_internal_cursor */
extern void T1757f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].new_cursor */
extern T0* T1757f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA].make */
extern T0* T1846c3(GE_context* ac, T0* a1);
/* UT_ERROR_HANDLER.make_null */
extern T0* T32c12(GE_context* ac);
/* UT_ERROR_HANDLER.null_output_stream */
extern T0* T32f6(GE_context* ac, T0* C);
/* LX_DFA_WILDCARD.wipe_out */
extern void T1460f17(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.file_system */
extern T0* T856f9(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.unix_file_system */
extern T0* T856f12(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.windows_file_system */
extern T0* T856f11(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.execution_environment */
extern T0* T856f8(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.operating_system */
extern T0* T856f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].remove */
extern void T136f41(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].move_left */
extern void T136f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_cursors_left */
extern void T136f43(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].remove_last */
extern void T136f42(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].move_last_cursors_after */
extern void T136f45(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].make_from_linear */
extern T0* T136c40(GE_context* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.read_string */
extern void T29f61(GE_context* ac, T0* C, T6 a1);
/* STRING_8.set_internal_hash_code */
extern void T17f69(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_read_to_string */
extern T6 T29f35(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.file_gss */
extern T6 T29f38(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* SPECIAL [CHARACTER_8].item_address */
extern T14 T15f9(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_end_of_file */
extern T1 T29f25(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_feof */
extern T1 T29f31(GE_context* ac, T0* C, T14 a1);
/* ET_EIFFEL_PARSER.build_provider_constraint */
extern void T439f2112(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PARSER.build_provider_constraint */
extern T0* T439f2112ac1(T0* a1, T0* a2);
extern T1 T439f2112ot1(T0* a1);
/* ET_EIFFEL_PARSER.add_universe_full_name */
extern void T439f2115(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gcaaa_error */
extern void T36f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaaa */
extern T0* T1543c24(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T36f29(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcaaa_error */
extern void T77f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T77f30(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.directory_exists */
extern T1 T121f28(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.exists */
extern T1 T329f28(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.tmp_directory */
extern unsigned char ge247os12697;
extern T0* ge247ov12697;
extern T0* T121f29(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.directory_exists */
extern T1 T120f31(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_directory */
extern T0* T120f32(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_classes_do_if */
extern void T470f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_ignored_classes_do_if */
extern void T470f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_CLASS].do_if */
extern void T1316f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_non_override_classes_do_if */
extern void T470f86(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_override_classes_do_if */
extern void T470f85(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable DS_CELL [detachable ET_CLASS].put */
extern void T1416f3(GE_context* ac, T0* C, T0* a1);
/* detachable DS_CELL [detachable ET_CLASS].make */
extern T0* T1416c2(GE_context* ac, T0* a1);
/* KL_DIRECTORY.reset */
extern void T329f41(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.tmp_directory */
extern T0* T439f927(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.shared_directory */
extern unsigned char ge1025os24410;
extern T0* ge1025ov24410;
extern T0* T439f934(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.execution_environment */
extern T0* T439f926(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.process_cluster */
extern void T437f140(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster */
extern void T437f176(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T437f176ac1(T0* a1);
/* Creation of agent #2 in feature ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T437f176ac2(T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_clusters */
extern void T437f181(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.build_dependant_constraint */
extern void T437f180(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.build_provider_constraint */
extern void T437f179(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PREPARSER.build_provider_constraint */
extern T0* T437f179ac1(T0* a1, T0* a2);
extern T1 T437f179ot1(T0* a1);
/* ET_EIFFEL_PREPARSER.add_universe_full_name */
extern void T437f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.preparse_file */
extern void T437f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.reset */
extern void T437f184(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T437f184p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T437f184p0(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T437f184p2(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.current_position */
extern T0* T437f59(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.read_token */
extern void T437f183(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_action */
extern void T437f189(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.more */
extern void T437f195(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.is_verbatim_string_closer */
extern T1 T437f108(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.text_item */
extern T2 T437f131(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.report_syntax_error */
extern void T437f190(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.set_start_condition */
extern void T437f193(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.text_substring */
extern T0* T437f105(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.set_syntax_error */
extern void T437f192(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.text_count */
extern T6 T437f103(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_reference_keyword */
extern T1 T437f102(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_note_keyword */
extern T1 T437f101(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_detachable_keyword */
extern T1 T437f100(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_attribute_keyword */
extern T1 T437f99(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.ast_factory */
extern T0* T437f98(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_attached_keyword */
extern T1 T437f94(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_line_column */
extern void T437f194(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_eof_action */
extern void T437f188(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.terminate */
extern void T437f191(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.wrap */
extern T1 T437f86(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_refill_input_buffer */
extern void T437f187(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_content */
extern void T437f139(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_null_trans_state */
extern T6 T437f85(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_previous_state */
extern T6 T437f84(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.fatal_error */
extern void T437f186(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.special_integer_ */
extern T0* T437f60(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_load_input_buffer */
extern void T437f137(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.tmp_file */
extern T0* T437f56(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.shared_file */
extern T0* T437f125(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.preparse_class */
extern void T437f182(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PREPARSER.current_universe */
extern T0* T437f54(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.tmp_directory */
extern T0* T437f53(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.shared_directory */
extern unsigned char ge1027os22249;
extern T0* ge1027ov22249;
extern T0* T437f123(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.file_system */
extern T0* T437f52(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.unix_file_system */
extern T0* T437f122(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.windows_file_system */
extern T0* T437f121(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.operating_system */
extern T0* T437f120(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.execution_environment */
extern T0* T437f51(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_preparsing_status */
extern void T77f231(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_preparsing_status */
extern void T36f230(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.error_handler */
extern T0* T437f97(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.current_system */
extern T0* T437f96(GE_context* ac, T0* C);
/* ET_AST_NULL_PROCESSOR.process_cluster */
extern void T429f3(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_retry_instruction */
extern void T1300f26(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_retry_instruction */
extern void T369f352(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_retry_instruction_validity */
extern void T369f369(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vxrt0a_error */
extern void T36f486(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vxrt0a */
extern T0* T531c996(GE_context* ac, T0* a1, T0* a2);
/* ET_RETRY_INSTRUCTION.position */
extern T0* T940f9(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T36f160(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vxrt0a_error */
extern void T77f487(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T77f161(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_retry_instruction */
extern void T79f235(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_retry_instruction_validity */
extern void T79f257(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_retry_instruction */
extern void T74f1228(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_retry_instruction */
extern void T74f1244(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_across_instruction */
extern void T1300f27(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_across_instruction */
extern void T369f353(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_instruction_validity */
extern void T369f370(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_component_no_from_validity */
extern void T369f384(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_instruction */
extern void T79f236(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_instruction_validity */
extern void T79f258(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_component_no_from_validity */
extern void T79f290(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_across_instruction */
extern void T74f1229(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_instruction */
extern void T74f1245(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_check_instruction */
extern void T1300f28(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.assertion */
extern T0* T991f8(GE_context* ac, T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.item */
extern T0* T991f9(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_check_instruction */
extern void T369f354(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_check_instruction_validity */
extern void T369f371(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.set_code_unreachable */
extern void T385f15(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_check_instruction */
extern void T79f237(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T79f259(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T79f259p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_check_instruction */
extern void T74f1230(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_check_instruction */
extern void T74f1246(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_debug_instruction */
extern void T1300f29(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_debug_instruction */
extern void T369f355(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_debug_instruction_validity */
extern void T369f372(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_debug_instruction */
extern void T79f238(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T79f260(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T79f260p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_debug_instruction */
extern void T74f1231(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_debug_instruction */
extern void T74f1247(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_if_instruction */
extern void T1300f30(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part_list */
extern void T1300f92(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART.process */
extern void T1049f5(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part */
extern void T1300f106(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.item */
extern T0* T1052f4(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_if_instruction */
extern void T369f356(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_instruction_validity */
extern void T369f373(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_instruction */
extern void T79f239(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_instruction_validity */
extern void T79f261(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_if_instruction */
extern void T74f1232(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_instruction */
extern void T74f1248(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inspect_instruction */
extern void T1300f31(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part_list */
extern void T1300f93(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part */
extern void T1300f96(GE_context* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.item */
extern T0* T1187f4(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_inspect_instruction */
extern void T369f357(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_instruction_validity */
extern void T369f374(GE_context* ac, T0* C, T0* a1);
extern T1 T369f374ot1(T0* a1, T0** a2);
extern T1 T369f374ot2(T0* a1, T0** a2);
extern T1 T369f374ot3(T0* a1, T0** a2);
extern T1 T369f374ot4(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vomb2a_error */
extern void T36f489(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vomb2a */
extern T0* T531c999(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T36f162(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vomb2a_error */
extern void T77f490(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T77f163(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2b_error */
extern void T36f488(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vomb2b */
extern T0* T531c998(GE_context* ac, T0* a1, T0* a2, T0* a3);
extern T1 T531f998ot1(T0* a1, T0** a2);
extern T1 T531f998ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vomb2b_error */
extern void T77f489(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.choice_constant */
extern T0* T369f53(GE_context* ac, T0* C, T0* a1);
extern T1 T369f53ot1(T0* a1, T0** a2);
extern T1 T369f53ot2(T0* a1, T0** a2);
extern T1 T369f53ot3(T0* a1, T0** a2);
extern T1 T369f53ot4(T0* a1, T0** a2);
extern T1 T369f53ot5(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.integer_choice_constant */
extern unsigned char ge924os10731;
extern T0* ge924ov10731;
extern T0* T369f57(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.character_choice_constant */
extern unsigned char ge924os10730;
extern T0* ge924ov10730;
extern T0* T369f56(GE_context* ac, T0* C);
/* ET_CHOICE_LIST.choice */
extern T0* T1003f6(GE_context* ac, T0* C, T6 a1);
/* ET_CHOICE_LIST.item */
extern T0* T1003f7(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_vomb1a_error */
extern void T36f487(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vomb1a */
extern T0* T531c997(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T36f161(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vomb1a_error */
extern void T77f488(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T77f162(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_instruction */
extern void T79f240(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_instruction_validity */
extern void T79f262(GE_context* ac, T0* C, T0* a1);
extern T1 T79f262ot1(T0* a1, T0** a2);
extern T1 T79f262ot2(T0* a1, T0** a2);
extern T1 T79f262ot3(T0* a1, T0** a2);
extern T1 T79f262ot4(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.choice_constant */
extern T0* T79f104(GE_context* ac, T0* C, T0* a1);
extern T1 T79f104ot1(T0* a1, T0** a2);
extern T1 T79f104ot2(T0* a1, T0** a2);
extern T1 T79f104ot3(T0* a1, T0** a2);
extern T1 T79f104ot4(T0* a1, T0** a2);
extern T1 T79f104ot5(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.integer_choice_constant */
extern T0* T79f117(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.character_choice_constant */
extern T0* T79f116(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_inspect_instruction */
extern void T74f1233(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_instruction */
extern void T74f1249(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1249ot1(T0* a1, T0** a2);
extern T1 T74f1249ot2(T0* a1, T0** a2);
extern T1 T74f1249ot3(T0* a1, T0** a2);
extern T1 T74f1249ot4(T0* a1, T0** a2);
extern T1 T74f1249ot5(T0* a1, T0** a2);
extern T1 T74f1249ot6(T0* a1, T0** a2);
extern T1 T74f1249ot7(T0* a1, T0** a2);
extern T1 T74f1249ot8(T0* a1, T0** a2);
extern T1 T74f1249ot9(T0* a1, T0** a2);
extern T1 T74f1249ot10(T0* a1, T0** a2);
extern T1 T74f1249ot11(T0* a1, T0** a2);
extern T1 T74f1249ot12(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_assigner_instruction */
extern void T1300f32(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assigner_instruction */
extern void T369f358(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assigner_instruction_validity */
extern void T369f375(GE_context* ac, T0* C, T0* a1);
extern T1 T369f375ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_tuple_label_setter */
extern void T369f386(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vbac1a_error */
extern void T36f491(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vbac1a */
extern T0* T531c1001(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T36f164(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac1a_error */
extern void T77f492(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T77f165(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_source */
extern void T1244f19(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac2a_error */
extern void T36f490(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vbac2a */
extern T0* T531c1000(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T36f163(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac2a_error */
extern void T77f491(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T77f164(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_name */
extern void T1244f18(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expressions_validity */
extern void T369f385(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assigner_instruction */
extern void T79f241(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assigner_instruction_validity */
extern void T79f263(GE_context* ac, T0* C, T0* a1);
extern T1 T79f263ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_setter */
extern void T79f295(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expressions_validity */
extern void T79f293(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_assigner_instruction */
extern void T74f1234(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assigner_instruction */
extern void T74f1250(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment */
extern void T1300f33(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment */
extern void T369f359(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_validity */
extern void T369f376(GE_context* ac, T0* C, T0* a1);
extern T1 T369f376ot1(T0* a1);
extern T1 T369f376ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_assignment */
extern void T369f388(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_name */
extern void T385f17(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_attribute */
extern void T385f23(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_formal_argument */
extern void T385f22(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_local_variable */
extern void T385f21(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_result */
extern void T385f16(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vjar0a_error */
extern void T36f492(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0a */
extern T0* T531c1002(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vjar_error */
extern T1 T36f165(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjar0a_error */
extern void T77f493(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vjar_error */
extern T1 T77f166(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT.set_source */
extern void T1245f8(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_writable_validity */
extern void T369f387(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T369f387ot1(T0* a1, T0** a2);
extern T1 T369f387ot2(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_veen0a_error */
extern void T36f499(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0a */
extern T0* T531c1009(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen_error */
extern T1 T36f168(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen0a_error */
extern void T77f500(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen_error */
extern T1 T77f169(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen0b_error */
extern void T36f498(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0b */
extern T0* T531c1008(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen0b_error */
extern void T77f499(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0b_error */
extern void T36f497(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0b */
extern T0* T531c1007(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T36f167(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjaw0b_error */
extern void T77f498(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T77f168(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjaw0c_error */
extern void T36f496(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0c */
extern T0* T531c1006(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0c_error */
extern void T77f497(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_attribute_assignment_target */
extern void T369f396(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vjaw0a_error */
extern void T36f495(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0a */
extern T0* T531c1005(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0a_error */
extern void T77f496(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_assignment_target */
extern void T369f395(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result_assignment_target */
extern void T369f394(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment */
extern void T79f242(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_validity */
extern void T79f264(GE_context* ac, T0* C, T0* a1);
extern T1 T79f264ot1(T0* a1);
extern T1 T79f264ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment */
extern void T79f298(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_dynamic_types */
extern void T79f380(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_writable_validity */
extern void T79f297(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f297ot1(T0* a1, T0** a2);
extern T1 T79f297ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_assignment_target */
extern void T79f379(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_assignment_target */
extern void T79f378(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_assignment_target */
extern void T79f377(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_assignment */
extern void T74f1235(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment */
extern void T74f1251(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_once */
extern T1 T309f45(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once */
extern T1 T247f43(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_result */
extern T1 T181f95(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_assignment_attempt */
extern void T1300f34(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment_attempt */
extern void T369f360(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_attempt_validity */
extern void T369f377(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment_attempt */
extern void T369f389(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjrv0a_error */
extern void T36f493(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vjrv0a */
extern T0* T531c1003(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T36f166(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjrv0a_error */
extern void T77f494(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T77f167(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference */
extern T1 T379f49(GE_context* ac, T0* C);
/* UT_VERSION.is_greater_equal */
extern T1 T78f6(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_5_7_0 */
extern unsigned char ge191os1989;
extern T0* ge191ov1989;
extern T0* T369f54(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment_attempt */
extern void T79f243(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_attempt_validity */
extern void T79f265(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment_attempt */
extern void T79f299(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_attempt_dynamic_types */
extern void T79f381(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_5_7_0 */
extern T0* T79f108(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_assignment_attempt */
extern void T74f1236(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment_attempt */
extern void T74f1252(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_instruction */
extern void T1300f35(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_loop_instruction */
extern void T369f361(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_instruction_validity */
extern void T369f378(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_loop_instruction */
extern void T79f244(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_instruction_validity */
extern void T79f266(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_loop_instruction */
extern void T74f1237(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_loop_instruction */
extern void T74f1253(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bang_instruction */
extern void T1300f36(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bang_instruction */
extern void T369f362(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bang_instruction_validity */
extern void T369f379(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_instruction_validity */
extern void T369f390(GE_context* ac, T0* C, T0* a1);
extern T1 T369f390ot1(T0* a1, T0** a2);
extern T1 T369f390ot2(T0* a1, T0** a2);
extern T1 T369f390ot3(T0* a1, T0** a2);
extern T1 T369f390ot4(T0* a1, T0** a2);
extern T1 T369f390ot5(T0* a1);
extern T1 T369f390ot6(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_creation_instruction */
extern void T369f397(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcc6e_error */
extern void T36f505(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6e */
extern T0* T531c1015(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc6e_error */
extern void T77f506(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc8b_error */
extern void T36f504(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8b */
extern T0* T531c1014(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vgcc8b_error */
extern void T77f505(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CREATE_INSTRUCTION.last_position */
extern T0* T1250f7(GE_context* ac, T0* C);
/* ET_CREATE_INSTRUCTION.last_leaf */
extern T0* T1250f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.last_leaf */
extern T0* T326f4(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T286f11(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.last_position */
extern T0* T1249f7(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.last_leaf */
extern T0* T1249f9(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vgcc1b_error */
extern void T36f503(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc1b */
extern T0* T531c1013(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.position */
extern T0* T1250f10(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.position */
extern T0* T1249f10(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc1b_error */
extern void T77f504(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc5b_error */
extern void T36f502(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5b */
extern T0* T531c1012(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc5b_error */
extern void T77f503(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.is_type_valid */
extern T1 T369f55(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.set_class_interface_error_only */
extern void T372f40(GE_context* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_vgcc3a_error */
extern void T36f501(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc3a */
extern T0* T531c1011(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T36f169(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc3a_error */
extern void T77f502(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T77f170(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc6d_error */
extern void T36f500(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6d */
extern T0* T531c1010(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc6d_error */
extern void T77f501(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bang_instruction */
extern void T79f245(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bang_instruction_validity */
extern void T79f267(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_instruction_validity */
extern void T79f300(GE_context* ac, T0* C, T0* a1);
extern T1 T79f300ot1(T0* a1, T0** a2);
extern T1 T79f300ot2(T0* a1, T0** a2);
extern T1 T79f300ot3(T0* a1, T0** a2);
extern T1 T79f300ot4(T0* a1, T0** a2);
extern T1 T79f300ot5(T0* a1);
extern T1 T79f300ot6(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_instruction */
extern void T79f384(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_creation_dynamic_type */
extern void T79f444(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATE_INSTRUCTION.arguments */
extern T0* T1250f8(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.arguments */
extern T0* T1249f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.is_type_valid */
extern T1 T79f112(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_bang_instruction */
extern void T74f1238(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bang_instruction */
extern void T74f1254(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_instruction */
extern void T74f1260(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_instruction */
extern void T1300f37(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_instruction */
extern void T369f363(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_instruction_validity */
extern void T369f380(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_instruction */
extern void T79f246(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_instruction_validity */
extern void T79f268(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_create_instruction */
extern void T74f1239(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_instruction */
extern void T74f1255(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_instruction */
extern void T1300f38(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_instruction */
extern void T369f364(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_instruction_validity */
extern void T369f381(GE_context* ac, T0* C, T0* a1);
extern T1 T369f381ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_precursor_procedure_instruction_validity */
extern void T369f391(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [ET_PROCEDURE].force_last */
extern void T881f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].slots_put */
extern void T881f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].clashes_put */
extern void T881f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].slots_item */
extern T6 T881f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].hash_position */
extern T6 T881f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].resize */
extern void T881f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].clashes_resize */
extern void T881f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].special_integer_ */
extern T0* T881f32(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_resize */
extern void T881f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_resize */
extern void T881f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_item */
extern T0* T881f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].slots_resize */
extern void T881f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_capacity */
extern T6 T881f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_put */
extern void T881f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].search_position */
extern void T881f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].key_equality_tester */
extern T0* T881f30(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_precursor_instruction */
extern void T369f398(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr1a_error */
extern void T36f494(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1a */
extern T0* T531c1004(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdpr1a_error */
extern void T77f495(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_instruction */
extern void T79f247(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_instruction_validity */
extern void T79f269(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_procedure_instruction_validity */
extern void T79f301(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_instruction */
extern void T79f385(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_precursor_instruction */
extern void T74f1240(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_instruction */
extern void T74f1256(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_instruction */
extern void T1300f39(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_instruction */
extern void T369f365(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_instruction_validity */
extern void T369f382(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_procedure_call_instruction_validity */
extern void T369f393(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_static_call_instruction */
extern void T369f399(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_dotnet_procedure_call_instruction_validity */
extern void T369f392(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_instruction */
extern void T79f248(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_instruction_validity */
extern void T79f270(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_procedure_call_instruction_validity */
extern void T79f304(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_instruction */
extern void T79f389(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_procedure_call_instruction_validity */
extern void T79f303(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_instruction */
extern void T74f1241(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_instruction */
extern void T74f1257(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unqualified_call_instruction */
extern void T1300f98(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unqualified_call_instruction */
extern void T369f366(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_instruction */
extern void T79f249(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_unqualified_call_instruction */
extern void T74f1242(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_instruction */
extern void T74f1258(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1258ot1(T0* a1, T0** a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T1422f4(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_infix_cast_expression */
extern void T1300f100(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_infix_cast_expression */
extern void T386f57(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_cast_expression */
extern void T382f63(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_cast_expression */
extern void T369f367(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_cast_expression_validity */
extern void T369f383(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_cast_expression */
extern void T79f461(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_cast_expression_validity */
extern void T79f493(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_cast_expression */
extern void T74f1243(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_cast_expression */
extern void T74f1259(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_builtin_expression */
extern void T1300f107(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T386f58(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T382f64(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_builtin_expression */
extern void T369f400(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_builtin_expression_validity */
extern void T369f403(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_builtin_expression */
extern void T79f533(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_builtin_expression_validity */
extern void T79f536(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_builtin_expression */
extern void T74f1261(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_builtin_expression */
extern void T74f1264(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_from_expression */
extern void T1300f108(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_from_expression */
extern void T386f59(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_from_expression */
extern void T382f65(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_from_expression */
extern void T369f401(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_from_expression_validity */
extern void T369f404(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_from_expression */
extern void T79f534(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_from_expression_validity */
extern void T79f537(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_from_expression */
extern void T74f1262(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_from_expression */
extern void T74f1265(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_to_expression */
extern void T1300f109(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_to_expression */
extern void T386f60(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_to_expression */
extern void T382f66(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_to_expression */
extern void T369f402(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_to_expression_validity */
extern void T369f405(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_to_expression */
extern void T79f535(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_to_expression_validity */
extern void T79f538(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_to_expression */
extern void T74f1263(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_to_expression */
extern void T74f1266(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.reset_validity_checked */
extern void T1228f80(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_validity_checked */
extern void T1227f82(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_validity_checked */
extern void T1226f81(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_validity_checked */
extern void T365f77(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_validity_checked */
extern void T364f79(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_validity_checked */
extern void T362f79(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_validity_checked */
extern void T330f80(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_validity_checked */
extern void T259f85(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_frozen_keyword */
extern void T1228f76(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_frozen_keyword */
extern void T1227f78(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_frozen_keyword */
extern void T1226f77(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_frozen_keyword */
extern void T365f73(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_frozen_keyword */
extern void T364f75(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_frozen_keyword */
extern void T362f75(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_frozen_keyword */
extern void T330f76(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_frozen_keyword */
extern void T259f81(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_object_tests */
extern void T1228f73(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_object_tests */
extern void T1227f75(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_object_tests */
extern void T1226f74(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_object_tests */
extern void T365f70(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_object_tests */
extern void T364f72(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_object_tests */
extern void T362f72(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_object_tests */
extern void T330f73(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_object_tests */
extern void T259f78(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_across_components */
extern void T1228f74(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_across_components */
extern void T1227f76(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_across_components */
extern void T1226f75(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_across_components */
extern void T365f71(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_across_components */
extern void T364f73(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_across_components */
extern void T362f73(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_across_components */
extern void T330f74(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_across_components */
extern void T259f79(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.reset */
extern void T1228f81(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T1228f81p1(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T1227f83(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T1227f83p1(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset */
extern void T1226f82(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset */
extern void T1226f82p1(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset */
extern void T365f78(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset */
extern void T365f78p1(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T364f80(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T364f80p1(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T362f80(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T362f80p1(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset */
extern void T330f81(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset */
extern void T330f81p1(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T259f86(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T259f86p1(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_features_flattened */
extern void T1228f82(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1228f98(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset_qualified_anchored_types */
extern void T261f15(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T1227f84(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1227f103(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T1226f83(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1226f101(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_after_features_flattened */
extern void T365f79(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T365f92(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_features_flattened */
extern void T364f81(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T364f96(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_features_flattened */
extern void T362f81(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T362f95(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_features_flattened */
extern void T330f82(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T330f102(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_features_flattened */
extern void T259f87(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_signature_qualified_anchored_types */
extern void T259f107(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_interface_checked */
extern void T1228f83(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T1227f85(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T1227f85p1(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_interface_checked */
extern void T1226f84(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_interface_checked */
extern void T1226f84p1(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_after_interface_checked */
extern void T365f80(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_interface_checked */
extern void T364f82(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_interface_checked */
extern void T362f82(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T330f83(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T330f83p1(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_interface_checked */
extern void T259f88(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_validity_checked */
extern void T1231f84(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_validity_checked */
extern void T1230f81(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_validity_checked */
extern void T533f79(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_validity_checked */
extern void T527f80(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_frozen_keyword */
extern void T1231f80(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_frozen_keyword */
extern void T1230f77(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_frozen_keyword */
extern void T533f78(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_frozen_keyword */
extern void T527f79(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_object_tests */
extern void T1231f77(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_object_tests */
extern void T1230f74(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_object_tests */
extern void T533f75(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_object_tests */
extern void T527f76(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_across_components */
extern void T1231f78(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_across_components */
extern void T1230f75(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_across_components */
extern void T533f76(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_across_components */
extern void T527f77(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset */
extern void T1231f85(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset */
extern void T1230f82(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset */
extern void T533f80(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset */
extern void T527f81(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_features_flattened */
extern void T1231f86(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T1231f102(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T1230f83(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T1230f101(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_features_flattened */
extern void T533f81(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T533f96(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T527f82(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T527f99(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_interface_checked */
extern void T1231f87(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T1230f84(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T1230f84p1(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_interface_checked */
extern void T533f82(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T527f83(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T527f83p1(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.reset */
extern void T1784f84(GE_context* ac, T0* C);
/* ET_INFIX_NAME.reset */
extern void T1234f102(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.reset */
extern void T1233f70(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.reset */
extern void T1232f88(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.reset */
extern void T832f70(GE_context* ac, T0* C);
/* ET_IDENTIFIER.reset */
extern void T181f122(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.set_seed */
extern void T1784f82(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_NAME.set_seed */
extern void T1234f103(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_FREE_NAME.set_seed */
extern void T1233f71(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_NAME.set_seed */
extern void T1232f89(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_FREE_NAME.set_seed */
extern void T832f71(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_seed */
extern void T181f108(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_id */
extern void T334f86(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_id */
extern void T333f86(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_id */
extern void T322f85(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_id */
extern void T305f85(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.set_id */
extern void T238f82(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_hash_code */
extern void T334f75(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_hash_code */
extern void T333f75(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_hash_code */
extern void T322f74(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_hash_code */
extern void T305f74(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.set_hash_code */
extern void T238f73(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_next_type */
extern void T334f76(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_next_type */
extern void T333f76(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_next_type */
extern void T322f75(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_next_type */
extern void T305f75(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_next_type */
extern void T238f74(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_alive */
extern void T334f77(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_alive */
extern void T333f77(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_alive */
extern void T322f76(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_alive */
extern void T305f76(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.set_alive */
extern void T238f72(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_meta_type */
extern void T334f78(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_meta_type */
extern void T333f78(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_meta_type */
extern void T322f77(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_meta_type */
extern void T305f77(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_meta_type */
extern void T238f75(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.use_all_attributes */
extern void T334f87(GE_context* ac, T0* C, T0* a1);
extern T1 T334f87ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_FUNCTION_TYPE.use_all_attributes */
extern void T333f87(GE_context* ac, T0* C, T0* a1);
extern T1 T333f87ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_SPECIAL_TYPE.use_all_attributes */
extern void T322f86(GE_context* ac, T0* C, T0* a1);
extern T1 T322f86ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_TUPLE_TYPE.use_all_attributes */
extern void T305f86(GE_context* ac, T0* C, T0* a1);
extern T1 T305f86ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_TYPE.use_all_attributes */
extern void T238f83(GE_context* ac, T0* C, T0* a1);
extern T1 T238f83ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_static */
extern void T334f88(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_static */
extern void T333f88(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_static */
extern void T322f87(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_static */
extern void T305f87(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_TYPE.set_static */
extern void T238f84(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_equality_expression */
extern void T334f90(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.set_next */
extern void T1851f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_equality_expression */
extern void T333f90(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_equality_expression */
extern void T322f89(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_equality_expression */
extern void T305f89(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_equality_expression */
extern void T238f86(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_object_equality_expression */
extern void T334f91(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.set_next */
extern void T1852f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_object_equality_expression */
extern void T333f91(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_object_equality_expression */
extern void T322f90(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_object_equality_expression */
extern void T305f90(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_object_equality_expression */
extern void T238f87(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_target */
extern void T334f83(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_target */
extern void T333f83(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_target */
extern void T322f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_target */
extern void T305f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_target */
extern void T238f79(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure_call */
extern void T334f89(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure_call */
extern void T333f89(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure_call */
extern void T322f88(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure_call */
extern void T305f88(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_procedure_call */
extern void T238f85(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_query_call */
extern void T334f80(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_query_call */
extern void T333f80(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_query_call */
extern void T322f79(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_query_call */
extern void T305f79(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_query_call */
extern void T238f78(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.export_classes */
extern void T229f188(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].key */
extern T0* T634f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_key */
extern T0* T232f35(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.actual_intrinsic_class */
extern T0* T470f32(GE_context* ac, T0* C);
/* ET_CLASS.actual_intrinsic_class */
extern T0* T82f149(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.export_classes */
extern void T216f174(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.export_classes */
extern void T199f21(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start */
extern void T558f2(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start */
extern void T555f27(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start */
extern void T159f14(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T158f9(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T158f9p1(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.on_comment */
extern void T558f4(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_comment */
extern void T555f29(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_comment */
extern void T159f16(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.handle_position */
extern void T159f24(GE_context* ac, T0* C, T0* a1);
/* XM_POSITION_TABLE.put */
extern void T155f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].put_last */
extern void T843f9(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].put_right */
extern void T1581f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T1581c3(GE_context* ac, T0* a1);
/* DS_PAIR [XM_POSITION, XM_NODE].make */
extern T0* T844c3(GE_context* ac, T0* a1, T0* a2);
/* XM_COMMENT.make_last_in_document */
extern T0* T1408c4(GE_context* ac, T0* a1, T0* a2);
/* XM_COMMENT.make_last */
extern T0* T1408c3(GE_context* ac, T0* a1, T0* a2);
/* XM_ELEMENT.force_last */
extern void T154f27(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].force_last */
extern void T838f13(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].force_last */
extern void T838f13p1(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_ELEMENT_NODE].make */
extern T0* T1562c3(GE_context* ac, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].before_addition */
extern void T838f18(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.before_addition */
extern void T154f29(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.last */
extern T0* T154f19(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].last */
extern T0* T838f8(GE_context* ac, T0* C);
/* XM_ELEMENT.is_empty */
extern T1 T154f18(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].is_empty */
extern T1 T838f7(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T158f11(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T158f11p1(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_processing_instruction */
extern void T558f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.on_processing_instruction */
extern void T555f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.on_processing_instruction */
extern void T159f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_PROCESSING_INSTRUCTION.make_last_in_document */
extern T0* T1409c5(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_PROCESSING_INSTRUCTION.make_last */
extern T0* T1409c4(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T158f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T158f12p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_NULL.on_content */
extern void T558f6(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_content */
extern void T555f31(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_content */
extern void T159f18(GE_context* ac, T0* C, T0* a1);
/* XM_CHARACTER_DATA.make_last */
extern T0* T1410c3(GE_context* ac, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T158f13(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T158f13p1(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start_tag */
extern void T558f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_start_tag */
extern void T555f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.push */
extern void T1336f12(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].force_last */
extern void T1535f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].put_right */
extern void T1682f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].attach_left */
extern void T1682f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1682c4(GE_context* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.new_string_string_table */
extern T0* T1336f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_equality_tester */
extern void T54f103(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.string_equality_tester */
extern T0* T1336f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map_default */
extern T0* T54c102(GE_context* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].default_capacity */
extern T6 T54f49(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag */
extern void T159f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_root */
extern T0* T154c26(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_DOCUMENT.set_root_element */
extern void T153f15(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.remove_previous_root_element */
extern void T153f16(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].go_after */
extern void T1407f14(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_go_after */
extern void T836f28(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.make_last */
extern T0* T154c25(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.new_namespace */
extern T0* T159f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].force_last */
extern void T559f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_put */
extern void T559f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].clashes_put */
extern void T559f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].slots_item */
extern T6 T559f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].hash_position */
extern T6 T559f20(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE.hash_code */
extern T6 T520f6(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].resize */
extern void T559f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_resize */
extern void T559f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].special_integer_ */
extern T0* T559f29(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_resize */
extern void T559f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_resize */
extern void T559f46(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].aliased_resized_area */
extern T0* T1341f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_NAMESPACE].aliased_resized_area */
extern T0* T1342f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_item */
extern T0* T559f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_item */
extern T0* T559f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_item */
extern T6 T559f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_resize */
extern void T559f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_capacity */
extern T6 T559f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_put */
extern void T559f41(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].force */
extern void T1341f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].fill_with */
extern void T1342f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].extend */
extern void T1342f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].search_position */
extern void T559f40(GE_context* ac, T0* C, T0* a1);
/* detachable KL_EQUALITY_TESTER [XM_NAMESPACE].test */
extern T1 T1339f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].key_equality_tester */
extern T0* T559f25(GE_context* ac, T0* C);
/* XM_NAMESPACE.same_prefix */
extern T1 T520f5(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].item */
extern T0* T559f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].has */
extern T1 T559f30(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T158f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T158f14p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_end_tag */
extern void T558f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T555f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.pop */
extern void T1336f11(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_last */
extern void T1535f9(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].set_last_cell */
extern void T1535f14(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].forget_right */
extern void T1682f7(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_last_cursors_after */
extern void T1535f13(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_next_cursor */
extern void T1536f13(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_after */
extern void T1536f12(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].wipe_out */
extern void T1535f12(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_all_cursors_after */
extern void T1535f15(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve_default */
extern T0* T1336f3(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_pseudo_prefix */
extern unsigned char ge1218os36192;
extern T0* ge1218ov36192;
extern T0* T1336f7(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T555f33p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve */
extern T0* T1336f2(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].back */
extern void T1536f11(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_back */
extern void T1535f18(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].add_traversing_cursor */
extern void T1535f19(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_traversing_cursor */
extern void T1535f20(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set */
extern void T1536f14(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].go_before */
extern void T1536f10(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_go_before */
extern void T1535f17(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_before */
extern void T1536f15(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_off */
extern T1 T1535f7(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].off */
extern T1 T1536f7(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].item */
extern T0* T1536f6(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].finish */
extern void T1536f9(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_finish */
extern void T1535f16(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_namespace */
extern unsigned char ge1218os36193;
extern T0* ge1218ov36193;
extern T0* T1336f6(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.has_prefix */
extern T1 T555f10(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_end_tag */
extern void T159f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.parent_element */
extern T0* T154f16(GE_context* ac, T0* C);
extern T1 T154f16ot1(T0* a1, T0** a2);
/* XM_ELEMENT.is_root_node */
extern T1 T154f17(GE_context* ac, T0* C);
/* XM_DOCUMENT.is_root_node */
extern T1 T153f8(GE_context* ac, T0* C);
/* XM_DOCUMENT.parent */
extern T0* T153f9(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T158f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T158f16p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_attribute */
extern void T558f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER.on_attribute */
extern void T555f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add */
extern void T1336f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_new */
extern void T54f104(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].last */
extern T0* T1535f5(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.shallow_has */
extern T1 T1336f4(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.attributes_force */
extern void T555f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_LINKED_QUEUE [STRING_8].force */
extern void T1338f7(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add_default */
extern void T1336f13(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.is_xmlns */
extern T1 T555f9(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.same_string */
extern T1 T555f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.string_equality_tester */
extern T0* T555f25(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns */
extern unsigned char ge1185os21663;
extern T0* ge1185ov21663;
extern T0* T555f21(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_attribute */
extern void T159f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_ATTRIBUTE.make_last */
extern T0* T405c5(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T158f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T158f18p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_CALLBACKS_NULL.on_finish */
extern void T558f3(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_finish */
extern void T555f28(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_finish */
extern void T159f15(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T158f10(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T158f10p1(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.on_start_tag_finish */
extern void T558f7(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T555f32(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T555f32p1(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.string_ */
extern T0* T555f14(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_delayed_attributes */
extern void T555f39(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_remove */
extern void T555f43(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].remove */
extern void T1338f8(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].wipe_out */
extern void T1338f9(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.unprefixed_attribute_namespace */
extern T0* T555f19(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.default_namespace */
extern unsigned char ge1185os21662;
extern T0* ge1185ov21662;
extern T0* T555f24(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns_namespace */
extern unsigned char ge1185os21670;
extern T0* ge1185ov21670;
extern T0* T555f18(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xml_prefix_namespace */
extern unsigned char ge1185os21669;
extern T0* ge1185ov21669;
extern T0* T555f17(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.is_xml */
extern T1 T555f16(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.xml_prefix */
extern unsigned char ge1185os21664;
extern T0* ge1185ov21664;
extern T0* T555f23(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].item */
extern T0* T1338f5(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_is_empty */
extern T1 T555f12(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].is_empty */
extern T1 T1338f4(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.has */
extern T1 T1336f5(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag_finish */
extern void T159f20(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T158f15(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T158f15p1(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.on_error */
extern void T558f11(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_error */
extern void T555f36(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_error */
extern void T159f22(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T158f17(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T158f17p1(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_xml_declaration */
extern void T558f12(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.on_xml_declaration */
extern void T555f44(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_xml_declaration */
extern void T159f25(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_STOP_ON_ERROR_FILTER.on_xml_declaration */
extern void T158f19(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.set_next */
extern void T555f41(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.set_next */
extern void T159f13(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.set_next */
extern void T158f8(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_line */
extern void T304f32(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.put_line */
extern void T269f6(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_line */
extern void T267f5(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T304f38(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T304f38p1(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T269f10(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T269f10p1(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T267f6(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T267f6p1(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_string */
extern void T304f30(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_put_string */
extern void T304f42(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.file_ps */
extern void T304f49(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_OUTPUT_STREAM.put_string */
extern void T269f8(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.string_ */
extern T0* T269f3(GE_context* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_string */
extern void T267f9(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_new_line */
extern void T304f33(GE_context* ac, T0* C);
/* KL_STRING_OUTPUT_STREAM.put_new_line */
extern void T269f5(GE_context* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_new_line */
extern void T267f4(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.put_character */
extern void T304f31(GE_context* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.old_put_character */
extern void T304f43(GE_context* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.file_pc */
extern void T304f50(GE_context* ac, T0* C, T14 a1, T2 a2);
/* KL_STRING_OUTPUT_STREAM.put_character */
extern void T269f7(GE_context* ac, T0* C, T2 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_character */
extern void T267f7(GE_context* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.put_integer */
extern void T304f37(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.put_integer_64 */
extern void T304f46(GE_context* ac, T0* C, T7 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer */
extern void T269f9(GE_context* ac, T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer */
extern void T267f8(GE_context* ac, T0* C, T6 a1);
/* AP_DISPLAY_HELP_FLAG.reset */
extern void T50f40(GE_context* ac, T0* C);
/* AP_STRING_OPTION.reset */
extern void T46f28(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.reset */
extern void T45f28(GE_context* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].make */
extern T0* T150c8(GE_context* ac);
/* DS_LINKED_LIST [INTEGER_32].set_internal_cursor */
extern void T150f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [INTEGER_32].new_cursor */
extern T0* T150f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [INTEGER_32].make */
extern T0* T554c3(GE_context* ac, T0* a1);
/* AP_BOOLEAN_OPTION.reset */
extern void T44f31(GE_context* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].make */
extern T0* T147c8(GE_context* ac);
/* DS_LINKED_LIST [BOOLEAN].set_internal_cursor */
extern void T147f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [BOOLEAN].new_cursor */
extern T0* T147f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [BOOLEAN].make */
extern T0* T552c3(GE_context* ac, T0* a1);
/* AP_ENUMERATION_OPTION.reset */
extern void T43f31(GE_context* ac, T0* C);
/* AP_FLAG.reset */
extern void T41f22(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.record_occurrence */
extern void T50f41(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.display_help */
extern void T50f42(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.exceptions */
extern T0* T50f29(GE_context* ac, T0* C);
/* AP_ERROR_HANDLER.report_info_message */
extern void T139f11(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_help_text */
extern T0* T50f28(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.option_help_text */
extern T0* T50f34(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_QUICK_SORTER [AP_OPTION].sort */
extern void T1546f3(GE_context* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [AP_OPTION].sort_with_comparator */
extern void T1546f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [AP_OPTION].subsort_with_comparator */
extern void T1546f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [AP_OPTION].swap */
extern void T137f28(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [AP_OPTION].replace */
extern void T137f27(GE_context* ac, T0* C, T0* a1, T6 a2);
/* AP_OPTION_COMPARATOR.less_than */
extern T1 T1545f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.three_way_comparison */
extern T6 T34f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* AP_OPTION_COMPARATOR.string_ */
extern T0* T1545f2(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].item */
extern T0* T137f16(GE_context* ac, T0* C, T6 a1);
/* DS_QUICK_SORTER [AP_OPTION].make */
extern T0* T1546c2(GE_context* ac, T0* a1);
/* AP_OPTION_COMPARATOR.default_create */
extern T0* T1545c3(GE_context* ac);
/* AP_STRING_OPTION.record_occurrence */
extern void T46f29(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.record_occurrence */
extern void T45f29(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [INTEGER_32].force_last */
extern void T150f10(GE_context* ac, T0* C, T6 a1);
/* AP_BOOLEAN_OPTION.record_occurrence */
extern void T44f32(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.false_strings */
extern unsigned char ge5os4907;
extern T0* ge5ov4907;
extern T0* T44f22(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.case_insensitive_string_equality_tester */
extern T0* T44f23(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].has */
extern T1 T136f20(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.true_strings */
extern unsigned char ge5os4908;
extern T0* ge5ov4908;
extern T0* T44f21(GE_context* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].force_last */
extern void T147f10(GE_context* ac, T0* C, T1 a1);
/* detachable DS_LINKABLE [BOOLEAN].put_right */
extern void T551f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [BOOLEAN].make */
extern T0* T551c3(GE_context* ac, T1 a1);
/* AP_ENUMERATION_OPTION.record_occurrence */
extern void T43f33(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].has */
extern T1 T143f14(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.record_occurrence */
extern void T41f24(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_INPUT_STREAM.read_character */
extern void T898f10(GE_context* ac, T0* C);
/* KL_STDIN_FILE.read_character */
extern void T887f13(GE_context* ac, T0* C);
/* CONSOLE.read_character */
extern void T865f31(GE_context* ac, T0* C);
/* CONSOLE.console_readchar */
extern T2 T865f14(GE_context* ac, T0* C, T14 a1);
/* CONSOLE.end_of_file */
extern T1 T865f11(GE_context* ac, T0* C);
/* CONSOLE.console_eof */
extern T1 T865f13(GE_context* ac, T0* C, T14 a1);
/* KL_STDIN_FILE.console */
extern unsigned char ge261os30521;
extern T0* ge261ov30521;
extern T0* T887f7(GE_context* ac, T0* C);
/* STD_FILES.input */
extern unsigned char ge1481os19796;
extern T0* ge1481ov19796;
extern T0* T356f5(GE_context* ac, T0* C);
/* CONSOLE.make_open_stdin */
extern T0* T865c29(GE_context* ac, T0* a1);
/* CONSOLE.set_read_mode */
extern void T865f32(GE_context* ac, T0* C);
/* KL_STDIN_FILE.io */
extern T0* T887f10(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_character */
extern void T847f32(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].remove */
extern void T1455f6(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].wipe_out */
extern void T1455f8(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.noqueue_read_character */
extern void T847f35(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_read_character */
extern void T847f37(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.append_character */
extern void T847f38(GE_context* ac, T0* C, T6 a1);
/* DS_LINKED_QUEUE [CHARACTER_8].force */
extern void T1455f7(GE_context* ac, T0* C, T2 a1);
/* detachable DS_LINKABLE [CHARACTER_8].put_right */
extern void T1635f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [CHARACTER_8].make */
extern T0* T1635c3(GE_context* ac, T2 a1);
/* XM_EIFFEL_INPUT_STREAM.utf8 */
extern T0* T847f24(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf8_buffer */
extern unsigned char ge1285os30172;
extern T0* ge1285ov30172;
extern T0* T847f27(GE_context* ac, T0* C);
/* UC_UTF16_ROUTINES.surrogate */
extern T6 T1456f7(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_low_surrogate */
extern T1 T1456f6(GE_context* ac, T0* C, T6 a1);
/* UC_UTF16_ROUTINES.least_10_bits */
extern T6 T1456f5(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_high_surrogate */
extern T1 T1456f4(GE_context* ac, T0* C, T6 a1);
/* UC_UTF16_ROUTINES.is_surrogate */
extern T1 T1456f3(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.utf16 */
extern unsigned char ge309os3808;
extern T0* ge309ov3808;
extern T0* T847f22(GE_context* ac, T0* C);
/* UC_UTF16_ROUTINES.default_create */
extern T0* T1456c16(GE_context* ac);
/* XM_EIFFEL_INPUT_STREAM.least_significant */
extern T6 T847f26(GE_context* ac, T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.most_significant */
extern T6 T847f25(GE_context* ac, T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.latin1_read_character */
extern void T847f36(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_detect_read_character */
extern void T847f34(GE_context* ac, T0* C);
/* UC_UTF8_ROUTINES.is_endian_detection_character */
extern T1 T845f31(GE_context* ac, T0* C, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.is_endian_detection_character_start */
extern T1 T845f30(GE_context* ac, T0* C, T2 a1, T2 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_least_first */
extern T1 T1456f2(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_most_first */
extern T1 T1456f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.read_character */
extern void T29f53(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_read_character */
extern void T29f57(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_gc */
extern T2 T29f26(GE_context* ac, T0* C, T14 a1);
/* KL_STRING_INPUT_STREAM.close */
extern void T898f11(GE_context* ac, T0* C);
/* KL_STDIN_FILE.close */
extern void T887f14(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.close */
extern void T847f33(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.close */
extern void T29f48(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_error_handler */
extern void T70f192(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_error_handler */
extern void T64f191(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_error_handler */
extern void T61f188(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_ise_version */
extern void T70f193(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_ecma_version */
extern void T70f217(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.ise_6_4_7_7252 */
extern T0* T70f161(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.ise_6_4_7_6592 */
extern unsigned char ge191os2010;
extern T0* ge191ov2010;
extern T0* T70f154(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_ise_version */
extern void T64f192(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_ecma_version */
extern void T64f213(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.ise_6_4_7_7252 */
extern T0* T64f185(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.ise_6_4_7_6592 */
extern T0* T64f184(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_ise_version */
extern void T61f189(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_ecma_version */
extern void T61f225(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.ise_6_4_7_7252 */
extern T0* T61f158(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.ise_6_4_7_6592 */
extern T0* T61f157(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_qualified_anchored_types_enabled */
extern void T70f194(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_qualified_anchored_types_enabled */
extern void T64f193(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_qualified_anchored_types_enabled */
extern void T61f190(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_flat_mode */
extern void T70f201(GE_context* ac, T0* C, T1 a1);
extern T1 T70f201ot1(T0* a1, T0** a2);
extern T1 T70f201ot2(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.set_flat_mode */
extern void T64f200(GE_context* ac, T0* C, T1 a1);
extern T1 T64f200ot1(T0* a1, T0** a2);
extern T1 T64f200ot2(T0* a1, T0** a2);
/* ET_XACE_SYSTEM.set_flat_mode */
extern void T61f197(GE_context* ac, T0* C, T1 a1);
extern T1 T61f197ot1(T0* a1, T0** a2);
extern T1 T61f197ot2(T0* a1, T0** a2);
/* ET_LACE_SYSTEM.set_flat_dbc_mode */
extern void T70f202(GE_context* ac, T0* C, T1 a1);
extern T1 T70f202ot1(T0* a1, T0** a2);
extern T1 T70f202ot2(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.set_flat_dbc_mode */
extern void T64f201(GE_context* ac, T0* C, T1 a1);
extern T1 T64f201ot1(T0* a1, T0** a2);
extern T1 T64f201ot2(T0* a1, T0** a2);
/* ET_XACE_SYSTEM.set_flat_dbc_mode */
extern void T61f198(GE_context* ac, T0* C, T1 a1);
extern T1 T61f198ot1(T0* a1, T0** a2);
extern T1 T61f198ot2(T0* a1, T0** a2);
/* ET_LACE_SYSTEM.classes_do_recursive */
extern void T70f195(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_recursive */
extern T0* T70f195ac1(T0* a1);
/* ET_LACE_SYSTEM.universes_do_recursive */
extern void T70f218(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].do_all */
extern void T471f37(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.add_universe_recursive */
extern void T70f285(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.add_universe_recursive */
extern T0* T70f285ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.add_universe_recursive */
extern T0* T70f285ac2(T0* a1);
/* ET_ECF_LIBRARY.add_universe_recursive */
extern void T188f191(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T188f191ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T188f191ac2(T0* a1);
/* ET_LIBRARY.add_universe_recursive */
extern void T459f165(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_universe_recursive */
extern T0* T459f165ac1(T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.add_universe_recursive */
extern T0* T459f165ac2(T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_all */
extern void T196f9(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_all */
extern void T189f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].make */
extern T0* T471c36(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].set_internal_cursor */
extern void T471f48(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].new_cursor */
extern T0* T471f35(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].make */
extern T0* T1318c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].make_slots */
extern void T471f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_clashes */
extern void T471f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_key_storage */
extern void T471f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_item_storage */
extern void T471f43(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].make */
extern T0* T1321f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_UNIVERSE].make_empty */
extern T0* T1319c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].default_create */
extern T0* T1321c3(GE_context* ac);
/* ET_LACE_SYSTEM.initial_universes_capacity */
extern unsigned char ge733os3698;
extern T6 ge733ov3698;
extern T6 T70f159(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.classes_do_recursive */
extern void T64f194(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_recursive */
extern T0* T64f194ac1(T0* a1);
/* ET_ECF_SYSTEM.universes_do_recursive */
extern void T64f215(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.add_universe_recursive */
extern void T64f236(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T64f236ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T64f236ac2(T0* a1);
/* ET_ECF_SYSTEM.initial_universes_capacity */
extern T6 T64f164(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.classes_do_recursive */
extern void T61f191(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_recursive */
extern T0* T61f191ac1(T0* a1);
/* ET_XACE_SYSTEM.universes_do_recursive */
extern void T61f226(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.add_universe_recursive */
extern void T61f294(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.add_universe_recursive */
extern T0* T61f294ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.add_universe_recursive */
extern T0* T61f294ac2(T0* a1);
/* ET_XACE_SYSTEM.initial_universes_capacity */
extern T6 T61f176(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.compile_all */
extern void T70f196(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.compile_degree_3 */
extern void T70f223(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.compile_degree_3 */
extern T0* T70f223ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.compile_degree_3 */
extern T0* T70f223ac2(void);
extern T1 T70f223ot1(T0* a1, T0** a2);
/* ET_LACE_SYSTEM.classes_do_if_recursive_until */
extern void T70f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_if_recursive_until */
extern T0* T70f287ac1(T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_do_if_recursive_until */
extern T0* T70f287ac2(T0* a1, T0* a2, T0* a3);
/* ET_LACE_SYSTEM.universes_do_recursive_until */
extern void T70f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_UNIVERSE].forth */
extern void T471f40(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_forth */
extern void T471f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].add_traversing_cursor */
extern void T471f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_next_cursor */
extern void T1318f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_position */
extern void T1318f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].remove_traversing_cursor */
extern void T471f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_after */
extern void T1318f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].item_for_iteration */
extern T0* T471f34(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_item */
extern T0* T471f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].go_after */
extern void T471f39(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_go_after */
extern void T471f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].cursor_off */
extern T1 T471f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].off */
extern T1 T1318f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].after */
extern T1 T471f27(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_after */
extern T1 T471f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].after */
extern T1 T1318f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].start */
extern void T471f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_start */
extern void T471f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].is_empty */
extern T1 T471f31(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.compile_degree_4 */
extern void T70f222(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T70f222ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T70f222ac2(void);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T70f222ac3(T0* a1);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T70f222ac4(void);
/* Creation of agent #5 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T70f222ac5(T0* a1);
/* Creation of agent #6 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T70f222ac6(void);
/* ET_LACE_SYSTEM.parsed_class_count_recursive */
extern T6 T70f160(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.parsed_class_count_recursive */
extern T0* T70f160ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.parsed_class_count_recursive */
extern T0* T70f160ac2(T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.parsed_class_count_recursive */
extern T0* T70f160ac3(void);
/* KL_AGENT_ROUTINES [ET_CLASS].call */
extern void T785f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UT_COUNTER.increment */
extern void T784f3(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.classes_do_if_recursive */
extern void T70f295(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_if_recursive */
extern T0* T70f295ac1(T0* a1, T0* a2);
/* ET_LACE_SYSTEM.class_actions */
extern unsigned char ge793os3716;
extern T0* ge793ov3716;
extern T0* T70f153(GE_context* ac, T0* C);
/* KL_AGENT_ROUTINES [ET_CLASS].default_create */
extern T0* T785c1(GE_context* ac);
/* UT_COUNTER.make */
extern T0* T784c2(GE_context* ac, T6 a1);
/* ET_LACE_SYSTEM.check_provider_validity */
extern void T70f221(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.check_provider_validity */
extern T0* T70f221ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.check_provider_validity */
extern T0* T70f221ac2(void);
/* ET_LACE_SYSTEM.parse_all_recursive */
extern void T70f220(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.build_scm_write_mappings */
extern void T70f227(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.build_scm_write_mappings */
extern T0* T70f227ac1(T0* a1);
/* ET_LACE_SYSTEM.build_scm_write_mapping */
extern void T70f291(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.clusters_do_explicit_recursive */
extern void T70f290(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.clusters_do_explicit_recursive */
extern T0* T70f290ac1(T0* a1);
/* ET_LACE_SYSTEM.internal_universes_do_recursive */
extern void T70f228(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].do_all */
extern void T482f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_item */
extern T0* T482f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_item */
extern T6 T482f22(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.add_internal_universe_recursive */
extern void T70f292(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.add_internal_universe_recursive */
extern T0* T70f292ac1(T0* a1);
/* ET_ECF_LIBRARY.add_internal_universe_recursive */
extern void T188f192(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_internal_universe_recursive */
extern T0* T188f192ac1(T0* a1);
/* ET_LIBRARY.add_internal_universe_recursive */
extern void T459f166(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_internal_universe_recursive */
extern T0* T459f166ac1(T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].force_last */
extern void T482f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_put */
extern void T482f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_put */
extern void T482f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_item */
extern T6 T482f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].hash_position */
extern T6 T482f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].resize */
extern void T482f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_resize */
extern void T482f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].special_integer_ */
extern T0* T482f27(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_storage_resize */
extern void T482f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_resize */
extern void T482f45(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1324f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1325f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_storage_item */
extern T0* T482f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_resize */
extern void T482f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_modulus */
extern T6 T482f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_capacity */
extern T6 T482f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_put */
extern void T482f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].force */
extern void T1324f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INTERNAL_UNIVERSE].fill_with */
extern void T1325f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTERNAL_UNIVERSE].extend */
extern void T1325f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].search_position */
extern void T482f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_equality_tester */
extern T0* T482f19(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].unset_found_item */
extern void T482f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].has */
extern T1 T482f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make */
extern T0* T482c30(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].set_internal_cursor */
extern void T482f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_cursor */
extern T0* T482f21(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE].make */
extern T0* T1322c4(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_slots */
extern void T482f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_clashes */
extern void T482f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_key_storage */
extern void T482f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_item_storage */
extern void T482f34(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].make */
extern T0* T1324f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INTERNAL_UNIVERSE].make_empty */
extern T0* T1325c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].default_create */
extern T0* T1324c3(GE_context* ac);
/* ET_LACE_SYSTEM.build_scm_read_mappings */
extern void T70f226(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.build_scm_read_mappings */
extern T0* T70f226ac1(T0* a1);
/* ET_LACE_SYSTEM.build_scm_read_mapping */
extern void T70f289(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.check_master_class_validity */
extern void T70f225(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.check_master_class_validity */
extern T0* T70f225ac1(T0* a1);
/* ET_MASTER_CLASS.process */
extern void T470f63(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.process_master_class */
extern void T438f8(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.check_master_class_validity */
extern void T438f9(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.check_overriding_classes_validity */
extern void T438f12(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0d_error */
extern void T77f292(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_universe_error */
extern void T77f372(GE_context* ac, T0* C, T0* a1);
/* ET_UNIVERSE_ERROR.make_vscn0d */
extern T0* T1764c21(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_MASTER_CLASS.upper_name */
extern T0* T470f47(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vscn_error */
extern T1 T77f79(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vscn0d_error */
extern void T36f291(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_universe_error */
extern void T36f371(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vscn_error */
extern T1 T36f78(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.current_universe */
extern T0* T438f5(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.error_handler */
extern T0* T438f4(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.current_system */
extern T0* T438f6(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.set_fatal_error */
extern void T438f13(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.check_intrinsic_classes_validity */
extern void T438f11(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.check_overridden_class_validity */
extern void T438f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0c_error */
extern void T77f294(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNIVERSE_ERROR.make_vscn0c */
extern T0* T1764c23(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vscn0c_error */
extern void T36f293(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vscn0b_error */
extern void T77f293(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNIVERSE_ERROR.make_vscn0b */
extern T0* T1764c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vscn0b_error */
extern void T36f292(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vscn0a_error */
extern void T77f291(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNIVERSE_ERROR.make_vscn0a */
extern T0* T1764c20(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vscn0a_error */
extern void T36f290(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_MASTER_CLASS_CHECKER.reset_fatal_error */
extern void T438f10(GE_context* ac, T0* C, T1 a1);
/* ET_AST_NULL_PROCESSOR.process_master_class */
extern void T429f4(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.master_classes_do_recursive_until */
extern void T70f288(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T70f288ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T70f288ac2(T0* a1, T0* a2);
/* ET_LACE_SYSTEM.parse_all_recursive */
extern void T70f220p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T70f220p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T70f220p1ac2(void);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T70f220p1ac3(T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T70f220p1ac4(T0* a1);
/* Creation of agent #5 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T70f220p1ac5(void);
/* Creation of agent #6 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T70f220p1ac6(void);
/* Creation of agent #7 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T70f220p1ac7(void);
/* Creation of agent #8 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T70f220p1ac8(void);
/* ET_ECF_LIBRARY.import_classes */
extern void T188f189(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T188f189ac1(void);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T188f189ac2(T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T188f189ac3(T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.export_classes */
extern void T195f22(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_unknown_imported_classes */
extern void T470f66(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.remove_imported_class */
extern void T470f79(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_adapted */
extern void T196f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].do_all */
extern void T625f11(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.import_classes */
extern void T459f163(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LIBRARY.import_classes */
extern T0* T459f163ac1(void);
/* Creation of agent #2 in feature ET_LIBRARY.import_classes */
extern T0* T459f163ac2(T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.import_classes */
extern T0* T459f163ac3(T0* a1);
/* ET_ECF_LIBRARY.parse_all */
extern void T188f190(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.parse_all */
extern T0* T188f190ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.parse_all */
extern T0* T188f190ac2(void);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.parse_all */
extern T0* T188f190ac3(void);
/* Creation of agent #4 in feature ET_ECF_LIBRARY.parse_all */
extern T0* T188f190ac4(T0* a1);
/* ET_MASTER_CLASS.remove_unknown_local_classes */
extern void T470f65(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.remove_local_ignored_class */
extern void T470f78(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_first */
extern void T1316f21(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].delete */
extern void T1316f20(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_local_non_override_class */
extern void T470f77(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_local_override_class */
extern void T470f76(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove */
extern void T1316f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].move_left */
extern void T1316f30(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_cursors_left */
extern void T1316f29(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_last */
extern void T1316f28(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_last_cursors_after */
extern void T1316f34(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.reset_local_modified_classes */
extern void T470f64(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T470f64ac1(T0* a1);
/* Creation of agent #2 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T470f64ac2(T0* a1);
/* Creation of agent #3 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T470f64ac3(T0* a1);
/* Creation of agent #4 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T470f64ac4(T0* a1);
/* Creation of agent #5 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T470f64ac5(void);
/* ET_MASTER_CLASS.reset_local_modified_class */
extern void T470f71(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.file_time_stamp */
extern T6 T121f30(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.file_time_stamp */
extern T6 T120f33(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.file_system */
extern T0* T470f30(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.unix_file_system */
extern T0* T470f35(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.windows_file_system */
extern T0* T470f34(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.operating_system */
extern T0* T470f33(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_parsed_and_errors */
extern void T82f243(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_parsed */
extern void T82f244(GE_context* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.reset */
extern void T1036f10(GE_context* ac, T0* C);
/* ET_CONVERT_PROCEDURE.reset */
extern void T1224f10(GE_context* ac, T0* C);
/* ET_BRACED_TYPE_LIST.reset */
extern void T1315f12(GE_context* ac, T0* C);
/* ET_CONVERT_FUNCTION.reset */
extern void T1223f9(GE_context* ac, T0* C);
/* ET_CREATOR_LIST.reset */
extern void T833f11(GE_context* ac, T0* C);
/* ET_CREATOR.reset */
extern void T1041f19(GE_context* ac, T0* C);
/* ET_INVARIANTS.reset */
extern void T886f29(GE_context* ac, T0* C);
/* ET_INVARIANTS.reset */
extern void T886f29p1(GE_context* ac, T0* C);
/* ET_PARENT_LIST.reset */
extern void T467f12(GE_context* ac, T0* C);
/* ET_PARENT.reset */
extern void T466f13(GE_context* ac, T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.reset */
extern void T500f10(GE_context* ac, T0* C);
/* ET_EXPORT_LIST.reset */
extern void T499f9(GE_context* ac, T0* C);
/* ET_FEATURE_EXPORT.reset */
extern void T1071f13(GE_context* ac, T0* C);
/* ET_ALL_EXPORT.reset */
extern void T1221f8(GE_context* ac, T0* C);
/* ET_RENAME_LIST.reset */
extern void T498f10(GE_context* ac, T0* C);
/* ET_RENAME.reset */
extern void T1220f7(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.reset */
extern void T266f11(GE_context* ac, T0* C);
/* ET_QUERY_LIST.reset */
extern void T265f11(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_ignored_classes_do_all */
extern void T470f74(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].do_all */
extern void T1316f18(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_non_override_classes_do_all */
extern void T470f73(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.current_system */
extern T0* T470f28(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_override_classes_do_all */
extern void T470f72(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTERS.do_all */
extern void T770f4(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.parse_all */
extern void T459f164(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LIBRARY.parse_all */
extern T0* T459f164ac1(T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.parse_all */
extern T0* T459f164ac2(void);
/* Creation of agent #3 in feature ET_LIBRARY.parse_all */
extern T0* T459f164ac3(void);
/* Creation of agent #4 in feature ET_LIBRARY.parse_all */
extern T0* T459f164ac4(T0* a1);
/* ET_DOTNET_ASSEMBLIES.put_last */
extern void T446f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].force_last */
extern void T1313f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].resize */
extern void T1313f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1313f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].extendible */
extern T1 T1313f8(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern void T70f231(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac1(void);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac2(T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac3(void);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac4(void);
/* Creation of agent #5 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac5(void);
/* Creation of agent #6 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac6(void);
/* Creation of agent #7 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac7(void);
/* Creation of agent #8 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac8(void);
/* Creation of agent #9 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac9(void);
/* Creation of agent #10 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac10(void);
/* Creation of agent #11 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac11(void);
/* Creation of agent #12 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac12(void);
/* Creation of agent #13 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac13(void);
/* Creation of agent #14 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac14(void);
/* Creation of agent #15 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac15(void);
/* Creation of agent #16 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac16(void);
/* Creation of agent #17 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac17(void);
/* Creation of agent #18 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac18(void);
/* Creation of agent #19 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac19(void);
/* Creation of agent #20 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac20(void);
/* Creation of agent #21 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac21(void);
/* Creation of agent #22 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac22(void);
/* Creation of agent #23 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac23(T0* a1);
/* Creation of agent #24 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac24(void);
/* Creation of agent #25 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac25(T0* a1);
/* Creation of agent #26 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac26(void);
/* Creation of agent #27 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac27(T0* a1);
/* Creation of agent #28 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac28(void);
/* Creation of agent #29 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac29(T0* a1);
/* Creation of agent #30 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac30(void);
/* Creation of agent #31 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f231ac31(T1 a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.process_class */
extern void T490f6(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.internal_process_class */
extern void T490f8(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_providers_validity */
extern void T490f10(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].go_after */
extern void T1330f11(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].cursor_go_after */
extern void T880f73(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_interface_error */
extern T1 T470f40(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.interface_checked */
extern T1 T470f39(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_suppliers_validity */
extern void T490f9(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.set_fatal_error */
extern void T490f7(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.error_handler */
extern T0* T490f3(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.current_system */
extern T0* T490f4(GE_context* ac, T0* C);
/* ET_CLASS.unset_implementation_error */
extern void T82f251(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.process_class */
extern void T489f8(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.internal_process_class */
extern void T489f10(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_parents_validity */
extern void T489f13(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_type_validity */
extern void T1329f3(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_formal_parameters_validity */
extern void T489f12(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.check_qualified_anchored_signatures_validity */
extern void T489f11(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_signatures_validity */
extern void T1328f5(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_feature_signatures_validity */
extern void T1328f6(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.set_fatal_error */
extern void T489f9(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.error_handler */
extern T0* T489f5(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.current_system */
extern T0* T489f6(GE_context* ac, T0* C);
/* ET_CLASS.unset_interface_error */
extern void T82f250(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.process_class */
extern void T488f7(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.internal_process_class */
extern void T488f9(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_signatures_validity */
extern void T488f12(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_feature_signatures_validity */
extern void T488f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_type_validity */
extern void T1327f3(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_parents_validity */
extern void T488f11(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_formal_parameters_validity */
extern void T488f10(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.set_fatal_error */
extern void T488f8(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.error_handler */
extern T0* T488f4(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.current_system */
extern T0* T488f5(GE_context* ac, T0* C);
/* ET_CLASS.unset_flattening_error */
extern void T82f249(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.process_class */
extern void T487f7(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.internal_process_class */
extern void T487f9(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_parents_validity */
extern void T487f11(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_type_validity */
extern void T1326f3(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_formal_parameters_validity */
extern void T487f10(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.set_fatal_error */
extern void T487f8(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.error_handler */
extern T0* T487f4(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.current_system */
extern T0* T487f5(GE_context* ac, T0* C);
/* ET_CLASS.unset_ancestors_error */
extern void T82f248(GE_context* ac, T0* C);
/* ET_CLASS.not_implementation_checked */
extern T1 T82f133(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_interface_checked */
extern void T82f247(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.reset_after_interface_checked */
extern void T266f13(GE_context* ac, T0* C);
/* ET_QUERY_LIST.reset_after_interface_checked */
extern void T265f13(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_features_flattened */
extern void T82f246(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.reset_after_features_flattened */
extern void T266f12(GE_context* ac, T0* C);
/* ET_QUERY_LIST.reset_after_features_flattened */
extern void T265f12(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_ancestors_built */
extern void T82f245(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_classes_do_unless_actual */
extern void T470f67(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_non_override_classes_do_unless_actual */
extern void T470f81(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_override_classes_do_unless_actual */
extern void T470f80(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.make */
extern T0* T490c5(GE_context* ac);
/* ET_IMPLEMENTATION_STATUS_CHECKER.tokens */
extern T0* T490f2(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern T0* T489c7(GE_context* ac);
/* ET_CLASS_TYPE_STATUS_CHECKER3.make */
extern T0* T1329c2(GE_context* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.make */
extern T0* T1328c4(GE_context* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.tokens */
extern T0* T1328f3(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern void T489f7p1(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.tokens */
extern T0* T489f4(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern T0* T488c6(GE_context* ac);
/* ET_CLASS_TYPE_STATUS_CHECKER2.make */
extern T0* T1327c2(GE_context* ac);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern void T488f6p1(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.tokens */
extern T0* T488f3(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern T0* T487c6(GE_context* ac);
/* ET_CLASS_TYPE_STATUS_CHECKER1.make */
extern T0* T1326c2(GE_context* ac);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern void T487f6p1(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.tokens */
extern T0* T487f3(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.master_classes_do_recursive */
extern void T70f294(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.master_classes_do_recursive */
extern T0* T70f294ac1(T0* a1);
/* ET_LACE_SYSTEM.classes_modified_recursive */
extern T1 T70f155(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T70f155ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T70f155ac2(T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T70f155ac3(void);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T70f155ac4(T0* a1);
/* KL_AGENT_ROUTINES [ANY].call */
extern void T790f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.master_classes_do_if_recursive_until */
extern void T70f299(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T70f299ac1(T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T70f299ac2(T0* a1, T0* a2, T0* a3);
/* ET_LACE_SYSTEM.any_actions */
extern unsigned char ge286os3719;
extern T0* ge286ov3719;
extern T0* T70f178(GE_context* ac, T0* C);
/* KL_AGENT_ROUTINES [ANY].default_create */
extern T0* T790c1(GE_context* ac);
/* UT_TRISTATE.make_false */
extern T0* T789c5(GE_context* ac);
/* ET_LACE_SYSTEM.import_classes */
extern void T70f230(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T70f230ac1(void);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T70f230ac2(T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T70f230ac3(T0* a1);
/* ET_LACE_SYSTEM.parse_all */
extern void T70f286(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.parse_all */
extern T0* T70f286ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.parse_all */
extern T0* T70f286ac2(void);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.parse_all */
extern T0* T70f286ac3(void);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.parse_all */
extern T0* T70f286ac4(T0* a1);
/* ET_LACE_CLUSTERS.do_all */
extern void T213f8(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_recursive */
extern void T189f7(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_LIBRARIES.do_recursive */
extern T0* T189f7ac1(T0* a1);
/* ET_ECF_LIBRARY.add_library_recursive */
extern void T188f193(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_library_recursive */
extern T0* T188f193ac1(T0* a1);
/* DS_HASH_SET [ET_LIBRARY].force_last */
extern void T623f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].slots_put */
extern void T623f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_LIBRARY].clashes_put */
extern void T623f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_LIBRARY].slots_item */
extern T6 T623f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].hash_position */
extern T6 T623f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].resize */
extern void T623f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].clashes_resize */
extern void T623f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].special_integer_ */
extern T0* T623f27(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].key_storage_resize */
extern void T623f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_resize */
extern void T623f45(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].aliased_resized_area */
extern T0* T1366f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIBRARY].aliased_resized_area */
extern T0* T1367f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].key_storage_item */
extern T0* T623f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_item */
extern T0* T623f17(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].clashes_item */
extern T6 T623f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].slots_resize */
extern void T623f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].new_modulus */
extern T6 T623f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].new_capacity */
extern T6 T623f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_put */
extern void T623f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].force */
extern void T1366f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LIBRARY].fill_with */
extern void T1367f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIBRARY].extend */
extern void T1367f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].search_position */
extern void T623f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].key_equality_tester */
extern T0* T623f25(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].unset_found_item */
extern void T623f36(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].has */
extern T1 T623f18(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.add_library_recursive */
extern void T459f167(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_library_recursive */
extern T0* T459f167ac1(T0* a1);
/* DS_HASH_SET [ET_LIBRARY].do_all */
extern void T623f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].make */
extern T0* T623c30(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].set_internal_cursor */
extern void T623f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].new_cursor */
extern T0* T623f24(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_LIBRARY].make */
extern T0* T1365c4(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].make_slots */
extern void T623f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_clashes */
extern void T623f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_key_storage */
extern void T623f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_item_storage */
extern void T623f32(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].make */
extern T0* T1366f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LIBRARY].make_empty */
extern T0* T1367c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].default_create */
extern T0* T1366c3(GE_context* ac);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern void T196f7(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern T0* T196f7ac1(T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assemblies */
extern void T788f4(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T446f4(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_ASSEMBLIES.count */
extern T6 T446f3(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].do_all */
extern void T445f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make */
extern T0* T445c30(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T445f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T445f17(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY].make */
extern T0* T1309c4(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_slots */
extern void T445f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_clashes */
extern void T445f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_key_storage */
extern void T445f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_item_storage */
extern void T445f33(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.compile_degree_5 */
extern void T70f219(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.compile_degree_5 */
extern T0* T70f219ac1(T0* a1);
/* ET_ECF_SYSTEM.compile_all */
extern void T64f195(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.compile_degree_3 */
extern void T64f220(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.compile_degree_3 */
extern T0* T64f220ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.compile_degree_3 */
extern T0* T64f220ac2(void);
extern T1 T64f220ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.classes_do_if_recursive_until */
extern void T64f238(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_if_recursive_until */
extern T0* T64f238ac1(T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_do_if_recursive_until */
extern T0* T64f238ac2(T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.universes_do_recursive_until */
extern void T64f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.compile_degree_4 */
extern void T64f219(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.compile_degree_4 */
extern T0* T64f219ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.compile_degree_4 */
extern T0* T64f219ac2(void);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.compile_degree_4 */
extern T0* T64f219ac3(T0* a1);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.compile_degree_4 */
extern T0* T64f219ac4(void);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.compile_degree_4 */
extern T0* T64f219ac5(T0* a1);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.compile_degree_4 */
extern T0* T64f219ac6(void);
/* ET_ECF_SYSTEM.parsed_class_count_recursive */
extern T6 T64f167(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.parsed_class_count_recursive */
extern T0* T64f167ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.parsed_class_count_recursive */
extern T0* T64f167ac2(T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.parsed_class_count_recursive */
extern T0* T64f167ac3(void);
/* ET_ECF_SYSTEM.classes_do_if_recursive */
extern void T64f246(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_if_recursive */
extern T0* T64f246ac1(T0* a1, T0* a2);
/* ET_ECF_SYSTEM.class_actions */
extern T0* T64f160(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.check_provider_validity */
extern void T64f218(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.check_provider_validity */
extern T0* T64f218ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.check_provider_validity */
extern T0* T64f218ac2(void);
/* ET_ECF_SYSTEM.parse_all_recursive */
extern void T64f217(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.build_scm_write_mappings */
extern void T64f224(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.build_scm_write_mappings */
extern T0* T64f224ac1(T0* a1);
/* ET_ECF_SYSTEM.build_scm_write_mapping */
extern void T64f242(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern void T64f241(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern T0* T64f241ac1(T0* a1);
/* ET_ECF_SYSTEM.internal_universes_do_recursive */
extern void T64f225(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.add_internal_universe_recursive */
extern void T64f243(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.add_internal_universe_recursive */
extern T0* T64f243ac1(T0* a1);
/* ET_ECF_SYSTEM.build_scm_read_mappings */
extern void T64f223(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.build_scm_read_mappings */
extern T0* T64f223ac1(T0* a1);
/* ET_ECF_SYSTEM.build_scm_read_mapping */
extern void T64f240(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.check_master_class_validity */
extern void T64f222(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.check_master_class_validity */
extern T0* T64f222ac1(T0* a1);
/* ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern void T64f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T64f239ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T64f239ac2(T0* a1, T0* a2);
/* ET_ECF_SYSTEM.parse_all_recursive */
extern void T64f217p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T64f217p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T64f217p1ac2(void);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T64f217p1ac3(T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T64f217p1ac4(T0* a1);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T64f217p1ac5(void);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T64f217p1ac6(void);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T64f217p1ac7(void);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T64f217p1ac8(void);
/* ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern void T64f228(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac1(void);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac2(T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac3(void);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac4(void);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac5(void);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac6(void);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac7(void);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac8(void);
/* Creation of agent #9 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac9(void);
/* Creation of agent #10 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac10(void);
/* Creation of agent #11 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac11(void);
/* Creation of agent #12 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac12(void);
/* Creation of agent #13 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac13(void);
/* Creation of agent #14 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac14(void);
/* Creation of agent #15 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac15(void);
/* Creation of agent #16 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac16(void);
/* Creation of agent #17 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac17(void);
/* Creation of agent #18 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac18(void);
/* Creation of agent #19 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac19(void);
/* Creation of agent #20 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac20(void);
/* Creation of agent #21 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac21(void);
/* Creation of agent #22 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac22(void);
/* Creation of agent #23 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac23(T0* a1);
/* Creation of agent #24 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac24(void);
/* Creation of agent #25 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac25(T0* a1);
/* Creation of agent #26 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac26(void);
/* Creation of agent #27 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac27(T0* a1);
/* Creation of agent #28 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac28(void);
/* Creation of agent #29 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac29(T0* a1);
/* Creation of agent #30 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac30(void);
/* Creation of agent #31 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f228ac31(T1 a1);
/* ET_ECF_SYSTEM.master_classes_do_recursive */
extern void T64f245(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_recursive */
extern T0* T64f245ac1(T0* a1);
/* ET_ECF_SYSTEM.classes_modified_recursive */
extern T1 T64f170(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T64f170ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T64f170ac2(T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T64f170ac3(void);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T64f170ac4(T0* a1);
/* ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern void T64f303(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T64f303ac1(T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T64f303ac2(T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.any_actions */
extern T0* T64f162(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.import_classes */
extern void T64f227(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T64f227ac1(void);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T64f227ac2(T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T64f227ac3(T0* a1);
/* ET_ECF_SYSTEM.parse_all */
extern void T64f237(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.parse_all */
extern T0* T64f237ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.parse_all */
extern T0* T64f237ac2(void);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.parse_all */
extern T0* T64f237ac3(void);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.parse_all */
extern T0* T64f237ac4(T0* a1);
/* ET_ECF_SYSTEM.compile_degree_5 */
extern void T64f216(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.compile_degree_5 */
extern T0* T64f216ac1(T0* a1);
/* ET_XACE_SYSTEM.compile_all */
extern void T61f192(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.compile_degree_3 */
extern void T61f231(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.compile_degree_3 */
extern T0* T61f231ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.compile_degree_3 */
extern T0* T61f231ac2(void);
extern T1 T61f231ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM.classes_do_if_recursive_until */
extern void T61f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_if_recursive_until */
extern T0* T61f296ac1(T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_do_if_recursive_until */
extern T0* T61f296ac2(T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM.universes_do_recursive_until */
extern void T61f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.compile_degree_4 */
extern void T61f230(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T61f230ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T61f230ac2(void);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T61f230ac3(T0* a1);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T61f230ac4(void);
/* Creation of agent #5 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T61f230ac5(T0* a1);
/* Creation of agent #6 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T61f230ac6(void);
/* ET_XACE_SYSTEM.parsed_class_count_recursive */
extern T6 T61f180(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.parsed_class_count_recursive */
extern T0* T61f180ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.parsed_class_count_recursive */
extern T0* T61f180ac2(T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.parsed_class_count_recursive */
extern T0* T61f180ac3(void);
/* ET_XACE_SYSTEM.classes_do_if_recursive */
extern void T61f304(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_if_recursive */
extern T0* T61f304ac1(T0* a1, T0* a2);
/* ET_XACE_SYSTEM.class_actions */
extern T0* T61f179(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.check_provider_validity */
extern void T61f229(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.check_provider_validity */
extern T0* T61f229ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.check_provider_validity */
extern T0* T61f229ac2(void);
/* ET_XACE_SYSTEM.parse_all_recursive */
extern void T61f228(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.build_scm_write_mappings */
extern void T61f235(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.build_scm_write_mappings */
extern T0* T61f235ac1(T0* a1);
/* ET_XACE_SYSTEM.build_scm_write_mapping */
extern void T61f300(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.clusters_do_explicit_recursive */
extern void T61f299(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.clusters_do_explicit_recursive */
extern T0* T61f299ac1(T0* a1);
/* ET_XACE_SYSTEM.internal_universes_do_recursive */
extern void T61f236(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.add_internal_universe_recursive */
extern void T61f301(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.add_internal_universe_recursive */
extern T0* T61f301ac1(T0* a1);
/* ET_XACE_SYSTEM.build_scm_read_mappings */
extern void T61f234(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.build_scm_read_mappings */
extern T0* T61f234ac1(T0* a1);
/* ET_XACE_SYSTEM.build_scm_read_mapping */
extern void T61f298(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.check_master_class_validity */
extern void T61f233(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.check_master_class_validity */
extern T0* T61f233ac1(T0* a1);
/* ET_XACE_SYSTEM.master_classes_do_recursive_until */
extern void T61f297(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T61f297ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T61f297ac2(T0* a1, T0* a2);
/* ET_XACE_SYSTEM.parse_all_recursive */
extern void T61f228p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T61f228p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T61f228p1ac2(void);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T61f228p1ac3(T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T61f228p1ac4(T0* a1);
/* Creation of agent #5 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T61f228p1ac5(void);
/* Creation of agent #6 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T61f228p1ac6(void);
/* Creation of agent #7 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T61f228p1ac7(void);
/* Creation of agent #8 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T61f228p1ac8(void);
/* ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern void T61f239(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac1(void);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac2(T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac3(void);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac4(void);
/* Creation of agent #5 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac5(void);
/* Creation of agent #6 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac6(void);
/* Creation of agent #7 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac7(void);
/* Creation of agent #8 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac8(void);
/* Creation of agent #9 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac9(void);
/* Creation of agent #10 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac10(void);
/* Creation of agent #11 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac11(void);
/* Creation of agent #12 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac12(void);
/* Creation of agent #13 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac13(void);
/* Creation of agent #14 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac14(void);
/* Creation of agent #15 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac15(void);
/* Creation of agent #16 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac16(void);
/* Creation of agent #17 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac17(void);
/* Creation of agent #18 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac18(void);
/* Creation of agent #19 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac19(void);
/* Creation of agent #20 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac20(void);
/* Creation of agent #21 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac21(void);
/* Creation of agent #22 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac22(void);
/* Creation of agent #23 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac23(T0* a1);
/* Creation of agent #24 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac24(void);
/* Creation of agent #25 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac25(T0* a1);
/* Creation of agent #26 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac26(void);
/* Creation of agent #27 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac27(T0* a1);
/* Creation of agent #28 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac28(void);
/* Creation of agent #29 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac29(T0* a1);
/* Creation of agent #30 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac30(void);
/* Creation of agent #31 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f239ac31(T1 a1);
/* ET_XACE_SYSTEM.master_classes_do_recursive */
extern void T61f303(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.master_classes_do_recursive */
extern T0* T61f303ac1(T0* a1);
/* ET_XACE_SYSTEM.classes_modified_recursive */
extern T1 T61f165(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T61f165ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T61f165ac2(T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T61f165ac3(void);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T61f165ac4(T0* a1);
/* ET_XACE_SYSTEM.master_classes_do_if_recursive_until */
extern void T61f307(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T61f307ac1(T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T61f307ac2(T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM.any_actions */
extern T0* T61f181(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.import_classes */
extern void T61f238(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.import_classes */
extern T0* T61f238ac1(void);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.import_classes */
extern T0* T61f238ac2(T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.import_classes */
extern T0* T61f238ac3(T0* a1);
/* ET_XACE_SYSTEM.parse_all */
extern void T61f295(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.parse_all */
extern T0* T61f295ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.parse_all */
extern T0* T61f295ac2(void);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.parse_all */
extern T0* T61f295ac3(void);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.parse_all */
extern T0* T61f295ac4(T0* a1);
/* ET_XACE_CLUSTERS.do_all */
extern void T411f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.compile_degree_5 */
extern void T61f227(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.compile_degree_5 */
extern T0* T61f227ac1(T0* a1);
/* ET_LACE_SYSTEM.classes_do_recursive_until */
extern void T70f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_recursive_until */
extern T0* T70f197ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_do_recursive_until */
extern T0* T70f197ac2(T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_recursive_until */
extern void T64f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T64f196ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T64f196ac2(T0* a1, T0* a2);
/* ET_XACE_SYSTEM.classes_do_recursive_until */
extern void T61f193(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_recursive_until */
extern T0* T61f193ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_do_recursive_until */
extern T0* T61f193ac2(T0* a1, T0* a2);
/* ET_LACE_SYSTEM.activate_processors */
extern void T70f199(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.make */
extern T0* T439c942(GE_context* ac);
/* ET_EIFFEL_PARSER.make_parser_skeleton */
extern void T439f945(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_build_parser_tables */
extern void T439f950(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yycheck_template */
extern unsigned char ge1024os23750;
extern T0* ge1024ov23750;
extern T0* T439f667(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yyfixed_array */
extern T0* T439f907(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_36 */
extern void T439f2062(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyarray_subcopy */
extern void T439f2110(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.integer_array_ */
extern T0* T439f928(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yycheck_template_35 */
extern void T439f2061(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_34 */
extern void T439f2060(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_33 */
extern void T439f2059(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_32 */
extern void T439f2058(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_31 */
extern void T439f2057(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_30 */
extern void T439f2056(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_29 */
extern void T439f2055(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_28 */
extern void T439f2054(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_27 */
extern void T439f2053(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_26 */
extern void T439f2052(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_25 */
extern void T439f2051(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_24 */
extern void T439f2050(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_23 */
extern void T439f2049(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_22 */
extern void T439f2048(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_21 */
extern void T439f2047(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_20 */
extern void T439f2046(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_19 */
extern void T439f2045(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_18 */
extern void T439f2044(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_17 */
extern void T439f2043(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_16 */
extern void T439f2042(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_15 */
extern void T439f2041(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_14 */
extern void T439f2040(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_13 */
extern void T439f2039(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_12 */
extern void T439f2038(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_11 */
extern void T439f2037(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_10 */
extern void T439f2036(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_9 */
extern void T439f2035(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_8 */
extern void T439f2034(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_7 */
extern void T439f2033(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_6 */
extern void T439f2032(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_5 */
extern void T439f2031(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_4 */
extern void T439f2030(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_3 */
extern void T439f2029(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_2 */
extern void T439f2028(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_1 */
extern void T439f2027(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template */
extern unsigned char ge1024os23713;
extern T0* ge1024ov23713;
extern T0* T439f665(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytable_template_36 */
extern void T439f2026(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_35 */
extern void T439f2025(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_34 */
extern void T439f2024(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_33 */
extern void T439f2023(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_32 */
extern void T439f2022(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_31 */
extern void T439f2021(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_30 */
extern void T439f2020(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_29 */
extern void T439f2019(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_28 */
extern void T439f2018(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_27 */
extern void T439f2017(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_26 */
extern void T439f2016(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_25 */
extern void T439f2015(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_24 */
extern void T439f2014(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_23 */
extern void T439f2013(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_22 */
extern void T439f2012(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_21 */
extern void T439f2011(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_20 */
extern void T439f2010(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_19 */
extern void T439f2009(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_18 */
extern void T439f2008(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_17 */
extern void T439f2007(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_16 */
extern void T439f2006(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_15 */
extern void T439f2005(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_14 */
extern void T439f2004(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_13 */
extern void T439f2003(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_12 */
extern void T439f2002(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_11 */
extern void T439f2001(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_10 */
extern void T439f2000(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_9 */
extern void T439f1999(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_8 */
extern void T439f1998(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_7 */
extern void T439f1997(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_6 */
extern void T439f1996(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_5 */
extern void T439f1995(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_4 */
extern void T439f1994(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_3 */
extern void T439f1993(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_2 */
extern void T439f1992(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_1 */
extern void T439f1991(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template */
extern unsigned char ge1024os23710;
extern T0* ge1024ov23710;
extern T0* T439f663(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yypgoto_template_2 */
extern void T439f1990(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template_1 */
extern void T439f1989(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template */
extern unsigned char ge1024os23700;
extern T0* ge1024ov23700;
extern T0* T439f661(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yypact_template_9 */
extern void T439f1988(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_8 */
extern void T439f1987(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_7 */
extern void T439f1986(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_6 */
extern void T439f1985(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_5 */
extern void T439f1984(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_4 */
extern void T439f1983(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_3 */
extern void T439f1982(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_2 */
extern void T439f1981(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_1 */
extern void T439f1980(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template */
extern unsigned char ge1024os23697;
extern T0* ge1024ov23697;
extern T0* T439f659(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yydefgoto_template_2 */
extern void T439f1979(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template_1 */
extern void T439f1978(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template */
extern unsigned char ge1024os23687;
extern T0* ge1024ov23687;
extern T0* T439f657(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yydefact_template_9 */
extern void T439f1977(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_8 */
extern void T439f1976(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_7 */
extern void T439f1975(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_6 */
extern void T439f1974(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_5 */
extern void T439f1973(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_4 */
extern void T439f1972(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_3 */
extern void T439f1971(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_2 */
extern void T439f1970(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_1 */
extern void T439f1969(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes2_template */
extern unsigned char ge1024os23686;
extern T0* ge1024ov23686;
extern T0* T439f655(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template */
extern unsigned char ge1024os23676;
extern T0* ge1024ov23676;
extern T0* T439f653(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template_9 */
extern void T439f1968(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_8 */
extern void T439f1967(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_7 */
extern void T439f1966(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_6 */
extern void T439f1965(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_5 */
extern void T439f1964(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_4 */
extern void T439f1963(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_3 */
extern void T439f1962(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_2 */
extern void T439f1961(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_1 */
extern void T439f1960(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template */
extern unsigned char ge1024os23670;
extern T0* ge1024ov23670;
extern T0* T439f651(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yyr1_template_5 */
extern void T439f1959(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_4 */
extern void T439f1958(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_3 */
extern void T439f1957(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_2 */
extern void T439f1956(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_1 */
extern void T439f1955(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytranslate_template */
extern unsigned char ge1024os23667;
extern T0* ge1024ov23667;
extern T0* T439f643(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytranslate_template_2 */
extern void T439f1954(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytranslate_template_1 */
extern void T439f1953(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_create_value_stacks */
extern void T439f949(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].make */
extern T0* T1189f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WRITABLE].make_empty */
extern T0* T1190c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].default_create */
extern T0* T1189c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].make */
extern T0* T1186f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].make_empty */
extern T0* T1188c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].default_create */
extern T0* T1186c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].make */
extern T0* T1180f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].make_empty */
extern T0* T1182c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].default_create */
extern T0* T1180c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].make */
extern T0* T1177f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].make_empty */
extern T0* T1179c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].default_create */
extern T0* T1177c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].make */
extern T0* T1171f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].make_empty */
extern T0* T1173c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].default_create */
extern T0* T1171c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].make */
extern T0* T1168f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].make_empty */
extern T0* T1170c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].default_create */
extern T0* T1168c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].make */
extern T0* T1166f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].make_empty */
extern T0* T1167c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].default_create */
extern T0* T1166c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make */
extern T0* T1160f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make_empty */
extern T0* T1162c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].default_create */
extern T0* T1160c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].make */
extern T0* T1158f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].make_empty */
extern T0* T1159c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].default_create */
extern T0* T1158c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].make */
extern T0* T1156f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].make_empty */
extern T0* T1157c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].default_create */
extern T0* T1156c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].make */
extern T0* T1152f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].make_empty */
extern T0* T1153c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].default_create */
extern T0* T1152c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T1149f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].make_empty */
extern T0* T1151c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].default_create */
extern T0* T1149c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].make */
extern T0* T1146f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].make_empty */
extern T0* T1148c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].default_create */
extern T0* T1146c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].make */
extern T0* T1144f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].make_empty */
extern T0* T1145c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].default_create */
extern T0* T1144c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].make */
extern T0* T1141f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].make_empty */
extern T0* T1143c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].default_create */
extern T0* T1141c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].make */
extern T0* T1135f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].make_empty */
extern T0* T1137c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].default_create */
extern T0* T1135c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].make */
extern T0* T1132f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].make_empty */
extern T0* T1134c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].default_create */
extern T0* T1132c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T1130f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].make_empty */
extern T0* T1131c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].default_create */
extern T0* T1130c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].make */
extern T0* T1124f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].make_empty */
extern T0* T1126c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].default_create */
extern T0* T1124c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].make */
extern T0* T1121f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].make_empty */
extern T0* T1123c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].default_create */
extern T0* T1121c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T1119f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].make_empty */
extern T0* T1120c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].default_create */
extern T0* T1119c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].make */
extern T0* T1117f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].make_empty */
extern T0* T1118c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].default_create */
extern T0* T1117c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].make */
extern T0* T1111f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].make_empty */
extern T0* T1113c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].default_create */
extern T0* T1111c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].make */
extern T0* T1108f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].make_empty */
extern T0* T1110c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].default_create */
extern T0* T1108c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].make */
extern T0* T1105f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].make_empty */
extern T0* T1107c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].default_create */
extern T0* T1105c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].make */
extern T0* T1102f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM].make_empty */
extern T0* T1104c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].default_create */
extern T0* T1102c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].make */
extern T0* T1099f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_ITEM].make_empty */
extern T0* T1101c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].default_create */
extern T0* T1099c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].make */
extern T0* T1096f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_LIST].make_empty */
extern T0* T1098c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].default_create */
extern T0* T1096c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].make */
extern T0* T1093f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].make_empty */
extern T0* T1095c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].default_create */
extern T0* T1093c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].make */
extern T0* T1091f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].make_empty */
extern T0* T1092c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].default_create */
extern T0* T1091c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T1083f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].make_empty */
extern T0* T1084c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].default_create */
extern T0* T1083c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].make */
extern T0* T1078f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].make_empty */
extern T0* T1079c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].default_create */
extern T0* T1078c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].make */
extern T0* T1070f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].make_empty */
extern T0* T1072c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].default_create */
extern T0* T1070c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].make */
extern T0* T1067f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].make_empty */
extern T0* T1069c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].default_create */
extern T0* T1067c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].make */
extern T0* T1061f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].make_empty */
extern T0* T1063c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].default_create */
extern T0* T1061c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].make */
extern T0* T1059f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].make_empty */
extern T0* T1060c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].default_create */
extern T0* T1059c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].make */
extern T0* T1057f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].make_empty */
extern T0* T1058c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].default_create */
extern T0* T1057c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].make */
extern T0* T1051f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].make_empty */
extern T0* T1053c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].default_create */
extern T0* T1051c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].make */
extern T0* T1045f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].make_empty */
extern T0* T1047c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].default_create */
extern T0* T1045c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].make */
extern T0* T1043f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].make_empty */
extern T0* T1044c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].default_create */
extern T0* T1043c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].make */
extern T0* T1038f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].make_empty */
extern T0* T1039c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].default_create */
extern T0* T1038c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].make */
extern T0* T1035f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].make_empty */
extern T0* T1037c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].default_create */
extern T0* T1035c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].make */
extern T0* T1029f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].make_empty */
extern T0* T1031c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].default_create */
extern T0* T1029c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T1026f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].make_empty */
extern T0* T1028c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].default_create */
extern T0* T1026c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].make */
extern T0* T1023f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].make_empty */
extern T0* T1025c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].default_create */
extern T0* T1023c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T1020f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T1022c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T1020c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].make */
extern T0* T1014f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].make_empty */
extern T0* T1016c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].default_create */
extern T0* T1014c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].make */
extern T0* T1012f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].make_empty */
extern T0* T1013c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].default_create */
extern T0* T1012c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].make */
extern T0* T1009f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].make_empty */
extern T0* T1011c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].default_create */
extern T0* T1009c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].make */
extern T0* T1002f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].make_empty */
extern T0* T1004c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].default_create */
extern T0* T1002c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].make */
extern T0* T996f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].make_empty */
extern T0* T998c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].default_create */
extern T0* T996c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].make */
extern T0* T993f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].make_empty */
extern T0* T995c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].default_create */
extern T0* T993c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].make */
extern T0* T990f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].make_empty */
extern T0* T992c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].default_create */
extern T0* T990c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].make */
extern T0* T987f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].make_empty */
extern T0* T989c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].default_create */
extern T0* T987c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].make */
extern T0* T984f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].make_empty */
extern T0* T986c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].default_create */
extern T0* T984c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_ARGUMENT_LIST].make */
extern T0* T981f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_ARGUMENT_LIST].make_empty */
extern T0* T983c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_ARGUMENT_LIST].default_create */
extern T0* T981c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].make */
extern T0* T978f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].make_empty */
extern T0* T980c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].default_create */
extern T0* T978c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].make */
extern T0* T974f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].make_empty */
extern T0* T975c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].default_create */
extern T0* T974c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T971f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make_empty */
extern T0* T973c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].default_create */
extern T0* T971c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T966f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].make_empty */
extern T0* T967c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].default_create */
extern T0* T966c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T964f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T965c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T964c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T962f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].make_empty */
extern T0* T963c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T962c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].make */
extern T0* T959f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].make_empty */
extern T0* T961c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].default_create */
extern T0* T959c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].make */
extern T0* T956f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].make_empty */
extern T0* T958c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].default_create */
extern T0* T956c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].make */
extern T0* T953f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].make_empty */
extern T0* T955c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].default_create */
extern T0* T953c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].make */
extern T0* T951f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].make_empty */
extern T0* T952c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].default_create */
extern T0* T951c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].make */
extern T0* T948f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].make_empty */
extern T0* T950c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].default_create */
extern T0* T948c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].make */
extern T0* T945f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].make_empty */
extern T0* T947c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].default_create */
extern T0* T945c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].make */
extern T0* T942f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].make_empty */
extern T0* T944c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].default_create */
extern T0* T942c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].make */
extern T0* T939f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].make_empty */
extern T0* T941c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].default_create */
extern T0* T939c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].make */
extern T0* T937f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].make_empty */
extern T0* T938c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].default_create */
extern T0* T937c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].make */
extern T0* T934f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].make_empty */
extern T0* T936c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].default_create */
extern T0* T934c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].make */
extern T0* T932f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].make_empty */
extern T0* T933c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].default_create */
extern T0* T932c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].make */
extern T0* T929f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].make_empty */
extern T0* T931c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].default_create */
extern T0* T929c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].make */
extern T0* T926f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].make_empty */
extern T0* T928c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].default_create */
extern T0* T926c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].make */
extern T0* T923f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].make_empty */
extern T0* T925c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].default_create */
extern T0* T923c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].make */
extern T0* T921f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].make_empty */
extern T0* T922c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].default_create */
extern T0* T921c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].make */
extern T0* T918f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].make_empty */
extern T0* T920c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].default_create */
extern T0* T918c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].make */
extern T0* T915f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].make_empty */
extern T0* T917c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].default_create */
extern T0* T915c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].make */
extern T0* T912f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].make_empty */
extern T0* T914c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].default_create */
extern T0* T912c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].make */
extern T0* T910f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].make_empty */
extern T0* T911c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].default_create */
extern T0* T910c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].make */
extern T0* T908f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL].make_empty */
extern T0* T909c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].default_create */
extern T0* T908c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].make */
extern T0* T905f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].make_empty */
extern T0* T907c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].default_create */
extern T0* T905c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].make */
extern T0* T902f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].make_empty */
extern T0* T904c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].default_create */
extern T0* T902c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].make */
extern T0* T900f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD].make_empty */
extern T0* T901c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].default_create */
extern T0* T900c3(GE_context* ac);
/* ET_EIFFEL_PARSER.make_eiffel_scanner */
extern void T439f944(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.make_with_buffer */
extern void T439f948(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T439f954(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T439f954p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_build_tables */
extern void T439f970(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_acclist_template */
extern unsigned char ge1028os24463;
extern T0* ge1028ov24463;
extern T0* T439f675(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_fixed_array */
extern T0* T439f909(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_3 */
extern void T439f2106(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_array_subcopy */
extern void T439f2111(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.yy_acclist_template_2 */
extern void T439f2105(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_1 */
extern void T439f2104(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template */
extern unsigned char ge1028os24459;
extern T0* ge1028ov24459;
extern T0* T439f674(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_accept_template_3 */
extern void T439f2103(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template_2 */
extern void T439f2102(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template_1 */
extern void T439f2101(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_meta_template */
extern unsigned char ge1028os24458;
extern T0* ge1028ov24458;
extern T0* T439f673(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template */
extern unsigned char ge1028os24455;
extern T0* ge1028ov24455;
extern T0* T439f672(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template_2 */
extern void T439f2100(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_1 */
extern void T439f2099(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template */
extern unsigned char ge1028os24451;
extern T0* ge1028ov24451;
extern T0* T439f671(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_def_template_3 */
extern void T439f2098(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template_2 */
extern void T439f2097(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template_1 */
extern void T439f2096(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template */
extern unsigned char ge1028os24447;
extern T0* ge1028ov24447;
extern T0* T439f670(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_base_template_3 */
extern void T439f2095(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template_2 */
extern void T439f2094(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template_1 */
extern void T439f2093(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template */
extern unsigned char ge1028os24431;
extern T0* ge1028ov24431;
extern T0* T439f669(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template_15 */
extern void T439f2092(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_14 */
extern void T439f2091(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_13 */
extern void T439f2090(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_12 */
extern void T439f2089(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_11 */
extern void T439f2088(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_10 */
extern void T439f2087(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_9 */
extern void T439f2086(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_8 */
extern void T439f2085(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_7 */
extern void T439f2084(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_6 */
extern void T439f2083(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_5 */
extern void T439f2082(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_4 */
extern void T439f2081(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_3 */
extern void T439f2080(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_2 */
extern void T439f2079(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_1 */
extern void T439f2078(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template */
extern unsigned char ge1028os24415;
extern T0* ge1028ov24415;
extern T0* T439f668(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_nxt_template_15 */
extern void T439f2077(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_14 */
extern void T439f2076(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_13 */
extern void T439f2075(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_12 */
extern void T439f2074(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_11 */
extern void T439f2073(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_10 */
extern void T439f2072(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_9 */
extern void T439f2071(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_8 */
extern void T439f2070(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_7 */
extern void T439f2069(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_6 */
extern void T439f2068(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_5 */
extern void T439f2067(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_4 */
extern void T439f2066(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_3 */
extern void T439f2065(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_2 */
extern void T439f2064(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_1 */
extern void T439f2063(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.empty_buffer */
extern T0* T439f601(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T897c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].set_internal_cursor */
extern void T897f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_cursor */
extern T0* T897f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T1481c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].make */
extern T0* T896c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].set_internal_cursor */
extern void T896f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_cursor */
extern T0* T896f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].make */
extern T0* T1480c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].make */
extern T0* T895c10(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].make */
extern T0* T1477f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].make_empty */
extern T0* T1476c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].default_create */
extern T0* T1477c3(GE_context* ac);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T894c10(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T1475f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].make_empty */
extern T0* T1474c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].default_create */
extern T0* T1475c3(GE_context* ac);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].make */
extern T0* T893c8(GE_context* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].make */
extern T0* T892c8(GE_context* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T891c9(GE_context* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T890c9(GE_context* ac, T6 a1);
/* KL_STANDARD_FILES.input */
extern unsigned char ge259os13354;
extern T0* ge259ov13354;
extern T0* T130f3(GE_context* ac, T0* C);
/* KL_STDIN_FILE.make */
extern T0* T887c12(GE_context* ac);
/* ET_EIFFEL_PARSER.std */
extern T0* T439f656(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.make */
extern void T439f942p1(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.make */
extern T0* T438c7(GE_context* ac);
/* ET_MASTER_CLASS_CHECKER.tokens */
extern T0* T438f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.make */
extern T0* T437c133(GE_context* ac);
/* ET_EIFFEL_PREPARSER.make_eiffel_scanner */
extern void T437f134(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.make_with_buffer */
extern void T437f135(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T437f136(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T437f136p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_build_tables */
extern void T437f138(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template */
extern unsigned char ge1026os22210;
extern T0* ge1026ov22210;
extern T0* T437f87(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_fixed_array */
extern T0* T437f90(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_4 */
extern void T437f165(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_array_subcopy */
extern void T437f177(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PREPARSER.integer_array_ */
extern T0* T437f55(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_3 */
extern void T437f164(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_2 */
extern void T437f163(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_1 */
extern void T437f162(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template */
extern unsigned char ge1026os22206;
extern T0* ge1026ov22206;
extern T0* T437f80(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_accept_template_3 */
extern void T437f161(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template_2 */
extern void T437f160(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template_1 */
extern void T437f159(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_meta_template */
extern unsigned char ge1026os22205;
extern T0* ge1026ov22205;
extern T0* T437f77(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template */
extern unsigned char ge1026os22202;
extern T0* ge1026ov22202;
extern T0* T437f71(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template_2 */
extern void T437f158(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_1 */
extern void T437f157(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template */
extern unsigned char ge1026os22198;
extern T0* ge1026ov22198;
extern T0* T437f69(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_def_template_3 */
extern void T437f156(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_2 */
extern void T437f155(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_1 */
extern void T437f154(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template */
extern unsigned char ge1026os22194;
extern T0* ge1026ov22194;
extern T0* T437f67(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_base_template_3 */
extern void T437f153(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template_2 */
extern void T437f152(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template_1 */
extern void T437f151(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template */
extern unsigned char ge1026os22183;
extern T0* ge1026ov22183;
extern T0* T437f58(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template_10 */
extern void T437f150(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_9 */
extern void T437f149(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_8 */
extern void T437f148(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_7 */
extern void T437f147(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_6 */
extern void T437f146(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_5 */
extern void T437f145(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_4 */
extern void T437f144(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_3 */
extern void T437f143(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_2 */
extern void T437f142(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_1 */
extern void T437f141(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template */
extern unsigned char ge1026os22172;
extern T0* ge1026ov22172;
extern T0* T437f89(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_10 */
extern void T437f175(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_9 */
extern void T437f174(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_8 */
extern void T437f173(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_7 */
extern void T437f172(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_6 */
extern void T437f171(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_5 */
extern void T437f170(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_4 */
extern void T437f169(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_3 */
extern void T437f168(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_2 */
extern void T437f167(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_1 */
extern void T437f166(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.empty_buffer */
extern T0* T437f81(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.std */
extern T0* T437f88(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.activate_processors */
extern void T64f198(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.activate_processors */
extern void T61f195(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.preparse_recursive */
extern void T70f200(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.preparse_recursive */
extern void T70f200p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T70f200p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T70f200p1ac2(void);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T70f200p1ac3(T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T70f200p1ac4(T0* a1);
/* Creation of agent #5 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T70f200p1ac5(void);
/* Creation of agent #6 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T70f200p1ac6(void);
/* Creation of agent #7 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T70f200p1ac7(void);
/* Creation of agent #8 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T70f200p1ac8(void);
/* ET_ECF_LIBRARY.preparse */
extern void T188f188(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.preparse */
extern void T188f188p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.preparse */
extern T0* T188f188p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.preparse */
extern T0* T188f188p1ac2(void);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.preparse */
extern T0* T188f188p1ac3(void);
/* Creation of agent #4 in feature ET_ECF_LIBRARY.preparse */
extern T0* T188f188p1ac4(T0* a1);
/* ET_LIBRARY.preparse */
extern void T459f162(GE_context* ac, T0* C);
/* ET_LIBRARY.preparse */
extern void T459f162p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LIBRARY.preparse */
extern T0* T459f162p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.preparse */
extern T0* T459f162p1ac2(void);
/* Creation of agent #3 in feature ET_LIBRARY.preparse */
extern T0* T459f162p1ac3(void);
/* Creation of agent #4 in feature ET_LIBRARY.preparse */
extern T0* T459f162p1ac4(T0* a1);
/* ET_LACE_SYSTEM.preparse */
extern void T70f229(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.preparse */
extern T0* T70f229ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.preparse */
extern T0* T70f229ac2(void);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.preparse */
extern T0* T70f229ac3(void);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.preparse */
extern T0* T70f229ac4(T0* a1);
/* ET_ECF_SYSTEM.preparse_recursive */
extern void T64f199(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.preparse_recursive */
extern void T64f199p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T64f199p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T64f199p1ac2(void);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T64f199p1ac3(T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T64f199p1ac4(T0* a1);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T64f199p1ac5(void);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T64f199p1ac6(void);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T64f199p1ac7(void);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T64f199p1ac8(void);
/* ET_ECF_SYSTEM.preparse */
extern void T64f226(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.preparse */
extern T0* T64f226ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.preparse */
extern T0* T64f226ac2(void);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.preparse */
extern T0* T64f226ac3(void);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.preparse */
extern T0* T64f226ac4(T0* a1);
/* ET_XACE_SYSTEM.preparse_recursive */
extern void T61f196(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.preparse_recursive */
extern void T61f196p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T61f196p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T61f196p1ac2(void);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T61f196p1ac3(T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T61f196p1ac4(T0* a1);
/* Creation of agent #5 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T61f196p1ac5(void);
/* Creation of agent #6 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T61f196p1ac6(void);
/* Creation of agent #7 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T61f196p1ac7(void);
/* Creation of agent #8 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T61f196p1ac8(void);
/* ET_XACE_SYSTEM.preparse */
extern void T61f237(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.preparse */
extern T0* T61f237ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.preparse */
extern T0* T61f237ac2(void);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.preparse */
extern T0* T61f237ac3(void);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.preparse */
extern T0* T61f237ac4(T0* a1);
/* ET_LACE_SYSTEM.print_time */
extern void T70f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.out */
extern T0* T435f9(GE_context* ac, T0* C);
/* DT_DATE_TIME_DURATION.append_to_string */
extern void T435f18(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.append_time_to_string */
extern void T435f23(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.integer_ */
extern T0* T435f14(GE_context* ac, T0* C);
/* DT_DATE_TIME_DURATION.append_date_to_string */
extern void T435f22(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.set_canonical */
extern void T435f17(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.make_canonical_from_dates */
extern void T435f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.make_precise */
extern void T435f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise */
extern T0* T435c16(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise_time_duration */
extern void T435f20(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_DATE_TIME_DURATION.make_date_duration */
extern void T435f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.days_in_current_month */
extern T6 T240f43(GE_context* ac, T0* C);
/* DT_DATE_TIME.days_in_month */
extern T6 T240f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.leap_year */
extern T1 T240f38(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.days_in_previous_month */
extern T6 T240f42(GE_context* ac, T0* C);
/* DT_DATE_TIME.is_less */
extern T1 T240f41(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.millisecond_count */
extern T6 T240f40(GE_context* ac, T0* C);
/* DT_DATE_TIME.day */
extern T6 T240f10(GE_context* ac, T0* C);
/* DT_DATE_TIME.month */
extern T6 T240f9(GE_context* ac, T0* C);
/* DT_DATE_TIME.year */
extern T6 T240f8(GE_context* ac, T0* C);
/* DT_DATE_TIME.add_duration */
extern void T240f62(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.add_milliseconds */
extern void T240f66(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_normalized_time_storage */
extern void T240f69(GE_context* ac, T0* C, T7 a1);
/* DT_DATE_TIME.add_days */
extern void T240f70(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_from_epoch_days */
extern void T240f68(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.epoch_to_y2k_days */
extern unsigned char ge337os16347;
extern T6 ge337ov16347;
extern T6 T240f46(GE_context* ac, T0* C);
/* DT_DATE_TIME.epoch_days */
extern T6 T240f11(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_days_at_month */
extern unsigned char ge337os16346;
extern T6 ge337ov16346;
extern T6 T240f24(GE_context* ac, T0* C);
/* DT_DATE_TIME.days_at_month */
extern T6 T240f23(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.epoch_leap_years */
extern unsigned char ge337os16345;
extern T6 ge337ov16345;
extern T6 T240f22(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.div */
extern T6 T231f3(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.integer_ */
extern T0* T240f21(GE_context* ac, T0* C);
/* DT_DATE_TIME.set_day */
extern void T240f67(GE_context* ac, T0* C, T6 a1);
/* INTEGER_64.to_integer */
extern T6 T7f7(GE_context* ac, T7* C);
/* DT_DATE_TIME_DURATION.millisecond_count */
extern T6 T435f15(GE_context* ac, T0* C);
/* DT_DATE_TIME.add_years_months_days */
extern void T240f65(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_time */
extern void T240f61(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.set_date */
extern void T240f60(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.tmp_date_time */
extern unsigned char ge1382os16541;
extern T0* ge1382ov16541;
extern T0* T435f8(GE_context* ac, T0* C);
/* DT_DATE_TIME.make */
extern T0* T240c59(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* DT_DATE_TIME.make_time */
extern void T240f64(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.make_date */
extern void T240f63(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.minus */
extern T0* T240f12(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.duration */
extern T0* T240f16(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.millisecond */
extern T6 T240f7(GE_context* ac, T0* C);
/* DT_DATE_TIME.second */
extern T6 T240f6(GE_context* ac, T0* C);
/* DT_DATE_TIME.minute */
extern T6 T240f5(GE_context* ac, T0* C);
/* DT_DATE_TIME.hour */
extern T6 T240f4(GE_context* ac, T0* C);
/* DT_DATE_TIME.day_count */
extern T6 T240f3(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.print_time */
extern void T64f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.print_time */
extern void T61f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.register_class */
extern void T70f296(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_id */
extern void T82f218(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.register_class */
extern void T64f300(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.register_class */
extern void T61f305(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.register_class */
extern void T33f226(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.register_inline_constant */
extern void T70f302(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.set_id */
extern void T1267f25(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.register_inline_constant */
extern void T64f306(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.register_inline_constant */
extern void T61f310(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.register_inline_constant */
extern void T33f231(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_default_create_seed */
extern void T70f313(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_default_create_seed */
extern void T64f329(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_default_create_seed */
extern void T61f322(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_default_create_seed */
extern void T33f241(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_copy_seed */
extern void T70f314(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_copy_seed */
extern void T64f330(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_copy_seed */
extern void T61f323(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_copy_seed */
extern void T33f242(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_is_equal_seed */
extern void T70f315(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_is_equal_seed */
extern void T64f331(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_is_equal_seed */
extern void T61f324(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_is_equal_seed */
extern void T33f243(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_routine_call_seed */
extern void T70f316(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_routine_call_seed */
extern void T64f332(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_routine_call_seed */
extern void T61f325(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_routine_call_seed */
extern void T33f244(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_function_item_seed */
extern void T70f317(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_function_item_seed */
extern void T64f333(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_function_item_seed */
extern void T61f326(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_function_item_seed */
extern void T33f245(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_dispose_seed */
extern void T70f318(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_dispose_seed */
extern void T64f334(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_dispose_seed */
extern void T61f327(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_dispose_seed */
extern void T33f246(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_iterable_new_cursor_seed */
extern void T70f319(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iterable_new_cursor_seed */
extern void T64f335(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_iterable_new_cursor_seed */
extern void T61f328(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iterable_new_cursor_seed */
extern void T33f247(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_iteration_cursor_after_seed */
extern void T70f320(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iteration_cursor_after_seed */
extern void T64f336(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_iteration_cursor_after_seed */
extern void T61f329(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iteration_cursor_after_seed */
extern void T33f248(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_iteration_cursor_forth_seed */
extern void T70f321(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iteration_cursor_forth_seed */
extern void T64f337(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_iteration_cursor_forth_seed */
extern void T61f330(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iteration_cursor_forth_seed */
extern void T33f249(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.register_feature */
extern void T70f301(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.register_feature */
extern void T64f305(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.register_feature */
extern void T61f309(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.register_feature */
extern void T33f230(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_throwing_exception */
extern void T119f7(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_throwing_exception */
extern void T118f7(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_throwing_exception */
extern void T117f11(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_throwing_exception */
extern void T116f7(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_throwing_exception */
extern void T115f7(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_throwing_exception */
extern void T114f7(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_throwing_exception */
extern void T113f7(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_throwing_exception */
extern void T112f7(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_throwing_exception */
extern void T111f7(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_throwing_exception */
extern void T110f7(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_throwing_exception */
extern void T109f7(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_throwing_exception */
extern void T108f7(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_throwing_exception */
extern void T107f7(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_throwing_exception */
extern void T106f7(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_throwing_exception */
extern void T105f7(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_throwing_exception */
extern void T104f7(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_throwing_exception */
extern void T103f7(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_throwing_exception */
extern void T100f10(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_throwing_exception */
extern void T99f13(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_throwing_exception */
extern void T98f8(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_throwing_exception */
extern void T97f10(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_throwing_exception */
extern void T96f8(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_throwing_exception */
extern void T95f8(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_throwing_exception */
extern void T94f11(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_throwing_exception */
extern void T92f7(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_throwing_exception */
extern void T90f11(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_throwing_exception */
extern void T88f7(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_exception_trace */
extern void T119f8(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_exception_trace */
extern void T118f8(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_exception_trace */
extern void T117f12(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_exception_trace */
extern void T116f8(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_exception_trace */
extern void T115f8(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_exception_trace */
extern void T114f8(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_exception_trace */
extern void T113f8(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_exception_trace */
extern void T112f8(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_exception_trace */
extern void T111f8(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_exception_trace */
extern void T110f8(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_exception_trace */
extern void T109f8(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_exception_trace */
extern void T108f8(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_exception_trace */
extern void T107f8(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_exception_trace */
extern void T106f8(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_exception_trace */
extern void T105f8(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_exception_trace */
extern void T104f8(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_exception_trace */
extern void T103f8(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_exception_trace */
extern void T100f11(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_exception_trace */
extern void T99f16(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_exception_trace */
extern void T98f10(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_exception_trace */
extern void T97f12(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_exception_trace */
extern void T96f10(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_exception_trace */
extern void T95f10(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_exception_trace */
extern void T94f9(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_exception_trace */
extern void T92f8(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_exception_trace */
extern void T90f12(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_exception_trace */
extern void T88f8(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_description */
extern void T119f9(GE_context* ac, T0* C, T0* a1);
/* C_STRING.set_count */
extern void T536f8(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.utf_32_string_into_utf_8_0_pointer */
extern void T534f9(GE_context* ac, T534* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_description */
extern void T118f9(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_description */
extern void T117f13(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_description */
extern void T116f9(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_description */
extern void T115f9(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_description */
extern void T114f9(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_description */
extern void T113f9(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_description */
extern void T112f9(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_description */
extern void T111f9(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_description */
extern void T110f9(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_description */
extern void T109f9(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_description */
extern void T108f9(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_description */
extern void T107f9(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_description */
extern void T106f9(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_description */
extern void T105f9(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_description */
extern void T104f9(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_description */
extern void T103f9(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_description */
extern void T100f12(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_description */
extern void T99f17(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_description */
extern void T98f11(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_description */
extern void T97f13(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_description */
extern void T96f11(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_description */
extern void T95f11(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_description */
extern void T94f12(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_description */
extern void T92f9(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_description */
extern void T90f13(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_description */
extern void T88f9(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_recipient_name */
extern void T119f10(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_recipient_name */
extern void T118f10(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_recipient_name */
extern void T117f14(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_recipient_name */
extern void T116f10(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_recipient_name */
extern void T115f10(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_recipient_name */
extern void T114f10(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_recipient_name */
extern void T113f10(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_recipient_name */
extern void T112f10(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_recipient_name */
extern void T111f10(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_recipient_name */
extern void T110f10(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_recipient_name */
extern void T109f10(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_recipient_name */
extern void T108f10(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_recipient_name */
extern void T107f10(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_recipient_name */
extern void T106f10(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_recipient_name */
extern void T105f10(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_recipient_name */
extern void T104f10(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_recipient_name */
extern void T103f10(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_recipient_name */
extern void T100f13(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_recipient_name */
extern void T99f18(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_recipient_name */
extern void T98f12(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_recipient_name */
extern void T97f14(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_recipient_name */
extern void T96f12(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_recipient_name */
extern void T95f12(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_recipient_name */
extern void T94f13(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_recipient_name */
extern void T92f10(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_recipient_name */
extern void T90f14(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_recipient_name */
extern void T88f10(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_type_name */
extern void T119f11(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_type_name */
extern void T118f11(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_type_name */
extern void T117f15(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_type_name */
extern void T116f11(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_type_name */
extern void T115f11(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_type_name */
extern void T114f11(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_type_name */
extern void T113f11(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_type_name */
extern void T112f11(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_type_name */
extern void T111f11(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_type_name */
extern void T110f11(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_type_name */
extern void T109f11(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_type_name */
extern void T108f11(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_type_name */
extern void T107f11(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_type_name */
extern void T106f11(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_type_name */
extern void T105f11(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_type_name */
extern void T104f11(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_type_name */
extern void T103f11(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_type_name */
extern void T100f14(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_type_name */
extern void T99f19(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_type_name */
extern void T98f13(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_type_name */
extern void T97f15(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_type_name */
extern void T96f13(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_type_name */
extern void T95f13(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_type_name */
extern void T94f14(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_type_name */
extern void T92f11(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_type_name */
extern void T90f15(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_type_name */
extern void T88f11(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T1825f3(GE_context* ac, T0* C, T6 a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T1823f2(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T1821f3(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.arguments */
extern T0* T181f89(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.target */
extern T0* T1422f5(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.target */
extern T0* T291f15(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.position */
extern T0* T1236f40(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.position */
extern T0* T903f9(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.position */
extern T0* T858f59(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.name */
extern T0* T1243f37(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.name */
extern T0* T1242f37(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_freeop */
extern T1 T1236f8(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_freeop */
extern T1 T1233f28(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_freeop */
extern T1 T924f22(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.free_operator_name */
extern T0* T1236f9(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.free_operator_name */
extern T0* T1233f19(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.free_operator_name */
extern T0* T832f8(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.selected_count */
extern T6 T1508f25(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.selected_count */
extern T6 T1308f26(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.has_replication */
extern T1 T1508f22(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.has_replication */
extern T1 T1308f23(GE_context* ac, T0* C);
/* ET_REPLICATED_FEATURE.replicated_feature */
extern T0* T1511f4(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.replicated_feature */
extern T0* T1508f23(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.replicated_feature */
extern T0* T1308f24(GE_context* ac, T0* C);
/* ET_REPLICATED_FEATURE.first_feature */
extern T0* T1511f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].first */
extern T0* T1512f8(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.first_feature */
extern T0* T1508f24(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.first_feature */
extern T0* T1308f25(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.last_position */
extern T0* T1888f4(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.last_position */
extern T0* T1784f43(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.text */
extern T0* T1784f44(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_position */
extern T0* T1209f35(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.last_position */
extern T0* T1208f35(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.last_position */
extern T0* T1207f31(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.last_position */
extern T0* T1206f31(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_position */
extern T0* T1204f33(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_position */
extern T0* T1203f33(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.last_position */
extern T0* T1202f62(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.last_position */
extern T0* T1201f62(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_position */
extern T0* T1200f62(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_position */
extern T0* T1199f62(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_position */
extern T0* T1198f62(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_position */
extern T0* T1197f30(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.last_position */
extern T0* T1196f34(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_position */
extern T0* T1195f36(GE_context* ac, T0* C);
/* ET_VOID.last_position */
extern T0* T946f27(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.last_position */
extern T0* T906f17(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_position */
extern T0* T831f30(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.last_position */
extern T0* T649f101(GE_context* ac, T0* C);
/* ET_KEYWORD.last_position */
extern T0* T396f35(GE_context* ac, T0* C);
/* ET_SYMBOL.last_position */
extern T0* T345f71(GE_context* ac, T0* C);
/* ET_RESULT.last_position */
extern T0* T312f28(GE_context* ac, T0* C);
/* ET_CURRENT.last_position */
extern T0* T285f27(GE_context* ac, T0* C);
/* ET_IDENTIFIER.last_position */
extern T0* T181f101(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.full_name */
extern T0* T798f31(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.relative_name */
extern T0* T798f46(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_CLUSTER.relative_name */
extern T0* T798f46p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.relative_name */
extern T0* T188f102(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.string_ */
extern T0* T188f103(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].is_empty */
extern T1 T851f10(GE_context* ac, T0* C);
/* ET_NONE_GROUP.full_name */
extern T0* T505f13(GE_context* ac, T0* C, T2 a1);
/* ET_NONE_GROUP.relative_name */
extern T0* T505f17(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.string_ */
extern T0* T505f23(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.full_name */
extern T0* T410f30(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_CLUSTER.relative_name */
extern T0* T410f47(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_CLUSTER.relative_name */
extern T0* T410f47p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.full_name */
extern T0* T393f14(GE_context* ac, T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.relative_name */
extern T0* T393f18(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.string_ */
extern T0* T393f24(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.full_name */
extern T0* T214f47(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_CLUSTER.relative_name */
extern T0* T214f50(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_CLUSTER.relative_name */
extern T0* T214f50p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.parent */
extern T0* T505f14(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.parent */
extern T0* T393f15(GE_context* ac, T0* C);
/* ET_NONE_GROUP.absolute_pathname */
extern T0* T505f15(GE_context* ac, T0* C);
/* ET_NONE_GROUP.file_system */
extern T0* T505f21(GE_context* ac, T0* C);
/* ET_NONE_GROUP.unix_file_system */
extern T0* T505f27(GE_context* ac, T0* C);
/* ET_NONE_GROUP.windows_file_system */
extern T0* T505f26(GE_context* ac, T0* C);
/* ET_NONE_GROUP.operating_system */
extern T0* T505f25(GE_context* ac, T0* C);
/* ET_NONE_GROUP.full_pathname */
extern T0* T505f20(GE_context* ac, T0* C);
/* ET_NONE_GROUP.pathname */
extern T0* T505f24(GE_context* ac, T0* C);
/* ET_NONE_GROUP.execution_environment */
extern T0* T505f19(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.absolute_pathname */
extern T0* T393f16(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.file_system */
extern T0* T393f22(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.unix_file_system */
extern T0* T393f28(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.windows_file_system */
extern T0* T393f27(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.operating_system */
extern T0* T393f26(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.full_pathname */
extern T0* T393f21(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.pathname */
extern T0* T393f25(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.execution_environment */
extern T0* T393f20(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.kind_lower_name */
extern T0* T798f38(GE_context* ac, T0* C);
/* ET_LIBRARY.kind_lower_name */
extern T0* T459f93(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.kind_lower_name */
extern T0* T410f37(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.kind_lower_name */
extern T0* T214f48(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.kind_lower_name */
extern T0* T188f104(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T1421f23(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T1214f43(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T1086f41(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].item */
extern T0* T1441f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].item */
extern T0* T872f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].item */
extern T0* T631f9(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.is_flattened_adapted */
extern T1 T1231f52(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_adapted */
extern T1 T1230f52(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_adapted */
extern T1 T1228f56(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_adapted */
extern T1 T1227f59(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_adapted */
extern T1 T1226f58(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_adapted */
extern T1 T533f49(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_adapted */
extern T1 T527f52(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_adapted */
extern T1 T365f36(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_adapted */
extern T1 T364f36(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_adapted */
extern T1 T362f37(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_adapted */
extern T1 T330f39(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_adapted */
extern T1 T259f37(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.immediate_feature */
extern T0* T1508f12(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.immediate_feature */
extern T0* T1308f11(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_immediate_feature */
extern T0* T1231f46(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_immediate_feature */
extern T0* T1230f46(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_immediate_feature */
extern T0* T1228f50(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_immediate_feature */
extern T0* T1227f53(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_immediate_feature */
extern T0* T1226f52(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_immediate_feature */
extern T0* T533f43(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_immediate_feature */
extern T0* T527f46(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_immediate_feature */
extern T0* T365f30(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_immediate_feature */
extern T0* T364f30(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_immediate_feature */
extern T0* T362f31(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_immediate_feature */
extern T0* T330f33(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_immediate_feature */
extern T0* T259f63(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.adapted_feature */
extern T0* T1508f13(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.adapted_feature */
extern T0* T1308f12(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_adapted_feature */
extern T0* T1231f47(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_adapted_feature */
extern T0* T1230f47(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_adapted_feature */
extern T0* T1228f51(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_adapted_feature */
extern T0* T1227f54(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_adapted_feature */
extern T0* T1226f53(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_adapted_feature */
extern T0* T533f44(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_adapted_feature */
extern T0* T527f47(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_adapted_feature */
extern T0* T365f31(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_adapted_feature */
extern T0* T364f31(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_adapted_feature */
extern T0* T362f32(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_adapted_feature */
extern T0* T330f34(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_adapted_feature */
extern T0* T259f32(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.is_redeclared */
extern T1 T1308f13(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_redeclared */
extern T1 T1231f48(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_redeclared */
extern T1 T1230f48(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_redeclared */
extern T1 T1228f52(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_redeclared */
extern T1 T1227f55(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_redeclared */
extern T1 T1226f54(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_redeclared */
extern T1 T533f45(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_redeclared */
extern T1 T527f48(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_redeclared */
extern T1 T365f32(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_redeclared */
extern T1 T364f32(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_redeclared */
extern T1 T362f33(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_redeclared */
extern T1 T330f35(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_redeclared */
extern T1 T259f33(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.redeclared_feature */
extern T0* T1508f16(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.redeclared_feature */
extern T0* T1308f14(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_redeclared_feature */
extern T0* T1231f49(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_redeclared_feature */
extern T0* T1230f49(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_redeclared_feature */
extern T0* T1228f53(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_redeclared_feature */
extern T0* T1227f56(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_redeclared_feature */
extern T0* T1226f55(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_redeclared_feature */
extern T0* T533f46(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_redeclared_feature */
extern T0* T527f49(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T365f33(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T364f33(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T362f34(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T330f36(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_redeclared_feature */
extern T0* T259f34(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_inherited */
extern T1 T1508f18(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_inherited */
extern T1 T1231f50(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_inherited */
extern T1 T1230f50(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_inherited */
extern T1 T1228f54(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_inherited */
extern T1 T1227f57(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_inherited */
extern T1 T1226f56(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_inherited */
extern T1 T533f47(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_inherited */
extern T1 T527f50(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_inherited */
extern T1 T365f34(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_inherited */
extern T1 T364f34(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_inherited */
extern T1 T362f35(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_inherited */
extern T1 T330f37(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_inherited */
extern T1 T259f35(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.inherited_feature */
extern T0* T1508f9(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.inherited_feature */
extern T0* T1308f16(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_inherited_feature */
extern T0* T1231f51(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_inherited_feature */
extern T0* T1230f51(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_inherited_feature */
extern T0* T1228f55(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_inherited_feature */
extern T0* T1227f58(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_inherited_feature */
extern T0* T1226f57(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_inherited_feature */
extern T0* T533f48(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_inherited_feature */
extern T0* T527f51(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_inherited_feature */
extern T0* T365f35(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_inherited_feature */
extern T0* T364f35(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_inherited_feature */
extern T0* T362f36(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_inherited_feature */
extern T0* T330f38(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_inherited_feature */
extern T0* T259f36(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_feature */
extern T0* T1231f44(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_feature */
extern T0* T1230f44(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_feature */
extern T0* T1228f48(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_feature */
extern T0* T1227f51(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_feature */
extern T0* T1226f50(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_feature */
extern T0* T533f41(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_feature */
extern T0* T527f44(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_feature */
extern T0* T365f28(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_feature */
extern T0* T364f28(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_feature */
extern T0* T362f29(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_feature */
extern T0* T330f31(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_feature */
extern T0* T259f61(GE_context* ac, T0* C);
/* ET_TAGGED_ASSERTION.position */
extern T0* T1277f4(GE_context* ac, T0* C);
/* ET_TAGGED_ASSERTION.assertion */
extern T0* T1277f3(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1273f21(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1272f24(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1271f23(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1270f22(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1269f25(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1268f24(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.assertion */
extern T0* T1267f12(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.assertion */
extern T0* T1266f17(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.assertion */
extern T0* T1265f10(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.assertion */
extern T0* T1264f12(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.assertion */
extern T0* T1263f11(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.assertion */
extern T0* T1260f12(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.assertion */
extern T0* T1259f10(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.assertion */
extern T0* T1258f10(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.assertion */
extern T0* T1257f10(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.assertion */
extern T0* T1256f10(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.assertion */
extern T0* T1255f14(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.assertion */
extern T0* T1209f20(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.assertion */
extern T0* T1208f20(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.assertion */
extern T0* T1207f21(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.assertion */
extern T0* T1206f21(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.assertion */
extern T0* T1204f22(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.assertion */
extern T0* T1203f22(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.assertion */
extern T0* T1202f41(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.assertion */
extern T0* T1201f41(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.assertion */
extern T0* T1200f41(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.assertion */
extern T0* T1199f41(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.assertion */
extern T0* T1198f41(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.assertion */
extern T0* T1197f22(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.assertion */
extern T0* T1196f26(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.assertion */
extern T0* T1195f21(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.assertion */
extern T0* T1172f16(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.assertion */
extern T0* T1169f14(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.assertion */
extern T0* T1150f12(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.assertion */
extern T0* T1136f16(GE_context* ac, T0* C);
/* ET_CALL_AGENT.assertion */
extern T0* T988f15(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.assertion */
extern T0* T985f12(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.assertion */
extern T0* T957f21(GE_context* ac, T0* C);
/* ET_VOID.assertion */
extern T0* T946f18(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.assertion */
extern T0* T831f21(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.assertion */
extern T0* T747f14(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.assertion */
extern T0* T325f13(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.assertion */
extern T0* T321f10(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.assertion */
extern T0* T320f10(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.assertion */
extern T0* T319f11(GE_context* ac, T0* C);
/* ET_RESULT.assertion */
extern T0* T312f19(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.assertion */
extern T0* T293f17(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T291f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T290f14(GE_context* ac, T0* C);
/* ET_CURRENT.assertion */
extern T0* T285f19(GE_context* ac, T0* C);
/* ET_IDENTIFIER.assertion */
extern T0* T181f82(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.like_keyword */
extern T0* T1243f36(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.manifest_string */
extern T0* T1197f18(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.manifest_string */
extern T0* T1196f22(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.manifest_string */
extern T0* T831f17(GE_context* ac, T0* C);
/* ET_CONVERT_FUNCTION.is_convert_from */
extern T1 T1223f7(GE_context* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_from */
extern T1 T469f4(GE_context* ac, T0* C);
/* ET_CONVERT_PROCEDURE.is_convert_to */
extern T1 T1224f7(GE_context* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_to */
extern T1 T469f5(GE_context* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T1420f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_generic_named_type */
extern T0* T439f938(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.resolved_syntactical_constraint */
extern T0* T1021f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_actual_parameter_list */
extern T0* T439f939(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.item */
extern T0* T1021f11(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.position */
extern T0* T1021f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint */
extern T0* T1243f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint */
extern T0* T1242f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint */
extern T0* T1241f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T1215f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_named_type */
extern T0* T439f937(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint */
extern T0* T503f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.position */
extern T0* T1420f6(GE_context* ac, T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T1219f4(GE_context* ac, T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.position */
extern T0* T1218f4(GE_context* ac, T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.position */
extern T0* T1215f5(GE_context* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.type */
extern T0* T1420f5(GE_context* ac, T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.type */
extern T0* T1215f4(GE_context* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1420f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1243f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1242f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T1241f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T1219f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_comma_actual_parameter */
extern T0* T439f941(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T1218f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_actual_parameter */
extern T0* T439f940(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1215f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint_with_type */
extern T0* T503f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CHOICE_RANGE.choice */
extern T0* T1251f5(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.choice */
extern T0* T1209f30(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.choice */
extern T0* T1208f30(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.choice */
extern T0* T1202f57(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.choice */
extern T0* T1201f57(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.choice */
extern T0* T1200f57(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.choice */
extern T0* T1199f57(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.choice */
extern T0* T1198f57(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.choice */
extern T0* T1195f31(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.choice */
extern T0* T1169f22(GE_context* ac, T0* C);
/* ET_IDENTIFIER.choice */
extern T0* T181f102(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.lower */
extern T0* T1209f32(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.lower */
extern T0* T1208f32(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.lower */
extern T0* T1202f59(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.lower */
extern T0* T1201f59(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.lower */
extern T0* T1200f59(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.lower */
extern T0* T1199f59(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.lower */
extern T0* T1198f59(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.lower */
extern T0* T1195f33(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.lower */
extern T0* T1169f24(GE_context* ac, T0* C);
/* ET_IDENTIFIER.lower */
extern T0* T181f104(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_range */
extern T1 T1209f31(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_range */
extern T1 T1208f31(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_range */
extern T1 T1202f58(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_range */
extern T1 T1201f58(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_range */
extern T1 T1200f58(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_range */
extern T1 T1199f58(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_range */
extern T1 T1198f58(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_range */
extern T1 T1195f32(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_range */
extern T1 T1169f23(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_range */
extern T1 T181f103(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.upper */
extern T0* T1209f33(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.upper */
extern T0* T1208f33(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.upper */
extern T0* T1202f60(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.upper */
extern T0* T1201f60(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.upper */
extern T0* T1200f60(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.upper */
extern T0* T1199f60(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.upper */
extern T0* T1198f60(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.upper */
extern T0* T1195f34(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.upper */
extern T0* T1169f25(GE_context* ac, T0* C);
/* ET_IDENTIFIER.upper */
extern T0* T181f105(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.agent_actual_argument */
extern T0* T1855f13(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.agent_actual_argument */
extern T0* T1854f13(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.agent_actual_argument */
extern T0* T1853f13(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.agent_actual_argument */
extern T0* T1716f13(GE_context* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.agent_actual_argument */
extern T0* T1275f6(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1273f22(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1272f25(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1271f24(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1270f23(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1269f26(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1268f25(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.agent_actual_argument */
extern T0* T1267f13(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.agent_actual_argument */
extern T0* T1266f18(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.agent_actual_argument */
extern T0* T1265f11(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.agent_actual_argument */
extern T0* T1264f13(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.agent_actual_argument */
extern T0* T1263f12(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.agent_actual_argument */
extern T0* T1260f13(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.agent_actual_argument */
extern T0* T1259f11(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.agent_actual_argument */
extern T0* T1258f11(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.agent_actual_argument */
extern T0* T1257f11(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.agent_actual_argument */
extern T0* T1256f11(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.agent_actual_argument */
extern T0* T1255f15(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1209f21(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1208f21(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.agent_actual_argument */
extern T0* T1207f22(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.agent_actual_argument */
extern T0* T1206f22(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.agent_actual_argument */
extern T0* T1204f23(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.agent_actual_argument */
extern T0* T1203f23(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1202f42(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1201f42(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1200f42(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1199f42(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1198f42(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.agent_actual_argument */
extern T0* T1197f23(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.agent_actual_argument */
extern T0* T1196f27(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1195f22(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.agent_actual_argument */
extern T0* T1172f17(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.agent_actual_argument */
extern T0* T1169f15(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.agent_actual_argument */
extern T0* T1150f13(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.agent_actual_argument */
extern T0* T1136f17(GE_context* ac, T0* C);
/* ET_CALL_AGENT.agent_actual_argument */
extern T0* T988f16(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.agent_actual_argument */
extern T0* T985f13(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.agent_actual_argument */
extern T0* T957f22(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.agent_actual_argument */
extern T0* T954f66(GE_context* ac, T0* C);
/* ET_VOID.agent_actual_argument */
extern T0* T946f19(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.agent_actual_argument */
extern T0* T831f22(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.agent_actual_argument */
extern T0* T747f15(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.agent_actual_argument */
extern T0* T325f14(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T321f11(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T320f11(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.agent_actual_argument */
extern T0* T319f12(GE_context* ac, T0* C);
/* ET_RESULT.agent_actual_argument */
extern T0* T312f20(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.agent_actual_argument */
extern T0* T293f18(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T291f10(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T290f15(GE_context* ac, T0* C);
/* ET_CURRENT.agent_actual_argument */
extern T0* T285f20(GE_context* ac, T0* C);
/* ET_IDENTIFIER.agent_actual_argument */
extern T0* T181f83(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_8 */
extern T4 T1202f21(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_8_min_value_abs */
extern unsigned char ge559os31093;
extern T11 ge559ov31093;
extern T11 T1202f43(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_8 */
extern T4 T1201f21(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1201f44(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_negative */
extern T1 T1201f43(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_8 */
extern T4 T1200f21(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1200f43(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_8 */
extern T4 T1199f21(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1199f44(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_negative */
extern T1 T1199f43(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_8 */
extern T4 T1198f21(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1198f44(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_negative */
extern T1 T1198f43(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_16 */
extern T5 T1202f23(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_16_min_value_abs */
extern unsigned char ge559os31094;
extern T11 ge559ov31094;
extern T11 T1202f44(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_16 */
extern T5 T1201f23(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1201f45(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_16 */
extern T5 T1200f23(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1200f44(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_16 */
extern T5 T1199f23(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1199f45(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_16 */
extern T5 T1198f23(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1198f45(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_64 */
extern T7 T1202f27(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_64_min_value_abs */
extern unsigned char ge559os31096;
extern T11 ge559ov31096;
extern T11 T1202f46(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_64 */
extern T7 T1201f27(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1201f47(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_64 */
extern T7 T1200f27(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1200f46(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_64 */
extern T7 T1199f27(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1199f47(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_64 */
extern T7 T1198f27(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1198f47(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_natural_8 */
extern T8 T1202f29(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_natural_8 */
extern T8 T1201f29(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_natural_8 */
extern T8 T1200f29(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_natural_8 */
extern T8 T1199f29(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_natural_8 */
extern T8 T1198f29(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_natural_16 */
extern T9 T1202f31(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_natural_16 */
extern T9 T1201f31(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_natural_16 */
extern T9 T1200f31(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_natural_16 */
extern T9 T1199f31(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_natural_16 */
extern T9 T1198f31(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_natural_32 */
extern T10 T1202f33(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_natural_32 */
extern T10 T1201f33(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_natural_32 */
extern T10 T1200f33(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_natural_32 */
extern T10 T1199f33(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_natural_32 */
extern T10 T1198f33(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_natural_64 */
extern T11 T1202f35(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_natural_64 */
extern T11 T1201f35(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_natural_64 */
extern T11 T1200f35(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_natural_64 */
extern T11 T1199f35(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_natural_64 */
extern T11 T1198f35(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1202f20(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1201f20(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1200f20(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1199f20(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1198f20(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1202f22(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1201f22(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1200f22(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1199f22(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1198f22(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1202f28(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_negative */
extern T1 T1202f47(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1201f28(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1200f28(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_negative */
extern T1 T1200f47(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1199f28(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1198f28(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1202f30(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1201f30(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1200f30(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1199f30(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1198f30(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1202f32(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1201f32(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1200f32(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1199f32(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1198f32(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1202f24(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_32_min_value_abs */
extern unsigned char ge559os31095;
extern T11 ge559ov31095;
extern T11 T1202f45(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1201f24(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1201f46(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1200f24(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1200f45(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1199f24(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1199f46(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1198f24(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1198f46(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1202f26(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1201f26(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1200f26(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1199f26(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1198f26(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1202f39(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1201f39(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1199f39(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1198f39(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_binary */
extern T1 T1201f40(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_binary */
extern T1 T1200f40(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_binary */
extern T1 T1199f40(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_binary */
extern T1 T1198f40(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1202f34(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1201f34(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1200f34(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1199f34(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1198f34(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.value_position */
extern T0* T1202f52(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.value_position */
extern T0* T1201f52(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.value_position */
extern T0* T1200f52(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.value_position */
extern T0* T1199f52(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.value_position */
extern T0* T1198f52(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1202f25(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1201f25(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1200f25(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1199f25(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1198f25(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix */
extern T1 T1236f16(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix */
extern T1 T858f12(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefixable */
extern T1 T1236f6(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefixable */
extern T1 T858f11(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infixable */
extern T1 T1236f18(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infixable */
extern T1 T858f10(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix */
extern T1 T1236f14(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix */
extern T1 T858f9(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.same_alias_name */
extern T1 T1236f17(GE_context* ac, T0* C, T0* a1);
extern T1 T1236f17ot1(T0* a1, T0** a2);
/* ET_INFIX_NAME.same_alias_name */
extern T1 T1234f61(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_alias_name */
extern T1 T1233f50(GE_context* ac, T0* C, T0* a1);
extern T1 T1233f50ot1(T0* a1, T0** a2);
/* ET_PREFIX_NAME.same_alias_name */
extern T1 T1232f47(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.same_alias_name */
extern T1 T858f13(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_alias_name */
extern T1 T832f48(GE_context* ac, T0* C, T0* a1);
extern T1 T832f48ot1(T0* a1, T0** a2);
/* ET_ALIAS_FREE_NAME.alias_lower_name */
extern T0* T1236f41(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.alias_name */
extern T0* T1236f42(GE_context* ac, T0* C);
/* ET_INFIX_NAME.alias_lower_name */
extern T0* T1234f78(GE_context* ac, T0* C);
/* ET_INFIX_NAME.alias_name */
extern T0* T1234f79(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.alias_lower_name */
extern T0* T1233f65(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.alias_name */
extern T0* T1233f66(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.alias_lower_name */
extern T0* T1232f64(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.alias_name */
extern T0* T1232f65(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.alias_lower_name */
extern T0* T858f61(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.alias_name */
extern T0* T858f62(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.alias_lower_name */
extern T0* T832f65(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.alias_name */
extern T0* T832f66(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.lower_name */
extern T0* T447f91(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.lower_name */
extern T0* T229f106(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.lower_name */
extern T0* T216f99(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.lower_name */
extern T0* T199f13(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.lower_name */
extern T0* T197f91(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.lower_name */
extern T0* T195f13(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.parenthesis_call */
extern T0* T1855f19(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.parenthesis_call */
extern T0* T1264f17(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.parenthesis_call */
extern T0* T985f16(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments_count */
extern T6 T1855f20(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.arguments_count */
extern T6 T1264f18(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.arguments_count */
extern T6 T985f17(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.arguments_count */
extern T6 T290f18(GE_context* ac, T0* C);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_enabled */
extern T1 T825f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_included */
extern T1 T825f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.is_enabled */
extern T1 T823f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.string_ */
extern T0* T823f5(GE_context* ac, T0* C);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_enabled */
extern T1 T822f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_CONDITION.is_enabled */
extern T1 T821f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T1 T820f3(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T0* T820f3ac1(T0* a1, T0* a2);
/* DS_LINKED_LIST [STRING_8].there_exists */
extern T1 T143f16(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.string_ */
extern T0* T820f4(GE_context* ac, T0* C);
/* UC_UTF8_STRING.has */
extern T1 T846f65(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_MULTITHREADED_CONDITION.is_enabled */
extern T1 T819f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_BUILD_CONDITION.is_enabled */
extern T1 T818f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_BUILD_CONDITION.string_ */
extern T0* T818f4(GE_context* ac, T0* C);
/* ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T1 T817f3(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T0* T817f3ac1(T0* a1, T0* a2);
/* ET_ECF_PLATFORM_CONDITION.string_ */
extern T0* T817f5(GE_context* ac, T0* C);
/* ET_ECF_PLATFORM_CONDITION.operating_system */
extern T0* T817f4(GE_context* ac, T0* C);
/* ET_ECF_CONDITIONS.is_enabled */
extern T1 T813f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].item */
extern T0* T1449f9(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.type */
extern T0* T1273f24(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.type */
extern T0* T1272f27(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.type */
extern T0* T1271f26(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.type */
extern T0* T1270f25(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.type */
extern T0* T1269f28(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.type */
extern T0* T1268f27(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.locals */
extern T0* T1273f27(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.locals */
extern T0* T1270f28(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1558f4(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_with_type */
extern T0* T1421f36(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_parameter_with_type */
extern T0* T1243f34(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_parameter_with_type */
extern T0* T1242f34(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_with_type */
extern T0* T1241f35(GE_context* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1239f4(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T1214f59(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T1086f53(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.named_parameter_with_type */
extern T0* T866f31(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_with_type */
extern T0* T503f22(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_with_type */
extern T0* T260f47(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.named_parameter_with_type */
extern T0* T82f116(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_with_type */
extern T0* T80f48(GE_context* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.label */
extern T0* T1558f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.label */
extern T0* T1421f66(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.label */
extern T0* T1243f70(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.label */
extern T0* T1242f73(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.label */
extern T0* T1241f74(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.label */
extern T0* T1239f7(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.label */
extern T0* T1214f74(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.label */
extern T0* T1086f73(GE_context* ac, T0* C);
/* ET_LIKE_N.label */
extern T0* T866f66(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.label */
extern T0* T503f68(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.label */
extern T0* T260f99(GE_context* ac, T0* C);
/* ET_CLASS.label */
extern T0* T82f200(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.label */
extern T0* T80f104(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.last_leaf */
extern T0* T1558f8(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.last_leaf */
extern T0* T1239f8(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.error_position */
extern T0* T608f60(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.error_position */
extern T0* T606f56(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.error_position */
extern T0* T605f58(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.error_position */
extern T0* T568f66(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.end_of_file */
extern T1 T608f62(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.end_of_file */
extern T1 T606f63(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.end_of_file */
extern T1 T605f60(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.end_of_file */
extern T1 T568f68(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_applicable_encoding */
extern T1 T608f63(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_applicable_encoding */
extern T1 T847f20(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_valid_encoding */
extern T1 T847f13(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.is_applicable_encoding */
extern T1 T606f49(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_applicable_encoding */
extern T1 T605f61(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T568f69(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.start_condition */
extern T6 T608f64(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.start_condition */
extern T6 T606f51(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.start_condition */
extern T6 T605f62(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.start_condition */
extern T6 T568f44(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.same_extended_feature_name */
extern T1 T1235f3(GE_context* ac, T0* C, T0* a1);
/* KL_ANY_ROUTINES.same_objects */
extern T1 T134f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.any_ */
extern T0* T1235f5(GE_context* ac, T0* C);
/* ET_INFIX_NAME.same_extended_feature_name */
extern T1 T1234f73(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_NAME.any_ */
extern T0* T1234f22(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.same_extended_feature_name */
extern T1 T1233f60(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.any_ */
extern T0* T1233f17(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.same_extended_feature_name */
extern T1 T1232f59(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_NAME.any_ */
extern T0* T1232f22(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.same_extended_feature_name */
extern T1 T832f60(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.any_ */
extern T0* T832f27(GE_context* ac, T0* C);
/* ET_IDENTIFIER.same_extended_feature_name */
extern T1 T181f85(GE_context* ac, T0* C, T0* a1);
/* ET_ALIASED_FEATURE_NAME.position */
extern T0* T1235f4(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.same_call_name */
extern T1 T1235f6(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_NAME.feature_alias_name */
extern T0* T1234f23(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.feature_alias_name */
extern T0* T1233f10(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.feature_alias_name */
extern T0* T1232f23(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.feature_alias_name */
extern T0* T832f10(GE_context* ac, T0* C);
/* ET_IDENTIFIER.alias_name */
extern T0* T181f54(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.is_consumable */
extern T1 T447f90(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.is_consumable */
extern T1 T229f100(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.is_consumable */
extern T1 T216f93(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.is_consumable */
extern T1 T197f90(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T798f36(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.is_included */
extern T1 T803f3(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_FILE_RULES.is_included */
extern T0* T803f3ac1(T0* a1);
/* ET_ECF_FILE_RULE.is_included */
extern T1 T802f9(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_FILE_RULE.is_included */
extern T0* T802f9ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_FILE_RULE.is_included */
extern T0* T802f9ac2(T0* a1);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].there_exists */
extern T1 T1444f7(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].item */
extern T0* T1444f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].for_all */
extern T1 T1445f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.implicit_relative_name */
extern T0* T798f50(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.unix_file_system */
extern T0* T798f49(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T798f36p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.has_eiffel_extension */
extern T1 T798f51(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.operating_system */
extern T0* T798f55(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T410f35(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_case_insensitive */
extern T1 T410f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET_CURSOR [STRING_8].go_after */
extern void T368f15(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_go_after */
extern void T76f75(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.operating_system */
extern T0* T410f49(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.exclude */
extern T0* T404f141(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_exclude */
extern unsigned char ge1126os21556;
extern T0* ge1126ov21556;
extern T0* T404f142(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_exclude_declared */
extern T1 T404f140(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T410f35p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_eiffel_extension */
extern T1 T410f51(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T214f26(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_EXCLUDE.has */
extern T1 T215f4(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_EXCLUDE.string_ */
extern T0* T215f5(GE_context* ac, T0* C);
/* ET_LACE_EXCLUDE.has_case_insensitive */
extern T1 T215f3(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.operating_system */
extern T0* T214f24(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T214f26p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.has_eiffel_extension */
extern T1 T214f38(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T798f37(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T798f37p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T410f36(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T410f36p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T214f27(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T214f27p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.full_pathname */
extern T0* T798f35(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.windows_file_system */
extern T0* T798f48(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.file_system */
extern T0* T798f45(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.execution_environment */
extern T0* T798f44(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.full_pathname */
extern T0* T410f34(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.file_system */
extern T0* T410f46(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.unix_file_system */
extern T0* T410f56(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.windows_file_system */
extern T0* T410f55(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.full_pathname */
extern T0* T214f35(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.file_system */
extern T0* T214f23(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.unix_file_system */
extern T0* T214f28(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.windows_file_system */
extern T0* T214f25(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.pathname */
extern T0* T214f42(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.absolute_pathname */
extern T0* T798f30(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.absolute_pathname */
extern T0* T410f29(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.execution_environment */
extern T0* T410f45(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.absolute_pathname */
extern T0* T214f37(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.execution_environment */
extern T0* T214f43(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.scm_write_mapping_recursive */
extern T0* T798f42(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.scm_write_mapping_recursive */
extern T0* T410f43(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.scm_write_mapping_recursive */
extern T0* T214f45(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_none */
extern T1 T798f39(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_none */
extern T1 T410f31(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_none */
extern T1 T393f4(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_none */
extern T1 T214f29(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_unknown */
extern T1 T798f43(GE_context* ac, T0* C);
/* ET_NONE_GROUP.is_unknown */
extern T1 T505f10(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_unknown */
extern T1 T410f33(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_unknown */
extern T1 T214f30(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_dotnet_assembly */
extern T1 T798f25(GE_context* ac, T0* C);
/* ET_NONE_GROUP.is_dotnet_assembly */
extern T1 T505f18(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_dotnet_assembly */
extern T1 T410f38(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_dotnet_assembly */
extern T1 T393f6(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_dotnet_assembly */
extern T1 T214f31(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.cluster */
extern T0* T798f28(GE_context* ac, T0* C);
/* ET_NONE_GROUP.cluster */
extern T0* T505f5(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.cluster */
extern T0* T410f27(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.cluster */
extern T0* T393f7(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.cluster */
extern T0* T214f32(GE_context* ac, T0* C);
/* ET_NONE_GROUP.is_cluster */
extern T1 T505f7(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_cluster */
extern T1 T393f8(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.dotnet_assembly */
extern T0* T798f29(GE_context* ac, T0* C);
/* ET_NONE_GROUP.dotnet_assembly */
extern T0* T505f11(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.dotnet_assembly */
extern T0* T410f28(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.dotnet_assembly */
extern T0* T393f12(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.dotnet_assembly */
extern T0* T214f36(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.universe */
extern T0* T393f19(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.tokens */
extern T0* T393f11(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.current_system */
extern T0* T798f26(GE_context* ac, T0* C);
/* ET_NONE_GROUP.current_system */
extern T0* T505f9(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.current_system */
extern T0* T410f39(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.current_system */
extern T0* T393f10(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.current_system */
extern T0* T214f34(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.full_lower_name */
extern T0* T798f32(GE_context* ac, T0* C, T2 a1);
/* ET_NONE_GROUP.full_lower_name */
extern T0* T505f12(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_CLUSTER.full_lower_name */
extern T0* T410f32(GE_context* ac, T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.full_lower_name */
extern T0* T393f13(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_CLUSTER.full_lower_name */
extern T0* T214f46(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.kind_name */
extern unsigned char ge713os14978;
extern T0* ge713ov14978;
extern T0* T798f54(GE_context* ac, T0* C);
/* ET_NONE_GROUP.kind_name */
extern unsigned char ge724os14978;
extern T0* ge724ov14978;
extern T0* T505f28(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.kind_name */
extern T0* T410f54(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.kind_name */
extern T0* T393f29(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.kind_name */
extern T0* T214f51(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.relative_lower_name */
extern T0* T798f47(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_CLUSTER.relative_lower_name */
extern T0* T798f47p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.relative_lower_name */
extern T0* T188f110(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.lower_name */
extern T0* T188f112(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.lower_name */
extern T0* T798f56(GE_context* ac, T0* C);
/* ET_NONE_GROUP.relative_lower_name */
extern T0* T505f16(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.lower_name */
extern T0* T505f22(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.relative_lower_name */
extern T0* T410f48(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_CLUSTER.relative_lower_name */
extern T0* T410f48p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_CLUSTER.lower_name */
extern T0* T410f57(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.relative_lower_name */
extern T0* T393f17(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.lower_name */
extern T0* T393f23(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.relative_lower_name */
extern T0* T214f49(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_CLUSTER.relative_lower_name */
extern T0* T214f49p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_CLUSTER.lower_name */
extern T0* T214f52(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_invariants */
extern T1 T1231f70(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_invariants */
extern T1 T1230f67(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_invariants */
extern T1 T1228f67(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_invariants */
extern T1 T1227f69(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_invariants */
extern T1 T1226f68(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_invariants */
extern T1 T533f65(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_invariants */
extern T1 T527f66(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_invariants */
extern T1 T365f64(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_invariants */
extern T1 T364f66(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_invariants */
extern T1 T362f66(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_invariants */
extern T1 T330f67(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_invariants */
extern T1 T259f72(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.as_invariants */
extern T0* T1231f71(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.as_invariants */
extern T0* T1230f68(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.as_invariants */
extern T0* T1228f68(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.as_invariants */
extern T0* T1227f70(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.as_invariants */
extern T0* T1226f69(GE_context* ac, T0* C);
/* ET_INVARIANTS.as_invariants */
extern T0* T886f21(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.as_invariants */
extern T0* T533f66(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.as_invariants */
extern T0* T527f67(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.as_invariants */
extern T0* T365f65(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_invariants */
extern T0* T364f67(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_invariants */
extern T0* T362f67(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.as_invariants */
extern T0* T330f68(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.as_invariants */
extern T0* T259f73(GE_context* ac, T0* C);
/* ET_INVARIANTS.clients */
extern T0* T886f19(GE_context* ac, T0* C);
/* ET_INVARIANTS.type */
extern T0* T886f18(GE_context* ac, T0* C);
/* ET_INVARIANTS.arguments */
extern T0* T886f16(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.locals */
extern T0* T1231f68(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.locals */
extern T0* T1228f65(GE_context* ac, T0* C);
/* ET_INVARIANTS.locals */
extern T0* T886f17(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.locals */
extern T0* T533f63(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.locals */
extern T0* T365f62(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.locals */
extern T0* T364f64(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.locals */
extern T0* T362f64(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.locals */
extern T0* T259f70(GE_context* ac, T0* C);
/* ET_INVARIANTS.first_precursor */
extern T0* T886f13(GE_context* ac, T0* C);
/* ET_INVARIANTS.is_feature */
extern T1 T886f14(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.as_feature */
extern T0* T1231f67(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.as_feature */
extern T0* T1230f65(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.as_feature */
extern T0* T1228f64(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.as_feature */
extern T0* T1227f67(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.as_feature */
extern T0* T1226f66(GE_context* ac, T0* C);
/* ET_INVARIANTS.as_feature */
extern T0* T886f15(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.as_feature */
extern T0* T533f62(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.as_feature */
extern T0* T527f64(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.as_feature */
extern T0* T365f61(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_feature */
extern T0* T364f63(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_feature */
extern T0* T362f63(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.as_feature */
extern T0* T330f65(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.as_feature */
extern T0* T259f69(GE_context* ac, T0* C);
/* ET_INVARIANTS.preconditions */
extern T0* T886f23(GE_context* ac, T0* C);
/* ET_INVARIANTS.postconditions */
extern T0* T886f24(GE_context* ac, T0* C);
/* ET_INVARIANTS.implementation_feature */
extern T0* T886f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_HASH_LIST.has_type */
extern T1 T272f14(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.index_of */
extern T6 T334f68(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.index_of */
extern T6 T333f69(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.index_of */
extern T6 T322f68(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.index_of */
extern T6 T305f68(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.index_of */
extern T6 T272f16(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.index_of */
extern T6 T238f66(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.dynamic_type */
extern T0* T272f6(GE_context* ac, T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.is_bang */
extern T1 T954f53(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_bang */
extern T1 T649f58(GE_context* ac, T0* C);
/* ET_SYMBOL.is_bang */
extern T1 T345f16(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_question_mark */
extern T1 T954f55(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_question_mark */
extern T1 T649f60(GE_context* ac, T0* C);
/* ET_SYMBOL.is_question_mark */
extern T1 T345f17(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.position */
extern T0* T1591f4(GE_context* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.position */
extern T0* T1274f5(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_open_operand */
extern T1 T1855f18(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_open_operand */
extern T1 T1854f15(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_open_operand */
extern T1 T1853f14(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_open_operand */
extern T1 T1716f14(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_open_operand */
extern T1 T1591f3(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1273f23(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1272f26(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1271f25(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1270f24(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1269f27(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1268f26(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_open_operand */
extern T1 T1267f14(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_open_operand */
extern T1 T1266f19(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_open_operand */
extern T1 T1265f12(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_open_operand */
extern T1 T1264f14(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_open_operand */
extern T1 T1263f13(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_open_operand */
extern T1 T1260f14(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_open_operand */
extern T1 T1259f12(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_open_operand */
extern T1 T1258f12(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_open_operand */
extern T1 T1257f12(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_open_operand */
extern T1 T1256f12(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_open_operand */
extern T1 T1255f16(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1209f22(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1208f22(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_open_operand */
extern T1 T1207f23(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_open_operand */
extern T1 T1206f23(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_open_operand */
extern T1 T1204f24(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_open_operand */
extern T1 T1203f24(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_open_operand */
extern T1 T1202f48(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T1201f48(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T1200f48(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_open_operand */
extern T1 T1199f48(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_open_operand */
extern T1 T1198f48(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_open_operand */
extern T1 T1197f24(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_open_operand */
extern T1 T1196f28(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1195f23(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_open_operand */
extern T1 T1172f18(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_open_operand */
extern T1 T1169f16(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_open_operand */
extern T1 T1150f11(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_open_operand */
extern T1 T1136f18(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_open_operand */
extern T1 T988f17(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_open_operand */
extern T1 T985f14(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_open_operand */
extern T1 T957f25(GE_context* ac, T0* C);
/* ET_VOID.is_open_operand */
extern T1 T946f22(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_open_operand */
extern T1 T831f25(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_open_operand */
extern T1 T747f18(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_open_operand */
extern T1 T325f15(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T321f12(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T320f12(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_open_operand */
extern T1 T319f15(GE_context* ac, T0* C);
/* ET_RESULT.is_open_operand */
extern T1 T312f18(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_open_operand */
extern T1 T293f19(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T291f13(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T290f16(GE_context* ac, T0* C);
/* ET_CURRENT.is_open_operand */
extern T1 T285f18(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_open_operand */
extern T1 T181f78(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.expression_item */
extern T0* T1855f7(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.expression_item */
extern T0* T1854f7(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.expression_item */
extern T0* T1853f7(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.expression_item */
extern T0* T1716f12(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1273f13(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1272f15(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1271f15(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1270f17(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1269f19(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1268f19(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.expression_item */
extern T0* T1267f8(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.expression_item */
extern T0* T1266f11(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.expression_item */
extern T0* T1265f4(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.expression_item */
extern T0* T1264f15(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.expression_item */
extern T0* T1263f8(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.expression_item */
extern T0* T1260f7(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.expression_item */
extern T0* T1259f4(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.expression_item */
extern T0* T1258f4(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.expression_item */
extern T0* T1257f4(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.expression_item */
extern T0* T1256f4(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.expression_item */
extern T0* T1255f11(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.expression_item */
extern T0* T1209f11(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.expression_item */
extern T0* T1208f11(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.expression_item */
extern T0* T1207f15(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.expression_item */
extern T0* T1206f15(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.expression_item */
extern T0* T1204f10(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.expression_item */
extern T0* T1203f10(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.expression_item */
extern T0* T1202f10(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.expression_item */
extern T0* T1201f10(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.expression_item */
extern T0* T1200f10(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.expression_item */
extern T0* T1199f10(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.expression_item */
extern T0* T1198f10(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.expression_item */
extern T0* T1197f12(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.expression_item */
extern T0* T1196f12(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.expression_item */
extern T0* T1195f11(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.expression_item */
extern T0* T1172f9(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.expression_item */
extern T0* T1169f7(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.expression_item */
extern T0* T1150f8(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.expression_item */
extern T0* T1136f9(GE_context* ac, T0* C);
/* ET_CALL_AGENT.expression_item */
extern T0* T988f8(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.expression_item */
extern T0* T985f7(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.expression_item */
extern T0* T957f15(GE_context* ac, T0* C);
/* ET_VOID.expression_item */
extern T0* T946f15(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.expression_item */
extern T0* T831f6(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.expression_item */
extern T0* T747f7(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.expression_item */
extern T0* T325f10(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.expression_item */
extern T0* T321f9(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.expression_item */
extern T0* T320f9(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.expression_item */
extern T0* T319f9(GE_context* ac, T0* C);
/* ET_RESULT.expression_item */
extern T0* T312f7(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.expression_item */
extern T0* T293f14(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T291f6(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T290f11(GE_context* ac, T0* C);
/* ET_CURRENT.expression_item */
extern T0* T285f7(GE_context* ac, T0* C);
/* ET_IDENTIFIER.expression_item */
extern T0* T181f46(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_empty_actual_argument */
extern T1 T1855f10(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_empty_actual_argument */
extern T1 T1854f10(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_empty_actual_argument */
extern T1 T1853f10(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_empty */
extern T1 T1789f3(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_empty_actual_argument */
extern T1 T1716f10(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1273f30(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1272f32(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1271f31(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1270f31(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1269f33(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1268f32(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1267f18(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_empty_actual_argument */
extern T1 T1266f22(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_empty_actual_argument */
extern T1 T1265f15(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T1264f20(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_empty_actual_argument */
extern T1 T1263f16(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T1260f18(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_empty_actual_argument */
extern T1 T1259f15(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_empty_actual_argument */
extern T1 T1258f15(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_empty_actual_argument */
extern T1 T1257f15(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_empty_actual_argument */
extern T1 T1256f15(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_empty_actual_argument */
extern T1 T1255f19(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_empty */
extern T1 T1244f14(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1209f26(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1208f26(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_empty_actual_argument */
extern T1 T1207f26(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_empty_actual_argument */
extern T1 T1206f26(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T1204f28(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T1203f28(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1202f53(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1201f53(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1200f53(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1199f53(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1198f53(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1197f28(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_empty_actual_argument */
extern T1 T1196f32(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1195f27(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_empty_actual_argument */
extern T1 T1172f22(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T1169f19(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_empty_actual_argument */
extern T1 T1150f16(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_empty_actual_argument */
extern T1 T1136f21(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_empty_actual_argument */
extern T1 T988f22(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_empty_actual_argument */
extern T1 T985f19(GE_context* ac, T0* C);
/* ET_BRACKET_ARGUMENT_LIST.is_empty */
extern T1 T982f9(GE_context* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_empty */
extern T1 T972f9(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_empty_actual_argument */
extern T1 T957f26(GE_context* ac, T0* C);
/* ET_VOID.is_empty_actual_argument */
extern T1 T946f23(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T831f27(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_empty_actual_argument */
extern T1 T747f19(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_empty_actual_argument */
extern T1 T325f21(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T321f15(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T320f16(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_empty_actual_argument */
extern T1 T319f18(GE_context* ac, T0* C);
/* ET_RESULT.is_empty_actual_argument */
extern T1 T312f24(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_empty_actual_argument */
extern T1 T293f22(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T291f17(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T290f20(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T286f10(GE_context* ac, T0* C);
/* ET_CURRENT.is_empty_actual_argument */
extern T1 T285f25(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_empty_actual_argument */
extern T1 T181f96(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.count */
extern T6 T1244f12(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.actual_argument */
extern T0* T1855f9(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.actual_argument */
extern T0* T1854f9(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.actual_argument */
extern T0* T1853f9(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.actual_argument */
extern T0* T1789f4(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.actual_argument */
extern T0* T1716f9(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1273f18(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1272f20(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1271f19(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1270f20(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1269f22(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1268f21(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.actual_argument */
extern T0* T1267f10(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_OBJECT_TEST.actual_argument */
extern T0* T1266f16(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.actual_argument */
extern T0* T1265f9(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.actual_argument */
extern T0* T1264f8(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TYPE.actual_argument */
extern T0* T1263f10(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.actual_argument */
extern T0* T1260f9(GE_context* ac, T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.actual_argument */
extern T0* T1259f9(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT_ADDRESS.actual_argument */
extern T0* T1258f9(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.actual_argument */
extern T0* T1257f9(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.actual_argument */
extern T0* T1256f9(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.actual_argument */
extern T0* T1255f13(GE_context* ac, T0* C, T6 a1);
/* ET_ASSIGNER_INSTRUCTION.actual_argument */
extern T0* T1244f13(GE_context* ac, T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.actual_argument */
extern T0* T1209f16(GE_context* ac, T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.actual_argument */
extern T0* T1208f16(GE_context* ac, T0* C, T6 a1);
/* ET_FALSE_CONSTANT.actual_argument */
extern T0* T1207f17(GE_context* ac, T0* C, T6 a1);
/* ET_TRUE_CONSTANT.actual_argument */
extern T0* T1206f17(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument */
extern T0* T1204f18(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.actual_argument */
extern T0* T1203f18(GE_context* ac, T0* C, T6 a1);
/* ET_BINARY_INTEGER_CONSTANT.actual_argument */
extern T0* T1202f19(GE_context* ac, T0* C, T6 a1);
/* ET_OCTAL_INTEGER_CONSTANT.actual_argument */
extern T0* T1201f19(GE_context* ac, T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument */
extern T0* T1200f19(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument */
extern T0* T1199f19(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument */
extern T0* T1198f19(GE_context* ac, T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument */
extern T0* T1197f17(GE_context* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.actual_argument */
extern T0* T1196f21(GE_context* ac, T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.actual_argument */
extern T0* T1195f17(GE_context* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.actual_argument */
extern T0* T1172f15(GE_context* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.actual_argument */
extern T0* T1169f13(GE_context* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument */
extern T0* T1150f10(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.actual_argument */
extern T0* T1136f15(GE_context* ac, T0* C, T6 a1);
/* ET_CALL_AGENT.actual_argument */
extern T0* T988f13(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.actual_argument */
extern T0* T985f11(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.actual_argument */
extern T0* T982f7(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.actual_argument */
extern T0* T972f7(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_EXPRESSION.actual_argument */
extern T0* T957f20(GE_context* ac, T0* C, T6 a1);
/* ET_VOID.actual_argument */
extern T0* T946f17(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.actual_argument */
extern T0* T831f16(GE_context* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.actual_argument */
extern T0* T747f13(GE_context* ac, T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.actual_argument */
extern T0* T325f12(GE_context* ac, T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.actual_argument */
extern T0* T321f6(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.actual_argument */
extern T0* T320f6(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST.actual_argument */
extern T0* T319f6(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT.actual_argument */
extern T0* T312f14(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.actual_argument */
extern T0* T293f11(GE_context* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T291f8(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T290f13(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T286f6(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT.actual_argument */
extern T0* T285f10(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.actual_argument */
extern T0* T181f76(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.last_leaf */
extern T0* T1214f75(GE_context* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.last_leaf */
extern T0* T1024f11(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.last_leaf */
extern T0* T1086f74(GE_context* ac, T0* C);
/* ET_LIKE_N.last_leaf */
extern T0* T866f67(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1209f17(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1208f17(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_boolean_constant */
extern T1 T1204f19(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_boolean_constant */
extern T1 T1203f19(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1202f36(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1201f36(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1200f36(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1199f36(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1198f36(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_boolean_constant */
extern T1 T1197f19(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_boolean_constant */
extern T1 T1196f23(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1195f18(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_boolean_constant */
extern T1 T831f18(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_string_constant */
extern T1 T1209f19(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_string_constant */
extern T1 T1208f19(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_string_constant */
extern T1 T1207f20(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_string_constant */
extern T1 T1206f20(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_string_constant */
extern T1 T1204f21(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_string_constant */
extern T1 T1203f21(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_string_constant */
extern T1 T1202f38(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T1201f38(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T1200f38(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_string_constant */
extern T1 T1199f38(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_string_constant */
extern T1 T1198f38(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_string_constant */
extern T1 T1195f20(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_character_constant */
extern T1 T1207f19(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_character_constant */
extern T1 T1206f19(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_character_constant */
extern T1 T1204f20(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_character_constant */
extern T1 T1203f20(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_character_constant */
extern T1 T1202f37(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T1201f37(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T1200f37(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_character_constant */
extern T1 T1199f37(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_character_constant */
extern T1 T1198f37(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_character_constant */
extern T1 T1197f20(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_character_constant */
extern T1 T1196f24(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_character_constant */
extern T1 T831f19(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1209f29(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1208f29(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_integer_constant */
extern T1 T1207f29(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_integer_constant */
extern T1 T1206f29(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_integer_constant */
extern T1 T1204f31(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_integer_constant */
extern T1 T1203f31(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_integer_constant */
extern T1 T1197f33(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_integer_constant */
extern T1 T1196f37(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1195f30(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_integer_constant */
extern T1 T831f32(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.name */
extern T0* T319f13(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.type */
extern T0* T1266f14(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.type */
extern T0* T747f11(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.type */
extern T0* T319f14(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1273f20(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1272f22(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1271f21(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_qualified_call */
extern T1 T988f14(GE_context* ac, T0* C);
extern T1 T988f14ot1(T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1273f25(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1273f29(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1272f28(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1272f31(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1271f27(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1271f30(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1270f26(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1270f30(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1269f29(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1269f32(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1268f28(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1268f31(GE_context* ac, T0* C);
/* ET_CALL_AGENT.implicit_target_position */
extern T0* T988f18(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.same_call_name */
extern T1 T1236f7(GE_context* ac, T0* C, T0* a1);
extern T1 T1236f7ot1(T0* a1, T0** a2);
/* ET_INFIX_NAME.same_call_name */
extern T1 T1234f17(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_call_name */
extern T1 T1233f18(GE_context* ac, T0* C, T0* a1);
extern T1 T1233f18ot1(T0* a1, T0** a2);
/* ET_PREFIX_NAME.same_call_name */
extern T1 T1232f17(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.same_call_name */
extern T1 T858f6(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_call_name */
extern T1 T832f24(GE_context* ac, T0* C, T0* a1);
extern T1 T832f24ot1(T0* a1, T0** a2);
/* ET_IDENTIFIER.same_call_name */
extern T1 T181f70(GE_context* ac, T0* C, T0* a1);
extern T1 T181f70ot1(T0* a1, T0** a2);
/* ET_PARENTHESIS_SYMBOL.is_bracket */
extern T1 T1784f21(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_bracket */
extern T1 T1262f26(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_bracket */
extern T1 T1261f26(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_bracket */
extern T1 T1236f11(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_bracket */
extern T1 T1234f18(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_bracket */
extern T1 T1233f23(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_bracket */
extern T1 T1232f18(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_bracket */
extern T1 T943f35(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_bracket */
extern T1 T930f35(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_bracket */
extern T1 T924f38(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_bracket */
extern T1 T858f7(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_bracket */
extern T1 T832f25(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_bracket */
extern T1 T181f79(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_parenthesis */
extern T1 T1262f27(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_parenthesis */
extern T1 T1261f27(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_parenthesis */
extern T1 T1236f13(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_parenthesis */
extern T1 T1234f19(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_parenthesis */
extern T1 T1233f24(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_parenthesis */
extern T1 T1232f19(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_parenthesis */
extern T1 T943f36(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_parenthesis */
extern T1 T930f36(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_parenthesis */
extern T1 T924f39(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_parenthesis */
extern T1 T858f8(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_parenthesis */
extern T1 T832f26(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_parenthesis */
extern T1 T649f92(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_parenthesis */
extern T1 T181f80(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and */
extern T1 T1784f4(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and */
extern T1 T1262f7(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and */
extern T1 T1261f7(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and */
extern T1 T1236f22(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_and */
extern T1 T1234f14(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and */
extern T1 T1233f14(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_and */
extern T1 T1232f14(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and */
extern T1 T943f12(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and */
extern T1 T930f16(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and */
extern T1 T924f15(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and */
extern T1 T858f43(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and */
extern T1 T832f21(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and */
extern T1 T649f69(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and */
extern T1 T181f50(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_div */
extern T1 T1784f6(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_div */
extern T1 T1262f14(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_div */
extern T1 T1261f14(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_div */
extern T1 T1236f24(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_div */
extern T1 T1234f49(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_div */
extern T1 T1233f38(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_div */
extern T1 T1232f35(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_div */
extern T1 T943f23(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_div */
extern T1 T930f23(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_div */
extern T1 T924f26(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_div */
extern T1 T858f45(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_div */
extern T1 T832f36(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_div */
extern T1 T649f79(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_div */
extern T1 T181f58(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_divide */
extern T1 T1784f7(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_divide */
extern T1 T1262f15(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_divide */
extern T1 T1261f15(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_divide */
extern T1 T1236f25(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_divide */
extern T1 T1234f50(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_divide */
extern T1 T1233f39(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_divide */
extern T1 T1232f36(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_divide */
extern T1 T943f24(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_divide */
extern T1 T930f24(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_divide */
extern T1 T924f27(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_divide */
extern T1 T858f46(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_divide */
extern T1 T832f37(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_divide */
extern T1 T649f80(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_divide */
extern T1 T181f59(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_ge */
extern T1 T1784f8(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_ge */
extern T1 T1262f16(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_ge */
extern T1 T1261f16(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_ge */
extern T1 T1236f26(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_ge */
extern T1 T1234f51(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_ge */
extern T1 T1233f40(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_ge */
extern T1 T1232f37(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_ge */
extern T1 T943f25(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_ge */
extern T1 T930f25(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_ge */
extern T1 T924f28(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_ge */
extern T1 T858f47(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_ge */
extern T1 T832f38(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_ge */
extern T1 T649f81(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_ge */
extern T1 T181f60(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_gt */
extern T1 T1784f9(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_gt */
extern T1 T1262f17(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_gt */
extern T1 T1261f17(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_gt */
extern T1 T1236f27(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_gt */
extern T1 T1234f52(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_gt */
extern T1 T1233f41(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_gt */
extern T1 T1232f38(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_gt */
extern T1 T943f26(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_gt */
extern T1 T930f26(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_gt */
extern T1 T924f29(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_gt */
extern T1 T858f48(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_gt */
extern T1 T832f39(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_gt */
extern T1 T649f82(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_gt */
extern T1 T181f61(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_le */
extern T1 T1784f11(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_le */
extern T1 T1262f18(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_le */
extern T1 T1261f18(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_le */
extern T1 T1236f29(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_le */
extern T1 T1234f53(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_le */
extern T1 T1233f42(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_le */
extern T1 T1232f39(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_le */
extern T1 T943f27(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_le */
extern T1 T930f27(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_le */
extern T1 T924f30(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_le */
extern T1 T858f50(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_le */
extern T1 T832f40(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_le */
extern T1 T649f83(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_le */
extern T1 T181f62(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_lt */
extern T1 T1784f12(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_lt */
extern T1 T1262f19(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_lt */
extern T1 T1261f19(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_lt */
extern T1 T1236f30(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_lt */
extern T1 T1234f54(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_lt */
extern T1 T1233f43(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_lt */
extern T1 T1232f40(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_lt */
extern T1 T943f28(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_lt */
extern T1 T930f28(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_lt */
extern T1 T924f31(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_lt */
extern T1 T858f51(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_lt */
extern T1 T832f41(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_lt */
extern T1 T649f84(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_lt */
extern T1 T181f63(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_minus */
extern T1 T1784f13(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_minus */
extern T1 T1262f20(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_minus */
extern T1 T1261f20(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_minus */
extern T1 T1236f31(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_minus */
extern T1 T1234f55(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_minus */
extern T1 T1233f44(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_minus */
extern T1 T1232f41(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_minus */
extern T1 T943f29(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_minus */
extern T1 T930f29(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_minus */
extern T1 T924f32(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_minus */
extern T1 T858f40(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_minus */
extern T1 T832f42(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_minus */
extern T1 T649f85(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_minus */
extern T1 T181f64(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_mod */
extern T1 T1784f14(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_mod */
extern T1 T1262f21(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_mod */
extern T1 T1261f21(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_mod */
extern T1 T1236f32(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_mod */
extern T1 T1234f56(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_mod */
extern T1 T1233f45(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_mod */
extern T1 T1232f42(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_mod */
extern T1 T943f30(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_mod */
extern T1 T930f30(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_mod */
extern T1 T924f33(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_mod */
extern T1 T858f52(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_mod */
extern T1 T832f43(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_mod */
extern T1 T649f86(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_mod */
extern T1 T181f65(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or */
extern T1 T1784f15(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or */
extern T1 T1262f8(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or */
extern T1 T1261f8(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or */
extern T1 T1236f33(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_or */
extern T1 T1234f15(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or */
extern T1 T1233f15(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_or */
extern T1 T1232f15(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or */
extern T1 T943f13(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or */
extern T1 T930f17(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or */
extern T1 T924f16(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or */
extern T1 T858f53(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or */
extern T1 T832f22(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or */
extern T1 T649f70(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or */
extern T1 T181f51(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_plus */
extern T1 T1784f17(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_plus */
extern T1 T1262f22(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_plus */
extern T1 T1261f22(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_plus */
extern T1 T1236f35(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_plus */
extern T1 T1234f57(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_plus */
extern T1 T1233f46(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_plus */
extern T1 T1232f43(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_plus */
extern T1 T943f31(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_plus */
extern T1 T930f31(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_plus */
extern T1 T924f34(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_plus */
extern T1 T858f39(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_plus */
extern T1 T832f44(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_plus */
extern T1 T649f87(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_plus */
extern T1 T181f66(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_power */
extern T1 T1784f18(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_power */
extern T1 T1262f23(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_power */
extern T1 T1261f23(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_power */
extern T1 T1236f36(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_power */
extern T1 T1234f58(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_power */
extern T1 T1233f47(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_power */
extern T1 T1232f44(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_power */
extern T1 T943f32(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_power */
extern T1 T930f32(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_power */
extern T1 T924f35(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_power */
extern T1 T858f55(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_power */
extern T1 T832f45(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_power */
extern T1 T649f88(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_power */
extern T1 T181f67(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_times */
extern T1 T1784f19(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_times */
extern T1 T1262f24(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_times */
extern T1 T1261f24(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_times */
extern T1 T1236f37(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_times */
extern T1 T1234f59(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_times */
extern T1 T1233f48(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_times */
extern T1 T1232f45(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_times */
extern T1 T943f33(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_times */
extern T1 T930f33(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_times */
extern T1 T924f36(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_times */
extern T1 T858f56(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_times */
extern T1 T832f46(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_times */
extern T1 T649f89(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_times */
extern T1 T181f68(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_xor */
extern T1 T1784f20(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor */
extern T1 T1262f25(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor */
extern T1 T1261f25(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor */
extern T1 T1236f38(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_xor */
extern T1 T1234f60(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_xor */
extern T1 T1233f49(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_xor */
extern T1 T1232f46(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor */
extern T1 T943f34(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor */
extern T1 T930f34(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_xor */
extern T1 T924f37(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_xor */
extern T1 T858f57(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_xor */
extern T1 T832f47(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor */
extern T1 T649f90(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_xor */
extern T1 T181f69(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_dotdot */
extern T1 T1784f23(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_dotdot */
extern T1 T1262f28(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_dotdot */
extern T1 T1261f28(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_dotdot */
extern T1 T1236f39(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_dotdot */
extern T1 T1234f70(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_dotdot */
extern T1 T1233f59(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_dotdot */
extern T1 T1232f56(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_dotdot */
extern T1 T943f37(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_dotdot */
extern T1 T930f37(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_dotdot */
extern T1 T924f40(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_dotdot */
extern T1 T858f58(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_dotdot */
extern T1 T832f59(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_dotdot */
extern T1 T649f93(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_dotdot */
extern T1 T181f81(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_minus */
extern T1 T1784f25(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_minus */
extern T1 T1262f11(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_minus */
extern T1 T1261f11(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_minus */
extern T1 T1236f19(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix_minus */
extern T1 T1234f46(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_minus */
extern T1 T1233f35(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_prefix_minus */
extern T1 T1232f32(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_minus */
extern T1 T943f20(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_minus */
extern T1 T930f20(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_minus */
extern T1 T924f23(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_minus */
extern T1 T858f38(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_minus */
extern T1 T832f33(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_minus */
extern T1 T649f76(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_minus */
extern T1 T181f55(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_plus */
extern T1 T1784f36(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_plus */
extern T1 T1262f12(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_plus */
extern T1 T1261f12(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_plus */
extern T1 T1236f20(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix_plus */
extern T1 T1234f47(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_plus */
extern T1 T1233f36(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_prefix_plus */
extern T1 T1232f33(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_plus */
extern T1 T943f21(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_plus */
extern T1 T930f21(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_plus */
extern T1 T924f24(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_plus */
extern T1 T858f37(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_plus */
extern T1 T832f34(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_plus */
extern T1 T649f77(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_plus */
extern T1 T181f56(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_not */
extern T1 T1784f38(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not */
extern T1 T1262f13(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not */
extern T1 T1261f13(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not */
extern T1 T1236f21(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix_not */
extern T1 T1234f48(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_not */
extern T1 T1233f37(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_prefix_not */
extern T1 T1232f34(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_not */
extern T1 T943f22(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not */
extern T1 T930f22(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_not */
extern T1 T924f25(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_not */
extern T1 T858f42(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_not */
extern T1 T832f35(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_not */
extern T1 T649f78(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_not */
extern T1 T181f57(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.hash_code */
extern T6 T858f41(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_precursor */
extern T1 T1784f29(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_precursor */
extern T1 T1234f74(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_precursor */
extern T1 T1233f61(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_precursor */
extern T1 T1232f60(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_precursor */
extern T1 T943f38(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_precursor */
extern T1 T930f38(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_precursor */
extern T1 T924f41(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_precursor */
extern T1 T906f14(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_precursor */
extern T1 T832f61(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_precursor */
extern T1 T649f94(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_precursor */
extern T1 T181f90(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.precursor_keyword */
extern T0* T1784f30(GE_context* ac, T0* C);
/* ET_INFIX_NAME.precursor_keyword */
extern T0* T1234f75(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.precursor_keyword */
extern T0* T1233f62(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.precursor_keyword */
extern T0* T1232f61(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.precursor_keyword */
extern T0* T943f39(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.precursor_keyword */
extern T0* T930f39(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.precursor_keyword */
extern T0* T924f42(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.precursor_keyword */
extern T0* T906f15(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.precursor_keyword */
extern T0* T832f62(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.precursor_keyword */
extern T0* T649f95(GE_context* ac, T0* C);
/* ET_IDENTIFIER.precursor_keyword */
extern T0* T181f91(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and_then */
extern T1 T1784f5(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then */
extern T1 T1262f4(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then */
extern T1 T1236f23(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_and_then */
extern T1 T1234f11(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and_then */
extern T1 T1233f11(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_and_then */
extern T1 T1232f11(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then */
extern T1 T943f9(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then */
extern T1 T930f13(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and_then */
extern T1 T924f12(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and_then */
extern T1 T858f44(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and_then */
extern T1 T832f18(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then */
extern T1 T649f66(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and_then */
extern T1 T181f47(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_implies */
extern T1 T1784f10(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies */
extern T1 T1262f6(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies */
extern T1 T1261f6(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies */
extern T1 T1236f28(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_implies */
extern T1 T1234f13(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_implies */
extern T1 T1233f13(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_implies */
extern T1 T1232f13(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies */
extern T1 T943f11(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies */
extern T1 T930f15(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_implies */
extern T1 T924f14(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_implies */
extern T1 T858f49(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_implies */
extern T1 T832f20(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies */
extern T1 T649f68(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_implies */
extern T1 T181f49(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or_else */
extern T1 T1784f16(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else */
extern T1 T1261f5(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else */
extern T1 T1236f34(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_or_else */
extern T1 T1234f12(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or_else */
extern T1 T1233f12(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_or_else */
extern T1 T1232f12(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else */
extern T1 T943f10(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else */
extern T1 T930f14(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else */
extern T1 T924f13(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or_else */
extern T1 T858f54(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or_else */
extern T1 T832f19(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else */
extern T1 T649f67(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or_else */
extern T1 T181f48(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.lower_name */
extern T0* T1784f27(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.name */
extern T0* T1784f31(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.lower_name */
extern T0* T1262f29(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.name */
extern T0* T1262f31(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.lower_name */
extern T0* T1261f29(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.name */
extern T0* T1261f31(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.lower_name */
extern T0* T943f40(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.name */
extern T0* T943f41(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.lower_name */
extern T0* T930f40(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.name */
extern T0* T930f41(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.lower_name */
extern T0* T924f43(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.name */
extern T0* T924f44(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.lower_name */
extern T0* T906f16(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.lower_name */
extern T0* T649f98(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.name */
extern T0* T649f99(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_tuple_label */
extern T1 T1262f10(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_tuple_label */
extern T1 T1261f10(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_tuple_label */
extern T1 T943f15(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_tuple_label */
extern T1 T930f19(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_tuple_label */
extern T1 T924f18(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_tuple_label */
extern T1 T649f72(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.position */
extern T0* T1262f30(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.position */
extern T0* T1261f30(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.position */
extern T0* T943f8(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.position */
extern T0* T930f5(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.position */
extern T0* T924f11(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.position */
extern T0* T906f9(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_call_agent */
extern T1 T1855f17(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_call_agent */
extern T1 T1264f11(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_call_agent */
extern T1 T1260f11(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_call_agent */
extern T1 T1244f10(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_call_agent */
extern T1 T985f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T290f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T287f6(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_tuple_label */
extern T1 T1855f16(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_tuple_label */
extern T1 T1264f10(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_tuple_label */
extern T1 T1260f10(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_tuple_label */
extern T1 T1244f9(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_tuple_label */
extern T1 T988f23(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_tuple_label */
extern T1 T985f8(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_tuple_label */
extern T1 T290f8(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_tuple_label */
extern T1 T287f5(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.position */
extern T0* T1244f11(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.position */
extern T0* T287f8(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments */
extern T0* T1855f14(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.arguments */
extern T0* T1264f9(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.arguments */
extern T0* T1244f8(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.name */
extern T0* T1855f15(GE_context* ac, T0* C);
/* ET_CALL_AGENT.name */
extern T0* T988f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.name */
extern T0* T290f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.name */
extern T0* T287f7(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.feature_name */
extern T0* T1784f24(GE_context* ac, T0* C);
/* ET_INFIX_NAME.feature_name */
extern T0* T1234f10(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.feature_name */
extern T0* T1233f31(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.feature_name */
extern T0* T1232f10(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.feature_name */
extern T0* T832f9(GE_context* ac, T0* C);
/* ET_IDENTIFIER.feature_name */
extern T0* T181f43(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_query */
extern T1 T1231f55(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_query */
extern T1 T1230f55(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_query */
extern T1 T1228f58(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_query */
extern T1 T1227f61(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_query */
extern T1 T1226f60(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_query */
extern T1 T533f52(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_query */
extern T1 T527f54(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_query */
extern T1 T365f38(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_query */
extern T1 T364f38(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_query */
extern T1 T362f39(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_query */
extern T1 T330f41(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_query */
extern T1 T259f39(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_dotnet */
extern T1 T1231f63(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_dotnet */
extern T1 T1230f61(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_dotnet */
extern T1 T1228f60(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_dotnet */
extern T1 T1227f63(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_dotnet */
extern T1 T1226f62(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_dotnet */
extern T1 T533f53(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_dotnet */
extern T1 T527f60(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_dotnet */
extern T1 T365f50(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_dotnet */
extern T1 T364f53(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_dotnet */
extern T1 T362f53(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_dotnet */
extern T1 T330f56(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_dotnet */
extern T1 T259f58(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.same_version */
extern T1 T1231f56(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.same_version */
extern T1 T1230f56(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.same_version */
extern T1 T1228f59(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.same_version */
extern T1 T1227f62(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.same_version */
extern T1 T1226f61(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.same_version */
extern T1 T533f54(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.same_version */
extern T1 T527f55(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.same_version */
extern T1 T365f39(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.same_version */
extern T1 T364f39(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.same_version */
extern T1 T362f40(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.same_version */
extern T1 T330f42(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.same_version */
extern T1 T259f40(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.undefined_feature */
extern T0* T1231f64(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_feature_clause */
extern void T533f92(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_semicolon */
extern void T533f91(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_end_keyword */
extern void T533f90(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.undefined_feature */
extern T0* T1230f62(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.undefined_feature */
extern T0* T1228f61(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_feature_clause */
extern void T1228f94(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_semicolon */
extern void T1228f93(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_end_keyword */
extern void T1228f92(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.undefined_feature */
extern T0* T1227f64(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.undefined_feature */
extern T0* T1226f63(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.undefined_feature */
extern T0* T533f59(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.undefined_feature */
extern T0* T527f61(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.undefined_feature */
extern T0* T365f57(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.obsolete_message */
extern T0* T365f59(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.undefined_feature */
extern T0* T364f59(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.obsolete_message */
extern T0* T364f61(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.undefined_feature */
extern T0* T362f59(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.obsolete_message */
extern T0* T362f61(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.undefined_feature */
extern T0* T330f62(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.undefined_feature */
extern T0* T259f64(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.renamed_feature */
extern T0* T1231f65(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_feature_clause */
extern void T1231f97(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_semicolon */
extern void T1231f96(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_end_keyword */
extern void T1231f95(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.renamed_feature */
extern T0* T1230f63(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_feature_clause */
extern void T1230f97(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_semicolon */
extern void T1230f96(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_end_keyword */
extern void T1230f95(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.renamed_feature */
extern T0* T1228f62(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_deferred_keyword */
extern void T1228f91(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.renamed_feature */
extern T0* T1227f65(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_feature_clause */
extern void T1227f99(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_semicolon */
extern void T1227f98(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_end_keyword */
extern void T1227f97(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.renamed_feature */
extern T0* T1226f64(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_feature_clause */
extern void T1226f97(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_semicolon */
extern void T1226f96(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_end_keyword */
extern void T1226f95(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.renamed_feature */
extern T0* T533f60(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_deferred_keyword */
extern void T533f89(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.renamed_feature */
extern T0* T527f62(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_feature_clause */
extern void T527f95(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_semicolon */
extern void T527f94(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_end_keyword */
extern void T527f93(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.renamed_feature */
extern T0* T365f58(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_indexing */
extern void T365f85(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_feature_clause */
extern void T365f84(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_semicolon */
extern void T365f83(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.renamed_feature */
extern T0* T364f60(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_indexing */
extern void T364f89(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_feature_clause */
extern void T364f88(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_semicolon */
extern void T364f87(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_unique_keyword */
extern void T364f86(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_is_keyword */
extern void T364f85(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.renamed_feature */
extern T0* T362f60(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_indexing */
extern void T362f88(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_feature_clause */
extern void T362f87(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_semicolon */
extern void T362f86(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_is_keyword */
extern void T362f85(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.renamed_feature */
extern T0* T330f63(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_feature_clause */
extern void T330f95(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_semicolon */
extern void T330f94(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_end_keyword */
extern void T330f93(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.renamed_feature */
extern T0* T259f65(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_feature_clause */
extern void T259f99(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_semicolon */
extern void T259f98(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_end_keyword */
extern void T259f97(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_bracketable */
extern T1 T1231f59(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_bracketable */
extern T1 T1230f59(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_bracketable */
extern T1 T533f57(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_bracketable */
extern T1 T527f58(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_prefixable */
extern T1 T1231f58(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_prefixable */
extern T1 T1230f58(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_prefixable */
extern T1 T533f56(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_prefixable */
extern T1 T527f57(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_infixable */
extern T1 T1231f57(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_infixable */
extern T1 T1230f57(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_infixable */
extern T1 T533f55(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_infixable */
extern T1 T527f56(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_attribute */
extern T1 T1231f38(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_attribute */
extern T1 T1230f36(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_attribute */
extern T1 T533f33(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_attribute */
extern T1 T527f42(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_constant_attribute */
extern T1 T1231f39(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_constant_attribute */
extern T1 T1230f38(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_constant_attribute */
extern T1 T533f36(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_constant_attribute */
extern T1 T527f36(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_unique_attribute */
extern T1 T1231f42(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_unique_attribute */
extern T1 T1230f41(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_unique_attribute */
extern T1 T533f37(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_unique_attribute */
extern T1 T527f37(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.type */
extern T0* T1231f40(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.type */
extern T0* T1230f40(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.type */
extern T0* T533f35(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.type */
extern T0* T527f31(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_procedure */
extern T1 T1231f53(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_procedure */
extern T1 T1230f53(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_procedure */
extern T1 T1228f57(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_procedure */
extern T1 T1227f60(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_procedure */
extern T1 T1226f59(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_procedure */
extern T1 T533f50(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_procedure */
extern T1 T527f53(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_procedure */
extern T1 T365f37(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_procedure */
extern T1 T364f37(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_procedure */
extern T1 T362f38(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_procedure */
extern T1 T330f40(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_procedure */
extern T1 T259f38(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once */
extern T1 T1231f54(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once */
extern T1 T533f51(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_once */
extern T1 T527f38(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.lower_name */
extern T0* T1231f31(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.lower_name */
extern T0* T1230f31(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.lower_name */
extern T0* T533f32(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.lower_name */
extern T0* T527f41(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_never_void */
extern T1 T1855f11(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_never_void */
extern T1 T1853f11(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_never_void */
extern T1 T1716f11(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_never_void */
extern T1 T1266f13(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_never_void */
extern T1 T1265f5(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_never_void */
extern T1 T1264f5(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_never_void */
extern T1 T1260f15(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_never_void */
extern T1 T1255f8(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_never_void */
extern T1 T1169f8(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_never_void */
extern T1 T1150f5(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_never_void */
extern T1 T985f5(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_never_void */
extern T1 T957f17(GE_context* ac, T0* C);
/* ET_VOID.is_never_void */
extern T1 T946f8(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_never_void */
extern T1 T747f8(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_never_void */
extern T1 T321f7(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_never_void */
extern T1 T320f7(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_never_void */
extern T1 T319f7(GE_context* ac, T0* C);
/* ET_RESULT.is_never_void */
extern T1 T312f5(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T291f11(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T290f6(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_never_void */
extern T1 T181f21(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_current */
extern T1 T1855f5(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_current */
extern T1 T1854f5(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_current */
extern T1 T1853f5(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_current */
extern T1 T1716f4(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1273f26(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1272f29(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1271f28(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1270f27(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1269f30(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1268f29(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_current */
extern T1 T1267f16(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_current */
extern T1 T1266f20(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_current */
extern T1 T1265f13(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_current */
extern T1 T1264f16(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_current */
extern T1 T1263f14(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_current */
extern T1 T1260f16(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_current */
extern T1 T1259f13(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_current */
extern T1 T1258f13(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_current */
extern T1 T1257f13(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_current */
extern T1 T1256f13(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_current */
extern T1 T1255f17(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_current */
extern T1 T1209f24(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_current */
extern T1 T1208f24(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_current */
extern T1 T1207f24(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_current */
extern T1 T1206f24(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_current */
extern T1 T1204f26(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_current */
extern T1 T1203f26(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_current */
extern T1 T1202f50(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_current */
extern T1 T1201f50(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_current */
extern T1 T1200f50(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_current */
extern T1 T1199f50(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_current */
extern T1 T1198f50(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_current */
extern T1 T1197f26(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_current */
extern T1 T1196f30(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_current */
extern T1 T1195f25(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_current */
extern T1 T1172f19(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_current */
extern T1 T1169f17(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_current */
extern T1 T1150f14(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_current */
extern T1 T1136f19(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_current */
extern T1 T988f19(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_current */
extern T1 T985f15(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_current */
extern T1 T957f23(GE_context* ac, T0* C);
/* ET_VOID.is_current */
extern T1 T946f20(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_current */
extern T1 T831f23(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_current */
extern T1 T747f16(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_current */
extern T1 T325f17(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_current */
extern T1 T321f13(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_current */
extern T1 T320f13(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_current */
extern T1 T319f16(GE_context* ac, T0* C);
/* ET_RESULT.is_current */
extern T1 T312f21(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_current */
extern T1 T293f20(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_current */
extern T1 T291f14(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_current */
extern T1 T290f17(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_current */
extern T1 T181f87(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1273f32(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1272f34(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1271f33(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1270f33(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1269f35(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1268f34(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_false */
extern T1 T1267f20(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_false */
extern T1 T1266f25(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_false */
extern T1 T1265f17(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_false */
extern T1 T1264f22(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_false */
extern T1 T1263f18(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_false */
extern T1 T1260f20(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_false */
extern T1 T1259f17(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_false */
extern T1 T1258f17(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_false */
extern T1 T1257f17(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_false */
extern T1 T1256f17(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_false */
extern T1 T1255f21(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_false */
extern T1 T1209f28(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_false */
extern T1 T1208f28(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_false */
extern T1 T1207f28(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_false */
extern T1 T1206f28(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_false */
extern T1 T1204f30(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_false */
extern T1 T1203f30(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_false */
extern T1 T1202f55(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_false */
extern T1 T1201f55(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_false */
extern T1 T1200f55(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_false */
extern T1 T1199f55(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_false */
extern T1 T1198f55(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_false */
extern T1 T1197f31(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_false */
extern T1 T1196f35(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_false */
extern T1 T1195f29(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_false */
extern T1 T1172f24(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_false */
extern T1 T1169f21(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_false */
extern T1 T1150f18(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_false */
extern T1 T1136f23(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_false */
extern T1 T988f26(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_false */
extern T1 T985f21(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_false */
extern T1 T957f29(GE_context* ac, T0* C);
/* ET_VOID.is_false */
extern T1 T946f25(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_false */
extern T1 T831f31(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_false */
extern T1 T747f22(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_false */
extern T1 T325f24(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_false */
extern T1 T321f17(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_false */
extern T1 T320f19(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_false */
extern T1 T319f20(GE_context* ac, T0* C);
/* ET_RESULT.is_false */
extern T1 T312f26(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_false */
extern T1 T293f24(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T291f19(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T290f22(GE_context* ac, T0* C);
/* ET_CURRENT.is_false */
extern T1 T285f28(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_false */
extern T1 T181f100(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.unparenthesized_expression */
extern T0* T1855f12(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.unparenthesized_expression */
extern T0* T1854f12(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.unparenthesized_expression */
extern T0* T1853f12(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.unparenthesized_expression */
extern T0* T1716f7(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1273f28(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1272f30(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1271f29(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1270f29(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1269f31(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1268f30(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1267f17(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.unparenthesized_expression */
extern T0* T1266f21(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.unparenthesized_expression */
extern T0* T1265f14(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.unparenthesized_expression */
extern T0* T1264f19(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.unparenthesized_expression */
extern T0* T1263f15(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.unparenthesized_expression */
extern T0* T1260f17(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.unparenthesized_expression */
extern T0* T1259f14(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.unparenthesized_expression */
extern T0* T1258f14(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.unparenthesized_expression */
extern T0* T1257f14(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.unparenthesized_expression */
extern T0* T1256f14(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.unparenthesized_expression */
extern T0* T1255f18(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1209f25(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1208f25(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.unparenthesized_expression */
extern T0* T1207f25(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.unparenthesized_expression */
extern T0* T1206f25(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.unparenthesized_expression */
extern T0* T1204f27(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.unparenthesized_expression */
extern T0* T1203f27(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1202f51(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1201f51(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1200f51(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1199f51(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1198f51(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1197f27(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.unparenthesized_expression */
extern T0* T1196f31(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1195f26(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.unparenthesized_expression */
extern T0* T1172f21(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T1169f18(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.unparenthesized_expression */
extern T0* T1150f15(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.unparenthesized_expression */
extern T0* T1136f20(GE_context* ac, T0* C);
/* ET_CALL_AGENT.unparenthesized_expression */
extern T0* T988f21(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.unparenthesized_expression */
extern T0* T985f18(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.unparenthesized_expression */
extern T0* T957f24(GE_context* ac, T0* C);
/* ET_VOID.unparenthesized_expression */
extern T0* T946f21(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.unparenthesized_expression */
extern T0* T831f24(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.unparenthesized_expression */
extern T0* T747f17(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.unparenthesized_expression */
extern T0* T325f20(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T321f14(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T320f15(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.unparenthesized_expression */
extern T0* T319f17(GE_context* ac, T0* C);
/* ET_RESULT.unparenthesized_expression */
extern T0* T312f22(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.unparenthesized_expression */
extern T0* T293f21(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T291f16(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T290f19(GE_context* ac, T0* C);
/* ET_CURRENT.unparenthesized_expression */
extern T0* T285f24(GE_context* ac, T0* C);
/* ET_IDENTIFIER.unparenthesized_expression */
extern T0* T181f92(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1855f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FROM_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1854f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_BUILTIN_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1853f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_CAST_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1716f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1273f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1272f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1271f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1270f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1269f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1268f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1267f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T1266f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1265f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PREFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1264f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.manifest_constant_convert_feature */
extern T0* T1263f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1260f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXPRESSION_ADDRESS.manifest_constant_convert_feature */
extern T0* T1259f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT_ADDRESS.manifest_constant_convert_feature */
extern T0* T1258f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CURRENT_ADDRESS.manifest_constant_convert_feature */
extern T0* T1257f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_ADDRESS.manifest_constant_convert_feature */
extern T0* T1256f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1255f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C2_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1209f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C1_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1208f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FALSE_CONSTANT.manifest_constant_convert_feature */
extern T0* T1207f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TRUE_CONSTANT.manifest_constant_convert_feature */
extern T0* T1206f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T1204f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T1203f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BINARY_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1202f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OCTAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1201f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1200f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1199f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1198f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SPECIAL_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1197f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SPECIAL_MANIFEST_STRING.tokens */
extern T0* T1197f32(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.manifest_constant_convert_feature */
extern T0* T1196f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VERBATIM_STRING.tokens */
extern T0* T1196f36(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1195f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1172f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1169f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1150f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_ARRAY.manifest_constant_convert_feature */
extern T0* T1136f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.manifest_constant_convert_feature */
extern T0* T988f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T985f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACROSS_EXPRESSION.manifest_constant_convert_feature */
extern T0* T957f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VOID.manifest_constant_convert_feature */
extern T0* T946f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T831f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.tokens */
extern T0* T831f29(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T747f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.manifest_constant_convert_feature */
extern T0* T325f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T321f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T320f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T319f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT.manifest_constant_convert_feature */
extern T0* T312f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TUPLE.manifest_constant_convert_feature */
extern T0* T293f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T291f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T290f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CURRENT.manifest_constant_convert_feature */
extern T0* T285f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER.manifest_constant_convert_feature */
extern T0* T181f99(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_TO_EXPRESSION.position */
extern T0* T1855f4(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.position */
extern T0* T1854f16(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.position */
extern T0* T1853f15(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.position */
extern T0* T1716f5(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.position */
extern T0* T1273f16(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.position */
extern T0* T1272f18(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.position */
extern T0* T1271f14(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.position */
extern T0* T1270f15(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.position */
extern T0* T1269f18(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.position */
extern T0* T1268f18(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.position */
extern T0* T1267f6(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.position */
extern T0* T1266f10(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.position */
extern T0* T1265f6(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.position */
extern T0* T1264f6(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.position */
extern T0* T1263f6(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.position */
extern T0* T1260f6(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.position */
extern T0* T1259f7(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.position */
extern T0* T1258f7(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.position */
extern T0* T1257f7(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.position */
extern T0* T1256f7(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.position */
extern T0* T1255f10(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.position */
extern T0* T1209f9(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.position */
extern T0* T1208f9(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.position */
extern T0* T1207f10(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.position */
extern T0* T1206f10(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.position */
extern T0* T1204f25(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.position */
extern T0* T1203f25(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.position */
extern T0* T1202f16(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.position */
extern T0* T1201f16(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position */
extern T0* T1200f16(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position */
extern T0* T1199f16(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.position */
extern T0* T1198f16(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.position */
extern T0* T1197f10(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.position */
extern T0* T1196f29(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.position */
extern T0* T1195f9(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.position */
extern T0* T1172f12(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_empty */
extern T1 T1172f7(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.position */
extern T0* T1169f9(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.position */
extern T0* T1150f6(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T1136f8(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_empty */
extern T1 T1136f6(GE_context* ac, T0* C);
/* ET_CALL_AGENT.position */
extern T0* T988f11(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.position */
extern T0* T985f6(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.position */
extern T0* T957f18(GE_context* ac, T0* C);
/* ET_VOID.position */
extern T0* T946f10(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.position */
extern T0* T831f26(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.position */
extern T0* T747f9(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.position */
extern T0* T325f9(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.position */
extern T0* T321f8(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.position */
extern T0* T320f8(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.position */
extern T0* T319f8(GE_context* ac, T0* C);
/* ET_RESULT.position */
extern T0* T312f8(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.position */
extern T0* T293f15(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_empty */
extern T1 T293f16(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.position */
extern T0* T291f5(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.position */
extern T0* T290f10(GE_context* ac, T0* C);
/* ET_CURRENT.position */
extern T0* T285f8(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.last_leaf */
extern T0* T1855f21(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.last_leaf */
extern T0* T1854f20(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.last_leaf */
extern T0* T1853f16(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.last_leaf */
extern T0* T1716f15(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1273f33(GE_context* ac, T0* C);
extern T1 T1273f33ot1(T0* a1, T0** a2);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.last_leaf */
extern T0* T972f10(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1272f35(GE_context* ac, T0* C);
extern T1 T1272f35ot1(T0* a1, T0** a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1271f34(GE_context* ac, T0* C);
extern T1 T1271f34ot1(T0* a1, T0** a2);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T1270f34(GE_context* ac, T0* C);
extern T1 T1270f34ot1(T0* a1, T0** a2);
/* ET_ONCE_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T1269f36(GE_context* ac, T0* C);
extern T1 T1269f36ot1(T0* a1, T0** a2);
/* ET_DO_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T1268f35(GE_context* ac, T0* C);
extern T1 T1268f35ot1(T0* a1, T0** a2);
/* ET_ONCE_MANIFEST_STRING.last_leaf */
extern T0* T1267f21(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.last_leaf */
extern T0* T1266f26(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.last_leaf */
extern T0* T1265f18(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.last_leaf */
extern T0* T1264f23(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.last_leaf */
extern T0* T1263f19(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.last_leaf */
extern T0* T1260f21(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.last_leaf */
extern T0* T1259f18(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.last_leaf */
extern T0* T1258f18(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.last_leaf */
extern T0* T1257f18(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.last_leaf */
extern T0* T1256f18(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.last_leaf */
extern T0* T1255f22(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_leaf */
extern T0* T1209f34(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.last_leaf */
extern T0* T1208f34(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.last_leaf */
extern T0* T1207f30(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.last_leaf */
extern T0* T1206f30(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_leaf */
extern T0* T1204f32(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_leaf */
extern T0* T1203f32(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.last_leaf */
extern T0* T1202f61(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.last_leaf */
extern T0* T1201f61(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_leaf */
extern T0* T1200f61(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_leaf */
extern T0* T1199f61(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_leaf */
extern T0* T1198f61(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_leaf */
extern T0* T1197f34(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.last_leaf */
extern T0* T1196f38(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_leaf */
extern T0* T1195f35(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.last_leaf */
extern T0* T1172f25(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.last_leaf */
extern T0* T1169f26(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.last_leaf */
extern T0* T1150f19(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.last_leaf */
extern T0* T1136f24(GE_context* ac, T0* C);
/* ET_CALL_AGENT.last_leaf */
extern T0* T988f27(GE_context* ac, T0* C);
extern T1 T988f27ot1(T0* a1, T0** a2);
/* ET_BRACKET_EXPRESSION.last_leaf */
extern T0* T985f22(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.last_leaf */
extern T0* T649f100(GE_context* ac, T0* C);
/* ET_BRACKET_ARGUMENT_LIST.last_leaf */
extern T0* T982f10(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.last_leaf */
extern T0* T957f30(GE_context* ac, T0* C);
/* ET_VOID.last_leaf */
extern T0* T946f26(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_leaf */
extern T0* T831f33(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.last_leaf */
extern T0* T747f23(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.last_leaf */
extern T0* T325f22(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.last_leaf */
extern T0* T321f18(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.last_leaf */
extern T0* T320f20(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.last_leaf */
extern T0* T319f21(GE_context* ac, T0* C);
/* ET_RESULT.last_leaf */
extern T0* T312f27(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.last_leaf */
extern T0* T293f25(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.last_leaf */
extern T0* T291f20(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.last_leaf */
extern T0* T290f23(GE_context* ac, T0* C);
/* ET_CURRENT.last_leaf */
extern T0* T285f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T830f7(GE_context* ac, T0* C, T0* a1);
extern T1 T830f7ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T830f7p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T830f11(GE_context* ac, T0* C, T0* a1);
extern T1 T830f11ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T830f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T532f10(GE_context* ac, T0* C, T0* a1);
extern T1 T532f10ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T532f10p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T532f13(GE_context* ac, T0* C, T0* a1);
extern T1 T532f13ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T532f13p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_type */
extern T1 T334f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_type */
extern T1 T333f62(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.has_type */
extern T1 T322f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.has_type */
extern T1 T305f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T273f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T273f7p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T273f11(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T273f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.has_type */
extern T1 T238f20(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_types */
extern T0* T334f63(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_types */
extern T0* T333f64(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_types */
extern T0* T322f63(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_types */
extern T0* T305f63(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.dynamic_types */
extern T0* T238f61(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.special_type */
extern T0* T830f14(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.special_type */
extern T0* T532f14(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.special_type */
extern T0* T334f69(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.special_type */
extern T0* T333f70(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.special_type */
extern T0* T322f69(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.special_type */
extern T0* T305f69(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.special_type */
extern T0* T273f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.special_type */
extern T0* T238f67(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_empty */
extern T1 T830f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_empty */
extern T1 T532f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_empty */
extern T1 T334f62(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_empty */
extern T1 T333f63(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_empty */
extern T1 T322f62(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_empty */
extern T1 T305f62(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_empty */
extern T1 T273f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_empty */
extern T1 T238f21(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_expanded */
extern T1 T830f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_expanded */
extern T1 T532f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_expanded */
extern T1 T273f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_expanded */
extern T1 T830f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_expanded */
extern T1 T532f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_expanded */
extern T1 T334f59(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_expanded */
extern T1 T333f60(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_expanded */
extern T1 T322f59(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_expanded */
extern T1 T305f59(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_expanded */
extern T1 T273f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.has_expanded */
extern T1 T238f70(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.count */
extern T6 T334f56(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.count */
extern T6 T333f57(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.count */
extern T6 T322f56(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.count */
extern T6 T305f56(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.count */
extern T6 T238f62(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.dynamic_type */
extern T0* T830f13(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.dynamic_type */
extern T0* T532f11(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_type */
extern T0* T334f57(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_type */
extern T0* T333f58(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_type */
extern T0* T322f57(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_type */
extern T0* T305f57(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.dynamic_type */
extern T0* T273f5(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.dynamic_type */
extern T0* T238f64(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.can_be_void */
extern T1 T830f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.can_be_void */
extern T1 T532f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.can_be_void */
extern T1 T334f58(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.can_be_void */
extern T1 T333f59(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.can_be_void */
extern T1 T322f58(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.can_be_void */
extern T1 T305f58(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.can_be_void */
extern T1 T273f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.can_be_void */
extern T1 T238f69(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_never_void */
extern T1 T334f60(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_never_void */
extern T1 T333f61(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_never_void */
extern T1 T322f60(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_never_void */
extern T1 T305f60(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_never_void */
extern T1 T238f34(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T1404f8(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.named_types */
extern T0* T1403f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.named_types */
extern T0* T642f6(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T504f2(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.named_types */
extern T0* T251f8(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T1404f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.conforms_to_types */
extern T1 T1403f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_LIST.conforms_to_types */
extern T1 T642f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T504f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.conforms_to_types */
extern T1 T251f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T1404f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.same_named_types */
extern T1 T1403f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_LIST.same_named_types */
extern T1 T642f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T504f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_named_types */
extern T1 T251f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T1404f7(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.actual_parameter */
extern T0* T1403f8(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.actual_parameter */
extern T0* T642f17(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T504f8(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.actual_parameter */
extern T0* T251f6(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.item */
extern T0* T251f7(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_anchored_type */
extern T1 T1404f11(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_anchored_type */
extern T1 T1403f12(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_anchored_type */
extern T1 T642f18(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_anchored_type */
extern T1 T504f9(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_anchored_type */
extern T1 T251f16(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T1404f12(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_formal_types */
extern T1 T1403f13(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_types */
extern T1 T642f19(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T504f10(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.has_formal_types */
extern T1 T251f17(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T1404f13(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.depends_on_qualified_anchored_type */
extern T1 T1403f14(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T642f20(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T504f11(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T251f18(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T1404f14(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.resolved_formal_parameters */
extern T0* T1403f15(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T642f21(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T504f12(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T251f19(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T1404f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.same_syntactical_types */
extern T1 T1403f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T642f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T504f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T251f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T1404f16(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_identifier_anchored_type */
extern T1 T1403f17(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T642f23(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T504f14(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T251f21(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T1404f10(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.is_empty */
extern T1 T1403f4(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.is_empty */
extern T1 T642f14(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T504f5(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T251f11(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.count */
extern T6 T1403f10(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T1404f9(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.type */
extern T0* T1403f11(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.type */
extern T0* T642f12(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T504f4(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.type */
extern T0* T251f9(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T1404f17(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.index_of_label */
extern T6 T1403f18(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.index_of_label */
extern T6 T642f24(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T504f15(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.index_of_label */
extern T6 T251f22(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T1404f18(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.last_leaf */
extern T0* T1403f19(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_leaf */
extern unsigned char ge807os11693;
extern T0* ge807ov11693;
extern T0* T81f1290(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.make */
extern T0* T1888c5(GE_context* ac);
/* ET_ACTUAL_PARAMETER_SUBLIST.tokens */
extern T0* T1403f20(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.last_leaf */
extern T0* T642f25(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T504f16(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.last_leaf */
extern T0* T251f25(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_reference_mark */
extern T1 T1217f6(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_reference */
extern T1 T1217f14(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_reference_mark */
extern T1 T1216f6(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_reference */
extern T1 T1216f14(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference_mark */
extern T1 T954f6(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference */
extern T1 T954f51(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_reference_mark */
extern T1 T649f10(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_reference */
extern T1 T649f56(GE_context* ac, T0* C);
/* ET_KEYWORD.is_reference_mark */
extern T1 T396f18(GE_context* ac, T0* C);
/* ET_SYMBOL.is_reference_mark */
extern T1 T345f10(GE_context* ac, T0* C);
/* ET_SYMBOL.is_reference */
extern T1 T345f58(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate_mark */
extern T1 T954f9(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate */
extern T1 T954f56(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separate_mark */
extern T1 T649f13(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separate */
extern T1 T649f61(GE_context* ac, T0* C);
/* ET_KEYWORD.is_separate_mark */
extern T1 T396f7(GE_context* ac, T0* C);
/* ET_KEYWORD.is_separate */
extern T1 T396f14(GE_context* ac, T0* C);
/* ET_SYMBOL.is_separate_mark */
extern T1 T345f13(GE_context* ac, T0* C);
/* ET_SYMBOL.is_separate */
extern T1 T345f61(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.overridden_type_mark */
extern T0* T1217f16(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.implicit_type_mark */
extern T0* T81f32(GE_context* ac, T0* C, T1 a1, T1 a2, T1 a3, T1 a4, T1 a5);
/* ET_TOKEN_CONSTANTS.implicit_no_type_mark */
extern unsigned char ge807os11691;
extern T0* ge807ov11691;
extern T0* T81f68(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_reference_type_mark */
extern unsigned char ge807os11687;
extern T0* ge807ov11687;
extern T0* T81f67(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_reference_mark */
extern void T344f18(GE_context* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_expanded_type_mark */
extern unsigned char ge807os11686;
extern T0* ge807ov11686;
extern T0* T81f66(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_expanded_mark */
extern void T344f17(GE_context* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_separate_type_mark */
extern unsigned char ge807os11688;
extern T0* ge807ov11688;
extern T0* T81f65(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_separate_reference_type_mark */
extern unsigned char ge807os11690;
extern T0* ge807ov11690;
extern T0* T81f64(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_separate_expanded_type_mark */
extern unsigned char ge807os11689;
extern T0* ge807ov11689;
extern T0* T81f63(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_reference_type_mark */
extern unsigned char ge807os11682;
extern T0* ge807ov11682;
extern T0* T81f61(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_expanded_type_mark */
extern unsigned char ge807os11681;
extern T0* ge807ov11681;
extern T0* T81f60(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_type_mark */
extern unsigned char ge807os11683;
extern T0* ge807ov11683;
extern T0* T81f59(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_reference_type_mark */
extern unsigned char ge807os11685;
extern T0* ge807ov11685;
extern T0* T81f58(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_expanded_type_mark */
extern unsigned char ge807os11684;
extern T0* ge807ov11684;
extern T0* T81f57(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_reference_type_mark */
extern unsigned char ge807os11676;
extern T0* ge807ov11676;
extern T0* T81f56(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_expanded_type_mark */
extern unsigned char ge807os11675;
extern T0* ge807ov11675;
extern T0* T81f55(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_reference_type_mark */
extern unsigned char ge807os11679;
extern T0* ge807ov11679;
extern T0* T81f54(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_expanded_type_mark */
extern unsigned char ge807os11678;
extern T0* ge807ov11678;
extern T0* T81f53(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.tokens */
extern T0* T1217f12(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.overridden_type_mark */
extern T0* T1216f16(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.tokens */
extern T0* T1216f12(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.overridden_type_mark */
extern T0* T954f61(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.overridden_type_mark */
extern T0* T649f6(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.overridden_type_mark */
extern T0* T396f21(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.overridden_type_mark */
extern T0* T345f6(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.overridden_type_mark */
extern T0* T344f12(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.tokens */
extern T0* T344f11(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.text */
extern T0* T1217f4(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.text */
extern T0* T1216f4(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.text */
extern T0* T954f4(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.text */
extern T0* T649f8(GE_context* ac, T0* C);
/* ET_SYMBOL.text */
extern T0* T345f8(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.text */
extern T0* T344f9(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_expandedness_mark */
extern T1 T1217f10(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_expandedness_mark */
extern T1 T1216f10(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expandedness_mark */
extern T1 T954f10(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expandedness_mark */
extern T1 T649f14(GE_context* ac, T0* C);
/* ET_KEYWORD.is_expandedness_mark */
extern T1 T396f4(GE_context* ac, T0* C);
/* ET_SYMBOL.is_expandedness_mark */
extern T1 T345f14(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_expandedness_mark */
extern T1 T344f6(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_expanded_mark */
extern T1 T1217f5(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_expanded */
extern T1 T1217f13(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_expanded_mark */
extern T1 T1216f5(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_expanded */
extern T1 T1216f13(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded_mark */
extern T1 T954f5(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded */
extern T1 T954f50(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expanded_mark */
extern T1 T649f9(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expanded */
extern T1 T649f55(GE_context* ac, T0* C);
/* ET_KEYWORD.is_expanded_mark */
extern T1 T396f9(GE_context* ac, T0* C);
/* ET_SYMBOL.is_expanded_mark */
extern T1 T345f9(GE_context* ac, T0* C);
/* ET_SYMBOL.is_expanded */
extern T1 T345f57(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_separateness_mark */
extern T1 T1217f11(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_separateness_mark */
extern T1 T1216f11(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separateness_mark */
extern T1 T954f11(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separateness_mark */
extern T1 T649f15(GE_context* ac, T0* C);
/* ET_KEYWORD.is_separateness_mark */
extern T1 T396f5(GE_context* ac, T0* C);
/* ET_SYMBOL.is_separateness_mark */
extern T1 T345f15(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_separateness_mark */
extern T1 T344f7(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_implicit_mark */
extern T1 T1217f3(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_implicit_mark */
extern T1 T1216f3(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_implicit_mark */
extern T1 T954f69(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_implicit_mark */
extern T1 T649f7(GE_context* ac, T0* C);
/* ET_KEYWORD.is_implicit_mark */
extern T1 T396f8(GE_context* ac, T0* C);
/* ET_SYMBOL.is_implicit_mark */
extern T1 T345f7(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_attachment_mark */
extern T1 T1217f15(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_attachment_mark */
extern T1 T1216f15(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attachment_mark */
extern T1 T954f13(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attachment_mark */
extern T1 T649f5(GE_context* ac, T0* C);
/* ET_KEYWORD.is_attachment_mark */
extern T1 T396f6(GE_context* ac, T0* C);
/* ET_SYMBOL.is_attachment_mark */
extern T1 T345f4(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_attachment_mark */
extern T1 T344f10(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_attached_mark */
extern T1 T1217f7(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_attached_mark */
extern T1 T1216f7(GE_context* ac, T0* C);
/* ET_KEYWORD.is_attached */
extern T1 T396f12(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attached_mark */
extern T1 T954f7(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attached */
extern T1 T954f52(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attached_mark */
extern T1 T649f11(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attached */
extern T1 T649f57(GE_context* ac, T0* C);
/* ET_KEYWORD.is_attached_mark */
extern T1 T396f20(GE_context* ac, T0* C);
/* ET_KEYWORD.is_bang */
extern T1 T396f13(GE_context* ac, T0* C);
/* ET_SYMBOL.is_attached_mark */
extern T1 T345f11(GE_context* ac, T0* C);
/* ET_SYMBOL.is_attached */
extern T1 T345f59(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_detachable_mark */
extern T1 T1217f8(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_detachable_mark */
extern T1 T1216f8(GE_context* ac, T0* C);
/* ET_KEYWORD.is_detachable */
extern T1 T396f16(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_detachable_mark */
extern T1 T954f8(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_detachable */
extern T1 T954f54(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_detachable_mark */
extern T1 T649f12(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_detachable */
extern T1 T649f59(GE_context* ac, T0* C);
/* ET_KEYWORD.is_detachable_mark */
extern T1 T396f10(GE_context* ac, T0* C);
/* ET_KEYWORD.is_question_mark */
extern T1 T396f17(GE_context* ac, T0* C);
/* ET_SYMBOL.is_detachable_mark */
extern T1 T345f12(GE_context* ac, T0* C);
/* ET_SYMBOL.is_detachable */
extern T1 T345f60(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.position */
extern T0* T1217f17(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.position */
extern T0* T1216f17(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.position */
extern T0* T954f62(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.position */
extern T0* T649f4(GE_context* ac, T0* C);
/* ET_KEYWORD.position */
extern T0* T396f23(GE_context* ac, T0* C);
/* ET_SYMBOL.position */
extern T0* T345f5(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.position */
extern T0* T344f13(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_position */
extern unsigned char ge807os12248;
extern T0* ge807ov12248;
extern T0* T81f681(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.actual_parameter */
extern T0* T1558f6(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.actual_parameter */
extern T0* T1421f8(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.actual_parameter */
extern T0* T1243f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.actual_parameter */
extern T0* T1242f9(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.actual_parameter */
extern T0* T1241f9(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.actual_parameter */
extern T0* T1239f5(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.actual_parameter */
extern T0* T1214f15(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.actual_parameter */
extern T0* T1086f13(GE_context* ac, T0* C);
/* ET_LIKE_N.actual_parameter */
extern T0* T866f16(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.actual_parameter */
extern T0* T503f6(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.actual_parameter */
extern T0* T260f39(GE_context* ac, T0* C);
/* ET_CLASS.actual_parameter */
extern T0* T82f104(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.actual_parameter */
extern T0* T80f42(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T1558f3(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T1421f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.type */
extern T0* T1243f8(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type */
extern T0* T1242f8(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.type */
extern T0* T1241f8(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.type */
extern T0* T1239f3(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type */
extern T0* T1214f14(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.type */
extern T0* T1086f12(GE_context* ac, T0* C);
/* ET_LIKE_N.type */
extern T0* T866f15(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.type */
extern T0* T503f5(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.type */
extern T0* T260f38(GE_context* ac, T0* C);
/* ET_CLASS.type */
extern T0* T82f103(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.type */
extern T0* T80f7(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1558f5(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type */
extern T0* T1421f48(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type */
extern T0* T1243f49(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type */
extern T0* T1242f52(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type */
extern T0* T1241f51(GE_context* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1239f6(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1214f61(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1086f55(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.resolved_formal_parameters_with_type */
extern T0* T866f47(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type */
extern T0* T503f47(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type */
extern T0* T260f76(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type */
extern T0* T82f172(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T80f85(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.classes_in_group */
extern T0* T188f108(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T188f108ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T188f108ac2(T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T188f108ac3(T0* a1, T0* a2);
/* ET_ECF_LIBRARY.initial_classes_in_group_capacity */
extern unsigned char ge733os3699;
extern T6 ge733ov3699;
extern T6 T188f111(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.classes_in_group */
extern T0* T70f157(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_in_group */
extern T0* T70f157ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_in_group */
extern T0* T70f157ac2(T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.classes_in_group */
extern T0* T70f157ac3(T0* a1, T0* a2);
/* ET_LACE_SYSTEM.initial_classes_in_group_capacity */
extern T6 T70f165(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.classes_in_group */
extern T0* T64f165(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T64f165ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T64f165ac2(T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T64f165ac3(T0* a1, T0* a2);
/* ET_ECF_SYSTEM.initial_classes_in_group_capacity */
extern T6 T64f173(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.classes_in_group */
extern T0* T61f160(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_in_group */
extern T0* T61f160ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_in_group */
extern T0* T61f160ac2(T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.classes_in_group */
extern T0* T61f160ac3(T0* a1, T0* a2);
/* ET_XACE_SYSTEM.initial_classes_in_group_capacity */
extern T6 T61f168(GE_context* ac, T0* C);
/* ET_SYSTEM.classes_in_group */
extern T0* T33f149(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.classes_in_group */
extern T0* T33f149ac1(T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM.classes_in_group */
extern T0* T33f149ac2(T0* a1);
/* Creation of agent #3 in feature ET_SYSTEM.classes_in_group */
extern T0* T33f149ac3(T0* a1, T0* a2);
/* ET_SYSTEM.initial_classes_in_group_capacity */
extern T6 T33f152(GE_context* ac, T0* C);
/* ET_LIBRARY.full_name */
extern T0* T459f90(GE_context* ac, T0* C, T2 a1);
/* ET_LIBRARY.relative_name */
extern T0* T459f91(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.string_ */
extern T0* T459f92(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.full_name */
extern T0* T447f89(GE_context* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.relative_name */
extern T0* T447f92(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_DOTNET_ASSEMBLY.string_ */
extern T0* T447f94(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.full_name */
extern T0* T229f99(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.relative_name */
extern T0* T229f101(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.string_ */
extern T0* T229f103(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.full_name */
extern T0* T216f92(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_ASSEMBLY.relative_name */
extern T0* T216f94(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_ASSEMBLY.string_ */
extern T0* T216f96(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.full_name */
extern T0* T197f89(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.relative_name */
extern T0* T197f92(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_DOTNET_ASSEMBLY.string_ */
extern T0* T197f94(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.full_name */
extern T0* T188f101(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_SYSTEM.full_name */
extern T0* T70f156(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_SYSTEM.full_name */
extern T0* T64f172(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_SYSTEM.full_name */
extern T0* T61f167(GE_context* ac, T0* C, T2 a1);
/* ET_SYSTEM.full_name */
extern T0* T33f148(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_SYSTEM.relative_lower_name */
extern T0* T70f173(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_SYSTEM.string_ */
extern T0* T70f168(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.lower_name */
extern T0* T70f174(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.relative_lower_name */
extern T0* T64f181(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.string_ */
extern T0* T64f176(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.lower_name */
extern T0* T64f182(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.relative_lower_name */
extern T0* T61f177(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_SYSTEM.string_ */
extern T0* T61f172(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.lower_name */
extern T0* T61f178(GE_context* ac, T0* C);
/* ET_SYSTEM.relative_lower_name */
extern T0* T33f144(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.string_ */
extern T0* T33f138(GE_context* ac, T0* C);
/* ET_SYSTEM.lower_name */
extern T0* T33f146(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.relative_name */
extern T0* T70f164(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.relative_name */
extern T0* T64f174(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_SYSTEM.relative_name */
extern T0* T61f169(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.relative_name */
extern T0* T33f151(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.hash_code */
extern T6 T459f88(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.hash_code */
extern T6 T447f87(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.hash_code */
extern T6 T229f98(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.hash_code */
extern T6 T216f91(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.hash_code */
extern T6 T197f87(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.hash_code */
extern T6 T188f99(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.hash_code */
extern T6 T70f158(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.hash_code */
extern T6 T64f166(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.hash_code */
extern T6 T61f161(GE_context* ac, T0* C);
/* ET_SYSTEM.hash_code */
extern T6 T33f143(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.has_master_class */
extern T1 T188f107(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.has_master_class */
extern T1 T70f171(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.has_master_class */
extern T1 T64f178(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.has_master_class */
extern T1 T61f175(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.has_master_class */
extern T1 T33f142(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.master_class */
extern T0* T459f87(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.master_class */
extern T0* T188f98(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.master_class */
extern T0* T70f170(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.master_class */
extern T0* T64f177(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.master_class */
extern T0* T61f162(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.master_class */
extern T0* T33f140(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.shortest_path */
extern T0* T459f99(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.shortest_path */
extern T0* T459f99ac1(T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LIBRARY.shortest_path */
extern T0* T459f99ac2(T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.shortest_path */
extern T0* T459f99ac3(T0* a1, T0* a2);
/* KL_AGENT_ROUTINES [ET_UNIVERSE].negated */
extern T1 T1392f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.insert_in_hash_table */
extern void T459f180(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].force_first */
extern void T851f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].put */
extern void T851f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].move_cursors_right */
extern void T851f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE].set_position */
extern void T1459f5(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].move_right */
extern void T851f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].force */
extern void T1458f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_UNIVERSE].fill_with */
extern void T1457f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_UNIVERSE].extend */
extern void T1457f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].put_last */
extern void T851f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].resize */
extern void T851f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T1458f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T1457f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].new_capacity */
extern T6 T851f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].extendible */
extern T1 T851f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].before */
extern T1 T1390f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].back */
extern void T1390f16(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_back */
extern void T1389f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].add_traversing_cursor */
extern void T1389f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_next_cursor */
extern void T1390f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_position */
extern void T1390f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].remove_traversing_cursor */
extern void T1389f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_before */
extern void T1390f19(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_item */
extern T6 T1389f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].finish */
extern void T1390f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_finish */
extern void T1389f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_off */
extern T1 T1389f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].off */
extern T1 T1390f10(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].is_empty */
extern T1 T1389f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].forth */
extern void T1390f14(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_forth */
extern void T1389f58(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_after */
extern void T1390f17(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].go_after */
extern void T1390f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_go_after */
extern void T1389f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].has */
extern T1 T1389f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].search_position */
extern void T1389f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].hash_position */
extern T6 T1389f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_item */
extern T0* T1389f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_item */
extern T6 T1389f32(GE_context* ac, T0* C, T6 a1);
/* ET_LIBRARY.universe_actions */
extern unsigned char ge793os3718;
extern T0* ge793ov3718;
extern T0* T459f100(GE_context* ac, T0* C);
/* KL_AGENT_ROUTINES [ET_UNIVERSE].default_create */
extern T0* T1392c2(GE_context* ac);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].item */
extern T6 T1390f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_item */
extern T6 T1389f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_item */
extern T6 T1389f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].key */
extern T0* T1390f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_key */
extern T0* T1389f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].after */
extern T1 T1390f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].start */
extern void T1390f12(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_start */
extern void T1389f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_cursor */
extern T0* T1389f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].make */
extern T0* T1390c11(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].force_last */
extern void T1389f37(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_put */
extern void T1389f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_put */
extern void T1389f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_put */
extern void T1389f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].resize */
extern void T1389f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_resize */
extern void T1389f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].special_integer_ */
extern T0* T1389f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_resize */
extern void T1389f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_resize */
extern void T1389f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_resize */
extern void T1389f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_modulus */
extern T6 T1389f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_capacity */
extern T6 T1389f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_put */
extern void T1389f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].unset_found_item */
extern void T1389f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_map */
extern T0* T1389c36(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_with_equality_testers */
extern void T1389f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_sparse_container */
extern void T1389f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].set_internal_cursor */
extern void T1389f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_slots */
extern void T1389f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_clashes */
extern void T1389f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_key_storage */
extern void T1389f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_item_storage */
extern void T1389f51(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].make */
extern T0* T851c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].set_internal_cursor */
extern void T851f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].new_cursor */
extern T0* T851f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE].make */
extern T0* T1459c4(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].make */
extern T0* T1458f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_UNIVERSE].make_empty */
extern T0* T1457c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].default_create */
extern T0* T1458c3(GE_context* ac);
/* ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T447f98(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T447f98ac1(T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T447f98ac2(T0* a1);
/* Creation of agent #3 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T447f98ac3(T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T447f178(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.universe_actions */
extern T0* T447f99(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T229f110(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T229f110ac1(T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T229f110ac2(T0* a1);
/* Creation of agent #3 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T229f110ac3(T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.insert_in_hash_table */
extern void T229f201(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.universe_actions */
extern T0* T229f111(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T216f103(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T216f103ac1(T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T216f103ac2(T0* a1);
/* Creation of agent #3 in feature ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T216f103ac3(T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T216f187(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.universe_actions */
extern T0* T216f104(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T197f97(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T197f97ac1(T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T197f97ac2(T0* a1);
/* Creation of agent #3 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T197f97ac3(T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T197f178(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.universe_actions */
extern T0* T197f99(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.shortest_path */
extern T0* T188f113(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T188f113ac1(T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T188f113ac2(T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T188f113ac3(T0* a1, T0* a2);
/* ET_ECF_LIBRARY.insert_in_hash_table */
extern void T188f208(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_LIBRARY.universe_actions */
extern T0* T188f114(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.shortest_path */
extern T0* T70f167(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.shortest_path */
extern T0* T70f167ac1(T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.shortest_path */
extern T0* T70f167ac2(T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.shortest_path */
extern T0* T70f167ac3(T0* a1, T0* a2);
/* ET_LACE_SYSTEM.insert_in_hash_table */
extern void T70f312(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_LACE_SYSTEM.universe_actions */
extern T0* T70f169(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.shortest_path */
extern T0* T64f180(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T64f180ac1(T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T64f180ac2(T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T64f180ac3(T0* a1, T0* a2);
/* ET_ECF_SYSTEM.insert_in_hash_table */
extern void T64f304(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_SYSTEM.universe_actions */
extern T0* T64f163(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.shortest_path */
extern T0* T61f171(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.shortest_path */
extern T0* T61f171ac1(T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.shortest_path */
extern T0* T61f171ac2(T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.shortest_path */
extern T0* T61f171ac3(T0* a1, T0* a2);
/* ET_XACE_SYSTEM.insert_in_hash_table */
extern void T61f320(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_XACE_SYSTEM.universe_actions */
extern T0* T61f173(GE_context* ac, T0* C);
/* ET_SYSTEM.shortest_path */
extern T0* T33f155(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.shortest_path */
extern T0* T33f155ac1(T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_SYSTEM.shortest_path */
extern T0* T33f155ac2(T0* a1);
/* Creation of agent #3 in feature ET_SYSTEM.shortest_path */
extern T0* T33f155ac3(T0* a1, T0* a2);
/* ET_SYSTEM.insert_in_hash_table */
extern void T33f233(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_SYSTEM.universe_actions */
extern T0* T33f139(GE_context* ac, T0* C);
/* ET_LIBRARY.kind_name */
extern unsigned char ge727os14978;
extern T0* ge727ov14978;
extern T0* T459f96(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.kind_name */
extern unsigned char ge722os14978;
extern T0* ge722ov14978;
extern T0* T447f97(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.kind_name */
extern T0* T229f109(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.kind_name */
extern T0* T216f102(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.kind_name */
extern T0* T197f96(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.kind_name */
extern T0* T188f109(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.kind_name */
extern unsigned char ge733os3520;
extern T0* ge733ov3520;
extern T0* T70f180(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.kind_name */
extern T0* T64f187(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.kind_name */
extern T0* T61f184(GE_context* ac, T0* C);
/* ET_SYSTEM.kind_name */
extern T0* T33f157(GE_context* ac, T0* C);
/* ET_LIBRARY.full_lower_name */
extern T0* T459f94(GE_context* ac, T0* C, T2 a1);
/* ET_LIBRARY.relative_lower_name */
extern T0* T459f97(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.lower_name */
extern T0* T459f98(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T447f95(GE_context* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T447f96(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.full_lower_name */
extern T0* T229f107(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.relative_lower_name */
extern T0* T229f108(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T216f100(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T216f101(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T197f95(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T197f98(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.full_lower_name */
extern T0* T188f105(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_SYSTEM.full_lower_name */
extern T0* T70f181(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_SYSTEM.full_lower_name */
extern T0* T64f188(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_SYSTEM.full_lower_name */
extern T0* T61f185(GE_context* ac, T0* C, T2 a1);
/* ET_SYSTEM.full_lower_name */
extern T0* T33f158(GE_context* ac, T0* C, T2 a1);
/* ET_LIBRARY.adapted_universe */
extern T0* T459f89(GE_context* ac, T0* C, T0* a1);
extern T1 T459f89ot1(T0* a1, T0** a2);
extern T1 T459f89ot2(T0* a1, T0** a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.adapted_dotnet_assembly */
extern T0* T196f5(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.adapted_library */
extern T0* T189f5(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T447f88(GE_context* ac, T0* C, T0* a1);
extern T1 T447f88ot1(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].has */
extern T1 T1313f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.adapted_universe */
extern T0* T229f105(GE_context* ac, T0* C, T0* a1);
extern T1 T229f105ot1(T0* a1, T0** a2);
/* ET_LACE_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T216f98(GE_context* ac, T0* C, T0* a1);
extern T1 T216f98ot1(T0* a1, T0** a2);
/* ET_ECF_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T197f88(GE_context* ac, T0* C, T0* a1);
extern T1 T197f88ot1(T0* a1, T0** a2);
/* ET_ECF_LIBRARY.adapted_universe */
extern T0* T188f100(GE_context* ac, T0* C, T0* a1);
extern T1 T188f100ot1(T0* a1, T0** a2);
extern T1 T188f100ot2(T0* a1, T0** a2);
/* ET_LACE_SYSTEM.adapted_universe */
extern T0* T70f166(GE_context* ac, T0* C, T0* a1);
extern T1 T70f166ot1(T0* a1, T0** a2);
extern T1 T70f166ot2(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.adapted_universe */
extern T0* T64f175(GE_context* ac, T0* C, T0* a1);
extern T1 T64f175ot1(T0* a1, T0** a2);
extern T1 T64f175ot2(T0* a1, T0** a2);
/* ET_XACE_SYSTEM.adapted_universe */
extern T0* T61f170(GE_context* ac, T0* C, T0* a1);
extern T1 T61f170ot1(T0* a1, T0** a2);
extern T1 T61f170ot2(T0* a1, T0** a2);
/* ET_SYSTEM.adapted_universe */
extern T0* T33f154(GE_context* ac, T0* C, T0* a1);
extern T1 T33f154ot1(T0* a1, T0** a2);
extern T1 T33f154ot2(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.same_base_class_type_with_type_marks */
extern T1 T379f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T379f25ot1(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.cloned_type_context */
extern T0* T379f11(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.like_0 */
extern unsigned char ge807os11672;
extern T0* ge807ov11672;
extern T0* T81f231(GE_context* ac, T0* C);
/* ET_LIKE_N.make_zero */
extern T0* T866c68(GE_context* ac, T0* a1);
/* ET_LIKE_N.tokens */
extern T0* T866f7(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.context_same_base_class_type_with_type_marks */
extern T1 T260f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_class_type_with_type_marks */
extern T1 T82f135(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_class_type_with_type_marks */
extern T1 T80f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_base_tuple_type_with_type_marks */
extern T1 T379f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T379f26ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_base_tuple_type_with_type_marks */
extern T1 T260f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_tuple_type_with_type_marks */
extern T1 T82f136(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_tuple_type_with_type_marks */
extern T1 T80f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T379f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T379f20ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T260f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_class_type_with_type_marks */
extern T1 T82f137(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T80f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T379f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T379f21ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T260f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_tuple_type_with_type_marks */
extern T1 T82f138(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T80f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T379f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T379f28ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T260f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_conforms_from_class_type_with_type_marks */
extern T1 T82f140(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T80f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T379f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T379f29ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T260f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_conforms_from_tuple_type_with_type_marks */
extern T1 T82f141(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T80f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.named_base_class */
extern T0* T379f24(GE_context* ac, T0* C);
extern T1 T379f24ot1(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T379f30(GE_context* ac, T0* C, T0* a1);
extern T1 T379f30ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T260f57(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_expanded_with_type_mark */
extern T1 T82f142(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T80f59(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T379f31(GE_context* ac, T0* C, T0* a1);
extern T1 T379f31ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_base_type_with_type_mark */
extern T0* T260f58(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_base_type_with_type_mark */
extern T0* T82f143(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_with_type_mark */
extern T0* T80f60(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T379f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T379f12ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_type_with_type_marks */
extern T1 T260f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_type_with_type_marks */
extern T1 T82f144(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_type_with_type_marks */
extern T1 T80f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T379f32(GE_context* ac, T0* C, T0* a1);
extern T1 T379f32ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T260f60(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_detachable_with_type_mark */
extern T1 T82f145(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T80f62(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T379f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T379f22ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T260f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_conforms_to_type_with_type_marks */
extern T1 T82f146(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T80f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T379f13(GE_context* ac, T0* C, T0* a1);
extern T1 T379f13ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_named_type_with_type_mark */
extern T0* T260f62(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_named_type_with_type_mark */
extern T0* T82f147(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_named_type_with_type_mark */
extern T0* T80f64(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T379f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T379f35ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T260f86(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T82f178(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T80f88(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T379f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T379f36ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T260f87(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T82f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T80f89(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T379f37(GE_context* ac, T0* C, T0* a1);
extern T1 T379f37ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_reference_with_type_mark */
extern T1 T260f88(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_reference_with_type_mark */
extern T1 T82f180(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_reference_with_type_mark */
extern T1 T80f90(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T379f38(GE_context* ac, T0* C, T0* a1);
extern T1 T379f38ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_attached_with_type_mark */
extern T1 T260f89(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_attached_with_type_mark */
extern T1 T82f181(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_attached_with_type_mark */
extern T1 T80f91(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T379f5(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.attachment_type_conformance_mode */
extern T1 T260f27(GE_context* ac, T0* C);
/* ET_CLASS.attachment_type_conformance_mode */
extern T1 T82f90(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.attachment_type_conformance_mode */
extern T1 T80f22(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.scoop_mode */
extern T1 T379f6(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.scoop_mode */
extern T1 T260f31(GE_context* ac, T0* C);
/* ET_CLASS.scoop_mode */
extern T1 T82f92(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.scoop_mode */
extern T1 T80f24(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.same_base_type_with_type_marks */
extern T1 T379f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T379f48ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_base_type_with_type_marks */
extern T1 T260f98(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_type_with_type_marks */
extern T1 T82f198(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_type_with_type_marks */
extern T1 T80f102(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.to_nested_type_context */
extern T0* T379f8(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.to_nested_type_context */
extern T0* T260f33(GE_context* ac, T0* C);
/* ET_CLASS.to_nested_type_context */
extern T0* T82f54(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.to_nested_type_context */
extern T0* T80f35(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual_count */
extern T6 T379f27(GE_context* ac, T0* C);
extern T1 T379f27ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_base_type_actual_count */
extern T6 T260f54(GE_context* ac, T0* C);
/* ET_CLASS.context_base_type_actual_count */
extern T6 T82f139(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.context_base_type_actual_count */
extern T6 T80f56(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual */
extern T0* T379f34(GE_context* ac, T0* C, T6 a1);
extern T1 T379f34ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_base_type_actual */
extern T0* T260f67(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.context_base_type_actual */
extern T0* T82f159(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.context_base_type_actual */
extern T0* T80f71(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.is_root_context */
extern T1 T379f19(GE_context* ac, T0* C);
extern T1 T379f19ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.is_root_context */
extern T1 T260f15(GE_context* ac, T0* C);
/* ET_CLASS.is_root_context */
extern T1 T82f110(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_root_context */
extern T1 T80f18(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.as_nested_type_context */
extern T0* T379f7(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.as_nested_type_context */
extern T0* T260f32(GE_context* ac, T0* C);
/* ET_CLASS.as_nested_type_context */
extern T0* T82f53(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.as_nested_type_context */
extern T0* T80f34(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.root_context */
extern T0* T260f16(GE_context* ac, T0* C);
/* ET_CLASS.root_context */
extern T0* T82f94(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.root_context */
extern T0* T80f19(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.named_type */
extern T0* T379f10(GE_context* ac, T0* C);
/* ET_CLASS.context_named_type */
extern T0* T82f191(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.context_named_type */
extern T0* T80f98(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_class */
extern T0* T379f33(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.unaliased_to_text */
extern T0* T1421f30(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.unaliased_to_text */
extern T0* T1243f30(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.unaliased_to_text */
extern T0* T1242f29(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.unaliased_to_text */
extern T0* T1241f30(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.unaliased_to_text */
extern T0* T1214f23(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.unaliased_to_text */
extern T0* T1086f21(GE_context* ac, T0* C);
/* ET_LIKE_N.unaliased_to_text */
extern T0* T866f26(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.unaliased_to_text */
extern T0* T503f17(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.base_type */
extern T0* T1421f26(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_type */
extern T0* T1243f27(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type */
extern T0* T1242f26(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_type */
extern T0* T1241f27(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type */
extern T0* T1214f18(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.base_type */
extern T0* T1086f16(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.base_type */
extern T0* T866f20(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_type */
extern T0* T503f9(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type */
extern T0* T260f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.base_type */
extern T0* T82f58(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_type */
extern T0* T80f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_base_class_type_with_type_marks */
extern T1 T1421f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1421f11ot1(T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.tokens */
extern T0* T1421f24(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.same_base_class_type_with_type_marks */
extern T1 T1243f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.overridden_type_mark */
extern T0* T1243f24(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_class_type_with_type_marks */
extern T1 T1242f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.overridden_type_mark */
extern T0* T1242f22(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.same_base_class_type_with_type_marks */
extern T1 T1241f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.overridden_type_mark */
extern T0* T1241f23(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_class_type_with_type_marks */
extern T1 T1214f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1214f19ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_base_class_type_with_type_marks */
extern T1 T1086f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1086f17ot1(T0* a1);
/* ET_FORMAL_PARAMETER.tokens */
extern T0* T1086f56(GE_context* ac, T0* C);
/* ET_LIKE_N.same_base_class_type_with_type_marks */
extern T1 T866f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.overridden_type_mark */
extern T0* T866f6(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.valid_index */
extern T1 T379f23(GE_context* ac, T0* C, T6 a1);
/* ET_LIKE_CURRENT.same_base_class_type_with_type_marks */
extern T1 T503f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.overridden_type_mark */
extern T0* T503f26(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T1421f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1421f12ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T1243f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T1242f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_base_tuple_type_with_type_marks */
extern T1 T1241f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_tuple_type_with_type_marks */
extern T1 T1214f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1214f20ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_base_tuple_type_with_type_marks */
extern T1 T1086f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1086f18ot1(T0* a1);
/* ET_LIKE_N.same_base_tuple_type_with_type_marks */
extern T1 T866f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_base_tuple_type_with_type_marks */
extern T1 T503f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual_count */
extern T6 T1421f13(GE_context* ac, T0* C, T0* a1);
extern T1 T1421f13ot1(T0* a1, T0** a2);
extern T1 T1421f13ot2(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual_count */
extern T6 T1243f14(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual_count */
extern T6 T1242f14(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_type_actual_count */
extern T6 T1241f14(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T1214f21(GE_context* ac, T0* C, T0* a1);
extern T1 T1214f21ot1(T0* a1, T0** a2);
extern T1 T1214f21ot2(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T1086f19(GE_context* ac, T0* C, T0* a1);
extern T1 T1086f19ot1(T0* a1, T0** a2);
extern T1 T1086f19ot2(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_actual_count */
extern T6 T866f24(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_type_actual_count */
extern T6 T503f15(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1421f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1421f14ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1243f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1242f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.conforms_from_class_type_with_type_marks */
extern T1 T1241f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T1214f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1214f24ot1(T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T1086f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1086f22ot1(T0* a1);
/* ET_LIKE_N.conforms_from_class_type_with_type_marks */
extern T1 T866f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.conforms_from_class_type_with_type_marks */
extern T1 T503f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1421f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1421f15ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1243f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1242f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.conforms_from_tuple_type_with_type_marks */
extern T1 T1241f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T1214f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1214f25ot1(T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T1086f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1086f23ot1(T0* a1);
/* ET_LIKE_N.conforms_from_tuple_type_with_type_marks */
extern T1 T866f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.conforms_from_tuple_type_with_type_marks */
extern T1 T503f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_class_type_with_type_marks */
extern T1 T1421f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1421f37ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_named_class_type_with_type_marks */
extern T1 T1243f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_class_type_with_type_marks */
extern T1 T1242f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_class_type_with_type_marks */
extern T1 T1241f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T1214f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1214f27ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T1086f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1086f25ot1(T0* a1);
/* ET_LIKE_N.same_named_class_type_with_type_marks */
extern T1 T866f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_named_class_type_with_type_marks */
extern T1 T503f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1421f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1421f38ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1243f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1242f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_tuple_type_with_type_marks */
extern T1 T1241f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T1214f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1214f28ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T1086f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1086f26ot1(T0* a1);
/* ET_LIKE_N.same_named_tuple_type_with_type_marks */
extern T1 T866f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_named_tuple_type_with_type_marks */
extern T1 T503f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type_with_type_marks */
extern T1 T1421f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1421f5ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_type_with_type_marks */
extern T1 T1243f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type_with_type_marks */
extern T1 T1242f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.conforms_to_type_with_type_marks */
extern T1 T1241f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T1214f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1214f33ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T1086f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1086f31ot1(T0* a1, T0** a2);
/* ET_LIKE_N.conforms_to_type_with_type_marks */
extern T1 T866f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.conforms_to_type_with_type_marks */
extern T1 T503f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded_with_type_mark */
extern T1 T1421f16(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1421f16ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_expanded_with_type_mark */
extern T1 T1243f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded_with_type_mark */
extern T1 T1242f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_expanded_with_type_mark */
extern T1 T1241f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T1214f35(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1214f35ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T1086f33(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1086f33ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_expanded_with_type_mark */
extern T1 T866f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_expanded_with_type_mark */
extern T1 T503f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T1421f18(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1421f18ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_detachable_with_type_mark */
extern T1 T1243f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable_with_type_mark */
extern T1 T1242f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_detachable_with_type_mark */
extern T1 T1241f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T1214f37(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1214f37ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T1086f35(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1086f35ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_detachable_with_type_mark */
extern T1 T866f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_detachable_with_type_mark */
extern T1 T503f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_with_type_mark */
extern T0* T1421f17(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1421f17ot1(T0* a1, T0** a2);
extern T1 T1421f17ot2(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_with_type_mark */
extern T0* T1243f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.tokens */
extern T0* T1243f25(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_with_type_mark */
extern T0* T1242f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_with_type_mark */
extern T0* T1241f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T1214f36(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1214f36ot1(T0* a1, T0** a2);
extern T1 T1214f36ot2(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T1086f34(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1086f34ot1(T0* a1, T0** a2);
extern T1 T1086f34ot2(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_with_type_mark */
extern T0* T866f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_type_with_type_mark */
extern T0* T503f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.named_type_with_type_mark */
extern T0* T1421f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.named_type_with_type_mark */
extern T0* T1243f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type_with_type_mark */
extern T0* T1242f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.named_type_with_type_mark */
extern T0* T1241f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T1214f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T1086f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_N.named_type_with_type_mark */
extern T0* T866f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.named_type_with_type_mark */
extern T0* T503f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T1421f42(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_reference */
extern T1 T1243f44(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference */
extern T1 T1242f47(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_reference */
extern T1 T1241f46(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference */
extern T1 T1214f53(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_reference */
extern T1 T1086f49(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_reference */
extern T1 T866f42(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_reference */
extern T1 T503f42(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_reference */
extern T1 T260f71(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_reference */
extern T1 T82f163(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_reference */
extern T1 T80f75(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.has_anchored_type */
extern T1 T1421f33(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.has_anchored_type */
extern T1 T1243f32(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_anchored_type */
extern T1 T1242f31(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.has_anchored_type */
extern T1 T1241f32(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_anchored_type */
extern T1 T1214f56(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.has_anchored_type */
extern T1 T1086f50(GE_context* ac, T0* C);
/* ET_LIKE_N.has_anchored_type */
extern T1 T866f35(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.has_anchored_type */
extern T1 T503f35(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.has_anchored_type */
extern T1 T260f64(GE_context* ac, T0* C);
/* ET_CLASS.has_anchored_type */
extern T1 T82f155(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.has_anchored_type */
extern T1 T80f68(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.has_formal_types */
extern T1 T1421f20(GE_context* ac, T0* C, T0* a1);
extern T1 T1421f20ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.has_formal_types */
extern T1 T1243f21(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_formal_types */
extern T1 T1242f32(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.has_formal_types */
extern T1 T1241f33(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_formal_types */
extern T1 T1214f38(GE_context* ac, T0* C, T0* a1);
extern T1 T1214f38ot1(T0* a1);
/* ET_FORMAL_PARAMETER.has_formal_types */
extern T1 T1086f36(GE_context* ac, T0* C, T0* a1);
extern T1 T1086f36ot1(T0* a1);
/* ET_LIKE_N.has_formal_types */
extern T1 T866f36(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.has_formal_types */
extern T1 T503f36(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.has_formal_types */
extern T1 T260f65(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.has_formal_types */
extern T1 T82f156(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.has_formal_types */
extern T1 T80f69(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.depends_on_qualified_anchored_type */
extern T1 T1421f34(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.depends_on_qualified_anchored_type */
extern T1 T1243f39(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.depends_on_qualified_anchored_type */
extern T1 T1242f42(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.depends_on_qualified_anchored_type */
extern T1 T1241f41(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T1214f57(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T1086f51(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.depends_on_qualified_anchored_type */
extern T1 T866f37(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.depends_on_qualified_anchored_type */
extern T1 T503f37(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.depends_on_qualified_anchored_type */
extern T1 T260f66(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.depends_on_qualified_anchored_type */
extern T1 T82f158(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.depends_on_qualified_anchored_type */
extern T1 T80f70(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters */
extern T0* T1421f47(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1421f62(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1421f62ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters */
extern T0* T1243f48(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1243f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters */
extern T0* T1242f51(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1242f65(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_right_brace */
extern void T1242f84(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_left_brace */
extern void T1242f83(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters */
extern T0* T1241f50(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type_mark */
extern T0* T1241f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T1214f60(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T1214f63(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1214f63ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T1086f54(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T1086f61(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1086f61ot1(T0* a1, T0** a2);
/* ET_LIKE_N.resolved_formal_parameters */
extern T0* T866f46(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.resolved_formal_parameters_with_type_mark */
extern T0* T866f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_formal_parameters */
extern T0* T503f46(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type_mark */
extern T0* T503f56(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.resolved_formal_parameters */
extern T0* T260f75(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T260f83(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.overridden_type_mark */
extern T0* T260f9(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_attached */
extern T1 T260f21(GE_context* ac, T0* C);
/* ET_CLASS.is_separate */
extern T1 T82f70(GE_context* ac, T0* C);
/* ET_CLASS.has_separate_mark */
extern T1 T82f87(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_separate */
extern T1 T260f20(GE_context* ac, T0* C);
/* ET_CLASS.resolved_formal_parameters */
extern T0* T82f171(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type_mark */
extern T0* T82f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.overridden_type_mark */
extern T0* T82f78(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_attached */
extern T1 T82f89(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.resolved_formal_parameters */
extern T0* T80f66(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T80f78(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.overridden_type_mark */
extern T0* T80f20(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_attached */
extern T1 T80f27(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_separate */
extern T1 T80f26(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type */
extern T1 T1421f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type */
extern T1 T1243f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type */
extern T1 T1242f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_type */
extern T1 T1241f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T1214f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T1086f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_N.same_syntactical_type */
extern T1 T866f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_type */
extern T1 T503f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_type */
extern T1 T260f78(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_type */
extern T1 T82f174(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_type */
extern T1 T80f67(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1421f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1421f51ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1243f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1242f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_type_with_type_marks */
extern T1 T1241f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T1214f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1214f48ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T1086f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1086f60ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_syntactical_type_with_type_marks */
extern T1 T866f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_type_with_type_marks */
extern T1 T503f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T260f79(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_generic */
extern T1 T260f25(GE_context* ac, T0* C);
/* ET_CLASS.same_syntactical_type_with_type_marks */
extern T1 T82f175(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_type_with_type_marks */
extern T1 T80f79(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1421f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1421f52ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1243f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1242f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1241f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T1214f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1214f46ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T1086f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1086f47ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_tuple_type_with_type_marks */
extern T1 T866f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_tuple_type_with_type_marks */
extern T1 T503f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T260f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_tuple_type_with_type_marks */
extern T1 T82f176(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T80f86(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1421f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1421f55ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1243f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1242f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_like_current_with_type_marks */
extern T1 T1241f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T1214f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1214f47ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T1086f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1086f48ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_like_current_with_type_marks */
extern T1 T866f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_like_current_with_type_marks */
extern T1 T503f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_attachment_marks_with_default */
extern T1 T503f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T260f90(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_like_current_with_type_marks */
extern T1 T82f182(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T80f92(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type_with_type_mark */
extern T0* T1421f56(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1421f56ot1(T0* a1, T0** a2);
extern T1 T1421f56ot2(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.shallow_base_type_with_type_mark */
extern T0* T1243f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type_with_type_mark */
extern T0* T1242f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.shallow_base_type_with_type_mark */
extern T0* T1241f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T1214f54(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1214f54ot1(T0* a1, T0** a2);
extern T1 T1214f54ot2(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T1086f57(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1086f57ot1(T0* a1, T0** a2);
extern T1 T1086f57ot2(T0* a1, T0** a2);
/* ET_LIKE_N.shallow_base_type_with_type_mark */
extern T0* T866f55(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.shallow_base_type_with_type_mark */
extern T0* T503f54(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type_with_type_mark */
extern T0* T1421f57(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1421f57ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.shallow_named_type_with_type_mark */
extern T0* T1243f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type_with_type_mark */
extern T0* T1242f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.shallow_named_type_with_type_mark */
extern T0* T1241f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T1214f55(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1214f55ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T1086f59(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1086f59ot1(T0* a1, T0** a2);
/* ET_LIKE_N.shallow_named_type_with_type_mark */
extern T0* T866f56(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.shallow_named_type_with_type_mark */
extern T0* T503f55(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1421f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1421f58ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1243f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1242f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1241f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1214f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1214f49ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1086f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1086f62ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T866f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T503f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T260f91(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T82f184(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T80f94(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.type_with_type_mark */
extern T0* T1421f45(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.type_with_type_mark */
extern T0* T1243f60(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_with_type_mark */
extern T0* T1242f63(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.type_with_type_mark */
extern T0* T1241f62(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.set_type_mark */
extern void T1241f85(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.twin */
extern T0* T1241f65(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.copy */
extern void T1241f86(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T1214f44(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T1086f42(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.type_with_type_mark */
extern T0* T866f58(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.set_like_keyword */
extern void T866f75(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.make */
extern T0* T866c74(GE_context* ac, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.type_with_type_mark */
extern T0* T503f58(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.set_current_keyword */
extern void T503f77(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type */
extern T0* T1421f43(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_base_type */
extern T0* T1243f45(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type */
extern T0* T1242f48(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_base_type */
extern T0* T1241f47(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type */
extern T0* T1214f42(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_base_type */
extern T0* T1086f40(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.shallow_base_type */
extern T0* T866f43(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_base_type */
extern T0* T503f43(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_base_type */
extern T0* T260f72(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.shallow_base_type */
extern T0* T82f164(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_base_type */
extern T0* T80f76(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1421f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1421f49ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1243f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1242f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_class_type_with_type_marks */
extern T1 T1241f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T1214f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1214f45ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T1086f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1086f46ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_class_type_with_type_marks */
extern T1 T866f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_class_type_with_type_marks */
extern T1 T503f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T260f77(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_class_type_with_type_marks */
extern T1 T82f173(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.is_type_separate_with_type_mark */
extern T1 T80f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_separate_with_type_mark */
extern T1 T82f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T80f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1421f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1421f27ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1243f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1242f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1241f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T1214f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1214f29ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T1086f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1086f27ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_named_formal_parameter_type_with_type_marks */
extern T1 T866f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_named_formal_parameter_type_with_type_marks */
extern T1 T503f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1421f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1421f31ot1(T0* a1, T0** a2);
extern T1 T1421f31ot2(T0* a1, T0** a2);
extern T1 T1421f31ot3(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1243f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1242f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1241f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1214f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1214f26ot1(T0* a1, T0** a2);
extern T1 T1214f26ot2(T0* a1, T0** a2);
extern T1 T1214f26ot3(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1086f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1086f24ot1(T0* a1, T0** a2);
extern T1 T1086f24ot2(T0* a1, T0** a2);
extern T1 T1086f24ot3(T0* a1, T0** a2);
/* ET_LIKE_N.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T866f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T503f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference_with_type_mark */
extern T1 T1421f39(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1421f39ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_reference_with_type_mark */
extern T1 T1243f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference_with_type_mark */
extern T1 T1242f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_reference_with_type_mark */
extern T1 T1241f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T1214f40(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1214f40ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T1086f38(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1086f38ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_reference_with_type_mark */
extern T1 T866f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_reference_with_type_mark */
extern T1 T503f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T1421f40(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1421f40ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_attached_with_type_mark */
extern T1 T1243f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_attached_with_type_mark */
extern T1 T1242f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_attached_with_type_mark */
extern T1 T1241f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T1214f41(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1214f41ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T1086f39(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1086f39ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_attached_with_type_mark */
extern T1 T866f41(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_attached_with_type_mark */
extern T1 T503f41(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.named_base_class */
extern T0* T1421f6(GE_context* ac, T0* C, T0* a1);
extern T1 T1421f6ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.named_base_class */
extern T0* T1243f7(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_base_class */
extern T0* T1242f7(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_base_class */
extern T0* T1241f7(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_base_class */
extern T0* T1214f34(GE_context* ac, T0* C, T0* a1);
extern T1 T1214f34ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.named_base_class */
extern T0* T1086f32(GE_context* ac, T0* C, T0* a1);
extern T1 T1086f32ot1(T0* a1, T0** a2);
/* ET_LIKE_N.named_base_class */
extern T0* T866f14(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_base_class */
extern T0* T503f23(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_base_class_in_context */
extern T0* T260f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.named_base_class_in_context */
extern T0* T82f84(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_base_class_in_context */
extern T0* T80f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1421f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1421f59ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1243f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1242f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_like_feature_with_type_marks */
extern T1 T1241f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_attachment_marks_with_default */
extern T1 T1241f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T1214f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1214f64ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T1086f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1086f63ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_like_feature_with_type_marks */
extern T1 T866f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_like_feature_with_type_marks */
extern T1 T503f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T260f92(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_like_feature_with_type_marks */
extern T1 T82f185(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T80f95(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1421f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1421f60ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1243f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_attachment_marks_with_default */
extern T1 T1243f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1242f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_attachment_marks_with_default */
extern T1 T1242f67(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1241f67(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1214f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1214f65ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1086f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1086f64ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T866f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T503f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T260f93(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T82f186(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T80f96(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual */
extern T0* T1421f54(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1421f54ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual */
extern T0* T1243f55(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual */
extern T0* T1242f58(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_actual */
extern T0* T1241f57(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual */
extern T0* T1214f67(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1214f67ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_actual */
extern T0* T1086f66(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1086f66ot1(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_actual */
extern T0* T866f53(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_LIKE_CURRENT.base_type_actual */
extern T0* T503f53(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.has_identifier_anchored_type */
extern T1 T1421f61(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.has_identifier_anchored_type */
extern T1 T1243f65(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_identifier_anchored_type */
extern T1 T1242f68(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.has_identifier_anchored_type */
extern T1 T1241f68(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T1214f66(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T1086f65(GE_context* ac, T0* C);
/* ET_LIKE_N.has_identifier_anchored_type */
extern T1 T866f62(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.has_identifier_anchored_type */
extern T1 T503f63(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.has_identifier_anchored_type */
extern T1 T260f94(GE_context* ac, T0* C);
/* ET_CLASS.has_identifier_anchored_type */
extern T1 T82f187(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.has_identifier_anchored_type */
extern T1 T80f97(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.base_type_index_of_label */
extern T6 T1421f65(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1421f65ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_index_of_label */
extern T6 T1243f68(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_index_of_label */
extern T6 T1242f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_index_of_label */
extern T6 T1241f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T1214f72(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1214f72ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T1086f71(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1086f71ot1(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_index_of_label */
extern T6 T866f65(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_type_index_of_label */
extern T6 T503f66(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_detachable */
extern T1 T1421f29(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_detachable */
extern T1 T1243f29(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable */
extern T1 T1242f28(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_detachable */
extern T1 T1241f29(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable */
extern T1 T1214f22(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_detachable */
extern T1 T1086f20(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_detachable */
extern T1 T866f25(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_detachable */
extern T1 T503f16(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_detachable */
extern T1 T260f45(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_detachable */
extern T1 T82f114(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_detachable */
extern T1 T80f41(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded */
extern T1 T1421f25(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_expanded */
extern T1 T1243f26(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded */
extern T1 T1242f25(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_expanded */
extern T1 T1241f26(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded */
extern T1 T1214f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_expanded */
extern T1 T1086f15(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_expanded */
extern T1 T866f19(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_expanded */
extern T1 T503f8(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_expanded */
extern T1 T260f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_expanded */
extern T1 T82f57(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_expanded */
extern T1 T80f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_named_type */
extern T1 T1421f53(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_named_type */
extern T1 T1243f54(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_named_type */
extern T1 T1242f57(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.is_named_type */
extern T1 T1241f56(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_named_type */
extern T1 T1214f69(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_named_type */
extern T1 T1086f68(GE_context* ac, T0* C);
/* ET_LIKE_N.is_named_type */
extern T1 T866f52(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.is_named_type */
extern T1 T503f52(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_named_type */
extern T1 T260f85(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_named_type */
extern T1 T80f87(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type */
extern T1 T1421f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_named_type */
extern T1 T1243f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type */
extern T1 T1242f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_named_type */
extern T1 T1241f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type */
extern T1 T1214f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_named_type */
extern T1 T1086f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_N.same_named_type */
extern T1 T866f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_named_type */
extern T1 T503f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type */
extern T1 T1421f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_type */
extern T1 T1243f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type */
extern T1 T1242f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.conforms_to_type */
extern T1 T1241f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type */
extern T1 T1214f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.conforms_to_type */
extern T1 T1086f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_N.conforms_to_type */
extern T1 T866f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.conforms_to_type */
extern T1 T503f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.is_base_type */
extern T1 T1421f64(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_base_type */
extern T1 T1243f67(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_base_type */
extern T1 T1242f70(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.is_base_type */
extern T1 T1241f70(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_base_type */
extern T1 T1214f71(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_base_type */
extern T1 T1086f70(GE_context* ac, T0* C);
/* ET_LIKE_N.is_base_type */
extern T1 T866f64(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.is_base_type */
extern T1 T503f65(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_base_type */
extern T1 T260f95(GE_context* ac, T0* C);
/* ET_CLASS.is_base_type */
extern T1 T82f193(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_base_type */
extern T1 T80f99(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.base_class */
extern T0* T1421f19(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_class */
extern T0* T1243f20(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_class */
extern T0* T1242f24(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_class */
extern T0* T1241f25(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_class */
extern T0* T1214f16(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.base_class */
extern T0* T1086f14(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.base_class */
extern T0* T866f18(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_class */
extern T0* T503f7(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_class_in_context */
extern T0* T260f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.base_class_in_context */
extern T0* T82f56(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_class_in_context */
extern T0* T80f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_type */
extern T0* T1421f35(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_type */
extern T0* T1243f33(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type */
extern T0* T1242f33(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_type */
extern T0* T1241f34(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type */
extern T0* T1214f50(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_type */
extern T0* T1086f43(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.named_type */
extern T0* T866f30(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_type */
extern T0* T503f21(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_type */
extern T0* T260f46(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.named_type */
extern T0* T82f115(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_type */
extern T0* T80f47(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type */
extern T0* T1421f44(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_named_type */
extern T0* T1243f46(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type */
extern T0* T1242f49(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_named_type */
extern T0* T1241f48(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type */
extern T0* T1214f51(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_named_type */
extern T0* T1086f44(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.shallow_named_type */
extern T0* T866f44(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_named_type */
extern T0* T503f44(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_named_type */
extern T0* T260f73(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.shallow_named_type */
extern T0* T82f165(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_named_type */
extern T0* T80f77(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_like_current */
extern T1 T1421f46(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_like_current */
extern T1 T1243f47(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_like_current */
extern T1 T1242f50(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.is_like_current */
extern T1 T1241f49(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_like_current */
extern T1 T1214f52(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_like_current */
extern T1 T1086f45(GE_context* ac, T0* C);
/* ET_LIKE_N.is_like_current */
extern T1 T866f45(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_like_current */
extern T1 T260f74(GE_context* ac, T0* C);
/* ET_CLASS.is_like_current */
extern T1 T82f166(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_like_current */
extern T1 T80f84(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_base_type_with_type_marks */
extern T1 T1421f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1421f63ot1(T0* a1, T0** a2);
/* ET_CLASS_TYPE.same_base_formal_parameter_type_with_type_marks */
extern T1 T80f103(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_base_type_with_type_marks */
extern T1 T1243f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_type_with_type_marks */
extern T1 T1242f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_base_type_with_type_marks */
extern T1 T1241f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_type_with_type_marks */
extern T1 T1214f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1214f70ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_base_type_with_type_marks */
extern T1 T1086f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1086f69ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_base_type_with_type_marks */
extern T1 T866f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_base_type_with_type_marks */
extern T1 T503f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.to_text */
extern T0* T1421f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.to_text */
extern T0* T1243f10(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.to_text */
extern T0* T1242f10(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.to_text */
extern T0* T1241f10(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.to_text */
extern T0* T1214f62(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.to_text */
extern T0* T1086f58(GE_context* ac, T0* C);
/* ET_LIKE_N.to_text */
extern T0* T866f5(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.to_text */
extern T0* T503f33(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.last_leaf */
extern T0* T1421f67(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.last_leaf */
extern T0* T1243f71(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.last_leaf */
extern T0* T1242f74(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.last_leaf */
extern T0* T1241f75(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.last_leaf */
extern T0* T503f69(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.last_leaf */
extern T0* T260f100(GE_context* ac, T0* C);
/* ET_CLASS.last_leaf */
extern T0* T82f201(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.last_leaf */
extern T0* T80f105(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type_with_type_marks */
extern T1 T1421f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1421f21ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.same_named_type_with_type_marks */
extern T1 T1243f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type_with_type_marks */
extern T1 T1242f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_type_with_type_marks */
extern T1 T1241f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T1214f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1214f32ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T1086f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1086f30ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_named_type_with_type_marks */
extern T1 T866f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_named_type_with_type_marks */
extern T1 T503f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.position */
extern T0* T1421f10(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.position */
extern T0* T1243f11(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.position */
extern T0* T1242f11(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.position */
extern T0* T1241f11(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.position */
extern T0* T1214f68(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.position */
extern T0* T1086f67(GE_context* ac, T0* C);
/* ET_LIKE_N.position */
extern T0* T866f17(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.position */
extern T0* T503f34(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.position */
extern T0* T260f63(GE_context* ac, T0* C);
/* ET_CLASS.position */
extern T0* T82f154(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.position */
extern T0* T80f65(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.preconditions */
extern T0* T365f44(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.preconditions */
extern T0* T364f44(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.preconditions */
extern T0* T362f45(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.postconditions */
extern T0* T365f52(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.postconditions */
extern T0* T364f51(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.postconditions */
extern T0* T362f52(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.new_synonym */
extern T0* T1228f46(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_synonym */
extern void T1228f95(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.new_synonym */
extern T0* T1227f46(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_synonym */
extern void T1227f100(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.new_synonym */
extern T0* T1226f46(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_synonym */
extern void T1226f98(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.new_synonym */
extern T0* T365f43(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_synonym */
extern void T365f86(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.new_synonym */
extern T0* T364f43(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_synonym */
extern void T364f90(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.new_synonym */
extern T0* T362f43(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_synonym */
extern void T362f89(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.new_synonym */
extern T0* T330f52(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_synonym */
extern void T330f96(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.new_synonym */
extern T0* T259f60(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_synonym */
extern void T259f100(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.is_deferred */
extern T1 T1227f39(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_deferred */
extern T1 T1226f39(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_deferred */
extern T1 T365f56(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_deferred */
extern T1 T364f56(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_deferred */
extern T1 T362f57(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_deferred */
extern T1 T330f55(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_deferred */
extern T1 T259f53(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_frozen */
extern T1 T1228f40(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_frozen */
extern T1 T1227f40(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_frozen */
extern T1 T1226f40(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_frozen */
extern T1 T365f23(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_frozen */
extern T1 T364f57(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_frozen */
extern T1 T362f58(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_frozen */
extern T1 T330f57(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_frozen */
extern T1 T259f54(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_bracketable */
extern T1 T1228f41(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_bracketable */
extern T1 T1227f41(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_bracketable */
extern T1 T1226f41(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_bracketable */
extern T1 T365f24(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_bracketable */
extern T1 T364f58(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_bracketable */
extern T1 T362f25(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_bracketable */
extern T1 T330f59(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_bracketable */
extern T1 T259f55(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_parenthesisable */
extern T1 T1228f43(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_parenthesisable */
extern T1 T1227f42(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_parenthesisable */
extern T1 T1226f42(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_parenthesisable */
extern T1 T365f25(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_parenthesisable */
extern T1 T364f25(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_parenthesisable */
extern T1 T362f26(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_parenthesisable */
extern T1 T330f60(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_parenthesisable */
extern T1 T259f56(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_prefixable */
extern T1 T1228f38(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_prefixable */
extern T1 T1227f38(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_prefixable */
extern T1 T1226f38(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_prefixable */
extern T1 T259f52(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_infixable */
extern T1 T1228f37(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_infixable */
extern T1 T1227f37(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_infixable */
extern T1 T1226f37(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_infixable */
extern T1 T365f54(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_infixable */
extern T1 T364f52(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_infixable */
extern T1 T362f54(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_infixable */
extern T1 T330f53(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_infixable */
extern T1 T259f51(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once */
extern T1 T1228f44(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_once */
extern T1 T1226f43(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_once */
extern T1 T365f26(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once */
extern T1 T364f26(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once */
extern T1 T362f27(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once */
extern T1 T330f61(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once */
extern T1 T259f59(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_constant_attribute */
extern T1 T1228f30(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_constant_attribute */
extern T1 T1227f48(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_constant_attribute */
extern T1 T1226f48(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_constant_attribute */
extern T1 T365f27(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_constant_attribute */
extern T1 T364f40(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_constant_attribute */
extern T1 T330f43(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_constant_attribute */
extern T1 T259f43(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_unique_attribute */
extern T1 T1228f32(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_unique_attribute */
extern T1 T1227f50(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_unique_attribute */
extern T1 T1226f32(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_unique_attribute */
extern T1 T365f47(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_unique_attribute */
extern T1 T362f48(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_unique_attribute */
extern T1 T330f48(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_unique_attribute */
extern T1 T259f46(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_seed */
extern T1 T1228f33(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.has_seed */
extern T1 T1227f33(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.has_seed */
extern T1 T1226f33(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.has_seed */
extern T1 T365f40(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.has_seed */
extern T1 T364f41(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.has_seed */
extern T1 T362f42(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.has_seed */
extern T1 T330f44(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.has_seed */
extern T1 T259f45(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.arguments_count */
extern T6 T1228f34(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.arguments_count */
extern T6 T1227f34(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.arguments_count */
extern T6 T1226f34(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.arguments_count */
extern T6 T365f49(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments_count */
extern T6 T364f49(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments_count */
extern T6 T362f50(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.arguments_count */
extern T6 T330f50(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.arguments_count */
extern T6 T259f48(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.arguments */
extern T0* T365f48(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments */
extern T0* T364f48(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments */
extern T0* T362f49(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.arguments */
extern T0* T330f49(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.name */
extern T0* T1228f36(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.name */
extern T0* T1227f36(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.name */
extern T0* T1226f36(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.name */
extern T0* T365f41(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.name */
extern T0* T364f27(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.name */
extern T0* T362f46(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.name */
extern T0* T330f45(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.name */
extern T0* T259f47(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_name */
extern T0* T1228f69(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_extended_name */
extern T0* T1228f71(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_name */
extern T0* T1227f71(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_extended_name */
extern T0* T1227f73(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_name */
extern T0* T1226f70(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_extended_name */
extern T0* T1226f72(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_name */
extern T0* T365f66(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_extended_name */
extern T0* T365f68(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_name */
extern T0* T364f68(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_extended_name */
extern T0* T364f70(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_name */
extern T0* T362f68(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_extended_name */
extern T0* T362f70(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_name */
extern T0* T330f69(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_extended_name */
extern T0* T330f71(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_name */
extern T0* T259f74(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_extended_name */
extern T0* T259f76(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.alias_name */
extern T0* T1228f35(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.alias_name */
extern T0* T1227f35(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.alias_name */
extern T0* T1226f35(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.alias_name */
extern T0* T365f51(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.alias_name */
extern T0* T364f50(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.alias_name */
extern T0* T362f51(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.alias_name */
extern T0* T330f51(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.alias_name */
extern T0* T259f49(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_alias_name */
extern T0* T1228f70(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_alias_name */
extern T0* T1227f72(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_alias_name */
extern T0* T1226f71(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_alias_name */
extern T0* T365f67(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_alias_name */
extern T0* T364f69(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_alias_name */
extern T0* T362f69(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_alias_name */
extern T0* T330f70(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_alias_name */
extern T0* T259f75(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_exported_to */
extern T1 T1228f66(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.has_descendant */
extern T1 T1010f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.has_ancestor */
extern T1 T82f199(GE_context* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.has_class */
extern T1 T395f6(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.has_descendant */
extern T1 T468f8(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.is_exported_to */
extern T1 T1227f68(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.is_exported_to */
extern T1 T1226f67(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.is_exported_to */
extern T1 T365f63(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.is_exported_to */
extern T1 T364f65(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.is_exported_to */
extern T1 T362f65(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.is_exported_to */
extern T1 T330f66(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_exported_to */
extern T1 T259f71(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.type */
extern T0* T1228f31(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.type */
extern T0* T1227f49(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.type */
extern T0* T1226f49(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.type */
extern T0* T365f46(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.type */
extern T0* T364f46(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.type */
extern T0* T362f47(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.type */
extern T0* T330f47(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.type */
extern T0* T259f44(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_attribute */
extern T1 T1228f47(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_attribute */
extern T1 T1227f47(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_attribute */
extern T1 T1226f47(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_attribute */
extern T1 T364f45(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_attribute */
extern T1 T362f44(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_attribute */
extern T1 T259f42(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.lower_name */
extern T0* T1228f45(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.lower_name */
extern T0* T1227f45(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.lower_name */
extern T0* T1226f45(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.lower_name */
extern T0* T365f42(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.lower_name */
extern T0* T364f42(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.lower_name */
extern T0* T362f28(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.lower_name */
extern T0* T330f46(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.lower_name */
extern T0* T259f50(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.new_synonym */
extern T0* T1231f37(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_synonym */
extern void T1231f98(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.new_synonym */
extern T0* T1230f35(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_synonym */
extern void T1230f98(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.new_synonym */
extern T0* T533f39(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_synonym */
extern void T533f93(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.new_synonym */
extern T0* T527f43(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_synonym */
extern void T527f96(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.has_seed */
extern T1 T1231f41(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.has_seed */
extern T1 T1230f42(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.has_seed */
extern T1 T533f38(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.has_seed */
extern T1 T527f40(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.is_deferred */
extern T1 T1231f32(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_deferred */
extern T1 T1230f32(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_deferred */
extern T1 T527f32(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_frozen */
extern T1 T1231f33(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_frozen */
extern T1 T1230f33(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_frozen */
extern T1 T533f30(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_frozen */
extern T1 T527f33(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_parenthesisable */
extern T1 T1231f36(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_parenthesisable */
extern T1 T1230f34(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_parenthesisable */
extern T1 T533f31(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_parenthesisable */
extern T1 T527f34(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.name */
extern T0* T1231f43(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.name */
extern T0* T1230f39(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.name */
extern T0* T533f28(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.name */
extern T0* T527f39(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_name */
extern T0* T1231f73(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_extended_name */
extern T0* T1231f75(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_name */
extern T0* T1230f70(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_extended_name */
extern T0* T1230f72(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_name */
extern T0* T533f68(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_extended_name */
extern T0* T533f70(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_name */
extern T0* T527f69(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_extended_name */
extern T0* T527f71(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.alias_name */
extern T0* T1231f30(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.alias_name */
extern T0* T1230f43(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.alias_name */
extern T0* T533f40(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.alias_name */
extern T0* T527f30(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_alias_name */
extern T0* T1231f74(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_alias_name */
extern T0* T1230f71(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_alias_name */
extern T0* T533f69(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_alias_name */
extern T0* T527f70(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.arguments_count */
extern T6 T1231f72(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.arguments_count */
extern T6 T1230f69(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.arguments_count */
extern T6 T533f67(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.arguments_count */
extern T6 T527f68(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_creation_exported_to */
extern T1 T1231f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_creation_exported_to */
extern T1 T82f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_exported_to */
extern T1 T833f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_exported_to */
extern T1 T1041f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_creation_exported_to */
extern T1 T1230f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_PROCEDURE.is_creation_exported_to */
extern T1 T533f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE.is_creation_exported_to */
extern T1 T527f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.is_exported_to */
extern T1 T1231f69(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.is_exported_to */
extern T1 T1230f66(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.is_exported_to */
extern T1 T533f64(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.is_exported_to */
extern T1 T527f65(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.is_infix */
extern T1 T1233f9(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix */
extern T1 T1232f9(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix */
extern T1 T181f53(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix */
extern T1 T1234f8(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix */
extern T1 T832f15(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix */
extern T1 T181f52(GE_context* ac, T0* C);
/* ET_INFIX_NAME.hash_code */
extern T6 T1234f5(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.hash_code */
extern T6 T1232f5(GE_context* ac, T0* C);
/* ET_INFIX_NAME.first_leaf */
extern T0* T1234f76(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.first_leaf */
extern T0* T1233f63(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.first_leaf */
extern T0* T1232f62(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.first_leaf */
extern T0* T832f63(GE_context* ac, T0* C);
/* ET_IDENTIFIER.first_leaf */
extern T0* T181f93(GE_context* ac, T0* C);
/* ET_INFIX_NAME.same_feature_name */
extern T1 T1234f42(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_feature_name */
extern T1 T1233f21(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_NAME.same_feature_name */
extern T1 T1232f28(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_feature_name */
extern T1 T832f11(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.same_feature_name */
extern T1 T181f42(GE_context* ac, T0* C, T0* a1);
extern T1 T181f42ot1(T0* a1, T0** a2);
/* ET_INFIX_NAME.is_argument */
extern T1 T1234f62(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_argument */
extern T1 T1233f51(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_argument */
extern T1 T1232f48(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_argument */
extern T1 T832f49(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_argument */
extern T1 T181f27(GE_context* ac, T0* C);
/* ET_INFIX_NAME.argument_name */
extern T0* T1234f63(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.argument_name */
extern T0* T1233f52(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.argument_name */
extern T0* T1232f49(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.argument_name */
extern T0* T832f50(GE_context* ac, T0* C);
/* ET_IDENTIFIER.argument_name */
extern T0* T181f71(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_local */
extern T1 T1234f64(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_local */
extern T1 T1233f53(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_local */
extern T1 T1232f50(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_local */
extern T1 T832f51(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_local */
extern T1 T181f29(GE_context* ac, T0* C);
/* ET_INFIX_NAME.local_name */
extern T0* T1234f65(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.local_name */
extern T0* T1233f54(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.local_name */
extern T0* T1232f51(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.local_name */
extern T0* T832f52(GE_context* ac, T0* C);
/* ET_IDENTIFIER.local_name */
extern T0* T181f72(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_object_test_local */
extern T1 T1234f66(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_object_test_local */
extern T1 T1233f55(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_object_test_local */
extern T1 T1232f52(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_object_test_local */
extern T1 T832f53(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_object_test_local */
extern T1 T181f17(GE_context* ac, T0* C);
/* ET_INFIX_NAME.object_test_local_name */
extern T0* T1234f67(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.object_test_local_name */
extern T0* T1233f56(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.object_test_local_name */
extern T0* T1232f53(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.object_test_local_name */
extern T0* T832f54(GE_context* ac, T0* C);
/* ET_IDENTIFIER.object_test_local_name */
extern T0* T181f73(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_across_cursor */
extern T1 T1234f68(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_across_cursor */
extern T1 T1233f57(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_across_cursor */
extern T1 T1232f54(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_across_cursor */
extern T1 T832f55(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_across_cursor */
extern T1 T181f30(GE_context* ac, T0* C);
/* ET_INFIX_NAME.across_cursor_name */
extern T0* T1234f69(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.across_cursor_name */
extern T0* T1233f58(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.across_cursor_name */
extern T0* T1232f55(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.across_cursor_name */
extern T0* T832f56(GE_context* ac, T0* C);
/* ET_IDENTIFIER.across_cursor_name */
extern T0* T181f74(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.position */
extern T0* T1784f28(GE_context* ac, T0* C);
/* ET_INFIX_NAME.position */
extern T0* T1234f7(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.position */
extern T0* T1233f7(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.position */
extern T0* T1232f7(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.position */
extern T0* T832f14(GE_context* ac, T0* C);
/* ET_IDENTIFIER.position */
extern T0* T181f22(GE_context* ac, T0* C);
/* ET_INFIX_NAME.lower_name */
extern T0* T1234f43(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.lower_name */
extern T0* T1233f22(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.lower_name */
extern T0* T1232f29(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.lower_name */
extern T0* T832f12(GE_context* ac, T0* C);
/* ET_IDENTIFIER.lower_name */
extern T0* T181f35(GE_context* ac, T0* C);
/* ET_INFIX_NAME.name */
extern T0* T1234f6(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.name */
extern T0* T1233f6(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.name */
extern T0* T1232f6(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.name */
extern T0* T832f13(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_tuple_label */
extern T1 T1784f26(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_tuple_label */
extern T1 T1234f16(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_tuple_label */
extern T1 T1233f16(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_tuple_label */
extern T1 T1232f16(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_tuple_label */
extern T1 T832f23(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_tuple_label */
extern T1 T181f34(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.last_leaf */
extern T0* T1784f42(GE_context* ac, T0* C);
/* ET_INFIX_NAME.last_leaf */
extern T0* T1234f77(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.last_leaf */
extern T0* T1233f64(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.last_leaf */
extern T0* T1232f63(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.last_leaf */
extern T0* T832f64(GE_context* ac, T0* C);
/* ET_IDENTIFIER.last_leaf */
extern T0* T181f98(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.static_type */
extern T0* T334f54(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.static_type */
extern T0* T333f54(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.static_type */
extern T0* T322f53(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.static_type */
extern T0* T305f52(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.static_type */
extern T0* T238f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_generic */
extern T1 T334f53(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_generic */
extern T1 T333f53(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_generic */
extern T1 T322f52(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_generic */
extern T1 T305f51(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_generic */
extern T1 T238f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_reference_attributes */
extern T1 T334f65(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_reference_attributes */
extern T1 T333f66(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_reference_attributes */
extern T1 T322f65(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_reference_attributes */
extern T1 T305f65(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.has_nested_reference_attributes */
extern T1 T238f63(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_builtin_attribute */
extern T1 T334f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_FUNCTION_TYPE.is_builtin_attribute */
extern T1 T333f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_SPECIAL_TYPE.is_builtin_attribute */
extern T1 T322f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TUPLE_TYPE.is_builtin_attribute */
extern T1 T305f21(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TYPE.is_builtin_attribute */
extern T1 T238f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_special */
extern T1 T334f67(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_special */
extern T1 T333f68(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_special */
extern T1 T305f67(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_special */
extern T1 T238f65(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_procedure */
extern T0* T334f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.force_last */
extern void T308f11(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.resize */
extern void T308f14(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.new_capacity */
extern T6 T308f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.capacity */
extern T6 T308f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.put_last */
extern void T308f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T334f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_agent_call */
extern void T237f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_agent_call */
extern void T79f144(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.make */
extern T0* T830c15(GE_context* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.tokens */
extern T0* T334f21(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T334f72p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.make_with_capacity */
extern T0* T308c9(GE_context* ac, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_procedure */
extern T0* T333f56(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T333f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.tokens */
extern T0* T333f73(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T333f67p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_procedure */
extern T0* T322f51(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T322f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.tokens */
extern T0* T322f21(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T322f72p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_procedure */
extern T0* T305f54(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T305f66(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_put */
extern void T237f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_put */
extern void T79f142(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.tokens */
extern T0* T305f72(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T305f66p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T238f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_procedure */
extern T0* T238f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_query */
extern T0* T334f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_attribute */
extern void T334f81(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.put */
extern void T308f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_query */
extern T0* T334f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_query */
extern T0* T333f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_attribute */
extern void T333f81(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T333f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.set_result_type_set */
extern void T247f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T333f72p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_query */
extern T0* T322f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_attribute */
extern void T322f80(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T322f66(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T322f66p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_query */
extern T0* T305f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_attribute */
extern void T305f80(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T305f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_item */
extern void T237f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_item */
extern void T79f143(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_at_feature_name */
extern unsigned char ge807os11510;
extern T0* ge807ov11510;
extern T0* T81f79(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T305f71p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T238f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_attribute */
extern void T238f77(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.new_dynamic_query */
extern T0* T238f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_procedure */
extern T0* T334f51(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_procedure */
extern T0* T333f51(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_procedure */
extern T0* T322f50(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_procedure */
extern T0* T305f50(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T238f29(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.is_agent_type */
extern T1 T322f70(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_agent_type */
extern T1 T305f70(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T238f68(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_expanded */
extern T1 T334f48(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_expanded */
extern T1 T333f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_expanded */
extern T1 T322f71(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_expanded */
extern T1 T305f47(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_expanded */
extern T1 T238f25(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_basic */
extern T1 T334f50(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_basic */
extern T1 T333f50(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_basic */
extern T1 T322f49(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_basic */
extern T1 T305f49(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_basic */
extern T1 T238f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_query */
extern T0* T334f52(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_query */
extern T0* T333f52(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_query */
extern T0* T322f55(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_query */
extern T0* T305f55(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T238f28(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_type */
extern T1 T334f55(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_type */
extern T1 T333f55(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_type */
extern T1 T322f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_type */
extern T1 T305f53(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T238f27(GE_context* ac, T0* C, T0* a1);
/* ET_FILE_POSITION.to_text */
extern T0* T1278f10(GE_context* ac, T0* C);
/* ET_FILE_POSITION.append_to_string */
extern void T1278f15(GE_context* ac, T0* C, T0* a1);
/* ET_FILE_POSITION.append_to_string_with_filename */
extern void T1278f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_context_to_string */
extern void T1278f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_line_to_string */
extern void T1278f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.skip_lines */
extern void T1278f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_FILE_POSITION.integer_ */
extern T0* T1278f11(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.to_text */
extern T0* T954f67(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.append_to_string */
extern void T954f74(GE_context* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.integer_ */
extern T0* T954f70(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.to_text */
extern T0* T649f73(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.append_to_string */
extern void T649f107(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.integer_ */
extern T0* T649f97(GE_context* ac, T0* C);
/* ET_KEYWORD.to_text */
extern T0* T396f33(GE_context* ac, T0* C);
/* ET_KEYWORD.append_to_string */
extern void T396f95(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.integer_ */
extern T0* T396f34(GE_context* ac, T0* C);
/* ET_SYMBOL.to_text */
extern T0* T345f66(GE_context* ac, T0* C);
/* ET_SYMBOL.append_to_string */
extern void T345f94(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.integer_ */
extern T0* T345f69(GE_context* ac, T0* C);
/* ET_CURRENT.to_text */
extern T0* T285f21(GE_context* ac, T0* C);
/* ET_CURRENT.append_to_string */
extern void T285f37(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.integer_ */
extern T0* T285f22(GE_context* ac, T0* C);
/* ET_IDENTIFIER.to_text */
extern T0* T181f84(GE_context* ac, T0* C);
/* ET_IDENTIFIER.append_to_string */
extern void T181f123(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.integer_ */
extern T0* T181f86(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.to_text */
extern T0* T179f9(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.append_to_string */
extern void T179f14(GE_context* ac, T0* C, T0* a1);
/* ET_COMPRESSED_POSITION.integer_ */
extern T0* T179f10(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_null_position */
extern T1 T1784f34(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_null_position */
extern T1 T1209f8(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_null_position */
extern T1 T1208f8(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_null_position */
extern T1 T1207f7(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_null_position */
extern T1 T1206f7(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_null_position */
extern T1 T1204f9(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_null_position */
extern T1 T1203f9(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_null_position */
extern T1 T1202f9(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_null_position */
extern T1 T1201f9(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_null_position */
extern T1 T1200f9(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_null_position */
extern T1 T1199f9(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_null_position */
extern T1 T1198f9(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_null_position */
extern T1 T1197f9(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_null_position */
extern T1 T1196f16(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_null_position */
extern T1 T1195f8(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_null_position */
extern T1 T954f63(GE_context* ac, T0* C);
/* ET_VOID.is_null_position */
extern T1 T946f7(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_null_position */
extern T1 T943f19(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.is_null_position */
extern T1 T940f12(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_null_position */
extern T1 T930f6(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_null_position */
extern T1 T924f21(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_null_position */
extern T1 T906f13(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.is_null_position */
extern T1 T903f12(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_null_position */
extern T1 T831f10(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_null_position */
extern T1 T649f18(GE_context* ac, T0* C);
/* ET_KEYWORD.is_null_position */
extern T1 T396f26(GE_context* ac, T0* C);
/* ET_SYMBOL.is_null_position */
extern T1 T345f18(GE_context* ac, T0* C);
/* ET_RESULT.is_null_position */
extern T1 T312f11(GE_context* ac, T0* C);
/* ET_CURRENT.is_null_position */
extern T1 T285f13(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_null_position */
extern T1 T181f44(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.is_null */
extern T1 T179f8(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.line */
extern T6 T1784f32(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.line */
extern T6 T1209f6(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.line */
extern T6 T1208f6(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.line */
extern T6 T1207f5(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.line */
extern T6 T1206f5(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.line */
extern T6 T1204f7(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.line */
extern T6 T1203f7(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.line */
extern T6 T1202f17(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.line */
extern T6 T1201f17(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.line */
extern T6 T1200f17(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.line */
extern T6 T1199f17(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.line */
extern T6 T1198f17(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.line */
extern T6 T1197f7(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.line */
extern T6 T1196f14(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.line */
extern T6 T1195f24(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.line */
extern T6 T954f64(GE_context* ac, T0* C);
/* ET_VOID.line */
extern T6 T946f5(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.line */
extern T6 T943f17(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.line */
extern T6 T940f10(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.line */
extern T6 T930f11(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.line */
extern T6 T924f19(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.line */
extern T6 T906f11(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.line */
extern T6 T903f10(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.line */
extern T6 T831f8(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.line */
extern T6 T649f16(GE_context* ac, T0* C);
/* ET_KEYWORD.line */
extern T6 T396f27(GE_context* ac, T0* C);
/* ET_SYMBOL.line */
extern T6 T345f19(GE_context* ac, T0* C);
/* ET_RESULT.line */
extern T6 T312f9(GE_context* ac, T0* C);
/* ET_CURRENT.line */
extern T6 T285f11(GE_context* ac, T0* C);
/* ET_IDENTIFIER.line */
extern T6 T181f24(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.line */
extern T6 T179f6(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.column */
extern T6 T1784f33(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.column */
extern T6 T1209f7(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.column */
extern T6 T1208f7(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.column */
extern T6 T1207f6(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.column */
extern T6 T1206f6(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.column */
extern T6 T1204f8(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.column */
extern T6 T1203f8(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.column */
extern T6 T1202f49(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.column */
extern T6 T1201f49(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.column */
extern T6 T1200f49(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.column */
extern T6 T1199f49(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.column */
extern T6 T1198f49(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.column */
extern T6 T1197f8(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.column */
extern T6 T1196f15(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.column */
extern T6 T1195f7(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.column */
extern T6 T954f65(GE_context* ac, T0* C);
/* ET_VOID.column */
extern T6 T946f6(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.column */
extern T6 T943f18(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.column */
extern T6 T940f11(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.column */
extern T6 T930f12(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.column */
extern T6 T924f20(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.column */
extern T6 T906f12(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.column */
extern T6 T903f11(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.column */
extern T6 T831f9(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.column */
extern T6 T649f17(GE_context* ac, T0* C);
/* ET_KEYWORD.column */
extern T6 T396f28(GE_context* ac, T0* C);
/* ET_SYMBOL.column */
extern T6 T345f20(GE_context* ac, T0* C);
/* ET_RESULT.column */
extern T6 T312f10(GE_context* ac, T0* C);
/* ET_CURRENT.column */
extern T6 T285f12(GE_context* ac, T0* C);
/* ET_IDENTIFIER.column */
extern T6 T181f25(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.column */
extern T6 T179f7(GE_context* ac, T0* C);
/* UC_UTF8_STRING.character_32_item */
extern T3 T846f27(GE_context* ac, T0* C, T6 a1);
/* STRING_32.item */
extern T3 T18f9(GE_context* ac, T0* C, T6 a1);
/* STRING_8.character_32_item */
extern T3 T17f32(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.substring */
extern T0* T846f10(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.make_from_substring */
extern T0* T846c78(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.make_from_substring_general */
extern void T846f97(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_32.substring */
extern T0* T18f10(GE_context* ac, T0* C, T6 a1, T6 a2);
/* STRING_32.new_string */
extern T0* T18f12(GE_context* ac, T0* C, T6 a1);
/* STRING_8.substring */
extern T0* T17f24(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.code */
extern T10 T846f44(GE_context* ac, T0* C, T6 a1);
/* STRING_32.code */
extern T10 T18f8(GE_context* ac, T0* C, T6 a1);
/* STRING_8.code */
extern T10 T17f19(GE_context* ac, T0* C, T6 a1);
/* ET_TUPLE_TYPE.same_named_type */
extern T1 T260f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_named_type */
extern T1 T82f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_named_type */
extern T1 T80f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_as_base_class */
extern T1 T260f13(GE_context* ac, T0* C);
/* ET_CLASS.same_as_base_class */
extern T1 T82f64(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.same_as_base_class */
extern T1 T80f21(GE_context* ac, T0* C);
/* ET_CLASS.is_expanded */
extern T1 T82f119(GE_context* ac, T0* C);
/* ET_CLASS.has_expanded_mark */
extern T1 T82f79(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_expanded */
extern T1 T80f17(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.same_named_type_with_type_marks */
extern T1 T260f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_type_with_type_marks */
extern T1 T82f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_type_with_type_marks */
extern T1 T80f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.named_type_with_type_mark */
extern T0* T260f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.named_type_with_type_mark */
extern T0* T82f105(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.named_type_with_type_mark */
extern T0* T80f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.same_named_class_type_with_type_marks */
extern T1 T260f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_class_type_with_type_marks */
extern T1 T82f112(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_class_type_with_type_marks */
extern T1 T80f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T260f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_tuple_type_with_type_marks */
extern T1 T82f130(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T80f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.base_type_actual_count */
extern T6 T260f44(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.base_type_actual_count */
extern T6 T82f113(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_type_actual_count */
extern T6 T80f40(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type_with_type_mark */
extern T0* T260f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_with_type_mark */
extern T0* T82f85(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_with_type_mark */
extern T0* T80f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.unaliased_to_text */
extern T0* T260f14(GE_context* ac, T0* C);
/* ET_CLASS.unaliased_to_text */
extern T0* T82f109(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.unaliased_to_text */
extern T0* T80f29(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.conforms_to_type_with_type_marks */
extern T1 T260f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.conforms_to_type_with_type_marks */
extern T1 T82f80(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.conforms_to_type_with_type_marks */
extern T1 T80f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_base_class_type_with_type_marks */
extern T1 T260f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_class_type_with_type_marks */
extern T1 T82f107(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_class_type_with_type_marks */
extern T1 T80f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T260f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_tuple_type_with_type_marks */
extern T1 T82f129(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T80f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T260f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.conforms_from_class_type_with_type_marks */
extern T1 T82f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T80f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T260f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACTUAL_PARAMETER_SUBLIST.tuple_conforms_to_types */
extern T1 T1403f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.tuple_conforms_to_types */
extern T1 T251f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.conforms_from_tuple_type_with_type_marks */
extern T1 T82f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T80f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_type_expanded_with_type_mark */
extern T1 T260f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_expanded_with_type_mark */
extern T1 T82f76(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_expanded_with_type_mark */
extern T1 T80f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_detachable_with_type_mark */
extern T1 T260f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_detachable_with_type_mark */
extern T1 T82f117(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_detachable_with_type_mark */
extern T1 T80f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_base_type_with_type_mark */
extern T0* T260f81(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_base_type_with_type_mark */
extern T0* T82f169(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_base_type_with_type_mark */
extern T0* T80f81(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_named_type_with_type_mark */
extern T0* T260f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_named_type_with_type_mark */
extern T0* T82f170(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_named_type_with_type_mark */
extern T0* T80f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.actual_parameter_count */
extern T6 T260f48(GE_context* ac, T0* C);
/* ET_CLASS.formal_parameter_count */
extern T6 T82f106(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.actual_parameter_count */
extern T6 T80f45(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.type_with_type_mark */
extern T0* T260f35(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.type_with_type_mark */
extern T0* T82f91(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.type_with_type_mark */
extern T0* T80f37(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.to_text */
extern T0* T260f36(GE_context* ac, T0* C);
/* ET_CLASS.to_text */
extern T0* T82f101(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.to_text */
extern T0* T80f38(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T260f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_formal_parameter_type_with_type_marks */
extern T1 T82f160(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T80f72(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T260f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T82f161(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T80f73(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_type_reference_with_type_mark */
extern T1 T260f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_reference_with_type_mark */
extern T1 T82f162(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_reference_with_type_mark */
extern T1 T80f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_attached_with_type_mark */
extern T1 T260f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_attached_with_type_mark */
extern T1 T82f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_attached_with_type_mark */
extern T1 T80f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.index_of_label */
extern T6 T260f96(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.index_of_label */
extern T6 T82f196(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.index_of_label */
extern T6 T80f100(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type_actual */
extern T0* T260f80(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T260f80ot1(T0* a1, T0** a2);
/* ET_CLASS.base_type_actual */
extern T0* T82f168(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_CLASS_TYPE.base_type_actual */
extern T0* T80f80(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T80f80ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.base_class */
extern T0* T260f12(GE_context* ac, T0* C);
/* ET_CLASS.base_class */
extern T0* T82f96(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.base_class */
extern T0* T80f50(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.base_type_index_of_label */
extern T6 T260f97(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_index_of_label */
extern T6 T82f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_index_of_label */
extern T6 T80f101(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.same_base_type_with_type_marks */
extern T1 T260f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_type_with_type_marks */
extern T1 T82f102(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_type_with_type_marks */
extern T1 T80f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_to_type */
extern T1 T260f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.conforms_to_type */
extern T1 T82f120(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.conforms_to_type */
extern T1 T80f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.test */
extern T1 T183f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.string_ */
extern T0* T183f2(GE_context* ac, T0* C);
/* KL_STRING_EQUALITY_TESTER.test */
extern T1 T144f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T58f1(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T58f1oe1(GE_context* ac, T0* a1, T0* a2);
/* UC_UTF8_STRING.is_equal */
extern T1 T846f63(GE_context* ac, T0* C, T0* a1);
/* UC_STRING_EQUALITY_TESTER.test */
extern T1 T57f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.string_ */
extern T0* T57f2(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.default_message */
extern T0* T1808f5(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.message */
extern T0* T1808f3(GE_context* ac, T0* C, T0* a1);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.arguments */
extern T0* T1808f6(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.string_ */
extern T0* T1808f4(GE_context* ac, T0* C);
/* ET_UNIVERSE_ERROR.default_message */
extern T0* T1764f12(GE_context* ac, T0* C);
/* ET_UNIVERSE_ERROR.message */
extern T0* T1764f7(GE_context* ac, T0* C, T0* a1);
/* ET_UNIVERSE_ERROR.arguments */
extern T0* T1764f6(GE_context* ac, T0* C);
/* ET_UNIVERSE_ERROR.string_ */
extern T0* T1764f9(GE_context* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.default_message */
extern T0* T1747f5(GE_context* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.message */
extern T0* T1747f3(GE_context* ac, T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.arguments */
extern T0* T1747f6(GE_context* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.string_ */
extern T0* T1747f4(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.default_message */
extern T0* T1746f5(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.message */
extern T0* T1746f3(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.arguments */
extern T0* T1746f6(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.string_ */
extern T0* T1746f4(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.default_message */
extern T0* T1745f5(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.message */
extern T0* T1745f3(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_AND_REJECT_ERROR.arguments */
extern T0* T1745f6(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.string_ */
extern T0* T1745f4(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.default_message */
extern T0* T1744f5(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.message */
extern T0* T1744f3(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_AND_META_ERROR.arguments */
extern T0* T1744f6(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.string_ */
extern T0* T1744f4(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.default_message */
extern T0* T1743f5(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.message */
extern T0* T1743f3(GE_context* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.arguments */
extern T0* T1743f6(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.string_ */
extern T0* T1743f4(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.default_message */
extern T0* T1742f5(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.message */
extern T0* T1742f3(GE_context* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_CLASS_ERROR.arguments */
extern T0* T1742f6(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.string_ */
extern T0* T1742f4(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.default_message */
extern T0* T1741f5(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.message */
extern T0* T1741f3(GE_context* ac, T0* C, T0* a1);
/* LX_MISSING_QUOTE_ERROR.arguments */
extern T0* T1741f6(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.string_ */
extern T0* T1741f4(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.default_message */
extern T0* T1740f5(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.message */
extern T0* T1740f3(GE_context* ac, T0* C, T0* a1);
/* LX_UNRECOGNIZED_RULE_ERROR.arguments */
extern T0* T1740f6(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.string_ */
extern T0* T1740f4(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.default_message */
extern T0* T1683f12(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.message */
extern T0* T1683f7(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.arguments */
extern T0* T1683f6(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.string_ */
extern T0* T1683f9(GE_context* ac, T0* C);
/* ET_SYNTAX_ERROR.default_message */
extern T0* T1544f11(GE_context* ac, T0* C);
/* ET_SYNTAX_ERROR.message */
extern T0* T1544f14(GE_context* ac, T0* C, T0* a1);
/* ET_SYNTAX_ERROR.arguments */
extern T0* T1544f12(GE_context* ac, T0* C);
/* ET_SYNTAX_ERROR.string_ */
extern T0* T1544f16(GE_context* ac, T0* C);
/* ET_CLUSTER_ERROR.default_message */
extern T0* T1543f12(GE_context* ac, T0* C);
/* ET_CLUSTER_ERROR.message */
extern T0* T1543f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_ERROR.arguments */
extern T0* T1543f6(GE_context* ac, T0* C);
/* ET_CLUSTER_ERROR.string_ */
extern T0* T1543f9(GE_context* ac, T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.default_message */
extern T0* T1386f5(GE_context* ac, T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.message */
extern T0* T1386f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_INVALID_EXPRESSION_ERROR.arguments */
extern T0* T1386f6(GE_context* ac, T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.string_ */
extern T0* T1386f4(GE_context* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.default_message */
extern T0* T1333f5(GE_context* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.message */
extern T0* T1333f3(GE_context* ac, T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.arguments */
extern T0* T1333f6(GE_context* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.string_ */
extern T0* T1333f4(GE_context* ac, T0* C);
/* UT_SYNTAX_ERROR.default_message */
extern T0* T1332f5(GE_context* ac, T0* C);
/* UT_SYNTAX_ERROR.message */
extern T0* T1332f3(GE_context* ac, T0* C, T0* a1);
/* UT_SYNTAX_ERROR.arguments */
extern T0* T1332f6(GE_context* ac, T0* C);
/* UT_SYNTAX_ERROR.string_ */
extern T0* T1332f4(GE_context* ac, T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T781f5(GE_context* ac, T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T781f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T781f6(GE_context* ac, T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T781f4(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.default_message */
extern T0* T780f5(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.message */
extern T0* T780f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.arguments */
extern T0* T780f6(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.string_ */
extern T0* T780f4(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.default_message */
extern T0* T779f5(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.message */
extern T0* T779f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.arguments */
extern T0* T779f6(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.string_ */
extern T0* T779f4(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.default_message */
extern T0* T778f5(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.message */
extern T0* T778f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.arguments */
extern T0* T778f6(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.string_ */
extern T0* T778f4(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.default_message */
extern T0* T777f5(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.message */
extern T0* T777f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MISSING_ELEMENT_ERROR.arguments */
extern T0* T777f6(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.string_ */
extern T0* T777f4(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.default_message */
extern T0* T776f5(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.message */
extern T0* T776f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.arguments */
extern T0* T776f6(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.string_ */
extern T0* T776f4(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.default_message */
extern T0* T775f5(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.message */
extern T0* T775f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.arguments */
extern T0* T775f6(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.string_ */
extern T0* T775f4(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.default_message */
extern T0* T774f5(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.message */
extern T0* T774f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.arguments */
extern T0* T774f6(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.string_ */
extern T0* T774f4(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.default_message */
extern T0* T531f35(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.message */
extern T0* T531f16(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.arguments */
extern T0* T531f13(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.string_ */
extern T0* T531f34(GE_context* ac, T0* C);
/* ET_INTERNAL_ERROR.default_message */
extern T0* T530f5(GE_context* ac, T0* C);
/* ET_INTERNAL_ERROR.message */
extern T0* T530f7(GE_context* ac, T0* C, T0* a1);
/* ET_INTERNAL_ERROR.arguments */
extern T0* T530f6(GE_context* ac, T0* C);
/* ET_INTERNAL_ERROR.string_ */
extern T0* T530f9(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.default_message */
extern T0* T529f5(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.message */
extern T0* T529f7(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.arguments */
extern T0* T529f6(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.string_ */
extern T0* T529f9(GE_context* ac, T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T427f5(GE_context* ac, T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T427f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T427f6(GE_context* ac, T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T427f4(GE_context* ac, T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.default_message */
extern T0* T426f5(GE_context* ac, T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.message */
extern T0* T426f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.arguments */
extern T0* T426f6(GE_context* ac, T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.string_ */
extern T0* T426f4(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.default_message */
extern T0* T425f5(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.message */
extern T0* T425f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.arguments */
extern T0* T425f6(GE_context* ac, T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.default_message */
extern T0* T424f5(GE_context* ac, T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.message */
extern T0* T424f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.arguments */
extern T0* T424f6(GE_context* ac, T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.string_ */
extern T0* T424f4(GE_context* ac, T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.default_message */
extern T0* T423f5(GE_context* ac, T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.message */
extern T0* T423f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.arguments */
extern T0* T423f6(GE_context* ac, T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.string_ */
extern T0* T423f4(GE_context* ac, T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.default_message */
extern T0* T422f5(GE_context* ac, T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.message */
extern T0* T422f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.arguments */
extern T0* T422f6(GE_context* ac, T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.string_ */
extern T0* T422f4(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.default_message */
extern T0* T307f3(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.message */
extern T0* T307f5(GE_context* ac, T0* C, T0* a1);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.arguments */
extern T0* T307f7(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.string_ */
extern T0* T307f6(GE_context* ac, T0* C);
/* UT_MESSAGE.default_message */
extern T0* T168f5(GE_context* ac, T0* C);
/* UT_MESSAGE.message */
extern T0* T168f3(GE_context* ac, T0* C, T0* a1);
/* UT_MESSAGE.arguments */
extern T0* T168f6(GE_context* ac, T0* C);
/* UT_MESSAGE.string_ */
extern T0* T168f4(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.default_message */
extern T0* T87f3(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.message */
extern T0* T87f5(GE_context* ac, T0* C, T0* a1);
/* UT_VERSION_NUMBER.arguments */
extern T0* T87f7(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.string_ */
extern T0* T87f6(GE_context* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.default_message */
extern T0* T86f3(GE_context* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.message */
extern T0* T86f5(GE_context* ac, T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.arguments */
extern T0* T86f7(GE_context* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.string_ */
extern T0* T86f6(GE_context* ac, T0* C);
/* AP_ERROR.default_message */
extern T0* T40f17(GE_context* ac, T0* C);
/* AP_ERROR.message */
extern T0* T40f18(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.arguments */
extern T0* T40f20(GE_context* ac, T0* C);
/* AP_ERROR.string_ */
extern T0* T40f19(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.was_found */
extern T1 T50f24(GE_context* ac, T0* C);
/* AP_STRING_OPTION.was_found */
extern T1 T46f15(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.was_found */
extern T1 T45f18(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.was_found */
extern T1 T44f15(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.was_found */
extern T1 T43f17(GE_context* ac, T0* C);
/* AP_FLAG.was_found */
extern T1 T41f9(GE_context* ac, T0* C);
/* AP_STRING_OPTION.occurrences */
extern T6 T46f14(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.occurrences */
extern T6 T45f17(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.occurrences */
extern T6 T44f14(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.occurrences */
extern T6 T43f16(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.allows_parameter */
extern T1 T50f20(GE_context* ac, T0* C);
/* AP_STRING_OPTION.allows_parameter */
extern T1 T46f13(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.allows_parameter */
extern T1 T45f16(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.allows_parameter */
extern T1 T44f13(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.allows_parameter */
extern T1 T43f15(GE_context* ac, T0* C);
/* AP_FLAG.allows_parameter */
extern T1 T41f11(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.needs_parameter */
extern T1 T50f18(GE_context* ac, T0* C);
/* AP_FLAG.needs_parameter */
extern T1 T41f10(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.name */
extern T0* T50f19(GE_context* ac, T0* C);
/* AP_STRING_OPTION.name */
extern T0* T46f16(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.name */
extern T0* T45f13(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.name */
extern T0* T44f16(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.name */
extern T0* T43f13(GE_context* ac, T0* C);
/* AP_FLAG.name */
extern T0* T41f12(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.example */
extern T0* T50f22(GE_context* ac, T0* C);
/* AP_STRING_OPTION.example */
extern T0* T46f17(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.example */
extern T0* T45f19(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.example */
extern T0* T44f17(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.example */
extern T0* T43f19(GE_context* ac, T0* C);
/* AP_FLAG.example */
extern T0* T41f13(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.names */
extern T0* T50f33(GE_context* ac, T0* C);
/* AP_STRING_OPTION.names */
extern T0* T46f21(GE_context* ac, T0* C);
/* AP_STRING_OPTION.has_long_form */
extern T1 T46f22(GE_context* ac, T0* C);
/* AP_STRING_OPTION.names */
extern T0* T46f21p1(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T45f21(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.has_long_form */
extern T1 T45f22(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T45f21p1(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T44f24(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.has_long_form */
extern T1 T44f25(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T44f24p1(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T43f23(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.has_long_form */
extern T1 T43f24(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T43f23p1(GE_context* ac, T0* C);
/* AP_FLAG.names */
extern T0* T41f16(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.last_character */
extern T2 T847f6(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].item */
extern T2 T1455f4(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.end_of_input */
extern T1 T847f21(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.end_of_input */
extern T1 T29f33(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.is_closable */
extern T1 T898f7(GE_context* ac, T0* C);
/* KL_STDIN_FILE.is_closable */
extern T1 T887f5(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.is_closable */
extern T1 T847f7(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_closable */
extern T1 T29f37(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.read_to_string */
extern T6 T898f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.read_to_string */
extern T6 T887f11(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* CONSOLE.read_stream */
extern void T865f30(GE_context* ac, T0* C, T6 a1);
/* CONSOLE.read_stream_thread_aware */
extern void T865f33(GE_context* ac, T0* C, T6 a1);
/* C_STRING.read_string_into */
extern void T536f15(GE_context* ac, T0* C, T0* a1);
/* STRING_8.grow */
extern void T17f77(GE_context* ac, T0* C, T6 a1);
/* CONSOLE.console_readstream */
extern T6 T865f17(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* CONSOLE.read_data_buffer */
extern unsigned char ge1429os2680;
extern T0* ge1429ov2680;
extern T0* T865f16(GE_context* ac, T0* C);
/* KL_STDIN_FILE.any_ */
extern T0* T887f8(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T847f28(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T847f28p1(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.read_to_string */
extern T6 T29f36(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.dummy_kl_character_buffer */
extern unsigned char ge248os2435;
extern T0* ge248ov2435;
extern T0* T29f41(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.any_ */
extern T0* T29f39(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.name */
extern unsigned char ge263os2410;
extern T0* ge263ov2410;
extern T0* T898f6(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.name */
extern T0* T847f5(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.stop_requested */
extern T1 T70f163(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.stop_requested */
extern T1 T64f161(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.stop_requested */
extern T1 T61f174(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.dotnet_assembly_consumer */
extern T0* T70f177(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.make */
extern T0* T788c3(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.dotnet_assembly_consumer */
extern T0* T64f168(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.dotnet_assembly_consumer */
extern T0* T61f163(GE_context* ac, T0* C);
/* ET_SYSTEM.dotnet_assembly_consumer */
extern T0* T33f150(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.older_or_same_ise_version */
extern T1 T70f179(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.older_or_same_ise_version */
extern T1 T64f186(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.older_or_same_ise_version */
extern T1 T61f183(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.older_or_same_ise_version */
extern T1 T33f156(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.is_ise */
extern T1 T70f176(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.is_ise */
extern T1 T64f179(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.is_ise */
extern T1 T61f182(GE_context* ac, T0* C);
/* ET_SYSTEM.is_ise */
extern T1 T33f153(GE_context* ac, T0* C);
extern T0* GE_ma715(T6 c, T6 n, ...);
extern T0* GE_ma142(T6 c, T6 n, ...);
extern T0* GE_ma521(T6 c, T6 n, ...);
extern T0* GE_ma263(T6 c, T6 n, ...);
extern T0* GE_ma557(T6 c, T6 n, ...);
extern T0* GE_mt27(T6 a1, T6 a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T6 a10, T1 a11);
extern T0* GE_mt192();
extern T0* GE_mt478(T0* a1);
extern T0* ge261ov2410;
extern T0* ge260ov12641;
extern T0* ge224ov3801;
extern T0* ge164ov4876;
extern T0* ge324ov30135;
extern T0* ge314ov13495;
extern T0* ge262ov12641;
extern T0* ge1018ov8516;
extern T0* ge1018ov8523;
extern T0* ge1018ov8522;
extern T0* ge1018ov8521;
extern T0* ge246ov2455;
extern T0* ge247ov12698;
extern T0* ge1018ov8517;
extern T0* ge1018ov8519;
extern T0* ge1018ov8481;
extern T0* ge245ov19083;
extern T0* ge245ov19084;
extern T0* ge1716ov18107;
extern T0* ge1716ov18092;
extern T0* ge1716ov18085;
extern T0* ge1716ov18070;
extern T0* ge1716ov18095;
extern T0* ge1716ov18088;
extern T0* ge1716ov18096;
extern T0* ge1716ov18105;
extern T0* ge1716ov18098;
extern T0* ge1716ov18094;
extern T0* ge1716ov18082;
extern T0* ge1716ov18083;
extern T0* ge1716ov18097;
extern T0* ge1716ov18084;
extern T0* ge1716ov18071;
extern T0* ge1716ov18072;
extern T0* ge1716ov18073;
extern T0* ge1716ov18079;
extern T0* ge1716ov18081;
extern T0* ge1716ov18076;
extern T0* ge1716ov18101;
extern T0* ge1716ov18100;
extern T0* ge1716ov18077;
extern T0* ge1716ov18078;
extern T0* ge1716ov18075;
extern T0* ge1716ov18074;
extern T0* ge1712ov17862;
extern T0* ge1018ov8518;
extern T0* ge1018ov8520;
extern T0* ge1018ov8348;
extern T0* ge1018ov8384;
extern T0* ge1018ov8357;
extern T0* ge1018ov8352;
extern T0* ge1018ov8383;
extern T0* ge1011ov26961;
extern T0* ge1011ov26960;
extern T0* ge1011ov26959;
extern T0* ge807ov11951;
extern T0* ge807ov11858;
extern T0* ge807ov12084;
extern T0* ge1018ov8419;
extern T0* ge1018ov8504;
extern T0* ge1018ov8424;
extern T0* ge1018ov8339;
extern T0* ge1018ov8505;
extern T0* ge1018ov8450;
extern T0* ge1018ov8449;
extern T0* ge1018ov8436;
extern T0* ge1018ov8471;
extern T0* ge1018ov8478;
extern T0* ge1018ov8391;
extern T0* ge1018ov8499;
extern T0* ge1018ov8426;
extern T0* ge1018ov8410;
extern T0* ge1018ov8341;
extern T0* ge1018ov8474;
extern T0* ge1018ov8408;
extern T0* ge807ov12055;
extern T0* ge807ov12075;
extern T0* ge1018ov8389;
extern T0* ge1018ov8472;
extern T0* ge1018ov8396;
extern T0* ge1018ov8386;
extern T0* ge1018ov8473;
extern T0* ge1018ov8358;
extern T0* ge1018ov8385;
extern T0* ge1018ov8483;
extern T0* ge1018ov8512;
extern T0* ge1018ov8435;
extern T0* ge1018ov8422;
extern T0* ge1018ov8421;
extern T0* ge1018ov8503;
extern T0* ge1018ov8345;
extern T0* ge1018ov8423;
extern T0* ge1018ov8477;
extern T0* ge1018ov8390;
extern T0* ge1018ov8476;
extern T0* ge1018ov8491;
extern T0* ge1018ov8500;
extern T0* ge1018ov8479;
extern T0* ge1018ov8403;
extern T0* ge1018ov8404;
extern T0* ge1018ov8492;
extern T0* ge1018ov8399;
extern T0* ge807ov12058;
extern T0* ge1018ov8444;
extern T0* ge1018ov8407;
extern T0* ge1018ov8441;
extern T0* ge1018ov8342;
extern T0* ge1018ov8347;
extern T0* ge1018ov8369;
extern T0* ge1018ov8425;
extern T0* ge1018ov8452;
extern T0* ge1018ov8416;
extern T0* ge1018ov8400;
extern T0* ge1018ov8501;
extern T0* ge1018ov8443;
extern T0* ge1018ov8442;
extern T0* ge1018ov8507;
extern T0* ge1018ov8454;
extern T0* ge1018ov8430;
extern T0* ge1018ov8387;
extern T0* ge1018ov8427;
extern T0* ge1018ov8453;
extern T0* ge1018ov8349;
extern T0* ge1018ov8461;
extern T0* ge1018ov8467;
extern T0* ge1018ov8460;
extern T0* ge1018ov8466;
extern T0* ge1018ov8459;
extern T0* ge1018ov8465;
extern T0* ge1018ov8458;
extern T0* ge1018ov8464;
extern T0* ge1018ov8457;
extern T0* ge1018ov8463;
extern T0* ge1018ov8456;
extern T0* ge1018ov8462;
extern T0* ge1018ov8433;
extern T0* ge1018ov8418;
extern T0* ge1018ov8346;
extern T0* ge1018ov8355;
extern T0* ge1018ov8379;
extern T0* ge1018ov8377;
extern T0* ge1018ov8368;
extern T0* ge1018ov8367;
extern T0* ge1018ov8366;
extern T0* ge1018ov8365;
extern T0* ge1018ov8364;
extern T0* ge1018ov8362;
extern T0* ge1018ov8380;
extern T0* ge1018ov8354;
extern T0* ge1018ov8351;
extern T0* ge1018ov8397;
extern T0* ge1018ov8451;
extern T0* ge1018ov8434;
extern T0* ge1018ov8412;
extern T0* ge1018ov8411;
extern T0* ge1018ov8415;
extern T0* ge1018ov8414;
extern T0* ge1018ov8413;
extern T0* ge1018ov8417;
extern T0* ge1018ov8406;
extern T0* ge1018ov8405;
extern T0* ge1018ov8490;
extern T0* ge1018ov8497;
extern T0* ge1018ov8493;
extern T0* ge1018ov8494;
extern T0* ge1018ov8340;
extern T0* ge1018ov8495;
extern T0* ge1018ov8392;
extern T0* ge1018ov8409;
extern T0* ge807ov11796;
extern T0* ge807ov11818;
extern T0* ge1018ov8343;
extern T0* ge1018ov8344;
extern T0* ge807ov11829;
extern T0* ge1018ov8482;
extern T0* ge1018ov8401;
extern T0* ge1018ov8402;
extern T0* ge1018ov8455;
extern T0* ge1018ov8350;
extern T0* ge1018ov8508;
extern T0* ge1018ov8502;
extern T0* ge1018ov8359;
extern T0* ge1018ov8488;
extern T0* ge1018ov8375;
extern T0* ge1018ov8374;
extern T0* ge1018ov8373;
extern T0* ge1018ov8372;
extern T0* ge1018ov8363;
extern T0* ge1018ov8361;
extern T0* ge1018ov8360;
extern T0* ge1018ov8356;
extern T0* ge807ov11792;
extern T0* ge1018ov8378;
extern T0* ge807ov11819;
extern T0* ge1018ov8371;
extern T0* ge807ov11809;
extern T0* ge807ov11798;
extern T0* ge1018ov8388;
extern T0* ge807ov11832;
extern T0* ge1018ov8353;
extern T0* ge807ov11787;
extern T0* ge807ov11806;
extern T0* ge807ov11805;
extern T0* ge807ov11791;
extern T0* ge807ov11827;
extern T0* ge807ov11783;
extern T0* ge807ov11785;
extern T0* ge807ov11831;
extern T0* ge807ov11830;
extern T0* ge807ov11823;
extern T0* ge807ov11822;
extern T0* ge807ov11817;
extern T0* ge807ov11816;
extern T0* ge807ov11821;
extern T0* ge807ov11820;
extern T0* ge807ov11813;
extern T0* ge807ov11812;
extern T0* ge807ov11811;
extern T0* ge807ov11810;
extern T0* ge807ov11802;
extern T0* ge807ov11801;
extern T0* ge807ov11800;
extern T0* ge807ov11799;
extern T0* ge807ov11789;
extern T0* ge807ov11788;
extern T0* ge807ov11786;
extern T0* ge807ov12073;
extern T0* ge807ov11833;
extern T0* ge1017ov27938;
extern T0* ge1017ov27666;
extern T0* ge1017ov27497;
extern T0* ge1015ov26949;
extern T0* ge1015ov26943;
extern T0* ge1015ov26937;
extern T0* ge1015ov26945;
extern T0* ge1015ov26939;
extern T0* ge1015ov26933;
extern T0* ge1015ov26948;
extern T0* ge1015ov26942;
extern T0* ge1015ov26936;
extern T0* ge1015ov26950;
extern T0* ge1015ov26944;
extern T0* ge1015ov26938;
extern T0* ge807ov11883;
extern T0* ge1015ov26947;
extern T0* ge1015ov26941;
extern T0* ge1015ov26935;
extern T0* ge1017ov27960;
extern T0* ge1017ov27684;
extern T0* ge1017ov27519;
extern T0* ge807ov12016;
extern T0* ge1017ov27958;
extern T0* ge1017ov27682;
extern T0* ge1017ov27517;
extern T0* ge807ov11918;
extern T0* ge807ov11945;
extern T0* ge807ov11872;
extern T0* ge807ov12042;
extern T0* ge807ov11981;
extern T0* ge807ov12053;
extern T0* ge807ov11955;
extern T0* ge807ov11836;
extern T0* ge807ov11859;
extern T0* ge1017ov27957;
extern T0* ge1017ov27681;
extern T0* ge1017ov27516;
extern T0* ge1017ov27955;
extern T0* ge1017ov27679;
extern T0* ge1017ov27514;
extern T0* ge1017ov27956;
extern T0* ge1017ov27680;
extern T0* ge1017ov27515;
extern T0* ge807ov11878;
extern T0* ge1015ov26946;
extern T0* ge1015ov26940;
extern T0* ge1015ov26934;
extern T0* ge807ov12079;
extern T0* ge807ov12201;
extern T0* ge807ov12185;
extern T0* ge807ov11824;
extern T0* ge807ov11825;
extern T0* ge807ov12198;
extern T0* ge807ov12199;
extern T0* ge807ov12192;
extern T0* ge807ov12195;
extern T0* ge807ov12187;
extern T0* ge807ov12190;
extern T0* ge807ov12186;
extern T0* ge807ov12200;
extern T0* ge807ov12183;
extern T0* ge807ov12184;
extern T0* ge807ov12101;
extern T0* ge807ov12080;
extern T0* ge807ov11828;
extern T0* ge807ov12097;
extern T0* ge807ov11826;
extern T0* ge807ov11814;
extern T0* ge807ov11804;
extern T0* ge807ov11794;
extern T0* ge807ov11793;
extern T0* ge1109ov6042;
extern T0* ge1106ov15348;
extern T0* ge1106ov15260;
extern T0* ge1106ov15398;
extern T0* ge1106ov15310;
extern T0* ge265ov12742;
extern T0* ge268ov12742;
extern T0* ge1109ov6050;
extern T0* ge1109ov6021;
extern T0* ge1109ov6022;
extern T0* ge1109ov6044;
extern T0* ge1098ov6296;
extern T0* ge1098ov6297;
extern T0* ge1098ov6298;
extern T0* ge1106ov15397;
extern T0* ge1106ov15309;
extern T0* ge1109ov6046;
extern T0* ge1109ov6029;
extern T0* ge1109ov6043;
extern T0* ge1109ov6024;
extern T0* ge1106ov15391;
extern T0* ge1106ov15303;
extern T0* ge1106ov15390;
extern T0* ge1106ov15302;
extern T0* ge1106ov15399;
extern T0* ge1106ov15311;
extern T0* ge1109ov6006;
extern T0* ge1109ov6034;
extern T0* ge1109ov6023;
extern T0* ge1109ov6003;
extern T0* ge1109ov6019;
extern T0* ge1109ov6015;
extern T0* ge1109ov6016;
extern T0* ge1109ov6017;
extern T0* ge1109ov6040;
extern T0* ge1109ov6048;
extern T0* ge1109ov6041;
extern T0* ge1109ov6033;
extern T0* ge1109ov6047;
extern T0* ge1106ov15435;
extern T0* ge1106ov15347;
extern T0* ge1106ov15434;
extern T0* ge1106ov15346;
extern T0* ge1106ov15433;
extern T0* ge1106ov15345;
extern T0* ge1106ov15432;
extern T0* ge1106ov15344;
extern T0* ge1106ov15395;
extern T0* ge1106ov15307;
extern T0* ge1106ov15394;
extern T0* ge1106ov15306;
extern T0* ge1106ov15393;
extern T0* ge1106ov15305;
extern T0* ge1106ov15392;
extern T0* ge1106ov15304;
extern T0* ge1109ov6002;
extern T0* ge1109ov6005;
extern T0* ge1109ov6018;
extern T0* ge1106ov15403;
extern T0* ge1106ov15315;
extern T0* ge1106ov15402;
extern T0* ge1106ov15314;
extern T0* ge1106ov15401;
extern T0* ge1106ov15313;
extern T0* ge1106ov15400;
extern T0* ge1106ov15312;
extern T0* ge1112ov6001;
extern T0* ge1112ov6000;
extern T0* ge1109ov6031;
extern T0* ge1109ov6009;
extern T0* ge1109ov6035;
extern T0* ge1109ov6004;
extern T0* ge1109ov6028;
extern T0* ge1109ov6008;
extern T0* ge1109ov6011;
extern T0* ge1109ov6012;
extern T0* ge1109ov6010;
extern T0* ge1109ov6049;
extern T0* ge1109ov6025;
extern T0* ge1109ov6026;
extern T0* ge1109ov6045;
extern T0* ge1109ov6007;
extern T0* ge1109ov6027;
extern T0* ge1106ov15384;
extern T0* ge1106ov15296;
extern T0* ge1106ov15383;
extern T0* ge1106ov15295;
extern T0* ge1106ov15382;
extern T0* ge1106ov15294;
extern T0* ge1106ov15381;
extern T0* ge1106ov15293;
extern T0* ge1106ov15380;
extern T0* ge1106ov15292;
extern T0* ge1109ov6014;
extern T0* ge1106ov15366;
extern T0* ge1106ov15278;
extern T0* ge1106ov15367;
extern T0* ge1106ov15279;
extern T0* ge1106ov15365;
extern T0* ge1106ov15277;
extern T0* ge1106ov15364;
extern T0* ge1106ov15276;
extern T0* ge1106ov15363;
extern T0* ge1106ov15275;
extern T0* ge1106ov15362;
extern T0* ge1106ov15274;
extern T0* ge1106ov15371;
extern T0* ge1106ov15283;
extern T0* ge1106ov15370;
extern T0* ge1106ov15282;
extern T0* ge1106ov15369;
extern T0* ge1106ov15281;
extern T0* ge1106ov15368;
extern T0* ge1106ov15280;
extern T0* ge1106ov15431;
extern T0* ge1106ov15343;
extern T0* ge1106ov15430;
extern T0* ge1106ov15342;
extern T0* ge1106ov15429;
extern T0* ge1106ov15341;
extern T0* ge1106ov15428;
extern T0* ge1106ov15340;
extern T0* ge1106ov15373;
extern T0* ge1106ov15285;
extern T0* ge1106ov15372;
extern T0* ge1106ov15284;
extern T0* ge1106ov15355;
extern T0* ge1106ov15267;
extern T0* ge1106ov15356;
extern T0* ge1106ov15268;
extern T0* ge1106ov15354;
extern T0* ge1106ov15266;
extern T0* ge1106ov15353;
extern T0* ge1106ov15265;
extern T0* ge1106ov15376;
extern T0* ge1106ov15288;
extern T0* ge1106ov15377;
extern T0* ge1106ov15289;
extern T0* ge1106ov15375;
extern T0* ge1106ov15287;
extern T0* ge1106ov15374;
extern T0* ge1106ov15286;
extern T0* ge1106ov15414;
extern T0* ge1106ov15326;
extern T0* ge1106ov15413;
extern T0* ge1106ov15325;
extern T0* ge1106ov15412;
extern T0* ge1106ov15324;
extern T0* ge1106ov15411;
extern T0* ge1106ov15323;
extern T0* ge1106ov15410;
extern T0* ge1106ov15322;
extern T0* ge1106ov15409;
extern T0* ge1106ov15321;
extern T0* ge1109ov6013;
extern T0* ge1109ov6020;
extern T0* ge1109ov6037;
extern T0* ge1109ov6036;
extern T0* ge1109ov6039;
extern T0* ge1109ov6032;
extern T0* ge1109ov6030;
extern T0* ge1106ov15419;
extern T0* ge1106ov15331;
extern T0* ge1106ov15418;
extern T0* ge1106ov15330;
extern T0* ge1106ov15417;
extern T0* ge1106ov15329;
extern T0* ge1106ov15416;
extern T0* ge1106ov15328;
extern T0* ge1106ov15415;
extern T0* ge1106ov15327;
extern T0* ge1106ov15423;
extern T0* ge1106ov15335;
extern T0* ge1106ov15427;
extern T0* ge1106ov15339;
extern T0* ge1106ov15426;
extern T0* ge1106ov15338;
extern T0* ge1106ov15425;
extern T0* ge1106ov15337;
extern T0* ge1106ov15424;
extern T0* ge1106ov15336;
extern T0* ge1106ov15422;
extern T0* ge1106ov15334;
extern T0* ge1106ov15352;
extern T0* ge1106ov15264;
extern T0* ge1106ov15351;
extern T0* ge1106ov15263;
extern T0* ge1106ov15350;
extern T0* ge1106ov15262;
extern T0* ge1106ov15349;
extern T0* ge1106ov15261;
extern T0* ge1109ov6038;
extern T0* ge1106ov15421;
extern T0* ge1106ov15333;
extern T0* ge1106ov15408;
extern T0* ge1106ov15320;
extern T0* ge1106ov15407;
extern T0* ge1106ov15319;
extern T0* ge1106ov15405;
extern T0* ge1106ov15317;
extern T0* ge1106ov15406;
extern T0* ge1106ov15318;
extern T0* ge1106ov15404;
extern T0* ge1106ov15316;
extern T0* ge1106ov15420;
extern T0* ge1106ov15332;
extern T0* ge1106ov15361;
extern T0* ge1106ov15273;
extern T0* ge1106ov15360;
extern T0* ge1106ov15272;
extern T0* ge1106ov15358;
extern T0* ge1106ov15270;
extern T0* ge1106ov15359;
extern T0* ge1106ov15271;
extern T0* ge1106ov15357;
extern T0* ge1106ov15269;
extern T0* ge1106ov15379;
extern T0* ge1106ov15291;
extern T0* ge1106ov15378;
extern T0* ge1106ov15290;
extern T0* ge1106ov15388;
extern T0* ge1106ov15300;
extern T0* ge1106ov15387;
extern T0* ge1106ov15299;
extern T0* ge1106ov15389;
extern T0* ge1106ov15301;
extern T0* ge1106ov15396;
extern T0* ge1106ov15308;
extern T0* ge1098ov6302;
extern T0* ge1098ov6301;
extern T0* ge1106ov15386;
extern T0* ge1106ov15298;
extern T0* ge1106ov15385;
extern T0* ge1106ov15297;
extern T0* ge1287ov14387;
extern T0* ge1287ov14349;
extern T0* ge1287ov14347;
extern T0* ge1287ov14388;
extern T0* ge1287ov14360;
extern T0* ge1287ov14359;
extern T0* ge1287ov14370;
extern T0* ge1287ov14364;
extern T0* ge1287ov14363;
extern T0* ge1287ov14362;
extern T0* ge1287ov14368;
extern T0* ge1287ov14367;
extern T0* ge1287ov14369;
extern T0* ge1287ov14346;
extern T0* ge1287ov14372;
extern T0* ge1287ov14381;
extern T0* ge1290ov14201;
extern T0* ge1290ov14199;
extern T0* ge1290ov14200;
extern T0* ge1287ov14382;
extern T0* ge1287ov14383;
extern T0* ge1287ov14386;
extern T0* ge1287ov14384;
extern T0* ge1287ov14385;
extern T0* ge1287ov14379;
extern T0* ge1283ov28788;
extern T0* ge1283ov28789;
extern T0* ge1287ov14352;
extern T0* ge1287ov14375;
extern T0* ge1280ov13814;
extern T0* ge1280ov13813;
extern T0* ge1287ov14395;
extern T0* ge1287ov14396;
extern T0* ge1287ov14397;
extern T0* ge1287ov14390;
extern T0* ge1287ov14373;
extern T0* ge1287ov14374;
extern T0* ge1287ov14376;
extern T0* ge1287ov14380;
extern T0* ge265ov12743;
extern T0* ge253ov13084;
extern T0* ge253ov13083;
extern T0* ge268ov12743;
extern T0* ge1237ov13657;
extern T0* ge1127ov5021;
extern T0* ge1127ov5022;
extern T0* ge1127ov5023;
extern T0* ge1127ov5024;
extern T0* ge1127ov5025;
extern T0* ge1127ov5026;
extern T0* ge1127ov5027;
extern T0* ge1127ov5028;
extern T0* ge1127ov5029;
extern T0* ge1127ov5030;
extern T0* ge1127ov5031;
extern T0* ge1127ov5032;
extern T0* ge1127ov5033;
extern T0* ge1127ov5034;
extern T0* ge1127ov5035;
extern T0* ge1127ov5036;
extern T0* ge1127ov5037;
extern T0* ge1127ov5038;
extern T0* ge1127ov5039;
extern T0* ge1127ov5040;
extern T0* ge1127ov5041;
extern T0* ge1127ov5042;
extern T0* ge1127ov5043;
extern T0* ge1127ov5044;
extern T0* ge1127ov5045;
extern T0* ge1127ov5046;
extern T0* ge1127ov5047;
extern T0* ge1127ov5048;
extern T0* ge1127ov5049;
extern T0* ge1127ov5050;
extern T0* ge1127ov5051;
extern T0* ge1127ov5052;
extern T0* ge1127ov5053;
extern T0* ge1127ov5054;
extern T0* ge1127ov5055;
extern T0* ge1127ov5056;
extern T0* ge1127ov5057;
extern T0* ge1127ov5058;
extern T0* ge1127ov5059;
extern T0* ge1127ov5060;
extern T0* ge1127ov5061;
extern T0* ge1127ov5062;
extern T0* ge1127ov5063;
extern T0* ge1127ov5064;
extern T0* ge1127ov5065;
extern T0* ge1127ov5066;
extern T0* ge1127ov5067;
extern T0* ge1127ov5068;
extern T0* ge1127ov5069;
extern T0* ge1127ov5070;
extern T0* ge1127ov5071;
extern T0* ge1127ov5072;
extern T0* ge1127ov5073;
extern T0* ge1127ov5074;
extern T0* ge1127ov5075;
extern T0* ge1127ov5076;
extern T0* ge1127ov5077;
extern T0* ge1127ov5078;
extern T0* ge1127ov5079;
extern T0* ge1127ov5080;
extern T0* ge1127ov5081;
extern T0* ge1127ov5082;
extern T0* ge1127ov5083;
extern T0* ge1127ov5084;
extern T0* ge1127ov5085;
extern T0* ge1127ov5086;
extern T0* ge1127ov5087;
extern T0* ge1127ov5088;
extern T0* ge1127ov5089;
extern T0* ge1127ov5090;
extern T0* ge1127ov5091;
extern T0* ge1127ov5092;
extern T0* ge1127ov5093;
extern T0* ge1127ov5094;
extern T0* ge1127ov5095;
extern T0* ge1127ov5096;
extern T0* ge1127ov5097;
extern T0* ge1127ov5098;
extern T0* ge1127ov5099;
extern T0* ge1127ov5100;
extern T0* ge1127ov5101;
extern T0* ge1127ov5102;
extern T0* ge1127ov5103;
extern T0* ge1127ov5104;
extern T0* ge1127ov5105;
extern T0* ge1127ov5106;
extern T0* ge1127ov5107;
extern T0* ge1127ov5108;
extern T0* ge1127ov5109;
extern T0* ge1127ov5110;
extern T0* ge1127ov5111;
extern T0* ge1127ov5112;
extern T0* ge1127ov5113;
extern T0* ge1127ov5114;
extern T0* ge1127ov5115;
extern T0* ge1127ov5116;
extern T0* ge1127ov5217;
extern T0* ge1127ov5229;
extern T0* ge1158ov4988;
extern T0* ge1127ov5240;
extern T0* ge1127ov5225;
extern T0* ge1127ov5230;
extern T0* ge1127ov5231;
extern T0* ge1127ov5232;
extern T0* ge1127ov5218;
extern T0* ge1127ov5236;
extern T0* ge1127ov5243;
extern T0* ge1127ov5223;
extern T0* ge1127ov5214;
extern T0* ge1127ov5239;
extern T0* ge1127ov5221;
extern T0* ge1127ov5226;
extern T0* ge1127ov5224;
extern T0* ge1127ov5220;
extern T0* ge1127ov5235;
extern T0* ge1127ov5237;
extern T0* ge1127ov5245;
extern T0* ge1127ov5242;
extern T0* ge1127ov5234;
extern T0* ge1127ov5216;
extern T0* ge1127ov5241;
extern T0* ge1127ov5215;
extern T0* ge1127ov5222;
extern T0* ge1127ov5238;
extern T0* ge1127ov5233;
extern T0* ge1127ov5227;
extern T0* ge1127ov5219;
extern T0* ge1127ov5247;
extern T0* ge1127ov5228;
extern T0* ge1127ov5244;
extern T0* ge1158ov4987;
extern T0* ge1158ov4986;
extern T0* ge1117ov21751;
extern T0* ge1123ov14064;
extern T0* ge1323ov5871;
extern T0* ge9ov4858;
extern T0* ge9ov4865;
extern T0* ge7ov4922;
extern T0* ge284ov1975;
extern T0* ge6ov4494;
extern T0* ge9ov4861;
extern T0* ge9ov4868;
extern T0* ge9ov4859;
extern T0* ge9ov4866;
extern T0* ge9ov4860;
extern T0* ge9ov4867;
extern T0* ge9ov4862;
extern T0* ge9ov4869;
extern T0* ge9ov4863;
extern T0* ge9ov4870;
extern T0* ge6ov4489;
extern T0* ge6ov4488;
extern T0* ge6ov4496;
extern T0* ge6ov4495;
extern T0* ge1166ov3256;
extern T0* ge1166ov3254;
extern T0* ge1294ov28358;
extern T0* ge1294ov28359;
extern T0* ge1285ov30143;
extern T0* ge1285ov30145;
extern T0* ge807ov11808;
extern T0* ge1007ov37261;
extern T0* ge1007ov37259;
extern T0* ge1007ov37257;
extern T0* ge807ov12070;
extern T0* ge900ov17312;
extern T0* ge893ov26732;
extern T0* ge889ov26724;
extern T0* ge1017ov27911;
extern T0* ge1017ov27652;
extern T0* ge1017ov27470;
extern T0* ge1017ov27912;
extern T0* ge1017ov27471;
extern T0* ge1017ov27818;
extern T0* ge1017ov27601;
extern T0* ge1017ov27377;
extern T0* ge1017ov27732;
extern T0* ge1017ov27563;
extern T0* ge1017ov27291;
extern T0* ge1017ov27733;
extern T0* ge1017ov27292;
extern T0* ge1017ov27716;
extern T0* ge1017ov27556;
extern T0* ge1017ov27275;
extern T0* ge1017ov27715;
extern T0* ge1017ov27274;
extern T0* ge1017ov27717;
extern T0* ge1017ov27276;
extern T0* ge1017ov27741;
extern T0* ge1017ov27567;
extern T0* ge1017ov27300;
extern T0* ge1017ov27730;
extern T0* ge1017ov27289;
extern T0* ge1017ov27731;
extern T0* ge1017ov27290;
extern T0* ge1017ov27848;
extern T0* ge1017ov27618;
extern T0* ge1017ov27407;
extern T0* ge1017ov27847;
extern T0* ge1017ov27406;
extern T0* ge1017ov27849;
extern T0* ge1017ov27619;
extern T0* ge1017ov27408;
extern T0* ge1017ov27745;
extern T0* ge1017ov27569;
extern T0* ge1017ov27304;
extern T0* ge1017ov27751;
extern T0* ge1017ov27573;
extern T0* ge1017ov27310;
extern T0* ge1017ov27840;
extern T0* ge1017ov27614;
extern T0* ge1017ov27399;
extern T0* ge1017ov27823;
extern T0* ge1017ov27604;
extern T0* ge1017ov27382;
extern T0* ge1017ov27850;
extern T0* ge1017ov27620;
extern T0* ge1017ov27409;
extern T0* ge1017ov27748;
extern T0* ge1017ov27571;
extern T0* ge1017ov27307;
extern T0* ge1017ov27755;
extern T0* ge1017ov27576;
extern T0* ge1017ov27314;
extern T0* ge1017ov27841;
extern T0* ge1017ov27615;
extern T0* ge1017ov27400;
extern T0* ge1017ov27839;
extern T0* ge1017ov27613;
extern T0* ge1017ov27398;
extern T0* ge1017ov27824;
extern T0* ge1017ov27605;
extern T0* ge1017ov27383;
extern T0* ge1017ov27842;
extern T0* ge1017ov27616;
extern T0* ge1017ov27401;
extern T0* ge807ov12068;
extern T0* ge807ov11905;
extern T0* ge807ov11834;
extern T0* ge807ov11973;
extern T0* ge807ov11888;
extern T0* ge1017ov27959;
extern T0* ge1017ov27683;
extern T0* ge1017ov27518;
extern T0* ge807ov11934;
extern T0* ge807ov11877;
extern T0* ge1017ov27814;
extern T0* ge1017ov27600;
extern T0* ge1017ov27373;
extern T0* ge1017ov27815;
extern T0* ge1017ov27374;
extern T0* ge1017ov27806;
extern T0* ge1017ov27597;
extern T0* ge1017ov27365;
extern T0* ge1017ov27817;
extern T0* ge1017ov27376;
extern T0* ge1017ov27816;
extern T0* ge1017ov27375;
extern T0* ge1017ov27813;
extern T0* ge1017ov27599;
extern T0* ge1017ov27372;
extern T0* ge1017ov27778;
extern T0* ge1017ov27585;
extern T0* ge1017ov27337;
extern T0* ge1017ov27777;
extern T0* ge1017ov27584;
extern T0* ge1017ov27336;
extern T0* ge1017ov27776;
extern T0* ge1017ov27583;
extern T0* ge1017ov27335;
extern T0* ge1017ov27775;
extern T0* ge1017ov27582;
extern T0* ge1017ov27334;
extern T0* ge1017ov27774;
extern T0* ge1017ov27333;
extern T0* ge1017ov27706;
extern T0* ge1017ov27552;
extern T0* ge1017ov27265;
extern T0* ge1017ov27704;
extern T0* ge1017ov27551;
extern T0* ge1017ov27263;
extern T0* ge1017ov27784;
extern T0* ge1017ov27586;
extern T0* ge1017ov27343;
extern T0* ge1017ov27781;
extern T0* ge1017ov27340;
extern T0* ge1017ov27792;
extern T0* ge1017ov27588;
extern T0* ge1017ov27351;
extern T0* ge1017ov27788;
extern T0* ge1017ov27587;
extern T0* ge1017ov27347;
extern T0* ge1017ov27785;
extern T0* ge1017ov27344;
extern T0* ge1017ov27782;
extern T0* ge1017ov27341;
extern T0* ge1017ov27793;
extern T0* ge1017ov27352;
extern T0* ge1017ov27789;
extern T0* ge1017ov27348;
extern T0* ge1017ov27786;
extern T0* ge1017ov27345;
extern T0* ge1017ov27783;
extern T0* ge1017ov27342;
extern T0* ge1017ov27794;
extern T0* ge1017ov27353;
extern T0* ge1017ov27790;
extern T0* ge1017ov27349;
extern T0* ge1017ov27904;
extern T0* ge1017ov27648;
extern T0* ge1017ov27463;
extern T0* ge1017ov27800;
extern T0* ge1017ov27592;
extern T0* ge1017ov27359;
extern T0* ge1017ov27799;
extern T0* ge1017ov27358;
extern T0* ge1017ov27780;
extern T0* ge1017ov27339;
extern T0* ge1017ov27779;
extern T0* ge1017ov27338;
extern T0* ge1017ov27791;
extern T0* ge1017ov27350;
extern T0* ge1017ov27787;
extern T0* ge1017ov27346;
extern T0* ge1017ov27798;
extern T0* ge1017ov27591;
extern T0* ge1017ov27357;
extern T0* ge1017ov27797;
extern T0* ge1017ov27590;
extern T0* ge1017ov27356;
extern T0* ge1017ov27796;
extern T0* ge1017ov27589;
extern T0* ge1017ov27355;
extern T0* ge1017ov27893;
extern T0* ge1017ov27642;
extern T0* ge1017ov27452;
extern T0* ge1017ov27891;
extern T0* ge1017ov27641;
extern T0* ge1017ov27450;
extern T0* ge1017ov27719;
extern T0* ge1017ov27557;
extern T0* ge1017ov27278;
extern T0* ge1017ov27846;
extern T0* ge1017ov27617;
extern T0* ge1017ov27405;
extern T0* ge1017ov27718;
extern T0* ge1017ov27277;
extern T0* ge1017ov27845;
extern T0* ge1017ov27404;
extern T0* ge1017ov27844;
extern T0* ge1017ov27403;
extern T0* ge1017ov27749;
extern T0* ge1017ov27572;
extern T0* ge1017ov27308;
extern T0* ge1017ov27747;
extern T0* ge1017ov27570;
extern T0* ge1017ov27306;
extern T0* ge1017ov27746;
extern T0* ge1017ov27305;
extern T0* ge1017ov27753;
extern T0* ge1017ov27574;
extern T0* ge1017ov27312;
extern T0* ge1017ov27752;
extern T0* ge1017ov27311;
extern T0* ge1017ov27754;
extern T0* ge1017ov27575;
extern T0* ge1017ov27313;
extern T0* ge1017ov27828;
extern T0* ge1017ov27606;
extern T0* ge1017ov27387;
extern T0* ge1017ov27827;
extern T0* ge1017ov27386;
extern T0* ge1017ov27795;
extern T0* ge1017ov27354;
extern T0* ge1017ov27826;
extern T0* ge1017ov27385;
extern T0* ge1017ov27825;
extern T0* ge1017ov27384;
extern T0* ge1017ov27829;
extern T0* ge1017ov27607;
extern T0* ge1017ov27388;
extern T0* ge1017ov27735;
extern T0* ge1017ov27564;
extern T0* ge1017ov27294;
extern T0* ge1017ov27734;
extern T0* ge1017ov27293;
extern T0* ge1017ov27740;
extern T0* ge1017ov27299;
extern T0* ge1017ov27737;
extern T0* ge1017ov27565;
extern T0* ge1017ov27296;
extern T0* ge1017ov27738;
extern T0* ge1017ov27297;
extern T0* ge1017ov27843;
extern T0* ge1017ov27402;
extern T0* ge1017ov27736;
extern T0* ge1017ov27295;
extern T0* ge1017ov27750;
extern T0* ge1017ov27309;
extern T0* ge1017ov27739;
extern T0* ge1017ov27566;
extern T0* ge1017ov27298;
extern T0* ge1017ov27744;
extern T0* ge1017ov27568;
extern T0* ge1017ov27303;
extern T0* ge1017ov27742;
extern T0* ge1017ov27301;
extern T0* ge1017ov27743;
extern T0* ge1017ov27302;
extern T0* ge1017ov27851;
extern T0* ge1017ov27621;
extern T0* ge1017ov27410;
extern T0* ge1017ov27820;
extern T0* ge1017ov27593;
extern T0* ge1017ov27379;
extern T0* ge1017ov27714;
extern T0* ge1017ov27555;
extern T0* ge1017ov27273;
extern T0* ge1017ov27712;
extern T0* ge1017ov27271;
extern T0* ge1017ov27708;
extern T0* ge1017ov27554;
extern T0* ge1017ov27267;
extern T0* ge1017ov27707;
extern T0* ge1017ov27553;
extern T0* ge1017ov27266;
extern T0* ge1017ov27949;
extern T0* ge1017ov27672;
extern T0* ge1017ov27508;
extern T0* ge1017ov27952;
extern T0* ge1017ov27676;
extern T0* ge1017ov27511;
extern T0* ge1017ov27909;
extern T0* ge1017ov27651;
extern T0* ge1017ov27468;
extern T0* ge1017ov27951;
extern T0* ge1017ov27675;
extern T0* ge1017ov27510;
extern T0* ge1017ov27819;
extern T0* ge1017ov27602;
extern T0* ge1017ov27378;
extern T0* ge1017ov27821;
extern T0* ge1017ov27380;
extern T0* ge1006ov36466;
extern T0* ge1006ov36461;
extern T0* ge1006ov36456;
extern T0* ge1006ov36467;
extern T0* ge1006ov36462;
extern T0* ge1006ov36457;
extern T0* ge1006ov36465;
extern T0* ge1006ov36460;
extern T0* ge1006ov36455;
extern T0* ge1017ov27962;
extern T0* ge1017ov27685;
extern T0* ge1017ov27521;
extern T0* ge807ov12063;
extern T0* ge807ov12108;
extern T0* ge807ov12062;
extern T0* ge807ov12059;
extern T0* ge807ov12123;
extern T0* ge807ov12107;
extern T0* ge807ov12082;
extern T0* ge807ov12109;
extern T0* ge807ov12124;
extern T0* ge807ov12066;
extern T0* ge807ov12111;
extern T0* ge807ov12078;
extern T0* ge807ov12081;
extern T0* ge807ov12131;
extern T0* ge807ov12072;
extern T0* ge807ov12103;
extern T0* ge807ov12091;
extern T0* ge807ov12117;
extern T0* ge807ov12071;
extern T0* ge807ov12129;
extern T0* ge807ov12099;
extern T0* ge807ov12085;
extern T0* ge807ov12116;
extern T0* ge1014ov36474;
extern T0* ge1014ov36473;
extern T0* ge807ov12102;
extern T0* ge807ov12064;
extern T0* ge807ov12096;
extern T0* ge807ov12112;
extern T0* ge807ov12100;
extern T0* ge807ov12127;
extern T0* ge807ov12090;
extern T0* ge807ov12074;
extern T0* ge807ov12076;
extern T0* ge807ov12113;
extern T0* ge807ov12065;
extern T0* ge807ov12087;
extern T0* ge807ov12115;
extern T0* ge1017ov27961;
extern T0* ge1017ov27520;
extern T0* ge1029ov22293;
extern T0* ge807ov12182;
extern T0* ge807ov12188;
extern T0* ge807ov12189;
extern T0* ge807ov12191;
extern T0* ge807ov12193;
extern T0* ge807ov12194;
extern T0* ge807ov12196;
extern T0* ge807ov12197;
extern T0* ge807ov12244;
extern T0* ge807ov12245;
extern T0* ge807ov12246;
extern T0* ge807ov11784;
extern T0* ge807ov11790;
extern T0* ge807ov11795;
extern T0* ge807ov11797;
extern T0* ge807ov11803;
extern T0* ge807ov11807;
extern T0* ge807ov11815;
extern T0* ge807ov11835;
extern T0* ge807ov11837;
extern T0* ge807ov11842;
extern T0* ge807ov11843;
extern T0* ge807ov11844;
extern T0* ge807ov11845;
extern T0* ge807ov11838;
extern T0* ge807ov11839;
extern T0* ge807ov11840;
extern T0* ge807ov11841;
extern T0* ge807ov11846;
extern T0* ge807ov11847;
extern T0* ge807ov11848;
extern T0* ge807ov11849;
extern T0* ge807ov11850;
extern T0* ge807ov11851;
extern T0* ge807ov11852;
extern T0* ge807ov11853;
extern T0* ge807ov11854;
extern T0* ge807ov11856;
extern T0* ge807ov11855;
extern T0* ge807ov11857;
extern T0* ge807ov11860;
extern T0* ge807ov11861;
extern T0* ge807ov11862;
extern T0* ge807ov11863;
extern T0* ge807ov11864;
extern T0* ge807ov11865;
extern T0* ge807ov11866;
extern T0* ge807ov11867;
extern T0* ge807ov11868;
extern T0* ge807ov11869;
extern T0* ge807ov11870;
extern T0* ge807ov11871;
extern T0* ge807ov11873;
extern T0* ge807ov11874;
extern T0* ge807ov11875;
extern T0* ge807ov11876;
extern T0* ge807ov11879;
extern T0* ge807ov11880;
extern T0* ge807ov11881;
extern T0* ge807ov11882;
extern T0* ge807ov11884;
extern T0* ge807ov11885;
extern T0* ge807ov11886;
extern T0* ge807ov11887;
extern T0* ge807ov11889;
extern T0* ge807ov11890;
extern T0* ge807ov11891;
extern T0* ge807ov11892;
extern T0* ge807ov11893;
extern T0* ge807ov11894;
extern T0* ge807ov11895;
extern T0* ge807ov11896;
extern T0* ge807ov11897;
extern T0* ge807ov11898;
extern T0* ge807ov11899;
extern T0* ge807ov11900;
extern T0* ge807ov11901;
extern T0* ge807ov11902;
extern T0* ge807ov11903;
extern T0* ge807ov11904;
extern T0* ge807ov11906;
extern T0* ge807ov11907;
extern T0* ge807ov11908;
extern T0* ge807ov11909;
extern T0* ge807ov11910;
extern T0* ge807ov11911;
extern T0* ge807ov11912;
extern T0* ge807ov11913;
extern T0* ge807ov11914;
extern T0* ge807ov11915;
extern T0* ge807ov11916;
extern T0* ge807ov11917;
extern T0* ge807ov11919;
extern T0* ge807ov11920;
extern T0* ge807ov11921;
extern T0* ge807ov11922;
extern T0* ge807ov11923;
extern T0* ge807ov11924;
extern T0* ge807ov11925;
extern T0* ge807ov11926;
extern T0* ge807ov11927;
extern T0* ge807ov11928;
extern T0* ge807ov11929;
extern T0* ge807ov11930;
extern T0* ge807ov11931;
extern T0* ge807ov11932;
extern T0* ge807ov11933;
extern T0* ge807ov11935;
extern T0* ge807ov11936;
extern T0* ge807ov11937;
extern T0* ge807ov11938;
extern T0* ge807ov11939;
extern T0* ge807ov11940;
extern T0* ge807ov11941;
extern T0* ge807ov11942;
extern T0* ge807ov11943;
extern T0* ge807ov11944;
extern T0* ge807ov11946;
extern T0* ge807ov11947;
extern T0* ge807ov11948;
extern T0* ge807ov11949;
extern T0* ge807ov11950;
extern T0* ge807ov11952;
extern T0* ge807ov11953;
extern T0* ge807ov11954;
extern T0* ge807ov11956;
extern T0* ge807ov11957;
extern T0* ge807ov11958;
extern T0* ge807ov11959;
extern T0* ge807ov11960;
extern T0* ge807ov11961;
extern T0* ge807ov11962;
extern T0* ge807ov11963;
extern T0* ge807ov11964;
extern T0* ge807ov11965;
extern T0* ge807ov11966;
extern T0* ge807ov11967;
extern T0* ge807ov11968;
extern T0* ge807ov11969;
extern T0* ge807ov11970;
extern T0* ge807ov11971;
extern T0* ge807ov11972;
extern T0* ge807ov11974;
extern T0* ge807ov11975;
extern T0* ge807ov11976;
extern T0* ge807ov11977;
extern T0* ge807ov11978;
extern T0* ge807ov11979;
extern T0* ge807ov11980;
extern T0* ge807ov11982;
extern T0* ge807ov11983;
extern T0* ge807ov11984;
extern T0* ge807ov11985;
extern T0* ge807ov11986;
extern T0* ge807ov11987;
extern T0* ge807ov11988;
extern T0* ge807ov11989;
extern T0* ge807ov11990;
extern T0* ge807ov11991;
extern T0* ge807ov11992;
extern T0* ge807ov11993;
extern T0* ge807ov11994;
extern T0* ge807ov11995;
extern T0* ge807ov11996;
extern T0* ge807ov11997;
extern T0* ge807ov11998;
extern T0* ge807ov11999;
extern T0* ge807ov12000;
extern T0* ge807ov12001;
extern T0* ge807ov12002;
extern T0* ge807ov12003;
extern T0* ge807ov12004;
extern T0* ge807ov12005;
extern T0* ge807ov12006;
extern T0* ge807ov12007;
extern T0* ge807ov12008;
extern T0* ge807ov12009;
extern T0* ge807ov12010;
extern T0* ge807ov12011;
extern T0* ge807ov12012;
extern T0* ge807ov12013;
extern T0* ge807ov12014;
extern T0* ge807ov12015;
extern T0* ge807ov12017;
extern T0* ge807ov12018;
extern T0* ge807ov12019;
extern T0* ge807ov12020;
extern T0* ge807ov12021;
extern T0* ge807ov12022;
extern T0* ge807ov12023;
extern T0* ge807ov12024;
extern T0* ge807ov12025;
extern T0* ge807ov12026;
extern T0* ge807ov12027;
extern T0* ge807ov12028;
extern T0* ge807ov12029;
extern T0* ge807ov12030;
extern T0* ge807ov12031;
extern T0* ge807ov12032;
extern T0* ge807ov12033;
extern T0* ge807ov12034;
extern T0* ge807ov12035;
extern T0* ge807ov12036;
extern T0* ge807ov12037;
extern T0* ge807ov12038;
extern T0* ge807ov12039;
extern T0* ge807ov12040;
extern T0* ge807ov12041;
extern T0* ge807ov12043;
extern T0* ge807ov12044;
extern T0* ge807ov12045;
extern T0* ge807ov12046;
extern T0* ge807ov12047;
extern T0* ge807ov12048;
extern T0* ge807ov12049;
extern T0* ge807ov12050;
extern T0* ge807ov12051;
extern T0* ge807ov12052;
extern T0* ge807ov12054;
extern T0* ge807ov12056;
extern T0* ge807ov12057;
extern T0* ge807ov12060;
extern T0* ge807ov12061;
extern T0* ge807ov12069;
extern T0* ge807ov12077;
extern T0* ge807ov12083;
extern T0* ge807ov12086;
extern T0* ge807ov12088;
extern T0* ge807ov12089;
extern T0* ge807ov12092;
extern T0* ge807ov12093;
extern T0* ge807ov12094;
extern T0* ge807ov12095;
extern T0* ge807ov12098;
extern T0* ge807ov12104;
extern T0* ge807ov12105;
extern T0* ge807ov12106;
extern T0* ge807ov12114;
extern T0* ge807ov12118;
extern T0* ge807ov12119;
extern T0* ge807ov12120;
extern T0* ge807ov12121;
extern T0* ge807ov12122;
extern T0* ge807ov12125;
extern T0* ge807ov12126;
extern T0* ge807ov12128;
extern T0* ge807ov12130;
extern T0* ge807ov12132;
extern T0* ge807ov12146;
extern T0* ge807ov12147;
extern T0* ge807ov12148;
extern T0* ge807ov12149;
extern T0* ge807ov12150;
extern T0* ge807ov12151;
extern T0* ge807ov12152;
extern T0* ge807ov12153;
extern T0* ge807ov12154;
extern T0* ge807ov12155;
extern T0* ge807ov12156;
extern T0* ge807ov12157;
extern T0* ge807ov12158;
extern T0* ge807ov12159;
extern T0* ge807ov12160;
extern T0* ge807ov12161;
extern T0* ge807ov12162;
extern T0* ge807ov12163;
extern T0* ge807ov12164;
extern T0* ge807ov12165;
extern T0* ge807ov12166;
extern T0* ge807ov12167;
extern T0* ge807ov12168;
extern T0* ge807ov12169;
extern T0* ge807ov12171;
extern T0* ge807ov12172;
extern T0* ge807ov12173;
extern T0* ge807ov12174;
extern T0* ge807ov12175;
extern T0* ge807ov12176;
extern T0* ge807ov12177;
extern T0* ge807ov12178;
extern T0* ge807ov12179;
extern T0* ge807ov12180;
extern T0* ge228ov15594;
extern T0* ge1029ov22321;
extern T0* ge1017ov27921;
extern T0* ge1017ov27658;
extern T0* ge1017ov27480;
extern T0* ge1017ov27838;
extern T0* ge1017ov27612;
extern T0* ge1017ov27397;
extern T0* ge1017ov27919;
extern T0* ge1017ov27656;
extern T0* ge1017ov27478;
extern T0* ge1017ov27918;
extern T0* ge1017ov27477;
extern T0* ge1017ov27729;
extern T0* ge1017ov27562;
extern T0* ge1017ov27288;
extern T0* ge1017ov27916;
extern T0* ge1017ov27655;
extern T0* ge1017ov27475;
extern T0* ge1017ov27915;
extern T0* ge1017ov27474;
extern T0* ge1017ov27728;
extern T0* ge1017ov27561;
extern T0* ge1017ov27287;
extern T0* ge1017ov27699;
extern T0* ge1017ov27547;
extern T0* ge1017ov27258;
extern T0* ge1017ov27837;
extern T0* ge1017ov27396;
extern T0* ge1017ov27835;
extern T0* ge1017ov27611;
extern T0* ge1017ov27394;
extern T0* ge1017ov27700;
extern T0* ge1017ov27259;
extern T0* ge1017ov27923;
extern T0* ge1017ov27659;
extern T0* ge1017ov27482;
extern T0* ge1017ov27934;
extern T0* ge1017ov27663;
extern T0* ge1017ov27493;
extern T0* ge1017ov27974;
extern T0* ge1017ov27690;
extern T0* ge1017ov27533;
extern T0* ge1017ov27972;
extern T0* ge1017ov27531;
extern T0* ge1017ov27973;
extern T0* ge1017ov27532;
extern T0* ge1017ov27969;
extern T0* ge1017ov27688;
extern T0* ge1017ov27528;
extern T0* ge1017ov27967;
extern T0* ge1017ov27526;
extern T0* ge1017ov27968;
extern T0* ge1017ov27527;
extern T0* ge1017ov27970;
extern T0* ge1017ov27689;
extern T0* ge1017ov27529;
extern T0* ge1017ov27971;
extern T0* ge1017ov27530;
extern T0* ge1017ov27965;
extern T0* ge1017ov27687;
extern T0* ge1017ov27524;
extern T0* ge1017ov27966;
extern T0* ge1017ov27525;
extern T0* ge1017ov27836;
extern T0* ge1017ov27395;
extern T0* ge1017ov27984;
extern T0* ge1017ov27694;
extern T0* ge1017ov27543;
extern T0* ge1017ov27982;
extern T0* ge1017ov27541;
extern T0* ge1017ov27983;
extern T0* ge1017ov27542;
extern T0* ge1017ov27979;
extern T0* ge1017ov27692;
extern T0* ge1017ov27538;
extern T0* ge1017ov27977;
extern T0* ge1017ov27536;
extern T0* ge1017ov27978;
extern T0* ge1017ov27537;
extern T0* ge1017ov27980;
extern T0* ge1017ov27693;
extern T0* ge1017ov27539;
extern T0* ge1017ov27981;
extern T0* ge1017ov27540;
extern T0* ge1017ov27975;
extern T0* ge1017ov27691;
extern T0* ge1017ov27534;
extern T0* ge1017ov27976;
extern T0* ge1017ov27535;
extern T0* ge1017ov27768;
extern T0* ge1017ov27580;
extern T0* ge1017ov27327;
extern T0* ge1017ov27767;
extern T0* ge1017ov27326;
extern T0* ge1017ov27766;
extern T0* ge1017ov27579;
extern T0* ge1017ov27325;
extern T0* ge1017ov27765;
extern T0* ge1017ov27324;
extern T0* ge1017ov27769;
extern T0* ge1017ov27581;
extern T0* ge1017ov27328;
extern T0* ge1017ov27760;
extern T0* ge1017ov27578;
extern T0* ge1017ov27319;
extern T0* ge1017ov27762;
extern T0* ge1017ov27321;
extern T0* ge1017ov27922;
extern T0* ge1017ov27481;
extern T0* ge1017ov27917;
extern T0* ge1017ov27476;
extern T0* ge1017ov27935;
extern T0* ge1017ov27494;
extern T0* ge1017ov27770;
extern T0* ge1017ov27329;
extern T0* ge1017ov27758;
extern T0* ge1017ov27317;
extern T0* ge1017ov27764;
extern T0* ge1017ov27323;
extern T0* ge1017ov27761;
extern T0* ge1017ov27320;
extern T0* ge1017ov27759;
extern T0* ge1017ov27318;
extern T0* ge1017ov27907;
extern T0* ge1017ov27650;
extern T0* ge1017ov27466;
extern T0* ge1017ov27908;
extern T0* ge1017ov27467;
extern T0* ge1017ov27895;
extern T0* ge1017ov27643;
extern T0* ge1017ov27454;
extern T0* ge1017ov27896;
extern T0* ge1017ov27644;
extern T0* ge1017ov27455;
extern T0* ge1017ov27892;
extern T0* ge1017ov27451;
extern T0* ge1017ov27930;
extern T0* ge1017ov27661;
extern T0* ge1017ov27489;
extern T0* ge1018ov8420;
extern T0* ge1018ov8511;
extern T0* ge1018ov8496;
extern T0* ge1018ov8468;
extern T0* ge1018ov8509;
extern T0* ge1018ov8506;
extern T0* ge1018ov8480;
extern T0* ge1018ov8470;
extern T0* ge1018ov8429;
extern T0* ge1018ov8469;
extern T0* ge1018ov8498;
extern T0* ge1018ov8489;
extern T0* ge1018ov8513;
extern T0* ge1017ov27929;
extern T0* ge1017ov27660;
extern T0* ge1017ov27488;
extern T0* ge1017ov27933;
extern T0* ge1017ov27662;
extern T0* ge1017ov27492;
extern T0* ge1017ov27932;
extern T0* ge1017ov27491;
extern T0* ge1017ov27928;
extern T0* ge1017ov27487;
extern T0* ge1017ov27927;
extern T0* ge1017ov27486;
extern T0* ge1017ov27926;
extern T0* ge1017ov27485;
extern T0* ge1017ov27925;
extern T0* ge1017ov27484;
extern T0* ge1017ov27924;
extern T0* ge1017ov27483;
extern T0* ge1017ov27944;
extern T0* ge1017ov27668;
extern T0* ge1017ov27503;
extern T0* ge1017ov27701;
extern T0* ge1017ov27548;
extern T0* ge1017ov27260;
extern T0* ge1017ov27857;
extern T0* ge1017ov27623;
extern T0* ge1017ov27416;
extern T0* ge1017ov27856;
extern T0* ge1017ov27415;
extern T0* ge1017ov27855;
extern T0* ge1017ov27414;
extern T0* ge1017ov27854;
extern T0* ge1017ov27413;
extern T0* ge1017ov27853;
extern T0* ge1017ov27412;
extern T0* ge1017ov27852;
extern T0* ge1017ov27622;
extern T0* ge1017ov27411;
extern T0* ge1018ov8514;
extern T0* ge1017ov27862;
extern T0* ge1017ov27626;
extern T0* ge1017ov27421;
extern T0* ge1017ov27869;
extern T0* ge1017ov27630;
extern T0* ge1017ov27428;
extern T0* ge1017ov27868;
extern T0* ge1017ov27427;
extern T0* ge1017ov27867;
extern T0* ge1017ov27629;
extern T0* ge1017ov27426;
extern T0* ge1017ov27866;
extern T0* ge1017ov27425;
extern T0* ge1017ov27865;
extern T0* ge1017ov27628;
extern T0* ge1017ov27424;
extern T0* ge1017ov27864;
extern T0* ge1017ov27423;
extern T0* ge1017ov27863;
extern T0* ge1017ov27627;
extern T0* ge1017ov27422;
extern T0* ge1017ov27861;
extern T0* ge1017ov27420;
extern T0* ge1017ov27947;
extern T0* ge1017ov27670;
extern T0* ge1017ov27506;
extern T0* ge1017ov27945;
extern T0* ge1017ov27669;
extern T0* ge1017ov27504;
extern T0* ge1017ov27943;
extern T0* ge1017ov27502;
extern T0* ge1018ov8447;
extern T0* ge1017ov27985;
extern T0* ge1017ov27695;
extern T0* ge1017ov27544;
extern T0* ge1017ov27941;
extern T0* ge1017ov27500;
extern T0* ge1018ov8437;
extern T0* ge1018ov8438;
extern T0* ge1018ov8439;
extern T0* ge1018ov8440;
extern T0* ge1018ov8445;
extern T0* ge1018ov8446;
extern T0* ge1018ov8448;
extern T0* ge1017ov27942;
extern T0* ge1017ov27501;
extern T0* ge1017ov27771;
extern T0* ge1017ov27330;
extern T0* ge1017ov27937;
extern T0* ge1017ov27665;
extern T0* ge1017ov27496;
extern T0* ge801ov37272;
extern T0* ge801ov37271;
extern T0* ge1017ov27936;
extern T0* ge1017ov27664;
extern T0* ge1017ov27495;
extern T0* ge801ov37273;
extern T0* ge1017ov27954;
extern T0* ge1017ov27678;
extern T0* ge1017ov27513;
extern T0* ge1017ov27953;
extern T0* ge1017ov27677;
extern T0* ge1017ov27512;
extern T0* ge807ov12110;
extern T0* ge807ov12067;
extern T0* ge1018ov8431;
extern T0* ge1018ov8382;
extern T0* ge1018ov8370;
extern T0* ge1018ov8394;
extern T0* ge1017ov27905;
extern T0* ge1017ov27464;
extern T0* ge1017ov27901;
extern T0* ge1017ov27647;
extern T0* ge1017ov27460;
extern T0* ge1017ov27902;
extern T0* ge1017ov27461;
extern T0* ge1017ov27709;
extern T0* ge1017ov27268;
extern T0* ge1017ov27822;
extern T0* ge1017ov27603;
extern T0* ge1017ov27381;
extern T0* ge1017ov27903;
extern T0* ge1017ov27462;
extern T0* ge1017ov27724;
extern T0* ge1017ov27560;
extern T0* ge1017ov27283;
extern T0* ge1017ov27723;
extern T0* ge1017ov27282;
extern T0* ge1017ov27722;
extern T0* ge1017ov27559;
extern T0* ge1017ov27281;
extern T0* ge1017ov27726;
extern T0* ge1017ov27285;
extern T0* ge1017ov27727;
extern T0* ge1017ov27286;
extern T0* ge1017ov27721;
extern T0* ge1017ov27558;
extern T0* ge1017ov27280;
extern T0* ge1017ov27920;
extern T0* ge1017ov27657;
extern T0* ge1017ov27479;
extern T0* ge1017ov27698;
extern T0* ge1017ov27546;
extern T0* ge1017ov27257;
extern T0* ge1017ov27772;
extern T0* ge1017ov27331;
extern T0* ge1017ov27877;
extern T0* ge1017ov27631;
extern T0* ge1017ov27436;
extern T0* ge1017ov27875;
extern T0* ge1017ov27434;
extern T0* ge1017ov27873;
extern T0* ge1017ov27432;
extern T0* ge1017ov27872;
extern T0* ge1017ov27431;
extern T0* ge1017ov27898;
extern T0* ge1017ov27645;
extern T0* ge1017ov27457;
extern T0* ge1017ov27900;
extern T0* ge1017ov27646;
extern T0* ge1017ov27459;
extern T0* ge1017ov27890;
extern T0* ge1017ov27640;
extern T0* ge1017ov27449;
extern T0* ge1017ov27931;
extern T0* ge1017ov27490;
extern T0* ge1017ov27876;
extern T0* ge1017ov27435;
extern T0* ge1017ov27874;
extern T0* ge1017ov27433;
extern T0* ge1017ov27871;
extern T0* ge1017ov27430;
extern T0* ge1017ov27870;
extern T0* ge1017ov27429;
extern T0* ge1017ov27894;
extern T0* ge1017ov27453;
extern T0* ge1017ov27889;
extern T0* ge1017ov27448;
extern T0* ge1017ov27878;
extern T0* ge1017ov27632;
extern T0* ge1017ov27437;
extern T0* ge1017ov27879;
extern T0* ge1017ov27438;
extern T0* ge1017ov27910;
extern T0* ge1017ov27469;
extern T0* ge1017ov27713;
extern T0* ge1017ov27272;
extern T0* ge1017ov27711;
extern T0* ge1017ov27270;
extern T0* ge1017ov27710;
extern T0* ge1017ov27269;
extern T0* ge1017ov27906;
extern T0* ge1017ov27649;
extern T0* ge1017ov27465;
extern T0* ge1017ov27963;
extern T0* ge1017ov27686;
extern T0* ge1017ov27522;
extern T0* ge1017ov27964;
extern T0* ge1017ov27523;
extern T0* ge1017ov27914;
extern T0* ge1017ov27654;
extern T0* ge1017ov27473;
extern T0* ge1017ov27913;
extern T0* ge1017ov27653;
extern T0* ge1017ov27472;
extern T0* ge1017ov27950;
extern T0* ge1017ov27674;
extern T0* ge1017ov27509;
extern T0* ge1017ov27940;
extern T0* ge1017ov27667;
extern T0* ge1017ov27499;
extern T0* ge1017ov27939;
extern T0* ge1017ov27498;
extern T0* ge1017ov27808;
extern T0* ge1017ov27367;
extern T0* ge1017ov27811;
extern T0* ge1017ov27598;
extern T0* ge1017ov27370;
extern T0* ge1017ov27801;
extern T0* ge1017ov27594;
extern T0* ge1017ov27360;
extern T0* ge1017ov27804;
extern T0* ge1017ov27596;
extern T0* ge1017ov27363;
extern T0* ge1017ov27807;
extern T0* ge1017ov27366;
extern T0* ge1017ov27773;
extern T0* ge1017ov27332;
extern T0* ge1017ov27885;
extern T0* ge1017ov27637;
extern T0* ge1017ov27444;
extern T0* ge1017ov27884;
extern T0* ge1017ov27636;
extern T0* ge1017ov27443;
extern T0* ge1017ov27882;
extern T0* ge1017ov27635;
extern T0* ge1017ov27441;
extern T0* ge1017ov27883;
extern T0* ge1017ov27442;
extern T0* ge1017ov27881;
extern T0* ge1017ov27634;
extern T0* ge1017ov27440;
extern T0* ge1017ov27880;
extern T0* ge1017ov27633;
extern T0* ge1017ov27439;
extern T0* ge1017ov27886;
extern T0* ge1017ov27639;
extern T0* ge1017ov27445;
extern T0* ge66ov36970;
extern T0* ge1006ov36464;
extern T0* ge1006ov36459;
extern T0* ge1006ov36454;
extern T0* ge1017ov27948;
extern T0* ge1017ov27671;
extern T0* ge1017ov27507;
extern T0* ge1018ov8393;
extern T0* ge1018ov8395;
extern T0* ge1018ov8475;
extern T0* ge1018ov8428;
extern T0* ge1017ov27859;
extern T0* ge1017ov27625;
extern T0* ge1017ov27418;
extern T0* ge1017ov27860;
extern T0* ge1017ov27419;
extern T0* ge1017ov27858;
extern T0* ge1017ov27624;
extern T0* ge1017ov27417;
extern T0* ge1018ov8432;
extern T0* ge1017ov27702;
extern T0* ge1017ov27549;
extern T0* ge1017ov27261;
extern T0* ge1017ov27703;
extern T0* ge1017ov27550;
extern T0* ge1017ov27262;
extern T0* ge1017ov27830;
extern T0* ge1017ov27608;
extern T0* ge1017ov27389;
extern T0* ge1017ov27756;
extern T0* ge1017ov27577;
extern T0* ge1017ov27315;
extern T0* ge1017ov27757;
extern T0* ge1017ov27316;
extern T0* ge1017ov27832;
extern T0* ge1017ov27609;
extern T0* ge1017ov27391;
extern T0* ge1017ov27833;
extern T0* ge1017ov27392;
extern T0* ge1017ov27831;
extern T0* ge1017ov27390;
extern T0* ge1017ov27834;
extern T0* ge1017ov27610;
extern T0* ge1017ov27393;
extern T0* ge1017ov27810;
extern T0* ge1017ov27369;
extern T0* ge1017ov27812;
extern T0* ge1017ov27371;
extern T0* ge1017ov27802;
extern T0* ge1017ov27361;
extern T0* ge1017ov27805;
extern T0* ge1017ov27364;
extern T0* ge1017ov27803;
extern T0* ge1017ov27595;
extern T0* ge1017ov27362;
extern T0* ge1017ov27809;
extern T0* ge1017ov27368;
extern T0* ge1017ov27720;
extern T0* ge1017ov27279;
extern T0* ge1217ov28149;
extern T0* ge1217ov28148;
extern T0* ge351ov12641;
extern T0* ge264ov12641;
extern T0* ge251ov12641;
extern T0* ge7ov4923;
extern T0* ge7ov4924;
extern T0* ge7ov4925;
extern T0* ge1016ov37644;
extern T0* ge1016ov37640;
extern T0* ge1016ov37639;
extern T0* ge1016ov37643;
extern T0* ge1016ov37638;
extern T0* ge1016ov37642;
extern T0* ge1016ov37637;
extern T0* ge1016ov37641;
extern T0* ge1016ov37636;
extern T0* ge807ov12170;
extern T0* ge807ov12181;
extern T0* ge811ov29537;
extern T0* ge807ov12242;
extern T0* ge807ov12243;
extern T0* ge807ov12223;
extern T0* ge807ov12239;
extern T0* ge807ov12227;
extern T0* ge807ov12228;
extern T0* ge807ov12229;
extern T0* ge807ov12230;
extern T0* ge807ov12224;
extern T0* ge807ov12231;
extern T0* ge807ov12232;
extern T0* ge807ov12233;
extern T0* ge807ov12234;
extern T0* ge807ov12225;
extern T0* ge807ov12240;
extern T0* ge807ov12235;
extern T0* ge807ov12236;
extern T0* ge807ov12237;
extern T0* ge807ov12226;
extern T0* ge807ov12238;
extern T0* ge807ov12241;
extern T0* ge1285ov30142;
extern T0* ge1285ov30144;
extern T0* ge713ov15576;
extern T0* ge713ov15577;
extern T0* ge807ov12219;
extern T0* ge807ov12218;
extern T0* ge807ov12206;
extern T0* ge807ov12207;
extern T0* ge807ov12208;
extern T0* ge807ov12209;
extern T0* ge807ov12210;
extern T0* ge807ov12211;
extern T0* ge807ov12212;
extern T0* ge807ov12213;
extern T0* ge807ov12214;
extern T0* ge807ov12215;
extern T0* ge807ov12216;
extern T0* ge807ov12217;
extern T0* ge807ov12221;
extern T0* ge807ov12222;
extern T0* ge807ov12202;
extern T0* ge807ov12203;
extern T0* ge807ov12204;
extern T0* ge807ov12205;
extern T0* ge807ov12220;
extern T0* ge832ov30649;
extern T0* ge832ov30648;
extern T0* ge807ov12136;
extern T0* ge807ov12137;
extern T0* ge807ov12135;
extern T0* ge807ov12133;
extern T0* ge807ov12134;
extern T0* ge807ov12141;
extern T0* ge807ov12142;
extern T0* ge807ov12140;
extern T0* ge807ov12138;
extern T0* ge807ov12139;
extern T0* ge807ov12143;
extern T0* ge807ov12144;
extern T0* ge807ov12145;
extern T0* ge851ov31999;
extern T0* ge839ov29444;
extern T0* ge51ov4874;
extern T0* ge37ov4874;
extern T0* ge43ov4874;
extern T0* ge42ov4874;
extern T0* ge41ov4874;
extern T0* ge32ov4874;
extern T0* ge31ov4874;
extern T0* ge48ov4874;
extern T0* ge61ov4874;
extern T0* ge1136ov4874;
extern T0* ge169ov4874;
extern T0* ge168ov4874;
extern T0* ge1130ov4874;
extern T0* ge1146ov4874;
extern T0* ge1143ov4874;
extern T0* ge1142ov4874;
extern T0* ge1138ov4874;
extern T0* ge1145ov4874;
extern T0* ge1137ov4874;
extern T0* ge1149ov4874;
extern T0* ge1133ov4874;
extern T0* ge1144ov4874;
extern T0* ge1148ov4874;
extern T0* ge1140ov4874;
extern T0* ge1131ov4874;
extern T0* ge1139ov4874;
extern T0* ge163ov4874;
extern T0* ge166ov4874;
extern T0* ge173ov4874;
extern T0* ge162ov4874;
extern T0* ge261ov30520;
extern T0* ge248ov2434;
extern T0* geic2;
extern T0* geic3;
extern T0* geic4;
extern void GE_init_const1(void);
extern void GE_init_const2(void);
extern void GE_init_const3(void);
extern void GE_init_const4(void);
extern void GE_init_const5(void);
extern void GE_init_const6(void);
extern void GE_init_const7(void);
extern void GE_init_const8(void);
extern void GE_init_const9(void);
extern void GE_init_const10(void);
extern void GE_init_const11(void);
extern void GE_init_const12(void);
extern void GE_init_const13(void);
extern void GE_init_const14(void);
extern void GE_init_const15(void);
extern void GE_init_const16(void);
extern void GE_init_const17(void);
extern void GE_init_const18(void);
extern void GE_init_const19(void);
extern void GE_init_const20(void);
extern void GE_init_const(void);
extern EIF_TYPE GE_types[];

#ifdef __cplusplus
}
#endif


/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CECIL_H
#define EIF_CECIL_H

#ifdef __cplusplus
extern "C" {
#endif

typedef void (*EIF_PROCEDURE)(EIF_REFERENCE, ...);
#define EIF_PROC EIF_PROCEDURE
typedef EIF_INTEGER_32 (*EIF_INTEGER_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Integer 32 bits */
#define EIF_INTEGER_FUNCTION EIF_INTEGER_32_FUNCTION
typedef EIF_REFERENCE (*EIF_REFERENCE_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Reference */
typedef EIF_POINTER (*EIF_POINTER_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Pointer */
typedef EIF_BOOLEAN (*EIF_BOOLEAN_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Boolean */
typedef EIF_CHARACTER_8 (*EIF_CHARACTER_8_FUNCTION)(EIF_REFERENCE, ...); /* Returns char */
#define EIF_CHARACTER_FUNCTION EIF_CHARACTER_8_FUNCTION
typedef EIF_REAL_64 (*EIF_REAL_64_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Double */
#define EIF_DOUBLE_FUNCTION EIF_REAL_64_FUNCTION
typedef EIF_REAL_32 (*EIF_REAL_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Real */
#define EIF_REAL_FUNCTION EIF_REAL_32_FUNCTION

extern EIF_PROCEDURE eif_procedure(char* rout, EIF_TYPE_ID cid);
#define eif_proc eif_procedure /* Use `eif_procedure' instead */
extern EIF_INTEGER_FUNCTION eif_integer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REFERENCE_FUNCTION eif_reference_function(char* rout, EIF_TYPE_ID cid);
extern EIF_POINTER_FUNCTION eif_pointer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_BOOLEAN_FUNCTION eif_boolean_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REAL_64_FUNCTION eif_real_64_function(char* rout, EIF_TYPE_ID cid);
#define eif_double_function(rout,cid) eif_real_64_function((rout),(cid))
extern EIF_REAL_32_FUNCTION eif_real_32_function(char* rout, EIF_TYPE_ID cid);
#define eif_real_function(rout,cid) eif_real_32_function((rout),(cid))
extern EIF_CHARACTER_8_FUNCTION eif_character_8_function(char* rout, EIF_TYPE_ID cid);
#define eif_character_function(rout,cid) eif_character_8_function((rout),(cid))
extern EIF_OBJECT eif_create(EIF_TYPE_ID cid);
extern EIF_TYPE_ID eif_type_id(char* type_string);
extern EIF_INTEGER eifaddr_offset(EIF_REFERENCE object, char *name, int * const ret);
#define eif_string(s) RTMS(s)
#define makestr(s,c) RTMS_EX((s),(c))
#define eifaddr(object,name,ret) ((void *) ((char *) object + eifaddr_offset (object, name, ret)))
#define eif_field(object,name,type) *(type *)(eifaddr(object,name, NULL)) /* Obsolete. Use "eif_attribute" instead. */
#define eif_attribute(object,name,type,ret) *(type *)(eifaddr(object,name,ret)) /* Returns the attribute of an object. Return status in "ret".*/

/* Miscellaneous useful functions. */

/* Make an Eiffel array from a C array:
 * `eif_array' is the direct reference to the Eiffel array.
 * `c_array' is the C array.
 * `nelts' the number of elements to copy in the eiffel array, it has to
 * be equal to `eif_array.count'.
 * type is an Eiffel type.
 */
#define eif_make_from_c(eif_array, c_array, nelts, type) \
	{ \
		EIF_REFERENCE area = eif_field (eif_array, \
										"area", EIF_REFERENCE); \
		memcpy ((type *) area, c_array, nelts * sizeof (type));\
	}

#define eif_type eiftype /* Dynamic type ID */
extern EIF_TYPE_ID eiftype(EIF_OBJECT object); /* Give dynamic type of EIF_OBJECT. Obsolete, use "eif_type_by_object". */
extern EIF_TYPE_ID eif_type_by_reference (EIF_REFERENCE object);
extern EIF_TYPE_INDEX eif_gen_param_id(EIF_TYPE_INDEX dftype, uint32_t pos);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_PLUG_H
#define EIF_PLUG_H

#ifdef __cplusplus
extern "C" {
#endif

#ifndef EIF_THREADS
extern int nstcall;	/* Nested call global variable: signals a nested call and
					 * trigger an invariant check in generated C routines  */
#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXCEPTIONS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EXCEPT_H
#define EIF_EXCEPT_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif
#include <errno.h>

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define EN_VOID		GE_EX_VOID			/* Feature applied to void reference */
#define EN_MEM		GE_EX_MEM			/* No more memory */
#define EN_PRE		GE_EX_PRE			/* Pre-condition violated */
#define EN_POST		GE_EX_POST			/* Post-condition violated */
#define EN_FLOAT	GE_EX_FLOAT			/* Floating point exception (signal SIGFPE) */
#define EN_CINV		GE_EX_CINV			/* Class invariant violated */
#define EN_CHECK	GE_EX_CHECK			/* Assertion violated */
#define EN_FAIL		GE_EX_FAIL			/* Routine failure */
#define EN_WHEN		GE_EX_WHEN			/* Unmatched inspect value */
#define EN_VAR		GE_EX_VAR			/* Non-decreasing loop variant */
#define EN_LINV		GE_EX_LINV			/* Loop invariant violated */
#define EN_SIG		GE_EX_SIG			/* Operating system signal */
#define EN_BYE		GE_EX_BYE			/* Eiffel run-time panic */
#define EN_RESC		GE_EX_RESC			/* Exception in rescue clause */
#define EN_OMEM		GE_EX_OMEM			/* Out of memory (cannot be ignored) */
#define EN_RES		GE_EX_RES			/* Resumption failed (retry did not succeed) */
#define EN_CDEF		GE_EX_CDEF			/* Create on deferred */
#define EN_EXT		GE_EX_EXT			/* External event */
#define EN_VEXP		GE_EX_VEXP			/* Void assigned to expanded */
#define EN_HDLR		GE_EX_HDLR			/* Exception in signal handler */
#define EN_IO		GE_EX_IO			/* I/O error */
#define EN_SYS		GE_EX_SYS			/* Operating system error */
#define EN_RETR		GE_EX_RETR			/* Retrieval error */
#define EN_PROG		GE_EX_PROG			/* Developer exception */
#define EN_FATAL	GE_EX_FATAL			/* Eiffel run-time fatal error */
#define EN_DOL		GE_EX_DOL			/* $ applied to melted feature */
#define EN_ISE_IO	GE_EX_ISE_IO		/* I/O error raised by the ISE Eiffel runtime */
#define EN_COM		GE_EX_COM			/* COM error raised by EiffelCOM runtime */
#define EN_RT_CHECK	GE_EX_RT_CHECK		/* Runtime check error such as out-of-bound array access */
#define EN_OLD		GE_EX_OLD			/* Old violation */
#define EN_SEL		GE_EX_SEL			/* Serialization failure */
#define EN_DIRTY	GE_EX_DIRTY			/* SCOOP processor dirty exception. */
#define EN_NEX		GE_EX_NEX			/* Number of internal exceptions */

/*
 * Raise an Eiffel exception.
 */
extern void eraise(const char* name, long code);

/*
 * Raise an Eiffel exception of the given code with no associated tag.
 */
extern void xraise(int code);

/*
 * Raise an "Operating system error" exception.
 */
extern void esys(void);

/*
 * As a special case, an I/O error is raised when a system call which is I/O bound fails.
 */
extern void eise_io(const char* tag);

/*
 * Raise a "No more memory" exception.
 */
extern void enomem(void);

/*
 * Raise EiffelCOM exception.
 */
extern void com_eraise(const char* tag, long num);

/*
 * Terminate execution with exit status `code',
 * without triggering an exception.
 */
extern void esdie(int code);

/*
 * Exception tag associated with `code'.
 * This is a duplication from Eiffel classes, but still used for trace printing and in EiffelCom.
 */
extern EIF_REFERENCE eename(long except);

/*
 * Is exception `ex' defined?
 * Used in EiffelCOM.
 */
extern char eedefined(long ex);

/*
 * Enable/diable printing of the exception trace.
 * Per thead information.
 */
extern void eetrace(char b);

/*
 * Is current execution during rescue?
 */
extern EIF_BOOLEAN eif_is_in_rescue(void);

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void set_windows_exception_filter();
#endif

/*
 * Used in EiffelCOM.
 */
#define echval GE_current_context()->exception_code
#define echtg GE_current_context()->exception_tag

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class REAL"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_REAL_H
#define GE_REAL_H

#include <math.h>

#ifndef GE_power
#define GE_power(x,y) pow((x),(y))
#endif
#define GE_ceiling(x) ceil(x)
#define GE_floor(x) floor(x)

extern EIF_NATURAL_32 GE_real_32_to_bits (EIF_REAL_32 v);
extern EIF_NATURAL_64 GE_real_64_to_bits (EIF_REAL_64 v);
extern EIF_REAL_32 GE_real_32_from_bits (EIF_NATURAL_32 v);
extern EIF_REAL_64 GE_real_64_from_bits (EIF_NATURAL_64 v);

#define GE_real_32_is_nan(v) ((v)!=(v) ? EIF_TRUE : ((GE_real_32_to_bits(v) & ~GE_nat32(0x80000000)) > GE_nat32(0x7FF00000)))
#define GE_real_64_is_nan(v) ((v)!=(v) ? EIF_TRUE : ((GE_real_64_to_bits(v) & ~GE_nat64(0x8000000000000000)) > GE_nat64(0x7FF0000000000000)))
#define GE_real_32_is_negative_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0xFF800000))
#define GE_real_64_is_negative_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0xFFF0000000000000))
#define GE_real_32_is_positive_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0x7F800000))
#define GE_real_64_is_positive_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0x7FF0000000000000))
#define GE_real_32_nan GE_real_32_from_bits(GE_nat32(0x7FC00000))
#define GE_real_64_nan GE_real_64_from_bits(GE_nat64(0x7FF8000000000000))
#define GE_real_32_negative_infinity GE_real_32_from_bits(GE_nat32(0xFF800000))
#define GE_real_64_negative_infinity GE_real_64_from_bits(GE_nat64(0xFFF0000000000000))
#define GE_real_32_positive_infinity GE_real_32_from_bits(GE_nat32(0x7F800000))
#define GE_real_64_positive_infinity GE_real_64_from_bits(GE_nat64(0x7FF0000000000000))

#endif
/*
	description:

		"C functions used to implement class FILE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_FILE_H
#define EIF_FILE_H

#include <time.h>
#include <sys/stat.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Let's define the stat structure for our platforms. */
/* The definition is the same for both ANSI and Unicode versions on Windows. */
#ifdef EIF_WINDOWS
#	ifdef EIF_64_BITS
#		define rt_stat_buf	struct _stat64
#	else
#		define rt_stat_buf	struct _stat64i32
#	endif
#else
#	define rt_stat_buf		struct stat
#endif

/*
 * Create directory `dirname'.
 */
extern void eif_file_mkdir(EIF_FILENAME dirname);

/*
 * Rename file `from' into `to'.
 */
extern void eif_file_rename(EIF_FILENAME from, EIF_FILENAME  to);

/*
 * Link file `from' into `to'.
 */
extern void eif_file_link(EIF_FILENAME from, EIF_FILENAME to);

/*
 * Delete file or directory `name'.
 */
extern void eif_file_unlink(EIF_FILENAME name);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_reopen( EIF_FILENAME name, int how, FILE *old);

/*
 * Close the file.
 */
extern void eif_file_close(FILE *fp);

/*
 * Flush data held in stdio buffer.
 */
extern void eif_file_flush(FILE *fp);

/*
 * Return the associated file descriptor.
 */
extern EIF_INTEGER eif_file_fd(FILE *f);

/*
 * Get a character from `f'.
 */
extern EIF_CHARACTER_8 eif_file_gc(FILE *f);

/*
 * Get a string from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters.
 */
extern EIF_INTEGER eif_file_gs(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Read min (bound, remaining bytes in file) characters into `s' and
 * return the number of characters read.
 */
extern EIF_INTEGER eif_file_gss(FILE *f, char *s, EIF_INTEGER bound);

/*
 * Get a word from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters. Any leading
 * spaces are skipped.
 */
extern EIF_INTEGER eif_file_gw(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Look ahead one character. If EOF, return 0.
 */
extern EIF_CHARACTER_8 eif_file_lh(FILE *f);

/*
 * Size of file `fp'.
 */
extern EIF_INTEGER eif_file_size(FILE *fp);

/*
 * Read upto next input line.
 */
extern void eif_file_tnil(FILE *f);

/*
 * Current position within file.
 */
extern EIF_INTEGER eif_file_tell(FILE *f);

/*
 * Touch file `name' by setting both access and modification time to the
 * current time stamp. This external function exists only because there
 * is no way within UNIX_FILE to get the current time stamp. Otherwise,
 * we could simply call file_utime.
 */
extern void eif_file_touch(EIF_FILENAME name);

/*
 * Modify the modification and/or the access time stored in the file's
 * inode. The 'how' parameter tells which attributes should be set.
 */
extern void eif_file_utime(EIF_FILENAME name, time_t stamp, int how);

/*
 * This is an encapsulation of the stat() system call. The routine either
 * succeeds and returns or fails and raises the appropriate exception.
 */
extern int eif_file_stat(EIF_FILENAME path, rt_stat_buf *buf, int follow);

/*
 * Change permissions of file `name', using an interface like chmod(1).
 * The flag is true if permissions are to be added, 0 to remove them.
 */
extern void eif_file_perm(EIF_FILENAME name, char *who, char *what, int flag);

/*
 * Change permission mode on file `path'.
 */
extern void eif_file_chmod(EIF_FILENAME path, int mode);

/*
 * Change the owner of the file to `uid'.
 */
extern void eif_file_chown(EIF_FILENAME name, int uid);

/*
 * Change the group of the file to `gid'.
 */
extern void eif_file_chgrp(EIF_FILENAME name, int gid);

/*
 * Put new_line onto `f'.
 */
extern void eif_file_tnwl(FILE *f);

/*
 * Append a copy of `other' to `f'.
 */
extern void eif_file_append(FILE *f, FILE *other, EIF_INTEGER l);

/*
 * Write string `str' on `f'.
 */
extern void eif_file_ps(FILE *f, char *str, EIF_INTEGER len);

/*
 * Write character `c' on `f'.
 */
extern void eif_file_pc(FILE *f, char c);

/*
 * Go to absolute position `pos' counted from start.
 */
extern void eif_file_go(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from end.
 */
extern void eif_file_recede(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from current position.
 */
extern void eif_file_move(FILE *f, EIF_INTEGER pos);

/*
 * End of file.
 */
extern EIF_BOOLEAN eif_file_feof(FILE *fp);

/*
 * Test whether file exists or not. If `name' represents a symbolic link,
 * it will check that pointed file does exist.
 */
extern EIF_BOOLEAN eif_file_exists(EIF_FILENAME name);

/*
 * Test whether file exists or not without following the symbolic link
 * if `name' represents one.
 */
extern EIF_BOOLEAN eif_file_path_exists(EIF_FILENAME name);

/*
 * Check whether access permission `op' are possible on file `name' using
 * real UID and real GID. This is probably only useful to setuid or setgid
 * programs.
 */
extern EIF_BOOLEAN eif_file_access(EIF_FILENAME name, EIF_INTEGER op);

/*
 * Check whether the file `path' may be created: we need write permissions
 * in the parent directory and there must not be any file bearing that name
 * with no write permissions...
 */
extern EIF_BOOLEAN eif_file_creatable(EIF_FILENAME path, EIF_INTEGER nbytes);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gi(FILE *f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_gr(FILE *f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gd(FILE *f);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pi(FILE *f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pr(FILE *f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pd(FILE *f, EIF_REAL_64 val);

/*
 * Size of the stat structure. This is used by the Eiffel side to create
 * the area (special object) which will play the role of a stat buffer
 * structure.
 */
extern EIF_INTEGER stat_size(void);

/*
 * Check file permissions using effective UID and effective GID. The
 * current permission mode is held in the st_mode field of the stat()
 * buffer structure `buf'.
 */
extern EIF_BOOLEAN eif_file_eaccess(rt_stat_buf *buf, int op);

/*
 * Perform the field dereferencing from the appropriate stat structure,
 * which Eiffel cannot do directly.
 */
extern EIF_INTEGER eif_file_info(rt_stat_buf *buf, int op);

/*
 * Return the Eiffel string filled in with the name associated with `uid'
 * if found in /etc/passwd. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_owner(int uid);

/*
 * Return the Eiffel string filled in with the name associated with `gid'
 * if found in /etc/group. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_group(int gid);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gib(FILE* f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_grb(FILE* f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gdb(FILE* f);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_binary_reopen(EIF_FILENAME name, int how, FILE* old);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pib(FILE* f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_prb(FILE* f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pdb(FILE* f, EIF_REAL_64 val);

/*
 * Modification time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_date (EIF_FILENAME  name);

/*
 * Access time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_access_date (EIF_FILENAME  name);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CONSOLE_H
#define EIF_CONSOLE_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER console_def(EIF_INTEGER file);
extern EIF_BOOLEAN console_eof(FILE* fp);
extern EIF_CHARACTER_8 console_separator(FILE* f);
extern void console_ps(FILE* f, char* str, EIF_INTEGER len);
extern void console_pr(FILE* f, EIF_REAL_32 number);
extern void console_pc(FILE* f, EIF_CHARACTER_8 c);
extern void console_pd(FILE* f, EIF_REAL_64 val);
extern void console_pi(FILE* f, EIF_INTEGER number);
extern void console_tnwl(FILE* f);
extern EIF_CHARACTER_8 console_readchar(FILE* f);
extern EIF_REAL_32 console_readreal(FILE* f);
extern EIF_INTEGER console_readint(FILE* f);
extern EIF_REAL_64 console_readdouble(FILE* f);
extern EIF_INTEGER console_readword(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER console_readline(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern void console_next_line(FILE* f);
extern EIF_INTEGER console_readstream(FILE* f, char* s, EIF_INTEGER bound);
extern void console_file_close (FILE* f);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement Thread support"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_THREADS_H
#define EIF_THREADS_H

#ifndef EIF_CECIL_H
#include "eif_cecil.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifndef EIF_THREADS

/*
	Empty stubs for EiffelThread library so that it may be compiled against a non-multithreaded run-time.
*/

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() NULL

/* THREAD_CONTROL */
#define eif_thr_yield()
#define eif_thr_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj, init_func, attr)
#define eif_thr_wait(term)
#define eif_thr_wait_with_timeout(term,tms) EIF_FALSE
#define eif_thr_last_thread() NULL
#define eif_thr_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() 0
#define eif_thr_min_priority() 0
#define eif_thr_max_priority() 0

/* MUTEX */
#define eif_thr_mutex_create() NULL
#define eif_thr_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) EIF_FALSE
#define eif_thr_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() NULL
#define eif_thr_cond_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr)
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) 0
#define eif_thr_cond_destroy(a_mutex_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(count) NULL
#define eif_thr_sem_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) EIF_FALSE
#define eif_thr_sem_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() NULL
#define eif_thr_rwl_rdlock(an_item)
#define eif_thr_rwl_unlock(an_item)
#define eif_thr_rwl_wrlock(an_item)
#define eif_thr_rwl_destroy(an_item)

#define eif_thr_sleep(nanoseconds)

#else

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() GE_thread_id()

/* THREAD_CONTROL */
#define eif_thr_yield() GE_thread_yield()
#define eif_thr_join_all() GE_thread_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj,init_func,attr) GE_thread_create_with_attr((current_obj),(init_func),(EIF_THR_ATTR_TYPE*)(attr))
#define eif_thr_wait(term) GE_thread_wait(term)
#define eif_thr_wait_with_timeout(term,tms) GE_thread_wait_with_timeout((term),(tms))
#define eif_thr_last_thread() GE_last_thread_created()
#define eif_thr_exit() GE_thread_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() GE_thread_default_priority()
#define eif_thr_min_priority() GE_thread_min_priority()
#define eif_thr_max_priority() GE_thread_max_priority()

/* MUTEX */
#define eif_thr_mutex_create() GE_mutex_create()
#define eif_thr_mutex_lock(a_mutex_pointer) GE_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) GE_mutex_trylock(a_mutex_pointer)
#define eif_thr_mutex_unlock(a_mutex_pointer) GE_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer) GE_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() NULL
#define eif_thr_cond_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr)
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) 0
#define eif_thr_cond_destroy(a_mutex_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(count) NULL
#define eif_thr_sem_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) EIF_FALSE
#define eif_thr_sem_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() NULL
#define eif_thr_rwl_rdlock(an_item)
#define eif_thr_rwl_unlock(an_item)
#define eif_thr_rwl_wrlock(an_item)
#define eif_thr_rwl_destroy(an_item)

#define eif_thr_sleep(nanoseconds)

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_GLOBALS_H
#define EIF_GLOBALS_H

#ifndef EIF_THREADS_H
#include "eif_threads.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#define EIF_GET_CONTEXT
#define GTCX EIF_GET_CONTEXT

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C declarations for the ISE Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EIFFEL_H
#define EIF_EIFFEL_H

#ifndef EIF_GLOBALS_H
#include "eif_globals.h"
#endif
#ifndef EIF_EXCEPT_H
#include "eif_except.h"
#endif

#endif
/*
	description:

		"C functions used to access DLLs"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_DLL_H
#define GE_DLL_H

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

#include <windows.h>

/* DLL declarations */
#define GE_load_dll(name) LoadLibraryA((LPCSTR)name)

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_MISC_H
#define EIF_MISC_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER eif_system(EIF_NATIVE_CHAR* s);
extern void eif_system_asynchronous(EIF_NATIVE_CHAR* cmd);
extern void eif_sleep(EIF_INTEGER_64);

#ifdef EIF_WINDOWS
/* DLL declarations */
#define eif_load_dll(name) GE_load_dll(name)
#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class DIRECTORY"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_DIR_H
#define EIF_DIR_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER eif_dir_open (EIF_FILENAME dirname);
extern EIF_POINTER eif_dir_next (EIF_POINTER dir);
extern EIF_POINTER eif_dir_rewind (EIF_POINTER d, EIF_FILENAME dir_name);
extern void eif_dir_close (EIF_POINTER dir);
extern EIF_BOOLEAN eif_dir_exists (EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_readable (EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_writable (EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_executable (EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_deletable (EIF_FILENAME name);
extern EIF_CHARACTER_8 eif_dir_separator(void);
extern EIF_INTEGER eif_dir_current (EIF_FILENAME a_buffer, EIF_INTEGER a_count);
extern EIF_INTEGER eif_chdir (EIF_FILENAME path);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class C_DATE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_TIME_H
#define GE_TIME_H

#if defined _XOPEN_UNIX || defined __USE_XOPEN || defined __USE_BSD
#define HAS_GETTIMEOFDAY
#else
#ifndef WIN32
#define HAS_GETTIMEOFDAY
#endif
#endif

#ifdef HAS_GETTIMEOFDAY
/*
	OpenBSD does not support 'ftime' unless -lcompat is specified.
	Use the recommended XSI (X/Open System Interface) extension instead.
*/
#include <sys/time.h>
#include <sys/types.h>
#define GE_ftime(p) gettimeofday((struct timeval*)(p),((void*)0))
#define GE_timebsz sizeof(struct timeval)
#define GE_timebmillitm(p) (((struct timeval*)(p))->tv_usec/1000)
#define GE_timebtime(p) ((struct timeval*)(p))->tv_sec
#else
#include <sys/timeb.h>
extern void ftime(struct timeb *); /* Needed for lcc-win32 */
#define GE_ftime(p) ftime((struct timeb*)(p))
#define GE_timebsz sizeof(struct timeb)
#define GE_timebmillitm(p) ((struct timeb*)(p))->millitm
#define GE_timebtime(p) ((struct timeb*)(p))->time
#endif

#endif
/*
	description:

		"C functions used to implement class COM_FAILURE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_COM_FAILURE_H
#define GE_COM_FAILURE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER GE_ccom_hresult(EIF_POINTER an_exception_code);

extern EIF_INTEGER GE_ccom_hresult_code(EIF_INTEGER an_hresult);

extern EIF_INTEGER GE_ccom_hresult_facility(EIF_INTEGER an_hresult);

/*
 * Get text from error `a_code'. It is up to the caller to free
 * the returned buffer using `GE_ccom_local_free'.
 */
extern EIF_POINTER GE_ccom_error_text(EIF_INTEGER a_code);

/*
 * Number of characters in `ptr'.
 */
extern EIF_INTEGER_32 GE_ccom_strlen(EIF_POINTER ptr);

/*
 * Number of bytes occupied by a TCHAR.
 */
extern EIF_INTEGER_32 GE_ccom_character_size();

/*
 * Free `a_ptr' using LocalFree.
 */
extern void GE_ccom_local_free(EIF_POINTER a_ptr);

#ifdef __cplusplus
}
#endif

#endif
#include <string.h>
#include <stdlib.h>
#include <time.h>
