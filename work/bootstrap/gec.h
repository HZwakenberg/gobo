/*
	description:

		"C declarations for the Gobo Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2005-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EIFFEL_H
#define GE_EIFFEL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#if defined(__USE_POSIX) || defined(__unix__) || defined(_POSIX_C_SOURCE)
#include <unistd.h>
#endif
#if !defined(WIN32) && \
	(defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER) || \
	defined(__MINGW32__))
#define WIN32 1
#endif
#ifdef WIN32
#define EIF_WINDOWS 1
#include <windows.h>
#endif

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>

/* Platform definition */
/* Unix definition */
#define EIF_IS_UNIX EIF_TRUE
/* Windows definition */
#ifdef EIF_WINDOWS
#define EIF_IS_WINDOWS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_WINDOWS EIF_FALSE
#endif
/* VMS definition */
#ifdef EIF_VMS
#define EIF_IS_VMS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VMS EIF_FALSE
#endif
/* MAC definition */
#ifdef EIF_MAC
#define EIF_IS_MAC EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_MAC EIF_FALSE
#endif
/* VxWorks definition */
#ifdef EIF_VXWORKS
#define EIF_IS_VXWORKS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VXWORKS EIF_FALSE
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _MSC_VER /* MSVC */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#include <inttypes.h>
#endif
#endif

/* Portable integer pointers */
#ifdef EIF_WINDOWS
#ifndef _INTPTR_T_DEFINED
#define _INTPTR_T_DEFINED
#ifdef _WIN64
typedef __int64 intptr_t;
#else
typedef int intptr_t;
#endif
#endif
#endif

/* Basic Eiffel types */
typedef struct {int id;} EIF_ANY;
typedef EIF_ANY* EIF_REFERENCE;
typedef char EIF_BOOLEAN;
typedef unsigned char EIF_CHARACTER_8;
typedef uint32_t EIF_CHARACTER_32;
typedef int8_t EIF_INTEGER_8;
typedef int16_t EIF_INTEGER_16;
typedef int32_t EIF_INTEGER_32;
typedef int64_t EIF_INTEGER_64;
typedef uint8_t EIF_NATURAL_8;
typedef uint16_t EIF_NATURAL_16;
typedef uint32_t EIF_NATURAL_32;
typedef uint64_t EIF_NATURAL_64;
typedef void* EIF_POINTER;
typedef float EIF_REAL_32;
typedef double EIF_REAL_64;

#ifdef EIF_WINDOWS
typedef wchar_t EIF_NATIVE_CHAR;
#else
typedef char EIF_NATIVE_CHAR;
#endif
typedef EIF_NATIVE_CHAR* EIF_FILENAME;

#define EIF_VOID ((EIF_REFERENCE)0)
#define EIF_FALSE ((EIF_BOOLEAN)'\0')
#define EIF_TRUE ((EIF_BOOLEAN)'\1')
#define EIF_TEST(x) ((x) ? EIF_TRUE : EIF_FALSE)

#define EIF_IS_WORKBENCH EIF_FALSE
#define EIF_POINTER_DISPLAY "lX"

/* For INTEGER and NATURAL manifest constants */
#define GE_int8(x) x
#define GE_nat8(x) x
#define GE_int16(x) x
#define GE_nat16(x) x
#define GE_int32(x) x##L
#define GE_nat32(x) x##U
#if defined (_MSC_VER) && (_MSC_VER < 1400) /* MSC older than v8 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else /* ISO C 99 */
#define GE_int64(x) x##LL
#define GE_nat64(x) x##ULL
#endif
#endif

extern EIF_REFERENCE GE_ms8(const char *s, EIF_INTEGER_32 c);
#define GE_str8(s) GE_ms8((s),strlen(s))

#ifdef _MSC_VER /* MSVC */
/* MSVC does not support ISO C 99's 'snprintf' from stdio.h */
#define snprintf(a,b,c,d) sprintf(a,c,d)
#endif

/*
	Interoperability with ISE.
*/
#define RTI64C(x) GE_int64(x)
#define EIF_OBJECT EIF_REFERENCE
#define EIF_OBJ EIF_OBJECT
#define EIF_INTEGER EIF_INTEGER_32
#define EIF_CHARACTER EIF_CHARACTER_8
#define EIF_REAL EIF_REAL_32
#define EIF_DOUBLE EIF_REAL_64
/* Function pointer call to make sure all arguments are correctly pushed onto stack. */
/* FUNCTION_CAST is for standard C calls. */
/* FUNCTION_CAST_TYPE is for non-standard C calls. */
#define FUNCTION_CAST(r_type,arg_types) (r_type (*) arg_types)
#define FUNCTION_CAST_TYPE(r_type,call_type,arg_types) (r_type (call_type *) arg_types)
#define SIGBLOCK
#define SIGRESUME
#define rt_public				/* default C scope */
#define rt_private static		/* static outside a block means private */
#define rt_shared				/* data shared between modules, but not public */
typedef int32_t EIF_TYPE_ID;
#define EIF_NO_TYPE (EIF_TYPE_ID)(-1)
typedef uint16_t EIF_TYPE_INDEX;
#define RTMS(s) GE_str8(s)
#define RTMS_EX(s,c) GE_ms8((s),(c))

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to manipulate native strings"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_NATIVE_STRING_H
#define GE_NATIVE_STRING_H

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#include <string.h>
#ifndef EIF_WINDOWS
#include <sys/types.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

	/* Macro used to manipulate native string, i.e: (wchar_t*) */
#define GE_nstrlen wcslen /* size of string */
#define GE_nstrncpy wcsncpy /* Copy n characters of one string to another */
#define GE_nstrcpy wcscpy /* Copy one string to another */
#define GE_nstrncat wcsncat /* Append characters of a string */
#define GE_nstrcat wcscat /* Append a string */
#define GE_nstrstr wcsstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) L##quote /* Manifest Native string declaration */
#define GE_nstr_fopen	_wfopen /* Open file using native string name */
#define GE_nstrcmp wcscmp /* Compare two strings. */
#define GE_nstrdup _wcsdup /* Duplicate string. */

#define GE_nstr_cat_ascii(dest, src) { 						\
		int i;													\
		size_t dest_len, src_len;								\
		dest_len = rt_nstrlen (dest);							\
		src_len = strlen (src);									\
		for (i = 0; i < src_len; i++) {							\
			dest[dest_len + i] = (EIF_NATIVE_CHAR) src[i];		\
		}														\
		dest[dest_len + src_len] = (EIF_NATIVE_CHAR) 0;			\
	}

#else /* not EIF_WINDOWS */

	/* Macro used to manipulate native string, i.e: (char*) */
#define GE_nstrlen  strlen /* size of string */
#define GE_nstrncpy strncpy /* Copy n characters of one string to another */
#define GE_nstrcpy strcpy /* Copy one string to another */
#define GE_nstrncat strncat /* Append characters of a string */
#define GE_nstrcat strcat /* Append a string */
#define GE_nstrstr strstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) quote /* Manifest Native string declaration */
#define GE_nstr_fopen	fopen /* Open file using native string name */
#define GE_nstrcmp strcmp /* Compare two strings. */
#define GE_nstrdup strdup /* Duplicate string. */

#define GE_nstr_cat_ascii strcat

#endif


#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class ARGUMENTS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_ARGUMENTS_H
#define GE_ARGUMENTS_H

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_argc;
extern EIF_NATIVE_CHAR** GE_argv;

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class EXCEPTION"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EXCEPTION_H
#define GE_EXCEPTION_H

#include <setjmp.h>

/*
 * On Linux glibc systems, we need to use sig* versions of jmp_buf,
 * setjmp and longjmp to preserve the signal handling context.
 * One way to detect this is if _SIGSET_H_types has
 * been defined in /usr/include/setjmp.h.
 * NOTE: ANSI only recognizes the non-sig versions.
 */
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#define GE_jmp_buf sigjmp_buf
#define GE_setjmp(x) sigsetjmp((x),1)
#define GE_longjmp(x,y) siglongjmp((x),(y))
#else
#define GE_jmp_buf jmp_buf
#define GE_setjmp(x) setjmp((x))
#define GE_longjmp(x,y) longjmp((x),(y))
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define GE_EX_VOID		1			/* Feature applied to void reference */
#define GE_EX_MEM		2			/* No more memory */
#define GE_EX_PRE		3			/* Pre-condition violated */
#define GE_EX_POST		4			/* Post-condition violated */
#define GE_EX_FLOAT		5			/* Floating point exception (signal SIGFPE) */
#define GE_EX_CINV		6			/* Class invariant violated */
#define GE_EX_CHECK		7			/* Check instruction violated */
#define GE_EX_FAIL		8			/* Routine failure */
#define GE_EX_WHEN		9			/* Unmatched inspect value */
#define GE_EX_VAR		10			/* Non-decreasing loop variant */
#define GE_EX_LINV		11			/* Loop invariant violated */
#define GE_EX_SIG		12			/* Operating system signal */
#define GE_EX_BYE		13			/* Eiffel run-time panic */
#define GE_EX_RESC		14			/* Exception in rescue clause */
#define GE_EX_OMEM		15			/* Out of memory (cannot be ignored) */
#define GE_EX_RES		16			/* Resumption failed (retry did not succeed) */
#define GE_EX_CDEF		17			/* Create on deferred */
#define GE_EX_EXT		18			/* External event */
#define GE_EX_VEXP		19			/* Void assigned to expanded */
#define GE_EX_HDLR		20			/* Exception in signal handler */
#define GE_EX_IO		21			/* I/O error */
#define GE_EX_SYS		22			/* Operating system error */
#define GE_EX_RETR		23			/* Retrieval error */
#define GE_EX_PROG		24			/* Developer exception */
#define GE_EX_FATAL		25			/* Eiffel run-time fatal error */
#define GE_EX_DOL		26			/* $ applied to melted feature */
#define GE_EX_ISE_IO	27			/* I/O error raised by the ISE Eiffel runtime */
#define GE_EX_COM		28			/* COM error raised by EiffelCOM runtime */
#define GE_EX_RT_CHECK	29			/* Runtime check error such as out-of-bound array access */
#define GE_EX_OLD		30			/* Old violation */
#define GE_EX_SEL		31			/* Serialization failure */
#define GE_EX_DIRTY		32			/* SCOOP processor dirty exception. */
#define GE_EX_NEX		32			/* Number of internal exceptions */

/*
 * String buffer used to build the exception trace.
 */
typedef struct GE_exception_trace_buffer_struct GE_exception_trace_buffer;
struct GE_exception_trace_buffer_struct {
	char* area;
	uint32_t count;
	uint32_t capacity;
};

/*
 * Information about the feature being executed.
 */
typedef struct GE_call_struct GE_call;
struct GE_call_struct {
#ifdef EIF_CURRENT_IN_EXCEPTION_TRACE
	void* object; /* Current object */
#endif
	const char* class_name;
	const char* feature_name;
	GE_call* caller; /* previous feature in the call chain */
};

/*
 * Context of features containing a rescue clause.
 */
typedef struct GE_rescue_struct GE_rescue;
struct GE_rescue_struct {
	GE_jmp_buf jb;
	GE_rescue* previous; /* previous context in the call chain */
};

/*
 * Information about the execution context.
 * One such struct per thread.
 */
typedef struct GE_thread_context_struct GE_thread_context;
typedef struct GE_context_struct GE_context;
struct GE_context_struct {
	GE_call* call; /* Call stack */
	GE_rescue* last_rescue; /* Context of last feature entered containing a rescue clause */
	uint32_t in_rescue; /* Number of rescue clauses currently being executed */
	EIF_REFERENCE exception_manager; /* Exception manager */
	char raising_exception; /* Is an exception currently being raised? */
	char exception_trace_enabled; /* Should exception trace be displayed? */
	GE_exception_trace_buffer exception_trace_buffer; /* String buffer used to build the exception trace */
	GE_exception_trace_buffer last_exception_trace; /* Last non-routine-failure exception trace */
#ifdef EIF_THREADS
	GE_thread_context* thread; /* Thread context */
#endif
};

/*
 * Default initialization for 'GE_context'.
 */
extern GE_context GE_default_context;

/*
 * Execution context of main thread.
 */
extern GE_context* GE_main_context;

/*
 * Execution context of current thread.
 */
extern GE_context* GE_current_context();

/*
 * Initialization of exception handling.
 */
extern void GE_init_exception(GE_context* context);

/*
 * Pointer to function to create a new exception manager object.
 */
extern EIF_REFERENCE (*GE_new_exception_manager)(EIF_BOOLEAN);

/*
 * Pointer to Eiffel routine EXCEPTION_MANAGER.init_exception_manager.
 */
extern void (*GE_init_exception_manager)(GE_context*, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine EXCEPTION_MANAGER.set_exception_data.
 */
extern void (*GE_set_exception_data)(GE_context*, EIF_REFERENCE, EIF_INTEGER_32, EIF_BOOLEAN, EIF_INTEGER_32, EIF_INTEGER_32, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_INTEGER_32, EIF_BOOLEAN);

/*
 * Exception tag associated with `code'.
 */
extern char* GE_exception_tag(long code);

/*
 * Raise an exception with code 'code'.
 */
extern void GE_raise(long code);

/*
 * Raise an exception with code 'code' and message 'msg'.
 */
extern void GE_raise_with_message(long code, const char* msg);

/*
 * Raise an exception from EXCEPTION_MANAGER.
 */
extern void GE_developer_raise(long code, char* meaning, char* message);

/*
 * Check whether the type id of 'obj' is not in 'type_ids'.
 * If it is, then raise a CAT-call exception. Don't do anything if 'obj' is Void.
 * 'nb' is the number of ids in 'type_ids' and is expected to be >0.
 * 'type_ids' is sorted in increasing order.
 * Return 'obj'.
 */
#define GE_catcall(obj,type_ids,nb) GE_check_catcall((obj),(type_ids),(nb))
EIF_REFERENCE GE_check_catcall(EIF_REFERENCE obj, int type_ids[], int nb);

/*
 * Check whether 'obj' is Void.
 * If it is, then raise a call-on-void-target exception.
 * Return 'obj'.
 */
#define GE_void(obj) (!(obj)?GE_check_void(obj):(obj))
extern EIF_REFERENCE GE_check_void(EIF_REFERENCE obj);

/*
 * Check whether 'ptr' is a null pointer.
 * If it is, then raise a no-more-memory exception.
 * Return 'ptr'.
 */
#define GE_null(ptr) GE_check_null(ptr)
extern void* GE_check_null(void* ptr);

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void GE_set_windows_exception_filter();
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_CONSOLE_H
#define GE_CONSOLE_H

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

/*
	Create a new DOS console if needed (i.e. in case of a Windows application).
*/
extern void GE_show_console(void);

#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement the program initialization"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_MAIN_H
#define GE_MAIN_H

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_main(int argc, EIF_NATIVE_CHAR** argv);

/*
 * System name.
 */
extern char* GE_system_name;

/*
 * Root class name.
 */
extern char* GE_root_class_name;

#ifdef EIF_WINDOWS

#include <windows.h>

/*
 * Used in WEL.
 */
extern HINSTANCE eif_hInstance;
extern HINSTANCE eif_hPrevInstance;
extern LPWSTR eif_lpCmdLine;
extern int eif_nCmdShow;

/*
 * Main entry point when compiling a Windows application.
 * See:
 *    http://en.wikipedia.org/wiki/WinMain
 *    http://msdn2.microsoft.com/en-us/library/ms633559.aspx
 */
extern int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow);

#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to access garbage collector facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_GC_H
#define GE_GC_H

#ifdef EIF_BOEHM_GC
/*
 *	Use the Boehm garbage collector.
 *	See:
 *		http://en.wikipedia.org/wiki/Boehm_GC
 *		http://www.hpl.hp.com/personal/Hans_Boehm/gc/
 */

#define GC_IGNORE_WARN
#include "gc.h"
#endif


/*
 * GC initialization.
 */

#ifdef EIF_BOEHM_GC
#define GE_init_gc() GC_INIT(); GC_enable_incremental()
#else /* No GC */
#define GE_init_gc() /* do nothing */
#endif


/*
 * Memory allocation.
 */

/*
 * GE_alloc allocates memory that can contain pointers to collectable objects.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_alloc(x) GE_null(GC_MALLOC(x))
#else /* No GC */
#define GE_alloc(x) GE_null(malloc(x))
#endif

/*
 * When defined, GE_alloc_cleared means that GE_alloc makes sure that the allocated memory is zeroed.
 */
#ifdef EIF_BOEHM_GC
#define GE_alloc_cleared
#else /* No GC */
#endif

/*
 * GE_alloc_atomic allocates memory that does not contain pointers to collectable objects.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_alloc_atomic(x) GE_null(GC_MALLOC_ATOMIC(x))
#else /* No GC */
#define GE_alloc_atomic(x) GE_null(malloc(x))
#endif

/*
 * When defined, GE_alloc_atomic_cleared means that GE_alloc_atomic makes sure that the allocated memory is zeroed.
 */
/* #define GE_alloc_atomic_cleared */






/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_malloc(size) GE_null(GC_MALLOC(size))
#else /* No GC */
#define GE_malloc(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed.
 * The allocated object is itself collectable.
 */
#ifdef EIF_BOEHM_GC
#define GE_malloc_atomic(size) GE_null(GC_MALLOC_ATOMIC(size))
#else /* No GC */
#define GE_malloc_atomic(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_calloc(nelem, elsize) GE_null(GC_MALLOC((nelem) * (elsize)))
#else /* No GC */
#define GE_calloc(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_calloc_atomic(nelem, elsize) memset(GE_null(GC_MALLOC_ATOMIC((nelem) * (elsize))), 0, (nelem) * (elsize))
#else /* No GC */
#define GE_calloc(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_malloc_uncollectable(size) GE_null(GC_MALLOC_UNCOLLECTABLE(size))
#else /* No GC */
#define GE_malloc_uncollectable(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_malloc_atomic_uncollectable(size) GE_null(GC_malloc_atomic_uncollectable(size))
#else /* No GC */
#define GE_malloc_uncollectable(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_calloc_uncollectable(nelem, elsize) GE_null(GC_MALLOC_UNCOLLECTABLE((nelem) * (elsize)))
#else /* No GC */
#define GE_calloc_uncollectable(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_calloc_atomic_uncollectable(nelem, elsize) memset(GE_null(GC_malloc_atomic_uncollectable((nelem) * (elsize))), 0, (nelem) * (elsize))
#else /* No GC */
#define GE_calloc_atomic_uncollectable(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
extern void* GE_raw_calloc_atomic_uncollectable(size_t nelem, size_t elsize);
#else /* No GC */
#define GE_raw_calloc_atomic_uncollectable(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is not necessarily zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_realloc(p, size) GE_null(GC_REALLOC((p), (size)))
#else /* No GC */
#define GE_realloc(p, size) GE_null(realloc((p), (size)))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
extern void* GE_recalloc(void* p, size_t old_nelem, size_t new_nelem, size_t elsize);

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
extern void* GE_raw_recalloc(void* p, size_t old_nelem, size_t new_nelem, size_t elsize);

/*
 * Explicitly deallocate an object.
 */
#ifdef EIF_BOEHM_GC
#define GE_free(p) GC_FREE(p)
#else /* No GC */
#define GE_free(p) free(p)
#endif

/*
 * When defined, GE_malloc_cleared means that GE_malloc and GE_malloc_uncollectable
 * make sure that the allocated memory is zeroed.
 */
#ifdef EIF_BOEHM_GC
#define GE_malloc_cleared
#else /* No GC */
#endif

/*
 * When defined, GE_malloc_atomic_cleared means that GE_malloc_atomic and
 * GE_malloc_atomic_uncollectable make sure that the allocated memory is zeroed.
 */
#ifdef EIF_BOEHM_GC
/* #define GE_malloc_atomic_cleared */
#else /* No GC */
#endif


/*
 * Dispose
 */

/*
 * Register dispose routine `disp' to be called on object `obj' when it will be collected.
 */
#ifdef EIF_BOEHM_GC
extern void GE_boehm_dispose(void* C, void* disp); /* Call dispose routine `disp' on object `C'. */
#define GE_register_dispose(obj, disp) GC_REGISTER_FINALIZER_NO_ORDER((void*)(obj), (void (*) (void*, void*)) &GE_boehm_dispose, NULL, NULL, NULL)
#else /* No GC */
#define GE_register_dispose(obj, disp) /* do nothing */
#endif


/*
 * Access to objects, useful with GCs which move objects in memory.
 * This is not the case here, since the Boehm GC is not a moving GC.
 */

/* Access object through hector */
#define eif_access(obj) (obj)
/* Freeze memory address */
#define eif_freeze(obj) (obj)
/* The C side adopts an object */
#define eif_adopt(obj) (obj)
/* The C side protects an object */
#define eif_protect(obj) (obj)
/* The C side weans adopted object */
#define eif_wean(obj) (obj)
/* Forget a frozen memory address */
#define eif_unfreeze(obj)
/* Always frozen since they do not move */
#define eif_frozen(obj) 1
/* Always frozen since they do not move */
#define spfrozen(obj) 1

#endif

/*
	description:

		"C functions used to implement class IDENTIFIED"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2010, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_IDENTIFIED_H
#define GE_IDENTIFIED_H

#ifdef __cplusplus
extern "C" {
#endif

/*
	Initialize data to keep track of object ids.
*/
extern void GE_init_identified(void);

/*
	Get a new id for `object', assuming it is NOT in the stack.
*/
extern EIF_INTEGER_32 GE_object_id(EIF_OBJECT object);

/*
	Return the object associated with `id'.
*/
extern EIF_REFERENCE GE_id_object(EIF_INTEGER_32 id);

/*
	Remove the object associated with `id' from the stack.
*/
extern void GE_object_id_free(EIF_INTEGER_32 id);

#ifdef __cplusplus
}
#endif

#endif

#ifdef __cplusplus
extern "C" {
#endif

#define T0 EIF_ANY

/* CHARACTER */
#define EIF_CHARACTER EIF_CHARACTER_8

/* WIDE_CHARACTER */
#define EIF_WIDE_CHAR EIF_CHARACTER_32

/* INTEGER */
#define EIF_INTEGER EIF_INTEGER_32

/* NATURAL */
#define EIF_NATURAL EIF_NATURAL_32

/* REAL */
#define EIF_REAL EIF_REAL_32

/* DOUBLE */
#define EIF_DOUBLE EIF_REAL_64

/* BOOLEAN */
#define T1 EIF_BOOLEAN
extern T0* GE_boxed1(T1 a1);
typedef struct Sb1 Tb1;

/* CHARACTER_8 */
#define T2 EIF_CHARACTER_8
extern T0* GE_boxed2(T2 a1);
typedef struct Sb2 Tb2;

/* CHARACTER_32 */
#define T3 EIF_CHARACTER_32
extern T0* GE_boxed3(T3 a1);
typedef struct Sb3 Tb3;

/* INTEGER_8 */
#define T4 EIF_INTEGER_8
extern T0* GE_boxed4(T4 a1);
typedef struct Sb4 Tb4;

/* INTEGER_16 */
#define T5 EIF_INTEGER_16
extern T0* GE_boxed5(T5 a1);
typedef struct Sb5 Tb5;

/* INTEGER_32 */
#define T6 EIF_INTEGER_32
extern T0* GE_boxed6(T6 a1);
typedef struct Sb6 Tb6;

/* INTEGER_64 */
#define T7 EIF_INTEGER_64
extern T0* GE_boxed7(T7 a1);
typedef struct Sb7 Tb7;

/* NATURAL_8 */
#define T8 EIF_NATURAL_8
extern T0* GE_boxed8(T8 a1);
typedef struct Sb8 Tb8;

/* NATURAL_16 */
#define T9 EIF_NATURAL_16
extern T0* GE_boxed9(T9 a1);
typedef struct Sb9 Tb9;

/* NATURAL_32 */
#define T10 EIF_NATURAL_32
extern T0* GE_boxed10(T10 a1);
typedef struct Sb10 Tb10;

/* NATURAL_64 */
#define T11 EIF_NATURAL_64
extern T0* GE_boxed11(T11 a1);
typedef struct Sb11 Tb11;

/* REAL_32 */
#define T12 EIF_REAL_32
extern T0* GE_boxed12(T12 a1);
typedef struct Sb12 Tb12;

/* REAL_64 */
#define T13 EIF_REAL_64
extern T0* GE_boxed13(T13 a1);
typedef struct Sb13 Tb13;

/* POINTER */
#define T14 EIF_POINTER
extern T0* GE_boxed14(T14 a1);
typedef struct Sb14 Tb14;

/* SPECIAL [CHARACTER_8] */
typedef struct S15 T15;

/* SPECIAL [CHARACTER_32] */
typedef struct S16 T16;

/* STRING_8 */
typedef struct S17 T17;

/* STRING_32 */
typedef struct S18 T18;

/* ISE_EXCEPTION_MANAGER */
typedef struct S19 T19;

/* GEC */
typedef struct S22 T22;

/* HASH_TABLE [INTEGER_32, INTEGER_32] */
typedef struct S23 T23;

/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
typedef struct S24 T24;

/* CELL [detachable EXCEPTION] */
typedef struct S25 T25;

/* CELL [NO_MORE_MEMORY] */
typedef struct S26 T26;

/* [attached] TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
typedef struct S27 T27;

/* KL_TEXT_INPUT_FILE */
typedef struct S29 T29;

/* KL_ARGUMENTS */
typedef struct S30 T30;

/* ET_ISE_VARIABLES */
typedef struct S31 T31;

/* UT_ERROR_HANDLER */
typedef struct S32 T32;

/* ET_SYSTEM */
typedef struct S33 T33;

/* KL_STRING_ROUTINES */
typedef struct S34 T34;

/* ET_ERROR_HANDLER */
typedef struct S36 T36;

/* KL_EXCEPTIONS */
typedef struct S37 T37;

/* AP_PARSER */
typedef struct S38 T38;

/* AP_ALTERNATIVE_OPTIONS_LIST */
typedef struct S39 T39;

/* AP_ERROR */
typedef struct S40 T40;

/* AP_FLAG */
typedef struct S41 T41;

/* AP_ENUMERATION_OPTION */
typedef struct S43 T43;

/* AP_BOOLEAN_OPTION */
typedef struct S44 T44;

/* AP_INTEGER_OPTION */
typedef struct S45 T45;

/* AP_STRING_OPTION */
typedef struct S46 T46;

/* AP_DISPLAY_HELP_FLAG */
typedef struct S50 T50;

/* ET_XACE_SYSTEM_PARSER */
typedef struct S52 T52;

/* ET_XACE_DEFAULT_ERROR_HANDLER */
typedef struct S53 T53;

/* DS_HASH_TABLE [STRING_8, STRING_8] */
typedef struct S54 T54;

/* ST_SPLITTER */
typedef struct S55 T55;

/* UC_STRING_EQUALITY_TESTER */
typedef struct S57 T57;

/* detachable KL_EQUALITY_TESTER [STRING_8] */
typedef struct S58 T58;

/* ET_XACE_SYSTEM */
typedef struct S61 T61;

/* ET_ECF_SYSTEM_PARSER */
typedef struct S62 T62;

/* ET_ECF_ERROR_HANDLER */
typedef struct S63 T63;

/* ET_ECF_SYSTEM */
typedef struct S64 T64;

/* ET_ECF_TARGET */
typedef struct S65 T65;

/* KL_EXECUTION_ENVIRONMENT */
typedef struct S66 T66;

/* ET_ECF_VARIABLES */
typedef struct S67 T67;

/* ET_LACE_PARSER */
typedef struct S68 T68;

/* ET_LACE_ERROR_HANDLER */
typedef struct S69 T69;

/* ET_LACE_SYSTEM */
typedef struct S70 T70;

/* ET_DYNAMIC_SYSTEM */
typedef struct S71 T71;

/* ET_C_GENERATOR */
typedef struct S74 T74;

/* KL_SHELL_COMMAND */
typedef struct S75 T75;

/* DS_HASH_SET [STRING_8] */
typedef struct S76 T76;

/* ET_NULL_ERROR_HANDLER */
typedef struct S77 T77;

/* UT_VERSION */
typedef struct S78 T78;

/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
typedef struct S79 T79;

/* ET_CLASS_TYPE */
typedef struct S80 T80;

/* ET_TOKEN_CONSTANTS */
typedef struct S81 T81;

/* ET_CLASS */
typedef struct S82 T82;

/* KL_OPERATING_SYSTEM */
typedef struct S84 T84;

/* UT_CANNOT_READ_FILE_ERROR */
typedef struct S86 T86;

/* UT_VERSION_NUMBER */
typedef struct S87 T87;

/* VOID_TARGET */
typedef struct S88 T88;

/* [attached] TYPE [VOID_TARGET] */
#define T89 EIF_TYPE

/* ROUTINE_FAILURE */
typedef struct S90 T90;

/* [attached] TYPE [ROUTINE_FAILURE] */
#define T91 EIF_TYPE

/* OLD_VIOLATION */
typedef struct S92 T92;

/* [attached] TYPE [OLD_VIOLATION] */
#define T93 EIF_TYPE

/* NO_MORE_MEMORY */
typedef struct S94 T94;

/* INVARIANT_VIOLATION */
typedef struct S95 T95;

/* OPERATING_SYSTEM_SIGNAL_FAILURE */
typedef struct S96 T96;

/* IO_FAILURE */
typedef struct S97 T97;

/* OPERATING_SYSTEM_FAILURE */
typedef struct S98 T98;

/* COM_FAILURE */
typedef struct S99 T99;

/* EIFFEL_RUNTIME_PANIC */
typedef struct S100 T100;

/* PRECONDITION_VIOLATION */
typedef struct S103 T103;

/* POSTCONDITION_VIOLATION */
typedef struct S104 T104;

/* FLOATING_POINT_FAILURE */
typedef struct S105 T105;

/* CHECK_VIOLATION */
typedef struct S106 T106;

/* BAD_INSPECT_VALUE */
typedef struct S107 T107;

/* VARIANT_VIOLATION */
typedef struct S108 T108;

/* LOOP_INVARIANT_VIOLATION */
typedef struct S109 T109;

/* RESCUE_FAILURE */
typedef struct S110 T110;

/* RESUMPTION_FAILURE */
typedef struct S111 T111;

/* CREATE_ON_DEFERRED */
typedef struct S112 T112;

/* EXTERNAL_FAILURE */
typedef struct S113 T113;

/* VOID_ASSIGNED_TO_EXPANDED */
typedef struct S114 T114;

/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
typedef struct S115 T115;

/* MISMATCH_FAILURE */
typedef struct S116 T116;

/* DEVELOPER_EXCEPTION */
typedef struct S117 T117;

/* ADDRESS_APPLIED_TO_MELTED_FEATURE */
typedef struct S118 T118;

/* SERIALIZATION_FAILURE */
typedef struct S119 T119;

/* KL_WINDOWS_FILE_SYSTEM */
typedef struct S120 T120;

/* KL_UNIX_FILE_SYSTEM */
typedef struct S121 T121;

/* PRIMES */
typedef struct S122 T122;

/* SPECIAL [INTEGER_32] */
typedef struct S123 T123;

/* SPECIAL [BOOLEAN] */
typedef struct S124 T124;

/* detachable KL_LINKABLE [CHARACTER_8] */
typedef struct S126 T126;

/* MANAGED_POINTER */
typedef struct S128 T128;

/* FILE_INFO */
typedef struct S129 T129;

/* KL_STANDARD_FILES */
typedef struct S130 T130;

/* KL_STDERR_FILE */
typedef struct S131 T131;

/* KL_STDOUT_FILE */
typedef struct S132 T132;

/* UC_STRING */
typedef struct S133 T133;

/* KL_ANY_ROUTINES */
typedef struct S134 T134;

/* DS_ARRAYED_LIST [STRING_8] */
typedef struct S136 T136;

/* DS_ARRAYED_LIST [AP_OPTION] */
typedef struct S137 T137;

/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S138 T138;

/* AP_ERROR_HANDLER */
typedef struct S139 T139;

/* DS_LINKED_LIST_CURSOR [AP_OPTION] */
typedef struct S140 T140;

/* SPECIAL [STRING_8] */
typedef struct S141 T141;

/* ARRAY [STRING_8] */
typedef struct S142 T142;

/* DS_LINKED_LIST [STRING_8] */
typedef struct S143 T143;

/* KL_STRING_EQUALITY_TESTER */
typedef struct S144 T144;

/* DS_LINKED_LIST [BOOLEAN] */
typedef struct S148 T148;

/* DS_LINKED_LIST [INTEGER_32] */
typedef struct S151 T151;

/* ST_WORD_WRAPPER */
typedef struct S152 T152;

/* ET_XACE_AST_FACTORY */
typedef struct S153 T153;

/* XM_DOCUMENT */
typedef struct S154 T154;

/* XM_ELEMENT */
typedef struct S155 T155;

/* XM_POSITION_TABLE */
typedef struct S156 T156;

/* XM_TREE_CALLBACKS_PIPE */
typedef struct S158 T158;

/* XM_STOP_ON_ERROR_FILTER */
typedef struct S159 T159;

/* XM_CALLBACKS_TO_TREE_FILTER */
typedef struct S160 T160;

/* ET_XACE_VALIDATOR */
typedef struct S161 T161;

/* ET_XACE_PREPROCESSOR */
typedef struct S162 T162;

/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8] */
typedef struct S163 T163;

/* XM_EXPAT_PARSER_FACTORY */
typedef struct S164 T164;

/* XM_EIFFEL_PARSER */
typedef struct S165 T165;

/* ET_XACE_LIBRARY_CONFIG_PARSER */
typedef struct S168 T168;

/* UT_MESSAGE */
typedef struct S169 T169;

/* KL_SPECIAL_ROUTINES [STRING_8] */
typedef struct S171 T171;

/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
typedef struct S172 T172;

/* KL_SPECIAL_ROUTINES [INTEGER_32] */
typedef struct S173 T173;

/* DS_LINKED_LIST_CURSOR [STRING_8] */
typedef struct S174 T174;

/* DS_HASH_SET [INTEGER_32] */
typedef struct S175 T175;

/* ET_ECF_AST_FACTORY */
typedef struct S176 T176;

/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
typedef struct S178 T178;

/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
typedef struct S179 T179;

/* ET_COMPRESSED_POSITION */
typedef struct S180 T180;

/* ET_IDENTIFIER */
typedef struct S182 T182;

/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
typedef struct S184 T184;

/* ET_ECF_STATE */
typedef struct S187 T187;

/* ET_ECF_TARGETS */
typedef struct S188 T188;

/* ET_ECF_LIBRARY */
typedef struct S189 T189;

/* ET_ADAPTED_LIBRARIES */
typedef struct S190 T190;

/* [attached] TUPLE [ET_ADAPTED_LIBRARY] */
typedef struct S192 T192;

/* detachable TUPLE */
typedef struct S193 T193;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ADAPTED_LIBRARY]] */
typedef struct S194 T194;

/* ET_ECF_LIBRARY_PARSER */
typedef struct S195 T195;

/* ET_ECF_ADAPTED_LIBRARY */
typedef struct S196 T196;

/* ET_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S197 T197;

/* ET_ECF_DOTNET_ASSEMBLY */
typedef struct S198 T198;

/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
typedef struct S200 T200;

/* ET_ECF_ERROR */
typedef struct S201 T201;

/* EXECUTION_ENVIRONMENT */
typedef struct S202 T202;

/* ET_LACE_AST_FACTORY */
typedef struct S203 T203;

/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S204 T204;

/* YY_FILE_BUFFER */
typedef struct S205 T205;

/* YY_BUFFER */
typedef struct S206 T206;

/* DS_HASH_SET [ET_IDENTIFIER] */
typedef struct S207 T207;

/* SPECIAL [detachable ANY] */
typedef struct S210 T210;

/* KL_SPECIAL_ROUTINES [detachable ANY] */
typedef struct S211 T211;

/* SPECIAL [ET_IDENTIFIER] */
typedef struct S212 T212;

/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
typedef struct S213 T213;

/* ET_LACE_CLUSTERS */
typedef struct S214 T214;

/* ET_LACE_CLUSTER */
typedef struct S215 T215;

/* ET_LACE_EXCLUDE */
typedef struct S216 T216;

/* ET_LACE_DOTNET_ASSEMBLY */
typedef struct S217 T217;

/* SPECIAL [ET_LACE_SYSTEM] */
typedef struct S218 T218;

/* SPECIAL [detachable ET_LACE_CLUSTERS] */
typedef struct S219 T219;

/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
typedef struct S220 T220;

/* KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM] */
typedef struct S221 T221;

/* KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS] */
typedef struct S222 T222;

/* SPECIAL [ET_LACE_CLUSTER] */
typedef struct S223 T223;

/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
typedef struct S224 T224;

/* SPECIAL [detachable ET_LACE_EXCLUDE] */
typedef struct S225 T225;

/* KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE] */
typedef struct S226 T226;

/* KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
typedef struct S227 T227;

/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S228 T228;

/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S229 T229;

/* ET_LACE_DOTNET_GAC_ASSEMBLY */
typedef struct S230 T230;

/* KL_PLATFORM */
typedef struct S231 T231;

/* KL_INTEGER_ROUTINES */
typedef struct S232 T232;

/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
typedef struct S233 T233;

/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
typedef struct S234 T234;

/* [attached] TUPLE [ET_CLASS] */
typedef struct S235 T235;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLASS]] */
typedef struct S236 T236;

/* [attached] TUPLE [INTEGER_32] */
typedef struct S237 T237;

/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
typedef struct S238 T238;

/* ET_DYNAMIC_TYPE */
typedef struct S239 T239;

/* DT_SHARED_SYSTEM_CLOCK */
typedef struct S240 T240;

/* DT_DATE_TIME */
typedef struct S241 T241;

/* DT_SYSTEM_CLOCK */
typedef struct S242 T242;

/* [attached] TUPLE [ET_DYNAMIC_SYSTEM] */
typedef struct S243 T243;

/* ET_DYNAMIC_FEATURE */
typedef struct S248 T248;

/* ET_ACTUAL_PARAMETER_LIST */
typedef struct S252 T252;

/* ET_EXTERNAL_FUNCTION */
typedef struct S260 T260;

/* ET_TUPLE_TYPE */
typedef struct S261 T261;

/* ET_FORMAL_ARGUMENT_LIST */
typedef struct S262 T262;

/* SPECIAL [ET_TYPE] */
typedef struct S263 T263;

/* detachable ARRAY [ET_TYPE] */
typedef struct S264 T264;

/* ET_FORMAL_ARGUMENT */
typedef struct S265 T265;

/* ET_QUERY_LIST */
typedef struct S266 T266;

/* ET_PROCEDURE_LIST */
typedef struct S267 T267;

/* KL_NULL_TEXT_OUTPUT_STREAM */
typedef struct S268 T268;

/* ET_DYNAMIC_TYPE_SET_LIST */
typedef struct S269 T269;

/* KL_STRING_OUTPUT_STREAM */
typedef struct S270 T270;

/* DS_ARRAYED_LIST [ET_IDENTIFIER] */
typedef struct S271 T271;

/* DS_ARRAYED_LIST [INTEGER_32] */
typedef struct S272 T272;

/* ET_DYNAMIC_TYPE_HASH_LIST */
typedef struct S273 T273;

/* ET_DYNAMIC_STANDALONE_TYPE_SET */
typedef struct S274 T274;

/* DS_ARRAYED_STACK [ET_EXPRESSION] */
typedef struct S275 T275;

/* DS_ARRAYED_LIST [ET_EXPRESSION] */
typedef struct S276 T276;

/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S277 T277;

/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
typedef struct S278 T278;

/* DS_HASH_SET [ET_DYNAMIC_TYPE] */
typedef struct S279 T279;

/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S280 T280;

/* DS_ARRAYED_LIST [ET_OBJECT_TEST] */
typedef struct S281 T281;

/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S282 T282;

/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
typedef struct S283 T283;

/* DS_ARRAYED_LIST [ET_AGENT] */
typedef struct S284 T284;

/* ET_EXPRESSION */
typedef struct S285 T285;

/* ET_CURRENT */
typedef struct S286 T286;

/* ET_ACTUAL_ARGUMENT_LIST */
typedef struct S287 T287;

/* ET_QUALIFIED_CALL_INSTRUCTION */
typedef struct S288 T288;

/* ET_QUALIFIED_CALL_EXPRESSION */
typedef struct S291 T291;

/* ET_UNQUALIFIED_CALL_EXPRESSION */
typedef struct S292 T292;

/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S293 T293;

/* ET_MANIFEST_TUPLE */
typedef struct S294 T294;

/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S295 T295;

/* DS_HASH_SET [ET_FEATURE] */
typedef struct S296 T296;

/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
typedef struct S297 T297;

/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
typedef struct S298 T298;

/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
typedef struct S299 T299;

/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
typedef struct S300 T300;

/* DS_HASH_TABLE [BOOLEAN, STRING_8] */
typedef struct S301 T301;

/* ET_IDENTIFIER_TESTER */
typedef struct S302 T302;

/* detachable KL_EQUALITY_TESTER [ET_IDENTIFIER] */
typedef struct S303 T303;

/* RX_PCRE_REGULAR_EXPRESSION */
typedef struct S304 T304;

/* KL_TEXT_OUTPUT_FILE */
typedef struct S305 T305;

/* ET_DYNAMIC_TUPLE_TYPE */
typedef struct S306 T306;

/* UT_TEMPLATE_EXPANDER */
typedef struct S307 T307;

/* UT_CANNOT_WRITE_TO_FILE_ERROR */
typedef struct S308 T308;

/* ET_DYNAMIC_FEATURE_LIST */
typedef struct S309 T309;

/* ET_DYNAMIC_PRECURSOR */
typedef struct S310 T310;

/* ET_DYNAMIC_PRECURSOR_LIST */
typedef struct S311 T311;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
typedef struct S312 T312;

/* ET_RESULT */
typedef struct S313 T313;

/* ET_DYNAMIC_QUALIFIED_QUERY_CALL */
typedef struct S314 T314;

/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
typedef struct S318 T318;

/* ET_OBJECT_TEST */
typedef struct S320 T320;

/* ET_OBJECT_EQUALITY_EXPRESSION */
typedef struct S321 T321;

/* ET_EQUALITY_EXPRESSION */
typedef struct S322 T322;

/* ET_DYNAMIC_SPECIAL_TYPE */
typedef struct S323 T323;

/* ET_CREATE_EXPRESSION */
typedef struct S326 T326;

/* ET_QUALIFIED_CALL */
typedef struct S327 T327;

/* KL_DIRECTORY */
typedef struct S330 T330;

/* ET_EXTENDED_ATTRIBUTE */
typedef struct S331 T331;

/* ET_COMPOUND */
typedef struct S332 T332;

/* ET_LOCAL_VARIABLE_LIST */
typedef struct S333 T333;

/* ET_DYNAMIC_FUNCTION_TYPE */
typedef struct S334 T334;

/* ET_DYNAMIC_PROCEDURE_TYPE */
typedef struct S335 T335;

/* DS_QUICK_SORTER [INTEGER_32] */
typedef struct S339 T339;

/* ET_IMPLICIT_TYPE_MARK */
typedef struct S345 T345;

/* ET_SYMBOL */
typedef struct S346 T346;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE] */
typedef struct S347 T347;

/* [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S348 T348;

/* [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S349 T349;

/* [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S351 T351;

/* [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S352 T352;

/* UT_INTEGER_FORMATTER */
typedef struct S353 T353;

/* STD_FILES */
typedef struct S357 T357;

/* [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S359 T359;

/* [attached] TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
typedef struct S361 T361;

/* [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S362 T362;

/* ET_CONSTANT_ATTRIBUTE */
typedef struct S363 T363;

/* ET_UNIQUE_ATTRIBUTE */
typedef struct S365 T365;

/* ET_ATTRIBUTE */
typedef struct S366 T366;

/* NATIVE_STRING */
typedef struct S368 T368;

/* DS_HASH_SET_CURSOR [STRING_8] */
typedef struct S369 T369;

/* ET_FEATURE_CHECKER */
typedef struct S370 T370;

/* DS_CELL [INTEGER_32] */
typedef struct S371 T371;

/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S372 T372;

/* ET_TYPE_CHECKER */
typedef struct S373 T373;

/* DS_ARRAYED_LIST [ET_INLINE_AGENT] */
typedef struct S375 T375;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S376 T376;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S377 T377;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S378 T378;

/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
typedef struct S379 T379;

/* ET_NESTED_TYPE_CONTEXT */
typedef struct S380 T380;

/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
typedef struct S381 T381;

/* ET_OBJECT_TEST_SCOPE */
typedef struct S382 T382;

/* ET_OBJECT_TEST_SCOPE_BUILDER */
typedef struct S383 T383;

/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
typedef struct S384 T384;

/* ET_ACROSS_CURSOR_SCOPE */
typedef struct S385 T385;

/* ET_ATTACHMENT_SCOPE */
typedef struct S386 T386;

/* ET_ATTACHMENT_SCOPE_BUILDER */
typedef struct S387 T387;

/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
typedef struct S388 T388;

/* ET_PRECONDITIONS */
typedef struct S389 T389;

/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE] */
typedef struct S390 T390;

/* ET_FEATURE_LIST */
typedef struct S392 T392;

/* ET_UNKNOWN_GROUP */
typedef struct S394 T394;

/* ET_BASE_TYPE_LIST */
typedef struct S396 T396;

/* ET_KEYWORD */
typedef struct S397 T397;

/* ET_CLASS_CODES */
typedef struct S398 T398;

/* ARGUMENTS_32 */
typedef struct S400 T400;

/* IMMUTABLE_STRING_32 */
typedef struct S401 T401;

/* ET_AST_FACTORY */
typedef struct S403 T403;

/* ET_XACE_EXTERNALS */
typedef struct S404 T404;

/* ET_XACE_OPTIONS */
typedef struct S405 T405;

/* XM_ATTRIBUTE */
typedef struct S406 T406;

/* ET_XACE_OPTION_NAMES */
typedef struct S409 T409;

/* ET_XACE_CLUSTER */
typedef struct S411 T411;

/* ET_XACE_CLUSTERS */
typedef struct S412 T412;

/* ET_XACE_MOUNTED_LIBRARY */
typedef struct S413 T413;

/* ET_XACE_MOUNTED_LIBRARIES */
typedef struct S414 T414;

/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S415 T415;

/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
typedef struct S417 T417;

/* ET_XACE_LIBRARY_CONFIG */
typedef struct S419 T419;

/* DS_HASH_TABLE [INTEGER_32, STRING_8] */
typedef struct S420 T420;

/* ET_XACE_CLASS_OPTIONS */
typedef struct S422 T422;

/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
typedef struct S423 T423;

/* ET_XACE_BOOLEAN_EXPECTED_ERROR */
typedef struct S424 T424;

/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
typedef struct S425 T425;

/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
typedef struct S426 T426;

/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
typedef struct S427 T427;

/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S428 T428;

/* ET_AST_NULL_PROCESSOR */
typedef struct S430 T430;

/* [attached] TUPLE [ET_UNIVERSE] */
typedef struct S431 T431;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_UNIVERSE]] */
typedef struct S432 T432;

/* [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]]] */
typedef struct S433 T433;

/* [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
typedef struct S435 T435;

/* DT_DATE_TIME_DURATION */
typedef struct S436 T436;

/* ET_IMPLEMENTATION_CHECKER */
typedef struct S437 T437;

/* ET_EIFFEL_PREPARSER */
typedef struct S438 T438;

/* ET_MASTER_CLASS_CHECKER */
typedef struct S439 T439;

/* ET_EIFFEL_PARSER */
typedef struct S440 T440;

/* ET_PROVIDER_CHECKER */
typedef struct S441 T441;

/* ET_ANCESTOR_BUILDER */
typedef struct S442 T442;

/* ET_FEATURE_FLATTENER */
typedef struct S443 T443;

/* ET_INTERFACE_CHECKER */
typedef struct S444 T444;

/* DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
typedef struct S446 T446;

/* ET_DOTNET_ASSEMBLIES */
typedef struct S447 T447;

/* ET_DOTNET_ASSEMBLY */
typedef struct S448 T448;

/* [attached] TUPLE [ET_DOTNET_ASSEMBLY] */
typedef struct S449 T449;

/* [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
typedef struct S450 T450;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
typedef struct S451 T451;

/* [attached] TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
typedef struct S452 T452;

/* [attached] TUPLE [ET_INTERNAL_UNIVERSE] */
typedef struct S453 T453;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_INTERNAL_UNIVERSE]] */
typedef struct S454 T454;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]]] */
typedef struct S455 T455;

/* [attached] TUPLE [ET_DOTNET_ASSEMBLIES] */
typedef struct S457 T457;

/* ET_LIBRARY */
typedef struct S460 T460;

/* [attached] TUPLE [ET_LIBRARY] */
typedef struct S461 T461;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_LIBRARY]] */
typedef struct S462 T462;

/* DS_ARRAYED_LIST_CURSOR [STRING_8] */
typedef struct S463 T463;

/* ET_CLASS_NAME_TESTER */
typedef struct S465 T465;

/* ET_PARENT */
typedef struct S467 T467;

/* ET_PARENT_LIST */
typedef struct S468 T468;

/* ET_CLIENT_LIST */
typedef struct S469 T469;

/* ET_BUILTIN_CONVERT_FEATURE */
typedef struct S470 T470;

/* ET_MASTER_CLASS */
typedef struct S471 T471;

/* DS_HASH_SET [ET_UNIVERSE] */
typedef struct S472 T472;

/* [attached] TUPLE [ET_AST_PROCESSOR] */
typedef struct S473 T473;

/* [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_CLASS]] */
typedef struct S474 T474;

/* [attached] TUPLE [ET_MASTER_CLASS] */
typedef struct S476 T476;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_MASTER_CLASS]] */
typedef struct S477 T477;

/* [attached] TUPLE [ET_CLUSTER] */
typedef struct S479 T479;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLUSTER]] */
typedef struct S480 T480;

/* [attached] TUPLE [ET_XACE_SYSTEM] */
typedef struct S481 T481;

/* DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
typedef struct S483 T483;

/* [attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S485 T485;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
typedef struct S486 T486;

/* ET_ANCESTORS_STATUS_CHECKER */
typedef struct S488 T488;

/* ET_FLATTENING_STATUS_CHECKER */
typedef struct S489 T489;

/* ET_INTERFACE_STATUS_CHECKER */
typedef struct S490 T490;

/* ET_IMPLEMENTATION_STATUS_CHECKER */
typedef struct S491 T491;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLASS]]] */
typedef struct S492 T492;

/* [attached] TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
typedef struct S493 T493;

/* [attached] TUPLE [ET_FLATTENING_STATUS_CHECKER] */
typedef struct S494 T494;

/* [attached] TUPLE [ET_INTERFACE_STATUS_CHECKER] */
typedef struct S495 T495;

/* [attached] TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
typedef struct S496 T496;

/* [attached] TUPLE [BOOLEAN] */
typedef struct S497 T497;

/* ET_CLIENT */
typedef struct S498 T498;

/* ET_RENAME_LIST */
typedef struct S499 T499;

/* ET_EXPORT_LIST */
typedef struct S500 T500;

/* ET_KEYWORD_FEATURE_NAME_LIST */
typedef struct S501 T501;

/* ET_LIKE_CURRENT */
typedef struct S504 T504;

/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
typedef struct S505 T505;

/* ET_NONE_GROUP */
typedef struct S506 T506;

/* [attached] TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
typedef struct S507 T507;

/* [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]], FUNCTION [ANY, TUPLE [ET_CLASS], BOOLEAN]] */
typedef struct S508 T508;

/* [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]], FUNCTION [ANY, TUPLE [ET_CLASS], BOOLEAN], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
typedef struct S509 T509;

/* [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]]] */
typedef struct S510 T510;

/* [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
typedef struct S511 T511;

/* [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLUSTER]]] */
typedef struct S514 T514;

/* [attached] TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
typedef struct S518 T518;

/* XM_NAMESPACE */
typedef struct S521 T521;

/* ARRAY [INTEGER_32] */
typedef struct S522 T522;

/* KL_ARRAY_ROUTINES [INTEGER_32] */
typedef struct S523 T523;

/* UT_CONFIG_PARSER */
typedef struct S524 T524;

/* KL_COMPARABLE_COMPARATOR [INTEGER_32] */
typedef struct S525 T525;

/* ET_DO_PROCEDURE */
typedef struct S528 T528;

/* ET_SYSTEM_ERROR */
typedef struct S530 T530;

/* ET_INTERNAL_ERROR */
typedef struct S531 T531;

/* ET_VALIDITY_ERROR */
typedef struct S532 T532;

/* ET_DYNAMIC_PUSH_TYPE_SET */
typedef struct S533 T533;

/* ET_DEFERRED_PROCEDURE */
typedef struct S534 T534;

/* UTF_CONVERTER */
typedef struct S535 T535;
extern T0* GE_boxed535(T535 a1);
typedef struct Sb535 Tb535;

/* CELL [INTEGER_32] */
typedef struct S536 T536;

/* C_STRING */
typedef struct S537 T537;

/* KL_PATHNAME */
typedef struct S539 T539;

/* PLATFORM */
typedef struct S540 T540;

/* READABLE_STRING_32 */
typedef struct S541 T541;

/* SPECIAL [NATURAL_8] */
typedef struct S542 T542;

/* TYPED_POINTER [SPECIAL [NATURAL_8]] */
typedef struct S543 T543;
extern T0* GE_boxed543(T543 a1);
typedef struct Sb543 Tb543;

/* TYPED_POINTER [ANY] */
typedef struct S544 T544;
extern T0* GE_boxed544(T544 a1);
typedef struct Sb544 Tb544;

/* DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
typedef struct S545 T545;

/* SPECIAL [AP_OPTION] */
typedef struct S547 T547;

/* KL_SPECIAL_ROUTINES [AP_OPTION] */
typedef struct S548 T548;

/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S549 T549;

/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S550 T550;

/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S551 T551;

/* detachable DS_LINKABLE [STRING_8] */
typedef struct S552 T552;

/* detachable DS_LINKABLE [BOOLEAN] */
typedef struct S553 T553;

/* DS_LINKED_LIST_CURSOR [BOOLEAN] */
typedef struct S554 T554;

/* detachable DS_LINKABLE [INTEGER_32] */
typedef struct S555 T555;

/* DS_LINKED_LIST_CURSOR [INTEGER_32] */
typedef struct S556 T556;

/* XM_NAMESPACE_RESOLVER */
typedef struct S557 T557;

/* SPECIAL [XM_CALLBACKS_FILTER] */
typedef struct S558 T558;

/* ARRAY [XM_CALLBACKS_FILTER] */
typedef struct S559 T559;

/* XM_CALLBACKS_NULL */
typedef struct S560 T560;

/* DS_HASH_SET [XM_NAMESPACE] */
typedef struct S561 T561;

/* detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8] */
typedef struct S567 T567;

/* SPECIAL [ET_XACE_LIBRARY_CONFIG] */
typedef struct S568 T568;

/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG] */
typedef struct S569 T569;

/* XM_EIFFEL_SCANNER */
typedef struct S570 T570;

/* XM_DEFAULT_POSITION */
typedef struct S571 T571;

/* DS_BILINKED_LIST [XM_POSITION] */
typedef struct S573 T573;

/* DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
typedef struct S574 T574;

/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S575 T575;

/* XM_NULL_EXTERNAL_RESOLVER */
typedef struct S577 T577;

/* XM_DTD_CALLBACKS_NULL */
typedef struct S579 T579;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
typedef struct S580 T580;

/* XM_EIFFEL_PARSER_NAME */
typedef struct S581 T581;

/* SPECIAL [XM_EIFFEL_PARSER_NAME] */
typedef struct S582 T582;

/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S583 T583;

/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
typedef struct S584 T584;

/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S585 T585;

/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
typedef struct S586 T586;

/* XM_DTD_EXTERNAL_ID */
typedef struct S587 T587;

/* SPECIAL [XM_DTD_EXTERNAL_ID] */
typedef struct S588 T588;

/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
typedef struct S589 T589;

/* XM_DTD_ELEMENT_CONTENT */
typedef struct S590 T590;

/* SPECIAL [XM_DTD_ELEMENT_CONTENT] */
typedef struct S591 T591;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S592 T592;

/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S593 T593;

/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S594 T594;

/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S595 T595;

/* XM_DTD_ATTRIBUTE_CONTENT */
typedef struct S596 T596;

/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S597 T597;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
typedef struct S598 T598;

/* DS_BILINKED_LIST [STRING_8] */
typedef struct S599 T599;

/* SPECIAL [DS_BILINKED_LIST [STRING_8]] */
typedef struct S600 T600;

/* KL_SPECIAL_ROUTINES [BOOLEAN] */
typedef struct S601 T601;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
typedef struct S602 T602;

/* XM_EIFFEL_DECLARATION */
typedef struct S603 T603;

/* SPECIAL [XM_EIFFEL_DECLARATION] */
typedef struct S604 T604;

/* XM_EIFFEL_ENTITY_DEF */
typedef struct S607 T607;

/* XM_EIFFEL_SCANNER_DTD */
typedef struct S608 T608;

/* XM_EIFFEL_PE_ENTITY_DEF */
typedef struct S610 T610;

/* DS_HASH_SET_CURSOR [INTEGER_32] */
typedef struct S611 T611;

/* detachable KL_EQUALITY_TESTER [INTEGER_32] */
typedef struct S612 T612;

/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
typedef struct S613 T613;

/* SPECIAL [ET_ECF_LIBRARY] */
typedef struct S614 T614;

/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
typedef struct S617 T617;

/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
typedef struct S618 T618;

/* detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
typedef struct S621 T621;

/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
typedef struct S622 T622;

/* DS_ARRAYED_LIST [ET_ECF_TARGET] */
typedef struct S623 T623;

/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
typedef struct S624 T624;

/* DS_HASH_SET [ET_LIBRARY] */
typedef struct S625 T625;

/* [attached] TUPLE [DS_HASH_SET [ET_LIBRARY]] */
typedef struct S626 T626;

/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S627 T627;

/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
typedef struct S628 T628;

/* detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S630 T630;

/* DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
typedef struct S631 T631;

/* [attached] TYPE [ET_IDENTIFIER] */
#define T632 EIF_TYPE

/* DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
typedef struct S633 T633;

/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
typedef struct S636 T636;

/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
typedef struct S637 T637;

/* SPECIAL [ET_MASTER_CLASS] */
typedef struct S638 T638;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
typedef struct S639 T639;

/* SPECIAL [ET_CLASS_NAME] */
typedef struct S640 T640;

/* SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S641 T641;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
typedef struct S642 T642;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S643 T643;

/* ET_FORMAL_PARAMETER_LIST */
typedef struct S644 T644;

/* C_DATE */
typedef struct S646 T646;

/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S650 T650;

/* ET_BRACKET_SYMBOL */
typedef struct S651 T651;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S653 T653;

/* SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S655 T655;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
typedef struct S656 T656;

/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
typedef struct S657 T657;

/* DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
typedef struct S658 T658;

/* SPECIAL [ET_EXPRESSION] */
typedef struct S660 T660;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
typedef struct S661 T661;

/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
typedef struct S662 T662;

/* detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S664 T664;

/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S665 T665;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S666 T666;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S667 T667;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S668 T668;

/* SPECIAL [ET_OBJECT_TEST] */
typedef struct S670 T670;

/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
typedef struct S671 T671;

/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
typedef struct S672 T672;

/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S673 T673;

/* KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S674 T674;

/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S675 T675;

/* SPECIAL [ET_EQUALITY_EXPRESSION] */
typedef struct S676 T676;

/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
typedef struct S677 T677;

/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
typedef struct S678 T678;

/* SPECIAL [ET_AGENT] */
typedef struct S679 T679;

/* KL_SPECIAL_ROUTINES [ET_AGENT] */
typedef struct S680 T680;

/* DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
typedef struct S681 T681;

/* SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S682 T682;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
typedef struct S684 T684;

/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S685 T685;

/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S686 T686;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S687 T687;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S688 T688;

/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S689 T689;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S690 T690;

/* DS_HASH_SET_CURSOR [ET_FEATURE] */
typedef struct S691 T691;

/* KL_SPECIAL_ROUTINES [ET_FEATURE] */
typedef struct S693 T693;

/* SPECIAL [ET_FEATURE] */
typedef struct S694 T694;

/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S695 T695;

/* SPECIAL [ET_CONSTANT] */
typedef struct S696 T696;

/* KL_SPECIAL_ROUTINES [ET_CONSTANT] */
typedef struct S698 T698;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
typedef struct S699 T699;

/* SPECIAL [ET_INLINE_CONSTANT] */
typedef struct S700 T700;

/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
typedef struct S702 T702;

/* SPECIAL [detachable ET_DYNAMIC_FEATURE] */
typedef struct S703 T703;

/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
typedef struct S705 T705;

/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
typedef struct S706 T706;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
typedef struct S707 T707;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
typedef struct S708 T708;

/* RX_BYTE_CODE */
typedef struct S712 T712;

/* RX_CHARACTER_SET */
typedef struct S713 T713;

/* RX_CASE_MAPPING */
typedef struct S714 T714;

/* SPECIAL [RX_CHARACTER_SET] */
typedef struct S716 T716;

/* ARRAY [RX_CHARACTER_SET] */
typedef struct S717 T717;

/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S718 T718;

/* ARRAY [BOOLEAN] */
typedef struct S719 T719;

/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S722 T722;

/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
typedef struct S725 T725;

/* SPECIAL [ET_INLINE_AGENT] */
typedef struct S727 T727;

/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
typedef struct S728 T728;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S729 T729;

/* DS_ARRAYED_LIST [ET_PROCEDURE] */
typedef struct S730 T730;

/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S731 T731;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S732 T732;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S733 T733;

/* DS_ARRAYED_LIST [ET_QUERY] */
typedef struct S734 T734;

/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S735 T735;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S736 T736;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S737 T737;

/* DS_ARRAYED_LIST [ET_FEATURE] */
typedef struct S738 T738;

/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S739 T739;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S740 T740;

/* SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S741 T741;

/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
typedef struct S742 T742;

/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
typedef struct S743 T743;

/* KL_SPECIAL_ROUTINES [ET_TYPE] */
typedef struct S744 T744;

/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
typedef struct S745 T745;

/* ET_NAMED_OBJECT_TEST */
typedef struct S748 T748;

/* SPECIAL [ET_NAMED_OBJECT_TEST] */
typedef struct S749 T749;

/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
typedef struct S750 T750;

/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
typedef struct S751 T751;

/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
typedef struct S752 T752;

/* SPECIAL [ET_ACROSS_COMPONENT] */
typedef struct S755 T755;

/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT] */
typedef struct S756 T756;

/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT] */
typedef struct S757 T757;

/* SPECIAL [ET_ATTACHMENT_SCOPE] */
typedef struct S759 T759;

/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
typedef struct S760 T760;

/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
typedef struct S761 T761;

/* DS_HASH_TABLE_CURSOR [ET_PRECONDITIONS, ET_FEATURE] */
typedef struct S762 T762;

/* SPECIAL [ET_PRECONDITIONS] */
typedef struct S763 T763;

/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
typedef struct S765 T765;

/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
typedef struct S766 T766;

/* STRING_TO_INTEGER_CONVERTOR */
typedef struct S767 T767;

/* STRING_8_SEARCHER */
typedef struct S769 T769;

/* detachable ARRAYED_LIST [INTEGER_32] */
typedef struct S770 T770;

/* ET_CLUSTERS */
typedef struct S771 T771;

/* UC_UNICODE_ROUTINES */
typedef struct S772 T772;

/* ET_XACE_FEATURE_OPTIONS */
typedef struct S773 T773;

/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
typedef struct S774 T774;

/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
typedef struct S775 T775;

/* ET_XACE_MISSING_ATTRIBUTE_ERROR */
typedef struct S776 T776;

/* ET_XACE_UNKNOWN_ELEMENT_ERROR */
typedef struct S777 T777;

/* ET_XACE_MISSING_ELEMENT_ERROR */
typedef struct S778 T778;

/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
typedef struct S779 T779;

/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
typedef struct S780 T780;

/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
typedef struct S781 T781;

/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S782 T782;

/* UT_COUNTER */
typedef struct S785 T785;

/* KL_AGENT_ROUTINES [ET_CLASS] */
typedef struct S786 T786;

/* [attached] TUPLE [UT_COUNTER] */
typedef struct S787 T787;

/* [attached] TUPLE [KL_AGENT_ROUTINES [ET_CLASS], [attached] PROCEDURE [[attached] NONE, [attached] TUPLE]] */
typedef struct S788 T788;

/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
typedef struct S789 T789;

/* UT_TRISTATE */
typedef struct S790 T790;

/* KL_AGENT_ROUTINES [ANY] */
typedef struct S791 T791;

/* [attached] TUPLE [UT_TRISTATE] */
typedef struct S792 T792;

/* [attached] TUPLE [KL_AGENT_ROUTINES [ANY], [attached] PROCEDURE [[attached] NONE, [attached] TUPLE]] */
typedef struct S793 T793;

/* [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_MASTER_CLASS]] */
typedef struct S794 T794;

/* [attached] PREDICATE [[attached] NONE, [attached] TUPLE] */
typedef struct S795 T795;

/* [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]], FUNCTION [ANY, TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
typedef struct S797 T797;

/* [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]], FUNCTION [ANY, TUPLE [ET_MASTER_CLASS], BOOLEAN], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
typedef struct S798 T798;

/* ET_ECF_CLUSTER */
typedef struct S799 T799;

/* ET_ECF_CLUSTERS */
typedef struct S800 T800;

/* ET_ECF_ADAPTED_LIBRARIES */
typedef struct S801 T801;

/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S802 T802;

/* ET_ECF_FILE_RULE */
typedef struct S803 T803;

/* ET_ECF_FILE_RULES */
typedef struct S804 T804;

/* ET_ECF_EXTERNAL_INCLUDE */
typedef struct S805 T805;

/* ET_ECF_EXTERNAL_INCLUDES */
typedef struct S806 T806;

/* ET_ECF_EXTERNAL_OBJECT */
typedef struct S807 T807;

/* ET_ECF_EXTERNAL_OBJECTS */
typedef struct S808 T808;

/* ET_ECF_EXTERNAL_LIBRARY */
typedef struct S809 T809;

/* ET_ECF_EXTERNAL_LIBRARIES */
typedef struct S810 T810;

/* ET_ECF_SETTINGS */
typedef struct S812 T812;

/* ET_ECF_OPTIONS */
typedef struct S813 T813;

/* ET_ECF_CONDITIONS */
typedef struct S814 T814;

/* ET_ECF_ROOT_CLASS */
typedef struct S815 T815;

/* ET_ECF_ROOT_ALL_CLASSES */
typedef struct S816 T816;

/* ET_ECF_PLATFORM_CONDITION */
typedef struct S818 T818;

/* ET_ECF_BUILD_CONDITION */
typedef struct S819 T819;

/* ET_ECF_MULTITHREADED_CONDITION */
typedef struct S820 T820;

/* ET_ECF_CONCURRENCY_CONDITION */
typedef struct S821 T821;

/* ET_ECF_DOTNET_CONDITION */
typedef struct S822 T822;

/* ET_ECF_DYNAMIC_RUNTIME_CONDITION */
typedef struct S823 T823;

/* ET_ECF_CUSTOM_CONDITION */
typedef struct S824 T824;

/* ET_ECF_COMPILER_VERSION_CONDITION */
typedef struct S826 T826;

/* [attached] TUPLE [ET_ECF_SYSTEM] */
typedef struct S827 T827;

/* [attached] TUPLE [ET_LACE_SYSTEM] */
typedef struct S828 T828;

/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
typedef struct S831 T831;

/* ET_REGULAR_MANIFEST_STRING */
typedef struct S832 T832;

/* ET_INFIX_FREE_NAME */
typedef struct S833 T833;

/* ET_CREATOR_LIST */
typedef struct S834 T834;

/* EXCEPTIONS */
typedef struct S836 T836;

/* XM_LINKED_LIST [XM_DOCUMENT_NODE] */
typedef struct S837 T837;

/* XM_LINKED_LIST [XM_ELEMENT_NODE] */
typedef struct S839 T839;

/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S843 T843;

/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S844 T844;

/* DS_PAIR [XM_POSITION, XM_NODE] */
typedef struct S845 T845;

/* UC_UTF8_ROUTINES */
typedef struct S846 T846;

/* UC_UTF8_STRING */
typedef struct S847 T847;

/* XM_EIFFEL_INPUT_STREAM */
typedef struct S848 T848;

/* [attached] TYPE [INTEGER_32] */
#define T851 EIF_TYPE

/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
typedef struct S852 T852;

/* KL_CHARACTER_BUFFER */
typedef struct S855 T855;

/* [attached] TUPLE [ET_LACE_CLUSTER] */
typedef struct S856 T856;

/* ET_CLUSTER_DEPENDENCE_CONSTRAINT */
typedef struct S857 T857;

/* SPECIAL [ET_QUERY] */
typedef struct S858 T858;

/* ET_ALIAS_NAME */
typedef struct S859 T859;

/* KL_SPECIAL_ROUTINES [ET_QUERY] */
typedef struct S860 T860;

/* SPECIAL [ET_PROCEDURE] */
typedef struct S861 T861;

/* KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
typedef struct S862 T862;

/* CONSOLE */
typedef struct S866 T866;

/* ET_LIKE_N */
typedef struct S867 T867;

/* SPECIAL [ET_BASE_TYPE] */
typedef struct S868 T868;

/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
typedef struct S869 T869;

/* SPECIAL [IMMUTABLE_STRING_32] */
typedef struct S870 T870;

/* ARRAY [IMMUTABLE_STRING_32] */
typedef struct S871 T871;

/* detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
typedef struct S872 T872;

/* DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
typedef struct S873 T873;

/* [attached] TUPLE [ET_XACE_CLUSTER] */
typedef struct S874 T874;

/* SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S875 T875;

/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S876 T876;

/* DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S877 T877;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
typedef struct S879 T879;

/* detachable DS_HASH_SET [ET_NAMED_CLASS] */
typedef struct S881 T881;

/* DS_HASH_SET [ET_PROCEDURE] */
typedef struct S882 T882;

/* DS_HASH_SET [ET_QUERY] */
typedef struct S883 T883;

/* ET_SUPPLIER_BUILDER */
typedef struct S884 T884;

/* ET_POSTCONDITIONS */
typedef struct S886 T886;

/* ET_INVARIANTS */
typedef struct S887 T887;

/* KL_STDIN_FILE */
typedef struct S888 T888;

/* DS_ARRAYED_STACK [INTEGER_32] */
typedef struct S890 T890;

/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S891 T891;

/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S892 T892;

/* DS_ARRAYED_STACK [detachable ET_KEYWORD] */
typedef struct S893 T893;

/* DS_ARRAYED_STACK [detachable ET_SYMBOL] */
typedef struct S894 T894;

/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
typedef struct S895 T895;

/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S896 T896;

/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
typedef struct S897 T897;

/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
typedef struct S898 T898;

/* KL_STRING_INPUT_STREAM */
typedef struct S899 T899;

/* ET_TEXT_GROUP */
typedef struct S900 T900;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
typedef struct S901 T901;

/* SPECIAL [detachable ET_KEYWORD] */
typedef struct S902 T902;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
typedef struct S903 T903;

/* ET_AGENT_KEYWORD */
typedef struct S904 T904;

/* SPECIAL [detachable ET_AGENT_KEYWORD] */
typedef struct S905 T905;

/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
typedef struct S906 T906;

/* ET_PRECURSOR_KEYWORD */
typedef struct S907 T907;

/* SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
typedef struct S908 T908;

/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
typedef struct S909 T909;

/* SPECIAL [detachable ET_SYMBOL] */
typedef struct S910 T910;

/* KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
typedef struct S911 T911;

/* SPECIAL [detachable ET_POSITION] */
typedef struct S912 T912;

/* KL_SPECIAL_ROUTINES [detachable ET_BIT_CONSTANT] */
typedef struct S913 T913;

/* ET_BIT_CONSTANT */
typedef struct S914 T914;

/* SPECIAL [detachable ET_BIT_CONSTANT] */
typedef struct S915 T915;

/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
typedef struct S916 T916;

/* SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
typedef struct S918 T918;

/* KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
typedef struct S919 T919;

/* SPECIAL [detachable ET_BREAK] */
typedef struct S921 T921;

/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
typedef struct S922 T922;

/* SPECIAL [detachable ET_CHARACTER_CONSTANT] */
typedef struct S924 T924;

/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
typedef struct S925 T925;

/* SPECIAL [detachable ET_CURRENT] */
typedef struct S926 T926;

/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
typedef struct S927 T927;

/* ET_FREE_OPERATOR */
typedef struct S928 T928;

/* SPECIAL [detachable ET_FREE_OPERATOR] */
typedef struct S929 T929;

/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
typedef struct S930 T930;

/* SPECIAL [detachable ET_INTEGER_CONSTANT] */
typedef struct S932 T932;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
typedef struct S933 T933;

/* ET_KEYWORD_OPERATOR */
typedef struct S934 T934;

/* SPECIAL [detachable ET_KEYWORD_OPERATOR] */
typedef struct S935 T935;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
typedef struct S936 T936;

/* SPECIAL [detachable ET_MANIFEST_STRING] */
typedef struct S937 T937;

/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
typedef struct S938 T938;

/* SPECIAL [detachable ET_REAL_CONSTANT] */
typedef struct S940 T940;

/* KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
typedef struct S941 T941;

/* SPECIAL [detachable ET_RESULT] */
typedef struct S942 T942;

/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
typedef struct S943 T943;

/* ET_RETRY_INSTRUCTION */
typedef struct S944 T944;

/* SPECIAL [detachable ET_RETRY_INSTRUCTION] */
typedef struct S945 T945;

/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
typedef struct S946 T946;

/* ET_SYMBOL_OPERATOR */
typedef struct S947 T947;

/* SPECIAL [detachable ET_SYMBOL_OPERATOR] */
typedef struct S948 T948;

/* KL_SPECIAL_ROUTINES [detachable ET_VOID] */
typedef struct S949 T949;

/* ET_VOID */
typedef struct S950 T950;

/* SPECIAL [detachable ET_VOID] */
typedef struct S951 T951;

/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
typedef struct S952 T952;

/* ET_SEMICOLON_SYMBOL */
typedef struct S953 T953;

/* SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
typedef struct S954 T954;

/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
typedef struct S955 T955;

/* SPECIAL [detachable ET_BRACKET_SYMBOL] */
typedef struct S956 T956;

/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
typedef struct S957 T957;

/* ET_QUESTION_MARK_SYMBOL */
typedef struct S958 T958;

/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
typedef struct S959 T959;

/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
typedef struct S960 T960;

/* ET_ACROSS_EXPRESSION */
typedef struct S961 T961;

/* SPECIAL [detachable ET_ACROSS_EXPRESSION] */
typedef struct S962 T962;

/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
typedef struct S963 T963;

/* ET_ACROSS_INSTRUCTION */
typedef struct S964 T964;

/* SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
typedef struct S965 T965;

/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S966 T966;

/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S967 T967;

/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef struct S968 T968;

/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef struct S969 T969;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S970 T970;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S971 T971;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S972 T972;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S974 T974;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S975 T975;

/* ET_AGENT_ARGUMENT_OPERAND_LIST */
typedef struct S976 T976;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S977 T977;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
typedef struct S978 T978;

/* SPECIAL [detachable ET_AGENT_TARGET] */
typedef struct S979 T979;

/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
typedef struct S980 T980;

/* SPECIAL [detachable ET_ALIAS_NAME] */
typedef struct S981 T981;

/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
typedef struct S982 T982;

/* SPECIAL [detachable ET_ASSIGNER] */
typedef struct S984 T984;

/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_ARGUMENT_LIST] */
typedef struct S985 T985;

/* ET_BRACKET_ARGUMENT_LIST */
typedef struct S986 T986;

/* SPECIAL [detachable ET_BRACKET_ARGUMENT_LIST] */
typedef struct S987 T987;

/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
typedef struct S988 T988;

/* ET_BRACKET_EXPRESSION */
typedef struct S989 T989;

/* SPECIAL [detachable ET_BRACKET_EXPRESSION] */
typedef struct S990 T990;

/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
typedef struct S991 T991;

/* ET_CALL_AGENT */
typedef struct S992 T992;

/* SPECIAL [detachable ET_CALL_AGENT] */
typedef struct S993 T993;

/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
typedef struct S994 T994;

/* ET_CHECK_INSTRUCTION */
typedef struct S995 T995;

/* SPECIAL [detachable ET_CHECK_INSTRUCTION] */
typedef struct S996 T996;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
typedef struct S997 T997;

/* SPECIAL [detachable ET_CHOICE] */
typedef struct S999 T999;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
typedef struct S1000 T1000;

/* SPECIAL [detachable ET_CHOICE_CONSTANT] */
typedef struct S1002 T1002;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
typedef struct S1003 T1003;

/* SPECIAL [detachable ET_CHOICE_ITEM] */
typedef struct S1005 T1005;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
typedef struct S1006 T1006;

/* ET_CHOICE_LIST */
typedef struct S1007 T1007;

/* SPECIAL [detachable ET_CHOICE_LIST] */
typedef struct S1008 T1008;

/* KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
typedef struct S1009 T1009;

/* SPECIAL [detachable ET_CLASS] */
typedef struct S1010 T1010;

/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
typedef struct S1011 T1011;

/* SPECIAL [detachable ET_CLIENT_ITEM] */
typedef struct S1012 T1012;

/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
typedef struct S1013 T1013;

/* ET_CLIENTS */
typedef struct S1014 T1014;

/* SPECIAL [detachable ET_CLIENTS] */
typedef struct S1015 T1015;

/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
typedef struct S1016 T1016;

/* SPECIAL [detachable ET_COMPOUND] */
typedef struct S1017 T1017;

/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
typedef struct S1018 T1018;

/* SPECIAL [detachable ET_CONDITIONAL] */
typedef struct S1020 T1020;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1021 T1021;

/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1023 T1023;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1024 T1024;

/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
typedef struct S1025 T1025;

/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1026 T1026;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
typedef struct S1027 T1027;

/* ET_CONSTRAINT_CREATOR */
typedef struct S1028 T1028;

/* SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
typedef struct S1029 T1029;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1030 T1030;

/* SPECIAL [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1032 T1032;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
typedef struct S1033 T1033;

/* SPECIAL [detachable ET_CONVERT_FEATURE] */
typedef struct S1035 T1035;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
typedef struct S1036 T1036;

/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
typedef struct S1038 T1038;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
typedef struct S1039 T1039;

/* ET_CONVERT_FEATURE_LIST */
typedef struct S1040 T1040;

/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
typedef struct S1041 T1041;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
typedef struct S1042 T1042;

/* SPECIAL [detachable ET_CREATE_EXPRESSION] */
typedef struct S1043 T1043;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
typedef struct S1044 T1044;

/* ET_CREATOR */
typedef struct S1045 T1045;

/* SPECIAL [detachable ET_CREATOR] */
typedef struct S1046 T1046;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
typedef struct S1047 T1047;

/* SPECIAL [detachable ET_CREATOR_LIST] */
typedef struct S1048 T1048;

/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
typedef struct S1049 T1049;

/* ET_DEBUG_INSTRUCTION */
typedef struct S1050 T1050;

/* SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
typedef struct S1051 T1051;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
typedef struct S1052 T1052;

/* ET_ELSEIF_PART */
typedef struct S1053 T1053;

/* SPECIAL [detachable ET_ELSEIF_PART] */
typedef struct S1054 T1054;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
typedef struct S1055 T1055;

/* ET_ELSEIF_PART_LIST */
typedef struct S1056 T1056;

/* SPECIAL [detachable ET_ELSEIF_PART_LIST] */
typedef struct S1057 T1057;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
typedef struct S1058 T1058;

/* SPECIAL [detachable ET_EXPORT] */
typedef struct S1060 T1060;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
typedef struct S1061 T1061;

/* SPECIAL [detachable ET_EXPORT_LIST] */
typedef struct S1062 T1062;

/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
typedef struct S1063 T1063;

/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
typedef struct S1064 T1064;

/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
typedef struct S1065 T1065;

/* SPECIAL [detachable ET_EXTERNAL_ALIAS] */
typedef struct S1067 T1067;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
typedef struct S1068 T1068;

/* ET_FEATURE_CLAUSE */
typedef struct S1069 T1069;

/* SPECIAL [detachable ET_FEATURE_CLAUSE] */
typedef struct S1070 T1070;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
typedef struct S1071 T1071;

/* ET_FEATURE_CLAUSE_LIST */
typedef struct S1072 T1072;

/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
typedef struct S1073 T1073;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
typedef struct S1074 T1074;

/* ET_FEATURE_EXPORT */
typedef struct S1075 T1075;

/* SPECIAL [detachable ET_FEATURE_EXPORT] */
typedef struct S1076 T1076;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
typedef struct S1077 T1077;

/* SPECIAL [detachable ET_FEATURE_NAME] */
typedef struct S1078 T1078;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
typedef struct S1079 T1079;

/* SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
typedef struct S1081 T1081;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
typedef struct S1082 T1082;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT] */
typedef struct S1083 T1083;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1084 T1084;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1086 T1086;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1087 T1087;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1088 T1088;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
typedef struct S1089 T1089;

/* ET_FORMAL_PARAMETER */
typedef struct S1090 T1090;

/* SPECIAL [detachable ET_FORMAL_PARAMETER] */
typedef struct S1091 T1091;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1092 T1092;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1094 T1094;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
typedef struct S1095 T1095;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
typedef struct S1096 T1096;

/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
typedef struct S1097 T1097;

/* ET_IF_INSTRUCTION */
typedef struct S1098 T1098;

/* SPECIAL [detachable ET_IF_INSTRUCTION] */
typedef struct S1099 T1099;

/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
typedef struct S1100 T1100;

/* SPECIAL [detachable ET_INDEXING_LIST] */
typedef struct S1102 T1102;

/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
typedef struct S1103 T1103;

/* SPECIAL [detachable ET_INDEXING_ITEM] */
typedef struct S1105 T1105;

/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
typedef struct S1106 T1106;

/* SPECIAL [detachable ET_INDEXING_TERM] */
typedef struct S1108 T1108;

/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
typedef struct S1109 T1109;

/* SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
typedef struct S1111 T1111;

/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
typedef struct S1112 T1112;

/* SPECIAL [detachable ET_INDEXING_TERM_LIST] */
typedef struct S1114 T1114;

/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
typedef struct S1115 T1115;

/* ET_INSPECT_INSTRUCTION */
typedef struct S1116 T1116;

/* SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
typedef struct S1117 T1117;

/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
typedef struct S1118 T1118;

/* SPECIAL [detachable ET_INSTRUCTION] */
typedef struct S1120 T1120;

/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
typedef struct S1121 T1121;

/* SPECIAL [detachable ET_INVARIANTS] */
typedef struct S1122 T1122;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1123 T1123;

/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1124 T1124;

/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
typedef struct S1125 T1125;

/* SPECIAL [detachable ET_LIKE_TYPE] */
typedef struct S1127 T1127;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
typedef struct S1128 T1128;

/* ET_LOCAL_VARIABLE */
typedef struct S1129 T1129;

/* SPECIAL [detachable ET_LOCAL_VARIABLE] */
typedef struct S1130 T1130;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1131 T1131;

/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1133 T1133;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S1134 T1134;

/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S1135 T1135;

/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
typedef struct S1136 T1136;

/* ET_LOOP_INVARIANTS */
typedef struct S1137 T1137;

/* SPECIAL [detachable ET_LOOP_INVARIANTS] */
typedef struct S1138 T1138;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
typedef struct S1139 T1139;

/* ET_MANIFEST_ARRAY */
typedef struct S1140 T1140;

/* SPECIAL [detachable ET_MANIFEST_ARRAY] */
typedef struct S1141 T1141;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
typedef struct S1142 T1142;

/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
typedef struct S1144 T1144;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
typedef struct S1145 T1145;

/* ET_MANIFEST_STRING_LIST */
typedef struct S1146 T1146;

/* SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
typedef struct S1147 T1147;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
typedef struct S1148 T1148;

/* SPECIAL [detachable ET_MANIFEST_TUPLE] */
typedef struct S1149 T1149;

/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
typedef struct S1150 T1150;

/* SPECIAL [detachable ET_OBSOLETE] */
typedef struct S1152 T1152;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1153 T1153;

/* ET_PARENTHESIZED_EXPRESSION */
typedef struct S1154 T1154;

/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1155 T1155;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
typedef struct S1156 T1156;

/* SPECIAL [detachable ET_PARENT] */
typedef struct S1157 T1157;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
typedef struct S1158 T1158;

/* SPECIAL [detachable ET_PARENT_ITEM] */
typedef struct S1159 T1159;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
typedef struct S1160 T1160;

/* SPECIAL [detachable ET_PARENT_LIST] */
typedef struct S1161 T1161;

/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
typedef struct S1162 T1162;

/* SPECIAL [detachable ET_POSTCONDITIONS] */
typedef struct S1163 T1163;

/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S1164 T1164;

/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S1166 T1166;

/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
typedef struct S1167 T1167;

/* SPECIAL [detachable ET_RENAME_ITEM] */
typedef struct S1169 T1169;

/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
typedef struct S1170 T1170;

/* SPECIAL [detachable ET_RENAME_LIST] */
typedef struct S1171 T1171;

/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
typedef struct S1172 T1172;

/* ET_STATIC_CALL_EXPRESSION */
typedef struct S1173 T1173;

/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
typedef struct S1174 T1174;

/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
typedef struct S1175 T1175;

/* ET_STRIP_EXPRESSION */
typedef struct S1176 T1176;

/* SPECIAL [detachable ET_STRIP_EXPRESSION] */
typedef struct S1177 T1177;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
typedef struct S1178 T1178;

/* SPECIAL [detachable ET_TYPE_ITEM] */
typedef struct S1180 T1180;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
typedef struct S1181 T1181;

/* SPECIAL [detachable ET_TYPE_LIST] */
typedef struct S1183 T1183;

/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
typedef struct S1184 T1184;

/* ET_VARIANT */
typedef struct S1185 T1185;

/* SPECIAL [detachable ET_VARIANT] */
typedef struct S1186 T1186;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
typedef struct S1187 T1187;

/* ET_WHEN_PART */
typedef struct S1188 T1188;

/* SPECIAL [detachable ET_WHEN_PART] */
typedef struct S1189 T1189;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
typedef struct S1190 T1190;

/* ET_WHEN_PART_LIST */
typedef struct S1191 T1191;

/* SPECIAL [detachable ET_WHEN_PART_LIST] */
typedef struct S1192 T1192;

/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
typedef struct S1193 T1193;

/* SPECIAL [detachable ET_WRITABLE] */
typedef struct S1194 T1194;

/* ET_OBJECT_TEST_LIST */
typedef struct S1197 T1197;

/* ET_ACROSS_COMPONENT_LIST */
typedef struct S1198 T1198;

/* ET_C3_CHARACTER_CONSTANT */
typedef struct S1199 T1199;

/* ET_VERBATIM_STRING */
typedef struct S1200 T1200;

/* ET_SPECIAL_MANIFEST_STRING */
typedef struct S1201 T1201;

/* ET_REGULAR_INTEGER_CONSTANT */
typedef struct S1202 T1202;

/* ET_UNDERSCORED_INTEGER_CONSTANT */
typedef struct S1203 T1203;

/* ET_HEXADECIMAL_INTEGER_CONSTANT */
typedef struct S1204 T1204;

/* ET_OCTAL_INTEGER_CONSTANT */
typedef struct S1205 T1205;

/* ET_BINARY_INTEGER_CONSTANT */
typedef struct S1206 T1206;

/* ET_REGULAR_REAL_CONSTANT */
typedef struct S1207 T1207;

/* ET_UNDERSCORED_REAL_CONSTANT */
typedef struct S1208 T1208;

/* ET_TRUE_CONSTANT */
typedef struct S1210 T1210;

/* ET_FALSE_CONSTANT */
typedef struct S1211 T1211;

/* ET_C1_CHARACTER_CONSTANT */
typedef struct S1212 T1212;

/* ET_C2_CHARACTER_CONSTANT */
typedef struct S1213 T1213;

/* ET_CUSTOM_ATTRIBUTE */
typedef struct S1217 T1217;

/* ET_CONSTRAINED_FORMAL_PARAMETER */
typedef struct S1218 T1218;

/* ET_CONSTRAINT_NAMED_TYPE */
typedef struct S1219 T1219;

/* ET_ATTACHMENT_SEPARATE_KEYWORDS */
typedef struct S1220 T1220;

/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD */
typedef struct S1221 T1221;

/* ET_BIT_N */
typedef struct S1222 T1222;

/* ET_BIT_FEATURE */
typedef struct S1223 T1223;

/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
typedef struct S1224 T1224;

/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S1225 T1225;

/* ET_RENAME */
typedef struct S1226 T1226;

/* ET_ALL_EXPORT */
typedef struct S1227 T1227;

/* ET_CONVERT_FUNCTION */
typedef struct S1229 T1229;

/* ET_CONVERT_PROCEDURE */
typedef struct S1230 T1230;

/* ET_DO_FUNCTION */
typedef struct S1232 T1232;

/* ET_ONCE_FUNCTION */
typedef struct S1233 T1233;

/* ET_DEFERRED_FUNCTION */
typedef struct S1234 T1234;

/* ET_ONCE_PROCEDURE */
typedef struct S1236 T1236;

/* ET_EXTERNAL_PROCEDURE */
typedef struct S1237 T1237;

/* ET_PREFIX_NAME */
typedef struct S1238 T1238;

/* ET_PREFIX_FREE_NAME */
typedef struct S1239 T1239;

/* ET_INFIX_NAME */
typedef struct S1240 T1240;

/* ET_ALIASED_FEATURE_NAME */
typedef struct S1241 T1241;

/* ET_ALIAS_FREE_NAME */
typedef struct S1242 T1242;

/* ET_LABELED_ACTUAL_PARAMETER */
typedef struct S1245 T1245;

/* ET_LIKE_FEATURE */
typedef struct S1247 T1247;

/* ET_QUALIFIED_LIKE_BRACED_TYPE */
typedef struct S1248 T1248;

/* ET_QUALIFIED_LIKE_TYPE */
typedef struct S1249 T1249;

/* ET_ASSIGNER_INSTRUCTION */
typedef struct S1250 T1250;

/* ET_ASSIGNMENT */
typedef struct S1251 T1251;

/* ET_ASSIGNMENT_ATTEMPT */
typedef struct S1252 T1252;

/* ET_LOOP_INSTRUCTION */
typedef struct S1253 T1253;

/* ET_NULL_INSTRUCTION */
typedef struct S1254 T1254;

/* ET_BANG_INSTRUCTION */
typedef struct S1255 T1255;

/* ET_CREATE_INSTRUCTION */
typedef struct S1256 T1256;

/* ET_CHOICE_RANGE */
typedef struct S1257 T1257;

/* ET_PRECURSOR_INSTRUCTION */
typedef struct S1258 T1258;

/* ET_STATIC_CALL_INSTRUCTION */
typedef struct S1260 T1260;

/* ET_PRECURSOR_EXPRESSION */
typedef struct S1261 T1261;

/* ET_FEATURE_ADDRESS */
typedef struct S1262 T1262;

/* ET_CURRENT_ADDRESS */
typedef struct S1263 T1263;

/* ET_RESULT_ADDRESS */
typedef struct S1264 T1264;

/* ET_EXPRESSION_ADDRESS */
typedef struct S1265 T1265;

/* ET_INFIX_EXPRESSION */
typedef struct S1266 T1266;

/* ET_INFIX_AND_THEN_OPERATOR */
typedef struct S1267 T1267;

/* ET_INFIX_OR_ELSE_OPERATOR */
typedef struct S1268 T1268;

/* ET_MANIFEST_TYPE */
typedef struct S1269 T1269;

/* ET_PREFIX_EXPRESSION */
typedef struct S1270 T1270;

/* ET_OLD_EXPRESSION */
typedef struct S1271 T1271;

/* ET_OLD_OBJECT_TEST */
typedef struct S1272 T1272;

/* ET_ONCE_MANIFEST_STRING */
typedef struct S1273 T1273;

/* ET_DO_FUNCTION_INLINE_AGENT */
typedef struct S1274 T1274;

/* ET_ONCE_FUNCTION_INLINE_AGENT */
typedef struct S1275 T1275;

/* ET_EXTERNAL_FUNCTION_INLINE_AGENT */
typedef struct S1276 T1276;

/* ET_DO_PROCEDURE_INLINE_AGENT */
typedef struct S1277 T1277;

/* ET_ONCE_PROCEDURE_INLINE_AGENT */
typedef struct S1278 T1278;

/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
typedef struct S1279 T1279;

/* ET_AGENT_OPEN_TARGET */
typedef struct S1280 T1280;

/* ET_AGENT_TYPED_OPEN_ARGUMENT */
typedef struct S1281 T1281;

/* ET_TAGGED_ASSERTION */
typedef struct S1283 T1283;

/* ET_FILE_POSITION */
typedef struct S1284 T1284;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
typedef struct S1285 T1285;

/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
typedef struct S1286 T1286;

/* ET_PARENT_CHECKER1 */
typedef struct S1287 T1287;

/* ET_FORMAL_PARAMETER_CHECKER1 */
typedef struct S1288 T1288;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1289 T1289;

/* ET_FEATURE_NAME_TESTER */
typedef struct S1290 T1290;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1292 T1292;

/* ET_ALIAS_NAME_TESTER */
typedef struct S1293 T1293;

/* DS_ARRAYED_LIST [ET_CLIENT_LIST] */
typedef struct S1295 T1295;

/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
typedef struct S1296 T1296;

/* ET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1297 T1297;

/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1298 T1298;

/* ET_IDENTIFIER_TYPE_RESOLVER */
typedef struct S1299 T1299;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
typedef struct S1300 T1300;

/* ET_ANCHORED_TYPE_CHECKER */
typedef struct S1301 T1301;

/* ET_SIGNATURE_CHECKER */
typedef struct S1302 T1302;

/* ET_PARENT_CHECKER2 */
typedef struct S1303 T1303;

/* ET_FORMAL_PARAMETER_CHECKER2 */
typedef struct S1304 T1304;

/* ET_BUILTIN_FEATURE_CHECKER */
typedef struct S1305 T1305;

/* ET_PRECURSOR_CHECKER */
typedef struct S1306 T1306;

/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
typedef struct S1307 T1307;

/* DS_HASH_SET [ET_CLASS] */
typedef struct S1308 T1308;

/* ET_PARENT_CHECKER3 */
typedef struct S1309 T1309;

/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
typedef struct S1310 T1310;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
typedef struct S1311 T1311;

/* ET_PARENT_FEATURE */
typedef struct S1313 T1313;

/* ET_INHERITED_FEATURE */
typedef struct S1314 T1314;

/* DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
typedef struct S1315 T1315;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
typedef struct S1316 T1316;

/* SPECIAL [ET_DOTNET_ASSEMBLY] */
typedef struct S1317 T1317;

/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
typedef struct S1319 T1319;

/* ET_BRACED_TYPE_LIST */
typedef struct S1321 T1321;

/* DS_ARRAYED_LIST [ET_CLASS] */
typedef struct S1322 T1322;

/* DS_ARRAYED_LIST [ET_MASTER_CLASS] */
typedef struct S1323 T1323;

/* DS_HASH_SET_CURSOR [ET_UNIVERSE] */
typedef struct S1324 T1324;

/* SPECIAL [ET_UNIVERSE] */
typedef struct S1325 T1325;

/* KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
typedef struct S1327 T1327;

/* DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
typedef struct S1328 T1328;

/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
typedef struct S1330 T1330;

/* SPECIAL [ET_INTERNAL_UNIVERSE] */
typedef struct S1331 T1331;

/* ET_CLASS_TYPE_STATUS_CHECKER1 */
typedef struct S1332 T1332;

/* ET_CLASS_TYPE_STATUS_CHECKER2 */
typedef struct S1333 T1333;

/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
typedef struct S1334 T1334;

/* ET_CLASS_TYPE_STATUS_CHECKER3 */
typedef struct S1335 T1335;

/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
typedef struct S1336 T1336;

/* DS_ARRAYED_STACK [YY_BUFFER] */
typedef struct S1337 T1337;

/* UT_SYNTAX_ERROR */
typedef struct S1338 T1338;

/* UT_TOO_MANY_INCLUDES_ERROR */
typedef struct S1339 T1339;

/* ET_DYNAMIC_TARGET_LIST */
typedef struct S1341 T1341;

/* XM_NAMESPACE_RESOLVER_CONTEXT */
typedef struct S1342 T1342;

/* DS_LINKED_QUEUE [STRING_8] */
typedef struct S1344 T1344;

/* detachable KL_EQUALITY_TESTER [XM_NAMESPACE] */
typedef struct S1345 T1345;

/* DS_HASH_SET_CURSOR [XM_NAMESPACE] */
typedef struct S1346 T1346;

/* KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
typedef struct S1347 T1347;

/* SPECIAL [XM_NAMESPACE] */
typedef struct S1348 T1348;

/* XM_EIFFEL_CHARACTER_ENTITY */
typedef struct S1349 T1349;

/* detachable DS_BILINKABLE [XM_POSITION] */
typedef struct S1350 T1350;

/* DS_BILINKED_LIST_CURSOR [XM_POSITION] */
typedef struct S1351 T1351;

/* detachable DS_LINKABLE [XM_EIFFEL_SCANNER] */
typedef struct S1352 T1352;

/* SPECIAL [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1353 T1353;

/* detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S1356 T1356;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1357 T1357;

/* detachable KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
typedef struct S1358 T1358;

/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
typedef struct S1359 T1359;

/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1360 T1360;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1361 T1361;

/* detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1362 T1362;

/* DS_BILINKED_LIST_CURSOR [STRING_8] */
typedef struct S1363 T1363;

/* detachable DS_BILINKABLE [STRING_8] */
typedef struct S1364 T1364;

/* SPECIAL [ET_ECF_TARGET] */
typedef struct S1365 T1365;

/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
typedef struct S1366 T1366;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
typedef struct S1367 T1367;

/* SPECIAL [ET_ADAPTED_LIBRARY] */
typedef struct S1368 T1368;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
typedef struct S1369 T1369;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
typedef struct S1370 T1370;

/* DS_HASH_SET_CURSOR [ET_LIBRARY] */
typedef struct S1371 T1371;

/* KL_SPECIAL_ROUTINES [ET_LIBRARY] */
typedef struct S1372 T1372;

/* SPECIAL [ET_LIBRARY] */
typedef struct S1373 T1373;

/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1374 T1374;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1375 T1375;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1376 T1376;

/* SPECIAL [NATIVE_STRING] */
typedef struct S1377 T1377;

/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
typedef struct S1378 T1378;

/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1379 T1379;

/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1380 T1380;

/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1381 T1381;

/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
typedef struct S1383 T1383;

/* DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
typedef struct S1384 T1384;

/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
typedef struct S1385 T1385;

/* DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT] */
typedef struct S1386 T1386;

/* KL_SPECIAL_ROUTINES [NATURAL_8] */
typedef struct S1389 T1389;

/* DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
typedef struct S1390 T1390;

/* ET_XACE_INVALID_EXPRESSION_ERROR */
typedef struct S1392 T1392;

/* [attached] TYPE [STRING_8] */
#define T1394 EIF_TYPE

/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
typedef struct S1395 T1395;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
typedef struct S1396 T1396;

/* [attached] TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1397 T1397;

/* KL_AGENT_ROUTINES [ET_UNIVERSE] */
typedef struct S1398 T1398;

/* [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_UNIVERSE]] */
typedef struct S1399 T1399;

/* [attached] TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
typedef struct S1400 T1400;

/* [attached] TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_UNIVERSE]]] */
typedef struct S1401 T1401;

/* KL_AGENT_HASH_FUNCTION [STRING_8] */
typedef struct S1404 T1404;

/* [attached] TUPLE [STRING_8] */
typedef struct S1405 T1405;

/* [attached] FUNCTION [KL_STRING_ROUTINES, [attached] TUPLE [STRING_8], INTEGER_32] */
typedef struct S1406 T1406;

/* [attached] TUPLE [KL_STRING_ROUTINES] */
typedef struct S1407 T1407;

/* ET_ACTUAL_PARAMETER_SUBLIST */
typedef struct S1409 T1409;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
typedef struct S1410 T1410;

/* TYPED_POINTER [NATURAL_16] */
typedef struct S1411 T1411;
extern T0* GE_boxed1411(T1411 a1);
typedef struct Sb1411 Tb1411;

/* TYPED_POINTER [NATURAL_8] */
typedef struct S1412 T1412;
extern T0* GE_boxed1412(T1412 a1);
typedef struct Sb1412 Tb1412;

/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
typedef struct S1413 T1413;

/* XM_COMMENT */
typedef struct S1414 T1414;

/* XM_PROCESSING_INSTRUCTION */
typedef struct S1415 T1415;

/* XM_CHARACTER_DATA */
typedef struct S1416 T1416;

/* detachable DS_CELL [detachable ET_CLASS] */
typedef struct S1422 T1422;

/* [attached] TUPLE [detachable DS_CELL [detachable ET_CLASS]] */
typedef struct S1423 T1423;

/* [attached] TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
typedef struct S1424 T1424;

/* DS_ARRAYED_LIST [ET_CLUSTER] */
typedef struct S1425 T1425;

/* ET_CONSTRAINT_GENERIC_NAMED_TYPE */
typedef struct S1426 T1426;

/* ET_FORMAL_PARAMETER_TYPE */
typedef struct S1427 T1427;

/* ET_UNQUALIFIED_CALL_INSTRUCTION */
typedef struct S1428 T1428;

/* [attached] TUPLE [ET_EIFFEL_PARSER, DS_ARRAYED_LIST [STRING_8]] */
typedef struct S1430 T1430;

/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
typedef struct S1431 T1431;

/* ET_FEATURE_IDS */
typedef struct S1439 T1439;

/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
typedef struct S1440 T1440;

/* INTEGER_OVERFLOW_CHECKER */
typedef struct S1443 T1443;

/* SPECIAL [ARRAY [INTEGER_32]] */
typedef struct S1444 T1444;

/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
typedef struct S1445 T1445;

/* DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1446 T1446;

/* detachable DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1447 T1447;

/* DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
typedef struct S1448 T1448;

/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1449 T1449;

/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1450 T1450;

/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1451 T1451;

/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
typedef struct S1452 T1452;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1453 T1453;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1454 T1454;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1455 T1455;

/* DS_ARRAYED_LIST [ET_ECF_CONDITION] */
typedef struct S1456 T1456;

/* detachable DS_LINKABLE [XM_DOCUMENT_NODE] */
typedef struct S1457 T1457;

/* DS_LINKED_QUEUE [CHARACTER_8] */
typedef struct S1462 T1462;

/* UC_UTF16_ROUTINES */
typedef struct S1463 T1463;

/* SPECIAL [ET_ADAPTED_UNIVERSE] */
typedef struct S1464 T1464;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
typedef struct S1465 T1465;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
typedef struct S1466 T1466;

/* LX_DFA_WILDCARD */
typedef struct S1467 T1467;

/* DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
typedef struct S1468 T1468;

/* DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
typedef struct S1470 T1470;

/* detachable DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
typedef struct S1471 T1471;

/* SPECIAL [ET_XACE_CLUSTER] */
typedef struct S1472 T1472;

/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
typedef struct S1473 T1473;

/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
typedef struct S1474 T1474;

/* SPECIAL [ET_NAMED_CLASS] */
typedef struct S1475 T1475;

/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
typedef struct S1477 T1477;

/* DS_HASH_SET_CURSOR [ET_PROCEDURE] */
typedef struct S1479 T1479;

/* DS_HASH_SET_CURSOR [ET_QUERY] */
typedef struct S1480 T1480;

/* SPECIAL [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1481 T1481;

/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1482 T1482;

/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S1483 T1483;

/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S1484 T1484;

/* SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S1485 T1485;

/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
typedef struct S1486 T1486;

/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
typedef struct S1487 T1487;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1488 T1488;

/* DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
typedef struct S1489 T1489;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
typedef struct S1492 T1492;

/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
typedef struct S1493 T1493;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1494 T1494;

/* SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S1495 T1495;

/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
typedef struct S1498 T1498;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1500 T1500;

/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
typedef struct S1501 T1501;

/* SPECIAL [ET_CLIENT_LIST] */
typedef struct S1502 T1502;

/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
typedef struct S1503 T1503;

/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
typedef struct S1505 T1505;

/* KL_SPECIAL_ROUTINES [ET_CLIENT] */
typedef struct S1506 T1506;

/* SPECIAL [ET_CLIENT] */
typedef struct S1507 T1507;

/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME] */
typedef struct S1508 T1508;

/* ET_CALL_NAME_TESTER */
typedef struct S1509 T1509;

/* DS_HASH_SET [ET_CALL_NAME] */
typedef struct S1511 T1511;

/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME] */
typedef struct S1512 T1512;

/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME] */
typedef struct S1513 T1513;

/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1514 T1514;

/* ET_REDECLARED_FEATURE */
typedef struct S1515 T1515;

/* ET_REPLICATED_FEATURE */
typedef struct S1518 T1518;

/* DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
typedef struct S1519 T1519;

/* DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
typedef struct S1520 T1520;

/* ET_DOTNET_SIGNATURE_TESTER */
typedef struct S1521 T1521;

/* DS_HASH_SET [ET_DOTNET_FEATURE] */
typedef struct S1522 T1522;

/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1524 T1524;

/* DS_LINKED_LIST [ET_DOTNET_FEATURE] */
typedef struct S1526 T1526;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
typedef struct S1527 T1527;

/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1528 T1528;

/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE] */
typedef struct S1529 T1529;

/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
typedef struct S1530 T1530;

/* DS_HASH_SET_CURSOR [ET_CLASS] */
typedef struct S1531 T1531;

/* [attached] TYPE [ET_CLASS] */
#define T1532 EIF_TYPE

/* DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
typedef struct S1533 T1533;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
typedef struct S1534 T1534;

/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
typedef struct S1535 T1535;

/* SPECIAL [YY_BUFFER] */
typedef struct S1537 T1537;

/* KL_SPECIAL_ROUTINES [YY_BUFFER] */
typedef struct S1538 T1538;

/* SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1539 T1539;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
typedef struct S1540 T1540;

/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1542 T1542;

/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1543 T1543;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1544 T1544;

/* attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1545 T1545;

/* [attached] TUPLE [ET_GROUP] */
typedef struct S1546 T1546;

/* [attached] TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
typedef struct S1547 T1547;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLASS]], [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_CLASS]]] */
typedef struct S1548 T1548;

/* [attached] TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1549 T1549;

/* ET_CLUSTER_ERROR */
typedef struct S1550 T1550;

/* ET_SYNTAX_ERROR */
typedef struct S1551 T1551;

/* AP_OPTION_COMPARATOR */
typedef struct S1552 T1552;

/* DS_QUICK_SORTER [AP_OPTION] */
typedef struct S1553 T1553;

/* [attached] TUPLE [ET_XACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1556 T1556;

/* [attached] TUPLE [ET_LACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1557 T1557;

/* ET_FORMAL_COMMA_ARGUMENT */
typedef struct S1563 T1563;

/* ET_LOCAL_COMMA_VARIABLE */
typedef struct S1564 T1564;

/* ET_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S1565 T1565;

/* ET_KEYWORD_EXPRESSION */
typedef struct S1567 T1567;

/* detachable DS_LINKABLE [XM_ELEMENT_NODE] */
typedef struct S1569 T1569;

/* DS_QUICK_SORTER [ET_QUERY] */
typedef struct S1571 T1571;

/* DS_QUICK_SORTER [ET_PROCEDURE] */
typedef struct S1572 T1572;

/* [attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1577 T1577;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
typedef struct S1578 T1578;

/* [attached] TUPLE [ET_ECF_INTERNAL_UNIVERSE, ET_ECF_STATE] */
typedef struct S1579 T1579;

/* [attached] TUPLE [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1581 T1581;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
typedef struct S1582 T1582;

/* [attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1584 T1584;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
typedef struct S1585 T1585;

/* detachable DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S1588 T1588;

/* [attached] TUPLE [LX_WILDCARD] */
typedef struct S1589 T1589;

/* [attached] PREDICATE [[attached] NONE, [attached] TUPLE [LX_WILDCARD]] */
typedef struct S1590 T1590;

/* [attached] TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
typedef struct S1591 T1591;

/* [attached] PREDICATE [[attached] NONE, [attached] TUPLE [STRING_8]] */
typedef struct S1593 T1593;

/* [attached] TUPLE [KL_STRING_ROUTINES, STRING_8] */
typedef struct S1594 T1594;

/* ET_AGENT_IMPLICIT_CURRENT_TARGET */
typedef struct S1598 T1598;

/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
typedef struct S1608 T1608;

/* [attached] TYPE [ET_FEATURE] */
#define T1609 EIF_TYPE

/* SPECIAL [ET_CLUSTER] */
typedef struct S1611 T1611;

/* KL_SPECIAL_ROUTINES [ET_CLUSTER] */
typedef struct S1612 T1612;

/* DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
typedef struct S1613 T1613;

/* SPECIAL [NATURAL_64] */
typedef struct S1614 T1614;

/* SPECIAL [ET_ECF_CLUSTER] */
typedef struct S1615 T1615;

/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
typedef struct S1616 T1616;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
typedef struct S1617 T1617;

/* SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1618 T1618;

/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1619 T1619;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1620 T1620;

/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1621 T1621;

/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1622 T1622;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1623 T1623;

/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1624 T1624;

/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1625 T1625;

/* DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1626 T1626;

/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
typedef struct S1627 T1627;

/* SPECIAL [ET_ECF_FILE_RULE] */
typedef struct S1628 T1628;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
typedef struct S1629 T1629;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1630 T1630;

/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1631 T1631;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1632 T1632;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1633 T1633;

/* SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1634 T1634;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1635 T1635;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1636 T1636;

/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1637 T1637;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1638 T1638;

/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION] */
typedef struct S1639 T1639;

/* SPECIAL [ET_ECF_CONDITION] */
typedef struct S1640 T1640;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION] */
typedef struct S1641 T1641;

/* detachable DS_LINKABLE [CHARACTER_8] */
typedef struct S1642 T1642;

/* LX_WILDCARD_PARSER */
typedef struct S1643 T1643;

/* LX_DESCRIPTION */
typedef struct S1644 T1644;

/* LX_FULL_DFA */
typedef struct S1645 T1645;

/* SPECIAL [LX_WILDCARD] */
typedef struct S1647 T1647;

/* KL_SPECIAL_ROUTINES [LX_WILDCARD] */
typedef struct S1650 T1650;

/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
typedef struct S1651 T1651;

/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
typedef struct S1652 T1652;

/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1653 T1653;

/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
typedef struct S1654 T1654;

/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME] */
typedef struct S1655 T1655;

/* SPECIAL [ET_RENAME] */
typedef struct S1656 T1656;

/* [attached] TYPE [ET_RENAME] */
#define T1659 EIF_TYPE

/* [attached] TYPE [ET_CALL_NAME] */
#define T1660 EIF_TYPE

/* SPECIAL [ET_CALL_NAME] */
typedef struct S1661 T1661;

/* KL_SPECIAL_ROUTINES [ET_RENAME] */
typedef struct S1662 T1662;

/* KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
typedef struct S1663 T1663;

/* DS_HASH_SET_CURSOR [ET_CALL_NAME] */
typedef struct S1664 T1664;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME] */
typedef struct S1665 T1665;

/* detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME] */
typedef struct S1668 T1668;

/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1669 T1669;

/* SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1670 T1670;

/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
typedef struct S1672 T1672;

/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
typedef struct S1673 T1673;

/* detachable DS_LINKABLE [ET_ADAPTED_FEATURE] */
typedef struct S1674 T1674;

/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
typedef struct S1675 T1675;

/* SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1676 T1676;

/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1677 T1677;

/* SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1678 T1678;

/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1679 T1679;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
typedef struct S1680 T1680;

/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1681 T1681;

/* detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1684 T1684;

/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1685 T1685;

/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1686 T1686;

/* detachable DS_LINKABLE [ET_DOTNET_FEATURE] */
typedef struct S1687 T1687;

/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
typedef struct S1688 T1688;

/* detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1689 T1689;

/* ET_DOTNET_ASSEMBLY_ERROR */
typedef struct S1690 T1690;

/* ET_STANDARD_ONCE_KEYS */
typedef struct S1693 T1693;

/* KL_CHARACTER_ROUTINES */
typedef struct S1696 T1696;

/* [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
typedef struct S1697 T1697;

/* [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_IDENTIFIER, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S1698 T1698;

/* SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S1703 T1703;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
typedef struct S1704 T1704;

/* ET_SEEDED_QUERY_COMPARATOR */
typedef struct S1708 T1708;

/* ET_SEEDED_PROCEDURE_COMPARATOR */
typedef struct S1711 T1711;

/* [attached] TUPLE [ET_CLIENT_LIST] */
typedef struct S1715 T1715;

/* ET_INFIX_CAST_EXPRESSION */
typedef struct S1723 T1723;

/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
typedef struct S1726 T1726;

/* SPECIAL [ET_LIKE_FEATURE] */
typedef struct S1731 T1731;

/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
typedef struct S1732 T1732;

/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
typedef struct S1733 T1733;

/* DS_ARRAYED_LIST [LX_RULE] */
typedef struct S1734 T1734;

/* LX_START_CONDITIONS */
typedef struct S1735 T1735;

/* LX_ACTION_FACTORY */
typedef struct S1736 T1736;

/* LX_SYMBOL_CLASS */
typedef struct S1737 T1737;

/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8] */
typedef struct S1738 T1738;

/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
typedef struct S1739 T1739;

/* SPECIAL [LX_SYMBOL_CLASS] */
typedef struct S1740 T1740;

/* KL_SPECIAL_ROUTINES [LX_NFA] */
typedef struct S1741 T1741;

/* LX_NFA */
typedef struct S1742 T1742;

/* SPECIAL [LX_NFA] */
typedef struct S1743 T1743;

/* LX_EQUIVALENCE_CLASSES */
typedef struct S1744 T1744;

/* LX_RULE */
typedef struct S1745 T1745;

/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8] */
typedef struct S1746 T1746;

/* LX_UNRECOGNIZED_RULE_ERROR */
typedef struct S1747 T1747;

/* LX_MISSING_QUOTE_ERROR */
typedef struct S1748 T1748;

/* LX_BAD_CHARACTER_CLASS_ERROR */
typedef struct S1749 T1749;

/* LX_BAD_CHARACTER_ERROR */
typedef struct S1750 T1750;

/* LX_FULL_AND_META_ERROR */
typedef struct S1751 T1751;

/* LX_FULL_AND_REJECT_ERROR */
typedef struct S1752 T1752;

/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
typedef struct S1753 T1753;

/* LX_CHARACTER_OUT_OF_RANGE_ERROR */
typedef struct S1754 T1754;

/* SPECIAL [LX_RULE] */
typedef struct S1755 T1755;

/* ARRAY [LX_RULE] */
typedef struct S1756 T1756;

/* LX_DFA_STATE */
typedef struct S1757 T1757;

/* DS_ARRAYED_LIST [LX_NFA_STATE] */
typedef struct S1758 T1758;

/* DS_ARRAYED_LIST [LX_DFA_STATE] */
typedef struct S1759 T1759;

/* LX_SYMBOL_PARTITIONS */
typedef struct S1760 T1760;

/* KL_ARRAY_ROUTINES [LX_RULE] */
typedef struct S1761 T1761;

/* LX_START_CONDITION */
typedef struct S1762 T1762;

/* LX_TRANSITION_TABLE [LX_DFA_STATE] */
typedef struct S1763 T1763;

/* DS_ARRAYED_LIST [LX_NFA] */
typedef struct S1764 T1764;

/* DS_HASH_TABLE [LX_NFA, INTEGER_32] */
typedef struct S1765 T1765;

/* LX_NFA_STATE */
typedef struct S1766 T1766;

/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1768 T1768;

/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
typedef struct S1770 T1770;

/* ET_UNIVERSE_ERROR */
typedef struct S1771 T1771;

/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1773 T1773;

/* TYPE [DEVELOPER_EXCEPTION] */
#define T1774 EIF_TYPE

/* [attached] TUPLE [ET_ECF_LIBRARY] */
typedef struct S1776 T1776;

/* ET_PARENTHESIS_SYMBOL */
typedef struct S1791 T1791;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
typedef struct S1796 T1796;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
typedef struct S1797 T1797;

/* [attached] TYPE [ET_NESTED_TYPE_CONTEXT] */
#define T1799 EIF_TYPE

/* [attached] TYPE [ET_ACROSS_COMPONENT] */
#define T1800 EIF_TYPE

/* [attached] TUPLE [ET_ECF_CLUSTER] */
typedef struct S1804 T1804;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_CLUSTER]] */
typedef struct S1805 T1805;

/* [attached] TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
typedef struct S1806 T1806;

/* [attached] TUPLE [ET_ECF_FILE_RULE] */
typedef struct S1807 T1807;

/* [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_FILE_RULE]] */
typedef struct S1808 T1808;

/* [attached] TUPLE [ET_ECF_FILE_RULES] */
typedef struct S1809 T1809;

/* [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_ECF_FILE_RULE]] */
typedef struct S1810 T1810;

/* [attached] TUPLE [ET_ECF_STATE] */
typedef struct S1811 T1811;

/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
typedef struct S1815 T1815;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
typedef struct S1818 T1818;

/* KL_SPECIAL_ROUTINES [LX_RULE] */
typedef struct S1820 T1820;

/* DS_ARRAYED_LIST_CURSOR [LX_RULE] */
typedef struct S1821 T1821;

/* KL_ARRAY_ROUTINES [STRING_8] */
typedef struct S1822 T1822;

/* SPECIAL [LX_START_CONDITION] */
typedef struct S1823 T1823;

/* KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
typedef struct S1824 T1824;

/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
typedef struct S1825 T1825;

/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
typedef struct S1828 T1828;

/* LX_EPSILON_TRANSITION [LX_NFA_STATE] */
typedef struct S1830 T1830;

/* LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
typedef struct S1832 T1832;

/* DS_BILINKABLE [INTEGER_32] */
typedef struct S1833 T1833;

/* SPECIAL [DS_BILINKABLE [INTEGER_32]] */
typedef struct S1834 T1834;

/* ARRAY [DS_BILINKABLE [INTEGER_32]] */
typedef struct S1835 T1835;

/* LX_ACTION */
typedef struct S1837 T1837;

/* DS_BUBBLE_SORTER [LX_NFA_STATE] */
typedef struct S1838 T1838;

/* DS_BUBBLE_SORTER [LX_RULE] */
typedef struct S1840 T1840;

/* SPECIAL [LX_NFA_STATE] */
typedef struct S1842 T1842;

/* KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
typedef struct S1844 T1844;

/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
typedef struct S1845 T1845;

/* SPECIAL [LX_DFA_STATE] */
typedef struct S1847 T1847;

/* KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
typedef struct S1848 T1848;

/* DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
typedef struct S1849 T1849;

/* KL_ARRAY [LX_RULE] */
typedef struct S1850 T1850;

/* ARRAY [detachable LX_DFA_STATE] */
typedef struct S1851 T1851;

/* KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
typedef struct S1852 T1852;

/* DS_ARRAYED_LIST_CURSOR [LX_NFA] */
typedef struct S1853 T1853;

/* DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
typedef struct S1855 T1855;

/* ET_DYNAMIC_EQUALITY_EXPRESSION */
typedef struct S1858 T1858;

/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
typedef struct S1859 T1859;

/* ET_CONVERT_BUILTIN_EXPRESSION */
typedef struct S1860 T1860;

/* ET_CONVERT_FROM_EXPRESSION */
typedef struct S1861 T1861;

/* ET_CONVERT_TO_EXPRESSION */
typedef struct S1862 T1862;

/* [attached] TYPE [BOOLEAN] */
#define T1866 EIF_TYPE

/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
typedef struct S1867 T1867;

/* detachable DS_LINKABLE [ET_PARENT_FEATURE] */
typedef struct S1870 T1870;

/* DS_SHELL_SORTER [INTEGER_32] */
typedef struct S1872 T1872;

/* KL_COMPARABLE_COMPARATOR [LX_RULE] */
typedef struct S1873 T1873;

/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
typedef struct S1876 T1876;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1879 T1879;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1880 T1880;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1881 T1881;

/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1882 T1882;

/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1883 T1883;

/* KL_ARRAY [STRING_8] */
typedef struct S1884 T1884;

/* [attached] TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1885 T1885;

/* [attached] TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1886 T1886;

/* [attached] TUPLE [ET_LACE_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1887 T1887;

/* [attached] TUPLE [ET_LACE_DOTNET_GAC_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1888 T1888;

/* [attached] TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1889 T1889;

/* [attached] TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1890 T1890;

/* [attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1891 T1891;

/* [attached] PREDICATE [[attached] NONE, [attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
typedef struct S1892 T1892;

/* ET_AST_NULL_LEAF */
typedef struct S1895 T1895;

/* Struct for boxed version of type BOOLEAN */
struct Sb1 {
	int id;
	T1 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_8 */
struct Sb2 {
	int id;
	T2 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_32 */
struct Sb3 {
	int id;
	T3 z1; /* item */
};

/* Struct for boxed version of type INTEGER_8 */
struct Sb4 {
	int id;
	T4 z1; /* item */
};

/* Struct for boxed version of type INTEGER_16 */
struct Sb5 {
	int id;
	T5 z1; /* item */
};

/* Struct for boxed version of type INTEGER_32 */
struct Sb6 {
	int id;
	T6 z1; /* item */
};

/* Struct for boxed version of type INTEGER_64 */
struct Sb7 {
	int id;
	T7 z1; /* item */
};

/* Struct for boxed version of type NATURAL_8 */
struct Sb8 {
	int id;
	T8 z1; /* item */
};

/* Struct for boxed version of type NATURAL_16 */
struct Sb9 {
	int id;
	T9 z1; /* item */
};

/* Struct for boxed version of type NATURAL_32 */
struct Sb10 {
	int id;
	T10 z1; /* item */
};

/* Struct for boxed version of type NATURAL_64 */
struct Sb11 {
	int id;
	T11 z1; /* item */
};

/* Struct for boxed version of type REAL_32 */
struct Sb12 {
	int id;
	T12 z1; /* item */
};

/* Struct for boxed version of type REAL_64 */
struct Sb13 {
	int id;
	T13 z1; /* item */
};

/* Struct for boxed version of type POINTER */
struct Sb14 {
	int id;
	T14 z1; /* item */
};

/* Struct for type UTF_CONVERTER */
struct S535 {
	char dummy;
};

/* Struct for boxed version of type UTF_CONVERTER */
struct Sb535 {
	int id;
	T535 z1; /* item */
};

/* Struct for type TYPED_POINTER [NATURAL_8] */
struct S1412 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [NATURAL_8] */
struct Sb1412 {
	int id;
	T1412 z1; /* item */
};

/* Struct for type TYPED_POINTER [NATURAL_16] */
struct S1411 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [NATURAL_16] */
struct Sb1411 {
	int id;
	T1411 z1; /* item */
};

/* Struct for type TYPED_POINTER [ANY] */
struct S544 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [ANY] */
struct Sb544 {
	int id;
	T544 z1; /* item */
};

/* Struct for type TYPED_POINTER [SPECIAL [NATURAL_8]] */
struct S543 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [SPECIAL [NATURAL_8]] */
struct Sb543 {
	int id;
	T543 z1; /* item */
};

/* Struct for type SPECIAL [CHARACTER_8] */
struct S15 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T2 z2[1]; /* item */
};

/* Struct for type SPECIAL [CHARACTER_32] */
struct S16 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T3 z2[1]; /* item */
};

/* Struct for type STRING_8 */
struct S17 {
	int id;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
};

/* Struct for type STRING_32 */
struct S18 {
	int id;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
};

/* Struct for type ISE_EXCEPTION_MANAGER */
struct S19 {
	int id;
};

/* Struct for type GEC */
struct S22 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* ace_filename */
	T0* a3; /* last_system */
	T0* a4; /* finalize_flag */
	T0* a5; /* gelint_flag */
	T0* a6; /* catcall_option */
	T0* a7; /* qat_option */
	T0* a8; /* c_compile_option */
	T0* a9; /* split_option */
	T0* a10; /* split_size_option */
	T0* a11; /* new_instance_types_option */
	T0* a12; /* gc_option */
	T0* a13; /* silent_flag */
	T0* a14; /* verbose_flag */
	T0* a15; /* version_flag */
	T6 a16; /* split_size */
	T1 a17; /* ecf_gelint_option */
};

/* Struct for type HASH_TABLE [INTEGER_32, INTEGER_32] */
struct S23 {
	int id;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T0* a3; /* keys */
	T0* a4; /* deleted_marks */
	T0* a5; /* indexes_map */
	T6 a6; /* iteration_position */
	T6 a7; /* count */
	T6 a8; /* deleted_item_position */
	T6 a9; /* control */
	T6 a10; /* found_item */
	T1 a11; /* has_default */
	T6 a12; /* item_position */
	T6 a13; /* ht_lowest_deleted_position */
	T6 a14; /* ht_deleted_item */
	T6 a15; /* ht_deleted_key */
	T1 a16; /* object_comparison */
};

/* Struct for type CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
struct S24 {
	int id;
	T0* a1; /* item */
};

/* Struct for type CELL [detachable EXCEPTION] */
struct S25 {
	int id;
	T0* a1; /* item */
};

/* Struct for type CELL [NO_MORE_MEMORY] */
struct S26 {
	int id;
	T0* a1; /* item */
};

/* Struct for type [attached] TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
struct S27 {
	int id;
	T6 z1;
	T6 z2;
	T6 z3;
	T0* z4;
	T0* z5;
	T0* z6;
	T0* z7;
	T0* z8;
	T0* z9;
	T6 z10;
	T1 z11;
};

/* Struct for type KL_TEXT_INPUT_FILE */
struct S29 {
	int id;
	T1 a1; /* end_of_file */
	T0* a2; /* last_string */
	T6 a3; /* mode */
	T0* a4; /* name */
	T0* a5; /* character_buffer */
	T2 a6; /* last_character */
	T14 a7; /* file_pointer */
	T1 a8; /* descriptor_available */
	T0* a9; /* internal_name */
	T0* a10; /* internal_detachable_name_pointer */
};

/* Struct for type KL_ARGUMENTS */
struct S30 {
	int id;
	T0* a1; /* program_name */
};

/* Struct for type ET_ISE_VARIABLES */
struct S31 {
	int id;
};

/* Struct for type UT_ERROR_HANDLER */
struct S32 {
	int id;
	T0* a1; /* info_file */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
};

/* Struct for type ET_SYSTEM */
struct S33 {
	int id;
	T1 a1; /* attachment_type_conformance_mode */
	T0* a2; /* tuple_type */
	T0* a3; /* master_classes */
	T0* a4; /* error_handler */
	T0* a5; /* ast_factory */
	T0* a6; /* external_include_pathnames */
	T0* a7; /* external_object_pathnames */
	T0* a8; /* external_library_pathnames */
	T1 a9; /* console_application_mode */
	T1 a10; /* alias_transition_mode */
	T1 a11; /* unknown_builtin_reported */
	T1 a12; /* qualified_anchored_types_enabled */
	T1 a13; /* qualified_anchored_types_cycle_detection_enabled */
	T0* a14; /* null_processor */
	T0* a15; /* eiffel_preparser */
	T0* a16; /* master_class_checker */
	T0* a17; /* eiffel_parser */
	T0* a18; /* provider_checker */
	T0* a19; /* ancestor_builder */
	T0* a20; /* feature_flattener */
	T0* a21; /* interface_checker */
	T0* a22; /* implementation_checker */
	T0* a23; /* flat_implementation_checker */
	T0* a24; /* current_system */
	T0* a25; /* universe */
	T0* a26; /* name */
	T0* a27; /* libraries */
	T0* a28; /* clusters */
	T0* a29; /* dotnet_assemblies */
	T1 a30; /* preparse_shallow_mode */
	T1 a31; /* preparse_single_mode */
	T1 a32; /* preparse_multiple_mode */
	T0* a33; /* system_name */
	T0* a34; /* any_type */
	T0* a35; /* detachable_any_type */
	T0* a36; /* any_parent */
	T0* a37; /* any_parents */
	T0* a38; /* any_clients */
	T0* a39; /* detachable_tuple_type */
	T0* a40; /* tuple_like_current_type */
	T0* a41; /* unfolded_empty_tuple_actual_parameters */
	T0* a42; /* array_any_type */
	T0* a43; /* array_detachable_any_type */
	T0* a44; /* array_like_current_type */
	T0* a45; /* boolean_type */
	T0* a46; /* character_type */
	T0* a47; /* character_8_type */
	T0* a48; /* character_8_convert_feature */
	T0* a49; /* character_32_type */
	T0* a50; /* character_32_convert_feature */
	T0* a51; /* double_type */
	T0* a52; /* exception_type */
	T0* a53; /* detachable_exception_type */
	T0* a54; /* exception_manager_type */
	T0* a55; /* function_type */
	T0* a56; /* integer_type */
	T0* a57; /* integer_8_type */
	T0* a58; /* integer_8_convert_feature */
	T0* a59; /* integer_16_type */
	T0* a60; /* integer_16_convert_feature */
	T0* a61; /* integer_32_type */
	T0* a62; /* integer_32_convert_feature */
	T0* a63; /* integer_64_type */
	T0* a64; /* integer_64_convert_feature */
	T0* a65; /* ise_exception_manager_type */
	T0* a66; /* iterable_detachable_any_type */
	T0* a67; /* natural_type */
	T0* a68; /* natural_8_type */
	T0* a69; /* natural_8_convert_feature */
	T0* a70; /* natural_16_type */
	T0* a71; /* natural_16_convert_feature */
	T0* a72; /* natural_32_type */
	T0* a73; /* natural_32_convert_feature */
	T0* a74; /* natural_64_type */
	T0* a75; /* natural_64_convert_feature */
	T0* a76; /* none_type */
	T0* a77; /* detachable_none_type */
	T0* a78; /* pointer_type */
	T0* a79; /* predicate_like_current_type */
	T0* a80; /* procedure_like_current_type */
	T0* a81; /* real_type */
	T0* a82; /* real_32_type */
	T0* a83; /* real_32_convert_feature */
	T0* a84; /* real_64_type */
	T0* a85; /* real_64_convert_feature */
	T0* a86; /* routine_type */
	T0* a87; /* special_any_type */
	T0* a88; /* special_detachable_any_type */
	T0* a89; /* string_type */
	T0* a90; /* string_8_type */
	T0* a91; /* string_8_convert_feature */
	T0* a92; /* string_32_type */
	T0* a93; /* string_32_convert_feature */
	T0* a94; /* system_object_type */
	T0* a95; /* system_object_parents */
	T0* a96; /* system_string_type */
	T0* a97; /* type_any_type */
	T0* a98; /* type_type_any_type */
	T0* a99; /* type_detachable_any_type */
	T0* a100; /* type_detachable_like_current_type */
	T0* a101; /* detachable_type_exception_type */
	T0* a102; /* type_detachable_exception_type */
	T0* a103; /* detachable_type_detachable_any_type */
	T0* a104; /* type_like_current_type */
	T0* a105; /* typed_pointer_any_type */
	T0* a106; /* typed_pointer_like_current_type */
	T0* a107; /* wide_character_type */
	T1 a108; /* is_read_only */
	T1 a109; /* use_attribute_keyword */
	T1 a110; /* use_note_keyword */
	T1 a111; /* use_reference_keyword */
	T1 a112; /* use_attached_keyword */
	T1 a113; /* use_detachable_keyword */
	T6 a114; /* registered_class_count */
	T0* a115; /* implicit_attachment_type_mark */
	T1 a116; /* obsolete_routine_type_mode */
	T0* a117; /* ise_version */
	T1 a118; /* providers_enabled */
	T1 a119; /* preparse_readonly_mode */
	T1 a120; /* preparse_override_mode */
	T1 a121; /* cluster_dependence_enabled */
	T1 a122; /* use_cluster_dependence_pathnames */
	T1 a123; /* is_dotnet */
	T0* a124; /* internal_dotnet_assembly_consumer */
	T6 a125; /* registered_feature_count */
	T6 a126; /* registered_inline_constant_count */
	T6 a127; /* default_create_seed */
	T6 a128; /* copy_seed */
	T6 a129; /* is_equal_seed */
	T6 a130; /* routine_call_seed */
	T6 a131; /* function_item_seed */
	T6 a132; /* dispose_seed */
	T6 a133; /* iterable_new_cursor_seed */
	T6 a134; /* iteration_cursor_after_seed */
	T6 a135; /* iteration_cursor_forth_seed */
	T1 a136; /* target_type_attachment_mode */
};

/* Struct for type KL_STRING_ROUTINES */
struct S34 {
	int id;
};

/* Struct for type ET_ERROR_HANDLER */
struct S36 {
	int id;
	T1 a1; /* has_error */
	T1 a2; /* benchmark_shown */
	T0* a3; /* info_file */
	T0* a4; /* error_file */
	T0* a5; /* warning_file */
	T1 a6; /* is_ise */
	T1 a7; /* is_ge */
	T1 a8; /* has_eiffel_error */
	T1 a9; /* has_internal_error */
	T1 a10; /* is_verbose */
	T1 a11; /* is_pedantic */
};

/* Struct for type KL_EXCEPTIONS */
struct S37 {
	int id;
};

/* Struct for type AP_PARSER */
struct S38 {
	int id;
	T0* a1; /* options */
	T0* a2; /* alternative_options_lists */
	T0* a3; /* parameters */
	T0* a4; /* help_option */
	T0* a5; /* application_description */
	T0* a6; /* parameters_description */
	T0* a7; /* error_handler */
	T0* a8; /* current_options */
	T1 a9; /* is_first_option */
	T0* a10; /* last_option_parameter */
};

/* Struct for type AP_ALTERNATIVE_OPTIONS_LIST */
struct S39 {
	int id;
	T0* a1; /* introduction_option */
	T0* a2; /* parameters_description */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type AP_ERROR */
struct S40 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* default_template */
	T0* a3; /* code */
};

/* Struct for type AP_FLAG */
struct S41 {
	int id;
	T6 a1; /* occurrences */
	T0* a2; /* description */
	T0* a3; /* long_form */
	T2 a4; /* short_form */
	T1 a5; /* has_short_form */
	T1 a6; /* is_mandatory */
	T6 a7; /* maximum_occurrences */
	T1 a8; /* is_hidden */
};

/* Struct for type AP_ENUMERATION_OPTION */
struct S43 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* description */
	T0* a3; /* possible_values */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
	T1 a9; /* has_short_form */
	T2 a10; /* short_form */
	T1 a11; /* is_hidden */
};

/* Struct for type AP_BOOLEAN_OPTION */
struct S44 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* description */
	T0* a3; /* parameter_description */
	T1 a4; /* needs_parameter */
	T0* a5; /* long_form */
	T1 a6; /* is_mandatory */
	T6 a7; /* maximum_occurrences */
	T1 a8; /* has_short_form */
	T2 a9; /* short_form */
	T1 a10; /* is_hidden */
};

/* Struct for type AP_INTEGER_OPTION */
struct S45 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* long_form */
	T2 a3; /* short_form */
	T0* a4; /* description */
	T0* a5; /* parameter_description */
	T1 a6; /* is_mandatory */
	T6 a7; /* maximum_occurrences */
	T1 a8; /* has_short_form */
	T1 a9; /* is_hidden */
};

/* Struct for type AP_STRING_OPTION */
struct S46 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* description */
	T0* a3; /* parameter_description */
	T1 a4; /* needs_parameter */
	T0* a5; /* long_form */
	T1 a6; /* is_mandatory */
	T6 a7; /* maximum_occurrences */
	T1 a8; /* has_short_form */
	T2 a9; /* short_form */
	T1 a10; /* is_hidden */
};

/* Struct for type AP_DISPLAY_HELP_FLAG */
struct S50 {
	int id;
	T0* a1; /* description */
	T2 a2; /* short_form */
	T1 a3; /* has_short_form */
	T0* a4; /* long_form */
	T6 a5; /* occurrences */
	T1 a6; /* is_hidden */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
};

/* Struct for type ET_XACE_SYSTEM_PARSER */
struct S52 {
	int id;
	T0* a1; /* last_system */
	T0* a2; /* ast_factory */
	T0* a3; /* xml_parser */
	T0* a4; /* tree_pipe */
	T0* a5; /* xml_validator */
	T0* a6; /* xml_preprocessor */
	T0* a7; /* parsed_libraries */
	T0* a8; /* error_handler */
	T0* a9; /* library_parser */
	T0* a10; /* eiffel_ast_factory */
	T0* a11; /* eiffel_error_handler */
	T1 a12; /* is_shallow */
	T1 a13; /* is_ve */
};

/* Struct for type ET_XACE_DEFAULT_ERROR_HANDLER */
struct S53 {
	int id;
	T6 a1; /* error_count */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type DS_HASH_TABLE [STRING_8, STRING_8] */
struct S54 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T6 a3; /* position */
	T6 a4; /* last_position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
	T6 a9; /* found_position */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* special_item_routines */
	T0* a13; /* item_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type ST_SPLITTER */
struct S55 {
	int id;
	T1 a1; /* has_escape_character */
	T2 a2; /* escape_character */
	T0* a3; /* separator_codes */
	T0* a4; /* separators */
};

/* Struct for type UC_STRING_EQUALITY_TESTER */
struct S57 {
	int id;
};

/* Struct for type detachable KL_EQUALITY_TESTER [STRING_8] */
struct S58 {
	int id;
};

/* Struct for type ET_XACE_SYSTEM */
struct S61 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* master_classes */
	T0* a3; /* root_type */
	T0* a4; /* none_type */
	T0* a5; /* any_type */
	T0* a6; /* stop_request */
	T0* a7; /* root_creation */
	T0* a8; /* eiffel_parser */
	T6 a9; /* default_create_seed */
	T0* a10; /* boolean_type */
	T0* a11; /* character_8_type */
	T0* a12; /* character_32_type */
	T0* a13; /* integer_8_type */
	T0* a14; /* integer_16_type */
	T0* a15; /* integer_32_type */
	T0* a16; /* integer_64_type */
	T0* a17; /* natural_8_type */
	T0* a18; /* natural_16_type */
	T0* a19; /* natural_32_type */
	T0* a20; /* natural_64_type */
	T0* a21; /* real_32_type */
	T0* a22; /* real_64_type */
	T0* a23; /* pointer_type */
	T0* a24; /* special_any_type */
	T0* a25; /* interface_checker */
	T0* a26; /* string_8_type */
	T0* a27; /* string_32_type */
	T0* a28; /* array_any_type */
	T0* a29; /* typed_pointer_any_type */
	T0* a30; /* ise_version */
	T0* a31; /* routine_type */
	T0* a32; /* detachable_tuple_type */
	T0* a33; /* ise_exception_manager_type */
	T0* a34; /* universe */
	T0* a35; /* detachable_none_type */
	T0* a36; /* system_name */
	T0* a37; /* external_include_pathnames */
	T0* a38; /* external_library_pathnames */
	T0* a39; /* options */
	T0* a40; /* ast_factory */
	T0* a41; /* external_object_pathnames */
	T1 a42; /* console_application_mode */
	T1 a43; /* alias_transition_mode */
	T1 a44; /* unknown_builtin_reported */
	T1 a45; /* qualified_anchored_types_enabled */
	T1 a46; /* qualified_anchored_types_cycle_detection_enabled */
	T0* a47; /* null_processor */
	T0* a48; /* eiffel_preparser */
	T0* a49; /* master_class_checker */
	T0* a50; /* provider_checker */
	T0* a51; /* ancestor_builder */
	T0* a52; /* feature_flattener */
	T0* a53; /* implementation_checker */
	T0* a54; /* flat_implementation_checker */
	T0* a55; /* current_system */
	T0* a56; /* integer_type */
	T0* a57; /* string_type */
	T0* a58; /* name */
	T0* a59; /* root_class_name */
	T0* a60; /* ecma_version */
	T1 a61; /* preparse_enabled */
	T1 a62; /* flat_dbc_mode */
	T1 a63; /* suppliers_enabled */
	T0* a64; /* dotnet_assemblies */
	T0* a65; /* libraries */
	T1 a66; /* flat_mode */
	T0* a67; /* mounted_libraries */
	T0* a68; /* clusters */
	T1 a69; /* exception_trace_mode */
	T1 a70; /* trace_mode */
	T1 a71; /* use_boehm_gc */
	T0* a72; /* creation_procedure_name */
	T1 a73; /* preparse_shallow_mode */
	T1 a74; /* preparse_single_mode */
	T1 a75; /* preparse_multiple_mode */
	T0* a76; /* detachable_any_type */
	T0* a77; /* any_parent */
	T0* a78; /* any_parents */
	T0* a79; /* any_clients */
	T0* a80; /* tuple_type */
	T0* a81; /* tuple_like_current_type */
	T0* a82; /* unfolded_empty_tuple_actual_parameters */
	T0* a83; /* array_detachable_any_type */
	T0* a84; /* array_like_current_type */
	T0* a85; /* character_type */
	T0* a86; /* character_8_convert_feature */
	T0* a87; /* character_32_convert_feature */
	T0* a88; /* double_type */
	T0* a89; /* exception_type */
	T0* a90; /* detachable_exception_type */
	T0* a91; /* exception_manager_type */
	T0* a92; /* function_type */
	T0* a93; /* integer_8_convert_feature */
	T0* a94; /* integer_16_convert_feature */
	T0* a95; /* integer_32_convert_feature */
	T0* a96; /* integer_64_convert_feature */
	T0* a97; /* iterable_detachable_any_type */
	T0* a98; /* natural_type */
	T0* a99; /* natural_8_convert_feature */
	T0* a100; /* natural_16_convert_feature */
	T0* a101; /* natural_32_convert_feature */
	T0* a102; /* natural_64_convert_feature */
	T0* a103; /* predicate_like_current_type */
	T0* a104; /* procedure_like_current_type */
	T0* a105; /* real_type */
	T0* a106; /* real_32_convert_feature */
	T0* a107; /* real_64_convert_feature */
	T0* a108; /* special_detachable_any_type */
	T0* a109; /* string_8_convert_feature */
	T0* a110; /* string_32_convert_feature */
	T0* a111; /* system_object_type */
	T0* a112; /* system_object_parents */
	T0* a113; /* system_string_type */
	T0* a114; /* type_any_type */
	T0* a115; /* type_type_any_type */
	T0* a116; /* type_detachable_any_type */
	T0* a117; /* type_detachable_like_current_type */
	T0* a118; /* detachable_type_exception_type */
	T0* a119; /* type_detachable_exception_type */
	T0* a120; /* detachable_type_detachable_any_type */
	T0* a121; /* type_like_current_type */
	T0* a122; /* typed_pointer_like_current_type */
	T0* a123; /* wide_character_type */
	T1 a124; /* is_read_only */
	T1 a125; /* use_attribute_keyword */
	T1 a126; /* use_note_keyword */
	T1 a127; /* use_reference_keyword */
	T1 a128; /* use_attached_keyword */
	T1 a129; /* use_detachable_keyword */
	T6 a130; /* registered_feature_count */
	T1 a131; /* cluster_dependence_enabled */
	T1 a132; /* is_preparsed */
	T0* a133; /* scm_read_mapping_builder */
	T0* a134; /* scm_write_mapping_builder */
	T6 a135; /* registered_class_count */
	T6 a136; /* routine_call_seed */
	T6 a137; /* function_item_seed */
	T6 a138; /* is_equal_seed */
	T6 a139; /* dispose_seed */
	T1 a140; /* multithreaded_mode */
	T0* a141; /* internal_dotnet_assembly_consumer */
	T1 a142; /* attachment_type_conformance_mode */
	T0* a143; /* implicit_attachment_type_mark */
	T1 a144; /* obsolete_routine_type_mode */
	T1 a145; /* providers_enabled */
	T1 a146; /* preparse_readonly_mode */
	T1 a147; /* preparse_override_mode */
	T1 a148; /* use_cluster_dependence_pathnames */
	T1 a149; /* is_dotnet */
	T6 a150; /* registered_inline_constant_count */
	T6 a151; /* copy_seed */
	T6 a152; /* iterable_new_cursor_seed */
	T6 a153; /* iteration_cursor_after_seed */
	T6 a154; /* iteration_cursor_forth_seed */
	T1 a155; /* target_type_attachment_mode */
};

/* Struct for type ET_ECF_SYSTEM_PARSER */
struct S62 {
	int id;
	T0* a1; /* last_system */
	T0* a2; /* ast_factory */
	T1 a3; /* finalize_mode */
	T0* a4; /* parsed_libraries */
	T0* a5; /* parsed_dotnet_assemblies */
	T0* a6; /* xml_parser */
	T0* a7; /* tree_pipe */
	T0* a8; /* error_handler */
	T0* a9; /* ise_version */
	T0* a10; /* library_parser */
};

/* Struct for type ET_ECF_ERROR_HANDLER */
struct S63 {
	int id;
	T6 a1; /* error_count */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type ET_ECF_SYSTEM */
struct S64 {
	int id;
	T0* a1; /* targets */
	T0* a2; /* libraries */
	T0* a3; /* filename */
	T0* a4; /* dotnet_assemblies */
	T0* a5; /* selected_target */
	T0* a6; /* error_handler */
	T0* a7; /* master_classes */
	T0* a8; /* root_type */
	T0* a9; /* none_type */
	T0* a10; /* any_type */
	T0* a11; /* stop_request */
	T0* a12; /* root_creation */
	T0* a13; /* eiffel_parser */
	T6 a14; /* default_create_seed */
	T0* a15; /* boolean_type */
	T0* a16; /* character_8_type */
	T0* a17; /* character_32_type */
	T0* a18; /* integer_8_type */
	T0* a19; /* integer_16_type */
	T0* a20; /* integer_32_type */
	T0* a21; /* integer_64_type */
	T0* a22; /* natural_8_type */
	T0* a23; /* natural_16_type */
	T0* a24; /* natural_32_type */
	T0* a25; /* natural_64_type */
	T0* a26; /* real_32_type */
	T0* a27; /* real_64_type */
	T0* a28; /* pointer_type */
	T0* a29; /* special_any_type */
	T0* a30; /* interface_checker */
	T0* a31; /* string_8_type */
	T0* a32; /* string_32_type */
	T0* a33; /* array_any_type */
	T0* a34; /* typed_pointer_any_type */
	T0* a35; /* ise_version */
	T0* a36; /* routine_type */
	T0* a37; /* detachable_tuple_type */
	T0* a38; /* ise_exception_manager_type */
	T0* a39; /* universe */
	T0* a40; /* detachable_none_type */
	T0* a41; /* implementation_checker */
	T1 a42; /* use_boehm_gc */
	T0* a43; /* external_include_pathnames */
	T0* a44; /* external_library_pathnames */
	T0* a45; /* external_object_pathnames */
	T0* a46; /* character_type */
	T0* a47; /* wide_character_type */
	T0* a48; /* integer_type */
	T0* a49; /* natural_type */
	T0* a50; /* real_type */
	T0* a51; /* double_type */
	T6 a52; /* routine_call_seed */
	T6 a53; /* function_item_seed */
	T6 a54; /* is_equal_seed */
	T6 a55; /* dispose_seed */
	T6 a56; /* registered_feature_count */
	T1 a57; /* multithreaded_mode */
	T1 a58; /* trace_mode */
	T1 a59; /* exception_trace_mode */
	T1 a60; /* console_application_mode */
	T0* a61; /* system_name */
	T0* a62; /* name */
	T0* a63; /* ecma_version */
	T1 a64; /* qualified_anchored_types_enabled */
	T1 a65; /* preparse_enabled */
	T0* a66; /* eiffel_preparser */
	T0* a67; /* null_processor */
	T0* a68; /* master_class_checker */
	T0* a69; /* provider_checker */
	T0* a70; /* ancestor_builder */
	T0* a71; /* feature_flattener */
	T1 a72; /* flat_dbc_mode */
	T1 a73; /* suppliers_enabled */
	T0* a74; /* flat_implementation_checker */
	T0* a75; /* current_system */
	T1 a76; /* flat_mode */
	T0* a77; /* uuid */
	T0* a78; /* ecf_namespace */
	T0* a79; /* ecf_version */
	T0* a80; /* library_target */
	T0* a81; /* ast_factory */
	T1 a82; /* alias_transition_mode */
	T1 a83; /* unknown_builtin_reported */
	T1 a84; /* qualified_anchored_types_cycle_detection_enabled */
	T0* a85; /* string_type */
	T1 a86; /* use_attribute_keyword */
	T1 a87; /* use_note_keyword */
	T1 a88; /* use_reference_keyword */
	T1 a89; /* use_attached_keyword */
	T1 a90; /* use_detachable_keyword */
	T1 a91; /* cluster_dependence_enabled */
	T1 a92; /* is_preparsed */
	T0* a93; /* clusters */
	T1 a94; /* is_read_only */
	T1 a95; /* preparse_shallow_mode */
	T1 a96; /* preparse_single_mode */
	T1 a97; /* preparse_multiple_mode */
	T0* a98; /* detachable_any_type */
	T0* a99; /* any_parent */
	T0* a100; /* any_parents */
	T0* a101; /* any_clients */
	T0* a102; /* tuple_type */
	T0* a103; /* tuple_like_current_type */
	T0* a104; /* unfolded_empty_tuple_actual_parameters */
	T0* a105; /* array_detachable_any_type */
	T0* a106; /* array_like_current_type */
	T0* a107; /* character_8_convert_feature */
	T0* a108; /* character_32_convert_feature */
	T0* a109; /* exception_type */
	T0* a110; /* detachable_exception_type */
	T0* a111; /* exception_manager_type */
	T0* a112; /* function_type */
	T0* a113; /* integer_8_convert_feature */
	T0* a114; /* integer_16_convert_feature */
	T0* a115; /* integer_32_convert_feature */
	T0* a116; /* integer_64_convert_feature */
	T0* a117; /* iterable_detachable_any_type */
	T0* a118; /* natural_8_convert_feature */
	T0* a119; /* natural_16_convert_feature */
	T0* a120; /* natural_32_convert_feature */
	T0* a121; /* natural_64_convert_feature */
	T0* a122; /* predicate_like_current_type */
	T0* a123; /* procedure_like_current_type */
	T0* a124; /* real_32_convert_feature */
	T0* a125; /* real_64_convert_feature */
	T0* a126; /* special_detachable_any_type */
	T0* a127; /* string_8_convert_feature */
	T0* a128; /* string_32_convert_feature */
	T0* a129; /* system_object_type */
	T0* a130; /* system_object_parents */
	T0* a131; /* system_string_type */
	T0* a132; /* type_any_type */
	T0* a133; /* type_type_any_type */
	T0* a134; /* type_detachable_any_type */
	T0* a135; /* type_detachable_like_current_type */
	T0* a136; /* detachable_type_exception_type */
	T0* a137; /* type_detachable_exception_type */
	T0* a138; /* detachable_type_detachable_any_type */
	T0* a139; /* type_like_current_type */
	T0* a140; /* typed_pointer_like_current_type */
	T0* a141; /* scm_read_mapping_builder */
	T0* a142; /* scm_write_mapping_builder */
	T6 a143; /* registered_class_count */
	T1 a144; /* attachment_type_conformance_mode */
	T0* a145; /* implicit_attachment_type_mark */
	T0* a146; /* internal_dotnet_assembly_consumer */
	T1 a147; /* obsolete_routine_type_mode */
	T1 a148; /* providers_enabled */
	T1 a149; /* preparse_readonly_mode */
	T1 a150; /* preparse_override_mode */
	T1 a151; /* use_cluster_dependence_pathnames */
	T1 a152; /* is_dotnet */
	T6 a153; /* registered_inline_constant_count */
	T1 a154; /* target_type_attachment_mode */
	T6 a155; /* copy_seed */
	T6 a156; /* iterable_new_cursor_seed */
	T6 a157; /* iteration_cursor_after_seed */
	T6 a158; /* iteration_cursor_forth_seed */
};

/* Struct for type ET_ECF_TARGET */
struct S65 {
	int id;
	T0* a1; /* root */
	T0* a2; /* variables */
	T0* a3; /* settings */
	T0* a4; /* options */
	T0* a5; /* name */
	T0* a6; /* clusters */
	T0* a7; /* libraries */
	T0* a8; /* dotnet_assemblies */
	T0* a9; /* file_rules */
	T0* a10; /* external_includes */
	T0* a11; /* external_libraries */
	T0* a12; /* external_objects */
	T0* a13; /* parent */
};

/* Struct for type KL_EXECUTION_ENVIRONMENT */
struct S66 {
	int id;
};

/* Struct for type ET_ECF_VARIABLES */
struct S67 {
	int id;
	T0* a1; /* primary_variables */
	T0* a2; /* secondary_variables */
};

/* Struct for type ET_LACE_PARSER */
struct S68 {
	int id;
	T0* a1; /* last_system */
	T6 a2; /* yy_parsing_status */
	T0* a3; /* named_clusters */
	T0* a4; /* override_cluster_names */
	T0* a5; /* external_include_pathnames */
	T0* a6; /* external_object_pathnames */
	T0* a7; /* metadata_cache_path_value */
	T0* a8; /* msil_clr_version_value */
	T1 a9; /* console_application_value */
	T1 a10; /* exception_trace_value */
	T1 a11; /* trace_value */
	T0* a12; /* ast_factory */
	T6 a13; /* eif_lineno */
	T0* a14; /* eif_buffer */
	T0* a15; /* input_buffer */
	T6 a16; /* yy_end */
	T6 a17; /* yy_position */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_suspended_yystacksize */
	T6 a21; /* yy_suspended_yystate */
	T6 a22; /* yy_suspended_yyn */
	T6 a23; /* yy_suspended_yychar1 */
	T6 a24; /* yy_suspended_index */
	T6 a25; /* yy_suspended_yyss_top */
	T6 a26; /* yy_suspended_yy_goto */
	T0* a27; /* yyr1 */
	T0* a28; /* yyss */
	T6 a29; /* yyssp */
	T0* a30; /* yypgoto */
	T0* a31; /* yycheck */
	T0* a32; /* yytable */
	T0* a33; /* yydefgoto */
	T6 a34; /* error_count */
	T1 a35; /* yy_lookahead_needed */
	T6 a36; /* yyerrstatus */
	T0* a37; /* yypact */
	T6 a38; /* last_token */
	T0* a39; /* yytranslate */
	T0* a40; /* yydefact */
	T0* a41; /* filename */
	T0* a42; /* error_handler */
	T0* a43; /* last_et_identifier_value */
	T1 a44; /* yy_rejected */
	T6 a45; /* yy_state_count */
	T6 a46; /* yy_full_match */
	T6 a47; /* yy_lp */
	T6 a48; /* yy_looking_for_trail_begin */
	T6 a49; /* yy_full_lp */
	T6 a50; /* yy_full_state */
	T6 a51; /* pushed_start_condition_count */
	T6 a52; /* yy_start_state */
	T6 a53; /* yy_start */
	T6 a54; /* line */
	T6 a55; /* column */
	T6 a56; /* position */
	T1 a57; /* yy_more_flag */
	T6 a58; /* yy_more_len */
	T6 a59; /* yy_last_accepting_state */
	T6 a60; /* yy_last_accepting_cpos */
	T6 a61; /* yyvsp1 */
	T6 a62; /* yyvsp2 */
	T6 a63; /* yyvsp3 */
	T6 a64; /* yyvsp4 */
	T6 a65; /* yyvsp5 */
	T6 a66; /* yyvsp6 */
	T6 a67; /* yyvsp7 */
	T6 a68; /* yyvsp8 */
	T6 a69; /* yyvsp9 */
	T6 a70; /* yyvsp10 */
	T6 a71; /* yyvsp11 */
	T6 a72; /* yyvsp12 */
	T0* a73; /* yy_state_stack */
	T0* a74; /* yy_content_area */
	T0* a75; /* yy_ec */
	T0* a76; /* yy_content */
	T0* a77; /* yy_accept */
	T0* a78; /* yy_chk */
	T0* a79; /* yy_base */
	T0* a80; /* yy_def */
	T0* a81; /* yy_meta */
	T0* a82; /* yy_nxt */
	T0* a83; /* yy_acclist */
	T0* a84; /* yytypes2 */
	T6 a85; /* yyvsc1 */
	T0* a86; /* yyvs1 */
	T0* a87; /* yyspecial_routines1 */
	T0* a88; /* last_detachable_any_value */
	T6 a89; /* yyvsc2 */
	T0* a90; /* yyvs2 */
	T0* a91; /* yyspecial_routines2 */
	T0* a92; /* yyvs10 */
	T0* a93; /* yyvs5 */
	T0* a94; /* yyvs12 */
	T0* a95; /* yyvs8 */
	T0* a96; /* yyspecial_routines10 */
	T6 a97; /* yyvsc10 */
	T6 a98; /* yyvsc8 */
	T0* a99; /* yyspecial_routines8 */
	T6 a100; /* yyvsc5 */
	T0* a101; /* yyspecial_routines5 */
	T0* a102; /* yyvs4 */
	T0* a103; /* yyvs3 */
	T6 a104; /* yyvsc4 */
	T0* a105; /* yyspecial_routines4 */
	T0* a106; /* yyspecial_routines3 */
	T0* a107; /* yyvs7 */
	T6 a108; /* yyvsc3 */
	T6 a109; /* yyvsc7 */
	T0* a110; /* yyspecial_routines7 */
	T0* a111; /* yyvs6 */
	T6 a112; /* yyvsc6 */
	T0* a113; /* yyspecial_routines6 */
	T6 a114; /* yyvsc12 */
	T0* a115; /* yyspecial_routines12 */
	T0* a116; /* yyvs11 */
	T0* a117; /* yyvs9 */
	T6 a118; /* yyvsc11 */
	T0* a119; /* yyspecial_routines11 */
	T6 a120; /* yyvsc9 */
	T0* a121; /* yyspecial_routines9 */
	T0* a122; /* yytypes1 */
	T0* a123; /* yy_pushed_start_conditions */
	T6 a124; /* code_ */
};

/* Struct for type ET_LACE_ERROR_HANDLER */
struct S69 {
	int id;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
};

/* Struct for type ET_LACE_SYSTEM */
struct S70 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* master_classes */
	T0* a3; /* root_type */
	T0* a4; /* none_type */
	T0* a5; /* any_type */
	T0* a6; /* stop_request */
	T0* a7; /* root_creation */
	T0* a8; /* eiffel_parser */
	T6 a9; /* default_create_seed */
	T0* a10; /* boolean_type */
	T0* a11; /* character_8_type */
	T0* a12; /* character_32_type */
	T0* a13; /* integer_8_type */
	T0* a14; /* integer_16_type */
	T0* a15; /* integer_32_type */
	T0* a16; /* integer_64_type */
	T0* a17; /* natural_8_type */
	T0* a18; /* natural_16_type */
	T0* a19; /* natural_32_type */
	T0* a20; /* natural_64_type */
	T0* a21; /* real_32_type */
	T0* a22; /* real_64_type */
	T0* a23; /* pointer_type */
	T0* a24; /* special_any_type */
	T0* a25; /* interface_checker */
	T0* a26; /* string_8_type */
	T0* a27; /* string_32_type */
	T0* a28; /* array_any_type */
	T0* a29; /* typed_pointer_any_type */
	T0* a30; /* ise_version */
	T0* a31; /* routine_type */
	T0* a32; /* detachable_tuple_type */
	T0* a33; /* ise_exception_manager_type */
	T0* a34; /* universe */
	T0* a35; /* detachable_none_type */
	T0* a36; /* implementation_checker */
	T1 a37; /* use_boehm_gc */
	T0* a38; /* external_include_pathnames */
	T0* a39; /* external_library_pathnames */
	T0* a40; /* external_object_pathnames */
	T0* a41; /* character_type */
	T0* a42; /* wide_character_type */
	T0* a43; /* integer_type */
	T0* a44; /* natural_type */
	T0* a45; /* real_type */
	T0* a46; /* double_type */
	T6 a47; /* routine_call_seed */
	T6 a48; /* function_item_seed */
	T6 a49; /* is_equal_seed */
	T6 a50; /* dispose_seed */
	T6 a51; /* registered_feature_count */
	T1 a52; /* multithreaded_mode */
	T1 a53; /* trace_mode */
	T1 a54; /* exception_trace_mode */
	T1 a55; /* console_application_mode */
	T0* a56; /* system_name */
	T0* a57; /* ast_factory */
	T1 a58; /* alias_transition_mode */
	T1 a59; /* unknown_builtin_reported */
	T1 a60; /* qualified_anchored_types_enabled */
	T1 a61; /* qualified_anchored_types_cycle_detection_enabled */
	T0* a62; /* null_processor */
	T0* a63; /* eiffel_preparser */
	T0* a64; /* master_class_checker */
	T0* a65; /* provider_checker */
	T0* a66; /* ancestor_builder */
	T0* a67; /* feature_flattener */
	T0* a68; /* flat_implementation_checker */
	T0* a69; /* current_system */
	T0* a70; /* string_type */
	T0* a71; /* name */
	T0* a72; /* clusters */
	T0* a73; /* dotnet_assemblies */
	T0* a74; /* ecma_version */
	T1 a75; /* preparse_enabled */
	T1 a76; /* flat_dbc_mode */
	T1 a77; /* suppliers_enabled */
	T0* a78; /* libraries */
	T1 a79; /* flat_mode */
	T1 a80; /* preparse_shallow_mode */
	T1 a81; /* preparse_single_mode */
	T1 a82; /* preparse_multiple_mode */
	T0* a83; /* detachable_any_type */
	T0* a84; /* any_parent */
	T0* a85; /* any_parents */
	T0* a86; /* any_clients */
	T0* a87; /* tuple_type */
	T0* a88; /* tuple_like_current_type */
	T0* a89; /* unfolded_empty_tuple_actual_parameters */
	T0* a90; /* array_detachable_any_type */
	T0* a91; /* array_like_current_type */
	T0* a92; /* character_8_convert_feature */
	T0* a93; /* character_32_convert_feature */
	T0* a94; /* exception_type */
	T0* a95; /* detachable_exception_type */
	T0* a96; /* exception_manager_type */
	T0* a97; /* function_type */
	T0* a98; /* integer_8_convert_feature */
	T0* a99; /* integer_16_convert_feature */
	T0* a100; /* integer_32_convert_feature */
	T0* a101; /* integer_64_convert_feature */
	T0* a102; /* iterable_detachable_any_type */
	T0* a103; /* natural_8_convert_feature */
	T0* a104; /* natural_16_convert_feature */
	T0* a105; /* natural_32_convert_feature */
	T0* a106; /* natural_64_convert_feature */
	T0* a107; /* predicate_like_current_type */
	T0* a108; /* procedure_like_current_type */
	T0* a109; /* real_32_convert_feature */
	T0* a110; /* real_64_convert_feature */
	T0* a111; /* special_detachable_any_type */
	T0* a112; /* string_8_convert_feature */
	T0* a113; /* string_32_convert_feature */
	T0* a114; /* system_object_type */
	T0* a115; /* system_object_parents */
	T0* a116; /* system_string_type */
	T0* a117; /* type_any_type */
	T0* a118; /* type_type_any_type */
	T0* a119; /* type_detachable_any_type */
	T0* a120; /* type_detachable_like_current_type */
	T0* a121; /* detachable_type_exception_type */
	T0* a122; /* type_detachable_exception_type */
	T0* a123; /* detachable_type_detachable_any_type */
	T0* a124; /* type_like_current_type */
	T0* a125; /* typed_pointer_like_current_type */
	T1 a126; /* is_read_only */
	T1 a127; /* use_attribute_keyword */
	T1 a128; /* use_note_keyword */
	T1 a129; /* use_reference_keyword */
	T1 a130; /* use_attached_keyword */
	T1 a131; /* use_detachable_keyword */
	T1 a132; /* cluster_dependence_enabled */
	T1 a133; /* is_preparsed */
	T0* a134; /* scm_read_mapping_builder */
	T0* a135; /* scm_write_mapping_builder */
	T6 a136; /* registered_class_count */
	T1 a137; /* attachment_type_conformance_mode */
	T0* a138; /* implicit_attachment_type_mark */
	T0* a139; /* internal_dotnet_assembly_consumer */
	T1 a140; /* obsolete_routine_type_mode */
	T1 a141; /* providers_enabled */
	T1 a142; /* preparse_readonly_mode */
	T1 a143; /* preparse_override_mode */
	T1 a144; /* use_cluster_dependence_pathnames */
	T1 a145; /* is_dotnet */
	T6 a146; /* registered_inline_constant_count */
	T6 a147; /* copy_seed */
	T6 a148; /* iterable_new_cursor_seed */
	T6 a149; /* iteration_cursor_after_seed */
	T6 a150; /* iteration_cursor_forth_seed */
	T1 a151; /* target_type_attachment_mode */
};

/* Struct for type ET_DYNAMIC_SYSTEM */
struct S71 {
	int id;
	T1 a1; /* has_fatal_error */
	T1 a2; /* catcall_error_mode */
	T0* a3; /* current_system */
	T0* a4; /* dynamic_types */
	T0* a5; /* null_dynamic_type_set_builder */
	T1 a6; /* full_class_checking */
	T1 a7; /* catcall_warning_mode */
	T0* a8; /* new_instance_types */
	T0* a9; /* dynamic_type_set_builder */
	T0* a10; /* unknown_type */
	T0* a11; /* boolean_type */
	T0* a12; /* character_8_type */
	T0* a13; /* character_32_type */
	T0* a14; /* integer_8_type */
	T0* a15; /* integer_16_type */
	T0* a16; /* integer_32_type */
	T0* a17; /* integer_64_type */
	T0* a18; /* natural_8_type */
	T0* a19; /* natural_16_type */
	T0* a20; /* natural_32_type */
	T0* a21; /* natural_64_type */
	T0* a22; /* real_32_type */
	T0* a23; /* real_64_type */
	T0* a24; /* pointer_type */
	T0* a25; /* string_8_type */
	T0* a26; /* string_32_type */
	T0* a27; /* special_character_8_type */
	T0* a28; /* special_character_32_type */
	T0* a29; /* ise_exception_manager_type */
	T0* a30; /* any_type */
	T0* a31; /* none_type */
	T0* a32; /* root_type */
	T0* a33; /* root_creation_procedure */
	T0* a34; /* special_count_feature */
	T0* a35; /* special_capacity_feature */
	T0* a36; /* array_area_feature */
	T0* a37; /* array_lower_feature */
	T0* a38; /* array_upper_feature */
	T0* a39; /* typed_pointer_to_pointer_feature */
	T0* a40; /* routine_closed_operands_feature */
	T0* a41; /* routine_is_target_closed_feature */
	T0* a42; /* ise_exception_manager_init_exception_manager_feature */
	T0* a43; /* ise_exception_manager_set_exception_data_feature */
	T0* a44; /* type_of_type_feature */
	T1 a45; /* in_create_meta_type */
};

/* Struct for type ET_C_GENERATOR */
struct S74 {
	int id;
	T6 a1; /* never_void_target_count */
	T6 a2; /* can_be_void_target_count */
	T1 a3; /* has_fatal_error */
	T0* a4; /* current_dynamic_system */
	T1 a5; /* short_names */
	T1 a6; /* split_mode */
	T6 a7; /* split_threshold */
	T1 a8; /* use_boehm_gc */
	T0* a9; /* system_name */
	T0* a10; /* current_file */
	T0* a11; /* header_file */
	T0* a12; /* current_type */
	T0* a13; /* current_feature */
	T0* a14; /* extra_dynamic_type_sets */
	T0* a15; /* current_dynamic_type_sets */
	T0* a16; /* current_function_header_buffer */
	T0* a17; /* current_function_body_buffer */
	T0* a18; /* temp_variables */
	T0* a19; /* used_temp_variables */
	T0* a20; /* free_temp_variables */
	T0* a21; /* frozen_temp_variables */
	T0* a22; /* conforming_types */
	T0* a23; /* conforming_type_set */
	T0* a24; /* non_conforming_types */
	T0* a25; /* equality_type_set */
	T0* a26; /* equality_common_types */
	T0* a27; /* operand_stack */
	T0* a28; /* call_operands */
	T0* a29; /* attachment_dynamic_type_ids */
	T0* a30; /* target_dynamic_type_ids */
	T0* a31; /* target_dynamic_types */
	T0* a32; /* standalone_type_sets */
	T0* a33; /* deep_twin_types */
	T0* a34; /* deep_equal_types */
	T0* a35; /* deep_feature_target_type_sets */
	T0* a36; /* current_object_tests */
	T0* a37; /* current_object_equalities */
	T0* a38; /* current_equalities */
	T0* a39; /* current_agents */
	T0* a40; /* agent_open_operands */
	T0* a41; /* agent_closed_operands */
	T0* a42; /* agent_target */
	T0* a43; /* agent_arguments */
	T0* a44; /* agent_instruction */
	T0* a45; /* agent_expression */
	T0* a46; /* agent_closed_operands_type */
	T0* a47; /* wrapper_expression */
	T0* a48; /* agent_tuple_item_expressions */
	T0* a49; /* agent_manifest_tuple */
	T0* a50; /* formal_arguments */
	T0* a51; /* manifest_array_types */
	T0* a52; /* big_manifest_array_types */
	T0* a53; /* manifest_tuple_types */
	T0* a54; /* once_features */
	T0* a55; /* constant_features */
	T0* a56; /* inline_constants */
	T0* a57; /* dispose_procedures */
	T0* a58; /* dynamic_type_id_set_names */
	T0* a59; /* called_features */
	T0* a60; /* included_header_filenames */
	T0* a61; /* included_runtime_header_files */
	T0* a62; /* included_runtime_c_files */
	T0* a63; /* c_filenames */
	T1 a64; /* finalize_mode */
	T0* a65; /* locals_written_in_body */
	T0* a66; /* locals_written_in_rescue */
	T0* a67; /* locals_written */
	T0* a68; /* locals_read_in_body */
	T0* a69; /* locals_read_in_rescue */
	T0* a70; /* locals_read */
	T0* a71; /* external_c_regexp */
	T0* a72; /* external_c_macro_regexp */
	T0* a73; /* external_c_struct_regexp */
	T0* a74; /* external_c_inline_regexp */
	T0* a75; /* old_external_c_regexp */
	T0* a76; /* old_external_c_macro_regexp */
	T0* a77; /* old_external_c_struct_regexp */
	T0* a78; /* external_cpp_regexp */
	T0* a79; /* external_cpp_inline_regexp */
	T0* a80; /* external_dllwin_regexp */
	T0* a81; /* old_external_dllwin32_regexp */
	T0* a82; /* c_file */
	T6 a83; /* c_file_size */
	T0* a84; /* cpp_file */
	T6 a85; /* cpp_file_size */
	T6 a86; /* indentation */
	T0* a87; /* assignment_target */
	T1 a88; /* in_operand */
	T0* a89; /* call_target_type */
	T0* a90; /* current_agent */
	T1 a91; /* call_target_check_void */
	T1 a92; /* has_rescue */
	T1 a93; /* result_written */
	T1 a94; /* result_read */
	T1 a95; /* has_retry */
};

/* Struct for type KL_SHELL_COMMAND */
struct S75 {
	int id;
	T6 a1; /* exit_code */
	T0* a2; /* string_command */
	T0* a3; /* command */
	T6 a4; /* return_code */
	T1 a5; /* is_system_code */
};

/* Struct for type DS_HASH_SET [STRING_8] */
struct S76 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T0* a3; /* equality_tester */
	T6 a4; /* position */
	T6 a5; /* count */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* free_slot */
	T6 a9; /* last_position */
	T6 a10; /* modulus */
	T6 a11; /* found_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* hash_function */
};

/* Struct for type ET_NULL_ERROR_HANDLER */
struct S77 {
	int id;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
	T1 a4; /* has_error */
	T1 a5; /* benchmark_shown */
	T1 a6; /* is_ise */
	T1 a7; /* is_ge */
	T1 a8; /* has_eiffel_error */
	T1 a9; /* has_internal_error */
	T1 a10; /* is_verbose */
	T1 a11; /* is_pedantic */
};

/* Struct for type UT_VERSION */
struct S78 {
	int id;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_revision */
	T6 a4; /* internal_build */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
struct S79 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_dynamic_system */
	T0* a3; /* feature_checker */
	T0* a4; /* current_dynamic_type */
	T0* a5; /* current_dynamic_feature */
	T0* a6; /* dynamic_type_sets */
	T0* a7; /* object_id_dynamic_type_set */
	T0* a8; /* current_index */
	T0* a9; /* result_index */
	T0* a10; /* constant_indexes */
	T0* a11; /* none_index */
	T1 a12; /* catcall_error_mode */
	T1 a13; /* catcall_warning_mode */
	T1 a14; /* no_debug */
	T1 a15; /* no_assertion */
	T1 a16; /* is_built */
	T0* a17; /* type_checker */
	T0* a18; /* current_class */
	T0* a19; /* current_type */
	T0* a20; /* current_feature */
	T0* a21; /* current_feature_impl */
	T0* a22; /* current_class_impl */
	T0* a23; /* enclosing_inline_agents */
	T0* a24; /* unused_overloaded_procedures_list */
	T0* a25; /* unused_overloaded_queries_list */
	T0* a26; /* unused_overloaded_features_list */
	T0* a27; /* unused_contexts */
	T0* a28; /* current_context */
	T0* a29; /* current_target_type */
	T0* a30; /* current_object_test_types */
	T0* a31; /* current_object_test_scope */
	T0* a32; /* object_test_scope_builder */
	T0* a33; /* current_across_cursor_types */
	T0* a34; /* current_across_cursor_scope */
	T0* a35; /* current_initialization_scope */
	T0* a36; /* current_attachment_scope */
	T0* a37; /* attachment_scope_builder */
	T0* a38; /* unused_attachment_scopes */
	T1 a39; /* in_precursor */
	T1 a40; /* in_rescue */
	T0* a41; /* current_inline_agent */
	T0* a42; /* supplier_handler */
	T1 a43; /* in_invariant */
	T1 a44; /* in_precondition */
	T1 a45; /* in_postcondition */
	T1 a46; /* in_check_instruction */
	T0* a47; /* precursor_procedures */
	T0* a48; /* precursor_queries */
};

/* Struct for type ET_CLASS_TYPE */
struct S80 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
	T0* a4; /* named_base_class */
	T1 a5; /* tuple_actual_parameters_unfolded_1 */
	T1 a6; /* tuple_actual_parameters_unfolded_2 */
};

/* Struct for type ET_TOKEN_CONSTANTS */
struct S81 {
	int id;
};

/* Struct for type ET_CLASS */
struct S82 {
	int id;
	T0* a1; /* group */
	T1 a2; /* is_parsed */
	T1 a3; /* has_syntax_error */
	T1 a4; /* ancestors_built */
	T1 a5; /* has_ancestors_error */
	T1 a6; /* features_flattened */
	T1 a7; /* has_flattening_error */
	T1 a8; /* interface_checked */
	T1 a9; /* has_interface_error */
	T1 a10; /* implementation_checked */
	T1 a11; /* has_implementation_error */
	T0* a12; /* name */
	T6 a13; /* id */
	T0* a14; /* ancestors */
	T0* a15; /* queries */
	T0* a16; /* procedures */
	T0* a17; /* class_keyword */
	T0* a18; /* end_keyword */
	T0* a19; /* named_base_class */
	T6 a20; /* time_stamp */
	T8 a21; /* class_code */
	T1 a22; /* tuple_actual_parameters_unfolded_1 */
	T1 a23; /* tuple_actual_parameters_unfolded_2 */
	T0* a24; /* formal_parameters */
	T6 a25; /* index */
	T1 a26; /* has_deferred_features */
	T0* a27; /* creators */
	T0* a28; /* class_mark */
	T0* a29; /* suppliers */
	T0* a30; /* invariants */
	T0* a31; /* filename */
	T1 a32; /* redeclared_signatures_checked */
	T1 a33; /* is_ignored */
	T6 a34; /* tuple_constraint_position */
	T0* a35; /* parent_clause */
	T1 a36; /* is_interface */
	T1 a37; /* is_marked */
	T0* a38; /* external_keyword */
	T0* a39; /* frozen_keyword */
	T0* a40; /* convert_features */
	T0* a41; /* feature_clauses */
	T0* a42; /* first_indexing */
	T0* a43; /* second_indexing */
	T0* a44; /* obsolete_message */
	T0* a45; /* leading_break */
	T0* a46; /* providers */
	T0* a47; /* formal_parameter_types */
};

/* Struct for type KL_OPERATING_SYSTEM */
struct S84 {
	int id;
};

/* Struct for type UT_CANNOT_READ_FILE_ERROR */
struct S86 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type UT_VERSION_NUMBER */
struct S87 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type VOID_TARGET */
struct S88 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type ROUTINE_FAILURE */
struct S90 {
	int id;
	T0* a1; /* routine_name */
	T0* a2; /* class_name */
	T0* a3; /* throwing_exception */
	T0* a4; /* internal_trace */
	T0* a5; /* c_description */
	T0* a6; /* recipient_name */
	T0* a7; /* type_name */
};

/* Struct for type OLD_VIOLATION */
struct S92 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type NO_MORE_MEMORY */
struct S94 {
	int id;
	T0* a1; /* internal_trace */
	T6 a2; /* internal_code */
	T0* a3; /* throwing_exception */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type INVARIANT_VIOLATION */
struct S95 {
	int id;
	T0* a1; /* throwing_exception */
	T1 a2; /* is_entry */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type OPERATING_SYSTEM_SIGNAL_FAILURE */
struct S96 {
	int id;
	T0* a1; /* throwing_exception */
	T6 a2; /* signal_code */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type IO_FAILURE */
struct S97 {
	int id;
	T6 a1; /* internal_code */
	T0* a2; /* throwing_exception */
	T6 a3; /* error_code */
	T0* a4; /* internal_trace */
	T0* a5; /* c_description */
	T0* a6; /* recipient_name */
	T0* a7; /* type_name */
};

/* Struct for type OPERATING_SYSTEM_FAILURE */
struct S98 {
	int id;
	T0* a1; /* throwing_exception */
	T6 a2; /* error_code */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type COM_FAILURE */
struct S99 {
	int id;
	T0* a1; /* throwing_exception */
	T6 a2; /* hresult_code */
	T0* a3; /* exception_information */
	T6 a4; /* hresult */
	T0* a5; /* internal_trace */
	T0* a6; /* c_description */
	T0* a7; /* recipient_name */
	T0* a8; /* type_name */
};

/* Struct for type EIFFEL_RUNTIME_PANIC */
struct S100 {
	int id;
	T6 a1; /* internal_code */
	T0* a2; /* throwing_exception */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type PRECONDITION_VIOLATION */
struct S103 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type POSTCONDITION_VIOLATION */
struct S104 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type FLOATING_POINT_FAILURE */
struct S105 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type CHECK_VIOLATION */
struct S106 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type BAD_INSPECT_VALUE */
struct S107 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type VARIANT_VIOLATION */
struct S108 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type LOOP_INVARIANT_VIOLATION */
struct S109 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type RESCUE_FAILURE */
struct S110 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type RESUMPTION_FAILURE */
struct S111 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type CREATE_ON_DEFERRED */
struct S112 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXTERNAL_FAILURE */
struct S113 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type VOID_ASSIGNED_TO_EXPANDED */
struct S114 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
struct S115 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type MISMATCH_FAILURE */
struct S116 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type DEVELOPER_EXCEPTION */
struct S117 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type ADDRESS_APPLIED_TO_MELTED_FEATURE */
struct S118 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type SERIALIZATION_FAILURE */
struct S119 {
	int id;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type KL_WINDOWS_FILE_SYSTEM */
struct S120 {
	int id;
	T2 a1; /* secondary_directory_separator */
};

/* Struct for type KL_UNIX_FILE_SYSTEM */
struct S121 {
	int id;
};

/* Struct for type PRIMES */
struct S122 {
	int id;
};

/* Struct for type SPECIAL [INTEGER_32] */
struct S123 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 z2[1]; /* item */
};

/* Struct for type SPECIAL [BOOLEAN] */
struct S124 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T1 z2[1]; /* item */
};

/* Struct for type detachable KL_LINKABLE [CHARACTER_8] */
struct S126 {
	int id;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type MANAGED_POINTER */
struct S128 {
	int id;
	T14 a1; /* item */
	T6 a2; /* count */
	T1 a3; /* is_shared */
};

/* Struct for type FILE_INFO */
struct S129 {
	int id;
	T0* a1; /* buffered_file_info */
	T1 a2; /* is_following_symlinks */
	T1 a3; /* exists */
	T0* a4; /* internal_file_name */
	T0* a5; /* internal_name_pointer */
};

/* Struct for type KL_STANDARD_FILES */
struct S130 {
	int id;
};

/* Struct for type KL_STDERR_FILE */
struct S131 {
	int id;
	T14 a1; /* file_pointer */
	T6 a2; /* mode */
	T0* a3; /* last_string */
	T0* a4; /* internal_name */
	T0* a5; /* internal_detachable_name_pointer */
};

/* Struct for type KL_STDOUT_FILE */
struct S132 {
	int id;
	T14 a1; /* file_pointer */
	T6 a2; /* mode */
	T0* a3; /* last_string */
	T0* a4; /* internal_name */
	T0* a5; /* internal_detachable_name_pointer */
};

/* Struct for type UC_STRING */
struct S133 {
	int id;
	T6 a1; /* count */
	T6 a2; /* byte_count */
	T6 a3; /* internal_hash_code */
	T0* a4; /* area */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
};

/* Struct for type KL_ANY_ROUTINES */
struct S134 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [STRING_8] */
struct S136 {
	int id;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [AP_OPTION] */
struct S137 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T0* a3; /* equality_tester */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S138 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T6 a5; /* count */
};

/* Struct for type AP_ERROR_HANDLER */
struct S139 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type DS_LINKED_LIST_CURSOR [AP_OPTION] */
struct S140 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type SPECIAL [STRING_8] */
struct S141 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [STRING_8] */
struct S142 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_LINKED_LIST [STRING_8] */
struct S143 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
	T0* a5; /* equality_tester */
};

/* Struct for type KL_STRING_EQUALITY_TESTER */
struct S144 {
	int id;
};

/* Struct for type DS_LINKED_LIST [BOOLEAN] */
struct S148 {
	int id;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type DS_LINKED_LIST [INTEGER_32] */
struct S151 {
	int id;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type ST_WORD_WRAPPER */
struct S152 {
	int id;
	T6 a1; /* new_line_indentation */
	T6 a2; /* broken_words */
	T6 a3; /* maximum_text_width */
};

/* Struct for type ET_XACE_AST_FACTORY */
struct S153 {
	int id;
};

/* Struct for type XM_DOCUMENT */
struct S154 {
	int id;
	T0* a1; /* root_element */
	T0* a2; /* children */
};

/* Struct for type XM_ELEMENT */
struct S155 {
	int id;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* parent */
	T0* a4; /* children */
};

/* Struct for type XM_POSITION_TABLE */
struct S156 {
	int id;
	T0* a1; /* table */
};

/* Struct for type XM_TREE_CALLBACKS_PIPE */
struct S158 {
	int id;
	T0* a1; /* error */
	T0* a2; /* tree */
	T0* a3; /* start */
	T0* a4; /* last */
};

/* Struct for type XM_STOP_ON_ERROR_FILTER */
struct S159 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* last_error */
	T0* a3; /* next */
};

/* Struct for type XM_CALLBACKS_TO_TREE_FILTER */
struct S160 {
	int id;
	T0* a1; /* last_position_table */
	T0* a2; /* document */
	T0* a3; /* source_parser */
	T0* a4; /* current_element */
	T0* a5; /* namespace_cache */
	T0* a6; /* next */
};

/* Struct for type ET_XACE_VALIDATOR */
struct S161 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* error_handler */
};

/* Struct for type ET_XACE_PREPROCESSOR */
struct S162 {
	int id;
	T0* a1; /* variables */
	T0* a2; /* error_handler */
};

/* Struct for type DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8] */
struct S163 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T0* a7; /* equality_tester */
	T0* a8; /* internal_cursor */
	T6 a9; /* found_position */
	T0* a10; /* item_storage */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* capacity */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type XM_EXPAT_PARSER_FACTORY */
struct S164 {
	int id;
};

/* Struct for type XM_EIFFEL_PARSER */
struct S165 {
	int id;
	T0* a1; /* internal_last_error_description */
	T0* a2; /* scanner */
	T0* a3; /* error_positions */
	T0* a4; /* scanners */
	T1 a5; /* in_external_dtd */
	T0* a6; /* callbacks */
	T0* a7; /* entities */
	T0* a8; /* pe_entities */
	T0* a9; /* dtd_resolver */
	T0* a10; /* entity_resolver */
	T1 a11; /* use_namespaces */
	T6 a12; /* string_mode */
	T0* a13; /* dtd_callbacks */
	T0* a14; /* last_string_value */
	T0* a15; /* yyss */
	T0* a16; /* yyspecial_routines1 */
	T6 a17; /* yyvsc1 */
	T0* a18; /* yyvs1 */
	T0* a19; /* yyspecial_routines2 */
	T6 a20; /* yyvsc2 */
	T0* a21; /* yyvs2 */
	T0* a22; /* yyspecial_routines3 */
	T6 a23; /* yyvsc3 */
	T0* a24; /* yyvs3 */
	T0* a25; /* yyspecial_routines4 */
	T6 a26; /* yyvsc4 */
	T0* a27; /* yyvs4 */
	T0* a28; /* yyspecial_routines5 */
	T6 a29; /* yyvsc5 */
	T0* a30; /* yyvs5 */
	T0* a31; /* yyspecial_routines6 */
	T6 a32; /* yyvsc6 */
	T0* a33; /* yyvs6 */
	T0* a34; /* yyspecial_routines7 */
	T6 a35; /* yyvsc7 */
	T0* a36; /* yyvs7 */
	T0* a37; /* yyspecial_routines8 */
	T6 a38; /* yyvsc8 */
	T0* a39; /* yyvs8 */
	T0* a40; /* yyspecial_routines9 */
	T6 a41; /* yyvsc9 */
	T0* a42; /* yyvs9 */
	T0* a43; /* yyspecial_routines10 */
	T6 a44; /* yyvsc10 */
	T0* a45; /* yyvs10 */
	T0* a46; /* yyspecial_routines11 */
	T6 a47; /* yyvsc11 */
	T0* a48; /* yyvs11 */
	T0* a49; /* yytranslate */
	T0* a50; /* yyr1 */
	T0* a51; /* yytypes1 */
	T0* a52; /* yytypes2 */
	T0* a53; /* yydefact */
	T0* a54; /* yydefgoto */
	T0* a55; /* yypact */
	T0* a56; /* yypgoto */
	T0* a57; /* yytable */
	T0* a58; /* yycheck */
	T6 a59; /* yy_parsing_status */
	T6 a60; /* yy_suspended_yystacksize */
	T6 a61; /* yy_suspended_yystate */
	T6 a62; /* yy_suspended_yyn */
	T6 a63; /* yy_suspended_yychar1 */
	T6 a64; /* yy_suspended_index */
	T6 a65; /* yy_suspended_yyss_top */
	T6 a66; /* yy_suspended_yy_goto */
	T6 a67; /* yyssp */
	T6 a68; /* error_count */
	T1 a69; /* yy_lookahead_needed */
	T6 a70; /* yyerrstatus */
	T6 a71; /* last_token */
	T6 a72; /* yyvsp1 */
	T6 a73; /* yyvsp2 */
	T6 a74; /* yyvsp3 */
	T6 a75; /* yyvsp4 */
	T6 a76; /* yyvsp5 */
	T6 a77; /* yyvsp6 */
	T6 a78; /* yyvsp7 */
	T6 a79; /* yyvsp8 */
	T6 a80; /* yyvsp9 */
	T6 a81; /* yyvsp10 */
	T6 a82; /* yyvsp11 */
	T0* a83; /* last_detachable_any_value */
};

/* Struct for type ET_XACE_LIBRARY_CONFIG_PARSER */
struct S168 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* ast_factory */
	T0* a3; /* parsed_libraries */
	T0* a4; /* xml_preprocessor */
	T0* a5; /* xml_validator */
	T0* a6; /* xml_parser */
	T0* a7; /* tree_pipe */
	T0* a8; /* library_parser */
	T0* a9; /* last_library */
	T1 a10; /* is_shallow */
	T1 a11; /* is_ve */
};

/* Struct for type UT_MESSAGE */
struct S169 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type KL_SPECIAL_ROUTINES [STRING_8] */
struct S171 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
struct S172 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [INTEGER_32] */
struct S173 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [STRING_8] */
struct S174 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* before */
};

/* Struct for type DS_HASH_SET [INTEGER_32] */
struct S175 {
	int id;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type ET_ECF_AST_FACTORY */
struct S176 {
	int id;
};

/* Struct for type DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
struct S178 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* capacity */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
struct S179 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_COMPRESSED_POSITION */
struct S180 {
	int id;
	T6 a1; /* compressed_position */
};

/* Struct for type ET_IDENTIFIER */
struct S182 {
	int id;
	T6 a1; /* seed */
	T6 a2; /* index */
	T0* a3; /* name */
	T2 a4; /* status_code */
	T6 a5; /* compressed_position */
	T6 a6; /* hash_code */
};

/* Struct for type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
struct S184 {
	int id;
};

/* Struct for type ET_ECF_STATE */
struct S187 {
	int id;
	T0* a1; /* target */
	T0* a2; /* ise_version */
	T1 a3; /* finalize_mode */
	T1 a4; /* is_dotnet */
	T1 a5; /* is_multithreaded */
	T1 a6; /* is_scoop */
};

/* Struct for type ET_ECF_TARGETS */
struct S188 {
	int id;
	T0* a1; /* targets */
};

/* Struct for type ET_ECF_LIBRARY */
struct S189 {
	int id;
	T0* a1; /* selected_target */
	T0* a2; /* library_target */
	T0* a3; /* current_system */
	T0* a4; /* filename */
	T0* a5; /* uuid */
	T0* a6; /* ecf_namespace */
	T0* a7; /* ecf_version */
	T0* a8; /* targets */
	T0* a9; /* name */
	T0* a10; /* library */
	T0* a11; /* libraries */
	T0* a12; /* clusters */
	T0* a13; /* dotnet_assemblies */
	T0* a14; /* master_classes */
	T0* a15; /* any_type */
	T0* a16; /* detachable_any_type */
	T0* a17; /* any_parent */
	T0* a18; /* any_parents */
	T0* a19; /* any_clients */
	T0* a20; /* tuple_type */
	T0* a21; /* detachable_tuple_type */
	T0* a22; /* tuple_like_current_type */
	T0* a23; /* unfolded_empty_tuple_actual_parameters */
	T0* a24; /* array_any_type */
	T0* a25; /* array_detachable_any_type */
	T0* a26; /* array_like_current_type */
	T0* a27; /* boolean_type */
	T0* a28; /* character_type */
	T0* a29; /* character_8_type */
	T0* a30; /* character_8_convert_feature */
	T0* a31; /* character_32_type */
	T0* a32; /* character_32_convert_feature */
	T0* a33; /* double_type */
	T0* a34; /* exception_type */
	T0* a35; /* detachable_exception_type */
	T0* a36; /* exception_manager_type */
	T0* a37; /* function_type */
	T0* a38; /* integer_type */
	T0* a39; /* integer_8_type */
	T0* a40; /* integer_8_convert_feature */
	T0* a41; /* integer_16_type */
	T0* a42; /* integer_16_convert_feature */
	T0* a43; /* integer_32_type */
	T0* a44; /* integer_32_convert_feature */
	T0* a45; /* integer_64_type */
	T0* a46; /* integer_64_convert_feature */
	T0* a47; /* ise_exception_manager_type */
	T0* a48; /* iterable_detachable_any_type */
	T0* a49; /* natural_type */
	T0* a50; /* natural_8_type */
	T0* a51; /* natural_8_convert_feature */
	T0* a52; /* natural_16_type */
	T0* a53; /* natural_16_convert_feature */
	T0* a54; /* natural_32_type */
	T0* a55; /* natural_32_convert_feature */
	T0* a56; /* natural_64_type */
	T0* a57; /* natural_64_convert_feature */
	T0* a58; /* none_type */
	T0* a59; /* detachable_none_type */
	T0* a60; /* pointer_type */
	T0* a61; /* predicate_like_current_type */
	T0* a62; /* procedure_like_current_type */
	T0* a63; /* real_type */
	T0* a64; /* real_32_type */
	T0* a65; /* real_32_convert_feature */
	T0* a66; /* real_64_type */
	T0* a67; /* real_64_convert_feature */
	T0* a68; /* routine_type */
	T0* a69; /* special_any_type */
	T0* a70; /* special_detachable_any_type */
	T0* a71; /* string_type */
	T0* a72; /* string_8_type */
	T0* a73; /* string_8_convert_feature */
	T0* a74; /* string_32_type */
	T0* a75; /* string_32_convert_feature */
	T0* a76; /* system_object_type */
	T0* a77; /* system_object_parents */
	T0* a78; /* system_string_type */
	T0* a79; /* type_any_type */
	T0* a80; /* type_type_any_type */
	T0* a81; /* type_detachable_any_type */
	T0* a82; /* type_detachable_like_current_type */
	T0* a83; /* detachable_type_exception_type */
	T0* a84; /* type_detachable_exception_type */
	T0* a85; /* detachable_type_detachable_any_type */
	T0* a86; /* type_like_current_type */
	T0* a87; /* typed_pointer_any_type */
	T0* a88; /* typed_pointer_like_current_type */
	T0* a89; /* wide_character_type */
	T1 a90; /* is_read_only */
	T1 a91; /* attachment_type_conformance_mode */
	T1 a92; /* target_type_attachment_mode */
	T0* a93; /* implicit_attachment_type_mark */
	T1 a94; /* obsolete_routine_type_mode */
	T1 a95; /* is_preparsed */
};

/* Struct for type ET_ADAPTED_LIBRARIES */
struct S190 {
	int id;
	T0* a1; /* libraries */
};

/* Struct for type [attached] TUPLE [ET_ADAPTED_LIBRARY] */
struct S192 {
	int id;
	T0* z1;
};

/* Struct for type detachable TUPLE */
struct S193 {
	int id;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ADAPTED_LIBRARY]] */
struct S194 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type ET_ECF_LIBRARY_PARSER */
struct S195 {
	int id;
	T0* a1; /* last_library */
	T0* a2; /* adapted_library */
	T0* a3; /* parsed_libraries */
	T0* a4; /* parsed_dotnet_assemblies */
	T0* a5; /* xml_parser */
	T0* a6; /* tree_pipe */
	T0* a7; /* error_handler */
	T0* a8; /* ast_factory */
	T0* a9; /* ise_version */
	T0* a10; /* library_parser */
};

/* Struct for type ET_ECF_ADAPTED_LIBRARY */
struct S196 {
	int id;
	T0* a1; /* library */
	T0* a2; /* name_id */
	T0* a3; /* filename */
	T0* a4; /* universe */
	T0* a5; /* name */
	T1 a6; /* is_read_only */
	T0* a7; /* classname_prefix */
	T0* a8; /* class_renamings */
	T0* a9; /* condition */
};

/* Struct for type ET_ADAPTED_DOTNET_ASSEMBLIES */
struct S197 {
	int id;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_ECF_DOTNET_ASSEMBLY */
struct S198 {
	int id;
	T0* a1; /* pathname */
	T0* a2; /* referenced_assemblies */
	T0* a3; /* current_system */
	T0* a4; /* dotnet_assembly */
	T0* a5; /* name */
	T0* a6; /* master_classes */
	T0* a7; /* any_type */
	T0* a8; /* detachable_any_type */
	T0* a9; /* any_parent */
	T0* a10; /* any_parents */
	T0* a11; /* any_clients */
	T0* a12; /* tuple_type */
	T0* a13; /* detachable_tuple_type */
	T0* a14; /* tuple_like_current_type */
	T0* a15; /* unfolded_empty_tuple_actual_parameters */
	T0* a16; /* array_any_type */
	T0* a17; /* array_detachable_any_type */
	T0* a18; /* array_like_current_type */
	T0* a19; /* boolean_type */
	T0* a20; /* character_type */
	T0* a21; /* character_8_type */
	T0* a22; /* character_8_convert_feature */
	T0* a23; /* character_32_type */
	T0* a24; /* character_32_convert_feature */
	T0* a25; /* double_type */
	T0* a26; /* exception_type */
	T0* a27; /* detachable_exception_type */
	T0* a28; /* exception_manager_type */
	T0* a29; /* function_type */
	T0* a30; /* integer_type */
	T0* a31; /* integer_8_type */
	T0* a32; /* integer_8_convert_feature */
	T0* a33; /* integer_16_type */
	T0* a34; /* integer_16_convert_feature */
	T0* a35; /* integer_32_type */
	T0* a36; /* integer_32_convert_feature */
	T0* a37; /* integer_64_type */
	T0* a38; /* integer_64_convert_feature */
	T0* a39; /* ise_exception_manager_type */
	T0* a40; /* iterable_detachable_any_type */
	T0* a41; /* natural_type */
	T0* a42; /* natural_8_type */
	T0* a43; /* natural_8_convert_feature */
	T0* a44; /* natural_16_type */
	T0* a45; /* natural_16_convert_feature */
	T0* a46; /* natural_32_type */
	T0* a47; /* natural_32_convert_feature */
	T0* a48; /* natural_64_type */
	T0* a49; /* natural_64_convert_feature */
	T0* a50; /* none_type */
	T0* a51; /* detachable_none_type */
	T0* a52; /* pointer_type */
	T0* a53; /* predicate_like_current_type */
	T0* a54; /* procedure_like_current_type */
	T0* a55; /* real_type */
	T0* a56; /* real_32_type */
	T0* a57; /* real_32_convert_feature */
	T0* a58; /* real_64_type */
	T0* a59; /* real_64_convert_feature */
	T0* a60; /* routine_type */
	T0* a61; /* special_any_type */
	T0* a62; /* special_detachable_any_type */
	T0* a63; /* string_type */
	T0* a64; /* string_8_type */
	T0* a65; /* string_8_convert_feature */
	T0* a66; /* string_32_type */
	T0* a67; /* string_32_convert_feature */
	T0* a68; /* system_object_type */
	T0* a69; /* system_object_parents */
	T0* a70; /* system_string_type */
	T0* a71; /* type_any_type */
	T0* a72; /* type_type_any_type */
	T0* a73; /* type_detachable_any_type */
	T0* a74; /* type_detachable_like_current_type */
	T0* a75; /* detachable_type_exception_type */
	T0* a76; /* type_detachable_exception_type */
	T0* a77; /* detachable_type_detachable_any_type */
	T0* a78; /* type_like_current_type */
	T0* a79; /* typed_pointer_any_type */
	T0* a80; /* typed_pointer_like_current_type */
	T0* a81; /* wide_character_type */
	T1 a82; /* is_read_only */
	T1 a83; /* is_preparsed */
};

/* Struct for type ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
struct S200 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* filename */
	T0* a3; /* universe */
	T1 a4; /* is_read_only */
	T0* a5; /* classname_prefix */
	T0* a6; /* class_renamings */
	T0* a7; /* condition */
	T0* a8; /* name */
	T0* a9; /* dotnet_assembly */
};

/* Struct for type ET_ECF_ERROR */
struct S201 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* universe */
	T0* a4; /* position */
	T0* a5; /* code */
};

/* Struct for type EXECUTION_ENVIRONMENT */
struct S202 {
	int id;
	T6 a1; /* return_code */
};

/* Struct for type ET_LACE_AST_FACTORY */
struct S203 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* ast_factory */
};

/* Struct for type DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S204 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type YY_FILE_BUFFER */
struct S205 {
	int id;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T0* a9; /* file */
	T1 a10; /* end_of_file */
	T6 a11; /* capacity */
	T1 a12; /* interactive */
};

/* Struct for type YY_BUFFER */
struct S206 {
	int id;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T6 a9; /* capacity */
};

/* Struct for type DS_HASH_SET [ET_IDENTIFIER] */
struct S207 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* special_item_routines */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* hash_function */
};

/* Struct for type SPECIAL [detachable ANY] */
struct S210 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ANY] */
struct S211 {
	int id;
};

/* Struct for type SPECIAL [ET_IDENTIFIER] */
struct S212 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
struct S213 {
	int id;
};

/* Struct for type ET_LACE_CLUSTERS */
struct S214 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_LACE_CLUSTER */
struct S215 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T1 a5; /* is_abstract */
	T1 a6; /* is_recursive */
	T1 a7; /* is_read_only */
	T0* a8; /* exclude */
	T0* a9; /* subclusters */
	T1 a10; /* overridden_constraint_enabled */
	T1 a11; /* scm_mapping_constraint_enabled */
	T0* a12; /* parent */
	T1 a13; /* is_override */
	T0* a14; /* provider_constraint */
	T0* a15; /* dependant_constraint */
	T0* a16; /* scm_read_mapping */
	T0* a17; /* scm_write_mapping */
	T1 a18; /* is_preparsed */
	T1 a19; /* is_implicit */
	T1 a20; /* use_obsolete_syntax */
	T0* a21; /* cached_absolute_pathname */
};

/* Struct for type ET_LACE_EXCLUDE */
struct S216 {
	int id;
	T0* a1; /* identifiers */
};

/* Struct for type ET_LACE_DOTNET_ASSEMBLY */
struct S217 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T0* a3; /* classname_prefix_id */
	T0* a4; /* pathname */
	T0* a5; /* referenced_assemblies */
	T0* a6; /* classname_prefix */
	T0* a7; /* current_system */
	T0* a8; /* dotnet_assembly */
	T0* a9; /* name */
	T0* a10; /* master_classes */
	T0* a11; /* any_type */
	T0* a12; /* detachable_any_type */
	T0* a13; /* any_parent */
	T0* a14; /* any_parents */
	T0* a15; /* any_clients */
	T0* a16; /* tuple_type */
	T0* a17; /* detachable_tuple_type */
	T0* a18; /* tuple_like_current_type */
	T0* a19; /* unfolded_empty_tuple_actual_parameters */
	T0* a20; /* array_any_type */
	T0* a21; /* array_detachable_any_type */
	T0* a22; /* array_like_current_type */
	T0* a23; /* boolean_type */
	T0* a24; /* character_type */
	T0* a25; /* character_8_type */
	T0* a26; /* character_8_convert_feature */
	T0* a27; /* character_32_type */
	T0* a28; /* character_32_convert_feature */
	T0* a29; /* double_type */
	T0* a30; /* exception_type */
	T0* a31; /* detachable_exception_type */
	T0* a32; /* exception_manager_type */
	T0* a33; /* function_type */
	T0* a34; /* integer_type */
	T0* a35; /* integer_8_type */
	T0* a36; /* integer_8_convert_feature */
	T0* a37; /* integer_16_type */
	T0* a38; /* integer_16_convert_feature */
	T0* a39; /* integer_32_type */
	T0* a40; /* integer_32_convert_feature */
	T0* a41; /* integer_64_type */
	T0* a42; /* integer_64_convert_feature */
	T0* a43; /* ise_exception_manager_type */
	T0* a44; /* iterable_detachable_any_type */
	T0* a45; /* natural_type */
	T0* a46; /* natural_8_type */
	T0* a47; /* natural_8_convert_feature */
	T0* a48; /* natural_16_type */
	T0* a49; /* natural_16_convert_feature */
	T0* a50; /* natural_32_type */
	T0* a51; /* natural_32_convert_feature */
	T0* a52; /* natural_64_type */
	T0* a53; /* natural_64_convert_feature */
	T0* a54; /* none_type */
	T0* a55; /* detachable_none_type */
	T0* a56; /* pointer_type */
	T0* a57; /* predicate_like_current_type */
	T0* a58; /* procedure_like_current_type */
	T0* a59; /* real_type */
	T0* a60; /* real_32_type */
	T0* a61; /* real_32_convert_feature */
	T0* a62; /* real_64_type */
	T0* a63; /* real_64_convert_feature */
	T0* a64; /* routine_type */
	T0* a65; /* special_any_type */
	T0* a66; /* special_detachable_any_type */
	T0* a67; /* string_type */
	T0* a68; /* string_8_type */
	T0* a69; /* string_8_convert_feature */
	T0* a70; /* string_32_type */
	T0* a71; /* string_32_convert_feature */
	T0* a72; /* system_object_type */
	T0* a73; /* system_object_parents */
	T0* a74; /* system_string_type */
	T0* a75; /* type_any_type */
	T0* a76; /* type_type_any_type */
	T0* a77; /* type_detachable_any_type */
	T0* a78; /* type_detachable_like_current_type */
	T0* a79; /* detachable_type_exception_type */
	T0* a80; /* type_detachable_exception_type */
	T0* a81; /* detachable_type_detachable_any_type */
	T0* a82; /* type_like_current_type */
	T0* a83; /* typed_pointer_any_type */
	T0* a84; /* typed_pointer_like_current_type */
	T0* a85; /* wide_character_type */
	T1 a86; /* is_read_only */
	T1 a87; /* is_preparsed */
	T0* a88; /* class_renamings */
};

/* Struct for type SPECIAL [ET_LACE_SYSTEM] */
struct S218 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [detachable ET_LACE_CLUSTERS] */
struct S219 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
struct S220 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM] */
struct S221 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS] */
struct S222 {
	int id;
};

/* Struct for type SPECIAL [ET_LACE_CLUSTER] */
struct S223 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
struct S224 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_LACE_EXCLUDE] */
struct S225 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE] */
struct S226 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
struct S227 {
	int id;
};

/* Struct for type SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
struct S228 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
struct S229 {
	int id;
};

/* Struct for type ET_LACE_DOTNET_GAC_ASSEMBLY */
struct S230 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* assembly_name_id */
	T0* a3; /* classname_prefix_id */
	T0* a4; /* assembly_version_id */
	T0* a5; /* assembly_culture_id */
	T0* a6; /* assembly_public_key_token_id */
	T0* a7; /* assembly_name */
	T0* a8; /* classname_prefix */
	T0* a9; /* assembly_version */
	T0* a10; /* assembly_culture */
	T0* a11; /* assembly_public_key_token */
	T0* a12; /* pathname */
	T0* a13; /* referenced_assemblies */
	T0* a14; /* current_system */
	T0* a15; /* dotnet_assembly */
	T0* a16; /* name */
	T0* a17; /* master_classes */
	T0* a18; /* any_type */
	T0* a19; /* detachable_any_type */
	T0* a20; /* any_parent */
	T0* a21; /* any_parents */
	T0* a22; /* any_clients */
	T0* a23; /* tuple_type */
	T0* a24; /* detachable_tuple_type */
	T0* a25; /* tuple_like_current_type */
	T0* a26; /* unfolded_empty_tuple_actual_parameters */
	T0* a27; /* array_any_type */
	T0* a28; /* array_detachable_any_type */
	T0* a29; /* array_like_current_type */
	T0* a30; /* boolean_type */
	T0* a31; /* character_type */
	T0* a32; /* character_8_type */
	T0* a33; /* character_8_convert_feature */
	T0* a34; /* character_32_type */
	T0* a35; /* character_32_convert_feature */
	T0* a36; /* double_type */
	T0* a37; /* exception_type */
	T0* a38; /* detachable_exception_type */
	T0* a39; /* exception_manager_type */
	T0* a40; /* function_type */
	T0* a41; /* integer_type */
	T0* a42; /* integer_8_type */
	T0* a43; /* integer_8_convert_feature */
	T0* a44; /* integer_16_type */
	T0* a45; /* integer_16_convert_feature */
	T0* a46; /* integer_32_type */
	T0* a47; /* integer_32_convert_feature */
	T0* a48; /* integer_64_type */
	T0* a49; /* integer_64_convert_feature */
	T0* a50; /* ise_exception_manager_type */
	T0* a51; /* iterable_detachable_any_type */
	T0* a52; /* natural_type */
	T0* a53; /* natural_8_type */
	T0* a54; /* natural_8_convert_feature */
	T0* a55; /* natural_16_type */
	T0* a56; /* natural_16_convert_feature */
	T0* a57; /* natural_32_type */
	T0* a58; /* natural_32_convert_feature */
	T0* a59; /* natural_64_type */
	T0* a60; /* natural_64_convert_feature */
	T0* a61; /* none_type */
	T0* a62; /* detachable_none_type */
	T0* a63; /* pointer_type */
	T0* a64; /* predicate_like_current_type */
	T0* a65; /* procedure_like_current_type */
	T0* a66; /* real_type */
	T0* a67; /* real_32_type */
	T0* a68; /* real_32_convert_feature */
	T0* a69; /* real_64_type */
	T0* a70; /* real_64_convert_feature */
	T0* a71; /* routine_type */
	T0* a72; /* special_any_type */
	T0* a73; /* special_detachable_any_type */
	T0* a74; /* string_type */
	T0* a75; /* string_8_type */
	T0* a76; /* string_8_convert_feature */
	T0* a77; /* string_32_type */
	T0* a78; /* string_32_convert_feature */
	T0* a79; /* system_object_type */
	T0* a80; /* system_object_parents */
	T0* a81; /* system_string_type */
	T0* a82; /* type_any_type */
	T0* a83; /* type_type_any_type */
	T0* a84; /* type_detachable_any_type */
	T0* a85; /* type_detachable_like_current_type */
	T0* a86; /* detachable_type_exception_type */
	T0* a87; /* type_detachable_exception_type */
	T0* a88; /* detachable_type_detachable_any_type */
	T0* a89; /* type_like_current_type */
	T0* a90; /* typed_pointer_any_type */
	T0* a91; /* typed_pointer_like_current_type */
	T0* a92; /* wide_character_type */
	T1 a93; /* is_read_only */
	T1 a94; /* is_preparsed */
	T0* a95; /* class_renamings */
};

/* Struct for type KL_PLATFORM */
struct S231 {
	int id;
};

/* Struct for type KL_INTEGER_ROUTINES */
struct S232 {
	int id;
};

/* Struct for type DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
struct S233 {
	int id;
	T6 a1; /* capacity */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* last_position */
	T0* a5; /* equality_tester */
	T6 a6; /* modulus */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* special_key_routines */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* internal_cursor */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
struct S234 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] TUPLE [ET_CLASS] */
struct S235 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLASS]] */
struct S236 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [INTEGER_32] */
struct S237 {
	int id;
	T6 z1;
};

/* Struct for type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
struct S238 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_dynamic_system */
	T1 a3; /* catcall_error_mode */
	T1 a4; /* catcall_warning_mode */
	T1 a5; /* no_debug */
	T1 a6; /* no_assertion */
};

/* Struct for type ET_DYNAMIC_TYPE */
struct S239 {
	int id;
	T0* a1; /* base_type */
	T6 a2; /* attribute_count */
	T0* a3; /* queries */
	T1 a4; /* is_alive */
	T6 a5; /* id */
	T0* a6; /* base_class */
	T0* a7; /* meta_type */
	T0* a8; /* procedures */
	T6 a9; /* hash_code */
	T0* a10; /* conforming_dynamic_types */
	T0* a11; /* all_conforming_dynamic_types */
	T0* a12; /* next_type */
	T1 a13; /* has_reference_attributes */
	T1 a14; /* has_generic_expanded_attributes */
	T0* a15; /* query_calls */
	T1 a16; /* has_static */
	T0* a17; /* procedure_calls */
	T0* a18; /* equality_expressions */
	T0* a19; /* object_equality_expressions */
};

/* Struct for type DT_SHARED_SYSTEM_CLOCK */
struct S240 {
	int id;
};

/* Struct for type DT_DATE_TIME */
struct S241 {
	int id;
	T6 a1; /* time_storage */
	T6 a2; /* date_storage */
};

/* Struct for type DT_SYSTEM_CLOCK */
struct S242 {
	int id;
	T6 a1; /* second */
	T6 a2; /* year */
	T6 a3; /* month */
	T6 a4; /* day */
	T6 a5; /* hour */
	T6 a6; /* minute */
	T6 a7; /* millisecond */
	T0* a8; /* local_clock */
};

/* Struct for type [attached] TUPLE [ET_DYNAMIC_SYSTEM] */
struct S243 {
	int id;
	T0* z1;
};

/* Struct for type ET_DYNAMIC_FEATURE */
struct S248 {
	int id;
	T0* a1; /* static_feature */
	T0* a2; /* dynamic_type_sets */
	T6 a3; /* id */
	T1 a4; /* is_generated */
	T0* a5; /* result_type_set */
	T0* a6; /* target_type */
	T6 a7; /* builtin_code */
	T1 a8; /* is_regular */
	T0* a9; /* first_precursor */
	T1 a10; /* is_creation */
	T0* a11; /* other_precursors */
	T1 a12; /* is_built */
	T1 a13; /* is_current_type_needed */
	T1 a14; /* is_static */
	T1 a15; /* is_address */
};

/* Struct for type ET_ACTUAL_PARAMETER_LIST */
struct S252 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type ET_EXTERNAL_FUNCTION */
struct S260 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T0* a6; /* preconditions */
	T6 a7; /* hash_code */
	T6 a8; /* builtin_code */
	T0* a9; /* arguments */
	T0* a10; /* postconditions */
	T0* a11; /* assigner */
	T0* a12; /* declared_type */
	T0* a13; /* other_seeds */
	T0* a14; /* extended_name */
	T0* a15; /* frozen_keyword */
	T0* a16; /* language */
	T0* a17; /* obsolete_message */
	T0* a18; /* alias_clause */
	T0* a19; /* clients */
	T0* a20; /* is_keyword */
	T0* a21; /* end_keyword */
	T0* a22; /* semicolon */
	T0* a23; /* feature_clause */
	T0* a24; /* first_indexing */
	T0* a25; /* object_tests */
	T0* a26; /* across_components */
	T6 a27; /* id */
	T6 a28; /* version */
	T1 a29; /* validity_checked */
	T1 a30; /* has_validity_error */
	T0* a31; /* synonym */
};

/* Struct for type ET_TUPLE_TYPE */
struct S261 {
	int id;
	T0* a1; /* named_base_class */
	T0* a2; /* actual_parameters */
	T0* a3; /* type_mark */
	T0* a4; /* tuple_keyword */
};

/* Struct for type ET_FORMAL_ARGUMENT_LIST */
struct S262 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type SPECIAL [ET_TYPE] */
struct S263 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable ARRAY [ET_TYPE] */
struct S264 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ET_FORMAL_ARGUMENT */
struct S265 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type ET_QUERY_LIST */
struct S266 {
	int id;
	T6 a1; /* count */
	T6 a2; /* declared_count */
	T0* a3; /* storage */
};

/* Struct for type ET_PROCEDURE_LIST */
struct S267 {
	int id;
	T6 a1; /* count */
	T6 a2; /* declared_count */
	T0* a3; /* storage */
};

/* Struct for type KL_NULL_TEXT_OUTPUT_STREAM */
struct S268 {
	int id;
	T0* a1; /* name */
};

/* Struct for type ET_DYNAMIC_TYPE_SET_LIST */
struct S269 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type KL_STRING_OUTPUT_STREAM */
struct S270 {
	int id;
	T0* a1; /* string */
};

/* Struct for type DS_ARRAYED_LIST [ET_IDENTIFIER] */
struct S271 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [INTEGER_32] */
struct S272 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_TYPE_HASH_LIST */
struct S273 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* clashes */
	T0* a4; /* slots */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET */
struct S274 {
	int id;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
};

/* Struct for type DS_ARRAYED_STACK [ET_EXPRESSION] */
struct S275 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_EXPRESSION] */
struct S276 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S277 {
	int id;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* last_position */
	T6 a4; /* capacity */
	T6 a5; /* count */
	T6 a6; /* free_slot */
	T6 a7; /* slots_position */
	T6 a8; /* modulus */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* key_equality_tester */
	T0* a11; /* equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
struct S278 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TYPE] */
struct S279 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S280 {
	int id;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_OBJECT_TEST] */
struct S281 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION] */
struct S282 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
struct S283 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_AGENT] */
struct S284 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_EXPRESSION */
struct S285 {
	int id;
};

/* Struct for type ET_CURRENT */
struct S286 {
	int id;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_ACTUAL_ARGUMENT_LIST */
struct S287 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_symbol */
	T0* a4; /* right_symbol */
};

/* Struct for type ET_QUALIFIED_CALL_INSTRUCTION */
struct S288 {
	int id;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
	T0* a4; /* parenthesis_call */
};

/* Struct for type ET_QUALIFIED_CALL_EXPRESSION */
struct S291 {
	int id;
	T0* a1; /* target */
	T6 a2; /* index */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* parenthesis_call */
};

/* Struct for type ET_UNQUALIFIED_CALL_EXPRESSION */
struct S292 {
	int id;
	T0* a1; /* name */
	T0* a2; /* arguments */
	T6 a3; /* index */
	T0* a4; /* parenthesis_call */
};

/* Struct for type DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S293 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_MANIFEST_TUPLE */
struct S294 {
	int id;
	T0* a1; /* left_symbol */
	T0* a2; /* right_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
	T6 a5; /* index */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
struct S295 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_FEATURE] */
struct S296 {
	int id;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* count */
	T6 a7; /* slots_position */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
struct S297 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
struct S298 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
struct S299 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T0* a10; /* internal_cursor */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
struct S300 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, STRING_8] */
struct S301 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* count */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* capacity */
	T6 a11; /* slots_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* equality_tester */
	T6 a15; /* found_position */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_IDENTIFIER_TESTER */
struct S302 {
	int id;
};

/* Struct for type detachable KL_EQUALITY_TESTER [ET_IDENTIFIER] */
struct S303 {
	int id;
};

/* Struct for type RX_PCRE_REGULAR_EXPRESSION */
struct S304 {
	int id;
	T0* a1; /* subject */
	T6 a2; /* subject_end */
	T6 a3; /* subject_start */
	T6 a4; /* match_count */
	T0* a5; /* offset_vector */
	T6 a6; /* offset_vector_count */
	T6 a7; /* brastart_capacity */
	T0* a8; /* brastart_vector */
	T6 a9; /* brastart_lower */
	T6 a10; /* brastart_count */
	T6 a11; /* eptr_capacity */
	T0* a12; /* eptr_vector */
	T6 a13; /* eptr_lower */
	T6 a14; /* eptr_upper */
	T0* a15; /* byte_code */
	T0* a16; /* internal_start_bits */
	T0* a17; /* pattern_buffer */
	T6 a18; /* subexpression_count */
	T0* a19; /* pattern */
	T6 a20; /* pattern_count */
	T6 a21; /* pattern_position */
	T6 a22; /* code_index */
	T6 a23; /* maxbackrefs */
	T6 a24; /* optchanged */
	T6 a25; /* first_character */
	T6 a26; /* required_character */
	T6 a27; /* regexp_countlits */
	T0* a28; /* start_bits */
	T0* a29; /* error_message */
	T1 a30; /* is_anchored */
	T0* a31; /* character_case_mapping */
	T0* a32; /* word_set */
	T6 a33; /* subject_next_start */
	T6 a34; /* error_code */
	T6 a35; /* error_position */
	T1 a36; /* is_startline */
	T1 a37; /* is_caseless */
	T1 a38; /* is_bol */
	T1 a39; /* is_eol */
	T1 a40; /* is_multiline */
	T1 a41; /* is_dotall */
	T1 a42; /* is_extended */
	T1 a43; /* is_empty_allowed */
	T1 a44; /* is_dollar_endonly */
	T1 a45; /* is_greedy */
	T1 a46; /* is_strict */
	T1 a47; /* is_ichanged */
	T6 a48; /* first_matched_index */
	T6 a49; /* eptr */
	T6 a50; /* offset_top */
	T1 a51; /* is_matching_caseless */
	T1 a52; /* is_matching_multiline */
	T1 a53; /* is_matching_dotall */
};

/* Struct for type KL_TEXT_OUTPUT_FILE */
struct S305 {
	int id;
	T0* a1; /* name */
	T6 a2; /* mode */
	T14 a3; /* file_pointer */
	T1 a4; /* descriptor_available */
	T0* a5; /* last_string */
	T0* a6; /* internal_name */
	T0* a7; /* internal_detachable_name_pointer */
};

/* Struct for type ET_DYNAMIC_TUPLE_TYPE */
struct S306 {
	int id;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T0* a8; /* procedures */
	T0* a9; /* item_type_sets */
	T1 a10; /* has_reference_attributes */
	T1 a11; /* has_generic_expanded_attributes */
	T6 a12; /* hash_code */
	T0* a13; /* next_type */
	T0* a14; /* conforming_dynamic_types */
	T0* a15; /* query_calls */
	T0* a16; /* all_conforming_dynamic_types */
	T1 a17; /* has_static */
	T0* a18; /* procedure_calls */
	T0* a19; /* equality_expressions */
	T0* a20; /* object_equality_expressions */
};

/* Struct for type UT_TEMPLATE_EXPANDER */
struct S307 {
	int id;
};

/* Struct for type UT_CANNOT_WRITE_TO_FILE_ERROR */
struct S308 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_DYNAMIC_FEATURE_LIST */
struct S309 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DYNAMIC_PRECURSOR */
struct S310 {
	int id;
	T1 a1; /* is_generated */
	T0* a2; /* current_feature */
	T6 a3; /* id */
	T0* a4; /* target_type */
	T0* a5; /* static_feature */
	T0* a6; /* dynamic_type_sets */
	T1 a7; /* is_regular */
	T1 a8; /* is_creation */
	T1 a9; /* is_static */
	T1 a10; /* is_address */
	T0* a11; /* result_type_set */
	T6 a12; /* builtin_code */
	T0* a13; /* first_precursor */
	T0* a14; /* other_precursors */
	T1 a15; /* is_built */
	T0* a16; /* parent_type */
	T1 a17; /* is_current_type_needed */
};

/* Struct for type ET_DYNAMIC_PRECURSOR_LIST */
struct S311 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
struct S312 {
	int id;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* items */
	T0* a5; /* counts */
	T0* a6; /* successors */
};

/* Struct for type ET_RESULT */
struct S313 {
	int id;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
struct S314 {
	int id;
	T0* a1; /* static_call */
	T0* a2; /* target_type_set */
	T0* a3; /* result_type_set */
	T0* a4; /* current_feature */
	T0* a5; /* current_type */
	T0* a6; /* next */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
struct S318 {
	int id;
	T0* a1; /* target_type_set */
	T0* a2; /* next */
	T0* a3; /* static_call */
	T0* a4; /* current_feature */
	T0* a5; /* current_type */
};

/* Struct for type ET_OBJECT_TEST */
struct S320 {
	int id;
	T6 a1; /* index */
	T0* a2; /* attached_keyword */
	T0* a3; /* declared_type */
	T0* a4; /* expression */
};

/* Struct for type ET_OBJECT_EQUALITY_EXPRESSION */
struct S321 {
	int id;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type ET_EQUALITY_EXPRESSION */
struct S322 {
	int id;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type ET_DYNAMIC_SPECIAL_TYPE */
struct S323 {
	int id;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T0* a8; /* item_type_set */
	T0* a9; /* procedures */
	T1 a10; /* has_reference_attributes */
	T1 a11; /* has_generic_expanded_attributes */
	T6 a12; /* hash_code */
	T0* a13; /* next_type */
	T0* a14; /* conforming_dynamic_types */
	T0* a15; /* query_calls */
	T0* a16; /* all_conforming_dynamic_types */
	T1 a17; /* has_static */
	T0* a18; /* procedure_calls */
	T0* a19; /* equality_expressions */
	T0* a20; /* object_equality_expressions */
};

/* Struct for type ET_CREATE_EXPRESSION */
struct S326 {
	int id;
	T6 a1; /* index */
	T0* a2; /* creation_call */
	T0* a3; /* creation_type */
	T0* a4; /* create_keyword */
};

/* Struct for type ET_QUALIFIED_CALL */
struct S327 {
	int id;
	T0* a1; /* arguments */
	T0* a2; /* qualified_name */
};

/* Struct for type KL_DIRECTORY */
struct S330 {
	int id;
	T1 a1; /* end_of_input */
	T0* a2; /* last_entry */
	T6 a3; /* mode */
	T0* a4; /* name */
	T0* a5; /* entry_buffer */
	T0* a6; /* lastentry */
	T14 a7; /* directory_pointer */
	T14 a8; /* last_entry_pointer */
	T0* a9; /* internal_name */
	T0* a10; /* internal_detachable_name_pointer */
};

/* Struct for type ET_EXTENDED_ATTRIBUTE */
struct S331 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* compound */
	T0* a4; /* locals */
	T0* a5; /* rescue_clause */
	T0* a6; /* implementation_feature */
	T0* a7; /* first_precursor */
	T0* a8; /* other_precursors */
	T0* a9; /* preconditions */
	T6 a10; /* hash_code */
	T0* a11; /* postconditions */
	T0* a12; /* assigner */
	T6 a13; /* version */
	T0* a14; /* other_seeds */
	T0* a15; /* extended_name */
	T0* a16; /* declared_type */
	T0* a17; /* obsolete_message */
	T0* a18; /* clients */
	T0* a19; /* end_keyword */
	T0* a20; /* semicolon */
	T0* a21; /* feature_clause */
	T0* a22; /* first_indexing */
	T0* a23; /* object_tests */
	T0* a24; /* across_components */
	T0* a25; /* frozen_keyword */
	T6 a26; /* id */
	T1 a27; /* validity_checked */
	T1 a28; /* has_validity_error */
	T0* a29; /* synonym */
};

/* Struct for type ET_COMPOUND */
struct S332 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* keyword */
};

/* Struct for type ET_LOCAL_VARIABLE_LIST */
struct S333 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* local_keyword */
};

/* Struct for type ET_DYNAMIC_FUNCTION_TYPE */
struct S334 {
	int id;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T0* a8; /* procedures */
	T0* a9; /* result_type_set */
	T0* a10; /* open_operand_type_sets */
	T6 a11; /* hash_code */
	T0* a12; /* next_type */
	T0* a13; /* conforming_dynamic_types */
	T0* a14; /* query_calls */
	T1 a15; /* has_reference_attributes */
	T1 a16; /* has_generic_expanded_attributes */
	T0* a17; /* all_conforming_dynamic_types */
	T1 a18; /* has_static */
	T0* a19; /* procedure_calls */
	T0* a20; /* equality_expressions */
	T0* a21; /* object_equality_expressions */
};

/* Struct for type ET_DYNAMIC_PROCEDURE_TYPE */
struct S335 {
	int id;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T0* a8; /* procedures */
	T0* a9; /* open_operand_type_sets */
	T6 a10; /* hash_code */
	T0* a11; /* next_type */
	T0* a12; /* conforming_dynamic_types */
	T0* a13; /* query_calls */
	T1 a14; /* has_reference_attributes */
	T1 a15; /* has_generic_expanded_attributes */
	T0* a16; /* all_conforming_dynamic_types */
	T1 a17; /* has_static */
	T0* a18; /* procedure_calls */
	T0* a19; /* equality_expressions */
	T0* a20; /* object_equality_expressions */
};

/* Struct for type DS_QUICK_SORTER [INTEGER_32] */
struct S339 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type ET_IMPLICIT_TYPE_MARK */
struct S345 {
	int id;
	T1 a1; /* is_expanded_mark */
	T1 a2; /* is_reference_mark */
	T1 a3; /* is_attached_mark */
	T1 a4; /* is_separate_mark */
	T1 a5; /* is_detachable_mark */
};

/* Struct for type ET_SYMBOL */
struct S346 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE] */
struct S347 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*);
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S348 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S349 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S351 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S352 {
	int id;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type UT_INTEGER_FORMATTER */
struct S353 {
	int id;
};

/* Struct for type STD_FILES */
struct S357 {
	int id;
	T0* a1; /* default_output */
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S359 {
	int id;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
struct S361 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S362 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
	T1 z4;
};

/* Struct for type ET_CONSTANT_ATTRIBUTE */
struct S363 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* constant */
	T0* a4; /* implementation_feature */
	T0* a5; /* first_precursor */
	T0* a6; /* other_precursors */
	T6 a7; /* hash_code */
	T0* a8; /* assigner */
	T6 a9; /* version */
	T0* a10; /* other_seeds */
	T0* a11; /* declared_type */
	T0* a12; /* clients */
	T0* a13; /* is_keyword */
	T0* a14; /* semicolon */
	T0* a15; /* feature_clause */
	T0* a16; /* first_indexing */
	T0* a17; /* object_tests */
	T0* a18; /* across_components */
	T0* a19; /* extended_name */
	T0* a20; /* frozen_keyword */
	T6 a21; /* id */
	T1 a22; /* validity_checked */
	T1 a23; /* has_validity_error */
	T0* a24; /* synonym */
};

/* Struct for type ET_UNIQUE_ATTRIBUTE */
struct S365 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T6 a6; /* hash_code */
	T0* a7; /* assigner */
	T6 a8; /* version */
	T0* a9; /* other_seeds */
	T0* a10; /* declared_type */
	T0* a11; /* clients */
	T0* a12; /* is_keyword */
	T0* a13; /* unique_keyword */
	T0* a14; /* semicolon */
	T0* a15; /* feature_clause */
	T0* a16; /* first_indexing */
	T0* a17; /* object_tests */
	T0* a18; /* across_components */
	T0* a19; /* frozen_keyword */
	T0* a20; /* extended_name */
	T6 a21; /* id */
	T1 a22; /* validity_checked */
	T1 a23; /* has_validity_error */
	T0* a24; /* synonym */
};

/* Struct for type ET_ATTRIBUTE */
struct S366 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T6 a6; /* hash_code */
	T0* a7; /* assigner */
	T6 a8; /* version */
	T0* a9; /* extended_name */
	T0* a10; /* declared_type */
	T0* a11; /* clients */
	T0* a12; /* semicolon */
	T0* a13; /* feature_clause */
	T0* a14; /* first_indexing */
	T0* a15; /* object_tests */
	T0* a16; /* across_components */
	T0* a17; /* frozen_keyword */
	T6 a18; /* id */
	T0* a19; /* other_seeds */
	T1 a20; /* validity_checked */
	T1 a21; /* has_validity_error */
	T0* a22; /* synonym */
};

/* Struct for type NATIVE_STRING */
struct S368 {
	int id;
	T0* a1; /* managed_data */
	T6 a2; /* unit_count */
};

/* Struct for type DS_HASH_SET_CURSOR [STRING_8] */
struct S369 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_FEATURE_CHECKER */
struct S370 {
	int id;
	T0* a1; /* type_checker */
	T0* a2; /* current_class */
	T0* a3; /* current_type */
	T0* a4; /* current_feature */
	T0* a5; /* current_feature_impl */
	T0* a6; /* current_class_impl */
	T0* a7; /* enclosing_inline_agents */
	T0* a8; /* unused_overloaded_procedures_list */
	T0* a9; /* unused_overloaded_queries_list */
	T0* a10; /* unused_overloaded_features_list */
	T0* a11; /* unused_contexts */
	T0* a12; /* current_context */
	T0* a13; /* current_target_type */
	T0* a14; /* current_object_test_types */
	T0* a15; /* current_object_test_scope */
	T0* a16; /* object_test_scope_builder */
	T0* a17; /* current_across_cursor_types */
	T0* a18; /* current_across_cursor_scope */
	T0* a19; /* current_initialization_scope */
	T0* a20; /* current_attachment_scope */
	T0* a21; /* attachment_scope_builder */
	T0* a22; /* unused_attachment_scopes */
	T1 a23; /* has_fatal_error */
	T1 a24; /* in_precondition */
	T0* a25; /* supplier_handler */
	T1 a26; /* in_invariant */
	T0* a27; /* precursor_queries */
	T0* a28; /* precursor_procedures */
	T1 a29; /* in_postcondition */
	T1 a30; /* in_precursor */
	T1 a31; /* in_rescue */
	T0* a32; /* current_inline_agent */
	T1 a33; /* in_check_instruction */
};

/* Struct for type DS_CELL [INTEGER_32] */
struct S371 {
	int id;
	T6 a1; /* item */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S372 {
	int id;
	T6 a1; /* position */
	T6 a2; /* count */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* modulus */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* key_equality_tester */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T6 a12; /* found_position */
	T0* a13; /* item_storage */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_TYPE_CHECKER */
struct S373 {
	int id;
	T0* a1; /* current_context */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_feature_impl */
	T0* a4; /* constraint_context */
	T0* a5; /* current_class */
	T0* a6; /* supplier_handler */
	T1 a7; /* has_fatal_error */
	T1 a8; /* in_qualified_anchored_type */
};

/* Struct for type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
struct S375 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S376 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
struct S377 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S378 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
struct S379 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_NESTED_TYPE_CONTEXT */
struct S380 {
	int id;
	T0* a1; /* root_context */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
struct S381 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T6 a9; /* found_position */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type ET_OBJECT_TEST_SCOPE */
struct S382 {
	int id;
	T0* a1; /* object_tests */
	T6 a2; /* hidden_count */
};

/* Struct for type ET_OBJECT_TEST_SCOPE_BUILDER */
struct S383 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* scope */
	T1 a4; /* is_negated */
};

/* Struct for type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
struct S384 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T6 a9; /* found_position */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ACROSS_CURSOR_SCOPE */
struct S385 {
	int id;
	T6 a1; /* hidden_count */
	T0* a2; /* across_components */
};

/* Struct for type ET_ATTACHMENT_SCOPE */
struct S386 {
	int id;
	T0* a1; /* locals_attached */
	T0* a2; /* arguments_attached */
	T0* a3; /* attributes_attached */
	T1 a4; /* result_attached */
	T1 a5; /* is_code_unreachable */
};

/* Struct for type ET_ATTACHMENT_SCOPE_BUILDER */
struct S387 {
	int id;
	T0* a1; /* scope */
	T1 a2; /* is_negated */
};

/* Struct for type DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
struct S388 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_PRECONDITIONS */
struct S389 {
	int id;
	T6 a1; /* count */
	T1 a2; /* validity_checked */
	T1 a3; /* has_validity_error */
	T0* a4; /* else_keyword */
	T0* a5; /* storage */
	T0* a6; /* require_keyword */
};

/* Struct for type DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE] */
struct S390 {
	int id;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* hash_function */
};

/* Struct for type ET_FEATURE_LIST */
struct S392 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_UNKNOWN_GROUP */
struct S394 {
	int id;
	T0* a1; /* name */
	T1 a2; /* use_obsolete_syntax */
	T0* a3; /* cached_absolute_pathname */
};

/* Struct for type ET_BASE_TYPE_LIST */
struct S396 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_KEYWORD */
struct S397 {
	int id;
	T0* a1; /* text */
	T2 a2; /* code */
	T6 a3; /* compressed_position */
};

/* Struct for type ET_CLASS_CODES */
struct S398 {
	int id;
};

/* Struct for type ARGUMENTS_32 */
struct S400 {
	int id;
};

/* Struct for type IMMUTABLE_STRING_32 */
struct S401 {
	int id;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* area_lower */
};

/* Struct for type ET_AST_FACTORY */
struct S403 {
	int id;
};

/* Struct for type ET_XACE_EXTERNALS */
struct S404 {
	int id;
	T0* a1; /* c_compiler_options */
	T0* a2; /* include_directories */
	T0* a3; /* link_libraries */
};

/* Struct for type ET_XACE_OPTIONS */
struct S405 {
	int id;
	T0* a1; /* declared_override_cluster */
	T0* a2; /* declared_console_application */
	T0* a3; /* declared_exception_trace */
	T0* a4; /* declared_trace */
	T0* a5; /* declared_garbage_collector */
	T0* a6; /* declared_c_compiler_options */
	T0* a7; /* declared_header */
	T0* a8; /* declared_link */
	T0* a9; /* declared_abstract */
	T0* a10; /* declared_recursive */
	T0* a11; /* declared_read_only */
	T6 a12; /* declared_fst_expansion_factor */
	T6 a13; /* declared_heap_size */
	T6 a14; /* declared_inlining_size */
	T6 a15; /* declared_msil_classes_per_module */
	T6 a16; /* declared_stack_size */
	T0* a17; /* declared_address_expression */
	T0* a18; /* declared_arguments */
	T0* a19; /* declared_array_optimization */
	T0* a20; /* declared_assembly */
	T0* a21; /* declared_assertion */
	T0* a22; /* declared_attached_by_default */
	T0* a23; /* declared_automatic_backup */
	T0* a24; /* declared_callback */
	T0* a25; /* declared_case_insensitive */
	T0* a26; /* declared_check_vape */
	T0* a27; /* declared_clean */
	T0* a28; /* declared_cls_compliant */
	T0* a29; /* declared_component */
	T0* a30; /* declared_create_keyword_extension */
	T0* a31; /* declared_culture */
	T0* a32; /* declared_dead_code_removal */
	T0* a33; /* declared_debug_option */
	T0* a34; /* declared_debug_tag */
	T0* a35; /* declared_debugger */
	T0* a36; /* declared_document */
	T0* a37; /* declared_dotnet_naming_convention */
	T0* a38; /* declared_dynamic_runtime */
	T0* a39; /* declared_ecf_library */
	T0* a40; /* declared_enforce_unique_class_names */
	T0* a41; /* declared_exclude */
	T0* a42; /* declared_export_option */
	T0* a43; /* declared_external_runtime */
	T0* a44; /* declared_finalize_option */
	T0* a45; /* declared_flat_fst_optimization */
	T0* a46; /* declared_force_32bits */
	T0* a47; /* declared_fst_optimization */
	T0* a48; /* declared_full_class_checking */
	T0* a49; /* declared_gc_info */
	T0* a50; /* declared_high_memory_compiler */
	T0* a51; /* declared_il_verifiable */
	T0* a52; /* declared_include */
	T0* a53; /* declared_inlining */
	T0* a54; /* declared_jumps_optimization */
	T0* a55; /* declared_layout */
	T0* a56; /* declared_layout_optimization */
	T0* a57; /* declared_leaves_optimization */
	T0* a58; /* declared_line_generation */
	T0* a59; /* declared_linker */
	T0* a60; /* declared_linux_fpu_double_precision */
	T0* a61; /* declared_manifest_string_trace */
	T0* a62; /* declared_map */
	T0* a63; /* declared_metadata_cache_path */
	T0* a64; /* declared_msil_assembly_compatibility */
	T0* a65; /* declared_msil_clr_version */
	T0* a66; /* declared_msil_culture */
	T0* a67; /* declared_msil_generation */
	T0* a68; /* declared_msil_generation_version */
	T0* a69; /* declared_msil_key_file_name */
	T0* a70; /* declared_msil_use_optimized_precompile */
	T0* a71; /* declared_multithreaded */
	T0* a72; /* declared_namespace */
	T0* a73; /* declared_no_default_lib */
	T0* a74; /* declared_old_verbatim_strings */
	T0* a75; /* declared_portable_code_generation */
	T0* a76; /* declared_precompiled */
	T0* a77; /* declared_prefix_option */
	T0* a78; /* declared_profile */
	T0* a79; /* declared_public_key_token */
	T0* a80; /* declared_reloads_optimization */
	T0* a81; /* declared_shared_library_definition */
	T0* a82; /* declared_split */
	T0* a83; /* declared_storable_filename */
	T0* a84; /* declared_strip_option */
	T0* a85; /* declared_syntax */
	T0* a86; /* declared_target */
	T0* a87; /* declared_use_cluster_name_as_namespace */
	T0* a88; /* declared_use_full_cluster_name_as_namespace */
	T0* a89; /* declared_verbose */
	T0* a90; /* declared_version */
	T0* a91; /* declared_visible_filename */
	T0* a92; /* declared_void_safety */
	T0* a93; /* declared_warning */
	T0* a94; /* declared_wedit */
};

/* Struct for type XM_ATTRIBUTE */
struct S406 {
	int id;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* value */
	T0* a4; /* parent */
};

/* Struct for type ET_XACE_OPTION_NAMES */
struct S409 {
	int id;
};

/* Struct for type ET_XACE_CLUSTER */
struct S411 {
	int id;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T0* a5; /* library_prefix */
	T0* a6; /* cluster_prefix */
	T0* a7; /* class_options */
	T1 a8; /* is_abstract */
	T1 a9; /* is_recursive */
	T1 a10; /* is_read_only */
	T0* a11; /* options */
	T0* a12; /* subclusters */
	T0* a13; /* libraries */
	T1 a14; /* overridden_constraint_enabled */
	T1 a15; /* scm_mapping_constraint_enabled */
	T0* a16; /* scm_read_mapping */
	T0* a17; /* scm_write_mapping */
	T1 a18; /* is_implicit */
	T1 a19; /* is_override */
	T1 a20; /* use_obsolete_syntax */
	T0* a21; /* parent */
	T1 a22; /* is_preparsed */
	T0* a23; /* provider_constraint */
	T0* a24; /* dependant_constraint */
	T1 a25; /* is_mounted */
	T0* a26; /* cached_absolute_pathname */
};

/* Struct for type ET_XACE_CLUSTERS */
struct S412 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARY */
struct S413 {
	int id;
	T0* a1; /* pathname */
	T0* a2; /* library_prefix */
	T0* a3; /* library */
	T0* a4; /* position */
	T1 a5; /* is_root */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARIES */
struct S414 {
	int id;
	T0* a1; /* libraries */
};

/* Struct for type DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
struct S415 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
struct S417 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type ET_XACE_LIBRARY_CONFIG */
struct S419 {
	int id;
	T0* a1; /* library_prefix */
	T0* a2; /* name */
	T0* a3; /* options */
	T0* a4; /* clusters */
	T0* a5; /* libraries */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, STRING_8] */
struct S420 {
	int id;
	T6 a1; /* found_position */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* free_slot */
	T6 a7; /* last_position */
	T6 a8; /* count */
	T6 a9; /* modulus */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* equality_tester */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* capacity */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type ET_XACE_CLASS_OPTIONS */
struct S422 {
	int id;
	T0* a1; /* feature_options */
	T0* a2; /* class_name */
	T0* a3; /* options */
};

/* Struct for type ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
struct S423 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_BOOLEAN_EXPECTED_ERROR */
struct S424 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
struct S425 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
struct S426 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
struct S427 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
struct S428 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_AST_NULL_PROCESSOR */
struct S430 {
	int id;
};

/* Struct for type [attached] TUPLE [ET_UNIVERSE] */
struct S431 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_UNIVERSE]] */
struct S432 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]]] */
struct S433 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
struct S435 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type DT_DATE_TIME_DURATION */
struct S436 {
	int id;
	T6 a1; /* year */
	T6 a2; /* month */
	T6 a3; /* day */
	T6 a4; /* hour */
	T6 a5; /* minute */
	T6 a6; /* second */
	T6 a7; /* millisecond */
};

/* Struct for type ET_IMPLEMENTATION_CHECKER */
struct S437 {
	int id;
	T1 a1; /* flat_mode */
	T1 a2; /* flat_dbc_mode */
	T1 a3; /* suppliers_enabled */
	T0* a4; /* current_class */
	T1 a5; /* short_mode */
	T0* a6; /* no_suppliers */
	T0* a7; /* feature_checker */
	T0* a8; /* precursor_procedures */
	T0* a9; /* precursor_queries */
	T0* a10; /* supplier_builder */
};

/* Struct for type ET_EIFFEL_PREPARSER */
struct S438 {
	int id;
	T0* a1; /* eiffel_buffer */
	T6 a2; /* last_text_count */
	T6 a3; /* last_literal_start */
	T0* a4; /* filename */
	T0* a5; /* group */
	T0* a6; /* verbatim_marker */
	T0* a7; /* verbatim_open_white_characters */
	T0* a8; /* verbatim_close_white_characters */
	T0* a9; /* yy_pushed_start_conditions */
	T0* a10; /* input_buffer */
	T0* a11; /* yy_state_stack */
	T6 a12; /* yy_start_state */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_position */
	T6 a16; /* yy_start */
	T6 a17; /* yy_end */
	T6 a18; /* line */
	T6 a19; /* column */
	T6 a20; /* position */
	T0* a21; /* yy_nxt */
	T0* a22; /* yy_chk */
	T0* a23; /* yy_base */
	T0* a24; /* yy_def */
	T0* a25; /* yy_ec */
	T0* a26; /* yy_meta */
	T0* a27; /* yy_accept */
	T0* a28; /* yy_acclist */
	T0* a29; /* yy_content */
	T0* a30; /* yy_content_area */
	T0* a31; /* last_classname */
	T1 a32; /* class_keyword_found */
	T6 a33; /* last_token */
	T1 a34; /* yy_more_flag */
	T6 a35; /* yy_more_len */
	T6 a36; /* yy_state_count */
	T6 a37; /* yy_last_accepting_state */
	T6 a38; /* yy_last_accepting_cpos */
	T6 a39; /* yy_lp */
	T6 a40; /* yy_looking_for_trail_begin */
	T6 a41; /* yy_full_match */
	T6 a42; /* yy_full_state */
	T6 a43; /* yy_full_lp */
	T1 a44; /* yy_rejected */
	T6 a45; /* last_literal_end */
	T6 a46; /* pushed_start_condition_count */
	T6 a47; /* ms_column */
	T6 a48; /* ms_line */
	T6 a49; /* last_break_end */
	T6 a50; /* last_comment_end */
};

/* Struct for type ET_MASTER_CLASS_CHECKER */
struct S439 {
	int id;
	T0* a1; /* current_class */
	T1 a2; /* has_fatal_error */
};

/* Struct for type ET_EIFFEL_PARSER */
struct S440 {
	int id;
	T0* a1; /* eiffel_buffer */
	T0* a2; /* counters */
	T0* a3; /* last_formal_arguments_stack */
	T0* a4; /* last_local_variables_stack */
	T0* a5; /* last_keywords */
	T0* a6; /* last_symbols */
	T0* a7; /* last_object_tests_stack */
	T0* a8; /* last_object_tests_pool */
	T0* a9; /* last_across_components_stack */
	T0* a10; /* last_across_components_pool */
	T0* a11; /* assertions */
	T0* a12; /* check_assertion_counters */
	T0* a13; /* queries */
	T0* a14; /* procedures */
	T0* a15; /* constraints */
	T0* a16; /* providers */
	T0* a17; /* current_class */
	T0* a18; /* group */
	T6 a19; /* last_text_count */
	T6 a20; /* last_literal_start */
	T0* a21; /* filename */
	T0* a22; /* verbatim_marker */
	T0* a23; /* verbatim_open_white_characters */
	T0* a24; /* verbatim_close_white_characters */
	T0* a25; /* yyss */
	T6 a26; /* time_stamp */
	T0* a27; /* input_buffer */
	T0* a28; /* yy_pushed_start_conditions */
	T0* a29; /* yyspecial_routines1 */
	T6 a30; /* yyvsc1 */
	T0* a31; /* yyvs1 */
	T0* a32; /* yyspecial_routines2 */
	T6 a33; /* yyvsc2 */
	T0* a34; /* yyvs2 */
	T0* a35; /* yyspecial_routines3 */
	T6 a36; /* yyvsc3 */
	T0* a37; /* yyvs3 */
	T0* a38; /* yyspecial_routines4 */
	T6 a39; /* yyvsc4 */
	T0* a40; /* yyvs4 */
	T0* a41; /* yyspecial_routines5 */
	T6 a42; /* yyvsc5 */
	T0* a43; /* yyvs5 */
	T0* a44; /* yyspecial_routines6 */
	T6 a45; /* yyvsc6 */
	T0* a46; /* yyvs6 */
	T0* a47; /* yyspecial_routines7 */
	T6 a48; /* yyvsc7 */
	T0* a49; /* yyvs7 */
	T0* a50; /* yyspecial_routines8 */
	T6 a51; /* yyvsc8 */
	T0* a52; /* yyvs8 */
	T0* a53; /* yyspecial_routines9 */
	T6 a54; /* yyvsc9 */
	T0* a55; /* yyvs9 */
	T0* a56; /* yyspecial_routines10 */
	T6 a57; /* yyvsc10 */
	T0* a58; /* yyvs10 */
	T0* a59; /* yyspecial_routines11 */
	T6 a60; /* yyvsc11 */
	T0* a61; /* yyvs11 */
	T0* a62; /* yyspecial_routines12 */
	T6 a63; /* yyvsc12 */
	T0* a64; /* yyvs12 */
	T0* a65; /* yyspecial_routines13 */
	T6 a66; /* yyvsc13 */
	T0* a67; /* yyvs13 */
	T0* a68; /* yyspecial_routines14 */
	T6 a69; /* yyvsc14 */
	T0* a70; /* yyvs14 */
	T0* a71; /* yyspecial_routines15 */
	T6 a72; /* yyvsc15 */
	T0* a73; /* yyvs15 */
	T0* a74; /* yyspecial_routines16 */
	T6 a75; /* yyvsc16 */
	T0* a76; /* yyvs16 */
	T0* a77; /* yyspecial_routines17 */
	T6 a78; /* yyvsc17 */
	T0* a79; /* yyvs17 */
	T0* a80; /* yyspecial_routines18 */
	T6 a81; /* yyvsc18 */
	T0* a82; /* yyvs18 */
	T0* a83; /* yyspecial_routines19 */
	T6 a84; /* yyvsc19 */
	T0* a85; /* yyvs19 */
	T0* a86; /* yyspecial_routines20 */
	T6 a87; /* yyvsc20 */
	T0* a88; /* yyvs20 */
	T0* a89; /* yyspecial_routines21 */
	T6 a90; /* yyvsc21 */
	T0* a91; /* yyvs21 */
	T0* a92; /* yyspecial_routines22 */
	T6 a93; /* yyvsc22 */
	T0* a94; /* yyvs22 */
	T0* a95; /* yyspecial_routines23 */
	T6 a96; /* yyvsc23 */
	T0* a97; /* yyvs23 */
	T0* a98; /* yyspecial_routines24 */
	T6 a99; /* yyvsc24 */
	T0* a100; /* yyvs24 */
	T0* a101; /* yyspecial_routines25 */
	T6 a102; /* yyvsc25 */
	T0* a103; /* yyvs25 */
	T0* a104; /* yyspecial_routines26 */
	T6 a105; /* yyvsc26 */
	T0* a106; /* yyvs26 */
	T0* a107; /* yyspecial_routines27 */
	T6 a108; /* yyvsc27 */
	T0* a109; /* yyvs27 */
	T0* a110; /* yyspecial_routines28 */
	T6 a111; /* yyvsc28 */
	T0* a112; /* yyvs28 */
	T0* a113; /* yyspecial_routines29 */
	T6 a114; /* yyvsc29 */
	T0* a115; /* yyvs29 */
	T0* a116; /* yyspecial_routines30 */
	T6 a117; /* yyvsc30 */
	T0* a118; /* yyvs30 */
	T0* a119; /* yyspecial_routines31 */
	T6 a120; /* yyvsc31 */
	T0* a121; /* yyvs31 */
	T0* a122; /* yyspecial_routines32 */
	T6 a123; /* yyvsc32 */
	T0* a124; /* yyvs32 */
	T0* a125; /* yyspecial_routines33 */
	T6 a126; /* yyvsc33 */
	T0* a127; /* yyvs33 */
	T0* a128; /* yyspecial_routines34 */
	T6 a129; /* yyvsc34 */
	T0* a130; /* yyvs34 */
	T0* a131; /* yyspecial_routines35 */
	T6 a132; /* yyvsc35 */
	T0* a133; /* yyvs35 */
	T0* a134; /* yyspecial_routines36 */
	T6 a135; /* yyvsc36 */
	T0* a136; /* yyvs36 */
	T0* a137; /* yyspecial_routines37 */
	T6 a138; /* yyvsc37 */
	T0* a139; /* yyvs37 */
	T0* a140; /* yyspecial_routines38 */
	T6 a141; /* yyvsc38 */
	T0* a142; /* yyvs38 */
	T0* a143; /* yyspecial_routines39 */
	T6 a144; /* yyvsc39 */
	T0* a145; /* yyvs39 */
	T0* a146; /* yyspecial_routines40 */
	T6 a147; /* yyvsc40 */
	T0* a148; /* yyvs40 */
	T0* a149; /* yyspecial_routines41 */
	T6 a150; /* yyvsc41 */
	T0* a151; /* yyvs41 */
	T0* a152; /* yyspecial_routines42 */
	T6 a153; /* yyvsc42 */
	T0* a154; /* yyvs42 */
	T0* a155; /* yyspecial_routines43 */
	T6 a156; /* yyvsc43 */
	T0* a157; /* yyvs43 */
	T0* a158; /* yyspecial_routines44 */
	T6 a159; /* yyvsc44 */
	T0* a160; /* yyvs44 */
	T0* a161; /* yyspecial_routines45 */
	T6 a162; /* yyvsc45 */
	T0* a163; /* yyvs45 */
	T0* a164; /* yyspecial_routines46 */
	T6 a165; /* yyvsc46 */
	T0* a166; /* yyvs46 */
	T0* a167; /* yyspecial_routines47 */
	T6 a168; /* yyvsc47 */
	T0* a169; /* yyvs47 */
	T0* a170; /* yyspecial_routines48 */
	T6 a171; /* yyvsc48 */
	T0* a172; /* yyvs48 */
	T0* a173; /* yyspecial_routines49 */
	T6 a174; /* yyvsc49 */
	T0* a175; /* yyvs49 */
	T0* a176; /* yyspecial_routines50 */
	T6 a177; /* yyvsc50 */
	T0* a178; /* yyvs50 */
	T0* a179; /* yyspecial_routines51 */
	T6 a180; /* yyvsc51 */
	T0* a181; /* yyvs51 */
	T0* a182; /* yyspecial_routines52 */
	T6 a183; /* yyvsc52 */
	T0* a184; /* yyvs52 */
	T0* a185; /* yyspecial_routines53 */
	T6 a186; /* yyvsc53 */
	T0* a187; /* yyvs53 */
	T0* a188; /* yyspecial_routines54 */
	T6 a189; /* yyvsc54 */
	T0* a190; /* yyvs54 */
	T0* a191; /* yyspecial_routines55 */
	T6 a192; /* yyvsc55 */
	T0* a193; /* yyvs55 */
	T0* a194; /* yyspecial_routines56 */
	T6 a195; /* yyvsc56 */
	T0* a196; /* yyvs56 */
	T0* a197; /* yyspecial_routines57 */
	T6 a198; /* yyvsc57 */
	T0* a199; /* yyvs57 */
	T0* a200; /* yyspecial_routines58 */
	T6 a201; /* yyvsc58 */
	T0* a202; /* yyvs58 */
	T0* a203; /* yyspecial_routines59 */
	T6 a204; /* yyvsc59 */
	T0* a205; /* yyvs59 */
	T0* a206; /* yyspecial_routines60 */
	T6 a207; /* yyvsc60 */
	T0* a208; /* yyvs60 */
	T0* a209; /* yyspecial_routines61 */
	T6 a210; /* yyvsc61 */
	T0* a211; /* yyvs61 */
	T0* a212; /* yyspecial_routines62 */
	T6 a213; /* yyvsc62 */
	T0* a214; /* yyvs62 */
	T0* a215; /* yyspecial_routines63 */
	T6 a216; /* yyvsc63 */
	T0* a217; /* yyvs63 */
	T0* a218; /* yyspecial_routines64 */
	T6 a219; /* yyvsc64 */
	T0* a220; /* yyvs64 */
	T0* a221; /* yyspecial_routines65 */
	T6 a222; /* yyvsc65 */
	T0* a223; /* yyvs65 */
	T0* a224; /* yyspecial_routines66 */
	T6 a225; /* yyvsc66 */
	T0* a226; /* yyvs66 */
	T0* a227; /* yyspecial_routines67 */
	T6 a228; /* yyvsc67 */
	T0* a229; /* yyvs67 */
	T0* a230; /* yyspecial_routines68 */
	T6 a231; /* yyvsc68 */
	T0* a232; /* yyvs68 */
	T0* a233; /* yyspecial_routines69 */
	T6 a234; /* yyvsc69 */
	T0* a235; /* yyvs69 */
	T0* a236; /* yyspecial_routines70 */
	T6 a237; /* yyvsc70 */
	T0* a238; /* yyvs70 */
	T0* a239; /* yyspecial_routines71 */
	T6 a240; /* yyvsc71 */
	T0* a241; /* yyvs71 */
	T0* a242; /* yyspecial_routines72 */
	T6 a243; /* yyvsc72 */
	T0* a244; /* yyvs72 */
	T0* a245; /* yyspecial_routines73 */
	T6 a246; /* yyvsc73 */
	T0* a247; /* yyvs73 */
	T0* a248; /* yyspecial_routines74 */
	T6 a249; /* yyvsc74 */
	T0* a250; /* yyvs74 */
	T0* a251; /* yyspecial_routines75 */
	T6 a252; /* yyvsc75 */
	T0* a253; /* yyvs75 */
	T0* a254; /* yyspecial_routines76 */
	T6 a255; /* yyvsc76 */
	T0* a256; /* yyvs76 */
	T0* a257; /* yyspecial_routines77 */
	T6 a258; /* yyvsc77 */
	T0* a259; /* yyvs77 */
	T0* a260; /* yyspecial_routines78 */
	T6 a261; /* yyvsc78 */
	T0* a262; /* yyvs78 */
	T0* a263; /* yyspecial_routines79 */
	T6 a264; /* yyvsc79 */
	T0* a265; /* yyvs79 */
	T0* a266; /* yyspecial_routines80 */
	T6 a267; /* yyvsc80 */
	T0* a268; /* yyvs80 */
	T0* a269; /* yyspecial_routines81 */
	T6 a270; /* yyvsc81 */
	T0* a271; /* yyvs81 */
	T0* a272; /* yyspecial_routines82 */
	T6 a273; /* yyvsc82 */
	T0* a274; /* yyvs82 */
	T0* a275; /* yyspecial_routines83 */
	T6 a276; /* yyvsc83 */
	T0* a277; /* yyvs83 */
	T0* a278; /* yyspecial_routines84 */
	T6 a279; /* yyvsc84 */
	T0* a280; /* yyvs84 */
	T0* a281; /* yyspecial_routines85 */
	T6 a282; /* yyvsc85 */
	T0* a283; /* yyvs85 */
	T0* a284; /* yyspecial_routines86 */
	T6 a285; /* yyvsc86 */
	T0* a286; /* yyvs86 */
	T0* a287; /* yyspecial_routines87 */
	T6 a288; /* yyvsc87 */
	T0* a289; /* yyvs87 */
	T0* a290; /* yyspecial_routines88 */
	T6 a291; /* yyvsc88 */
	T0* a292; /* yyvs88 */
	T0* a293; /* yyspecial_routines89 */
	T6 a294; /* yyvsc89 */
	T0* a295; /* yyvs89 */
	T0* a296; /* yyspecial_routines90 */
	T6 a297; /* yyvsc90 */
	T0* a298; /* yyvs90 */
	T0* a299; /* yyspecial_routines91 */
	T6 a300; /* yyvsc91 */
	T0* a301; /* yyvs91 */
	T0* a302; /* yyspecial_routines92 */
	T6 a303; /* yyvsc92 */
	T0* a304; /* yyvs92 */
	T0* a305; /* yyspecial_routines93 */
	T6 a306; /* yyvsc93 */
	T0* a307; /* yyvs93 */
	T0* a308; /* yyspecial_routines94 */
	T6 a309; /* yyvsc94 */
	T0* a310; /* yyvs94 */
	T0* a311; /* yyspecial_routines95 */
	T6 a312; /* yyvsc95 */
	T0* a313; /* yyvs95 */
	T0* a314; /* yyspecial_routines96 */
	T6 a315; /* yyvsc96 */
	T0* a316; /* yyvs96 */
	T0* a317; /* yyspecial_routines97 */
	T6 a318; /* yyvsc97 */
	T0* a319; /* yyvs97 */
	T0* a320; /* yyspecial_routines98 */
	T6 a321; /* yyvsc98 */
	T0* a322; /* yyvs98 */
	T0* a323; /* yyspecial_routines99 */
	T6 a324; /* yyvsc99 */
	T0* a325; /* yyvs99 */
	T0* a326; /* yyspecial_routines100 */
	T6 a327; /* yyvsc100 */
	T0* a328; /* yyvs100 */
	T0* a329; /* yyspecial_routines101 */
	T6 a330; /* yyvsc101 */
	T0* a331; /* yyvs101 */
	T0* a332; /* yyspecial_routines102 */
	T6 a333; /* yyvsc102 */
	T0* a334; /* yyvs102 */
	T0* a335; /* yyspecial_routines103 */
	T6 a336; /* yyvsc103 */
	T0* a337; /* yyvs103 */
	T0* a338; /* yyspecial_routines104 */
	T6 a339; /* yyvsc104 */
	T0* a340; /* yyvs104 */
	T0* a341; /* yyspecial_routines105 */
	T6 a342; /* yyvsc105 */
	T0* a343; /* yyvs105 */
	T0* a344; /* yyspecial_routines106 */
	T6 a345; /* yyvsc106 */
	T0* a346; /* yyvs106 */
	T0* a347; /* yyspecial_routines107 */
	T6 a348; /* yyvsc107 */
	T0* a349; /* yyvs107 */
	T0* a350; /* yyspecial_routines108 */
	T6 a351; /* yyvsc108 */
	T0* a352; /* yyvs108 */
	T0* a353; /* yyspecial_routines109 */
	T6 a354; /* yyvsc109 */
	T0* a355; /* yyvs109 */
	T0* a356; /* yyspecial_routines110 */
	T6 a357; /* yyvsc110 */
	T0* a358; /* yyvs110 */
	T0* a359; /* yyspecial_routines111 */
	T6 a360; /* yyvsc111 */
	T0* a361; /* yyvs111 */
	T0* a362; /* yyspecial_routines112 */
	T6 a363; /* yyvsc112 */
	T0* a364; /* yyvs112 */
	T0* a365; /* yyspecial_routines113 */
	T6 a366; /* yyvsc113 */
	T0* a367; /* yyvs113 */
	T0* a368; /* yyspecial_routines114 */
	T6 a369; /* yyvsc114 */
	T0* a370; /* yyvs114 */
	T0* a371; /* yyspecial_routines115 */
	T6 a372; /* yyvsc115 */
	T0* a373; /* yyvs115 */
	T0* a374; /* yyspecial_routines116 */
	T6 a375; /* yyvsc116 */
	T0* a376; /* yyvs116 */
	T0* a377; /* yyspecial_routines117 */
	T6 a378; /* yyvsc117 */
	T0* a379; /* yyvs117 */
	T0* a380; /* yyspecial_routines118 */
	T6 a381; /* yyvsc118 */
	T0* a382; /* yyvs118 */
	T0* a383; /* yyspecial_routines119 */
	T6 a384; /* yyvsc119 */
	T0* a385; /* yyvs119 */
	T0* a386; /* yyspecial_routines120 */
	T6 a387; /* yyvsc120 */
	T0* a388; /* yyvs120 */
	T0* a389; /* yyspecial_routines121 */
	T6 a390; /* yyvsc121 */
	T0* a391; /* yyvs121 */
	T0* a392; /* yytranslate */
	T0* a393; /* yyr1 */
	T0* a394; /* yytypes1 */
	T0* a395; /* yytypes2 */
	T0* a396; /* yydefact */
	T0* a397; /* yydefgoto */
	T0* a398; /* yypact */
	T0* a399; /* yypgoto */
	T0* a400; /* yytable */
	T0* a401; /* yycheck */
	T6 a402; /* yy_end */
	T6 a403; /* yy_start */
	T6 a404; /* yy_line */
	T6 a405; /* yy_column */
	T6 a406; /* yy_position */
	T6 a407; /* yy_parsing_status */
	T6 a408; /* yy_suspended_yystacksize */
	T6 a409; /* yy_suspended_yystate */
	T6 a410; /* yy_suspended_yyn */
	T6 a411; /* yy_suspended_yychar1 */
	T6 a412; /* yy_suspended_index */
	T6 a413; /* yy_suspended_yyss_top */
	T6 a414; /* yy_suspended_yy_goto */
	T6 a415; /* yyssp */
	T6 a416; /* error_count */
	T1 a417; /* yy_lookahead_needed */
	T6 a418; /* yyerrstatus */
	T6 a419; /* last_token */
	T0* a420; /* last_class */
	T0* a421; /* last_clients */
	T0* a422; /* last_export_clients */
	T0* a423; /* last_feature_clause */
	T6 a424; /* last_literal_end */
	T1 a425; /* yy_rejected */
	T6 a426; /* yy_state_count */
	T6 a427; /* yy_full_match */
	T6 a428; /* yy_lp */
	T6 a429; /* yy_looking_for_trail_begin */
	T6 a430; /* yy_full_lp */
	T6 a431; /* yy_full_state */
	T6 a432; /* pushed_start_condition_count */
	T6 a433; /* yy_start_state */
	T6 a434; /* line */
	T6 a435; /* column */
	T6 a436; /* position */
	T1 a437; /* yy_more_flag */
	T6 a438; /* yy_more_len */
	T6 a439; /* yy_last_accepting_state */
	T6 a440; /* yy_last_accepting_cpos */
	T0* a441; /* yy_state_stack */
	T0* a442; /* yy_content */
	T0* a443; /* yy_content_area */
	T6 a444; /* yyvsp1 */
	T6 a445; /* yyvsp2 */
	T6 a446; /* yyvsp3 */
	T6 a447; /* yyvsp4 */
	T6 a448; /* yyvsp5 */
	T6 a449; /* yyvsp6 */
	T6 a450; /* yyvsp7 */
	T6 a451; /* yyvsp8 */
	T6 a452; /* yyvsp9 */
	T6 a453; /* yyvsp10 */
	T6 a454; /* yyvsp11 */
	T6 a455; /* yyvsp12 */
	T6 a456; /* yyvsp13 */
	T6 a457; /* yyvsp14 */
	T6 a458; /* yyvsp15 */
	T6 a459; /* yyvsp16 */
	T6 a460; /* yyvsp17 */
	T6 a461; /* yyvsp18 */
	T6 a462; /* yyvsp19 */
	T6 a463; /* yyvsp20 */
	T6 a464; /* yyvsp21 */
	T6 a465; /* yyvsp22 */
	T6 a466; /* yyvsp23 */
	T6 a467; /* yyvsp24 */
	T6 a468; /* yyvsp25 */
	T6 a469; /* yyvsp26 */
	T6 a470; /* yyvsp27 */
	T6 a471; /* yyvsp28 */
	T6 a472; /* yyvsp29 */
	T6 a473; /* yyvsp30 */
	T6 a474; /* yyvsp31 */
	T6 a475; /* yyvsp32 */
	T6 a476; /* yyvsp33 */
	T6 a477; /* yyvsp34 */
	T6 a478; /* yyvsp35 */
	T6 a479; /* yyvsp36 */
	T6 a480; /* yyvsp37 */
	T6 a481; /* yyvsp38 */
	T6 a482; /* yyvsp39 */
	T6 a483; /* yyvsp40 */
	T6 a484; /* yyvsp41 */
	T6 a485; /* yyvsp42 */
	T6 a486; /* yyvsp43 */
	T6 a487; /* yyvsp44 */
	T6 a488; /* yyvsp45 */
	T6 a489; /* yyvsp46 */
	T6 a490; /* yyvsp47 */
	T6 a491; /* yyvsp48 */
	T6 a492; /* yyvsp49 */
	T6 a493; /* yyvsp50 */
	T6 a494; /* yyvsp51 */
	T6 a495; /* yyvsp52 */
	T6 a496; /* yyvsp53 */
	T6 a497; /* yyvsp54 */
	T6 a498; /* yyvsp55 */
	T6 a499; /* yyvsp56 */
	T6 a500; /* yyvsp57 */
	T6 a501; /* yyvsp58 */
	T6 a502; /* yyvsp59 */
	T6 a503; /* yyvsp60 */
	T6 a504; /* yyvsp61 */
	T6 a505; /* yyvsp62 */
	T6 a506; /* yyvsp63 */
	T6 a507; /* yyvsp64 */
	T6 a508; /* yyvsp65 */
	T6 a509; /* yyvsp66 */
	T6 a510; /* yyvsp67 */
	T6 a511; /* yyvsp68 */
	T6 a512; /* yyvsp69 */
	T6 a513; /* yyvsp70 */
	T6 a514; /* yyvsp71 */
	T6 a515; /* yyvsp72 */
	T6 a516; /* yyvsp73 */
	T6 a517; /* yyvsp74 */
	T6 a518; /* yyvsp75 */
	T6 a519; /* yyvsp76 */
	T6 a520; /* yyvsp77 */
	T6 a521; /* yyvsp78 */
	T6 a522; /* yyvsp79 */
	T6 a523; /* yyvsp80 */
	T6 a524; /* yyvsp81 */
	T6 a525; /* yyvsp82 */
	T6 a526; /* yyvsp83 */
	T6 a527; /* yyvsp84 */
	T6 a528; /* yyvsp85 */
	T6 a529; /* yyvsp86 */
	T6 a530; /* yyvsp87 */
	T6 a531; /* yyvsp88 */
	T6 a532; /* yyvsp89 */
	T6 a533; /* yyvsp90 */
	T6 a534; /* yyvsp91 */
	T6 a535; /* yyvsp92 */
	T6 a536; /* yyvsp93 */
	T6 a537; /* yyvsp94 */
	T6 a538; /* yyvsp95 */
	T6 a539; /* yyvsp96 */
	T6 a540; /* yyvsp97 */
	T6 a541; /* yyvsp98 */
	T6 a542; /* yyvsp99 */
	T6 a543; /* yyvsp100 */
	T6 a544; /* yyvsp101 */
	T6 a545; /* yyvsp102 */
	T6 a546; /* yyvsp103 */
	T6 a547; /* yyvsp104 */
	T6 a548; /* yyvsp105 */
	T6 a549; /* yyvsp106 */
	T6 a550; /* yyvsp107 */
	T6 a551; /* yyvsp108 */
	T6 a552; /* yyvsp109 */
	T6 a553; /* yyvsp110 */
	T6 a554; /* yyvsp111 */
	T6 a555; /* yyvsp112 */
	T6 a556; /* yyvsp113 */
	T6 a557; /* yyvsp114 */
	T6 a558; /* yyvsp115 */
	T6 a559; /* yyvsp116 */
	T6 a560; /* yyvsp117 */
	T6 a561; /* yyvsp118 */
	T6 a562; /* yyvsp119 */
	T6 a563; /* yyvsp120 */
	T6 a564; /* yyvsp121 */
	T0* a565; /* yy_ec */
	T0* a566; /* yy_accept */
	T0* a567; /* yy_chk */
	T0* a568; /* yy_base */
	T0* a569; /* yy_def */
	T0* a570; /* yy_meta */
	T0* a571; /* yy_nxt */
	T0* a572; /* yy_acclist */
	T0* a573; /* last_detachable_any_value */
	T0* a574; /* last_detachable_et_keyword_value */
	T0* a575; /* last_detachable_et_agent_keyword_value */
	T0* a576; /* last_detachable_et_precursor_keyword_value */
	T0* a577; /* last_detachable_et_symbol_value */
	T0* a578; /* last_detachable_et_position_value */
	T0* a579; /* last_detachable_et_bit_constant_value */
	T0* a580; /* last_detachable_et_boolean_constant_value */
	T0* a581; /* last_detachable_et_break_value */
	T0* a582; /* last_detachable_et_character_constant_value */
	T0* a583; /* last_detachable_et_current_value */
	T0* a584; /* last_detachable_et_free_operator_value */
	T0* a585; /* last_detachable_et_identifier_value */
	T0* a586; /* last_detachable_et_integer_constant_value */
	T0* a587; /* last_detachable_et_keyword_operator_value */
	T0* a588; /* last_detachable_et_manifest_string_value */
	T0* a589; /* last_detachable_et_real_constant_value */
	T0* a590; /* last_detachable_et_result_value */
	T0* a591; /* last_detachable_et_retry_instruction_value */
	T0* a592; /* last_detachable_et_symbol_operator_value */
	T0* a593; /* last_detachable_et_void_value */
	T0* a594; /* last_detachable_et_semicolon_symbol_value */
	T0* a595; /* last_detachable_et_bracket_symbol_value */
	T0* a596; /* last_detachable_et_question_mark_symbol_value */
	T0* a597; /* last_formal_arguments */
	T0* a598; /* last_local_variables */
	T0* a599; /* last_object_tests */
	T0* a600; /* last_across_components */
	T6 a601; /* last_break_end */
	T6 a602; /* last_comment_end */
	T6 a603; /* ms_column */
	T6 a604; /* ms_line */
	T6 a605; /* break_kind */
};

/* Struct for type ET_PROVIDER_CHECKER */
struct S441 {
	int id;
	T0* a1; /* current_class */
};

/* Struct for type ET_ANCESTOR_BUILDER */
struct S442 {
	int id;
	T0* a1; /* class_sorter */
	T0* a2; /* ancestors */
	T0* a3; /* parent_checker */
	T0* a4; /* formal_parameter_checker */
	T0* a5; /* parent_context */
	T0* a6; /* current_class */
};

/* Struct for type ET_FEATURE_FLATTENER */
struct S443 {
	int id;
	T0* a1; /* named_features */
	T0* a2; /* queries */
	T0* a3; /* procedures */
	T0* a4; /* aliased_features */
	T0* a5; /* clients_list */
	T0* a6; /* client_classes */
	T0* a7; /* feature_adaptation_resolver */
	T0* a8; /* dotnet_feature_adaptation_resolver */
	T0* a9; /* identifier_type_resolver */
	T0* a10; /* unfolded_tuple_actual_parameters_resolver */
	T0* a11; /* anchored_type_checker */
	T0* a12; /* signature_checker */
	T0* a13; /* parent_checker */
	T0* a14; /* formal_parameter_checker */
	T0* a15; /* builtin_feature_checker */
	T0* a16; /* precursor_checker */
	T0* a17; /* precursors */
	T0* a18; /* current_class */
	T1 a19; /* has_signature_error */
};

/* Struct for type ET_INTERFACE_CHECKER */
struct S444 {
	int id;
	T0* a1; /* classes_to_be_processed */
	T0* a2; /* parent_checker3 */
	T0* a3; /* qualified_anchored_type_checker */
	T0* a4; /* named_features */
	T0* a5; /* feature_adaptation_resolver */
	T0* a6; /* dotnet_feature_adaptation_resolver */
	T0* a7; /* signature_checker */
	T0* a8; /* unfolded_tuple_actual_parameters_resolver */
	T0* a9; /* current_class */
};

/* Struct for type DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
struct S446 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T0* a13; /* internal_cursor */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type ET_DOTNET_ASSEMBLIES */
struct S447 {
	int id;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_DOTNET_ASSEMBLY */
struct S448 {
	int id;
	T0* a1; /* pathname */
	T0* a2; /* referenced_assemblies */
	T0* a3; /* current_system */
	T0* a4; /* dotnet_assembly */
	T0* a5; /* name */
	T0* a6; /* master_classes */
	T0* a7; /* any_type */
	T0* a8; /* detachable_any_type */
	T0* a9; /* any_parent */
	T0* a10; /* any_parents */
	T0* a11; /* any_clients */
	T0* a12; /* tuple_type */
	T0* a13; /* detachable_tuple_type */
	T0* a14; /* tuple_like_current_type */
	T0* a15; /* unfolded_empty_tuple_actual_parameters */
	T0* a16; /* array_any_type */
	T0* a17; /* array_detachable_any_type */
	T0* a18; /* array_like_current_type */
	T0* a19; /* boolean_type */
	T0* a20; /* character_type */
	T0* a21; /* character_8_type */
	T0* a22; /* character_8_convert_feature */
	T0* a23; /* character_32_type */
	T0* a24; /* character_32_convert_feature */
	T0* a25; /* double_type */
	T0* a26; /* exception_type */
	T0* a27; /* detachable_exception_type */
	T0* a28; /* exception_manager_type */
	T0* a29; /* function_type */
	T0* a30; /* integer_type */
	T0* a31; /* integer_8_type */
	T0* a32; /* integer_8_convert_feature */
	T0* a33; /* integer_16_type */
	T0* a34; /* integer_16_convert_feature */
	T0* a35; /* integer_32_type */
	T0* a36; /* integer_32_convert_feature */
	T0* a37; /* integer_64_type */
	T0* a38; /* integer_64_convert_feature */
	T0* a39; /* ise_exception_manager_type */
	T0* a40; /* iterable_detachable_any_type */
	T0* a41; /* natural_type */
	T0* a42; /* natural_8_type */
	T0* a43; /* natural_8_convert_feature */
	T0* a44; /* natural_16_type */
	T0* a45; /* natural_16_convert_feature */
	T0* a46; /* natural_32_type */
	T0* a47; /* natural_32_convert_feature */
	T0* a48; /* natural_64_type */
	T0* a49; /* natural_64_convert_feature */
	T0* a50; /* none_type */
	T0* a51; /* detachable_none_type */
	T0* a52; /* pointer_type */
	T0* a53; /* predicate_like_current_type */
	T0* a54; /* procedure_like_current_type */
	T0* a55; /* real_type */
	T0* a56; /* real_32_type */
	T0* a57; /* real_32_convert_feature */
	T0* a58; /* real_64_type */
	T0* a59; /* real_64_convert_feature */
	T0* a60; /* routine_type */
	T0* a61; /* special_any_type */
	T0* a62; /* special_detachable_any_type */
	T0* a63; /* string_type */
	T0* a64; /* string_8_type */
	T0* a65; /* string_8_convert_feature */
	T0* a66; /* string_32_type */
	T0* a67; /* string_32_convert_feature */
	T0* a68; /* system_object_type */
	T0* a69; /* system_object_parents */
	T0* a70; /* system_string_type */
	T0* a71; /* type_any_type */
	T0* a72; /* type_type_any_type */
	T0* a73; /* type_detachable_any_type */
	T0* a74; /* type_detachable_like_current_type */
	T0* a75; /* detachable_type_exception_type */
	T0* a76; /* type_detachable_exception_type */
	T0* a77; /* detachable_type_detachable_any_type */
	T0* a78; /* type_like_current_type */
	T0* a79; /* typed_pointer_any_type */
	T0* a80; /* typed_pointer_like_current_type */
	T0* a81; /* wide_character_type */
	T1 a82; /* is_read_only */
	T1 a83; /* is_preparsed */
};

/* Struct for type [attached] TUPLE [ET_DOTNET_ASSEMBLY] */
struct S449 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
struct S450 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	T1 (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
struct S451 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
struct S452 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_INTERNAL_UNIVERSE] */
struct S453 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_INTERNAL_UNIVERSE]] */
struct S454 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]]] */
struct S455 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [ET_DOTNET_ASSEMBLIES] */
struct S457 {
	int id;
	T0* z1;
};

/* Struct for type ET_LIBRARY */
struct S460 {
	int id;
	T0* a1; /* current_system */
	T0* a2; /* library */
	T0* a3; /* name */
	T0* a4; /* libraries */
	T0* a5; /* clusters */
	T0* a6; /* dotnet_assemblies */
	T0* a7; /* master_classes */
	T0* a8; /* any_type */
	T0* a9; /* detachable_any_type */
	T0* a10; /* any_parent */
	T0* a11; /* any_parents */
	T0* a12; /* any_clients */
	T0* a13; /* tuple_type */
	T0* a14; /* detachable_tuple_type */
	T0* a15; /* tuple_like_current_type */
	T0* a16; /* unfolded_empty_tuple_actual_parameters */
	T0* a17; /* array_any_type */
	T0* a18; /* array_detachable_any_type */
	T0* a19; /* array_like_current_type */
	T0* a20; /* boolean_type */
	T0* a21; /* character_type */
	T0* a22; /* character_8_type */
	T0* a23; /* character_8_convert_feature */
	T0* a24; /* character_32_type */
	T0* a25; /* character_32_convert_feature */
	T0* a26; /* double_type */
	T0* a27; /* exception_type */
	T0* a28; /* detachable_exception_type */
	T0* a29; /* exception_manager_type */
	T0* a30; /* function_type */
	T0* a31; /* integer_type */
	T0* a32; /* integer_8_type */
	T0* a33; /* integer_8_convert_feature */
	T0* a34; /* integer_16_type */
	T0* a35; /* integer_16_convert_feature */
	T0* a36; /* integer_32_type */
	T0* a37; /* integer_32_convert_feature */
	T0* a38; /* integer_64_type */
	T0* a39; /* integer_64_convert_feature */
	T0* a40; /* ise_exception_manager_type */
	T0* a41; /* iterable_detachable_any_type */
	T0* a42; /* natural_type */
	T0* a43; /* natural_8_type */
	T0* a44; /* natural_8_convert_feature */
	T0* a45; /* natural_16_type */
	T0* a46; /* natural_16_convert_feature */
	T0* a47; /* natural_32_type */
	T0* a48; /* natural_32_convert_feature */
	T0* a49; /* natural_64_type */
	T0* a50; /* natural_64_convert_feature */
	T0* a51; /* none_type */
	T0* a52; /* detachable_none_type */
	T0* a53; /* pointer_type */
	T0* a54; /* predicate_like_current_type */
	T0* a55; /* procedure_like_current_type */
	T0* a56; /* real_type */
	T0* a57; /* real_32_type */
	T0* a58; /* real_32_convert_feature */
	T0* a59; /* real_64_type */
	T0* a60; /* real_64_convert_feature */
	T0* a61; /* routine_type */
	T0* a62; /* special_any_type */
	T0* a63; /* special_detachable_any_type */
	T0* a64; /* string_type */
	T0* a65; /* string_8_type */
	T0* a66; /* string_8_convert_feature */
	T0* a67; /* string_32_type */
	T0* a68; /* string_32_convert_feature */
	T0* a69; /* system_object_type */
	T0* a70; /* system_object_parents */
	T0* a71; /* system_string_type */
	T0* a72; /* type_any_type */
	T0* a73; /* type_type_any_type */
	T0* a74; /* type_detachable_any_type */
	T0* a75; /* type_detachable_like_current_type */
	T0* a76; /* detachable_type_exception_type */
	T0* a77; /* type_detachable_exception_type */
	T0* a78; /* detachable_type_detachable_any_type */
	T0* a79; /* type_like_current_type */
	T0* a80; /* typed_pointer_any_type */
	T0* a81; /* typed_pointer_like_current_type */
	T0* a82; /* wide_character_type */
	T1 a83; /* is_read_only */
	T1 a84; /* is_preparsed */
};

/* Struct for type [attached] TUPLE [ET_LIBRARY] */
struct S461 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_LIBRARY]] */
struct S462 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [STRING_8] */
struct S463 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_CLASS_NAME_TESTER */
struct S465 {
	int id;
};

/* Struct for type ET_PARENT */
struct S467 {
	int id;
	T0* a1; /* type */
	T0* a2; /* renames */
	T0* a3; /* exports */
	T0* a4; /* undefines */
	T0* a5; /* redefines */
	T0* a6; /* selects */
	T0* a7; /* end_keyword */
};

/* Struct for type ET_PARENT_LIST */
struct S468 {
	int id;
	T0* a1; /* inherit_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_CLIENT_LIST */
struct S469 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_BUILTIN_CONVERT_FEATURE */
struct S470 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* type */
};

/* Struct for type ET_MASTER_CLASS */
struct S471 {
	int id;
	T0* a1; /* name */
	T0* a2; /* mapped_class */
	T0* a3; /* first_overriding_class */
	T0* a4; /* intrinsic_class */
	T0* a5; /* universe */
	T0* a6; /* other_local_override_classes */
	T0* a7; /* other_local_non_override_classes */
	T0* a8; /* other_local_ignored_classes */
	T0* a9; /* other_local_hidden_classes */
	T0* a10; /* other_imported_classes */
	T0* a11; /* other_overriding_classes */
	T1 a12; /* is_modified */
	T1 a13; /* is_marked */
	T0* a14; /* first_imported_class */
	T0* a15; /* first_local_ignored_class */
	T0* a16; /* first_local_override_class */
	T0* a17; /* first_local_non_override_class */
	T0* a18; /* first_local_hidden_class */
};

/* Struct for type DS_HASH_SET [ET_UNIVERSE] */
struct S472 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [attached] TUPLE [ET_AST_PROCESSOR] */
struct S473 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_CLASS]] */
struct S474 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	T1 (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [ET_MASTER_CLASS] */
struct S476 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_MASTER_CLASS]] */
struct S477 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [ET_CLUSTER] */
struct S479 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLUSTER]] */
struct S480 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [ET_XACE_SYSTEM] */
struct S481 {
	int id;
	T0* z1;
};

/* Struct for type DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
struct S483 {
	int id;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type [attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S485 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
struct S486 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type ET_ANCESTORS_STATUS_CHECKER */
struct S488 {
	int id;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
};

/* Struct for type ET_FLATTENING_STATUS_CHECKER */
struct S489 {
	int id;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
};

/* Struct for type ET_INTERFACE_STATUS_CHECKER */
struct S490 {
	int id;
	T0* a1; /* qualified_anchored_type_checker */
	T0* a2; /* class_type_checker */
	T0* a3; /* current_class */
};

/* Struct for type ET_IMPLEMENTATION_STATUS_CHECKER */
struct S491 {
	int id;
	T0* a1; /* current_class */
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLASS]]] */
struct S492 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
struct S493 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_FLATTENING_STATUS_CHECKER] */
struct S494 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_INTERFACE_STATUS_CHECKER] */
struct S495 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
struct S496 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [BOOLEAN] */
struct S497 {
	int id;
	T1 z1;
};

/* Struct for type ET_CLIENT */
struct S498 {
	int id;
	T0* a1; /* name */
	T0* a2; /* named_base_class */
};

/* Struct for type ET_RENAME_LIST */
struct S499 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* rename_keyword */
};

/* Struct for type ET_EXPORT_LIST */
struct S500 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* export_keyword */
};

/* Struct for type ET_KEYWORD_FEATURE_NAME_LIST */
struct S501 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* keyword */
};

/* Struct for type ET_LIKE_CURRENT */
struct S504 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* like_keyword */
	T0* a3; /* current_keyword */
};

/* Struct for type ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
struct S505 {
	int id;
	T0* a1; /* tuple_type */
};

/* Struct for type ET_NONE_GROUP */
struct S506 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* name */
	T1 a3; /* use_obsolete_syntax */
	T0* a4; /* cached_absolute_pathname */
};

/* Struct for type [attached] TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
struct S507 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]], FUNCTION [ANY, TUPLE [ET_CLASS], BOOLEAN]] */
struct S508 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]], FUNCTION [ANY, TUPLE [ET_CLASS], BOOLEAN], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
struct S509 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]]] */
struct S510 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
struct S511 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLUSTER]]] */
struct S514 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
struct S518 {
	int id;
	T0* z1;
};

/* Struct for type XM_NAMESPACE */
struct S521 {
	int id;
	T0* a1; /* uri */
	T0* a2; /* ns_prefix */
};

/* Struct for type ARRAY [INTEGER_32] */
struct S522 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type KL_ARRAY_ROUTINES [INTEGER_32] */
struct S523 {
	int id;
};

/* Struct for type UT_CONFIG_PARSER */
struct S524 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* config_values */
	T0* a3; /* error_handler */
	T0* a4; /* defined_values */
	T0* a5; /* include_stack */
	T0* a6; /* line_nb_stack */
	T0* a7; /* last_string_value */
	T6 a8; /* line_nb */
	T0* a9; /* yyss */
	T0* a10; /* input_buffer */
	T6 a11; /* yy_end */
	T6 a12; /* yy_position */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_parsing_status */
	T6 a16; /* yy_suspended_yystacksize */
	T6 a17; /* yy_suspended_yystate */
	T6 a18; /* yy_suspended_yyn */
	T6 a19; /* yy_suspended_yychar1 */
	T6 a20; /* yy_suspended_index */
	T6 a21; /* yy_suspended_yyss_top */
	T6 a22; /* yy_suspended_yy_goto */
	T0* a23; /* yyr1 */
	T6 a24; /* yyssp */
	T0* a25; /* yypgoto */
	T0* a26; /* yycheck */
	T0* a27; /* yytable */
	T0* a28; /* yydefgoto */
	T6 a29; /* error_count */
	T1 a30; /* yy_lookahead_needed */
	T6 a31; /* yyerrstatus */
	T0* a32; /* yypact */
	T6 a33; /* last_token */
	T0* a34; /* yytranslate */
	T0* a35; /* yydefact */
	T0* a36; /* yy_pushed_start_conditions */
	T0* a37; /* yyspecial_routines1 */
	T6 a38; /* yyvsc1 */
	T0* a39; /* yyvs1 */
	T0* a40; /* yyspecial_routines2 */
	T6 a41; /* yyvsc2 */
	T0* a42; /* yyvs2 */
	T0* a43; /* yyspecial_routines3 */
	T6 a44; /* yyvsc3 */
	T0* a45; /* yyvs3 */
	T0* a46; /* yytypes1 */
	T0* a47; /* yytypes2 */
	T6 a48; /* yy_start */
	T6 a49; /* yyvsp1 */
	T6 a50; /* yyvsp2 */
	T6 a51; /* yyvsp3 */
	T1 a52; /* yy_more_flag */
	T6 a53; /* yy_more_len */
	T6 a54; /* line */
	T6 a55; /* column */
	T6 a56; /* position */
	T6 a57; /* yy_start_state */
	T0* a58; /* yy_state_stack */
	T6 a59; /* yy_state_count */
	T0* a60; /* yy_content_area */
	T0* a61; /* yy_ec */
	T0* a62; /* yy_content */
	T0* a63; /* yy_accept */
	T6 a64; /* yy_last_accepting_state */
	T6 a65; /* yy_last_accepting_cpos */
	T0* a66; /* yy_chk */
	T0* a67; /* yy_base */
	T0* a68; /* yy_def */
	T0* a69; /* yy_meta */
	T0* a70; /* yy_nxt */
	T6 a71; /* yy_lp */
	T0* a72; /* yy_acclist */
	T6 a73; /* yy_looking_for_trail_begin */
	T6 a74; /* yy_full_match */
	T6 a75; /* yy_full_state */
	T6 a76; /* yy_full_lp */
	T1 a77; /* yy_rejected */
	T0* a78; /* last_detachable_any_value */
	T6 a79; /* if_level */
	T6 a80; /* ignored_level */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
struct S525 {
	int id;
};

/* Struct for type ET_DO_PROCEDURE */
struct S528 {
	int id;
	T0* a1; /* implementation_class */
	T6 a2; /* first_seed */
	T0* a3; /* arguments */
	T0* a4; /* extended_name */
	T6 a5; /* hash_code */
	T0* a6; /* end_keyword */
	T0* a7; /* clients */
	T0* a8; /* implementation_feature */
	T0* a9; /* compound */
	T1 a10; /* validity_checked */
	T1 a11; /* has_validity_error */
	T0* a12; /* preconditions */
	T0* a13; /* first_precursor */
	T0* a14; /* other_precursors */
	T0* a15; /* other_seeds */
	T0* a16; /* rescue_clause */
	T0* a17; /* locals */
	T0* a18; /* object_tests */
	T0* a19; /* across_components */
	T0* a20; /* postconditions */
	T0* a21; /* obsolete_message */
	T0* a22; /* is_keyword */
	T0* a23; /* semicolon */
	T0* a24; /* feature_clause */
	T0* a25; /* first_indexing */
	T0* a26; /* frozen_keyword */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* synonym */
};

/* Struct for type ET_SYSTEM_ERROR */
struct S530 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_INTERNAL_ERROR */
struct S531 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_VALIDITY_ERROR */
struct S532 {
	int id;
	T1 a1; /* ise_reported */
	T1 a2; /* ge_reported */
	T0* a3; /* default_template */
	T0* a4; /* parameters */
	T0* a5; /* current_class */
	T0* a6; /* class_impl */
	T0* a7; /* position */
	T0* a8; /* code */
	T0* a9; /* etl_code */
	T1 a10; /* ise_fatal */
	T1 a11; /* ge_fatal */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET */
struct S533 {
	int id;
	T0* a1; /* static_type */
	T1 a2; /* is_never_void */
	T6 a3; /* count */
	T0* a4; /* targets */
	T0* a5; /* dynamic_types */
	T1 a6; /* is_dynamic_types_readonly */
};

/* Struct for type ET_DEFERRED_PROCEDURE */
struct S534 {
	int id;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T6 a3; /* first_seed */
	T0* a4; /* arguments */
	T0* a5; /* extended_name */
	T0* a6; /* deferred_keyword */
	T6 a7; /* hash_code */
	T0* a8; /* end_keyword */
	T0* a9; /* clients */
	T1 a10; /* validity_checked */
	T1 a11; /* has_validity_error */
	T0* a12; /* preconditions */
	T0* a13; /* first_precursor */
	T0* a14; /* other_precursors */
	T0* a15; /* other_seeds */
	T0* a16; /* object_tests */
	T0* a17; /* across_components */
	T0* a18; /* postconditions */
	T0* a19; /* obsolete_message */
	T0* a20; /* is_keyword */
	T0* a21; /* semicolon */
	T0* a22; /* feature_clause */
	T0* a23; /* first_indexing */
	T0* a24; /* frozen_keyword */
	T6 a25; /* id */
	T6 a26; /* version */
	T0* a27; /* synonym */
};

/* Struct for type CELL [INTEGER_32] */
struct S536 {
	int id;
	T6 a1; /* item */
};

/* Struct for type C_STRING */
struct S537 {
	int id;
	T0* a1; /* managed_data */
	T6 a2; /* count */
};

/* Struct for type KL_PATHNAME */
struct S539 {
	int id;
	T6 a1; /* count */
	T0* a2; /* drive */
	T0* a3; /* hostname */
	T0* a4; /* sharename */
	T1 a5; /* is_relative */
	T0* a6; /* components */
};

/* Struct for type PLATFORM */
struct S540 {
	int id;
};

/* Struct for type READABLE_STRING_32 */
struct S541 {
	int id;
};

/* Struct for type SPECIAL [NATURAL_8] */
struct S542 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T8 z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
struct S545 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [AP_OPTION] */
struct S547 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_OPTION] */
struct S548 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S549 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S550 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S551 {
	int id;
};

/* Struct for type detachable DS_LINKABLE [STRING_8] */
struct S552 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type detachable DS_LINKABLE [BOOLEAN] */
struct S553 {
	int id;
	T1 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [BOOLEAN] */
struct S554 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [INTEGER_32] */
struct S555 {
	int id;
	T6 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [INTEGER_32] */
struct S556 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type XM_NAMESPACE_RESOLVER */
struct S557 {
	int id;
	T0* a1; /* next */
	T0* a2; /* element_local_part */
	T0* a3; /* element_prefix */
	T0* a4; /* context */
	T1 a5; /* forward_xmlns */
	T0* a6; /* attributes_prefix */
	T0* a7; /* attributes_local_part */
	T0* a8; /* attributes_value */
};

/* Struct for type SPECIAL [XM_CALLBACKS_FILTER] */
struct S558 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [XM_CALLBACKS_FILTER] */
struct S559 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type XM_CALLBACKS_NULL */
struct S560 {
	int id;
};

/* Struct for type DS_HASH_SET [XM_NAMESPACE] */
struct S561 {
	int id;
	T0* a1; /* equality_tester */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* special_item_routines */
	T0* a8; /* item_storage */
	T0* a9; /* clashes */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a14; /* count */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8] */
struct S567 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_XACE_LIBRARY_CONFIG] */
struct S568 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG] */
struct S569 {
	int id;
};

/* Struct for type XM_EIFFEL_SCANNER */
struct S570 {
	int id;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* yy_more_flag */
	T6 a13; /* yy_more_len */
	T6 a14; /* yy_end */
	T6 a15; /* yy_start */
	T6 a16; /* yy_line */
	T6 a17; /* yy_column */
	T6 a18; /* yy_position */
	T0* a19; /* input_buffer */
	T0* a20; /* yy_state_stack */
	T6 a21; /* yy_state_count */
	T0* a22; /* yy_content_area */
	T0* a23; /* yy_ec */
	T0* a24; /* yy_content */
	T0* a25; /* yy_accept */
	T6 a26; /* yy_last_accepting_state */
	T6 a27; /* yy_last_accepting_cpos */
	T0* a28; /* yy_chk */
	T0* a29; /* yy_base */
	T0* a30; /* yy_def */
	T0* a31; /* yy_meta */
	T0* a32; /* yy_nxt */
	T6 a33; /* yy_lp */
	T0* a34; /* yy_acclist */
	T6 a35; /* yy_looking_for_trail_begin */
	T6 a36; /* yy_full_match */
	T6 a37; /* yy_full_state */
	T6 a38; /* yy_full_lp */
	T1 a39; /* yy_rejected */
	T0* a40; /* yy_pushed_start_conditions */
	T0* a41; /* last_string_value */
	T0* a42; /* last_error */
	T6 a43; /* pushed_start_condition_count */
};

/* Struct for type XM_DEFAULT_POSITION */
struct S571 {
	int id;
	T6 a1; /* row */
	T6 a2; /* column */
	T0* a3; /* source_name */
	T6 a4; /* byte_index */
};

/* Struct for type DS_BILINKED_LIST [XM_POSITION] */
struct S573 {
	int id;
	T0* a1; /* first_cell */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
struct S574 {
	int id;
	T6 a1; /* count */
	T0* a2; /* first_cell */
};

/* Struct for type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S575 {
	int id;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* capacity */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* modulus */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* found_position */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* equality_tester */
	T0* a20; /* hash_function */
};

/* Struct for type XM_NULL_EXTERNAL_RESOLVER */
struct S577 {
	int id;
};

/* Struct for type XM_DTD_CALLBACKS_NULL */
struct S579 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
struct S580 {
	int id;
};

/* Struct for type XM_EIFFEL_PARSER_NAME */
struct S581 {
	int id;
	T1 a1; /* use_namespaces */
	T6 a2; /* count */
	T0* a3; /* first */
	T0* a4; /* second */
	T0* a5; /* tail */
};

/* Struct for type SPECIAL [XM_EIFFEL_PARSER_NAME] */
struct S582 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S583 {
	int id;
};

/* Struct for type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
struct S584 {
	int id;
	T6 a1; /* position */
	T0* a2; /* equality_tester */
	T6 a3; /* count */
	T6 a4; /* capacity */
	T6 a5; /* free_slot */
	T6 a6; /* last_position */
	T6 a7; /* modulus */
	T6 a8; /* slots_position */
	T6 a9; /* clashes_previous_position */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* internal_cursor */
	T0* a16; /* hash_function */
};

/* Struct for type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S585 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
struct S586 {
	int id;
};

/* Struct for type XM_DTD_EXTERNAL_ID */
struct S587 {
	int id;
	T0* a1; /* system_id */
	T0* a2; /* public_id */
};

/* Struct for type SPECIAL [XM_DTD_EXTERNAL_ID] */
struct S588 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
struct S589 {
	int id;
};

/* Struct for type XM_DTD_ELEMENT_CONTENT */
struct S590 {
	int id;
	T0* a1; /* items */
	T2 a2; /* repetition */
	T0* a3; /* name */
	T2 a4; /* type */
	T1 a5; /* is_character_data_allowed */
};

/* Struct for type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
struct S591 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S592 {
	int id;
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
struct S593 {
	int id;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S594 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
struct S595 {
	int id;
};

/* Struct for type XM_DTD_ATTRIBUTE_CONTENT */
struct S596 {
	int id;
	T0* a1; /* name */
	T0* a2; /* default_value */
	T2 a3; /* type */
	T1 a4; /* is_list_type */
	T0* a5; /* enumeration_list */
	T2 a6; /* value */
};

/* Struct for type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
struct S597 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
struct S598 {
	int id;
};

/* Struct for type DS_BILINKED_LIST [STRING_8] */
struct S599 {
	int id;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* equality_tester */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [STRING_8]] */
struct S600 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [BOOLEAN] */
struct S601 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
struct S602 {
	int id;
};

/* Struct for type XM_EIFFEL_DECLARATION */
struct S603 {
	int id;
	T0* a1; /* encoding */
	T0* a2; /* version */
	T1 a3; /* stand_alone */
};

/* Struct for type SPECIAL [XM_EIFFEL_DECLARATION] */
struct S604 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type XM_EIFFEL_ENTITY_DEF */
struct S607 {
	int id;
	T0* a1; /* literal_name */
	T0* a2; /* value */
	T0* a3; /* resolver */
	T0* a4; /* external_id */
	T0* a5; /* character_entity */
	T0* a6; /* yy_pushed_start_conditions */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_value */
	T0* a11; /* last_string_value */
	T0* a12; /* last_error */
	T1 a13; /* yy_rejected */
	T6 a14; /* yy_state_count */
	T6 a15; /* yy_full_match */
	T6 a16; /* yy_lp */
	T6 a17; /* yy_looking_for_trail_begin */
	T6 a18; /* yy_full_lp */
	T6 a19; /* yy_full_state */
	T6 a20; /* pushed_start_condition_count */
	T6 a21; /* yy_start_state */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_position */
	T6 a25; /* yy_start */
	T6 a26; /* yy_end */
	T6 a27; /* line */
	T6 a28; /* column */
	T6 a29; /* position */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T0* a34; /* yy_state_stack */
	T0* a35; /* yy_nxt */
	T0* a36; /* yy_chk */
	T0* a37; /* yy_base */
	T0* a38; /* yy_def */
	T0* a39; /* yy_ec */
	T0* a40; /* yy_meta */
	T0* a41; /* yy_accept */
	T0* a42; /* yy_content */
	T0* a43; /* yy_content_area */
	T6 a44; /* last_token */
	T0* a45; /* input_filter */
	T0* a46; /* input_stream */
	T0* a47; /* input_resolver */
	T0* a48; /* yy_acclist */
};

/* Struct for type XM_EIFFEL_SCANNER_DTD */
struct S608 {
	int id;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* decl_start_sent */
	T1 a13; /* decl_end_sent */
	T1 a14; /* yy_more_flag */
	T6 a15; /* yy_more_len */
	T6 a16; /* yy_end */
	T6 a17; /* yy_start */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_position */
	T0* a21; /* input_buffer */
	T0* a22; /* yy_state_stack */
	T6 a23; /* yy_state_count */
	T0* a24; /* yy_content_area */
	T0* a25; /* yy_ec */
	T0* a26; /* yy_content */
	T0* a27; /* yy_accept */
	T6 a28; /* yy_last_accepting_state */
	T6 a29; /* yy_last_accepting_cpos */
	T0* a30; /* yy_chk */
	T0* a31; /* yy_base */
	T0* a32; /* yy_def */
	T0* a33; /* yy_meta */
	T0* a34; /* yy_nxt */
	T6 a35; /* yy_lp */
	T0* a36; /* yy_acclist */
	T6 a37; /* yy_looking_for_trail_begin */
	T6 a38; /* yy_full_match */
	T6 a39; /* yy_full_state */
	T6 a40; /* yy_full_lp */
	T1 a41; /* yy_rejected */
	T0* a42; /* yy_pushed_start_conditions */
	T0* a43; /* last_string_value */
	T0* a44; /* last_error */
	T6 a45; /* pushed_start_condition_count */
};

/* Struct for type XM_EIFFEL_PE_ENTITY_DEF */
struct S610 {
	int id;
	T0* a1; /* resolver */
	T0* a2; /* external_id */
	T0* a3; /* literal_name */
	T0* a4; /* value */
	T0* a5; /* character_entity */
	T0* a6; /* yy_pushed_start_conditions */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_value */
	T0* a11; /* last_string_value */
	T0* a12; /* last_error */
	T1 a13; /* yy_rejected */
	T6 a14; /* yy_state_count */
	T6 a15; /* yy_full_match */
	T6 a16; /* yy_lp */
	T6 a17; /* yy_looking_for_trail_begin */
	T6 a18; /* yy_full_lp */
	T6 a19; /* yy_full_state */
	T6 a20; /* pushed_start_condition_count */
	T6 a21; /* yy_start_state */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_position */
	T6 a25; /* yy_start */
	T6 a26; /* yy_end */
	T6 a27; /* line */
	T6 a28; /* column */
	T6 a29; /* position */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T0* a34; /* yy_state_stack */
	T1 a35; /* pre_sent */
	T1 a36; /* post_sent */
	T0* a37; /* yy_nxt */
	T0* a38; /* yy_chk */
	T0* a39; /* yy_base */
	T0* a40; /* yy_def */
	T0* a41; /* yy_ec */
	T0* a42; /* yy_meta */
	T0* a43; /* yy_accept */
	T0* a44; /* yy_content */
	T0* a45; /* yy_content_area */
	T6 a46; /* last_token */
	T0* a47; /* input_filter */
	T0* a48; /* input_stream */
	T0* a49; /* input_resolver */
	T0* a50; /* yy_acclist */
};

/* Struct for type DS_HASH_SET_CURSOR [INTEGER_32] */
struct S611 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type detachable KL_EQUALITY_TESTER [INTEGER_32] */
struct S612 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
struct S613 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ECF_LIBRARY] */
struct S614 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
struct S617 {
	int id;
};

/* Struct for type SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
struct S618 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
struct S621 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
struct S622 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_TARGET] */
struct S623 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
struct S624 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [ET_LIBRARY] */
struct S625 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* special_item_routines */
	T0* a7; /* item_storage */
	T0* a8; /* clashes */
	T0* a9; /* slots */
	T6 a10; /* found_position */
	T0* a11; /* internal_cursor */
	T6 a12; /* slots_position */
	T6 a13; /* count */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [attached] TUPLE [DS_HASH_SET [ET_LIBRARY]] */
struct S626 {
	int id;
	T0* z1;
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S627 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
struct S628 {
	int id;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T0* a3; /* keys */
	T0* a4; /* deleted_marks */
	T0* a5; /* indexes_map */
	T6 a6; /* iteration_position */
	T6 a7; /* count */
	T6 a8; /* deleted_item_position */
	T6 a9; /* control */
	T0* a10; /* found_item */
	T1 a11; /* has_default */
	T6 a12; /* item_position */
	T6 a13; /* ht_lowest_deleted_position */
	T0* a14; /* ht_deleted_item */
	T0* a15; /* ht_deleted_key */
	T1 a16; /* object_comparison */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S630 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
struct S631 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
struct S633 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
struct S636 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
struct S637 {
	int id;
};

/* Struct for type SPECIAL [ET_MASTER_CLASS] */
struct S638 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
struct S639 {
	int id;
};

/* Struct for type SPECIAL [ET_CLASS_NAME] */
struct S640 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE] */
struct S641 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
struct S642 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
struct S643 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_FORMAL_PARAMETER_LIST */
struct S644 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type C_DATE */
struct S646 {
	int id;
	T6 a1; /* millisecond_now */
	T0* a2; /* internal_item */
	T1 a3; /* is_utc */
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S650 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BRACKET_SYMBOL */
struct S651 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
struct S653 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S655 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
struct S656 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
struct S657 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
struct S658 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_EXPRESSION] */
struct S660 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
struct S661 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
struct S662 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S664 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S665 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S666 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
struct S667 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S668 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_OBJECT_TEST] */
struct S670 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
struct S671 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
struct S672 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION] */
struct S673 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION] */
struct S674 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION] */
struct S675 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_EQUALITY_EXPRESSION] */
struct S676 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
struct S677 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
struct S678 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_AGENT] */
struct S679 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT] */
struct S680 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
struct S681 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_EXPRESSION_ITEM] */
struct S682 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
struct S684 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S685 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S686 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S687 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
struct S688 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S689 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
struct S690 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE] */
struct S691 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE] */
struct S693 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE] */
struct S694 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S695 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_CONSTANT] */
struct S696 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
struct S698 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
struct S699 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_INLINE_CONSTANT] */
struct S700 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
struct S702 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_DYNAMIC_FEATURE] */
struct S703 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
struct S705 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
struct S706 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
struct S707 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
struct S708 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type RX_BYTE_CODE */
struct S712 {
	int id;
	T6 a1; /* count */
	T0* a2; /* byte_code */
	T0* a3; /* character_sets */
	T6 a4; /* capacity */
	T6 a5; /* character_sets_count */
	T6 a6; /* character_sets_capacity */
};

/* Struct for type RX_CHARACTER_SET */
struct S713 {
	int id;
	T0* a1; /* set */
};

/* Struct for type RX_CASE_MAPPING */
struct S714 {
	int id;
	T0* a1; /* lower_table */
	T0* a2; /* flip_table */
};

/* Struct for type SPECIAL [RX_CHARACTER_SET] */
struct S716 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [RX_CHARACTER_SET] */
struct S717 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
struct S718 {
	int id;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ARRAY [BOOLEAN] */
struct S719 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S722 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
struct S725 {
	int id;
};

/* Struct for type SPECIAL [ET_INLINE_AGENT] */
struct S727 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
struct S728 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S729 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_PROCEDURE] */
struct S730 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S731 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S732 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
struct S733 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_QUERY] */
struct S734 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
struct S735 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
struct S736 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S737 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_FEATURE] */
struct S738 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S739 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S740 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S741 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
struct S742 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
struct S743 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE] */
struct S744 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
struct S745 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_NAMED_OBJECT_TEST */
struct S748 {
	int id;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* attached_keyword */
	T0* a4; /* declared_type */
	T0* a5; /* expression */
	T0* a6; /* as_keyword */
};

/* Struct for type SPECIAL [ET_NAMED_OBJECT_TEST] */
struct S749 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
struct S750 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
struct S751 {
	int id;
	T6 a1; /* count */
	T0* a2; /* special_routines */
	T0* a3; /* storage */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
struct S752 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ACROSS_COMPONENT] */
struct S755 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT] */
struct S756 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_ACROSS_COMPONENT] */
struct S757 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_ATTACHMENT_SCOPE] */
struct S759 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
struct S760 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
struct S761 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_PRECONDITIONS, ET_FEATURE] */
struct S762 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_PRECONDITIONS] */
struct S763 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
struct S765 {
	int id;
};

/* Struct for type DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
struct S766 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type STRING_TO_INTEGER_CONVERTOR */
struct S767 {
	int id;
	T6 a1; /* sign */
	T11 a2; /* part1 */
	T11 a3; /* part2 */
	T6 a4; /* last_state */
	T1 a5; /* internal_overflowed */
	T0* a6; /* leading_separators */
	T0* a7; /* trailing_separators */
	T1 a8; /* leading_separators_acceptable */
	T1 a9; /* trailing_separators_acceptable */
	T6 a10; /* conversion_type */
};

/* Struct for type STRING_8_SEARCHER */
struct S769 {
	int id;
	T0* a1; /* deltas */
};

/* Struct for type detachable ARRAYED_LIST [INTEGER_32] */
struct S770 {
	int id;
	T0* a1; /* area_v2 */
	T6 a2; /* index */
};

/* Struct for type ET_CLUSTERS */
struct S771 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type UC_UNICODE_ROUTINES */
struct S772 {
	int id;
};

/* Struct for type ET_XACE_FEATURE_OPTIONS */
struct S773 {
	int id;
	T0* a1; /* feature_name */
	T0* a2; /* options */
};

/* Struct for type detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
struct S774 {
	int id;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
struct S775 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ATTRIBUTE_ERROR */
struct S776 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_ELEMENT_ERROR */
struct S777 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ELEMENT_ERROR */
struct S778 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
struct S779 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
struct S780 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
struct S781 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
struct S782 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type UT_COUNTER */
struct S785 {
	int id;
	T6 a1; /* item */
};

/* Struct for type KL_AGENT_ROUTINES [ET_CLASS] */
struct S786 {
	int id;
};

/* Struct for type [attached] TUPLE [UT_COUNTER] */
struct S787 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [KL_AGENT_ROUTINES [ET_CLASS], [attached] PROCEDURE [[attached] NONE, [attached] TUPLE]] */
struct S788 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
struct S789 {
	int id;
	T0* a1; /* current_system */
};

/* Struct for type UT_TRISTATE */
struct S790 {
	int id;
	T2 a1; /* value */
};

/* Struct for type KL_AGENT_ROUTINES [ANY] */
struct S791 {
	int id;
};

/* Struct for type [attached] TUPLE [UT_TRISTATE] */
struct S792 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [KL_AGENT_ROUTINES [ANY], [attached] PROCEDURE [[attached] NONE, [attached] TUPLE]] */
struct S793 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_MASTER_CLASS]] */
struct S794 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	T1 (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] PREDICATE [[attached] NONE, [attached] TUPLE] */
struct S795 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	T1 (*f)(GE_context*, T0*);
};

/* Struct for type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]], FUNCTION [ANY, TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
struct S797 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]], FUNCTION [ANY, TUPLE [ET_MASTER_CLASS], BOOLEAN], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
struct S798 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_ECF_CLUSTER */
struct S799 {
	int id;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T1 a5; /* is_override */
	T1 a6; /* is_recursive */
	T1 a7; /* is_read_only */
	T0* a8; /* ecf_subclusters */
	T0* a9; /* ecf_file_rules */
	T0* a10; /* condition */
	T1 a11; /* overridden_constraint_enabled */
	T1 a12; /* scm_mapping_constraint_enabled */
	T0* a13; /* subclusters */
	T1 a14; /* use_obsolete_syntax */
	T0* a15; /* scm_read_mapping */
	T0* a16; /* scm_write_mapping */
	T1 a17; /* is_implicit */
	T0* a18; /* parent */
	T0* a19; /* provider_constraint */
	T0* a20; /* dependant_constraint */
	T1 a21; /* is_preparsed */
	T1 a22; /* is_abstract */
	T0* a23; /* file_rules */
	T0* a24; /* cached_absolute_pathname */
};

/* Struct for type ET_ECF_CLUSTERS */
struct S800 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_ECF_ADAPTED_LIBRARIES */
struct S801 {
	int id;
	T0* a1; /* libraries */
};

/* Struct for type ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
struct S802 {
	int id;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_ECF_FILE_RULE */
struct S803 {
	int id;
	T0* a1; /* exclude */
	T0* a2; /* include */
	T0* a3; /* exclude_regexp */
	T0* a4; /* include_regexp */
	T0* a5; /* condition */
};

/* Struct for type ET_ECF_FILE_RULES */
struct S804 {
	int id;
	T0* a1; /* file_rules */
};

/* Struct for type ET_ECF_EXTERNAL_INCLUDE */
struct S805 {
	int id;
	T0* a1; /* pathname */
	T0* a2; /* condition */
};

/* Struct for type ET_ECF_EXTERNAL_INCLUDES */
struct S806 {
	int id;
	T0* a1; /* external_includes */
};

/* Struct for type ET_ECF_EXTERNAL_OBJECT */
struct S807 {
	int id;
	T0* a1; /* pathname */
	T0* a2; /* condition */
};

/* Struct for type ET_ECF_EXTERNAL_OBJECTS */
struct S808 {
	int id;
	T0* a1; /* external_objects */
};

/* Struct for type ET_ECF_EXTERNAL_LIBRARY */
struct S809 {
	int id;
	T0* a1; /* pathname */
	T0* a2; /* condition */
};

/* Struct for type ET_ECF_EXTERNAL_LIBRARIES */
struct S810 {
	int id;
	T0* a1; /* external_libraries */
};

/* Struct for type ET_ECF_SETTINGS */
struct S812 {
	int id;
	T0* a1; /* primary_settings */
	T0* a2; /* secondary_settings */
};

/* Struct for type ET_ECF_OPTIONS */
struct S813 {
	int id;
	T0* a1; /* primary_options */
	T0* a2; /* secondary_options */
};

/* Struct for type ET_ECF_CONDITIONS */
struct S814 {
	int id;
	T0* a1; /* conditions */
	T1 a2; /* is_ored */
};

/* Struct for type ET_ECF_ROOT_CLASS */
struct S815 {
	int id;
	T0* a1; /* class_name */
	T0* a2; /* creation_procedure_name */
};

/* Struct for type ET_ECF_ROOT_ALL_CLASSES */
struct S816 {
	int id;
};

/* Struct for type ET_ECF_PLATFORM_CONDITION */
struct S818 {
	int id;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_BUILD_CONDITION */
struct S819 {
	int id;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_MULTITHREADED_CONDITION */
struct S820 {
	int id;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_CONCURRENCY_CONDITION */
struct S821 {
	int id;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_DOTNET_CONDITION */
struct S822 {
	int id;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_DYNAMIC_RUNTIME_CONDITION */
struct S823 {
	int id;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_CUSTOM_CONDITION */
struct S824 {
	int id;
	T0* a1; /* name */
	T0* a2; /* value */
	T1 a3; /* is_excluded */
};

/* Struct for type ET_ECF_COMPILER_VERSION_CONDITION */
struct S826 {
	int id;
	T0* a1; /* min_value */
	T0* a2; /* max_value */
};

/* Struct for type [attached] TUPLE [ET_ECF_SYSTEM] */
struct S827 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_LACE_SYSTEM] */
struct S828 {
	int id;
	T0* z1;
};

/* Struct for type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
struct S831 {
	int id;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
	T0* a5; /* agent_type */
	T1 a6; /* is_dynamic_types_readonly */
};

/* Struct for type ET_REGULAR_MANIFEST_STRING */
struct S832 {
	int id;
	T0* a1; /* value */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
	T0* a4; /* cast_type */
	T0* a5; /* type */
};

/* Struct for type ET_INFIX_FREE_NAME */
struct S833 {
	int id;
	T0* a1; /* infix_keyword */
	T0* a2; /* operator_name */
	T2 a3; /* code */
	T6 a4; /* hash_code */
	T6 a5; /* seed */
};

/* Struct for type ET_CREATOR_LIST */
struct S834 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type EXCEPTIONS */
struct S836 {
	int id;
};

/* Struct for type XM_LINKED_LIST [XM_DOCUMENT_NODE] */
struct S837 {
	int id;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type XM_LINKED_LIST [XM_ELEMENT_NODE] */
struct S839 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S843 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S844 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type DS_PAIR [XM_POSITION, XM_NODE] */
struct S845 {
	int id;
	T0* a1; /* first */
	T0* a2; /* second */
};

/* Struct for type UC_UTF8_ROUTINES */
struct S846 {
	int id;
};

/* Struct for type UC_UTF8_STRING */
struct S847 {
	int id;
	T6 a1; /* count */
	T0* a2; /* area */
	T6 a3; /* byte_count */
	T6 a4; /* internal_hash_code */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
};

/* Struct for type XM_EIFFEL_INPUT_STREAM */
struct S848 {
	int id;
	T0* a1; /* last_string */
	T6 a2; /* encoding */
	T0* a3; /* utf_queue */
	T0* a4; /* impl */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
struct S852 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type KL_CHARACTER_BUFFER */
struct S855 {
	int id;
	T0* a1; /* as_special */
	T0* a2; /* area */
};

/* Struct for type [attached] TUPLE [ET_LACE_CLUSTER] */
struct S856 {
	int id;
	T0* z1;
};

/* Struct for type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
struct S857 {
	int id;
	T0* a1; /* current_cluster */
	T0* a2; /* pathname_buffer */
	T0* a3; /* group_names */
	T0* a4; /* group_pathnames */
};

/* Struct for type SPECIAL [ET_QUERY] */
struct S858 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALIAS_NAME */
struct S859 {
	int id;
	T0* a1; /* alias_keyword */
	T0* a2; /* alias_string */
	T2 a3; /* code */
	T6 a4; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUERY] */
struct S860 {
	int id;
};

/* Struct for type SPECIAL [ET_PROCEDURE] */
struct S861 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
struct S862 {
	int id;
};

/* Struct for type CONSOLE */
struct S866 {
	int id;
	T14 a1; /* file_pointer */
	T6 a2; /* mode */
	T0* a3; /* last_string */
	T0* a4; /* internal_name */
	T0* a5; /* internal_detachable_name_pointer */
};

/* Struct for type ET_LIKE_N */
struct S867 {
	int id;
	T6 a1; /* index */
	T0* a2; /* previous */
	T0* a3; /* type_mark */
	T0* a4; /* like_keyword */
};

/* Struct for type SPECIAL [ET_BASE_TYPE] */
struct S868 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
struct S869 {
	int id;
};

/* Struct for type SPECIAL [IMMUTABLE_STRING_32] */
struct S870 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [IMMUTABLE_STRING_32] */
struct S871 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
	T1 a4; /* object_comparison */
};

/* Struct for type detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
struct S872 {
	int id;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
struct S873 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] TUPLE [ET_XACE_CLUSTER] */
struct S874 {
	int id;
	T0* z1;
};

/* Struct for type SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
struct S875 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
struct S876 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
struct S877 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
struct S879 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type detachable DS_HASH_SET [ET_NAMED_CLASS] */
struct S881 {
	int id;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_PROCEDURE] */
struct S882 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_QUERY] */
struct S883 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type ET_SUPPLIER_BUILDER */
struct S884 {
	int id;
	T0* a1; /* supplier_classes */
	T0* a2; /* current_class */
};

/* Struct for type ET_POSTCONDITIONS */
struct S886 {
	int id;
	T1 a1; /* validity_checked */
	T1 a2; /* has_validity_error */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* ensure_keyword */
	T0* a6; /* then_keyword */
};

/* Struct for type ET_INVARIANTS */
struct S887 {
	int id;
	T0* a1; /* implementation_class */
	T1 a2; /* validity_checked */
	T1 a3; /* has_validity_error */
	T6 a4; /* count */
	T0* a5; /* storage */
	T0* a6; /* invariant_keyword */
	T0* a7; /* object_tests */
	T0* a8; /* across_components */
};

/* Struct for type KL_STDIN_FILE */
struct S888 {
	int id;
	T1 a1; /* end_of_file */
	T2 a2; /* last_character */
	T0* a3; /* internal_name */
	T0* a4; /* character_buffer */
	T14 a5; /* file_pointer */
	T0* a6; /* last_string */
	T6 a7; /* mode */
	T0* a8; /* internal_detachable_name_pointer */
};

/* Struct for type DS_ARRAYED_STACK [INTEGER_32] */
struct S890 {
	int id;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S891 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
struct S892 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_KEYWORD] */
struct S893 {
	int id;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_SYMBOL] */
struct S894 {
	int id;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
struct S895 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
struct S896 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
struct S897 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
struct S898 {
	int id;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type KL_STRING_INPUT_STREAM */
struct S899 {
	int id;
	T1 a1; /* end_of_input */
	T2 a2; /* last_character */
	T0* a3; /* last_string */
	T0* a4; /* string */
	T6 a5; /* location */
};

/* Struct for type ET_TEXT_GROUP */
struct S900 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
struct S901 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_KEYWORD] */
struct S902 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
struct S903 {
	int id;
};

/* Struct for type ET_AGENT_KEYWORD */
struct S904 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
};

/* Struct for type SPECIAL [detachable ET_AGENT_KEYWORD] */
struct S905 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
struct S906 {
	int id;
};

/* Struct for type ET_PRECURSOR_KEYWORD */
struct S907 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
struct S908 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
struct S909 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_SYMBOL] */
struct S910 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
struct S911 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_POSITION] */
struct S912 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BIT_CONSTANT] */
struct S913 {
	int id;
};

/* Struct for type ET_BIT_CONSTANT */
struct S914 {
	int id;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T0* a3; /* literal */
};

/* Struct for type SPECIAL [detachable ET_BIT_CONSTANT] */
struct S915 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
struct S916 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
struct S918 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
struct S919 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_BREAK] */
struct S921 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
struct S922 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CHARACTER_CONSTANT] */
struct S924 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
struct S925 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CURRENT] */
struct S926 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
struct S927 {
	int id;
};

/* Struct for type ET_FREE_OPERATOR */
struct S928 {
	int id;
	T2 a1; /* code */
	T6 a2; /* hash_code */
	T6 a3; /* compressed_position */
	T0* a4; /* free_operator_name */
	T6 a5; /* seed */
};

/* Struct for type SPECIAL [detachable ET_FREE_OPERATOR] */
struct S929 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
struct S930 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_INTEGER_CONSTANT] */
struct S932 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
struct S933 {
	int id;
};

/* Struct for type ET_KEYWORD_OPERATOR */
struct S934 {
	int id;
	T6 a1; /* compressed_position */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_KEYWORD_OPERATOR] */
struct S935 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
struct S936 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING] */
struct S937 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
struct S938 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_REAL_CONSTANT] */
struct S940 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
struct S941 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_RESULT] */
struct S942 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
struct S943 {
	int id;
};

/* Struct for type ET_RETRY_INSTRUCTION */
struct S944 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
};

/* Struct for type SPECIAL [detachable ET_RETRY_INSTRUCTION] */
struct S945 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
struct S946 {
	int id;
};

/* Struct for type ET_SYMBOL_OPERATOR */
struct S947 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* seed */
};

/* Struct for type SPECIAL [detachable ET_SYMBOL_OPERATOR] */
struct S948 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_VOID] */
struct S949 {
	int id;
};

/* Struct for type ET_VOID */
struct S950 {
	int id;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type SPECIAL [detachable ET_VOID] */
struct S951 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
struct S952 {
	int id;
};

/* Struct for type ET_SEMICOLON_SYMBOL */
struct S953 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
struct S954 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
struct S955 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_BRACKET_SYMBOL] */
struct S956 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
struct S957 {
	int id;
};

/* Struct for type ET_QUESTION_MARK_SYMBOL */
struct S958 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
};

/* Struct for type SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
struct S959 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
struct S960 {
	int id;
};

/* Struct for type ET_ACROSS_EXPRESSION */
struct S961 {
	int id;
	T6 a1; /* index */
	T0* a2; /* cursor_name */
	T0* a3; /* across_keyword */
	T0* a4; /* iterable_expression */
	T0* a5; /* as_keyword */
	T0* a6; /* until_conditional */
	T0* a7; /* iteration_conditional */
	T0* a8; /* end_keyword */
	T1 a9; /* is_all */
	T0* a10; /* invariant_part */
	T0* a11; /* variant_part */
	T0* a12; /* new_cursor_expression */
	T0* a13; /* cursor_after_expression */
	T0* a14; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_ACROSS_EXPRESSION] */
struct S962 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
struct S963 {
	int id;
};

/* Struct for type ET_ACROSS_INSTRUCTION */
struct S964 {
	int id;
	T0* a1; /* cursor_name */
	T0* a2; /* across_keyword */
	T0* a3; /* iterable_expression */
	T0* a4; /* as_keyword */
	T0* a5; /* from_compound */
	T0* a6; /* until_conditional */
	T0* a7; /* loop_compound */
	T0* a8; /* end_keyword */
	T0* a9; /* invariant_part */
	T0* a10; /* variant_part */
	T0* a11; /* new_cursor_expression */
	T0* a12; /* cursor_after_expression */
	T0* a13; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
struct S965 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S966 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S967 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S968 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S969 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S970 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S971 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S972 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S974 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S975 {
	int id;
};

/* Struct for type ET_AGENT_ARGUMENT_OPERAND_LIST */
struct S976 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S977 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
struct S978 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_AGENT_TARGET] */
struct S979 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
struct S980 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_ALIAS_NAME] */
struct S981 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
struct S982 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_ASSIGNER] */
struct S984 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_ARGUMENT_LIST] */
struct S985 {
	int id;
};

/* Struct for type ET_BRACKET_ARGUMENT_LIST */
struct S986 {
	int id;
	T0* a1; /* left_symbol */
	T0* a2; /* right_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_BRACKET_ARGUMENT_LIST] */
struct S987 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
struct S988 {
	int id;
};

/* Struct for type ET_BRACKET_EXPRESSION */
struct S989 {
	int id;
	T6 a1; /* index */
	T0* a2; /* target */
	T0* a3; /* name */
	T0* a4; /* arguments */
};

/* Struct for type SPECIAL [detachable ET_BRACKET_EXPRESSION] */
struct S990 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
struct S991 {
	int id;
};

/* Struct for type ET_CALL_AGENT */
struct S992 {
	int id;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* target */
	T0* a4; /* qualified_name */
	T0* a5; /* arguments */
	T0* a6; /* implicit_result */
};

/* Struct for type SPECIAL [detachable ET_CALL_AGENT] */
struct S993 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
struct S994 {
	int id;
};

/* Struct for type ET_CHECK_INSTRUCTION */
struct S995 {
	int id;
	T0* a1; /* check_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_CHECK_INSTRUCTION] */
struct S996 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
struct S997 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CHOICE] */
struct S999 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
struct S1000 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CHOICE_CONSTANT] */
struct S1002 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
struct S1003 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CHOICE_ITEM] */
struct S1005 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
struct S1006 {
	int id;
};

/* Struct for type ET_CHOICE_LIST */
struct S1007 {
	int id;
	T0* a1; /* when_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CHOICE_LIST] */
struct S1008 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
struct S1009 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CLASS] */
struct S1010 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
struct S1011 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CLIENT_ITEM] */
struct S1012 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
struct S1013 {
	int id;
};

/* Struct for type ET_CLIENTS */
struct S1014 {
	int id;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CLIENTS] */
struct S1015 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
struct S1016 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_COMPOUND] */
struct S1017 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
struct S1018 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CONDITIONAL] */
struct S1020 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1021 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1023 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1024 {
	int id;
};

/* Struct for type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
struct S1025 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1026 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
struct S1027 {
	int id;
};

/* Struct for type ET_CONSTRAINT_CREATOR */
struct S1028 {
	int id;
	T0* a1; /* create_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
struct S1029 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
struct S1030 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_TYPE] */
struct S1032 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
struct S1033 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE] */
struct S1035 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
struct S1036 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
struct S1038 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
struct S1039 {
	int id;
};

/* Struct for type ET_CONVERT_FEATURE_LIST */
struct S1040 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* convert_keyword */
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
struct S1041 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
struct S1042 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CREATE_EXPRESSION] */
struct S1043 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
struct S1044 {
	int id;
};

/* Struct for type ET_CREATOR */
struct S1045 {
	int id;
	T0* a1; /* creation_keyword */
	T0* a2; /* clients */
	T0* a3; /* storage */
	T6 a4; /* count */
};

/* Struct for type SPECIAL [detachable ET_CREATOR] */
struct S1046 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
struct S1047 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_CREATOR_LIST] */
struct S1048 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
struct S1049 {
	int id;
};

/* Struct for type ET_DEBUG_INSTRUCTION */
struct S1050 {
	int id;
	T0* a1; /* keys */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
struct S1051 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
struct S1052 {
	int id;
};

/* Struct for type ET_ELSEIF_PART */
struct S1053 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_PART] */
struct S1054 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
struct S1055 {
	int id;
};

/* Struct for type ET_ELSEIF_PART_LIST */
struct S1056 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_PART_LIST] */
struct S1057 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
struct S1058 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_EXPORT] */
struct S1060 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
struct S1061 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_EXPORT_LIST] */
struct S1062 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
struct S1063 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
struct S1064 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
struct S1065 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_EXTERNAL_ALIAS] */
struct S1067 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
struct S1068 {
	int id;
};

/* Struct for type ET_FEATURE_CLAUSE */
struct S1069 {
	int id;
	T0* a1; /* feature_keyword */
	T0* a2; /* clients */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_CLAUSE] */
struct S1070 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
struct S1071 {
	int id;
};

/* Struct for type ET_FEATURE_CLAUSE_LIST */
struct S1072 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
struct S1073 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
struct S1074 {
	int id;
};

/* Struct for type ET_FEATURE_EXPORT */
struct S1075 {
	int id;
	T0* a1; /* clients_clause */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_EXPORT] */
struct S1076 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
struct S1077 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_FEATURE_NAME] */
struct S1078 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
struct S1079 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
struct S1081 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
struct S1082 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT] */
struct S1083 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S1084 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S1086 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S1087 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S1088 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
struct S1089 {
	int id;
};

/* Struct for type ET_FORMAL_PARAMETER */
struct S1090 {
	int id;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* implementation_class */
	T0* a4; /* type_mark */
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER] */
struct S1091 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S1092 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S1094 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
struct S1095 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
struct S1096 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
struct S1097 {
	int id;
};

/* Struct for type ET_IF_INSTRUCTION */
struct S1098 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
	T0* a3; /* end_keyword */
	T0* a4; /* elseif_parts */
	T0* a5; /* else_compound */
};

/* Struct for type SPECIAL [detachable ET_IF_INSTRUCTION] */
struct S1099 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
struct S1100 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_INDEXING_LIST] */
struct S1102 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
struct S1103 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_INDEXING_ITEM] */
struct S1105 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
struct S1106 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_INDEXING_TERM] */
struct S1108 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
struct S1109 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
struct S1111 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
struct S1112 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_INDEXING_TERM_LIST] */
struct S1114 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
struct S1115 {
	int id;
};

/* Struct for type ET_INSPECT_INSTRUCTION */
struct S1116 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* when_parts */
	T0* a3; /* end_keyword */
	T0* a4; /* else_compound */
};

/* Struct for type SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
struct S1117 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
struct S1118 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_INSTRUCTION] */
struct S1120 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
struct S1121 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_INVARIANTS] */
struct S1122 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1123 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1124 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
struct S1125 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_LIKE_TYPE] */
struct S1127 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
struct S1128 {
	int id;
};

/* Struct for type ET_LOCAL_VARIABLE */
struct S1129 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE] */
struct S1130 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S1131 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S1133 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
struct S1134 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
struct S1135 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
struct S1136 {
	int id;
};

/* Struct for type ET_LOOP_INVARIANTS */
struct S1137 {
	int id;
	T0* a1; /* invariant_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_LOOP_INVARIANTS] */
struct S1138 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
struct S1139 {
	int id;
};

/* Struct for type ET_MANIFEST_ARRAY */
struct S1140 {
	int id;
	T6 a1; /* index */
	T0* a2; /* left_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* right_symbol */
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_ARRAY] */
struct S1141 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
struct S1142 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
struct S1144 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
struct S1145 {
	int id;
};

/* Struct for type ET_MANIFEST_STRING_LIST */
struct S1146 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
struct S1147 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
struct S1148 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_TUPLE] */
struct S1149 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
struct S1150 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_OBSOLETE] */
struct S1152 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S1153 {
	int id;
};

/* Struct for type ET_PARENTHESIZED_EXPRESSION */
struct S1154 {
	int id;
	T6 a1; /* index */
	T0* a2; /* left_parenthesis */
	T0* a3; /* expression */
	T0* a4; /* right_parenthesis */
};

/* Struct for type SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S1155 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
struct S1156 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_PARENT] */
struct S1157 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
struct S1158 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_PARENT_ITEM] */
struct S1159 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
struct S1160 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_PARENT_LIST] */
struct S1161 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
struct S1162 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_POSTCONDITIONS] */
struct S1163 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S1164 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S1166 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
struct S1167 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_RENAME_ITEM] */
struct S1169 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
struct S1170 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_RENAME_LIST] */
struct S1171 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
struct S1172 {
	int id;
};

/* Struct for type ET_STATIC_CALL_EXPRESSION */
struct S1173 {
	int id;
	T6 a1; /* index */
	T0* a2; /* feature_keyword */
	T0* a3; /* static_type */
	T0* a4; /* qualified_name */
	T0* a5; /* arguments */
	T0* a6; /* parenthesis_call */
};

/* Struct for type SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
struct S1174 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
struct S1175 {
	int id;
};

/* Struct for type ET_STRIP_EXPRESSION */
struct S1176 {
	int id;
	T6 a1; /* index */
	T0* a2; /* strip_keyword */
	T0* a3; /* left_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
	T0* a6; /* right_parenthesis */
};

/* Struct for type SPECIAL [detachable ET_STRIP_EXPRESSION] */
struct S1177 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
struct S1178 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_TYPE_ITEM] */
struct S1180 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
struct S1181 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_TYPE_LIST] */
struct S1183 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
struct S1184 {
	int id;
};

/* Struct for type ET_VARIANT */
struct S1185 {
	int id;
	T0* a1; /* variant_keyword */
	T0* a2; /* tag */
	T0* a3; /* expression */
};

/* Struct for type SPECIAL [detachable ET_VARIANT] */
struct S1186 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
struct S1187 {
	int id;
};

/* Struct for type ET_WHEN_PART */
struct S1188 {
	int id;
	T0* a1; /* choices */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_WHEN_PART] */
struct S1189 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
struct S1190 {
	int id;
};

/* Struct for type ET_WHEN_PART_LIST */
struct S1191 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_WHEN_PART_LIST] */
struct S1192 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
struct S1193 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_WRITABLE] */
struct S1194 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_OBJECT_TEST_LIST */
struct S1197 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_ACROSS_COMPONENT_LIST */
struct S1198 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_C3_CHARACTER_CONSTANT */
struct S1199 {
	int id;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T6 a3; /* compressed_position */
	T0* a4; /* literal */
	T3 a5; /* value */
	T0* a6; /* type */
};

/* Struct for type ET_VERBATIM_STRING */
struct S1200 {
	int id;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* marker */
	T0* a7; /* open_white_characters */
	T0* a8; /* close_white_characters */
	T1 a9; /* is_left_aligned */
	T0* a10; /* type */
};

/* Struct for type ET_SPECIAL_MANIFEST_STRING */
struct S1201 {
	int id;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type ET_REGULAR_INTEGER_CONSTANT */
struct S1202 {
	int id;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_overflow */
	T11 a7; /* value */
	T0* a8; /* type */
};

/* Struct for type ET_UNDERSCORED_INTEGER_CONSTANT */
struct S1203 {
	int id;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_overflow */
	T11 a7; /* value */
	T0* a8; /* type */
};

/* Struct for type ET_HEXADECIMAL_INTEGER_CONSTANT */
struct S1204 {
	int id;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_overflow */
	T11 a7; /* value */
	T0* a8; /* type */
};

/* Struct for type ET_OCTAL_INTEGER_CONSTANT */
struct S1205 {
	int id;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_overflow */
	T11 a7; /* value */
	T0* a8; /* type */
};

/* Struct for type ET_BINARY_INTEGER_CONSTANT */
struct S1206 {
	int id;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_overflow */
	T11 a7; /* value */
	T0* a8; /* type */
};

/* Struct for type ET_REGULAR_REAL_CONSTANT */
struct S1207 {
	int id;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type ET_UNDERSCORED_REAL_CONSTANT */
struct S1208 {
	int id;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type ET_TRUE_CONSTANT */
struct S1210 {
	int id;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type ET_FALSE_CONSTANT */
struct S1211 {
	int id;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type ET_C1_CHARACTER_CONSTANT */
struct S1212 {
	int id;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T6 a3; /* compressed_position */
	T3 a4; /* value */
	T0* a5; /* type */
};

/* Struct for type ET_C2_CHARACTER_CONSTANT */
struct S1213 {
	int id;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T6 a3; /* compressed_position */
	T3 a4; /* value */
	T0* a5; /* type */
};

/* Struct for type ET_CUSTOM_ATTRIBUTE */
struct S1217 {
	int id;
	T0* a1; /* creation_expression */
	T0* a2; /* settings */
	T0* a3; /* end_keyword */
};

/* Struct for type ET_CONSTRAINED_FORMAL_PARAMETER */
struct S1218 {
	int id;
	T0* a1; /* arrow_symbol */
	T0* a2; /* constraint */
	T0* a3; /* creation_procedures */
	T0* a4; /* type_mark */
	T6 a5; /* index */
	T0* a6; /* name */
	T0* a7; /* implementation_class */
	T0* a8; /* constraint_base_type */
};

/* Struct for type ET_CONSTRAINT_NAMED_TYPE */
struct S1219 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
};

/* Struct for type ET_ATTACHMENT_SEPARATE_KEYWORDS */
struct S1220 {
	int id;
	T0* a1; /* attachment_keyword */
	T0* a2; /* separateness_keyword */
};

/* Struct for type ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD */
struct S1221 {
	int id;
	T0* a1; /* attachment_symbol */
	T0* a2; /* separateness_keyword */
};

/* Struct for type ET_BIT_N */
struct S1222 {
	int id;
	T0* a1; /* constant */
	T6 a2; /* size */
	T0* a3; /* named_base_class */
	T0* a4; /* bit_keyword */
};

/* Struct for type ET_BIT_FEATURE */
struct S1223 {
	int id;
	T6 a1; /* size */
	T0* a2; /* named_base_class */
	T0* a3; /* bit_keyword */
	T0* a4; /* name */
	T0* a5; /* constant */
};

/* Struct for type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
struct S1224 {
	int id;
	T0* a1; /* label */
	T0* a2; /* colon */
	T0* a3; /* type */
};

/* Struct for type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
struct S1225 {
	int id;
	T0* a1; /* label */
	T0* a2; /* comma */
	T0* a3; /* type */
};

/* Struct for type ET_RENAME */
struct S1226 {
	int id;
	T0* a1; /* old_name */
	T0* a2; /* as_keyword */
	T0* a3; /* new_name */
};

/* Struct for type ET_ALL_EXPORT */
struct S1227 {
	int id;
	T0* a1; /* clients_clause */
	T0* a2; /* all_keyword */
};

/* Struct for type ET_CONVERT_FUNCTION */
struct S1229 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* colon */
};

/* Struct for type ET_CONVERT_PROCEDURE */
struct S1230 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type ET_DO_FUNCTION */
struct S1232 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T0* a6; /* preconditions */
	T6 a7; /* hash_code */
	T0* a8; /* arguments */
	T0* a9; /* postconditions */
	T0* a10; /* assigner */
	T0* a11; /* declared_type */
	T0* a12; /* obsolete_message */
	T0* a13; /* locals */
	T0* a14; /* compound */
	T0* a15; /* rescue_clause */
	T0* a16; /* clients */
	T0* a17; /* is_keyword */
	T0* a18; /* end_keyword */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* first_indexing */
	T0* a22; /* object_tests */
	T0* a23; /* across_components */
	T0* a24; /* other_seeds */
	T0* a25; /* extended_name */
	T0* a26; /* frozen_keyword */
	T1 a27; /* validity_checked */
	T1 a28; /* has_validity_error */
	T6 a29; /* id */
	T6 a30; /* version */
	T0* a31; /* synonym */
};

/* Struct for type ET_ONCE_FUNCTION */
struct S1233 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T0* a6; /* preconditions */
	T6 a7; /* hash_code */
	T0* a8; /* arguments */
	T0* a9; /* postconditions */
	T0* a10; /* assigner */
	T0* a11; /* declared_type */
	T0* a12; /* obsolete_message */
	T0* a13; /* locals */
	T0* a14; /* compound */
	T0* a15; /* rescue_clause */
	T0* a16; /* clients */
	T0* a17; /* is_keyword */
	T0* a18; /* end_keyword */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* first_indexing */
	T0* a22; /* object_tests */
	T0* a23; /* across_components */
	T0* a24; /* other_seeds */
	T0* a25; /* extended_name */
	T0* a26; /* frozen_keyword */
	T1 a27; /* validity_checked */
	T1 a28; /* has_validity_error */
	T6 a29; /* id */
	T6 a30; /* version */
	T0* a31; /* keys */
	T0* a32; /* synonym */
};

/* Struct for type ET_DEFERRED_FUNCTION */
struct S1234 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T0* a6; /* preconditions */
	T6 a7; /* hash_code */
	T0* a8; /* arguments */
	T0* a9; /* postconditions */
	T0* a10; /* assigner */
	T0* a11; /* declared_type */
	T0* a12; /* obsolete_message */
	T0* a13; /* clients */
	T0* a14; /* is_keyword */
	T0* a15; /* deferred_keyword */
	T0* a16; /* end_keyword */
	T0* a17; /* semicolon */
	T0* a18; /* feature_clause */
	T0* a19; /* first_indexing */
	T0* a20; /* object_tests */
	T0* a21; /* across_components */
	T0* a22; /* frozen_keyword */
	T0* a23; /* other_seeds */
	T0* a24; /* extended_name */
	T1 a25; /* validity_checked */
	T1 a26; /* has_validity_error */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* synonym */
};

/* Struct for type ET_ONCE_PROCEDURE */
struct S1236 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* compound */
	T0* a4; /* implementation_feature */
	T0* a5; /* first_precursor */
	T0* a6; /* other_precursors */
	T0* a7; /* preconditions */
	T6 a8; /* hash_code */
	T0* a9; /* arguments */
	T0* a10; /* postconditions */
	T0* a11; /* obsolete_message */
	T0* a12; /* locals */
	T0* a13; /* rescue_clause */
	T0* a14; /* clients */
	T0* a15; /* is_keyword */
	T0* a16; /* end_keyword */
	T0* a17; /* semicolon */
	T0* a18; /* feature_clause */
	T0* a19; /* first_indexing */
	T0* a20; /* object_tests */
	T0* a21; /* across_components */
	T0* a22; /* extended_name */
	T0* a23; /* other_seeds */
	T0* a24; /* frozen_keyword */
	T1 a25; /* validity_checked */
	T1 a26; /* has_validity_error */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* keys */
	T0* a30; /* synonym */
};

/* Struct for type ET_EXTERNAL_PROCEDURE */
struct S1237 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T0* a6; /* preconditions */
	T6 a7; /* hash_code */
	T6 a8; /* builtin_code */
	T0* a9; /* arguments */
	T0* a10; /* postconditions */
	T0* a11; /* language */
	T0* a12; /* obsolete_message */
	T0* a13; /* alias_clause */
	T0* a14; /* clients */
	T0* a15; /* is_keyword */
	T0* a16; /* end_keyword */
	T0* a17; /* semicolon */
	T0* a18; /* feature_clause */
	T0* a19; /* first_indexing */
	T0* a20; /* object_tests */
	T0* a21; /* across_components */
	T0* a22; /* other_seeds */
	T0* a23; /* extended_name */
	T0* a24; /* frozen_keyword */
	T1 a25; /* validity_checked */
	T1 a26; /* has_validity_error */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* synonym */
};

/* Struct for type ET_PREFIX_NAME */
struct S1238 {
	int id;
	T6 a1; /* seed */
	T2 a2; /* code */
	T0* a3; /* prefix_keyword */
	T0* a4; /* operator_name */
};

/* Struct for type ET_PREFIX_FREE_NAME */
struct S1239 {
	int id;
	T6 a1; /* hash_code */
	T6 a2; /* seed */
	T0* a3; /* prefix_keyword */
	T0* a4; /* operator_name */
	T2 a5; /* code */
};

/* Struct for type ET_INFIX_NAME */
struct S1240 {
	int id;
	T6 a1; /* seed */
	T2 a2; /* code */
	T0* a3; /* infix_keyword */
	T0* a4; /* operator_name */
};

/* Struct for type ET_ALIASED_FEATURE_NAME */
struct S1241 {
	int id;
	T0* a1; /* feature_name */
	T0* a2; /* alias_name */
};

/* Struct for type ET_ALIAS_FREE_NAME */
struct S1242 {
	int id;
	T6 a1; /* hash_code */
	T2 a2; /* code */
	T0* a3; /* alias_string */
	T0* a4; /* alias_keyword */
	T6 a5; /* seed */
};

/* Struct for type ET_LABELED_ACTUAL_PARAMETER */
struct S1245 {
	int id;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_LIKE_FEATURE */
struct S1247 {
	int id;
	T6 a1; /* seed */
	T0* a2; /* type_mark */
	T0* a3; /* like_keyword */
	T0* a4; /* name */
	T1 a5; /* is_procedure */
};

/* Struct for type ET_QUALIFIED_LIKE_BRACED_TYPE */
struct S1248 {
	int id;
	T0* a1; /* target_type */
	T0* a2; /* type_mark */
	T0* a3; /* like_keyword */
	T0* a4; /* qualified_name */
	T0* a5; /* left_brace */
	T0* a6; /* right_brace */
};

/* Struct for type ET_QUALIFIED_LIKE_TYPE */
struct S1249 {
	int id;
	T0* a1; /* target_type */
	T0* a2; /* type_mark */
	T0* a3; /* qualified_name */
};

/* Struct for type ET_ASSIGNER_INSTRUCTION */
struct S1250 {
	int id;
	T0* a1; /* call */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T0* a4; /* name */
};

/* Struct for type ET_ASSIGNMENT */
struct S1251 {
	int id;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
};

/* Struct for type ET_ASSIGNMENT_ATTEMPT */
struct S1252 {
	int id;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_attempt_symbol */
};

/* Struct for type ET_LOOP_INSTRUCTION */
struct S1253 {
	int id;
	T0* a1; /* from_compound */
	T0* a2; /* until_conditional */
	T0* a3; /* loop_compound */
	T0* a4; /* end_keyword */
	T0* a5; /* invariant_part */
	T0* a6; /* variant_part */
	T1 a7; /* has_old_variant_syntax */
};

/* Struct for type ET_NULL_INSTRUCTION */
struct S1254 {
	int id;
};

/* Struct for type ET_BANG_INSTRUCTION */
struct S1255 {
	int id;
	T0* a1; /* type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* left_bang */
	T0* a5; /* right_bang */
};

/* Struct for type ET_CREATE_INSTRUCTION */
struct S1256 {
	int id;
	T0* a1; /* creation_type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* create_keyword */
};

/* Struct for type ET_CHOICE_RANGE */
struct S1257 {
	int id;
	T0* a1; /* lower */
	T0* a2; /* upper */
	T0* a3; /* dotdot */
};

/* Struct for type ET_PRECURSOR_INSTRUCTION */
struct S1258 {
	int id;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a4; /* is_parent_prefixed */
	T0* a5; /* parenthesis_call */
	T0* a6; /* parent_type */
};

/* Struct for type ET_STATIC_CALL_INSTRUCTION */
struct S1260 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* parenthesis_call */
};

/* Struct for type ET_PRECURSOR_EXPRESSION */
struct S1261 {
	int id;
	T6 a1; /* index */
	T1 a2; /* is_parent_prefixed */
	T0* a3; /* parent_name */
	T0* a4; /* precursor_keyword */
	T0* a5; /* arguments */
	T0* a6; /* parenthesis_call */
	T0* a7; /* parent_type */
};

/* Struct for type ET_FEATURE_ADDRESS */
struct S1262 {
	int id;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* name */
};

/* Struct for type ET_CURRENT_ADDRESS */
struct S1263 {
	int id;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* current_keyword */
};

/* Struct for type ET_RESULT_ADDRESS */
struct S1264 {
	int id;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* result_keyword */
};

/* Struct for type ET_EXPRESSION_ADDRESS */
struct S1265 {
	int id;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* expression */
};

/* Struct for type ET_INFIX_EXPRESSION */
struct S1266 {
	int id;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* name */
	T0* a4; /* right */
	T1 a5; /* is_boolean_operator */
};

/* Struct for type ET_INFIX_AND_THEN_OPERATOR */
struct S1267 {
	int id;
	T0* a1; /* and_keyword */
	T0* a2; /* then_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_INFIX_OR_ELSE_OPERATOR */
struct S1268 {
	int id;
	T0* a1; /* or_keyword */
	T0* a2; /* else_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_MANIFEST_TYPE */
struct S1269 {
	int id;
	T6 a1; /* index */
	T0* a2; /* left_brace */
	T0* a3; /* type */
	T0* a4; /* right_brace */
};

/* Struct for type ET_PREFIX_EXPRESSION */
struct S1270 {
	int id;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* expression */
	T1 a4; /* is_boolean_operator */
};

/* Struct for type ET_OLD_EXPRESSION */
struct S1271 {
	int id;
	T6 a1; /* index */
	T0* a2; /* old_keyword */
	T0* a3; /* expression */
};

/* Struct for type ET_OLD_OBJECT_TEST */
struct S1272 {
	int id;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* left_brace */
	T0* a4; /* attached_keyword */
	T0* a5; /* as_keyword */
	T0* a6; /* colon */
	T0* a7; /* declared_type */
	T0* a8; /* right_brace */
	T0* a9; /* expression */
};

/* Struct for type ET_ONCE_MANIFEST_STRING */
struct S1273 {
	int id;
	T6 a1; /* index */
	T0* a2; /* once_keyword */
	T0* a3; /* manifest_string */
	T6 a4; /* id */
};

/* Struct for type ET_DO_FUNCTION_INLINE_AGENT */
struct S1274 {
	int id;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* declared_type */
	T0* a5; /* end_keyword */
	T0* a6; /* implicit_result */
	T0* a7; /* object_tests */
	T0* a8; /* across_components */
	T0* a9; /* actual_arguments */
	T0* a10; /* preconditions */
	T0* a11; /* locals */
	T0* a12; /* compound */
	T0* a13; /* postconditions */
	T0* a14; /* rescue_clause */
	T0* a15; /* target */
};

/* Struct for type ET_ONCE_FUNCTION_INLINE_AGENT */
struct S1275 {
	int id;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* declared_type */
	T0* a5; /* end_keyword */
	T0* a6; /* implicit_result */
	T0* a7; /* object_tests */
	T0* a8; /* across_components */
	T0* a9; /* actual_arguments */
	T0* a10; /* preconditions */
	T0* a11; /* locals */
	T0* a12; /* keys */
	T0* a13; /* compound */
	T0* a14; /* postconditions */
	T0* a15; /* rescue_clause */
	T0* a16; /* target */
};

/* Struct for type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
struct S1276 {
	int id;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* language */
	T0* a4; /* object_tests */
	T0* a5; /* across_components */
	T0* a6; /* actual_arguments */
	T0* a7; /* preconditions */
	T0* a8; /* alias_clause */
	T0* a9; /* postconditions */
	T0* a10; /* formal_arguments */
	T0* a11; /* declared_type */
	T0* a12; /* end_keyword */
	T0* a13; /* implicit_result */
	T0* a14; /* target */
};

/* Struct for type ET_DO_PROCEDURE_INLINE_AGENT */
struct S1277 {
	int id;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* end_keyword */
	T0* a5; /* object_tests */
	T0* a6; /* across_components */
	T0* a7; /* actual_arguments */
	T0* a8; /* preconditions */
	T0* a9; /* locals */
	T0* a10; /* compound */
	T0* a11; /* postconditions */
	T0* a12; /* rescue_clause */
	T0* a13; /* target */
};

/* Struct for type ET_ONCE_PROCEDURE_INLINE_AGENT */
struct S1278 {
	int id;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* end_keyword */
	T0* a5; /* object_tests */
	T0* a6; /* across_components */
	T0* a7; /* actual_arguments */
	T0* a8; /* preconditions */
	T0* a9; /* locals */
	T0* a10; /* keys */
	T0* a11; /* compound */
	T0* a12; /* postconditions */
	T0* a13; /* rescue_clause */
	T0* a14; /* target */
};

/* Struct for type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
struct S1279 {
	int id;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* language */
	T0* a4; /* object_tests */
	T0* a5; /* across_components */
	T0* a6; /* actual_arguments */
	T0* a7; /* preconditions */
	T0* a8; /* alias_clause */
	T0* a9; /* postconditions */
	T0* a10; /* formal_arguments */
	T0* a11; /* end_keyword */
	T0* a12; /* target */
};

/* Struct for type ET_AGENT_OPEN_TARGET */
struct S1280 {
	int id;
	T0* a1; /* left_brace */
	T0* a2; /* type */
	T0* a3; /* right_brace */
	T6 a4; /* index */
};

/* Struct for type ET_AGENT_TYPED_OPEN_ARGUMENT */
struct S1281 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
	T0* a4; /* question_mark */
	T6 a5; /* index */
};

/* Struct for type ET_TAGGED_ASSERTION */
struct S1283 {
	int id;
	T0* a1; /* tag */
	T0* a2; /* expression */
};

/* Struct for type ET_FILE_POSITION */
struct S1284 {
	int id;
	T6 a1; /* compressed_position */
	T0* a2; /* filename */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
struct S1285 {
	int id;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* items */
};

/* Struct for type DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
struct S1286 {
	int id;
	T6 a1; /* count */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T0* a10; /* internal_cursor */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_PARENT_CHECKER1 */
struct S1287 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* current_parent */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER1 */
struct S1288 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* formal_parameter_sorter */
	T0* a3; /* direct_formal_parameter_sorter */
	T0* a4; /* current_class */
	T0* a5; /* current_formal */
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1289 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T0* a10; /* equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T6 a17; /* capacity */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_NAME_TESTER */
struct S1290 {
	int id;
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1292 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* special_key_routines */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* internal_cursor */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ALIAS_NAME_TESTER */
struct S1293 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLIENT_LIST] */
struct S1295 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
struct S1296 {
	int id;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* count */
	T0* a17; /* internal_keys */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_ADAPTATION_RESOLVER */
struct S1297 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* rename_table */
	T0* a3; /* export_table */
	T0* a4; /* undefine_table */
	T0* a5; /* redefine_table */
	T0* a6; /* select_table */
	T0* a7; /* alias_mapping */
	T0* a8; /* replicable_features */
	T0* a9; /* current_class */
	T0* a10; /* free_parent_feature */
	T0* a11; /* parent_feature_list */
	T0* a12; /* free_inherited_feature */
	T0* a13; /* inherited_feature_list */
	T0* a14; /* free_redeclared_feature */
	T0* a15; /* redeclared_feature_list */
};

/* Struct for type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
struct S1298 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* dotnet_features */
	T0* a3; /* other_dotnet_features */
	T0* a4; /* current_class */
	T0* a5; /* free_parent_feature */
	T0* a6; /* parent_feature_list */
	T0* a7; /* free_inherited_feature */
	T0* a8; /* inherited_feature_list */
	T0* a9; /* free_redeclared_feature */
	T0* a10; /* redeclared_feature_list */
};

/* Struct for type ET_IDENTIFIER_TYPE_RESOLVER */
struct S1299 {
	int id;
	T0* a1; /* current_class */
	T1 a2; /* has_fatal_error */
	T0* a3; /* current_feature */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
struct S1300 {
	int id;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
};

/* Struct for type ET_ANCHORED_TYPE_CHECKER */
struct S1301 {
	int id;
	T0* a1; /* anchored_type_sorter */
	T0* a2; /* current_class */
	T1 a3; /* has_fatal_error */
	T0* a4; /* current_anchored_type */
};

/* Struct for type ET_SIGNATURE_CHECKER */
struct S1302 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* parent_context */
	T0* a3; /* current_class */
	T6 a4; /* processing_mode */
};

/* Struct for type ET_PARENT_CHECKER2 */
struct S1303 {
	int id;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER2 */
struct S1304 {
	int id;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_BUILTIN_FEATURE_CHECKER */
struct S1305 {
	int id;
	T0* a1; /* current_class */
	T1 a2; /* has_fatal_error */
};

/* Struct for type ET_PRECURSOR_CHECKER */
struct S1306 {
	int id;
	T0* a1; /* current_feature */
	T0* a2; /* current_class */
	T1 a3; /* has_fatal_error */
};

/* Struct for type DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
struct S1307 {
	int id;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* count */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_SET [ET_CLASS] */
struct S1308 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T6 a5; /* capacity */
	T6 a6; /* modulus */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type ET_PARENT_CHECKER3 */
struct S1309 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* classes_to_be_processed */
	T0* a3; /* current_class */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
struct S1310 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_class */
	T1 a4; /* in_qualified_anchored_type */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
struct S1311 {
	int id;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
};

/* Struct for type ET_PARENT_FEATURE */
struct S1313 {
	int id;
	T0* a1; /* next */
	T0* a2; /* parent */
	T0* a3; /* precursor_feature */
	T0* a4; /* new_name */
	T0* a5; /* undefine_name */
	T0* a6; /* redefine_name */
	T0* a7; /* select_name */
	T0* a8; /* merged_feature */
};

/* Struct for type ET_INHERITED_FEATURE */
struct S1314 {
	int id;
	T0* a1; /* next */
	T0* a2; /* parent_feature */
	T0* a3; /* flattened_feature */
	T0* a4; /* flattened_parent */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T1 a7; /* is_selected */
	T0* a8; /* replicated_features */
	T0* a9; /* replicated_seeds */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
struct S1315 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
struct S1316 {
	int id;
};

/* Struct for type SPECIAL [ET_DOTNET_ASSEMBLY] */
struct S1317 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
struct S1319 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
	T0* a6; /* equality_tester */
};

/* Struct for type ET_BRACED_TYPE_LIST */
struct S1321 {
	int id;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS] */
struct S1322 {
	int id;
	T6 a1; /* count */
	T0* a2; /* equality_tester */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_MASTER_CLASS] */
struct S1323 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* equality_tester */
	T0* a6; /* internal_cursor */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_UNIVERSE] */
struct S1324 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_UNIVERSE] */
struct S1325 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
struct S1327 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
struct S1328 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
struct S1330 {
	int id;
};

/* Struct for type SPECIAL [ET_INTERNAL_UNIVERSE] */
struct S1331 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER1 */
struct S1332 {
	int id;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER2 */
struct S1333 {
	int id;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
struct S1334 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER3 */
struct S1335 {
	int id;
	T1 a1; /* has_fatal_error */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
struct S1336 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_STACK [YY_BUFFER] */
struct S1337 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
};

/* Struct for type UT_SYNTAX_ERROR */
struct S1338 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type UT_TOO_MANY_INCLUDES_ERROR */
struct S1339 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_DYNAMIC_TARGET_LIST */
struct S1341 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type XM_NAMESPACE_RESOLVER_CONTEXT */
struct S1342 {
	int id;
	T0* a1; /* context */
};

/* Struct for type DS_LINKED_QUEUE [STRING_8] */
struct S1344 {
	int id;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
};

/* Struct for type detachable KL_EQUALITY_TESTER [XM_NAMESPACE] */
struct S1345 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
struct S1346 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
struct S1347 {
	int id;
};

/* Struct for type SPECIAL [XM_NAMESPACE] */
struct S1348 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type XM_EIFFEL_CHARACTER_ENTITY */
struct S1349 {
	int id;
	T6 a1; /* code */
};

/* Struct for type detachable DS_BILINKABLE [XM_POSITION] */
struct S1350 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
struct S1351 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [XM_EIFFEL_SCANNER] */
struct S1352 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
struct S1353 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S1356 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
struct S1357 {
	int id;
};

/* Struct for type detachable KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
struct S1358 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
struct S1359 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
struct S1360 {
	int id;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1361 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1362 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [STRING_8] */
struct S1363 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_BILINKABLE [STRING_8] */
struct S1364 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type SPECIAL [ET_ECF_TARGET] */
struct S1365 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
struct S1366 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
struct S1367 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_ADAPTED_LIBRARY] */
struct S1368 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
struct S1369 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
struct S1370 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_LIBRARY] */
struct S1371 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIBRARY] */
struct S1372 {
	int id;
};

/* Struct for type SPECIAL [ET_LIBRARY] */
struct S1373 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1374 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1375 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1376 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [NATIVE_STRING] */
struct S1377 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
struct S1378 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
struct S1379 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
struct S1380 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
struct S1381 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
struct S1383 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
struct S1384 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
struct S1385 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT] */
struct S1386 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [NATURAL_8] */
struct S1389 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
struct S1390 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type ET_XACE_INVALID_EXPRESSION_ERROR */
struct S1392 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
struct S1395 {
	int id;
	T6 a1; /* position */
	T6 a2; /* last_position */
	T6 a3; /* capacity */
	T6 a4; /* slots_position */
	T6 a5; /* count */
	T6 a6; /* modulus */
	T6 a7; /* clashes_previous_position */
	T0* a8; /* key_equality_tester */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* item_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
struct S1396 {
	int id;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1397 {
	int id;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type KL_AGENT_ROUTINES [ET_UNIVERSE] */
struct S1398 {
	int id;
};

/* Struct for type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_UNIVERSE]] */
struct S1399 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	T1 (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
struct S1400 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_UNIVERSE]]] */
struct S1401 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type KL_AGENT_HASH_FUNCTION [STRING_8] */
struct S1404 {
	int id;
	T0* a1; /* hash_agent */
};

/* Struct for type [attached] TUPLE [STRING_8] */
struct S1405 {
	int id;
	T0* z1;
};

/* Struct for type [attached] FUNCTION [KL_STRING_ROUTINES, [attached] TUPLE [STRING_8], INTEGER_32] */
struct S1406 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	T6 (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [KL_STRING_ROUTINES] */
struct S1407 {
	int id;
	T0* z1;
};

/* Struct for type ET_ACTUAL_PARAMETER_SUBLIST */
struct S1409 {
	int id;
	T6 a1; /* upper */
	T6 a2; /* lower */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
struct S1410 {
	int id;
	T6 a1; /* count */
	T6 a2; /* tuple_position */
	T0* a3; /* actual_parameters */
	T0* a4; /* tuple_type */
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
struct S1413 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type XM_COMMENT */
struct S1414 {
	int id;
	T0* a1; /* data */
	T0* a2; /* parent */
};

/* Struct for type XM_PROCESSING_INSTRUCTION */
struct S1415 {
	int id;
	T0* a1; /* target */
	T0* a2; /* data */
	T0* a3; /* parent */
};

/* Struct for type XM_CHARACTER_DATA */
struct S1416 {
	int id;
	T0* a1; /* content */
	T0* a2; /* parent */
};

/* Struct for type detachable DS_CELL [detachable ET_CLASS] */
struct S1422 {
	int id;
	T0* a1; /* item */
};

/* Struct for type [attached] TUPLE [detachable DS_CELL [detachable ET_CLASS]] */
struct S1423 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
struct S1424 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLUSTER] */
struct S1425 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
struct S1426 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_FORMAL_PARAMETER_TYPE */
struct S1427 {
	int id;
	T0* a1; /* implementation_class */
	T6 a2; /* index */
	T0* a3; /* type_mark */
	T0* a4; /* name */
};

/* Struct for type ET_UNQUALIFIED_CALL_INSTRUCTION */
struct S1428 {
	int id;
	T0* a1; /* name */
	T0* a2; /* arguments */
	T0* a3; /* parenthesis_call */
};

/* Struct for type [attached] TUPLE [ET_EIFFEL_PARSER, DS_ARRAYED_LIST [STRING_8]] */
struct S1430 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
struct S1431 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_FEATURE_IDS */
struct S1439 {
	int id;
	T6 a1; /* count */
	T0* a2; /* feature_ids */
};

/* Struct for type HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
struct S1440 {
	int id;
	T6 a1; /* last_state */
	T1 a2; /* internal_overflowed */
	T11 a3; /* part1 */
	T11 a4; /* part2 */
	T0* a5; /* leading_separators */
	T0* a6; /* trailing_separators */
	T6 a7; /* sign */
	T6 a8; /* conversion_type */
	T2 a9; /* internal_lookahead */
	T1 a10; /* leading_separators_acceptable */
	T1 a11; /* trailing_separators_acceptable */
};

/* Struct for type INTEGER_OVERFLOW_CHECKER */
struct S1443 {
	int id;
	T0* a1; /* integer_overflow_state1 */
	T0* a2; /* integer_overflow_state2 */
	T0* a3; /* natural_overflow_state1 */
	T0* a4; /* natural_overflow_state2 */
};

/* Struct for type SPECIAL [ARRAY [INTEGER_32]] */
struct S1444 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
struct S1445 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
struct S1446 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
struct S1447 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
struct S1448 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
struct S1449 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1450 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
struct S1451 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
struct S1452 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
struct S1453 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
struct S1454 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
struct S1455 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_CONDITION] */
struct S1456 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type detachable DS_LINKABLE [XM_DOCUMENT_NODE] */
struct S1457 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_QUEUE [CHARACTER_8] */
struct S1462 {
	int id;
	T6 a1; /* count */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
};

/* Struct for type UC_UTF16_ROUTINES */
struct S1463 {
	int id;
};

/* Struct for type SPECIAL [ET_ADAPTED_UNIVERSE] */
struct S1464 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
struct S1465 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
struct S1466 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type LX_DFA_WILDCARD */
struct S1467 {
	int id;
	T0* a1; /* pattern */
	T1 a2; /* is_case_insensitive */
	T0* a3; /* yy_nxt */
	T0* a4; /* yy_accept */
	T6 a5; /* yyNb_rows */
	T6 a6; /* match_count */
	T6 a7; /* subject_start */
	T6 a8; /* subject_end */
	T0* a9; /* subject */
	T6 a10; /* matched_start */
	T6 a11; /* matched_end */
};

/* Struct for type DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
struct S1468 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
struct S1470 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
struct S1471 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [ET_XACE_CLUSTER] */
struct S1472 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
struct S1473 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
struct S1474 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_NAMED_CLASS] */
struct S1475 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
struct S1477 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
struct S1479 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_QUERY] */
struct S1480 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [detachable ET_OBJECT_TEST_LIST] */
struct S1481 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
struct S1482 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
struct S1483 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
struct S1484 {
	int id;
};

/* Struct for type SPECIAL [ET_ASSERTION_ITEM] */
struct S1485 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
struct S1486 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
struct S1487 {
	int id;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
struct S1488 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
struct S1489 {
	int id;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* modulus */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* internal_cursor */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
struct S1492 {
	int id;
	T0* a1; /* cycle */
	T0* a2; /* sorted_items */
	T0* a3; /* items */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* indexes */
};

/* Struct for type detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
struct S1493 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1494 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_FLATTENED_FEATURE] */
struct S1495 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
struct S1498 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1500 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
struct S1501 {
	int id;
};

/* Struct for type SPECIAL [ET_CLIENT_LIST] */
struct S1502 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
struct S1503 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
struct S1505 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT] */
struct S1506 {
	int id;
};

/* Struct for type SPECIAL [ET_CLIENT] */
struct S1507 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME] */
struct S1508 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* internal_cursor */
	T6 a4; /* count */
	T0* a5; /* item_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* position */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* modulus */
	T0* a12; /* equality_tester */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* key_storage */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_CALL_NAME_TESTER */
struct S1509 {
	int id;
};

/* Struct for type DS_HASH_SET [ET_CALL_NAME] */
struct S1511 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* internal_cursor */
	T6 a4; /* count */
	T0* a5; /* item_storage */
	T6 a6; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T0* a10; /* equality_tester */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME] */
struct S1512 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 a3; /* found_position */
	T0* a4; /* internal_cursor */
	T0* a5; /* key_storage */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* position */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* modulus */
	T0* a13; /* equality_tester */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* special_item_routines */
	T0* a17; /* clashes */
	T0* a18; /* slots */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME] */
struct S1513 {
	int id;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a11; /* slots_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* internal_cursor */
	T0* a15; /* key_storage */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1514 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_REDECLARED_FEATURE */
struct S1515 {
	int id;
	T0* a1; /* next */
	T0* a2; /* flattened_feature */
	T1 a3; /* is_selected */
	T0* a4; /* replicated_features */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T0* a7; /* parent_feature */
	T0* a8; /* replicated_seeds */
};

/* Struct for type ET_REPLICATED_FEATURE */
struct S1518 {
	int id;
	T0* a1; /* features */
	T6 a2; /* selected_count */
};

/* Struct for type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
struct S1519 {
	int id;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
struct S1520 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DOTNET_SIGNATURE_TESTER */
struct S1521 {
	int id;
};

/* Struct for type DS_HASH_SET [ET_DOTNET_FEATURE] */
struct S1522 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T6 a9; /* count */
	T6 a10; /* slots_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* internal_cursor */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1524 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
struct S1526 {
	int id;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
struct S1527 {
	int id;
	T0* a1; /* cycle */
	T0* a2; /* counts */
	T0* a3; /* successors */
	T0* a4; /* items */
	T0* a5; /* sorted_items */
	T0* a6; /* indexes */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1528 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_LINKED_LIST [ET_PARENT_FEATURE] */
struct S1529 {
	int id;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
struct S1530 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS] */
struct S1531 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
struct S1533 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
struct S1534 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
struct S1535 {
	int id;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [YY_BUFFER] */
struct S1537 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [YY_BUFFER] */
struct S1538 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TARGET] */
struct S1539 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
struct S1540 {
	int id;
};

/* Struct for type DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1542 {
	int id;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1543 {
	int id;
	T1 a1; /* before */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* after */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
struct S1544 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
struct S1545 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type [attached] TUPLE [ET_GROUP] */
struct S1546 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
struct S1547 {
	int id;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLASS]], [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_CLASS]]] */
struct S1548 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1549 {
	int id;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type ET_CLUSTER_ERROR */
struct S1550 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* cluster */
};

/* Struct for type ET_SYNTAX_ERROR */
struct S1551 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* filename */
	T0* a6; /* position */
	T1 a7; /* ise_reported */
	T1 a8; /* ise_fatal */
	T1 a9; /* ge_reported */
	T1 a10; /* ge_fatal */
};

/* Struct for type AP_OPTION_COMPARATOR */
struct S1552 {
	int id;
};

/* Struct for type DS_QUICK_SORTER [AP_OPTION] */
struct S1553 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type [attached] TUPLE [ET_XACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1556 {
	int id;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1557 {
	int id;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type ET_FORMAL_COMMA_ARGUMENT */
struct S1563 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type ET_LOCAL_COMMA_VARIABLE */
struct S1564 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type ET_LABELED_COMMA_ACTUAL_PARAMETER */
struct S1565 {
	int id;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_KEYWORD_EXPRESSION */
struct S1567 {
	int id;
	T0* a1; /* expression */
	T0* a2; /* keyword */
};

/* Struct for type detachable DS_LINKABLE [XM_ELEMENT_NODE] */
struct S1569 {
	int id;
	T0* a1; /* right */
	T0* a2; /* item */
};

/* Struct for type DS_QUICK_SORTER [ET_QUERY] */
struct S1571 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type DS_QUICK_SORTER [ET_PROCEDURE] */
struct S1572 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type [attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
struct S1577 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
struct S1578 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [ET_ECF_INTERNAL_UNIVERSE, ET_ECF_STATE] */
struct S1579 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [ET_ECF_EXTERNAL_OBJECT] */
struct S1581 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
struct S1582 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
struct S1584 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
struct S1585 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type detachable DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S1588 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] TUPLE [LX_WILDCARD] */
struct S1589 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [LX_WILDCARD]] */
struct S1590 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	T1 (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
struct S1591 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [STRING_8]] */
struct S1593 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	T1 (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [KL_STRING_ROUTINES, STRING_8] */
struct S1594 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type ET_AGENT_IMPLICIT_CURRENT_TARGET */
struct S1598 {
	int id;
	T6 a1; /* index */
	T0* a2; /* agent_expression */
};

/* Struct for type detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
struct S1608 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_CLUSTER] */
struct S1611 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLUSTER] */
struct S1612 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
struct S1613 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [NATURAL_64] */
struct S1614 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T11 z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_ECF_CLUSTER] */
struct S1615 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
struct S1616 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
struct S1617 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
struct S1618 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
struct S1619 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
struct S1620 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1621 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1622 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1623 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
struct S1624 {
	int id;
};

/* Struct for type SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
struct S1625 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
struct S1626 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
struct S1627 {
	int id;
};

/* Struct for type SPECIAL [ET_ECF_FILE_RULE] */
struct S1628 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
struct S1629 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
struct S1630 {
	int id;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
struct S1631 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
struct S1632 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
struct S1633 {
	int id;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
struct S1634 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
struct S1635 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
struct S1636 {
	int id;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
struct S1637 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
struct S1638 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_CONDITION] */
struct S1639 {
	int id;
};

/* Struct for type SPECIAL [ET_ECF_CONDITION] */
struct S1640 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION] */
struct S1641 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type detachable DS_LINKABLE [CHARACTER_8] */
struct S1642 {
	int id;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type LX_WILDCARD_PARSER */
struct S1643 {
	int id;
	T1 a1; /* successful */
	T0* a2; /* pending_rules */
	T0* a3; /* start_condition_stack */
	T0* a4; /* action_factory */
	T0* a5; /* old_singleton_lines */
	T0* a6; /* old_singleton_columns */
	T0* a7; /* old_singleton_counts */
	T0* a8; /* old_regexp_lines */
	T0* a9; /* old_regexp_columns */
	T0* a10; /* old_regexp_counts */
	T0* a11; /* description */
	T0* a12; /* last_string_value */
	T0* a13; /* last_lx_symbol_class_value */
	T0* a14; /* error_handler */
	T0* a15; /* name_definitions */
	T0* a16; /* character_classes */
	T6 a17; /* line_nb */
	T0* a18; /* yyss */
	T0* a19; /* input_buffer */
	T6 a20; /* yy_end */
	T6 a21; /* yy_position */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_parsing_status */
	T6 a25; /* yy_suspended_yystacksize */
	T6 a26; /* yy_suspended_yystate */
	T6 a27; /* yy_suspended_yyn */
	T6 a28; /* yy_suspended_yychar1 */
	T6 a29; /* yy_suspended_index */
	T6 a30; /* yy_suspended_yyss_top */
	T6 a31; /* yy_suspended_yy_goto */
	T0* a32; /* yyr1 */
	T6 a33; /* yyssp */
	T0* a34; /* yypgoto */
	T0* a35; /* yycheck */
	T0* a36; /* yytable */
	T0* a37; /* yydefgoto */
	T6 a38; /* error_count */
	T1 a39; /* yy_lookahead_needed */
	T6 a40; /* yyerrstatus */
	T0* a41; /* yypact */
	T6 a42; /* last_token */
	T0* a43; /* yytranslate */
	T0* a44; /* yydefact */
	T0* a45; /* yy_pushed_start_conditions */
	T0* a46; /* yyspecial_routines1 */
	T6 a47; /* yyvsc1 */
	T0* a48; /* yyvs1 */
	T0* a49; /* yyspecial_routines2 */
	T6 a50; /* yyvsc2 */
	T0* a51; /* yyvs2 */
	T0* a52; /* yyspecial_routines3 */
	T6 a53; /* yyvsc3 */
	T0* a54; /* yyvs3 */
	T0* a55; /* yyspecial_routines4 */
	T6 a56; /* yyvsc4 */
	T0* a57; /* yyvs4 */
	T0* a58; /* yyspecial_routines5 */
	T6 a59; /* yyvsc5 */
	T0* a60; /* yyvs5 */
	T0* a61; /* yytypes1 */
	T0* a62; /* yytypes2 */
	T6 a63; /* yy_start */
	T6 a64; /* yyvsp1 */
	T6 a65; /* yyvsp2 */
	T6 a66; /* yyvsp3 */
	T6 a67; /* yyvsp4 */
	T6 a68; /* yyvsp5 */
	T1 a69; /* yy_more_flag */
	T6 a70; /* yy_more_len */
	T6 a71; /* line */
	T6 a72; /* column */
	T6 a73; /* position */
	T6 a74; /* yy_start_state */
	T0* a75; /* yy_state_stack */
	T6 a76; /* yy_state_count */
	T0* a77; /* yy_content_area */
	T0* a78; /* yy_ec */
	T0* a79; /* yy_content */
	T0* a80; /* yy_accept */
	T6 a81; /* yy_last_accepting_state */
	T6 a82; /* yy_last_accepting_cpos */
	T0* a83; /* yy_chk */
	T0* a84; /* yy_base */
	T0* a85; /* yy_def */
	T0* a86; /* yy_meta */
	T0* a87; /* yy_nxt */
	T6 a88; /* yy_lp */
	T0* a89; /* yy_acclist */
	T6 a90; /* yy_looking_for_trail_begin */
	T6 a91; /* yy_full_match */
	T6 a92; /* yy_full_state */
	T6 a93; /* yy_full_lp */
	T1 a94; /* yy_rejected */
	T0* a95; /* last_detachable_any_value */
	T6 a96; /* last_integer_value */
	T1 a97; /* in_trail_context */
	T0* a98; /* rule */
	T1 a99; /* has_trail_context */
	T6 a100; /* head_count */
	T6 a101; /* head_line */
	T6 a102; /* head_column */
	T6 a103; /* trail_count */
	T6 a104; /* rule_line_nb */
};

/* Struct for type LX_DESCRIPTION */
struct S1644 {
	int id;
	T0* a1; /* equiv_classes */
	T1 a2; /* equiv_classes_used */
	T1 a3; /* full_table */
	T1 a4; /* meta_equiv_classes_used */
	T1 a5; /* reject_used */
	T1 a6; /* variable_trail_context */
	T0* a7; /* rules */
	T0* a8; /* start_conditions */
	T6 a9; /* characters_count */
	T6 a10; /* array_size */
	T1 a11; /* line_pragma */
	T1 a12; /* inspect_used */
	T0* a13; /* eof_rules */
	T0* a14; /* eiffel_header */
	T1 a15; /* case_insensitive */
	T0* a16; /* input_filename */
	T1 a17; /* actions_separated */
	T0* a18; /* eiffel_code */
	T1 a19; /* bol_needed */
	T1 a20; /* pre_action_used */
	T1 a21; /* post_action_used */
	T1 a22; /* pre_eof_action_used */
	T1 a23; /* post_eof_action_used */
	T1 a24; /* line_used */
	T1 a25; /* position_used */
};

/* Struct for type LX_FULL_DFA */
struct S1645 {
	int id;
	T0* a1; /* yy_nxt */
	T0* a2; /* yy_accept */
	T6 a3; /* yyNb_rows */
	T0* a4; /* input_filename */
	T6 a5; /* characters_count */
	T6 a6; /* array_size */
	T1 a7; /* inspect_used */
	T1 a8; /* actions_separated */
	T0* a9; /* eiffel_code */
	T0* a10; /* eiffel_header */
	T1 a11; /* bol_needed */
	T1 a12; /* pre_action_used */
	T1 a13; /* post_action_used */
	T1 a14; /* pre_eof_action_used */
	T1 a15; /* post_eof_action_used */
	T1 a16; /* line_pragma */
	T0* a17; /* yy_start_conditions */
	T0* a18; /* yy_ec */
	T6 a19; /* yyNull_equiv_class */
	T6 a20; /* yyNb_rules */
	T0* a21; /* yy_rules */
	T6 a22; /* yyEnd_of_buffer */
	T1 a23; /* yyLine_used */
	T1 a24; /* yyPosition_used */
	T6 a25; /* minimum_symbol */
	T6 a26; /* maximum_symbol */
	T0* a27; /* states */
	T6 a28; /* backing_up_count */
	T0* a29; /* partitions */
	T6 a30; /* start_states_count */
	T1 a31; /* yyBacking_up */
	T0* a32; /* yy_eof_rules */
};

/* Struct for type SPECIAL [LX_WILDCARD] */
struct S1647 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_WILDCARD] */
struct S1650 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
struct S1651 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
struct S1652 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1653 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T6 a5; /* modulus */
	T6 a6; /* capacity */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T0* a9; /* internal_cursor */
	T6 a10; /* found_position */
	T0* a11; /* item_storage */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* hash_function */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
struct S1654 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME] */
struct S1655 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_RENAME] */
struct S1656 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CALL_NAME] */
struct S1661 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME] */
struct S1662 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
struct S1663 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CALL_NAME] */
struct S1664 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME] */
struct S1665 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME] */
struct S1668 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1669 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1670 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
struct S1672 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
struct S1673 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_LINKABLE [ET_ADAPTED_FEATURE] */
struct S1674 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
struct S1675 {
	int id;
};

/* Struct for type SPECIAL [ET_PARENT_FEATURE] */
struct S1676 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1677 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_DOTNET_FEATURE] */
struct S1678 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
struct S1679 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
struct S1680 {
	int id;
};

/* Struct for type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1681 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1684 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1685 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
struct S1686 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_LINKABLE [ET_DOTNET_FEATURE] */
struct S1687 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
struct S1688 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* modulus */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1689 {
	int id;
	T0* a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type ET_DOTNET_ASSEMBLY_ERROR */
struct S1690 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* assembly */
};

/* Struct for type ET_STANDARD_ONCE_KEYS */
struct S1693 {
	int id;
};

/* Struct for type KL_CHARACTER_ROUTINES */
struct S1696 {
	int id;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
struct S1697 {
	int id;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_IDENTIFIER, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S1698 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S1703 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
struct S1704 {
	int id;
};

/* Struct for type ET_SEEDED_QUERY_COMPARATOR */
struct S1708 {
	int id;
};

/* Struct for type ET_SEEDED_PROCEDURE_COMPARATOR */
struct S1711 {
	int id;
};

/* Struct for type [attached] TUPLE [ET_CLIENT_LIST] */
struct S1715 {
	int id;
	T0* z1;
};

/* Struct for type ET_INFIX_CAST_EXPRESSION */
struct S1723 {
	int id;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* type */
};

/* Struct for type detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
struct S1726 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_LIKE_FEATURE] */
struct S1731 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
struct S1732 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
struct S1733 {
	int id;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST [LX_RULE] */
struct S1734 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_START_CONDITIONS */
struct S1735 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_ACTION_FACTORY */
struct S1736 {
	int id;
};

/* Struct for type LX_SYMBOL_CLASS */
struct S1737 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T1 a4; /* sort_needed */
	T1 a5; /* negated */
	T0* a6; /* internal_cursor */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8] */
struct S1738 {
	int id;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* free_slot */
	T6 a10; /* last_position */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
struct S1739 {
	int id;
};

/* Struct for type SPECIAL [LX_SYMBOL_CLASS] */
struct S1740 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_NFA] */
struct S1741 {
	int id;
};

/* Struct for type LX_NFA */
struct S1742 {
	int id;
	T1 a1; /* in_trail_context */
	T0* a2; /* states */
};

/* Struct for type SPECIAL [LX_NFA] */
struct S1743 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_EQUIVALENCE_CLASSES */
struct S1744 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type LX_RULE */
struct S1745 {
	int id;
	T6 a1; /* id */
	T0* a2; /* pattern */
	T0* a3; /* action */
	T6 a4; /* head_count */
	T6 a5; /* trail_count */
	T6 a6; /* line_count */
	T6 a7; /* column_count */
	T6 a8; /* line_nb */
	T1 a9; /* has_trail_context */
	T1 a10; /* is_useful */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8] */
struct S1746 {
	int id;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type LX_UNRECOGNIZED_RULE_ERROR */
struct S1747 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_MISSING_QUOTE_ERROR */
struct S1748 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_CLASS_ERROR */
struct S1749 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_ERROR */
struct S1750 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_META_ERROR */
struct S1751 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_REJECT_ERROR */
struct S1752 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
struct S1753 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type LX_CHARACTER_OUT_OF_RANGE_ERROR */
struct S1754 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type SPECIAL [LX_RULE] */
struct S1755 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [LX_RULE] */
struct S1756 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type LX_DFA_STATE */
struct S1757 {
	int id;
	T0* a1; /* accepted_rules */
	T0* a2; /* states */
	T0* a3; /* transitions */
	T0* a4; /* accepted_head_rules */
	T6 a5; /* code */
	T6 a6; /* id */
};

/* Struct for type DS_ARRAYED_LIST [LX_NFA_STATE] */
struct S1758 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [LX_DFA_STATE] */
struct S1759 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_SYMBOL_PARTITIONS */
struct S1760 {
	int id;
	T0* a1; /* symbols */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type KL_ARRAY_ROUTINES [LX_RULE] */
struct S1761 {
	int id;
};

/* Struct for type LX_START_CONDITION */
struct S1762 {
	int id;
	T0* a1; /* name */
	T6 a2; /* id */
	T1 a3; /* is_exclusive */
	T0* a4; /* patterns */
	T0* a5; /* bol_patterns */
};

/* Struct for type LX_TRANSITION_TABLE [LX_DFA_STATE] */
struct S1763 {
	int id;
	T0* a1; /* storage */
	T0* a2; /* array_routines */
	T6 a3; /* count */
};

/* Struct for type DS_ARRAYED_LIST [LX_NFA] */
struct S1764 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_HASH_TABLE [LX_NFA, INTEGER_32] */
struct S1765 {
	int id;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* count */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* free_slot */
	T6 a8; /* last_position */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type LX_NFA_STATE */
struct S1766 {
	int id;
	T1 a1; /* in_trail_context */
	T0* a2; /* transition */
	T0* a3; /* epsilon_transition */
	T6 a4; /* id */
	T0* a5; /* accepted_rule */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1768 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
struct S1770 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_UNIVERSE_ERROR */
struct S1771 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* universe */
};

/* Struct for type detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1773 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] TUPLE [ET_ECF_LIBRARY] */
struct S1776 {
	int id;
	T0* z1;
};

/* Struct for type ET_PARENTHESIS_SYMBOL */
struct S1791 {
	int id;
	T6 a1; /* seed */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
struct S1796 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
struct S1797 {
	int id;
	T0* a1; /* agent_expression */
	T6 a2; /* argument_index */
	T6 a3; /* index */
};

/* Struct for type [attached] TUPLE [ET_ECF_CLUSTER] */
struct S1804 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_CLUSTER]] */
struct S1805 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
struct S1806 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [ET_ECF_FILE_RULE] */
struct S1807 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_FILE_RULE]] */
struct S1808 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	void (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [ET_ECF_FILE_RULES] */
struct S1809 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_ECF_FILE_RULE]] */
struct S1810 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	T1 (*f)(GE_context*, T0*, T0*);
};

/* Struct for type [attached] TUPLE [ET_ECF_STATE] */
struct S1811 {
	int id;
	T0* z1;
};

/* Struct for type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
struct S1815 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
struct S1818 {
	int id;
	T0* a1; /* table_cursor */
	T0* a2; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_RULE] */
struct S1820 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_RULE] */
struct S1821 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_ARRAY_ROUTINES [STRING_8] */
struct S1822 {
	int id;
};

/* Struct for type SPECIAL [LX_START_CONDITION] */
struct S1823 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
struct S1824 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
struct S1825 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
struct S1828 {
	int id;
	T0* a1; /* label */
	T0* a2; /* target */
};

/* Struct for type LX_EPSILON_TRANSITION [LX_NFA_STATE] */
struct S1830 {
	int id;
	T0* a1; /* target */
};

/* Struct for type LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
struct S1832 {
	int id;
	T6 a1; /* label */
	T0* a2; /* target */
};

/* Struct for type DS_BILINKABLE [INTEGER_32] */
struct S1833 {
	int id;
	T6 a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type SPECIAL [DS_BILINKABLE [INTEGER_32]] */
struct S1834 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [DS_BILINKABLE [INTEGER_32]] */
struct S1835 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type LX_ACTION */
struct S1837 {
	int id;
	T0* a1; /* text */
};

/* Struct for type DS_BUBBLE_SORTER [LX_NFA_STATE] */
struct S1838 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type DS_BUBBLE_SORTER [LX_RULE] */
struct S1840 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type SPECIAL [LX_NFA_STATE] */
struct S1842 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
struct S1844 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
struct S1845 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [LX_DFA_STATE] */
struct S1847 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
struct S1848 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
struct S1849 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_ARRAY [LX_RULE] */
struct S1850 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ARRAY [detachable LX_DFA_STATE] */
struct S1851 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
struct S1852 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_NFA] */
struct S1853 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
struct S1855 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type ET_DYNAMIC_EQUALITY_EXPRESSION */
struct S1858 {
	int id;
	T0* a1; /* target_type_set */
	T0* a2; /* static_equality */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
};

/* Struct for type ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
struct S1859 {
	int id;
	T0* a1; /* target_type_set */
	T0* a2; /* static_equality */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
};

/* Struct for type ET_CONVERT_BUILTIN_EXPRESSION */
struct S1860 {
	int id;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* convert_feature */
	T0* a4; /* type */
};

/* Struct for type ET_CONVERT_FROM_EXPRESSION */
struct S1861 {
	int id;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* convert_feature */
	T0* a4; /* type */
};

/* Struct for type ET_CONVERT_TO_EXPRESSION */
struct S1862 {
	int id;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* convert_feature */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
struct S1867 {
	int id;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type detachable DS_LINKABLE [ET_PARENT_FEATURE] */
struct S1870 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_SHELL_SORTER [INTEGER_32] */
struct S1872 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [LX_RULE] */
struct S1873 {
	int id;
};

/* Struct for type KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
struct S1876 {
	int id;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1879 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1880 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1881 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1882 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1883 {
	int id;
};

/* Struct for type KL_ARRAY [STRING_8] */
struct S1884 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1885 {
	int id;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1886 {
	int id;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LACE_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1887 {
	int id;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LACE_DOTNET_GAC_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1888 {
	int id;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1889 {
	int id;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1890 {
	int id;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
struct S1891 {
	int id;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
struct S1892 {
	int id;
	T0* a1; /* closed_operands */
	T1 a2; /* is_target_closed */
	T1 (*f)(GE_context*, T0*, T0*);
};

/* Struct for type ET_AST_NULL_LEAF */
struct S1895 {
	int id;
	T6 a1; /* compressed_position */
};

typedef struct {
	int id;
	EIF_INTEGER type_id;
	EIF_BOOLEAN is_special;
	void (*dispose) (GE_context*, EIF_REFERENCE);
	T0* a1;
} EIF_TYPE;


extern T1 GE_default1;
extern T2 GE_default2;
extern T3 GE_default3;
extern T4 GE_default4;
extern T5 GE_default5;
extern T6 GE_default6;
extern T7 GE_default7;
extern T8 GE_default8;
extern T9 GE_default9;
extern T10 GE_default10;
extern T11 GE_default11;
extern T12 GE_default12;
extern T13 GE_default13;
extern T14 GE_default14;
extern T15 GE_default15;
extern T16 GE_default16;
extern T17 GE_default17;
extern T18 GE_default18;
extern T19 GE_default19;
extern T22 GE_default22;
extern T23 GE_default23;
extern T24 GE_default24;
extern T25 GE_default25;
extern T26 GE_default26;
extern T27 GE_default27;
extern T29 GE_default29;
extern T30 GE_default30;
extern T31 GE_default31;
extern T32 GE_default32;
extern T33 GE_default33;
extern T34 GE_default34;
extern T36 GE_default36;
extern T37 GE_default37;
extern T38 GE_default38;
extern T39 GE_default39;
extern T40 GE_default40;
extern T41 GE_default41;
extern T43 GE_default43;
extern T44 GE_default44;
extern T45 GE_default45;
extern T46 GE_default46;
extern T50 GE_default50;
extern T52 GE_default52;
extern T53 GE_default53;
extern T54 GE_default54;
extern T55 GE_default55;
extern T57 GE_default57;
extern T58 GE_default58;
extern T61 GE_default61;
extern T62 GE_default62;
extern T63 GE_default63;
extern T64 GE_default64;
extern T65 GE_default65;
extern T66 GE_default66;
extern T67 GE_default67;
extern T68 GE_default68;
extern T69 GE_default69;
extern T70 GE_default70;
extern T71 GE_default71;
extern T74 GE_default74;
extern T75 GE_default75;
extern T76 GE_default76;
extern T77 GE_default77;
extern T78 GE_default78;
extern T79 GE_default79;
extern T80 GE_default80;
extern T81 GE_default81;
extern T82 GE_default82;
extern T84 GE_default84;
extern T86 GE_default86;
extern T87 GE_default87;
extern T88 GE_default88;
extern T90 GE_default90;
extern T92 GE_default92;
extern T94 GE_default94;
extern T95 GE_default95;
extern T96 GE_default96;
extern T97 GE_default97;
extern T98 GE_default98;
extern T99 GE_default99;
extern T100 GE_default100;
extern T103 GE_default103;
extern T104 GE_default104;
extern T105 GE_default105;
extern T106 GE_default106;
extern T107 GE_default107;
extern T108 GE_default108;
extern T109 GE_default109;
extern T110 GE_default110;
extern T111 GE_default111;
extern T112 GE_default112;
extern T113 GE_default113;
extern T114 GE_default114;
extern T115 GE_default115;
extern T116 GE_default116;
extern T117 GE_default117;
extern T118 GE_default118;
extern T119 GE_default119;
extern T120 GE_default120;
extern T121 GE_default121;
extern T122 GE_default122;
extern T123 GE_default123;
extern T124 GE_default124;
extern T126 GE_default126;
extern T128 GE_default128;
extern T129 GE_default129;
extern T130 GE_default130;
extern T131 GE_default131;
extern T132 GE_default132;
extern T133 GE_default133;
extern T134 GE_default134;
extern T136 GE_default136;
extern T137 GE_default137;
extern T138 GE_default138;
extern T139 GE_default139;
extern T140 GE_default140;
extern T141 GE_default141;
extern T142 GE_default142;
extern T143 GE_default143;
extern T144 GE_default144;
extern T148 GE_default148;
extern T151 GE_default151;
extern T152 GE_default152;
extern T153 GE_default153;
extern T154 GE_default154;
extern T155 GE_default155;
extern T156 GE_default156;
extern T158 GE_default158;
extern T159 GE_default159;
extern T160 GE_default160;
extern T161 GE_default161;
extern T162 GE_default162;
extern T163 GE_default163;
extern T164 GE_default164;
extern T165 GE_default165;
extern T168 GE_default168;
extern T169 GE_default169;
extern T171 GE_default171;
extern T172 GE_default172;
extern T173 GE_default173;
extern T174 GE_default174;
extern T175 GE_default175;
extern T176 GE_default176;
extern T178 GE_default178;
extern T179 GE_default179;
extern T180 GE_default180;
extern T182 GE_default182;
extern T184 GE_default184;
extern T187 GE_default187;
extern T188 GE_default188;
extern T189 GE_default189;
extern T190 GE_default190;
extern T192 GE_default192;
extern T193 GE_default193;
extern T194 GE_default194;
extern T195 GE_default195;
extern T196 GE_default196;
extern T197 GE_default197;
extern T198 GE_default198;
extern T200 GE_default200;
extern T201 GE_default201;
extern T202 GE_default202;
extern T203 GE_default203;
extern T204 GE_default204;
extern T205 GE_default205;
extern T206 GE_default206;
extern T207 GE_default207;
extern T210 GE_default210;
extern T211 GE_default211;
extern T212 GE_default212;
extern T213 GE_default213;
extern T214 GE_default214;
extern T215 GE_default215;
extern T216 GE_default216;
extern T217 GE_default217;
extern T218 GE_default218;
extern T219 GE_default219;
extern T220 GE_default220;
extern T221 GE_default221;
extern T222 GE_default222;
extern T223 GE_default223;
extern T224 GE_default224;
extern T225 GE_default225;
extern T226 GE_default226;
extern T227 GE_default227;
extern T228 GE_default228;
extern T229 GE_default229;
extern T230 GE_default230;
extern T231 GE_default231;
extern T232 GE_default232;
extern T233 GE_default233;
extern T234 GE_default234;
extern T235 GE_default235;
extern T236 GE_default236;
extern T237 GE_default237;
extern T238 GE_default238;
extern T239 GE_default239;
extern T240 GE_default240;
extern T241 GE_default241;
extern T242 GE_default242;
extern T243 GE_default243;
extern T248 GE_default248;
extern T252 GE_default252;
extern T260 GE_default260;
extern T261 GE_default261;
extern T262 GE_default262;
extern T263 GE_default263;
extern T264 GE_default264;
extern T265 GE_default265;
extern T266 GE_default266;
extern T267 GE_default267;
extern T268 GE_default268;
extern T269 GE_default269;
extern T270 GE_default270;
extern T271 GE_default271;
extern T272 GE_default272;
extern T273 GE_default273;
extern T274 GE_default274;
extern T275 GE_default275;
extern T276 GE_default276;
extern T277 GE_default277;
extern T278 GE_default278;
extern T279 GE_default279;
extern T280 GE_default280;
extern T281 GE_default281;
extern T282 GE_default282;
extern T283 GE_default283;
extern T284 GE_default284;
extern T285 GE_default285;
extern T286 GE_default286;
extern T287 GE_default287;
extern T288 GE_default288;
extern T291 GE_default291;
extern T292 GE_default292;
extern T293 GE_default293;
extern T294 GE_default294;
extern T295 GE_default295;
extern T296 GE_default296;
extern T297 GE_default297;
extern T298 GE_default298;
extern T299 GE_default299;
extern T300 GE_default300;
extern T301 GE_default301;
extern T302 GE_default302;
extern T303 GE_default303;
extern T304 GE_default304;
extern T305 GE_default305;
extern T306 GE_default306;
extern T307 GE_default307;
extern T308 GE_default308;
extern T309 GE_default309;
extern T310 GE_default310;
extern T311 GE_default311;
extern T312 GE_default312;
extern T313 GE_default313;
extern T314 GE_default314;
extern T318 GE_default318;
extern T320 GE_default320;
extern T321 GE_default321;
extern T322 GE_default322;
extern T323 GE_default323;
extern T326 GE_default326;
extern T327 GE_default327;
extern T330 GE_default330;
extern T331 GE_default331;
extern T332 GE_default332;
extern T333 GE_default333;
extern T334 GE_default334;
extern T335 GE_default335;
extern T339 GE_default339;
extern T345 GE_default345;
extern T346 GE_default346;
extern T347 GE_default347;
extern T348 GE_default348;
extern T349 GE_default349;
extern T351 GE_default351;
extern T352 GE_default352;
extern T353 GE_default353;
extern T357 GE_default357;
extern T359 GE_default359;
extern T361 GE_default361;
extern T362 GE_default362;
extern T363 GE_default363;
extern T365 GE_default365;
extern T366 GE_default366;
extern T368 GE_default368;
extern T369 GE_default369;
extern T370 GE_default370;
extern T371 GE_default371;
extern T372 GE_default372;
extern T373 GE_default373;
extern T375 GE_default375;
extern T376 GE_default376;
extern T377 GE_default377;
extern T378 GE_default378;
extern T379 GE_default379;
extern T380 GE_default380;
extern T381 GE_default381;
extern T382 GE_default382;
extern T383 GE_default383;
extern T384 GE_default384;
extern T385 GE_default385;
extern T386 GE_default386;
extern T387 GE_default387;
extern T388 GE_default388;
extern T389 GE_default389;
extern T390 GE_default390;
extern T392 GE_default392;
extern T394 GE_default394;
extern T396 GE_default396;
extern T397 GE_default397;
extern T398 GE_default398;
extern T400 GE_default400;
extern T401 GE_default401;
extern T403 GE_default403;
extern T404 GE_default404;
extern T405 GE_default405;
extern T406 GE_default406;
extern T409 GE_default409;
extern T411 GE_default411;
extern T412 GE_default412;
extern T413 GE_default413;
extern T414 GE_default414;
extern T415 GE_default415;
extern T417 GE_default417;
extern T419 GE_default419;
extern T420 GE_default420;
extern T422 GE_default422;
extern T423 GE_default423;
extern T424 GE_default424;
extern T425 GE_default425;
extern T426 GE_default426;
extern T427 GE_default427;
extern T428 GE_default428;
extern T430 GE_default430;
extern T431 GE_default431;
extern T432 GE_default432;
extern T433 GE_default433;
extern T435 GE_default435;
extern T436 GE_default436;
extern T437 GE_default437;
extern T438 GE_default438;
extern T439 GE_default439;
extern T440 GE_default440;
extern T441 GE_default441;
extern T442 GE_default442;
extern T443 GE_default443;
extern T444 GE_default444;
extern T446 GE_default446;
extern T447 GE_default447;
extern T448 GE_default448;
extern T449 GE_default449;
extern T450 GE_default450;
extern T451 GE_default451;
extern T452 GE_default452;
extern T453 GE_default453;
extern T454 GE_default454;
extern T455 GE_default455;
extern T457 GE_default457;
extern T460 GE_default460;
extern T461 GE_default461;
extern T462 GE_default462;
extern T463 GE_default463;
extern T465 GE_default465;
extern T467 GE_default467;
extern T468 GE_default468;
extern T469 GE_default469;
extern T470 GE_default470;
extern T471 GE_default471;
extern T472 GE_default472;
extern T473 GE_default473;
extern T474 GE_default474;
extern T476 GE_default476;
extern T477 GE_default477;
extern T479 GE_default479;
extern T480 GE_default480;
extern T481 GE_default481;
extern T483 GE_default483;
extern T485 GE_default485;
extern T486 GE_default486;
extern T488 GE_default488;
extern T489 GE_default489;
extern T490 GE_default490;
extern T491 GE_default491;
extern T492 GE_default492;
extern T493 GE_default493;
extern T494 GE_default494;
extern T495 GE_default495;
extern T496 GE_default496;
extern T497 GE_default497;
extern T498 GE_default498;
extern T499 GE_default499;
extern T500 GE_default500;
extern T501 GE_default501;
extern T504 GE_default504;
extern T505 GE_default505;
extern T506 GE_default506;
extern T507 GE_default507;
extern T508 GE_default508;
extern T509 GE_default509;
extern T510 GE_default510;
extern T511 GE_default511;
extern T514 GE_default514;
extern T518 GE_default518;
extern T521 GE_default521;
extern T522 GE_default522;
extern T523 GE_default523;
extern T524 GE_default524;
extern T525 GE_default525;
extern T528 GE_default528;
extern T530 GE_default530;
extern T531 GE_default531;
extern T532 GE_default532;
extern T533 GE_default533;
extern T534 GE_default534;
extern T535 GE_default535;
extern T536 GE_default536;
extern T537 GE_default537;
extern T539 GE_default539;
extern T540 GE_default540;
extern T541 GE_default541;
extern T542 GE_default542;
extern T543 GE_default543;
extern T544 GE_default544;
extern T545 GE_default545;
extern T547 GE_default547;
extern T548 GE_default548;
extern T549 GE_default549;
extern T550 GE_default550;
extern T551 GE_default551;
extern T552 GE_default552;
extern T553 GE_default553;
extern T554 GE_default554;
extern T555 GE_default555;
extern T556 GE_default556;
extern T557 GE_default557;
extern T558 GE_default558;
extern T559 GE_default559;
extern T560 GE_default560;
extern T561 GE_default561;
extern T567 GE_default567;
extern T568 GE_default568;
extern T569 GE_default569;
extern T570 GE_default570;
extern T571 GE_default571;
extern T573 GE_default573;
extern T574 GE_default574;
extern T575 GE_default575;
extern T577 GE_default577;
extern T579 GE_default579;
extern T580 GE_default580;
extern T581 GE_default581;
extern T582 GE_default582;
extern T583 GE_default583;
extern T584 GE_default584;
extern T585 GE_default585;
extern T586 GE_default586;
extern T587 GE_default587;
extern T588 GE_default588;
extern T589 GE_default589;
extern T590 GE_default590;
extern T591 GE_default591;
extern T592 GE_default592;
extern T593 GE_default593;
extern T594 GE_default594;
extern T595 GE_default595;
extern T596 GE_default596;
extern T597 GE_default597;
extern T598 GE_default598;
extern T599 GE_default599;
extern T600 GE_default600;
extern T601 GE_default601;
extern T602 GE_default602;
extern T603 GE_default603;
extern T604 GE_default604;
extern T607 GE_default607;
extern T608 GE_default608;
extern T610 GE_default610;
extern T611 GE_default611;
extern T612 GE_default612;
extern T613 GE_default613;
extern T614 GE_default614;
extern T617 GE_default617;
extern T618 GE_default618;
extern T621 GE_default621;
extern T622 GE_default622;
extern T623 GE_default623;
extern T624 GE_default624;
extern T625 GE_default625;
extern T626 GE_default626;
extern T627 GE_default627;
extern T628 GE_default628;
extern T630 GE_default630;
extern T631 GE_default631;
extern T633 GE_default633;
extern T636 GE_default636;
extern T637 GE_default637;
extern T638 GE_default638;
extern T639 GE_default639;
extern T640 GE_default640;
extern T641 GE_default641;
extern T642 GE_default642;
extern T643 GE_default643;
extern T644 GE_default644;
extern T646 GE_default646;
extern T650 GE_default650;
extern T651 GE_default651;
extern T653 GE_default653;
extern T655 GE_default655;
extern T656 GE_default656;
extern T657 GE_default657;
extern T658 GE_default658;
extern T660 GE_default660;
extern T661 GE_default661;
extern T662 GE_default662;
extern T664 GE_default664;
extern T665 GE_default665;
extern T666 GE_default666;
extern T667 GE_default667;
extern T668 GE_default668;
extern T670 GE_default670;
extern T671 GE_default671;
extern T672 GE_default672;
extern T673 GE_default673;
extern T674 GE_default674;
extern T675 GE_default675;
extern T676 GE_default676;
extern T677 GE_default677;
extern T678 GE_default678;
extern T679 GE_default679;
extern T680 GE_default680;
extern T681 GE_default681;
extern T682 GE_default682;
extern T684 GE_default684;
extern T685 GE_default685;
extern T686 GE_default686;
extern T687 GE_default687;
extern T688 GE_default688;
extern T689 GE_default689;
extern T690 GE_default690;
extern T691 GE_default691;
extern T693 GE_default693;
extern T694 GE_default694;
extern T695 GE_default695;
extern T696 GE_default696;
extern T698 GE_default698;
extern T699 GE_default699;
extern T700 GE_default700;
extern T702 GE_default702;
extern T703 GE_default703;
extern T705 GE_default705;
extern T706 GE_default706;
extern T707 GE_default707;
extern T708 GE_default708;
extern T712 GE_default712;
extern T713 GE_default713;
extern T714 GE_default714;
extern T716 GE_default716;
extern T717 GE_default717;
extern T718 GE_default718;
extern T719 GE_default719;
extern T722 GE_default722;
extern T725 GE_default725;
extern T727 GE_default727;
extern T728 GE_default728;
extern T729 GE_default729;
extern T730 GE_default730;
extern T731 GE_default731;
extern T732 GE_default732;
extern T733 GE_default733;
extern T734 GE_default734;
extern T735 GE_default735;
extern T736 GE_default736;
extern T737 GE_default737;
extern T738 GE_default738;
extern T739 GE_default739;
extern T740 GE_default740;
extern T741 GE_default741;
extern T742 GE_default742;
extern T743 GE_default743;
extern T744 GE_default744;
extern T745 GE_default745;
extern T748 GE_default748;
extern T749 GE_default749;
extern T750 GE_default750;
extern T751 GE_default751;
extern T752 GE_default752;
extern T755 GE_default755;
extern T756 GE_default756;
extern T757 GE_default757;
extern T759 GE_default759;
extern T760 GE_default760;
extern T761 GE_default761;
extern T762 GE_default762;
extern T763 GE_default763;
extern T765 GE_default765;
extern T766 GE_default766;
extern T767 GE_default767;
extern T769 GE_default769;
extern T770 GE_default770;
extern T771 GE_default771;
extern T772 GE_default772;
extern T773 GE_default773;
extern T774 GE_default774;
extern T775 GE_default775;
extern T776 GE_default776;
extern T777 GE_default777;
extern T778 GE_default778;
extern T779 GE_default779;
extern T780 GE_default780;
extern T781 GE_default781;
extern T782 GE_default782;
extern T785 GE_default785;
extern T786 GE_default786;
extern T787 GE_default787;
extern T788 GE_default788;
extern T789 GE_default789;
extern T790 GE_default790;
extern T791 GE_default791;
extern T792 GE_default792;
extern T793 GE_default793;
extern T794 GE_default794;
extern T795 GE_default795;
extern T797 GE_default797;
extern T798 GE_default798;
extern T799 GE_default799;
extern T800 GE_default800;
extern T801 GE_default801;
extern T802 GE_default802;
extern T803 GE_default803;
extern T804 GE_default804;
extern T805 GE_default805;
extern T806 GE_default806;
extern T807 GE_default807;
extern T808 GE_default808;
extern T809 GE_default809;
extern T810 GE_default810;
extern T812 GE_default812;
extern T813 GE_default813;
extern T814 GE_default814;
extern T815 GE_default815;
extern T816 GE_default816;
extern T818 GE_default818;
extern T819 GE_default819;
extern T820 GE_default820;
extern T821 GE_default821;
extern T822 GE_default822;
extern T823 GE_default823;
extern T824 GE_default824;
extern T826 GE_default826;
extern T827 GE_default827;
extern T828 GE_default828;
extern T831 GE_default831;
extern T832 GE_default832;
extern T833 GE_default833;
extern T834 GE_default834;
extern T836 GE_default836;
extern T837 GE_default837;
extern T839 GE_default839;
extern T843 GE_default843;
extern T844 GE_default844;
extern T845 GE_default845;
extern T846 GE_default846;
extern T847 GE_default847;
extern T848 GE_default848;
extern T852 GE_default852;
extern T855 GE_default855;
extern T856 GE_default856;
extern T857 GE_default857;
extern T858 GE_default858;
extern T859 GE_default859;
extern T860 GE_default860;
extern T861 GE_default861;
extern T862 GE_default862;
extern T866 GE_default866;
extern T867 GE_default867;
extern T868 GE_default868;
extern T869 GE_default869;
extern T870 GE_default870;
extern T871 GE_default871;
extern T872 GE_default872;
extern T873 GE_default873;
extern T874 GE_default874;
extern T875 GE_default875;
extern T876 GE_default876;
extern T877 GE_default877;
extern T879 GE_default879;
extern T881 GE_default881;
extern T882 GE_default882;
extern T883 GE_default883;
extern T884 GE_default884;
extern T886 GE_default886;
extern T887 GE_default887;
extern T888 GE_default888;
extern T890 GE_default890;
extern T891 GE_default891;
extern T892 GE_default892;
extern T893 GE_default893;
extern T894 GE_default894;
extern T895 GE_default895;
extern T896 GE_default896;
extern T897 GE_default897;
extern T898 GE_default898;
extern T899 GE_default899;
extern T900 GE_default900;
extern T901 GE_default901;
extern T902 GE_default902;
extern T903 GE_default903;
extern T904 GE_default904;
extern T905 GE_default905;
extern T906 GE_default906;
extern T907 GE_default907;
extern T908 GE_default908;
extern T909 GE_default909;
extern T910 GE_default910;
extern T911 GE_default911;
extern T912 GE_default912;
extern T913 GE_default913;
extern T914 GE_default914;
extern T915 GE_default915;
extern T916 GE_default916;
extern T918 GE_default918;
extern T919 GE_default919;
extern T921 GE_default921;
extern T922 GE_default922;
extern T924 GE_default924;
extern T925 GE_default925;
extern T926 GE_default926;
extern T927 GE_default927;
extern T928 GE_default928;
extern T929 GE_default929;
extern T930 GE_default930;
extern T932 GE_default932;
extern T933 GE_default933;
extern T934 GE_default934;
extern T935 GE_default935;
extern T936 GE_default936;
extern T937 GE_default937;
extern T938 GE_default938;
extern T940 GE_default940;
extern T941 GE_default941;
extern T942 GE_default942;
extern T943 GE_default943;
extern T944 GE_default944;
extern T945 GE_default945;
extern T946 GE_default946;
extern T947 GE_default947;
extern T948 GE_default948;
extern T949 GE_default949;
extern T950 GE_default950;
extern T951 GE_default951;
extern T952 GE_default952;
extern T953 GE_default953;
extern T954 GE_default954;
extern T955 GE_default955;
extern T956 GE_default956;
extern T957 GE_default957;
extern T958 GE_default958;
extern T959 GE_default959;
extern T960 GE_default960;
extern T961 GE_default961;
extern T962 GE_default962;
extern T963 GE_default963;
extern T964 GE_default964;
extern T965 GE_default965;
extern T966 GE_default966;
extern T967 GE_default967;
extern T968 GE_default968;
extern T969 GE_default969;
extern T970 GE_default970;
extern T971 GE_default971;
extern T972 GE_default972;
extern T974 GE_default974;
extern T975 GE_default975;
extern T976 GE_default976;
extern T977 GE_default977;
extern T978 GE_default978;
extern T979 GE_default979;
extern T980 GE_default980;
extern T981 GE_default981;
extern T982 GE_default982;
extern T984 GE_default984;
extern T985 GE_default985;
extern T986 GE_default986;
extern T987 GE_default987;
extern T988 GE_default988;
extern T989 GE_default989;
extern T990 GE_default990;
extern T991 GE_default991;
extern T992 GE_default992;
extern T993 GE_default993;
extern T994 GE_default994;
extern T995 GE_default995;
extern T996 GE_default996;
extern T997 GE_default997;
extern T999 GE_default999;
extern T1000 GE_default1000;
extern T1002 GE_default1002;
extern T1003 GE_default1003;
extern T1005 GE_default1005;
extern T1006 GE_default1006;
extern T1007 GE_default1007;
extern T1008 GE_default1008;
extern T1009 GE_default1009;
extern T1010 GE_default1010;
extern T1011 GE_default1011;
extern T1012 GE_default1012;
extern T1013 GE_default1013;
extern T1014 GE_default1014;
extern T1015 GE_default1015;
extern T1016 GE_default1016;
extern T1017 GE_default1017;
extern T1018 GE_default1018;
extern T1020 GE_default1020;
extern T1021 GE_default1021;
extern T1023 GE_default1023;
extern T1024 GE_default1024;
extern T1025 GE_default1025;
extern T1026 GE_default1026;
extern T1027 GE_default1027;
extern T1028 GE_default1028;
extern T1029 GE_default1029;
extern T1030 GE_default1030;
extern T1032 GE_default1032;
extern T1033 GE_default1033;
extern T1035 GE_default1035;
extern T1036 GE_default1036;
extern T1038 GE_default1038;
extern T1039 GE_default1039;
extern T1040 GE_default1040;
extern T1041 GE_default1041;
extern T1042 GE_default1042;
extern T1043 GE_default1043;
extern T1044 GE_default1044;
extern T1045 GE_default1045;
extern T1046 GE_default1046;
extern T1047 GE_default1047;
extern T1048 GE_default1048;
extern T1049 GE_default1049;
extern T1050 GE_default1050;
extern T1051 GE_default1051;
extern T1052 GE_default1052;
extern T1053 GE_default1053;
extern T1054 GE_default1054;
extern T1055 GE_default1055;
extern T1056 GE_default1056;
extern T1057 GE_default1057;
extern T1058 GE_default1058;
extern T1060 GE_default1060;
extern T1061 GE_default1061;
extern T1062 GE_default1062;
extern T1063 GE_default1063;
extern T1064 GE_default1064;
extern T1065 GE_default1065;
extern T1067 GE_default1067;
extern T1068 GE_default1068;
extern T1069 GE_default1069;
extern T1070 GE_default1070;
extern T1071 GE_default1071;
extern T1072 GE_default1072;
extern T1073 GE_default1073;
extern T1074 GE_default1074;
extern T1075 GE_default1075;
extern T1076 GE_default1076;
extern T1077 GE_default1077;
extern T1078 GE_default1078;
extern T1079 GE_default1079;
extern T1081 GE_default1081;
extern T1082 GE_default1082;
extern T1083 GE_default1083;
extern T1084 GE_default1084;
extern T1086 GE_default1086;
extern T1087 GE_default1087;
extern T1088 GE_default1088;
extern T1089 GE_default1089;
extern T1090 GE_default1090;
extern T1091 GE_default1091;
extern T1092 GE_default1092;
extern T1094 GE_default1094;
extern T1095 GE_default1095;
extern T1096 GE_default1096;
extern T1097 GE_default1097;
extern T1098 GE_default1098;
extern T1099 GE_default1099;
extern T1100 GE_default1100;
extern T1102 GE_default1102;
extern T1103 GE_default1103;
extern T1105 GE_default1105;
extern T1106 GE_default1106;
extern T1108 GE_default1108;
extern T1109 GE_default1109;
extern T1111 GE_default1111;
extern T1112 GE_default1112;
extern T1114 GE_default1114;
extern T1115 GE_default1115;
extern T1116 GE_default1116;
extern T1117 GE_default1117;
extern T1118 GE_default1118;
extern T1120 GE_default1120;
extern T1121 GE_default1121;
extern T1122 GE_default1122;
extern T1123 GE_default1123;
extern T1124 GE_default1124;
extern T1125 GE_default1125;
extern T1127 GE_default1127;
extern T1128 GE_default1128;
extern T1129 GE_default1129;
extern T1130 GE_default1130;
extern T1131 GE_default1131;
extern T1133 GE_default1133;
extern T1134 GE_default1134;
extern T1135 GE_default1135;
extern T1136 GE_default1136;
extern T1137 GE_default1137;
extern T1138 GE_default1138;
extern T1139 GE_default1139;
extern T1140 GE_default1140;
extern T1141 GE_default1141;
extern T1142 GE_default1142;
extern T1144 GE_default1144;
extern T1145 GE_default1145;
extern T1146 GE_default1146;
extern T1147 GE_default1147;
extern T1148 GE_default1148;
extern T1149 GE_default1149;
extern T1150 GE_default1150;
extern T1152 GE_default1152;
extern T1153 GE_default1153;
extern T1154 GE_default1154;
extern T1155 GE_default1155;
extern T1156 GE_default1156;
extern T1157 GE_default1157;
extern T1158 GE_default1158;
extern T1159 GE_default1159;
extern T1160 GE_default1160;
extern T1161 GE_default1161;
extern T1162 GE_default1162;
extern T1163 GE_default1163;
extern T1164 GE_default1164;
extern T1166 GE_default1166;
extern T1167 GE_default1167;
extern T1169 GE_default1169;
extern T1170 GE_default1170;
extern T1171 GE_default1171;
extern T1172 GE_default1172;
extern T1173 GE_default1173;
extern T1174 GE_default1174;
extern T1175 GE_default1175;
extern T1176 GE_default1176;
extern T1177 GE_default1177;
extern T1178 GE_default1178;
extern T1180 GE_default1180;
extern T1181 GE_default1181;
extern T1183 GE_default1183;
extern T1184 GE_default1184;
extern T1185 GE_default1185;
extern T1186 GE_default1186;
extern T1187 GE_default1187;
extern T1188 GE_default1188;
extern T1189 GE_default1189;
extern T1190 GE_default1190;
extern T1191 GE_default1191;
extern T1192 GE_default1192;
extern T1193 GE_default1193;
extern T1194 GE_default1194;
extern T1197 GE_default1197;
extern T1198 GE_default1198;
extern T1199 GE_default1199;
extern T1200 GE_default1200;
extern T1201 GE_default1201;
extern T1202 GE_default1202;
extern T1203 GE_default1203;
extern T1204 GE_default1204;
extern T1205 GE_default1205;
extern T1206 GE_default1206;
extern T1207 GE_default1207;
extern T1208 GE_default1208;
extern T1210 GE_default1210;
extern T1211 GE_default1211;
extern T1212 GE_default1212;
extern T1213 GE_default1213;
extern T1217 GE_default1217;
extern T1218 GE_default1218;
extern T1219 GE_default1219;
extern T1220 GE_default1220;
extern T1221 GE_default1221;
extern T1222 GE_default1222;
extern T1223 GE_default1223;
extern T1224 GE_default1224;
extern T1225 GE_default1225;
extern T1226 GE_default1226;
extern T1227 GE_default1227;
extern T1229 GE_default1229;
extern T1230 GE_default1230;
extern T1232 GE_default1232;
extern T1233 GE_default1233;
extern T1234 GE_default1234;
extern T1236 GE_default1236;
extern T1237 GE_default1237;
extern T1238 GE_default1238;
extern T1239 GE_default1239;
extern T1240 GE_default1240;
extern T1241 GE_default1241;
extern T1242 GE_default1242;
extern T1245 GE_default1245;
extern T1247 GE_default1247;
extern T1248 GE_default1248;
extern T1249 GE_default1249;
extern T1250 GE_default1250;
extern T1251 GE_default1251;
extern T1252 GE_default1252;
extern T1253 GE_default1253;
extern T1254 GE_default1254;
extern T1255 GE_default1255;
extern T1256 GE_default1256;
extern T1257 GE_default1257;
extern T1258 GE_default1258;
extern T1260 GE_default1260;
extern T1261 GE_default1261;
extern T1262 GE_default1262;
extern T1263 GE_default1263;
extern T1264 GE_default1264;
extern T1265 GE_default1265;
extern T1266 GE_default1266;
extern T1267 GE_default1267;
extern T1268 GE_default1268;
extern T1269 GE_default1269;
extern T1270 GE_default1270;
extern T1271 GE_default1271;
extern T1272 GE_default1272;
extern T1273 GE_default1273;
extern T1274 GE_default1274;
extern T1275 GE_default1275;
extern T1276 GE_default1276;
extern T1277 GE_default1277;
extern T1278 GE_default1278;
extern T1279 GE_default1279;
extern T1280 GE_default1280;
extern T1281 GE_default1281;
extern T1283 GE_default1283;
extern T1284 GE_default1284;
extern T1285 GE_default1285;
extern T1286 GE_default1286;
extern T1287 GE_default1287;
extern T1288 GE_default1288;
extern T1289 GE_default1289;
extern T1290 GE_default1290;
extern T1292 GE_default1292;
extern T1293 GE_default1293;
extern T1295 GE_default1295;
extern T1296 GE_default1296;
extern T1297 GE_default1297;
extern T1298 GE_default1298;
extern T1299 GE_default1299;
extern T1300 GE_default1300;
extern T1301 GE_default1301;
extern T1302 GE_default1302;
extern T1303 GE_default1303;
extern T1304 GE_default1304;
extern T1305 GE_default1305;
extern T1306 GE_default1306;
extern T1307 GE_default1307;
extern T1308 GE_default1308;
extern T1309 GE_default1309;
extern T1310 GE_default1310;
extern T1311 GE_default1311;
extern T1313 GE_default1313;
extern T1314 GE_default1314;
extern T1315 GE_default1315;
extern T1316 GE_default1316;
extern T1317 GE_default1317;
extern T1319 GE_default1319;
extern T1321 GE_default1321;
extern T1322 GE_default1322;
extern T1323 GE_default1323;
extern T1324 GE_default1324;
extern T1325 GE_default1325;
extern T1327 GE_default1327;
extern T1328 GE_default1328;
extern T1330 GE_default1330;
extern T1331 GE_default1331;
extern T1332 GE_default1332;
extern T1333 GE_default1333;
extern T1334 GE_default1334;
extern T1335 GE_default1335;
extern T1336 GE_default1336;
extern T1337 GE_default1337;
extern T1338 GE_default1338;
extern T1339 GE_default1339;
extern T1341 GE_default1341;
extern T1342 GE_default1342;
extern T1344 GE_default1344;
extern T1345 GE_default1345;
extern T1346 GE_default1346;
extern T1347 GE_default1347;
extern T1348 GE_default1348;
extern T1349 GE_default1349;
extern T1350 GE_default1350;
extern T1351 GE_default1351;
extern T1352 GE_default1352;
extern T1353 GE_default1353;
extern T1356 GE_default1356;
extern T1357 GE_default1357;
extern T1358 GE_default1358;
extern T1359 GE_default1359;
extern T1360 GE_default1360;
extern T1361 GE_default1361;
extern T1362 GE_default1362;
extern T1363 GE_default1363;
extern T1364 GE_default1364;
extern T1365 GE_default1365;
extern T1366 GE_default1366;
extern T1367 GE_default1367;
extern T1368 GE_default1368;
extern T1369 GE_default1369;
extern T1370 GE_default1370;
extern T1371 GE_default1371;
extern T1372 GE_default1372;
extern T1373 GE_default1373;
extern T1374 GE_default1374;
extern T1375 GE_default1375;
extern T1376 GE_default1376;
extern T1377 GE_default1377;
extern T1378 GE_default1378;
extern T1379 GE_default1379;
extern T1380 GE_default1380;
extern T1381 GE_default1381;
extern T1383 GE_default1383;
extern T1384 GE_default1384;
extern T1385 GE_default1385;
extern T1386 GE_default1386;
extern T1389 GE_default1389;
extern T1390 GE_default1390;
extern T1392 GE_default1392;
extern T1395 GE_default1395;
extern T1396 GE_default1396;
extern T1397 GE_default1397;
extern T1398 GE_default1398;
extern T1399 GE_default1399;
extern T1400 GE_default1400;
extern T1401 GE_default1401;
extern T1404 GE_default1404;
extern T1405 GE_default1405;
extern T1406 GE_default1406;
extern T1407 GE_default1407;
extern T1409 GE_default1409;
extern T1410 GE_default1410;
extern T1411 GE_default1411;
extern T1412 GE_default1412;
extern T1413 GE_default1413;
extern T1414 GE_default1414;
extern T1415 GE_default1415;
extern T1416 GE_default1416;
extern T1422 GE_default1422;
extern T1423 GE_default1423;
extern T1424 GE_default1424;
extern T1425 GE_default1425;
extern T1426 GE_default1426;
extern T1427 GE_default1427;
extern T1428 GE_default1428;
extern T1430 GE_default1430;
extern T1431 GE_default1431;
extern T1439 GE_default1439;
extern T1440 GE_default1440;
extern T1443 GE_default1443;
extern T1444 GE_default1444;
extern T1445 GE_default1445;
extern T1446 GE_default1446;
extern T1447 GE_default1447;
extern T1448 GE_default1448;
extern T1449 GE_default1449;
extern T1450 GE_default1450;
extern T1451 GE_default1451;
extern T1452 GE_default1452;
extern T1453 GE_default1453;
extern T1454 GE_default1454;
extern T1455 GE_default1455;
extern T1456 GE_default1456;
extern T1457 GE_default1457;
extern T1462 GE_default1462;
extern T1463 GE_default1463;
extern T1464 GE_default1464;
extern T1465 GE_default1465;
extern T1466 GE_default1466;
extern T1467 GE_default1467;
extern T1468 GE_default1468;
extern T1470 GE_default1470;
extern T1471 GE_default1471;
extern T1472 GE_default1472;
extern T1473 GE_default1473;
extern T1474 GE_default1474;
extern T1475 GE_default1475;
extern T1477 GE_default1477;
extern T1479 GE_default1479;
extern T1480 GE_default1480;
extern T1481 GE_default1481;
extern T1482 GE_default1482;
extern T1483 GE_default1483;
extern T1484 GE_default1484;
extern T1485 GE_default1485;
extern T1486 GE_default1486;
extern T1487 GE_default1487;
extern T1488 GE_default1488;
extern T1489 GE_default1489;
extern T1492 GE_default1492;
extern T1493 GE_default1493;
extern T1494 GE_default1494;
extern T1495 GE_default1495;
extern T1498 GE_default1498;
extern T1500 GE_default1500;
extern T1501 GE_default1501;
extern T1502 GE_default1502;
extern T1503 GE_default1503;
extern T1505 GE_default1505;
extern T1506 GE_default1506;
extern T1507 GE_default1507;
extern T1508 GE_default1508;
extern T1509 GE_default1509;
extern T1511 GE_default1511;
extern T1512 GE_default1512;
extern T1513 GE_default1513;
extern T1514 GE_default1514;
extern T1515 GE_default1515;
extern T1518 GE_default1518;
extern T1519 GE_default1519;
extern T1520 GE_default1520;
extern T1521 GE_default1521;
extern T1522 GE_default1522;
extern T1524 GE_default1524;
extern T1526 GE_default1526;
extern T1527 GE_default1527;
extern T1528 GE_default1528;
extern T1529 GE_default1529;
extern T1530 GE_default1530;
extern T1531 GE_default1531;
extern T1533 GE_default1533;
extern T1534 GE_default1534;
extern T1535 GE_default1535;
extern T1537 GE_default1537;
extern T1538 GE_default1538;
extern T1539 GE_default1539;
extern T1540 GE_default1540;
extern T1542 GE_default1542;
extern T1543 GE_default1543;
extern T1544 GE_default1544;
extern T1545 GE_default1545;
extern T1546 GE_default1546;
extern T1547 GE_default1547;
extern T1548 GE_default1548;
extern T1549 GE_default1549;
extern T1550 GE_default1550;
extern T1551 GE_default1551;
extern T1552 GE_default1552;
extern T1553 GE_default1553;
extern T1556 GE_default1556;
extern T1557 GE_default1557;
extern T1563 GE_default1563;
extern T1564 GE_default1564;
extern T1565 GE_default1565;
extern T1567 GE_default1567;
extern T1569 GE_default1569;
extern T1571 GE_default1571;
extern T1572 GE_default1572;
extern T1577 GE_default1577;
extern T1578 GE_default1578;
extern T1579 GE_default1579;
extern T1581 GE_default1581;
extern T1582 GE_default1582;
extern T1584 GE_default1584;
extern T1585 GE_default1585;
extern T1588 GE_default1588;
extern T1589 GE_default1589;
extern T1590 GE_default1590;
extern T1591 GE_default1591;
extern T1593 GE_default1593;
extern T1594 GE_default1594;
extern T1598 GE_default1598;
extern T1608 GE_default1608;
extern T1611 GE_default1611;
extern T1612 GE_default1612;
extern T1613 GE_default1613;
extern T1614 GE_default1614;
extern T1615 GE_default1615;
extern T1616 GE_default1616;
extern T1617 GE_default1617;
extern T1618 GE_default1618;
extern T1619 GE_default1619;
extern T1620 GE_default1620;
extern T1621 GE_default1621;
extern T1622 GE_default1622;
extern T1623 GE_default1623;
extern T1624 GE_default1624;
extern T1625 GE_default1625;
extern T1626 GE_default1626;
extern T1627 GE_default1627;
extern T1628 GE_default1628;
extern T1629 GE_default1629;
extern T1630 GE_default1630;
extern T1631 GE_default1631;
extern T1632 GE_default1632;
extern T1633 GE_default1633;
extern T1634 GE_default1634;
extern T1635 GE_default1635;
extern T1636 GE_default1636;
extern T1637 GE_default1637;
extern T1638 GE_default1638;
extern T1639 GE_default1639;
extern T1640 GE_default1640;
extern T1641 GE_default1641;
extern T1642 GE_default1642;
extern T1643 GE_default1643;
extern T1644 GE_default1644;
extern T1645 GE_default1645;
extern T1647 GE_default1647;
extern T1650 GE_default1650;
extern T1651 GE_default1651;
extern T1652 GE_default1652;
extern T1653 GE_default1653;
extern T1654 GE_default1654;
extern T1655 GE_default1655;
extern T1656 GE_default1656;
extern T1661 GE_default1661;
extern T1662 GE_default1662;
extern T1663 GE_default1663;
extern T1664 GE_default1664;
extern T1665 GE_default1665;
extern T1668 GE_default1668;
extern T1669 GE_default1669;
extern T1670 GE_default1670;
extern T1672 GE_default1672;
extern T1673 GE_default1673;
extern T1674 GE_default1674;
extern T1675 GE_default1675;
extern T1676 GE_default1676;
extern T1677 GE_default1677;
extern T1678 GE_default1678;
extern T1679 GE_default1679;
extern T1680 GE_default1680;
extern T1681 GE_default1681;
extern T1684 GE_default1684;
extern T1685 GE_default1685;
extern T1686 GE_default1686;
extern T1687 GE_default1687;
extern T1688 GE_default1688;
extern T1689 GE_default1689;
extern T1690 GE_default1690;
extern T1693 GE_default1693;
extern T1696 GE_default1696;
extern T1697 GE_default1697;
extern T1698 GE_default1698;
extern T1703 GE_default1703;
extern T1704 GE_default1704;
extern T1708 GE_default1708;
extern T1711 GE_default1711;
extern T1715 GE_default1715;
extern T1723 GE_default1723;
extern T1726 GE_default1726;
extern T1731 GE_default1731;
extern T1732 GE_default1732;
extern T1733 GE_default1733;
extern T1734 GE_default1734;
extern T1735 GE_default1735;
extern T1736 GE_default1736;
extern T1737 GE_default1737;
extern T1738 GE_default1738;
extern T1739 GE_default1739;
extern T1740 GE_default1740;
extern T1741 GE_default1741;
extern T1742 GE_default1742;
extern T1743 GE_default1743;
extern T1744 GE_default1744;
extern T1745 GE_default1745;
extern T1746 GE_default1746;
extern T1747 GE_default1747;
extern T1748 GE_default1748;
extern T1749 GE_default1749;
extern T1750 GE_default1750;
extern T1751 GE_default1751;
extern T1752 GE_default1752;
extern T1753 GE_default1753;
extern T1754 GE_default1754;
extern T1755 GE_default1755;
extern T1756 GE_default1756;
extern T1757 GE_default1757;
extern T1758 GE_default1758;
extern T1759 GE_default1759;
extern T1760 GE_default1760;
extern T1761 GE_default1761;
extern T1762 GE_default1762;
extern T1763 GE_default1763;
extern T1764 GE_default1764;
extern T1765 GE_default1765;
extern T1766 GE_default1766;
extern T1768 GE_default1768;
extern T1770 GE_default1770;
extern T1771 GE_default1771;
extern T1773 GE_default1773;
extern T1776 GE_default1776;
extern T1791 GE_default1791;
extern T1796 GE_default1796;
extern T1797 GE_default1797;
extern T1804 GE_default1804;
extern T1805 GE_default1805;
extern T1806 GE_default1806;
extern T1807 GE_default1807;
extern T1808 GE_default1808;
extern T1809 GE_default1809;
extern T1810 GE_default1810;
extern T1811 GE_default1811;
extern T1815 GE_default1815;
extern T1818 GE_default1818;
extern T1820 GE_default1820;
extern T1821 GE_default1821;
extern T1822 GE_default1822;
extern T1823 GE_default1823;
extern T1824 GE_default1824;
extern T1825 GE_default1825;
extern T1828 GE_default1828;
extern T1830 GE_default1830;
extern T1832 GE_default1832;
extern T1833 GE_default1833;
extern T1834 GE_default1834;
extern T1835 GE_default1835;
extern T1837 GE_default1837;
extern T1838 GE_default1838;
extern T1840 GE_default1840;
extern T1842 GE_default1842;
extern T1844 GE_default1844;
extern T1845 GE_default1845;
extern T1847 GE_default1847;
extern T1848 GE_default1848;
extern T1849 GE_default1849;
extern T1850 GE_default1850;
extern T1851 GE_default1851;
extern T1852 GE_default1852;
extern T1853 GE_default1853;
extern T1855 GE_default1855;
extern T1858 GE_default1858;
extern T1859 GE_default1859;
extern T1860 GE_default1860;
extern T1861 GE_default1861;
extern T1862 GE_default1862;
extern T1867 GE_default1867;
extern T1870 GE_default1870;
extern T1872 GE_default1872;
extern T1873 GE_default1873;
extern T1876 GE_default1876;
extern T1879 GE_default1879;
extern T1880 GE_default1880;
extern T1881 GE_default1881;
extern T1882 GE_default1882;
extern T1883 GE_default1883;
extern T1884 GE_default1884;
extern T1885 GE_default1885;
extern T1886 GE_default1886;
extern T1887 GE_default1887;
extern T1888 GE_default1888;
extern T1889 GE_default1889;
extern T1890 GE_default1890;
extern T1891 GE_default1891;
extern T1892 GE_default1892;
extern T1895 GE_default1895;

extern T0* GE_ms8(const char *s, T6 c);
extern T0* GE_ms32(char* s, T6 c);
/* Call to ANY.same_type */
extern T1 T20x27T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.is_equal_seed */
extern T6 T33x3293(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.error_handler */
extern T0* T33x3288(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.feature_flattener */
extern T0* T33x3418(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.ancestor_builder */
extern T0* T33x3417(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.interface_checker */
extern T0* T33x3419(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.default_create_seed */
extern T6 T33x3291(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.detachable_any_type */
extern T0* T33x3525(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.is_ise */
extern T1 T33x3396(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.ise_version */
extern T0* T33x3397(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.is_dotnet */
extern T1 T33x3285(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_type */
extern T0* T33x3524(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.array_detachable_any_type */
extern T0* T33x3530(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.array_like_current_type */
extern T0* T33x3531(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.array_any_type */
extern T0* T33x3529(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.detachable_none_type */
extern T0* T33x3554(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.iteration_cursor_forth_seed */
extern T6 T33x3299(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.iteration_cursor_after_seed */
extern T6 T33x3298(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.iterable_new_cursor_seed */
extern T6 T33x3297(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.routine_call_seed */
extern T6 T33x3295(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.character_32_type */
extern T0* T33x3535(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.unknown_builtin_reported */
extern T1 T33x3377(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_clients */
extern T0* T33x3528(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.eiffel_parser */
extern T0* T33x3413(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.copy_seed */
extern T6 T33x3292(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.function_item_seed */
extern T6 T33x3296(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.older_or_same_ise_version */
extern T1 T33x3399T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.qualified_anchored_types_cycle_detection_enabled */
extern T1 T33x3350(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.real_32_type */
extern T0* T33x3559(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.string_32_type */
extern T0* T33x3566(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.registered_feature_count */
extern T6 T33x3312(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_parent */
extern T0* T33x3526(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_reference_keyword */
extern T1 T33x3345(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_note_keyword */
extern T1 T33x3344(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_detachable_keyword */
extern T1 T33x3343(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_attribute_keyword */
extern T1 T33x3342(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.ast_factory */
extern T0* T33x3289(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_attached_keyword */
extern T1 T33x3341(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.flat_implementation_checker */
extern T0* T33x3421(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.implementation_checker */
extern T0* T33x3420(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.alias_transition_mode */
extern T1 T33x3325(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.preparse_shallow_mode */
extern T1 T33x3352(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.preparse_readonly_mode */
extern T1 T33x3355(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.preparse_override_mode */
extern T1 T33x3356(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.system_object_parents */
extern T0* T33x3568(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_parents */
extern T0* T33x3527(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_cluster_dependence_pathnames */
extern T1 T33x3348(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.cluster_dependence_enabled */
extern T1 T33x3347(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.providers_enabled */
extern T1 T33x3346(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.preparse_multiple_mode */
extern T1 T33x3354(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.qualified_anchored_types_enabled */
extern T1 T33x3349(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.dotnet_assembly_consumer */
extern T0* T33x3415(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.type_any_type */
extern T0* T33x3574(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.dispose_seed */
extern T6 T33x3294(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.console_application_mode */
extern T1 T33x3321(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.exception_trace_mode */
extern T1 T33x3323(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.trace_mode */
extern T1 T33x3324(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.multithreaded_mode */
extern T1 T33x3322(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_object_pathnames */
extern T0* T33x3329(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_library_pathnames */
extern T0* T33x3330(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_include_pathnames */
extern T0* T33x3328(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_boehm_gc */
extern T1 T33x3326(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.stop_requested */
extern T1 T33x3434(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.universe */
extern T0* T33x3707(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.ise_exception_manager_type */
extern T0* T33x3546(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.boolean_type */
extern T0* T33x3532(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.detachable_tuple_type */
extern T0* T33x3571(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.routine_type */
extern T0* T33x3561(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.pointer_type */
extern T0* T33x3555(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.typed_pointer_any_type */
extern T0* T33x3582(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.special_any_type */
extern T0* T33x3562(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.string_8_type */
extern T0* T33x3565(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.character_8_type */
extern T0* T33x3534(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.real_64_type */
extern T0* T33x3560(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_64_type */
extern T0* T33x3552(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_32_type */
extern T0* T33x3551(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_16_type */
extern T0* T33x3550(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_8_type */
extern T0* T33x3549(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_64_type */
extern T0* T33x3545(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_32_type */
extern T0* T33x3544(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_16_type */
extern T0* T33x3543(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_8_type */
extern T0* T33x3542(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.root_creation */
extern T0* T33x3287(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.none_type */
extern T0* T33x3553(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.root_type */
extern T0* T33x3286(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.stop_request */
extern T0* T33x3435(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.master_classes */
extern T0* T33x3500(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.system_name */
extern T0* T33x3327(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.name */
extern T0* T35x2410(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_to_string */
extern T6 T35x2399T0T6T6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* Call to KI_CHARACTER_INPUT_STREAM.is_closable */
extern T1 T35x2405(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.end_of_input */
extern T1 T35x2408(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.last_character */
extern T2 T35x2411(GE_context* ac, T0* C);
/* Call to AP_OPTION.short_form */
extern T2 T47x4760(GE_context* ac, T0* C);
/* Call to AP_OPTION.long_form */
extern T0* T47x4755(GE_context* ac, T0* C);
/* Call to AP_OPTION.description */
extern T0* T47x4753(GE_context* ac, T0* C);
/* Call to AP_OPTION.names */
extern T0* T47x4757(GE_context* ac, T0* C);
/* Call to AP_OPTION.is_hidden */
extern T1 T47x4764(GE_context* ac, T0* C);
/* Call to AP_OPTION.example */
extern T0* T47x4754(GE_context* ac, T0* C);
/* Call to AP_OPTION.name */
extern T0* T47x4756(GE_context* ac, T0* C);
/* Call to AP_OPTION.needs_parameter */
extern T1 T47x4766(GE_context* ac, T0* C);
/* Call to AP_OPTION.has_short_form */
extern T1 T47x4763(GE_context* ac, T0* C);
/* Call to AP_OPTION.allows_parameter */
extern T1 T47x4761(GE_context* ac, T0* C);
/* Call to AP_OPTION.maximum_occurrences */
extern T6 T47x4759(GE_context* ac, T0* C);
/* Call to AP_OPTION.occurrences */
extern T6 T47x4758(GE_context* ac, T0* C);
/* Call to AP_OPTION.was_found */
extern T1 T47x4768(GE_context* ac, T0* C);
/* Call to AP_OPTION.is_mandatory */
extern T1 T47x4765(GE_context* ac, T0* C);
/* Call to UT_ERROR.default_message */
extern T0* T51x4884(GE_context* ac, T0* C);
/* Call to detachable KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T58x5902T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_to_type */
extern T1 T73x7361T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.same_base_type_with_type_marks */
extern T1 T73x7345T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.base_type_index_of_label */
extern T6 T73x7311T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.base_class */
extern T0* T73x7415(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.base_type_actual */
extern T0* T73x7309T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.index_of_label */
extern T6 T73x7243T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.is_type_attached_with_type_mark */
extern T1 T73x7329T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_reference_with_type_mark */
extern T1 T73x7327T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T73x7365T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T73x7355T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_base_bit_type_with_type_marks */
extern T1 T73x7357T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_named_bit_type_with_type_marks */
extern T1 T73x7353T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.conforms_from_bit_type_with_type_marks */
extern T1 T73x7363T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.actual_parameters */
extern T0* T73x7238(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.to_text */
extern T0* T73x7374(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.type_with_type_mark */
extern T0* T73x7318T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.conforms_to_type_with_type_marks */
extern T1 T73x7362T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.named_base_class */
extern T0* T73x7416(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.actual_parameter_count */
extern T6 T73x7246(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.shallow_named_type_with_type_mark */
extern T0* T73x7315T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.shallow_base_type_with_type_mark */
extern T0* T73x7308T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_detachable_with_type_mark */
extern T1 T73x7331T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_expanded_with_type_mark */
extern T1 T73x7325T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T73x7366T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T73x7364T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T73x7360T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_base_class_type_with_type_marks */
extern T1 T73x7358T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.unaliased_to_text */
extern T0* T73x7376(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.base_type_with_type_mark */
extern T0* T73x7306T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.base_type_actual_count */
extern T6 T73x7320T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T73x7356T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_named_class_type_with_type_marks */
extern T1 T73x7354T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.named_type_with_type_mark */
extern T0* T73x7313T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.same_named_type_with_type_marks */
extern T1 T73x7343T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.is_expanded */
extern T1 T73x7250(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.same_as_base_class */
extern T1 T73x7255(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.same_base_type */
extern T1 T73x7344T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.same_named_type */
extern T1 T73x7342T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to READABLE_STRING_GENERAL.code */
extern T10 T102x404T6(GE_context* ac, T0* C, T6 a1);
/* Call to READABLE_STRING_GENERAL.count */
extern T6 T102x442(GE_context* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.substring */
extern T0* T102x483T6T6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* Call to READABLE_STRING_GENERAL.item */
extern T3 T102x405T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_POSITION.column */
extern T6 T186x12543(GE_context* ac, T0* C);
/* Call to ET_POSITION.line */
extern T6 T186x12542(GE_context* ac, T0* C);
/* Call to ET_POSITION.is_null */
extern T1 T186x12544(GE_context* ac, T0* C);
/* Call to ET_POSITION.to_text */
extern T0* T186x12548(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_DOTNET_ASSEMBLY.dotnet_assembly */
extern T0* T199x3707(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T239x16630T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T239x16656T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.is_basic */
extern T1 T239x16625(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_expanded */
extern T1 T239x16678(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.base_type */
extern T0* T239x16634(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T239x16623(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T239x16657T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.base_class */
extern T0* T239x16635(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T239x16654T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T239x16655T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.queries */
extern T0* T239x16652(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.attribute_count */
extern T6 T239x16648(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.id */
extern T6 T239x16643(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_special */
extern T1 T239x16624(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_builtin_attribute */
extern T1 T239x16659T0T6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* Call to ET_DYNAMIC_TYPE.meta_type */
extern T0* T239x16636(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.has_nested_reference_attributes */
extern T1 T239x16650(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.hash_code */
extern T6 T239x22(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_generic */
extern T1 T239x16622(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_alive */
extern T1 T239x16618(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.next_type */
extern T0* T239x16672(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.procedure_calls */
extern T0* T239x16662(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.query_calls */
extern T0* T239x16661(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.procedures */
extern T0* T239x16653(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.static_type */
extern T0* T239x16683(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.has_static */
extern T1 T239x16626(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.last_leaf */
extern T0* T245x7384(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_tuple_label */
extern T1 T245x15623(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.name */
extern T0* T245x15614(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.lower_name */
extern T0* T245x15615(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.position */
extern T0* T245x7380(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.seed */
extern T6 T245x15616(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.across_cursor_name */
extern T0* T245x15659(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_across_cursor */
extern T1 T245x15621(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.object_test_local_name */
extern T0* T245x15658(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_object_test_local */
extern T1 T245x15620(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.local_name */
extern T0* T245x15656(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_local */
extern T1 T245x15619(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.argument_name */
extern T0* T245x15657(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_argument */
extern T1 T245x15622(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.same_feature_name */
extern T1 T245x15612T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.first_leaf */
extern T0* T245x7383(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.hash_code */
extern T6 T245x22(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_prefix */
extern T1 T245x15645(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_infix */
extern T1 T245x15625(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.hash_code */
extern T6 T246x22(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_exported_to */
extern T1 T246x17557T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.first_seed */
extern T6 T246x17597(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_creation_exported_to */
extern T1 T246x17559T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_PROCEDURE.arguments_count */
extern T6 T246x17556(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.arguments */
extern T0* T246x17596(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.overloaded_alias_name */
extern T0* T246x17516(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.alias_name */
extern T0* T246x17512(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.overloaded_name */
extern T0* T246x17515(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.name */
extern T0* T246x17594(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_parenthesisable */
extern T1 T246x17550(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_frozen */
extern T1 T246x17536(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_deferred */
extern T1 T246x17537(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.has_seed */
extern T1 T246x17592T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_PROCEDURE.implementation_class */
extern T0* T246x17608(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.new_synonym */
extern T0* T246x17580T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.postconditions */
extern T0* T246x17622(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.preconditions */
extern T0* T246x17621(GE_context* ac, T0* C);
/* Call to ET_QUERY.lower_name */
extern T0* T247x17606(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_attribute */
extern T1 T247x17540(GE_context* ac, T0* C);
/* Call to ET_QUERY.hash_code */
extern T6 T247x22(GE_context* ac, T0* C);
/* Call to ET_QUERY.type */
extern T0* T247x17595(GE_context* ac, T0* C);
/* Call to ET_QUERY.first_seed */
extern T6 T247x17597(GE_context* ac, T0* C);
/* Call to ET_QUERY.assigner */
extern T0* T247x17662(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_exported_to */
extern T1 T247x17557T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.overloaded_alias_name */
extern T0* T247x17516(GE_context* ac, T0* C);
/* Call to ET_QUERY.alias_name */
extern T0* T247x17512(GE_context* ac, T0* C);
/* Call to ET_QUERY.overloaded_name */
extern T0* T247x17515(GE_context* ac, T0* C);
/* Call to ET_QUERY.name */
extern T0* T247x17594(GE_context* ac, T0* C);
/* Call to ET_QUERY.arguments */
extern T0* T247x17596(GE_context* ac, T0* C);
/* Call to ET_QUERY.arguments_count */
extern T6 T247x17556(GE_context* ac, T0* C);
/* Call to ET_QUERY.has_seed */
extern T1 T247x17592T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_QUERY.implementation_feature */
extern T0* T247x17625(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_unique_attribute */
extern T1 T247x17542(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_constant_attribute */
extern T1 T247x17541(GE_context* ac, T0* C);
/* Call to ET_QUERY.implementation_class */
extern T0* T247x17608(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_once */
extern T1 T247x17546(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_infixable */
extern T1 T247x17547(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_prefixable */
extern T1 T247x17548(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_parenthesisable */
extern T1 T247x17550(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_bracketable */
extern T1 T247x17549(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_frozen */
extern T1 T247x17536(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_deferred */
extern T1 T247x17537(GE_context* ac, T0* C);
/* Call to ET_QUERY.new_synonym */
extern T0* T247x17580T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.postconditions */
extern T0* T247x17622(GE_context* ac, T0* C);
/* Call to ET_QUERY.preconditions */
extern T0* T247x17621(GE_context* ac, T0* C);
/* Call to ET_TYPE.position */
extern T0* T250x7380(GE_context* ac, T0* C);
/* Call to ET_TYPE.same_named_type_with_type_marks */
extern T1 T250x7343T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.last_leaf */
extern T0* T250x7384(GE_context* ac, T0* C);
/* Call to ET_TYPE.to_text */
extern T0* T250x7374(GE_context* ac, T0* C);
/* Call to ET_TYPE.same_base_type_with_type_marks */
extern T1 T250x7345T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.is_like_current */
extern T1 T250x7321(GE_context* ac, T0* C);
/* Call to ET_TYPE.shallow_named_type */
extern T0* T250x7314T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.named_type */
extern T0* T250x7312T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.base_class */
extern T0* T250x7303T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_base_type */
extern T1 T250x7323(GE_context* ac, T0* C);
/* Call to ET_TYPE.conforms_to_type */
extern T1 T250x7361T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.same_named_type */
extern T1 T250x7342T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.is_named_type */
extern T1 T250x7322(GE_context* ac, T0* C);
/* Call to ET_TYPE.is_type_expanded */
extern T1 T250x7324T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_detachable */
extern T1 T250x7330T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.base_type_index_of_label */
extern T6 T250x7311T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.has_identifier_anchored_type */
extern T1 T250x7333(GE_context* ac, T0* C);
/* Call to ET_TYPE.base_type_actual */
extern T0* T250x7309T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T250x7351T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T250x7350T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_bit_type_with_type_marks */
extern T1 T250x7346T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.named_base_class */
extern T0* T250x7304T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_attached_with_type_mark */
extern T1 T250x7329T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_reference_with_type_mark */
extern T1 T250x7327T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T250x7365T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T250x7355T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_base_bit_type_with_type_marks */
extern T1 T250x7357T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_bit_type_with_type_marks */
extern T1 T250x7353T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.conforms_from_bit_type_with_type_marks */
extern T1 T250x7363T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T250x7347T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.shallow_base_type */
extern T0* T250x7307T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.type_with_type_mark */
extern T0* T250x7318T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T250x7348T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.shallow_named_type_with_type_mark */
extern T0* T250x7315T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.shallow_base_type_with_type_mark */
extern T0* T250x7308T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T250x7349T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T250x7352T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_type_with_type_marks */
extern T1 T250x7341T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_type */
extern T1 T250x7340T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.resolved_formal_parameters */
extern T0* T250x7367T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.depends_on_qualified_anchored_type */
extern T1 T250x7334T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_formal_types */
extern T1 T250x7335T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_anchored_type */
extern T1 T250x7332(GE_context* ac, T0* C);
/* Call to ET_TYPE.is_type_reference */
extern T1 T250x7326T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.named_type_with_type_mark */
extern T0* T250x7313T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.base_type_with_type_mark */
extern T0* T250x7306T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_detachable_with_type_mark */
extern T1 T250x7331T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_expanded_with_type_mark */
extern T1 T250x7325T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_to_type_with_type_marks */
extern T1 T250x7362T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T250x7356T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_class_type_with_type_marks */
extern T1 T250x7354T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T250x7366T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T250x7364T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.base_type_actual_count */
extern T6 T250x7320T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T250x7360T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_base_class_type_with_type_marks */
extern T1 T250x7358T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.base_type */
extern T0* T250x7305T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.unaliased_to_text */
extern T0* T250x7376(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_class */
extern T0* T251x7415(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.named_type */
extern T0* T251x7422(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.root_context */
extern T0* T251x7413(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.as_nested_type_context */
extern T0* T251x7461(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.is_root_context */
extern T1 T251x7426(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_actual */
extern T0* T251x7419T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_TYPE_CONTEXT.base_type_actual_count */
extern T6 T251x7424(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.to_nested_type_context */
extern T0* T251x7462(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.same_base_type_with_type_marks */
extern T1 T251x7444T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T251x7438(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T251x7433T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T251x7431T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T251x7459T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T251x7447T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_base_bit_type_with_type_marks */
extern T1 T251x7449T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_named_bit_type_with_type_marks */
extern T1 T251x7445T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.conforms_from_bit_type_with_type_marks */
extern T1 T251x7457T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T251x7423T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T251x7454T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T251x7435T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T251x7440T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T251x7418T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T251x7429T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.named_base_class */
extern T0* T251x7416(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T251x7460T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T251x7458T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T251x7448T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T251x7446T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_base_tuple_type_with_type_marks */
extern T1 T251x7452T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_base_class_type_with_type_marks */
extern T1 T251x7450T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_UNIVERSE.adapted_universe */
extern T0* T253x3512T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.full_lower_name */
extern T0* T253x3517T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_UNIVERSE.kind_name */
extern T0* T253x3519(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_32_convert_feature */
extern T0* T253x3652(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_32_type */
extern T0* T253x3535(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_8_convert_feature */
extern T0* T253x3651(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_8_type */
extern T0* T253x3534(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_64_convert_feature */
extern T0* T253x3662(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_64_type */
extern T0* T253x3560(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_32_convert_feature */
extern T0* T253x3661(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_32_type */
extern T0* T253x3559(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_64_convert_feature */
extern T0* T253x3660(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_64_type */
extern T0* T253x3552(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_32_convert_feature */
extern T0* T253x3659(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_32_type */
extern T0* T253x3551(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_16_convert_feature */
extern T0* T253x3658(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_16_type */
extern T0* T253x3550(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_8_convert_feature */
extern T0* T253x3657(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_8_type */
extern T0* T253x3549(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_64_convert_feature */
extern T0* T253x3656(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_64_type */
extern T0* T253x3545(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_32_convert_feature */
extern T0* T253x3655(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_32_type */
extern T0* T253x3544(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_16_convert_feature */
extern T0* T253x3654(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_16_type */
extern T0* T253x3543(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_8_convert_feature */
extern T0* T253x3653(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_8_type */
extern T0* T253x3542(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_32_convert_feature */
extern T0* T253x3664(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_32_type */
extern T0* T253x3566(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_8_convert_feature */
extern T0* T253x3663(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_8_type */
extern T0* T253x3565(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.attachment_type_conformance_mode */
extern T1 T253x3643(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.boolean_type */
extern T0* T253x3532(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.target_type_attachment_mode */
extern T1 T253x3645(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.shortest_path */
extern T0* T253x3513T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.tuple_type */
extern T0* T253x3570(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.function_type */
extern T0* T253x3540(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.predicate_like_current_type */
extern T0* T253x3556(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.procedure_like_current_type */
extern T0* T253x3557(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_tuple_type */
extern T0* T253x3571(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.pointer_type */
extern T0* T253x3555(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.typed_pointer_like_current_type */
extern T0* T253x3583(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.array_any_type */
extern T0* T253x3529(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_like_current_type */
extern T0* T253x3581(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.tuple_like_current_type */
extern T0* T253x3572(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.any_type */
extern T0* T253x3524(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_type */
extern T0* T253x3541(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_any_type */
extern T0* T253x3525(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.iterable_detachable_any_type */
extern T0* T253x3547(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.master_class */
extern T0* T253x3501T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.has_master_class */
extern T1 T253x3495T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.system_string_type */
extern T0* T253x3569(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_type */
extern T0* T253x3564(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.hash_code */
extern T6 T253x22(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.double_type */
extern T0* T253x3536(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_type */
extern T0* T253x3558(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_type_detachable_any_type */
extern T0* T253x3577(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.exception_manager_type */
extern T0* T253x3539(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_type_exception_type */
extern T0* T253x3579(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_exception_type */
extern T0* T253x3538(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_exception_type */
extern T0* T253x3580(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.exception_type */
extern T0* T253x3537(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.special_any_type */
extern T0* T253x3562(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.special_detachable_any_type */
extern T0* T253x3563(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_any_type */
extern T0* T253x3576(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_type_any_type */
extern T0* T253x3575(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_like_current_type */
extern T0* T253x3578(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.relative_name */
extern T0* T253x3514T0T2(GE_context* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_UNIVERSE.relative_lower_name */
extern T0* T253x3515T0T2(GE_context* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_UNIVERSE.implicit_attachment_type_mark */
extern T0* T253x3644(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.current_system */
extern T0* T253x3511(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.none_type */
extern T0* T253x3553(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_none_type */
extern T0* T253x3554(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.system_object_parents */
extern T0* T253x3568(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.any_parents */
extern T0* T253x3527(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.system_object_type */
extern T0* T253x3567(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.full_name */
extern T0* T253x3516T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_UNIVERSE.classes_in_group */
extern T0* T253x3506T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.unfolded_empty_tuple_actual_parameters */
extern T0* T253x3573(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.obsolete_routine_type_mode */
extern T1 T253x3646(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_type */
extern T0* T253x3548(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.wide_character_type */
extern T0* T253x3584(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_type */
extern T0* T253x3533(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.resolved_formal_parameters_with_type */
extern T0* T254x7401T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.type */
extern T0* T254x7398(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.actual_parameter */
extern T0* T254x7397(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.position */
extern T0* T256x7380(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_detachable_mark */
extern T1 T256x12515(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_attached_mark */
extern T1 T256x12514(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_attachment_mark */
extern T1 T256x12513(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_implicit_mark */
extern T1 T256x12516(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_separateness_mark */
extern T1 T256x12511(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_expanded_mark */
extern T1 T256x12509(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_expandedness_mark */
extern T1 T256x12508(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.text */
extern T0* T256x12525(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.overridden_type_mark */
extern T0* T256x12524T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_MARK.is_separate_mark */
extern T1 T256x12512(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_reference_mark */
extern T1 T256x12510(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.last_leaf */
extern T0* T257x7384(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.index_of_label */
extern T6 T257x12582T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.type */
extern T0* T257x12580T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETERS.count */
extern T6 T257x12578(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.is_empty */
extern T1 T257x12583(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T257x12585(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T257x12589T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T257x12594T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T257x12586T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T257x12587T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_anchored_type */
extern T1 T257x12584(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T257x12579T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETERS.same_named_types */
extern T1 T257x12590T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T257x12591T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.named_types */
extern T0* T257x12581T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.static_type */
extern T0* T259x16683(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_never_void */
extern T1 T259x16679(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.can_be_void */
extern T1 T259x16680(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_type */
extern T0* T259x16692T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE_SET.count */
extern T6 T259x16695(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_expanded */
extern T1 T259x16699(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_expanded */
extern T1 T259x16678(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_empty */
extern T1 T259x16696(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.special_type */
extern T0* T259x16693(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_types */
extern T0* T259x16688(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_type */
extern T1 T259x16697T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.last_leaf */
extern T0* T285x7384(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.position */
extern T0* T285x7380(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T285x15688T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_EXPRESSION.unparenthesized_expression */
extern T0* T285x15682(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_false */
extern T1 T285x15685(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.index */
extern T6 T285x15705(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_current */
extern T1 T285x15684(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_never_void */
extern T1 T285x15683(GE_context* ac, T0* C);
/* Call to ET_FEATURE.lower_name */
extern T0* T289x17606(GE_context* ac, T0* C);
/* Call to ET_FEATURE.name */
extern T0* T289x17594(GE_context* ac, T0* C);
/* Call to ET_FEATURE.has_seed */
extern T1 T289x17592T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.is_once */
extern T1 T289x17546(GE_context* ac, T0* C);
/* Call to ET_FEATURE.first_seed */
extern T6 T289x17597(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_exported_to */
extern T1 T289x17557T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.clients */
extern T0* T289x17610(GE_context* ac, T0* C);
/* Call to ET_FEATURE.arguments */
extern T0* T289x17596(GE_context* ac, T0* C);
/* Call to ET_FEATURE.extended_name */
extern T0* T289x17513(GE_context* ac, T0* C);
/* Call to ET_FEATURE.arguments_count */
extern T6 T289x17556(GE_context* ac, T0* C);
/* Call to ET_FEATURE.implementation_feature */
extern T0* T289x17625(GE_context* ac, T0* C);
/* Call to ET_FEATURE.implementation_class */
extern T0* T289x17608(GE_context* ac, T0* C);
/* Call to ET_FEATURE.version */
extern T6 T289x17521(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_deferred */
extern T1 T289x17537(GE_context* ac, T0* C);
/* Call to ET_FEATURE.alias_name */
extern T0* T289x17512(GE_context* ac, T0* C);
/* Call to ET_FEATURE.other_seeds */
extern T0* T289x17598(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_procedure */
extern T1 T289x17544(GE_context* ac, T0* C);
/* Call to ET_FEATURE.type */
extern T0* T289x17595(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_unique_attribute */
extern T1 T289x17542(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_constant_attribute */
extern T1 T289x17541(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_attribute */
extern T1 T289x17540(GE_context* ac, T0* C);
/* Call to ET_FEATURE.id */
extern T6 T289x17520(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_frozen */
extern T1 T289x17536(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_infixable */
extern T1 T289x17547(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_prefixable */
extern T1 T289x17548(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_parenthesisable */
extern T1 T289x17550(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_bracketable */
extern T1 T289x17549(GE_context* ac, T0* C);
/* Call to ET_FEATURE.renamed_feature */
extern T0* T289x17581T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.undefined_feature */
extern T0* T289x17582T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.postconditions */
extern T0* T289x17622(GE_context* ac, T0* C);
/* Call to ET_FEATURE.preconditions */
extern T0* T289x17621(GE_context* ac, T0* C);
/* Call to ET_FEATURE.same_version */
extern T1 T289x17563T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.is_dotnet */
extern T1 T289x17591(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_query */
extern T1 T289x17543(GE_context* ac, T0* C);
/* Call to ET_FEATURE.other_precursors */
extern T0* T289x17523(GE_context* ac, T0* C);
/* Call to ET_FEATURE.first_precursor */
extern T0* T289x17607(GE_context* ac, T0* C);
/* Call to ET_FEATURE.has_validity_error */
extern T1 T289x17612(GE_context* ac, T0* C);
/* Call to ET_FEATURE.validity_checked */
extern T1 T289x17611(GE_context* ac, T0* C);
/* Call to ET_FEATURE.hash_code */
extern T6 T289x22(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.last_leaf */
extern T0* T290x7384(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.feature_name */
extern T0* T290x15667(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.name */
extern T0* T315x15734(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.arguments */
extern T0* T315x15735(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.position */
extern T0* T315x7380(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.is_tuple_label */
extern T1 T315x15737(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.is_call_agent */
extern T1 T315x15738(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.position */
extern T0* T316x7380(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.seed */
extern T6 T316x15616(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_tuple_label */
extern T1 T316x15623(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.lower_name */
extern T0* T316x15615(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else */
extern T1 T316x15639(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_implies */
extern T1 T316x15633(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then */
extern T1 T316x15627(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.precursor_keyword */
extern T0* T316x15655(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_precursor */
extern T1 T316x15653(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.hash_code */
extern T6 T316x22(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_not */
extern T1 T316x15649(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_plus */
extern T1 T316x15647(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_minus */
extern T1 T316x15646(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_dotdot */
extern T1 T316x15644(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_xor */
extern T1 T316x15643(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_times */
extern T1 T316x15642(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_power */
extern T1 T316x15641(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_plus */
extern T1 T316x15640(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or */
extern T1 T316x15638(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_mod */
extern T1 T316x15637(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_minus */
extern T1 T316x15636(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_lt */
extern T1 T316x15635(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_le */
extern T1 T316x15634(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_gt */
extern T1 T316x15632(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_ge */
extern T1 T316x15631(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_divide */
extern T1 T316x15629(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_div */
extern T1 T316x15628(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and */
extern T1 T316x15626(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_parenthesis */
extern T1 T316x15651(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_bracket */
extern T1 T316x15650(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.same_call_name */
extern T1 T316x15654T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CALL_NAME.feature_name */
extern T0* T316x15660(GE_context* ac, T0* C);
/* Call to ET_AGENT.target */
extern T0* T319x18426(GE_context* ac, T0* C);
/* Call to ET_AGENT.arguments */
extern T0* T319x18427(GE_context* ac, T0* C);
/* Call to ET_AGENT.implicit_target_position */
extern T0* T319x18436(GE_context* ac, T0* C);
/* Call to ET_AGENT.position */
extern T0* T319x7380(GE_context* ac, T0* C);
/* Call to ET_AGENT.is_inline_agent */
extern T1 T319x18432(GE_context* ac, T0* C);
/* Call to ET_AGENT.index */
extern T6 T319x15705(GE_context* ac, T0* C);
/* Call to ET_AGENT.is_qualified_call */
extern T1 T319x18429(GE_context* ac, T0* C);
/* Call to ET_AGENT.implicit_result */
extern T0* T319x18428(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.expression */
extern T0* T320x18395(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.index */
extern T6 T320x15705(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.type */
extern T0* T320x18394(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.name */
extern T0* T320x18396(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_integer_constant */
extern T1 T325x18688(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_character_constant */
extern T1 T325x18687(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_bit_constant */
extern T1 T325x18691(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_string_constant */
extern T1 T325x18690(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_boolean_constant */
extern T1 T325x18686(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.index */
extern T6 T325x15705(GE_context* ac, T0* C);
/* Call to ET_TARGET_TYPE.position */
extern T0* T328x7380(GE_context* ac, T0* C);
/* Call to ET_TARGET_TYPE.type */
extern T0* T328x7412(GE_context* ac, T0* C);
/* Call to ET_TARGET_TYPE.last_leaf */
extern T0* T328x7384(GE_context* ac, T0* C);
/* Call to ET_ARGUMENT_OPERANDS.actual_argument */
extern T0* T336x15699T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ARGUMENT_OPERANDS.count */
extern T6 T336x15700(GE_context* ac, T0* C);
/* Call to ET_ARGUMENT_OPERANDS.is_empty */
extern T1 T336x15697(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION_ITEM.expression */
extern T0* T338x15689(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION_ITEM.position */
extern T0* T338x7380(GE_context* ac, T0* C);
/* Call to ET_OPERAND.index */
extern T6 T341x15705(GE_context* ac, T0* C);
/* Call to ET_OPERAND.is_open_operand */
extern T1 T341x15704(GE_context* ac, T0* C);
/* Call to ET_AGENT_TARGET.index */
extern T6 T342x15705(GE_context* ac, T0* C);
/* Call to ET_AGENT_TARGET.position */
extern T0* T342x7380(GE_context* ac, T0* C);
/* Call to ET_AGENT_TARGET.is_open_operand */
extern T1 T342x15704(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_open_operand */
extern T1 T344x15704(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.index */
extern T6 T344x15705(GE_context* ac, T0* C);
/* Call to ET_SYMBOL.position */
extern T0* T346x7380(GE_context* ac, T0* C);
/* Call to ET_SYMBOL.is_question_mark */
extern T1 T346x12522(GE_context* ac, T0* C);
/* Call to ET_SYMBOL.is_bang */
extern T1 T346x12523(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.actual_argument */
extern T0* T355x15699T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_ARGUMENTS.count */
extern T6 T355x15700(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.is_empty */
extern T1 T355x15697(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPES.dynamic_type */
extern T0* T358x16692T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPES.count */
extern T6 T358x16695(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPES.index_of */
extern T6 T358x16694T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPES.has_type */
extern T1 T358x16697T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.cast_type */
extern T0* T364x20771(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.index */
extern T6 T364x15705(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.value */
extern T0* T364x20769(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.position */
extern T0* T364x7380(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_validity_error */
extern T1 T374x17612(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_feature */
extern T0* T374x17625(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.postconditions */
extern T0* T374x17622(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.preconditions */
extern T0* T374x17621(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_feature */
extern T0* T374x17616(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_feature */
extern T1 T374x17604(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.first_precursor */
extern T0* T374x17607(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.locals */
extern T0* T374x17620(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.arguments */
extern T0* T374x17619(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.type */
extern T0* T374x17618(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.clients */
extern T0* T374x17610(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_invariants */
extern T0* T374x17617(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_invariants */
extern T1 T374x17605(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_class */
extern T0* T374x17608(GE_context* ac, T0* C);
/* Call to ET_ASSERTION.expression */
extern T0* T393x15692(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.relative_lower_name */
extern T0* T395x15843T0T2(GE_context* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_PRIMARY_GROUP.kind_name */
extern T0* T395x15849(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.full_lower_name */
extern T0* T395x15845T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_PRIMARY_GROUP.use_obsolete_syntax */
extern T1 T395x15833(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.current_system */
extern T0* T395x15839(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.universe */
extern T0* T395x15838(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.dotnet_assembly */
extern T0* T395x15864(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_cluster */
extern T1 T395x15826(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.cluster */
extern T0* T395x15862(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_override */
extern T1 T395x15831(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_dotnet_assembly */
extern T1 T395x15828(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_unknown */
extern T1 T395x15830(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_none */
extern T1 T395x15829(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.full_lower_name */
extern T0* T416x15845T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_CLUSTER.scm_write_mapping_recursive */
extern T0* T416x16416(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.dependant_constraint */
extern T0* T416x16410(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.overridden_constraint_enabled */
extern T1 T416x16411(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.scm_mapping_constraint_enabled */
extern T1 T416x16412(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.provider_constraint */
extern T0* T416x16409(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.absolute_pathname */
extern T0* T416x15848(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_abstract */
extern T1 T416x16378(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_read_only */
extern T1 T416x15832(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_override */
extern T1 T416x15831(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.full_pathname */
extern T0* T416x15846(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_implicit */
extern T1 T416x16386(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_preparsed */
extern T1 T416x15834(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.parent */
extern T0* T416x15865(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.universe */
extern T0* T416x15838(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.subclusters */
extern T0* T416x16408(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_valid_directory_name */
extern T1 T416x16392T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.is_recursive */
extern T1 T416x16380(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_valid_eiffel_filename */
extern T1 T416x16391T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.scm_write_mapping */
extern T0* T416x16414(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.scm_read_mapping */
extern T0* T416x16413(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_UNIVERSE.hash_code */
extern T6 T445x22(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T448x15845T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_DOTNET_ASSEMBLY.dotnet_assembly */
extern T0* T448x3707(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.hash_code */
extern T6 T448x22(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.is_consumable */
extern T1 T448x15929(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.alias_name */
extern T0* T529x15664(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.feature_name */
extern T0* T529x15663(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.same_call_name */
extern T1 T529x15666T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXTENDED_FEATURE_NAME.position */
extern T0* T529x7380(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.same_extended_feature_name */
extern T1 T529x15665T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.start_condition */
extern T6 T570x6742(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T570x29314T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.end_of_file */
extern T1 T570x6748(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.last_value */
extern T0* T570x29325(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.last_token */
extern T6 T570x6738(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.error_position */
extern T0* T570x29323(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.last_leaf */
extern T0* T648x7384(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.label */
extern T0* T648x7399(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T648x7393T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.type */
extern T0* T648x7398(GE_context* ac, T0* C);
/* Call to ET_NAMED_TYPE.to_text */
extern T0* T649x7374(GE_context* ac, T0* C);
/* Call to ET_NAMED_TYPE.base_type_index_of_label */
extern T6 T649x7311T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_base_type_with_type_marks */
extern T1 T649x7345T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.base_type_actual */
extern T0* T649x7309T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T649x7351T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T649x7350T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_bit_type_with_type_marks */
extern T1 T649x7346T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T649x7348T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.type_with_type_mark */
extern T0* T649x7318T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T649x7349T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T649x7352T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T649x7341T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T649x7347T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.is_type_attached_with_type_mark */
extern T1 T649x7329T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_reference_with_type_mark */
extern T1 T649x7327T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.has_formal_types */
extern T1 T649x7335T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.is_type_detachable_with_type_mark */
extern T1 T649x7331T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_expanded_with_type_mark */
extern T1 T649x7325T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.named_base_class */
extern T0* T649x7304T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.conforms_to_type_with_type_marks */
extern T1 T649x7362T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_type_with_type_marks */
extern T1 T649x7343T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T649x7355T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_bit_type_with_type_marks */
extern T1 T649x7353T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T649x7356T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_class_type_with_type_marks */
extern T1 T649x7354T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T649x7365T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.conforms_from_bit_type_with_type_marks */
extern T1 T649x7363T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T649x7366T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T649x7364T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_base_bit_type_with_type_marks */
extern T1 T649x7357T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T649x7360T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_base_class_type_with_type_marks */
extern T1 T649x7358T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.base_class */
extern T0* T649x7303T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLOSURE.locals */
extern T0* T724x17620(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.type */
extern T0* T724x17618(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.arguments */
extern T0* T724x17619(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.across_components */
extern T0* T724x17624(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.object_tests */
extern T0* T724x17623(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.implicit_result */
extern T0* T726x18428(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.formal_arguments */
extern T0* T726x17619(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.actual_arguments */
extern T0* T726x18427(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.target */
extern T0* T726x18426(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.locals */
extern T0* T726x17620(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.type */
extern T0* T726x17618(GE_context* ac, T0* C);
/* Call to ET_CLUSTERS.clusters */
extern T0* T771x5929(GE_context* ac, T0* C);
/* Call to ET_ECF_CONDITION.is_enabled */
extern T1 T817x30358T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.name */
extern T0* T829x15734(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.target */
extern T0* T829x15733(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments_count */
extern T6 T829x15732(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.parenthesis_call */
extern T0* T829x15731(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T829x15735(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.index */
extern T6 T829x15705(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_call_agent */
extern T1 T829x15738(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_tuple_label */
extern T1 T829x15737(GE_context* ac, T0* C);
/* Call to XM_DOCUMENT_NODE.parent */
extern T0* T838x14582(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_UNIVERSE.lower_name */
extern T0* T853x3704(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_UNIVERSE.name */
extern T0* T853x3703(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.same_call_name */
extern T1 T859x15654T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.alias_lower_name */
extern T0* T859x30480(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.same_alias_name */
extern T1 T859x30491T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.hash_code */
extern T6 T859x22(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infix_minus */
extern T1 T859x15636(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infix_plus */
extern T1 T859x15640(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_minus */
extern T1 T859x15646(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_plus */
extern T1 T859x15647(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infix */
extern T1 T859x15625(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infixable */
extern T1 T859x30476(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefixable */
extern T1 T859x30475(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_parenthesis */
extern T1 T859x15651(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_bracket */
extern T1 T859x15650(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefix */
extern T1 T859x15645(GE_context* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.cast_type */
extern T0* T923x31762(GE_context* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.index */
extern T6 T923x15705(GE_context* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.value */
extern T3 T923x31761(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.cast_type */
extern T0* T931x32208(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.index */
extern T6 T931x15705(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_32 */
extern T6 T931x32201(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.literal */
extern T0* T931x32197(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.sign */
extern T0* T931x32207(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.value_position */
extern T0* T931x32211(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_negative */
extern T1 T931x32214(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_64 */
extern T1 T931x32226(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.value */
extern T11 T931x32198(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_binary */
extern T1 T931x32217(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T931x32216(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_64 */
extern T1 T931x32222(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_32 */
extern T1 T931x32221(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_32 */
extern T1 T931x32225(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_16 */
extern T1 T931x32224(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_8 */
extern T1 T931x32223(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_16 */
extern T1 T931x32220(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_8 */
extern T1 T931x32219(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_natural_64 */
extern T11 T931x32206(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_natural_32 */
extern T10 T931x32205(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_natural_16 */
extern T9 T931x32204(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_natural_8 */
extern T8 T931x32203(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_64 */
extern T7 T931x32202(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_16 */
extern T5 T931x32200(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_8 */
extern T4 T931x32199(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.position */
extern T0* T931x7380(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND_ITEM.agent_actual_argument */
extern T0* T973x15708(GE_context* ac, T0* C);
/* Call to ET_ASSIGNER.feature_name */
extern T0* T983x15669(GE_context* ac, T0* C);
/* Call to ET_CHOICE.upper */
extern T0* T998x15719(GE_context* ac, T0* C);
/* Call to ET_CHOICE.is_range */
extern T1 T998x15717(GE_context* ac, T0* C);
/* Call to ET_CHOICE.lower */
extern T0* T998x15718(GE_context* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.position */
extern T0* T1001x7380(GE_context* ac, T0* C);
/* Call to ET_CHOICE_ITEM.choice */
extern T0* T1004x15721(GE_context* ac, T0* C);
/* Call to ET_CONDITIONAL.expression */
extern T0* T1019x15690(GE_context* ac, T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.resolved_syntactical_constraint_with_type */
extern T0* T1022x7407T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.type */
extern T0* T1022x7405(GE_context* ac, T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.position */
extern T0* T1022x7406(GE_context* ac, T0* C);
/* Call to ET_CONSTRAINT_TYPE.resolved_syntactical_constraint */
extern T0* T1031x7409T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_CONVERT_FEATURE.name */
extern T0* T1034x26681(GE_context* ac, T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_to */
extern T1 T1034x26680(GE_context* ac, T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_from */
extern T1 T1034x26679(GE_context* ac, T0* C);
/* Call to ET_EXTERNAL_ALIAS.manifest_string */
extern T0* T1066x20781(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME_ITEM.feature_name */
extern T0* T1080x15663(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME_ITEM.position */
extern T0* T1080x7380(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.to_text */
extern T0* T1126x7374(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.position */
extern T0* T1126x7380(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.resolved_formal_parameters */
extern T0* T1126x7367T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_LIKE_TYPE.like_keyword */
extern T0* T1126x27668(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.has_formal_types */
extern T1 T1126x7335T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING_ITEM.manifest_string */
extern T0* T1143x20779(GE_context* ac, T0* C);
/* Call to ET_TYPE_ITEM.type */
extern T0* T1179x7379(GE_context* ac, T0* C);
/* Call to ET_DECLARED_TYPE.last_leaf */
extern T0* T1231x7384(GE_context* ac, T0* C);
/* Call to ET_DECLARED_TYPE.type */
extern T0* T1231x7411(GE_context* ac, T0* C);
/* Call to ET_EXTERNAL_LANGUAGE.manifest_string */
extern T0* T1235x20780(GE_context* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.assertion */
extern T0* T1282x15694(GE_context* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.position */
extern T0* T1282x7380(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.flattened_feature */
extern T0* T1312x17599(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.inherited_feature */
extern T0* T1312x17601(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_inherited */
extern T1 T1312x17588(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.redeclared_feature */
extern T0* T1312x17602(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_redeclared */
extern T1 T1312x17589(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.adapted_feature */
extern T0* T1312x17603(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.immediate_feature */
extern T0* T1312x17600(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_immediate */
extern T1 T1312x17587(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_adapted */
extern T1 T1312x17590(GE_context* ac, T0* C);
/* Call to XM_ELEMENT_NODE.parent */
extern T0* T1419x14582(GE_context* ac, T0* C);
/* Call to DS_ARRAYED_LIST [ET_CLUSTER].item */
extern T0* T1425x4708T6(GE_context* ac, T0* C, T6 a1);
/* Call to DS_ARRAYED_LIST [ET_CLUSTER].count */
extern T6 T1425x4689(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T1427x32583(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.implementation_class */
extern T0* T1427x32584(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.name */
extern T0* T1427x7294(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T1427x7331T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T1427x7329T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T1427x7379(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T1427x7302T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_GROUP.full_lower_name */
extern T0* T1429x15845T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_GROUP.kind_lower_name */
extern T0* T1429x15850(GE_context* ac, T0* C);
/* Call to ET_GROUP.is_cluster */
extern T1 T1429x15826(GE_context* ac, T0* C);
/* Call to ET_GROUP.absolute_pathname */
extern T0* T1429x15848(GE_context* ac, T0* C);
/* Call to ET_GROUP.universe */
extern T0* T1429x15838(GE_context* ac, T0* C);
/* Call to ET_GROUP.parent */
extern T0* T1429x15865(GE_context* ac, T0* C);
/* Call to ET_GROUP.full_name */
extern T0* T1429x15844T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_GROUP.cluster */
extern T0* T1429x15862(GE_context* ac, T0* C);
/* Call to ET_AST_LEAF.last_position */
extern T0* T1437x7382(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_prefix_not */
extern T1 T1438x15649(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and_then */
extern T1 T1438x15627(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and */
extern T1 T1438x15626(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_implies */
extern T1 T1438x15633(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or_else */
extern T1 T1438x15639(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or */
extern T1 T1438x15638(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_tuple_label */
extern T1 T1438x15623(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.position */
extern T0* T1438x7380(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.first_feature */
extern T0* T1517x37158(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.replicated_feature */
extern T0* T1517x37157(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.has_replication */
extern T1 T1517x37156(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.selected_count */
extern T6 T1517x37159(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.rescue_clause */
extern T0* T1558x20746(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.lower_name */
extern T0* T1558x17606(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.compound */
extern T0* T1558x20744(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.arguments */
extern T0* T1558x17596(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.implementation_feature */
extern T0* T1558x17625(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.is_once */
extern T1 T1558x17546(GE_context* ac, T0* C);
/* Call to ET_ROUTINE.implementation_feature */
extern T0* T1559x17625(GE_context* ac, T0* C);
/* Call to ET_ROUTINE.arguments */
extern T0* T1559x17596(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.locals */
extern T0* T1560x17620(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.compound */
extern T0* T1560x20744(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.rescue_clause */
extern T0* T1560x20746(GE_context* ac, T0* C);
/* Call to ET_FREE_NAME.free_operator_name */
extern T0* T1587x30512(GE_context* ac, T0* C);
/* Call to ET_FREE_NAME.hash_code */
extern T6 T1587x22(GE_context* ac, T0* C);
/* Call to ET_FREE_NAME.is_infix_freeop */
extern T1 T1587x15630(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.implicit_result */
extern T0* T1695x18428(GE_context* ac, T0* C);
/* Call to ET_LIKE_IDENTIFIER.name */
extern T0* T1707x32784(GE_context* ac, T0* C);
/* Call to ET_LIKE_IDENTIFIER.to_text */
extern T0* T1707x7374(GE_context* ac, T0* C);
/* Call to ET_AST_NODE.position */
extern T0* T1719x7380(GE_context* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.expression */
extern T0* T1721x38664(GE_context* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.convert_feature */
extern T0* T1721x38665(GE_context* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.index */
extern T6 T1721x15705(GE_context* ac, T0* C);
/* Call to ET_QUERY_INLINE_AGENT.type */
extern T0* T1787x17618(GE_context* ac, T0* C);
/* Call to ET_QUERY_INLINE_AGENT.formal_arguments */
extern T0* T1787x17619(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T1790x17619(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.parenthesis_call */
extern T0* T1792x15731(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.name */
extern T0* T1792x15734(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.target */
extern T0* T1792x15733(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.arguments */
extern T0* T1792x15735(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL.arguments */
extern T0* T1793x15735(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL.target */
extern T0* T1793x15733(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL.name */
extern T0* T1793x15734(GE_context* ac, T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T1794x15735(GE_context* ac, T0* C);
/* Call to detachable LX_TRANSITION [LX_NFA_STATE].target */
extern T0* T1829x38990(GE_context* ac, T0* C);
/* Call to detachable LX_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T1829x38993T6(GE_context* ac, T0* C, T6 a1);
/* Call to EXCEPTION.set_type_name */
extern void T28x2364T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_recipient_name */
extern void T28x2360T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_description */
extern void T28x2352T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_exception_trace */
extern void T28x2366T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_throwing_exception */
extern void T28x2359T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.set_error_handler */
extern void T33x3319T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.register_feature */
extern void T33x3311T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.set_iteration_cursor_forth_seed */
extern void T33x3308T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_iteration_cursor_after_seed */
extern void T33x3307T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_iterable_new_cursor_seed */
extern void T33x3306T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_dispose_seed */
extern void T33x3303T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_function_item_seed */
extern void T33x3305T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_routine_call_seed */
extern void T33x3304T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_is_equal_seed */
extern void T33x3302T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_copy_seed */
extern void T33x3301T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_default_create_seed */
extern void T33x3300T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.register_inline_constant */
extern void T33x3313T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.register_class */
extern void T33x3309T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.print_time */
extern void T33x3437T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_SYSTEM.preparse_recursive */
extern void T33x3692(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.activate_processors */
extern void T33x3423(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.classes_do_recursive_until */
extern void T33x3670T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_SYSTEM.compile_all */
extern void T33x3406(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.classes_do_recursive */
extern void T33x3669T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.set_flat_dbc_mode */
extern void T33x3379T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_SYSTEM.set_flat_mode */
extern void T33x3378T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_SYSTEM.set_qualified_anchored_types_enabled */
extern void T33x3366T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_SYSTEM.set_ise_version */
extern void T33x3403T0(GE_context* ac, T0* C, T0* a1);
/* Call to KI_CHARACTER_INPUT_STREAM.close */
extern void T35x2412(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_character */
extern void T35x2402(GE_context* ac, T0* C);
/* Call to AP_OPTION.record_occurrence */
extern void T47x4779T0(GE_context* ac, T0* C, T0* a1);
/* Call to AP_OPTION.reset */
extern void T47x4780(GE_context* ac, T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_integer */
extern void T83x12628T6(GE_context* ac, T0* C, T6 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_character */
extern void T83x12642T2(GE_context* ac, T0* C, T2 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_new_line */
extern void T83x12624(GE_context* ac, T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_string */
extern void T83x12626T0(GE_context* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.append */
extern void T83x12643T0(GE_context* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_line */
extern void T83x12623T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS_FILTER.set_next */
extern void T166x14704T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_xml_declaration */
extern void T167x14765T0T0T1(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* Call to XM_CALLBACKS.on_error */
extern void T167x14766T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start_tag_finish */
extern void T167x14771(GE_context* ac, T0* C);
/* Call to XM_CALLBACKS.on_finish */
extern void T167x14764(GE_context* ac, T0* C);
/* Call to XM_CALLBACKS.on_attribute */
extern void T167x14770T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to XM_CALLBACKS.on_end_tag */
extern void T167x14772T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_start_tag */
extern void T167x14769T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_content */
extern void T167x14773T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_processing_instruction */
extern void T167x14767T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to XM_CALLBACKS.on_comment */
extern void T167x14768T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start */
extern void T167x14763(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_DOTNET_ASSEMBLY.export_classes */
extern void T199x3712T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_query_call */
extern void T239x16663T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_procedure_call */
extern void T239x16664T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_target */
extern void T239x16685T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.put_object_equality_expression */
extern void T239x16668T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_equality_expression */
extern void T239x16667T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_static */
extern void T239x16633T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_DYNAMIC_TYPE.use_all_attributes */
extern void T239x16658T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_meta_type */
extern void T239x16645T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_alive */
extern void T239x16631(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.set_next_type */
extern void T239x16673T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_hash_code */
extern void T239x16647T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE.set_id */
extern void T239x16646T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE_NAME.set_seed */
extern void T245x15617T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE_NAME.reset */
extern void T245x15613(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.reset_after_interface_checked */
extern void T246x17508(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.reset_after_features_flattened */
extern void T246x17507(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.reset */
extern void T246x17506(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.set_across_components */
extern void T246x17627T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_object_tests */
extern void T246x17626T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_frozen_keyword */
extern void T246x17574T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.reset_validity_checked */
extern void T246x17615(GE_context* ac, T0* C);
/* Call to ET_QUERY.reset_after_interface_checked */
extern void T247x17508(GE_context* ac, T0* C);
/* Call to ET_QUERY.reset_after_features_flattened */
extern void T247x17507(GE_context* ac, T0* C);
/* Call to ET_QUERY.reset */
extern void T247x17506(GE_context* ac, T0* C);
/* Call to ET_QUERY.set_across_components */
extern void T247x17627T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_object_tests */
extern void T247x17626T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_frozen_keyword */
extern void T247x17574T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.reset_validity_checked */
extern void T247x17615(GE_context* ac, T0* C);
/* Call to ET_AST_PROCESSOR.process_convert_to_expression */
extern void T249x8824T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_from_expression */
extern void T249x8822T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_builtin_expression */
extern void T249x8818T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_cast_expression */
extern void T249x8882T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unqualified_call_instruction */
extern void T249x8969T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_instruction */
extern void T249x8954T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_instruction */
extern void T249x8931T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_instruction */
extern void T249x8826T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bang_instruction */
extern void T249x8789T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_loop_instruction */
extern void T249x8905T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment_attempt */
extern void T249x8784T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment */
extern void T249x8783T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assigner_instruction */
extern void T249x8782T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_instruction */
extern void T249x8888T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_instruction */
extern void T249x8875T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_debug_instruction */
extern void T249x8832T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_check_instruction */
extern void T249x8804T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_across_instruction */
extern void T249x8764T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_retry_instruction */
extern void T249x8950T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_cluster */
extern void T249x8975T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_feature */
extern void T249x8792T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_n */
extern void T249x8793T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constrained_formal_parameter */
extern void T249x8816T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter */
extern void T249x8866T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_n */
extern void T249x8900T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_current */
extern void T249x8898T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_attribute */
extern void T249x8788T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unique_attribute */
extern void T249x8967T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constant_attribute */
extern void T249x8815T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_extended_attribute */
extern void T249x8850T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_expression */
extern void T249x8825T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_equality_expression */
extern void T249x8846T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_object_equality_expression */
extern void T249x8913T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_object_test */
extern void T249x8914T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unqualified_call_expression */
extern void T249x8968T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_call_instruction */
extern void T249x8938T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_tuple_type */
extern void T249x8961T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function */
extern void T249x8852T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class_type */
extern void T249x8809T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter_type */
extern void T249x8869T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure_inline_agent */
extern void T249x8855T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure_inline_agent */
extern void T249x8922T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure_inline_agent */
extern void T249x8838T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function_inline_agent */
extern void T249x8853T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function_inline_agent */
extern void T249x8919T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function_inline_agent */
extern void T249x8836T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_manifest_string */
extern void T249x8920T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_object_test */
extern void T249x8917T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_expression */
extern void T249x8916T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_prefix_expression */
extern void T249x8933T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_type */
extern void T249x8911T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_expression */
extern void T249x8884T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_expression_address */
extern void T249x8848T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result_address */
extern void T249x8949T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current_address */
extern void T249x8830T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_feature_address */
extern void T249x8857T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_expression */
extern void T249x8930T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_type */
extern void T249x8940T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_braced_type */
extern void T249x8939T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_feature */
extern void T249x8899T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure */
extern void T249x8854T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure */
extern void T249x8921T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_function */
extern void T249x8833T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function */
extern void T249x8918T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function */
extern void T249x8835T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c2_character_constant */
extern void T249x8801T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c1_character_constant */
extern void T249x8800T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_false_constant */
extern void T249x8856T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_true_constant */
extern void T249x8960T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_real_constant */
extern void T249x8964T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_real_constant */
extern void T249x8944T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_binary_integer_constant */
extern void T249x8790T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_octal_integer_constant */
extern void T249x8915T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_hexadecimal_integer_constant */
extern void T249x8871T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_integer_constant */
extern void T249x8963T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_integer_constant */
extern void T249x8942T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_special_manifest_string */
extern void T249x8952T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_verbatim_string */
extern void T249x8971T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c3_character_constant */
extern void T249x8802T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_strip_expression */
extern void T249x8955T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_expression */
extern void T249x8953T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_parenthesized_expression */
extern void T249x8926T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_array */
extern void T249x8907T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_agent */
extern void T249x8803T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bracket_expression */
extern void T249x8798T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_across_expression */
extern void T249x8763T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_void */
extern void T249x8972T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_constant */
extern void T249x8791T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_manifest_string */
extern void T249x8943T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_named_object_test */
extern void T249x8912T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_procedure */
extern void T249x8834T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure */
extern void T249x8837T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_tuple */
extern void T249x8910T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result */
extern void T249x8948T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_call_expression */
extern void T249x8937T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current */
extern void T249x8829T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_identifier */
extern void T249x8872T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class */
extern void T249x8808T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.reset */
extern void T250x7299(GE_context* ac, T0* C);
/* Call to ET_TYPE.reset_qualified_anchored_types */
extern void T250x7300(GE_context* ac, T0* C);
/* Call to ET_TYPE.process */
extern void T250x7389T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.append_to_string */
extern void T250x7375T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.append_unaliased_to_string */
extern void T250x7377T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.universes_do_if */
extern void T253x3682T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.universes_do_all */
extern void T253x3681T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.resolve_unfolded_tuple_actual_parameters */
extern void T253x3627(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.master_classes_do_if_until */
extern void T253x3676T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_UNIVERSE.master_classes_do_if */
extern void T253x3675T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_if */
extern void T253x3667T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.master_classes_do_all */
extern void T253x3673T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.master_classes_do_until */
extern void T253x3674T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_if_until */
extern void T253x3668T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_UNIVERSE.classes_do_until */
extern void T253x3666T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_all */
extern void T253x3665T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T257x12577(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.reset */
extern void T257x12576(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.append_to_string */
extern void T257x12595T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T257x12596T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.put_target */
extern void T259x16685T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE_SET.set_never_void */
extern void T259x16682(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.propagate_can_be_void */
extern void T259x16691T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.process */
extern void T285x7389T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.reset */
extern void T285x15691(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.set_index */
extern void T285x15706T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.process */
extern void T289x7389T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_other_seeds */
extern void T289x17571T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_seed */
extern void T289x17570T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_clients */
extern void T289x17562T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_version */
extern void T289x17567T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_other_precursors */
extern void T289x17573T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_precursor */
extern void T289x17572T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.reset_postconditions */
extern void T289x17578(GE_context* ac, T0* C);
/* Call to ET_FEATURE.reset_preconditions */
extern void T289x17577(GE_context* ac, T0* C);
/* Call to ET_FEATURE.set_implementation_class */
extern void T289x17568T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_feature */
extern void T289x17569T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_id */
extern void T289x17564T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_validity_error */
extern void T289x17614(GE_context* ac, T0* C);
/* Call to ET_FEATURE.set_validity_checked */
extern void T289x17613(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.set_seed */
extern void T316x15617T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_AGENT.set_arguments */
extern void T319x18435T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AGENT.process */
extern void T319x7389T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CONSTANT.set_index */
extern void T325x15706T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_CONSTANT.process */
extern void T325x7389T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_OPERAND.set_index */
extern void T341x15706T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.set_index */
extern void T342x15706T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.process */
extern void T342x7389T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AGENT_TARGET.reset */
extern void T342x15703(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.process */
extern void T344x7389T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND.reset */
extern void T344x15703(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.set_index */
extern void T364x15706T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_MANIFEST_STRING.set_type */
extern void T364x20777T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.set_cast_type */
extern void T364x20776T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ASSERTION.process */
extern void T393x7389T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ASSERTION.reset */
extern void T393x15691(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.process */
extern void T416x16449T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_dependant_constraint */
extern void T416x16434T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_provider_constraint */
extern void T416x16433T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.add_recursive_cluster */
extern void T416x16438T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_preparsed */
extern void T416x16428T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_CLUSTER.set_scm_write_mapping */
extern void T416x16436T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_scm_read_mapping */
extern void T416x16435T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTERNAL_UNIVERSE.clusters_do_explicit */
extern void T445x3471T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTERNAL_UNIVERSE.dotnet_assemblies_do_if */
extern void T445x3479T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T448x15928T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T448x3687T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DOTNET_ASSEMBLY.consume */
extern void T448x15934T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DOTNET_ASSEMBLY.import_classes */
extern void T448x3695(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.parse_all */
extern void T448x3693(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.preparse */
extern void T448x3691(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.reset */
extern void T529x15662(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.close_input */
extern void T570x29310(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T570x29309T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.set_encoding */
extern void T570x29315T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T570x29306(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.read_token */
extern void T570x6756(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_stream */
extern void T570x29308T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TARGET.propagate_can_be_void */
extern void T645x16691T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TARGET.put_type_from_type_set */
extern void T645x16689T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_INLINE_AGENT.set_across_components */
extern void T726x17627T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_object_tests */
extern void T726x17626T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_actual_arguments */
extern void T726x18435T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.set_index */
extern void T829x15706T6(GE_context* ac, T0* C, T6 a1);
/* Call to XM_DOCUMENT_NODE.node_set_parent */
extern void T838x14616T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.reset */
extern void T859x15613(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.set_infix */
extern void T859x30489(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.set_prefix */
extern void T859x30488(GE_context* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.set_index */
extern void T923x15706T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_CHARACTER_CONSTANT.set_cast_type */
extern void T923x31766T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.set_type */
extern void T923x31767T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_index */
extern void T931x15706T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.set_cast_type */
extern void T931x32228T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_type */
extern void T931x32229T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_sign */
extern void T931x32227T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ASSIGNER.reset */
extern void T983x15668(GE_context* ac, T0* C);
/* Call to ET_CHOICE.reset */
extern void T998x15716(GE_context* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.reset */
extern void T1001x15716(GE_context* ac, T0* C);
/* Call to ET_INSTRUCTION.process */
extern void T1119x7389T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INSTRUCTION.reset */
extern void T1119x15741(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.reset_qualified_anchored_types */
extern void T1126x7300(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.reset */
extern void T1126x7299(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.append_to_string */
extern void T1126x7375T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_ELEMENT_NODE.node_set_parent */
extern void T1419x14616T0(GE_context* ac, T0* C, T0* a1);
/* Call to DS_ARRAYED_LIST [ET_CLUSTER].remove */
extern void T1425x4728T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_OPERATOR.reset */
extern void T1438x15613(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.set_parenthesis_call */
extern void T1792x15768T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to detachable LX_TRANSITION [LX_NFA_STATE].record */
extern void T1829x38994T0(GE_context* ac, T0* C, T0* a1);
/* New instance of type SPECIAL [CHARACTER_8] */
extern T0* GE_new15(T6 a1, T1 initialize);
/* New instance of type SPECIAL [CHARACTER_32] */
extern T0* GE_new16(T6 a1, T1 initialize);
/* New instance of type STRING_8 */
extern T0* GE_new17(T1 initialize);
/* New instance of type STRING_32 */
extern T0* GE_new18(T1 initialize);
/* New instance of type ISE_EXCEPTION_MANAGER */
extern T0* GE_new19(T1 initialize);
/* New instance of type GEC */
extern T0* GE_new22(T1 initialize);
/* New instance of type HASH_TABLE [INTEGER_32, INTEGER_32] */
extern T0* GE_new23(T1 initialize);
/* New instance of type CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
extern T0* GE_new24(T1 initialize);
/* New instance of type CELL [detachable EXCEPTION] */
extern T0* GE_new25(T1 initialize);
/* New instance of type CELL [NO_MORE_MEMORY] */
extern T0* GE_new26(T1 initialize);
/* New instance of type [attached] TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
extern T0* GE_new27(T1 initialize);
/* New instance of type KL_TEXT_INPUT_FILE */
extern T0* GE_new29(T1 initialize);
/* New instance of type KL_ARGUMENTS */
extern T0* GE_new30(T1 initialize);
/* New instance of type ET_ISE_VARIABLES */
extern T0* GE_new31(T1 initialize);
/* New instance of type UT_ERROR_HANDLER */
extern T0* GE_new32(T1 initialize);
/* New instance of type ET_SYSTEM */
extern T0* GE_new33(T1 initialize);
/* New instance of type KL_STRING_ROUTINES */
extern T0* GE_new34(T1 initialize);
/* New instance of type ET_ERROR_HANDLER */
extern T0* GE_new36(T1 initialize);
/* New instance of type KL_EXCEPTIONS */
extern T0* GE_new37(T1 initialize);
/* New instance of type AP_PARSER */
extern T0* GE_new38(T1 initialize);
/* New instance of type AP_ALTERNATIVE_OPTIONS_LIST */
extern T0* GE_new39(T1 initialize);
/* New instance of type AP_ERROR */
extern T0* GE_new40(T1 initialize);
/* New instance of type AP_FLAG */
extern T0* GE_new41(T1 initialize);
/* New instance of type AP_ENUMERATION_OPTION */
extern T0* GE_new43(T1 initialize);
/* New instance of type AP_BOOLEAN_OPTION */
extern T0* GE_new44(T1 initialize);
/* New instance of type AP_INTEGER_OPTION */
extern T0* GE_new45(T1 initialize);
/* New instance of type AP_STRING_OPTION */
extern T0* GE_new46(T1 initialize);
/* New instance of type AP_DISPLAY_HELP_FLAG */
extern T0* GE_new50(T1 initialize);
/* New instance of type ET_XACE_SYSTEM_PARSER */
extern T0* GE_new52(T1 initialize);
/* New instance of type ET_XACE_DEFAULT_ERROR_HANDLER */
extern T0* GE_new53(T1 initialize);
/* New instance of type DS_HASH_TABLE [STRING_8, STRING_8] */
extern T0* GE_new54(T1 initialize);
/* New instance of type ST_SPLITTER */
extern T0* GE_new55(T1 initialize);
/* New instance of type UC_STRING_EQUALITY_TESTER */
extern T0* GE_new57(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [STRING_8] */
extern T0* GE_new58(T1 initialize);
/* New instance of type ET_XACE_SYSTEM */
extern T0* GE_new61(T1 initialize);
/* New instance of type ET_ECF_SYSTEM_PARSER */
extern T0* GE_new62(T1 initialize);
/* New instance of type ET_ECF_ERROR_HANDLER */
extern T0* GE_new63(T1 initialize);
/* New instance of type ET_ECF_SYSTEM */
extern T0* GE_new64(T1 initialize);
/* New instance of type ET_ECF_TARGET */
extern T0* GE_new65(T1 initialize);
/* New instance of type KL_EXECUTION_ENVIRONMENT */
extern T0* GE_new66(T1 initialize);
/* New instance of type ET_ECF_VARIABLES */
extern T0* GE_new67(T1 initialize);
/* New instance of type ET_LACE_PARSER */
extern T0* GE_new68(T1 initialize);
/* New instance of type ET_LACE_ERROR_HANDLER */
extern T0* GE_new69(T1 initialize);
/* New instance of type ET_LACE_SYSTEM */
extern T0* GE_new70(T1 initialize);
/* New instance of type ET_DYNAMIC_SYSTEM */
extern T0* GE_new71(T1 initialize);
/* New instance of type ET_C_GENERATOR */
extern T0* GE_new74(T1 initialize);
/* New instance of type KL_SHELL_COMMAND */
extern T0* GE_new75(T1 initialize);
/* New instance of type DS_HASH_SET [STRING_8] */
extern T0* GE_new76(T1 initialize);
/* New instance of type ET_NULL_ERROR_HANDLER */
extern T0* GE_new77(T1 initialize);
/* New instance of type UT_VERSION */
extern T0* GE_new78(T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
extern T0* GE_new79(T1 initialize);
/* New instance of type ET_CLASS_TYPE */
extern T0* GE_new80(T1 initialize);
/* New instance of type ET_TOKEN_CONSTANTS */
extern T0* GE_new81(T1 initialize);
/* New instance of type ET_CLASS */
extern T0* GE_new82(T1 initialize);
/* New instance of type KL_OPERATING_SYSTEM */
extern T0* GE_new84(T1 initialize);
/* New instance of type UT_CANNOT_READ_FILE_ERROR */
extern T0* GE_new86(T1 initialize);
/* New instance of type UT_VERSION_NUMBER */
extern T0* GE_new87(T1 initialize);
/* New instance of type VOID_TARGET */
extern T0* GE_new88(T1 initialize);
/* New instance of type ROUTINE_FAILURE */
extern T0* GE_new90(T1 initialize);
/* New instance of type OLD_VIOLATION */
extern T0* GE_new92(T1 initialize);
/* New instance of type NO_MORE_MEMORY */
extern T0* GE_new94(T1 initialize);
/* New instance of type INVARIANT_VIOLATION */
extern T0* GE_new95(T1 initialize);
/* New instance of type OPERATING_SYSTEM_SIGNAL_FAILURE */
extern T0* GE_new96(T1 initialize);
/* New instance of type IO_FAILURE */
extern T0* GE_new97(T1 initialize);
/* New instance of type OPERATING_SYSTEM_FAILURE */
extern T0* GE_new98(T1 initialize);
/* New instance of type COM_FAILURE */
extern T0* GE_new99(T1 initialize);
/* New instance of type EIFFEL_RUNTIME_PANIC */
extern T0* GE_new100(T1 initialize);
/* New instance of type PRECONDITION_VIOLATION */
extern T0* GE_new103(T1 initialize);
/* New instance of type POSTCONDITION_VIOLATION */
extern T0* GE_new104(T1 initialize);
/* New instance of type FLOATING_POINT_FAILURE */
extern T0* GE_new105(T1 initialize);
/* New instance of type CHECK_VIOLATION */
extern T0* GE_new106(T1 initialize);
/* New instance of type BAD_INSPECT_VALUE */
extern T0* GE_new107(T1 initialize);
/* New instance of type VARIANT_VIOLATION */
extern T0* GE_new108(T1 initialize);
/* New instance of type LOOP_INVARIANT_VIOLATION */
extern T0* GE_new109(T1 initialize);
/* New instance of type RESCUE_FAILURE */
extern T0* GE_new110(T1 initialize);
/* New instance of type RESUMPTION_FAILURE */
extern T0* GE_new111(T1 initialize);
/* New instance of type CREATE_ON_DEFERRED */
extern T0* GE_new112(T1 initialize);
/* New instance of type EXTERNAL_FAILURE */
extern T0* GE_new113(T1 initialize);
/* New instance of type VOID_ASSIGNED_TO_EXPANDED */
extern T0* GE_new114(T1 initialize);
/* New instance of type EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
extern T0* GE_new115(T1 initialize);
/* New instance of type MISMATCH_FAILURE */
extern T0* GE_new116(T1 initialize);
/* New instance of type DEVELOPER_EXCEPTION */
extern T0* GE_new117(T1 initialize);
/* New instance of type ADDRESS_APPLIED_TO_MELTED_FEATURE */
extern T0* GE_new118(T1 initialize);
/* New instance of type SERIALIZATION_FAILURE */
extern T0* GE_new119(T1 initialize);
/* New instance of type KL_WINDOWS_FILE_SYSTEM */
extern T0* GE_new120(T1 initialize);
/* New instance of type KL_UNIX_FILE_SYSTEM */
extern T0* GE_new121(T1 initialize);
/* New instance of type PRIMES */
extern T0* GE_new122(T1 initialize);
/* New instance of type SPECIAL [INTEGER_32] */
extern T0* GE_new123(T6 a1, T1 initialize);
/* New instance of type SPECIAL [BOOLEAN] */
extern T0* GE_new124(T6 a1, T1 initialize);
/* New instance of type detachable KL_LINKABLE [CHARACTER_8] */
extern T0* GE_new126(T1 initialize);
/* New instance of type MANAGED_POINTER */
extern T0* GE_new128(T1 initialize);
/* New instance of type FILE_INFO */
extern T0* GE_new129(T1 initialize);
/* New instance of type KL_STANDARD_FILES */
extern T0* GE_new130(T1 initialize);
/* New instance of type KL_STDERR_FILE */
extern T0* GE_new131(T1 initialize);
/* New instance of type KL_STDOUT_FILE */
extern T0* GE_new132(T1 initialize);
/* New instance of type UC_STRING */
extern T0* GE_new133(T1 initialize);
/* New instance of type KL_ANY_ROUTINES */
extern T0* GE_new134(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [STRING_8] */
extern T0* GE_new136(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [AP_OPTION] */
extern T0* GE_new137(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new138(T1 initialize);
/* New instance of type AP_ERROR_HANDLER */
extern T0* GE_new139(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [AP_OPTION] */
extern T0* GE_new140(T1 initialize);
/* New instance of type SPECIAL [STRING_8] */
extern T0* GE_new141(T6 a1, T1 initialize);
/* New instance of type ARRAY [STRING_8] */
extern T0* GE_new142(T1 initialize);
/* New instance of type DS_LINKED_LIST [STRING_8] */
extern T0* GE_new143(T1 initialize);
/* New instance of type KL_STRING_EQUALITY_TESTER */
extern T0* GE_new144(T1 initialize);
/* New instance of type DS_LINKED_LIST [BOOLEAN] */
extern T0* GE_new148(T1 initialize);
/* New instance of type DS_LINKED_LIST [INTEGER_32] */
extern T0* GE_new151(T1 initialize);
/* New instance of type ST_WORD_WRAPPER */
extern T0* GE_new152(T1 initialize);
/* New instance of type ET_XACE_AST_FACTORY */
extern T0* GE_new153(T1 initialize);
/* New instance of type XM_DOCUMENT */
extern T0* GE_new154(T1 initialize);
/* New instance of type XM_ELEMENT */
extern T0* GE_new155(T1 initialize);
/* New instance of type XM_POSITION_TABLE */
extern T0* GE_new156(T1 initialize);
/* New instance of type XM_TREE_CALLBACKS_PIPE */
extern T0* GE_new158(T1 initialize);
/* New instance of type XM_STOP_ON_ERROR_FILTER */
extern T0* GE_new159(T1 initialize);
/* New instance of type XM_CALLBACKS_TO_TREE_FILTER */
extern T0* GE_new160(T1 initialize);
/* New instance of type ET_XACE_VALIDATOR */
extern T0* GE_new161(T1 initialize);
/* New instance of type ET_XACE_PREPROCESSOR */
extern T0* GE_new162(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8] */
extern T0* GE_new163(T1 initialize);
/* New instance of type XM_EXPAT_PARSER_FACTORY */
extern T0* GE_new164(T1 initialize);
/* New instance of type XM_EIFFEL_PARSER */
extern T0* GE_new165(T1 initialize);
/* New instance of type ET_XACE_LIBRARY_CONFIG_PARSER */
extern T0* GE_new168(T1 initialize);
/* New instance of type UT_MESSAGE */
extern T0* GE_new169(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [STRING_8] */
extern T0* GE_new171(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
extern T0* GE_new172(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [INTEGER_32] */
extern T0* GE_new173(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [STRING_8] */
extern T0* GE_new174(T1 initialize);
/* New instance of type DS_HASH_SET [INTEGER_32] */
extern T0* GE_new175(T1 initialize);
/* New instance of type ET_ECF_AST_FACTORY */
extern T0* GE_new176(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
extern T0* GE_new178(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
extern T0* GE_new179(T1 initialize);
/* New instance of type ET_COMPRESSED_POSITION */
extern T0* GE_new180(T1 initialize);
/* New instance of type ET_IDENTIFIER */
extern T0* GE_new182(T1 initialize);
/* New instance of type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
extern T0* GE_new184(T1 initialize);
/* New instance of type ET_ECF_STATE */
extern T0* GE_new187(T1 initialize);
/* New instance of type ET_ECF_TARGETS */
extern T0* GE_new188(T1 initialize);
/* New instance of type ET_ECF_LIBRARY */
extern T0* GE_new189(T1 initialize);
/* New instance of type ET_ADAPTED_LIBRARIES */
extern T0* GE_new190(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ADAPTED_LIBRARY] */
extern T0* GE_new192(T1 initialize);
/* New instance of type detachable TUPLE */
extern T0* GE_new193(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ADAPTED_LIBRARY]] */
extern T0* GE_new194(T1 initialize);
/* New instance of type ET_ECF_LIBRARY_PARSER */
extern T0* GE_new195(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_LIBRARY */
extern T0* GE_new196(T1 initialize);
/* New instance of type ET_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new197(T1 initialize);
/* New instance of type ET_ECF_DOTNET_ASSEMBLY */
extern T0* GE_new198(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
extern T0* GE_new200(T1 initialize);
/* New instance of type ET_ECF_ERROR */
extern T0* GE_new201(T1 initialize);
/* New instance of type EXECUTION_ENVIRONMENT */
extern T0* GE_new202(T1 initialize);
/* New instance of type ET_LACE_AST_FACTORY */
extern T0* GE_new203(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
extern T0* GE_new204(T1 initialize);
/* New instance of type YY_FILE_BUFFER */
extern T0* GE_new205(T1 initialize);
/* New instance of type YY_BUFFER */
extern T0* GE_new206(T1 initialize);
/* New instance of type DS_HASH_SET [ET_IDENTIFIER] */
extern T0* GE_new207(T1 initialize);
/* New instance of type SPECIAL [detachable ANY] */
extern T0* GE_new210(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ANY] */
extern T0* GE_new211(T1 initialize);
/* New instance of type SPECIAL [ET_IDENTIFIER] */
extern T0* GE_new212(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
extern T0* GE_new213(T1 initialize);
/* New instance of type ET_LACE_CLUSTERS */
extern T0* GE_new214(T1 initialize);
/* New instance of type ET_LACE_CLUSTER */
extern T0* GE_new215(T1 initialize);
/* New instance of type ET_LACE_EXCLUDE */
extern T0* GE_new216(T1 initialize);
/* New instance of type ET_LACE_DOTNET_ASSEMBLY */
extern T0* GE_new217(T1 initialize);
/* New instance of type SPECIAL [ET_LACE_SYSTEM] */
extern T0* GE_new218(T6 a1, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LACE_CLUSTERS] */
extern T0* GE_new219(T6 a1, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
extern T0* GE_new220(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM] */
extern T0* GE_new221(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS] */
extern T0* GE_new222(T1 initialize);
/* New instance of type SPECIAL [ET_LACE_CLUSTER] */
extern T0* GE_new223(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
extern T0* GE_new224(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LACE_EXCLUDE] */
extern T0* GE_new225(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE] */
extern T0* GE_new226(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
extern T0* GE_new227(T1 initialize);
/* New instance of type SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
extern T0* GE_new228(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
extern T0* GE_new229(T1 initialize);
/* New instance of type ET_LACE_DOTNET_GAC_ASSEMBLY */
extern T0* GE_new230(T1 initialize);
/* New instance of type KL_PLATFORM */
extern T0* GE_new231(T1 initialize);
/* New instance of type KL_INTEGER_ROUTINES */
extern T0* GE_new232(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
extern T0* GE_new233(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
extern T0* GE_new234(T1 initialize);
/* New instance of type [attached] TUPLE [ET_CLASS] */
extern T0* GE_new235(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLASS]] */
extern T0* GE_new236(T1 initialize);
/* New instance of type [attached] TUPLE [INTEGER_32] */
extern T0* GE_new237(T1 initialize);
/* New instance of type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
extern T0* GE_new238(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE */
extern T0* GE_new239(T1 initialize);
/* New instance of type DT_SHARED_SYSTEM_CLOCK */
extern T0* GE_new240(T1 initialize);
/* New instance of type DT_DATE_TIME */
extern T0* GE_new241(T1 initialize);
/* New instance of type DT_SYSTEM_CLOCK */
extern T0* GE_new242(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DYNAMIC_SYSTEM] */
extern T0* GE_new243(T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE */
extern T0* GE_new248(T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_LIST */
extern T0* GE_new252(T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION */
extern T0* GE_new260(T1 initialize);
/* New instance of type ET_TUPLE_TYPE */
extern T0* GE_new261(T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT_LIST */
extern T0* GE_new262(T1 initialize);
/* New instance of type SPECIAL [ET_TYPE] */
extern T0* GE_new263(T6 a1, T1 initialize);
/* New instance of type detachable ARRAY [ET_TYPE] */
extern T0* GE_new264(T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT */
extern T0* GE_new265(T1 initialize);
/* New instance of type ET_QUERY_LIST */
extern T0* GE_new266(T1 initialize);
/* New instance of type ET_PROCEDURE_LIST */
extern T0* GE_new267(T1 initialize);
/* New instance of type KL_NULL_TEXT_OUTPUT_STREAM */
extern T0* GE_new268(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_SET_LIST */
extern T0* GE_new269(T1 initialize);
/* New instance of type KL_STRING_OUTPUT_STREAM */
extern T0* GE_new270(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_IDENTIFIER] */
extern T0* GE_new271(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [INTEGER_32] */
extern T0* GE_new272(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_HASH_LIST */
extern T0* GE_new273(T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET */
extern T0* GE_new274(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_EXPRESSION] */
extern T0* GE_new275(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_EXPRESSION] */
extern T0* GE_new276(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
extern T0* GE_new277(T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
extern T0* GE_new278(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_TYPE] */
extern T0* GE_new279(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new280(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_OBJECT_TEST] */
extern T0* GE_new281(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new282(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new283(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_AGENT] */
extern T0* GE_new284(T1 initialize);
/* New instance of type ET_EXPRESSION */
extern T0* GE_new285(T1 initialize);
/* New instance of type ET_CURRENT */
extern T0* GE_new286(T1 initialize);
/* New instance of type ET_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new287(T1 initialize);
/* New instance of type ET_QUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new288(T1 initialize);
/* New instance of type ET_QUALIFIED_CALL_EXPRESSION */
extern T0* GE_new291(T1 initialize);
/* New instance of type ET_UNQUALIFIED_CALL_EXPRESSION */
extern T0* GE_new292(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new293(T1 initialize);
/* New instance of type ET_MANIFEST_TUPLE */
extern T0* GE_new294(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new295(T1 initialize);
/* New instance of type DS_HASH_SET [ET_FEATURE] */
extern T0* GE_new296(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
extern T0* GE_new297(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
extern T0* GE_new298(T1 initialize);
/* New instance of type DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
extern T0* GE_new299(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
extern T0* GE_new300(T1 initialize);
/* New instance of type DS_HASH_TABLE [BOOLEAN, STRING_8] */
extern T0* GE_new301(T1 initialize);
/* New instance of type ET_IDENTIFIER_TESTER */
extern T0* GE_new302(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [ET_IDENTIFIER] */
extern T0* GE_new303(T1 initialize);
/* New instance of type RX_PCRE_REGULAR_EXPRESSION */
extern T0* GE_new304(T1 initialize);
/* New instance of type KL_TEXT_OUTPUT_FILE */
extern T0* GE_new305(T1 initialize);
/* New instance of type ET_DYNAMIC_TUPLE_TYPE */
extern T0* GE_new306(T1 initialize);
/* New instance of type UT_TEMPLATE_EXPANDER */
extern T0* GE_new307(T1 initialize);
/* New instance of type UT_CANNOT_WRITE_TO_FILE_ERROR */
extern T0* GE_new308(T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE_LIST */
extern T0* GE_new309(T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR */
extern T0* GE_new310(T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR_LIST */
extern T0* GE_new311(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
extern T0* GE_new312(T1 initialize);
/* New instance of type ET_RESULT */
extern T0* GE_new313(T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
extern T0* GE_new314(T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
extern T0* GE_new318(T1 initialize);
/* New instance of type ET_OBJECT_TEST */
extern T0* GE_new320(T1 initialize);
/* New instance of type ET_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new321(T1 initialize);
/* New instance of type ET_EQUALITY_EXPRESSION */
extern T0* GE_new322(T1 initialize);
/* New instance of type ET_DYNAMIC_SPECIAL_TYPE */
extern T0* GE_new323(T1 initialize);
/* New instance of type ET_CREATE_EXPRESSION */
extern T0* GE_new326(T1 initialize);
/* New instance of type ET_QUALIFIED_CALL */
extern T0* GE_new327(T1 initialize);
/* New instance of type KL_DIRECTORY */
extern T0* GE_new330(T1 initialize);
/* New instance of type ET_EXTENDED_ATTRIBUTE */
extern T0* GE_new331(T1 initialize);
/* New instance of type ET_COMPOUND */
extern T0* GE_new332(T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE_LIST */
extern T0* GE_new333(T1 initialize);
/* New instance of type ET_DYNAMIC_FUNCTION_TYPE */
extern T0* GE_new334(T1 initialize);
/* New instance of type ET_DYNAMIC_PROCEDURE_TYPE */
extern T0* GE_new335(T1 initialize);
/* New instance of type DS_QUICK_SORTER [INTEGER_32] */
extern T0* GE_new339(T1 initialize);
/* New instance of type ET_IMPLICIT_TYPE_MARK */
extern T0* GE_new345(T1 initialize);
/* New instance of type ET_SYMBOL */
extern T0* GE_new346(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE] */
extern T0* GE_new347(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new348(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new349(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new351(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new352(T1 initialize);
/* New instance of type UT_INTEGER_FORMATTER */
extern T0* GE_new353(T1 initialize);
/* New instance of type STD_FILES */
extern T0* GE_new357(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new359(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
extern T0* GE_new361(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new362(T1 initialize);
/* New instance of type ET_CONSTANT_ATTRIBUTE */
extern T0* GE_new363(T1 initialize);
/* New instance of type ET_UNIQUE_ATTRIBUTE */
extern T0* GE_new365(T1 initialize);
/* New instance of type ET_ATTRIBUTE */
extern T0* GE_new366(T1 initialize);
/* New instance of type NATIVE_STRING */
extern T0* GE_new368(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [STRING_8] */
extern T0* GE_new369(T1 initialize);
/* New instance of type ET_FEATURE_CHECKER */
extern T0* GE_new370(T1 initialize);
/* New instance of type DS_CELL [INTEGER_32] */
extern T0* GE_new371(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
extern T0* GE_new372(T1 initialize);
/* New instance of type ET_TYPE_CHECKER */
extern T0* GE_new373(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
extern T0* GE_new375(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new376(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new377(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new378(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new379(T1 initialize);
/* New instance of type ET_NESTED_TYPE_CONTEXT */
extern T0* GE_new380(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
extern T0* GE_new381(T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE */
extern T0* GE_new382(T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE_BUILDER */
extern T0* GE_new383(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
extern T0* GE_new384(T1 initialize);
/* New instance of type ET_ACROSS_CURSOR_SCOPE */
extern T0* GE_new385(T1 initialize);
/* New instance of type ET_ATTACHMENT_SCOPE */
extern T0* GE_new386(T1 initialize);
/* New instance of type ET_ATTACHMENT_SCOPE_BUILDER */
extern T0* GE_new387(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new388(T1 initialize);
/* New instance of type ET_PRECONDITIONS */
extern T0* GE_new389(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE] */
extern T0* GE_new390(T1 initialize);
/* New instance of type ET_FEATURE_LIST */
extern T0* GE_new392(T1 initialize);
/* New instance of type ET_UNKNOWN_GROUP */
extern T0* GE_new394(T1 initialize);
/* New instance of type ET_BASE_TYPE_LIST */
extern T0* GE_new396(T1 initialize);
/* New instance of type ET_KEYWORD */
extern T0* GE_new397(T1 initialize);
/* New instance of type ET_CLASS_CODES */
extern T0* GE_new398(T1 initialize);
/* New instance of type ARGUMENTS_32 */
extern T0* GE_new400(T1 initialize);
/* New instance of type IMMUTABLE_STRING_32 */
extern T0* GE_new401(T1 initialize);
/* New instance of type ET_AST_FACTORY */
extern T0* GE_new403(T1 initialize);
/* New instance of type ET_XACE_EXTERNALS */
extern T0* GE_new404(T1 initialize);
/* New instance of type ET_XACE_OPTIONS */
extern T0* GE_new405(T1 initialize);
/* New instance of type XM_ATTRIBUTE */
extern T0* GE_new406(T1 initialize);
/* New instance of type ET_XACE_OPTION_NAMES */
extern T0* GE_new409(T1 initialize);
/* New instance of type ET_XACE_CLUSTER */
extern T0* GE_new411(T1 initialize);
/* New instance of type ET_XACE_CLUSTERS */
extern T0* GE_new412(T1 initialize);
/* New instance of type ET_XACE_MOUNTED_LIBRARY */
extern T0* GE_new413(T1 initialize);
/* New instance of type ET_XACE_MOUNTED_LIBRARIES */
extern T0* GE_new414(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new415(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
extern T0* GE_new417(T1 initialize);
/* New instance of type ET_XACE_LIBRARY_CONFIG */
extern T0* GE_new419(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, STRING_8] */
extern T0* GE_new420(T1 initialize);
/* New instance of type ET_XACE_CLASS_OPTIONS */
extern T0* GE_new422(T1 initialize);
/* New instance of type ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
extern T0* GE_new423(T1 initialize);
/* New instance of type ET_XACE_BOOLEAN_EXPECTED_ERROR */
extern T0* GE_new424(T1 initialize);
/* New instance of type ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
extern T0* GE_new425(T1 initialize);
/* New instance of type ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
extern T0* GE_new426(T1 initialize);
/* New instance of type ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
extern T0* GE_new427(T1 initialize);
/* New instance of type ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
extern T0* GE_new428(T1 initialize);
/* New instance of type ET_AST_NULL_PROCESSOR */
extern T0* GE_new430(T1 initialize);
/* New instance of type [attached] TUPLE [ET_UNIVERSE] */
extern T0* GE_new431(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_UNIVERSE]] */
extern T0* GE_new432(T1 initialize);
/* New instance of type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]]] */
extern T0* GE_new433(T1 initialize);
/* New instance of type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
extern T0* GE_new435(T1 initialize);
/* New instance of type DT_DATE_TIME_DURATION */
extern T0* GE_new436(T1 initialize);
/* New instance of type ET_IMPLEMENTATION_CHECKER */
extern T0* GE_new437(T1 initialize);
/* New instance of type ET_EIFFEL_PREPARSER */
extern T0* GE_new438(T1 initialize);
/* New instance of type ET_MASTER_CLASS_CHECKER */
extern T0* GE_new439(T1 initialize);
/* New instance of type ET_EIFFEL_PARSER */
extern T0* GE_new440(T1 initialize);
/* New instance of type ET_PROVIDER_CHECKER */
extern T0* GE_new441(T1 initialize);
/* New instance of type ET_ANCESTOR_BUILDER */
extern T0* GE_new442(T1 initialize);
/* New instance of type ET_FEATURE_FLATTENER */
extern T0* GE_new443(T1 initialize);
/* New instance of type ET_INTERFACE_CHECKER */
extern T0* GE_new444(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new446(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLIES */
extern T0* GE_new447(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY */
extern T0* GE_new448(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new449(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new450(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new451(T1 initialize);
/* New instance of type [attached] TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new452(T1 initialize);
/* New instance of type [attached] TUPLE [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new453(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new454(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_DOTNET_ASSEMBLY]]] */
extern T0* GE_new455(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DOTNET_ASSEMBLIES] */
extern T0* GE_new457(T1 initialize);
/* New instance of type ET_LIBRARY */
extern T0* GE_new460(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LIBRARY] */
extern T0* GE_new461(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_LIBRARY]] */
extern T0* GE_new462(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [STRING_8] */
extern T0* GE_new463(T1 initialize);
/* New instance of type ET_CLASS_NAME_TESTER */
extern T0* GE_new465(T1 initialize);
/* New instance of type ET_PARENT */
extern T0* GE_new467(T1 initialize);
/* New instance of type ET_PARENT_LIST */
extern T0* GE_new468(T1 initialize);
/* New instance of type ET_CLIENT_LIST */
extern T0* GE_new469(T1 initialize);
/* New instance of type ET_BUILTIN_CONVERT_FEATURE */
extern T0* GE_new470(T1 initialize);
/* New instance of type ET_MASTER_CLASS */
extern T0* GE_new471(T1 initialize);
/* New instance of type DS_HASH_SET [ET_UNIVERSE] */
extern T0* GE_new472(T1 initialize);
/* New instance of type [attached] TUPLE [ET_AST_PROCESSOR] */
extern T0* GE_new473(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_CLASS]] */
extern T0* GE_new474(T1 initialize);
/* New instance of type [attached] TUPLE [ET_MASTER_CLASS] */
extern T0* GE_new476(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_MASTER_CLASS]] */
extern T0* GE_new477(T1 initialize);
/* New instance of type [attached] TUPLE [ET_CLUSTER] */
extern T0* GE_new479(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLUSTER]] */
extern T0* GE_new480(T1 initialize);
/* New instance of type [attached] TUPLE [ET_XACE_SYSTEM] */
extern T0* GE_new481(T1 initialize);
/* New instance of type DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new483(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new485(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
extern T0* GE_new486(T1 initialize);
/* New instance of type ET_ANCESTORS_STATUS_CHECKER */
extern T0* GE_new488(T1 initialize);
/* New instance of type ET_FLATTENING_STATUS_CHECKER */
extern T0* GE_new489(T1 initialize);
/* New instance of type ET_INTERFACE_STATUS_CHECKER */
extern T0* GE_new490(T1 initialize);
/* New instance of type ET_IMPLEMENTATION_STATUS_CHECKER */
extern T0* GE_new491(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLASS]]] */
extern T0* GE_new492(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
extern T0* GE_new493(T1 initialize);
/* New instance of type [attached] TUPLE [ET_FLATTENING_STATUS_CHECKER] */
extern T0* GE_new494(T1 initialize);
/* New instance of type [attached] TUPLE [ET_INTERFACE_STATUS_CHECKER] */
extern T0* GE_new495(T1 initialize);
/* New instance of type [attached] TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
extern T0* GE_new496(T1 initialize);
/* New instance of type [attached] TUPLE [BOOLEAN] */
extern T0* GE_new497(T1 initialize);
/* New instance of type ET_CLIENT */
extern T0* GE_new498(T1 initialize);
/* New instance of type ET_RENAME_LIST */
extern T0* GE_new499(T1 initialize);
/* New instance of type ET_EXPORT_LIST */
extern T0* GE_new500(T1 initialize);
/* New instance of type ET_KEYWORD_FEATURE_NAME_LIST */
extern T0* GE_new501(T1 initialize);
/* New instance of type ET_LIKE_CURRENT */
extern T0* GE_new504(T1 initialize);
/* New instance of type ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new505(T1 initialize);
/* New instance of type ET_NONE_GROUP */
extern T0* GE_new506(T1 initialize);
/* New instance of type [attached] TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
extern T0* GE_new507(T1 initialize);
/* New instance of type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]], FUNCTION [ANY, TUPLE [ET_CLASS], BOOLEAN]] */
extern T0* GE_new508(T1 initialize);
/* New instance of type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]], FUNCTION [ANY, TUPLE [ET_CLASS], BOOLEAN], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
extern T0* GE_new509(T1 initialize);
/* New instance of type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]]] */
extern T0* GE_new510(T1 initialize);
/* New instance of type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
extern T0* GE_new511(T1 initialize);
/* New instance of type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_CLUSTER]]] */
extern T0* GE_new514(T1 initialize);
/* New instance of type [attached] TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new518(T1 initialize);
/* New instance of type XM_NAMESPACE */
extern T0* GE_new521(T1 initialize);
/* New instance of type ARRAY [INTEGER_32] */
extern T0* GE_new522(T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [INTEGER_32] */
extern T0* GE_new523(T1 initialize);
/* New instance of type UT_CONFIG_PARSER */
extern T0* GE_new524(T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
extern T0* GE_new525(T1 initialize);
/* New instance of type ET_DO_PROCEDURE */
extern T0* GE_new528(T1 initialize);
/* New instance of type ET_SYSTEM_ERROR */
extern T0* GE_new530(T1 initialize);
/* New instance of type ET_INTERNAL_ERROR */
extern T0* GE_new531(T1 initialize);
/* New instance of type ET_VALIDITY_ERROR */
extern T0* GE_new532(T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET */
extern T0* GE_new533(T1 initialize);
/* New instance of type ET_DEFERRED_PROCEDURE */
extern T0* GE_new534(T1 initialize);
/* New instance of type CELL [INTEGER_32] */
extern T0* GE_new536(T1 initialize);
/* New instance of type C_STRING */
extern T0* GE_new537(T1 initialize);
/* New instance of type KL_PATHNAME */
extern T0* GE_new539(T1 initialize);
/* New instance of type PLATFORM */
extern T0* GE_new540(T1 initialize);
/* New instance of type READABLE_STRING_32 */
extern T0* GE_new541(T1 initialize);
/* New instance of type SPECIAL [NATURAL_8] */
extern T0* GE_new542(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
extern T0* GE_new545(T1 initialize);
/* New instance of type SPECIAL [AP_OPTION] */
extern T0* GE_new547(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [AP_OPTION] */
extern T0* GE_new548(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new549(T1 initialize);
/* New instance of type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new550(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new551(T1 initialize);
/* New instance of type detachable DS_LINKABLE [STRING_8] */
extern T0* GE_new552(T1 initialize);
/* New instance of type detachable DS_LINKABLE [BOOLEAN] */
extern T0* GE_new553(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [BOOLEAN] */
extern T0* GE_new554(T1 initialize);
/* New instance of type detachable DS_LINKABLE [INTEGER_32] */
extern T0* GE_new555(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [INTEGER_32] */
extern T0* GE_new556(T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER */
extern T0* GE_new557(T1 initialize);
/* New instance of type SPECIAL [XM_CALLBACKS_FILTER] */
extern T0* GE_new558(T6 a1, T1 initialize);
/* New instance of type ARRAY [XM_CALLBACKS_FILTER] */
extern T0* GE_new559(T1 initialize);
/* New instance of type XM_CALLBACKS_NULL */
extern T0* GE_new560(T1 initialize);
/* New instance of type DS_HASH_SET [XM_NAMESPACE] */
extern T0* GE_new561(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8] */
extern T0* GE_new567(T1 initialize);
/* New instance of type SPECIAL [ET_XACE_LIBRARY_CONFIG] */
extern T0* GE_new568(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG] */
extern T0* GE_new569(T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER */
extern T0* GE_new570(T1 initialize);
/* New instance of type XM_DEFAULT_POSITION */
extern T0* GE_new571(T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_POSITION] */
extern T0* GE_new573(T1 initialize);
/* New instance of type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
extern T0* GE_new574(T1 initialize);
/* New instance of type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
extern T0* GE_new575(T1 initialize);
/* New instance of type XM_NULL_EXTERNAL_RESOLVER */
extern T0* GE_new577(T1 initialize);
/* New instance of type XM_DTD_CALLBACKS_NULL */
extern T0* GE_new579(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new580(T1 initialize);
/* New instance of type XM_EIFFEL_PARSER_NAME */
extern T0* GE_new581(T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new582(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new583(T1 initialize);
/* New instance of type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new584(T1 initialize);
/* New instance of type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new585(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
extern T0* GE_new586(T1 initialize);
/* New instance of type XM_DTD_EXTERNAL_ID */
extern T0* GE_new587(T1 initialize);
/* New instance of type SPECIAL [XM_DTD_EXTERNAL_ID] */
extern T0* GE_new588(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new589(T1 initialize);
/* New instance of type XM_DTD_ELEMENT_CONTENT */
extern T0* GE_new590(T1 initialize);
/* New instance of type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new591(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new592(T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new593(T1 initialize);
/* New instance of type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new594(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new595(T1 initialize);
/* New instance of type XM_DTD_ATTRIBUTE_CONTENT */
extern T0* GE_new596(T1 initialize);
/* New instance of type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new597(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
extern T0* GE_new598(T1 initialize);
/* New instance of type DS_BILINKED_LIST [STRING_8] */
extern T0* GE_new599(T1 initialize);
/* New instance of type SPECIAL [DS_BILINKED_LIST [STRING_8]] */
extern T0* GE_new600(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [BOOLEAN] */
extern T0* GE_new601(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
extern T0* GE_new602(T1 initialize);
/* New instance of type XM_EIFFEL_DECLARATION */
extern T0* GE_new603(T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_DECLARATION] */
extern T0* GE_new604(T6 a1, T1 initialize);
/* New instance of type XM_EIFFEL_ENTITY_DEF */
extern T0* GE_new607(T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER_DTD */
extern T0* GE_new608(T1 initialize);
/* New instance of type XM_EIFFEL_PE_ENTITY_DEF */
extern T0* GE_new610(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [INTEGER_32] */
extern T0* GE_new611(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [INTEGER_32] */
extern T0* GE_new612(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
extern T0* GE_new613(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_LIBRARY] */
extern T0* GE_new614(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
extern T0* GE_new617(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new618(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
extern T0* GE_new621(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new622(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_TARGET] */
extern T0* GE_new623(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
extern T0* GE_new624(T1 initialize);
/* New instance of type DS_HASH_SET [ET_LIBRARY] */
extern T0* GE_new625(T1 initialize);
/* New instance of type [attached] TUPLE [DS_HASH_SET [ET_LIBRARY]] */
extern T0* GE_new626(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new627(T1 initialize);
/* New instance of type HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
extern T0* GE_new628(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
extern T0* GE_new630(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
extern T0* GE_new631(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
extern T0* GE_new633(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
extern T0* GE_new636(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
extern T0* GE_new637(T1 initialize);
/* New instance of type SPECIAL [ET_MASTER_CLASS] */
extern T0* GE_new638(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
extern T0* GE_new639(T1 initialize);
/* New instance of type SPECIAL [ET_CLASS_NAME] */
extern T0* GE_new640(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TYPE] */
extern T0* GE_new641(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
extern T0* GE_new642(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
extern T0* GE_new643(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_LIST */
extern T0* GE_new644(T1 initialize);
/* New instance of type C_DATE */
extern T0* GE_new646(T1 initialize);
/* New instance of type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new650(T6 a1, T1 initialize);
/* New instance of type ET_BRACKET_SYMBOL */
extern T0* GE_new651(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new653(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new655(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new656(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
extern T0* GE_new657(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
extern T0* GE_new658(T1 initialize);
/* New instance of type SPECIAL [ET_EXPRESSION] */
extern T0* GE_new660(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
extern T0* GE_new661(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
extern T0* GE_new662(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
extern T0* GE_new664(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new665(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new666(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
extern T0* GE_new667(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new668(T1 initialize);
/* New instance of type SPECIAL [ET_OBJECT_TEST] */
extern T0* GE_new670(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
extern T0* GE_new671(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
extern T0* GE_new672(T1 initialize);
/* New instance of type SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new673(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new674(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new675(T1 initialize);
/* New instance of type SPECIAL [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new676(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new677(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new678(T1 initialize);
/* New instance of type SPECIAL [ET_AGENT] */
extern T0* GE_new679(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT] */
extern T0* GE_new680(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
extern T0* GE_new681(T1 initialize);
/* New instance of type SPECIAL [ET_EXPRESSION_ITEM] */
extern T0* GE_new682(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
extern T0* GE_new684(T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new685(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new686(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new687(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new688(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new689(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new690(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_FEATURE] */
extern T0* GE_new691(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE] */
extern T0* GE_new693(T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE] */
extern T0* GE_new694(T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
extern T0* GE_new695(T1 initialize);
/* New instance of type SPECIAL [ET_CONSTANT] */
extern T0* GE_new696(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
extern T0* GE_new698(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
extern T0* GE_new699(T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_CONSTANT] */
extern T0* GE_new700(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
extern T0* GE_new702(T1 initialize);
/* New instance of type SPECIAL [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new703(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
extern T0* GE_new705(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new706(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
extern T0* GE_new707(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
extern T0* GE_new708(T1 initialize);
/* New instance of type RX_BYTE_CODE */
extern T0* GE_new712(T1 initialize);
/* New instance of type RX_CHARACTER_SET */
extern T0* GE_new713(T1 initialize);
/* New instance of type RX_CASE_MAPPING */
extern T0* GE_new714(T1 initialize);
/* New instance of type SPECIAL [RX_CHARACTER_SET] */
extern T0* GE_new716(T6 a1, T1 initialize);
/* New instance of type ARRAY [RX_CHARACTER_SET] */
extern T0* GE_new717(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new718(T1 initialize);
/* New instance of type ARRAY [BOOLEAN] */
extern T0* GE_new719(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
extern T0* GE_new722(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
extern T0* GE_new725(T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_AGENT] */
extern T0* GE_new727(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
extern T0* GE_new728(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new729(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_PROCEDURE] */
extern T0* GE_new730(T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new731(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new732(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new733(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_QUERY] */
extern T0* GE_new734(T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new735(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new736(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new737(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_FEATURE] */
extern T0* GE_new738(T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new739(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new740(T1 initialize);
/* New instance of type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new741(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new742(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new743(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE] */
extern T0* GE_new744(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
extern T0* GE_new745(T1 initialize);
/* New instance of type ET_NAMED_OBJECT_TEST */
extern T0* GE_new748(T1 initialize);
/* New instance of type SPECIAL [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new749(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new750(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new751(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
extern T0* GE_new752(T1 initialize);
/* New instance of type SPECIAL [ET_ACROSS_COMPONENT] */
extern T0* GE_new755(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT] */
extern T0* GE_new756(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ACROSS_COMPONENT] */
extern T0* GE_new757(T1 initialize);
/* New instance of type SPECIAL [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new759(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new760(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new761(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_PRECONDITIONS, ET_FEATURE] */
extern T0* GE_new762(T1 initialize);
/* New instance of type SPECIAL [ET_PRECONDITIONS] */
extern T0* GE_new763(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
extern T0* GE_new765(T1 initialize);
/* New instance of type DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
extern T0* GE_new766(T1 initialize);
/* New instance of type STRING_TO_INTEGER_CONVERTOR */
extern T0* GE_new767(T1 initialize);
/* New instance of type STRING_8_SEARCHER */
extern T0* GE_new769(T1 initialize);
/* New instance of type detachable ARRAYED_LIST [INTEGER_32] */
extern T0* GE_new770(T1 initialize);
/* New instance of type ET_CLUSTERS */
extern T0* GE_new771(T1 initialize);
/* New instance of type UC_UNICODE_ROUTINES */
extern T0* GE_new772(T1 initialize);
/* New instance of type ET_XACE_FEATURE_OPTIONS */
extern T0* GE_new773(T1 initialize);
/* New instance of type detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new774(T1 initialize);
/* New instance of type ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
extern T0* GE_new775(T1 initialize);
/* New instance of type ET_XACE_MISSING_ATTRIBUTE_ERROR */
extern T0* GE_new776(T1 initialize);
/* New instance of type ET_XACE_UNKNOWN_ELEMENT_ERROR */
extern T0* GE_new777(T1 initialize);
/* New instance of type ET_XACE_MISSING_ELEMENT_ERROR */
extern T0* GE_new778(T1 initialize);
/* New instance of type ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
extern T0* GE_new779(T1 initialize);
/* New instance of type ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
extern T0* GE_new780(T1 initialize);
/* New instance of type ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
extern T0* GE_new781(T1 initialize);
/* New instance of type ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
extern T0* GE_new782(T1 initialize);
/* New instance of type UT_COUNTER */
extern T0* GE_new785(T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ET_CLASS] */
extern T0* GE_new786(T1 initialize);
/* New instance of type [attached] TUPLE [UT_COUNTER] */
extern T0* GE_new787(T1 initialize);
/* New instance of type [attached] TUPLE [KL_AGENT_ROUTINES [ET_CLASS], [attached] PROCEDURE [[attached] NONE, [attached] TUPLE]] */
extern T0* GE_new788(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
extern T0* GE_new789(T1 initialize);
/* New instance of type UT_TRISTATE */
extern T0* GE_new790(T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ANY] */
extern T0* GE_new791(T1 initialize);
/* New instance of type [attached] TUPLE [UT_TRISTATE] */
extern T0* GE_new792(T1 initialize);
/* New instance of type [attached] TUPLE [KL_AGENT_ROUTINES [ANY], [attached] PROCEDURE [[attached] NONE, [attached] TUPLE]] */
extern T0* GE_new793(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_MASTER_CLASS]] */
extern T0* GE_new794(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] NONE, [attached] TUPLE] */
extern T0* GE_new795(T1 initialize);
/* New instance of type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]], FUNCTION [ANY, TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
extern T0* GE_new797(T1 initialize);
/* New instance of type [attached] TUPLE [PROCEDURE [ANY, TUPLE [ET_MASTER_CLASS]], FUNCTION [ANY, TUPLE [ET_MASTER_CLASS], BOOLEAN], detachable FUNCTION [ANY, TUPLE, BOOLEAN]] */
extern T0* GE_new798(T1 initialize);
/* New instance of type ET_ECF_CLUSTER */
extern T0* GE_new799(T1 initialize);
/* New instance of type ET_ECF_CLUSTERS */
extern T0* GE_new800(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_LIBRARIES */
extern T0* GE_new801(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new802(T1 initialize);
/* New instance of type ET_ECF_FILE_RULE */
extern T0* GE_new803(T1 initialize);
/* New instance of type ET_ECF_FILE_RULES */
extern T0* GE_new804(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_INCLUDE */
extern T0* GE_new805(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_INCLUDES */
extern T0* GE_new806(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_OBJECT */
extern T0* GE_new807(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_OBJECTS */
extern T0* GE_new808(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LIBRARY */
extern T0* GE_new809(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LIBRARIES */
extern T0* GE_new810(T1 initialize);
/* New instance of type ET_ECF_SETTINGS */
extern T0* GE_new812(T1 initialize);
/* New instance of type ET_ECF_OPTIONS */
extern T0* GE_new813(T1 initialize);
/* New instance of type ET_ECF_CONDITIONS */
extern T0* GE_new814(T1 initialize);
/* New instance of type ET_ECF_ROOT_CLASS */
extern T0* GE_new815(T1 initialize);
/* New instance of type ET_ECF_ROOT_ALL_CLASSES */
extern T0* GE_new816(T1 initialize);
/* New instance of type ET_ECF_PLATFORM_CONDITION */
extern T0* GE_new818(T1 initialize);
/* New instance of type ET_ECF_BUILD_CONDITION */
extern T0* GE_new819(T1 initialize);
/* New instance of type ET_ECF_MULTITHREADED_CONDITION */
extern T0* GE_new820(T1 initialize);
/* New instance of type ET_ECF_CONCURRENCY_CONDITION */
extern T0* GE_new821(T1 initialize);
/* New instance of type ET_ECF_DOTNET_CONDITION */
extern T0* GE_new822(T1 initialize);
/* New instance of type ET_ECF_DYNAMIC_RUNTIME_CONDITION */
extern T0* GE_new823(T1 initialize);
/* New instance of type ET_ECF_CUSTOM_CONDITION */
extern T0* GE_new824(T1 initialize);
/* New instance of type ET_ECF_COMPILER_VERSION_CONDITION */
extern T0* GE_new826(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_SYSTEM] */
extern T0* GE_new827(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_SYSTEM] */
extern T0* GE_new828(T1 initialize);
/* New instance of type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
extern T0* GE_new831(T1 initialize);
/* New instance of type ET_REGULAR_MANIFEST_STRING */
extern T0* GE_new832(T1 initialize);
/* New instance of type ET_INFIX_FREE_NAME */
extern T0* GE_new833(T1 initialize);
/* New instance of type ET_CREATOR_LIST */
extern T0* GE_new834(T1 initialize);
/* New instance of type EXCEPTIONS */
extern T0* GE_new836(T1 initialize);
/* New instance of type XM_LINKED_LIST [XM_DOCUMENT_NODE] */
extern T0* GE_new837(T1 initialize);
/* New instance of type XM_LINKED_LIST [XM_ELEMENT_NODE] */
extern T0* GE_new839(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new843(T1 initialize);
/* New instance of type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new844(T1 initialize);
/* New instance of type DS_PAIR [XM_POSITION, XM_NODE] */
extern T0* GE_new845(T1 initialize);
/* New instance of type UC_UTF8_ROUTINES */
extern T0* GE_new846(T1 initialize);
/* New instance of type UC_UTF8_STRING */
extern T0* GE_new847(T1 initialize);
/* New instance of type XM_EIFFEL_INPUT_STREAM */
extern T0* GE_new848(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new852(T1 initialize);
/* New instance of type KL_CHARACTER_BUFFER */
extern T0* GE_new855(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_CLUSTER] */
extern T0* GE_new856(T1 initialize);
/* New instance of type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
extern T0* GE_new857(T1 initialize);
/* New instance of type SPECIAL [ET_QUERY] */
extern T0* GE_new858(T6 a1, T1 initialize);
/* New instance of type ET_ALIAS_NAME */
extern T0* GE_new859(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_QUERY] */
extern T0* GE_new860(T1 initialize);
/* New instance of type SPECIAL [ET_PROCEDURE] */
extern T0* GE_new861(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
extern T0* GE_new862(T1 initialize);
/* New instance of type CONSOLE */
extern T0* GE_new866(T1 initialize);
/* New instance of type ET_LIKE_N */
extern T0* GE_new867(T1 initialize);
/* New instance of type SPECIAL [ET_BASE_TYPE] */
extern T0* GE_new868(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
extern T0* GE_new869(T1 initialize);
/* New instance of type SPECIAL [IMMUTABLE_STRING_32] */
extern T0* GE_new870(T6 a1, T1 initialize);
/* New instance of type ARRAY [IMMUTABLE_STRING_32] */
extern T0* GE_new871(T1 initialize);
/* New instance of type detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new872(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
extern T0* GE_new873(T1 initialize);
/* New instance of type [attached] TUPLE [ET_XACE_CLUSTER] */
extern T0* GE_new874(T1 initialize);
/* New instance of type SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new875(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new876(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new877(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
extern T0* GE_new879(T1 initialize);
/* New instance of type detachable DS_HASH_SET [ET_NAMED_CLASS] */
extern T0* GE_new881(T1 initialize);
/* New instance of type DS_HASH_SET [ET_PROCEDURE] */
extern T0* GE_new882(T1 initialize);
/* New instance of type DS_HASH_SET [ET_QUERY] */
extern T0* GE_new883(T1 initialize);
/* New instance of type ET_SUPPLIER_BUILDER */
extern T0* GE_new884(T1 initialize);
/* New instance of type ET_POSTCONDITIONS */
extern T0* GE_new886(T1 initialize);
/* New instance of type ET_INVARIANTS */
extern T0* GE_new887(T1 initialize);
/* New instance of type KL_STDIN_FILE */
extern T0* GE_new888(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [INTEGER_32] */
extern T0* GE_new890(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new891(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new892(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_KEYWORD] */
extern T0* GE_new893(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_SYMBOL] */
extern T0* GE_new894(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new895(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new896(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
extern T0* GE_new897(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new898(T1 initialize);
/* New instance of type KL_STRING_INPUT_STREAM */
extern T0* GE_new899(T1 initialize);
/* New instance of type ET_TEXT_GROUP */
extern T0* GE_new900(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
extern T0* GE_new901(T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD] */
extern T0* GE_new902(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new903(T1 initialize);
/* New instance of type ET_AGENT_KEYWORD */
extern T0* GE_new904(T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new905(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new906(T1 initialize);
/* New instance of type ET_PRECURSOR_KEYWORD */
extern T0* GE_new907(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new908(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
extern T0* GE_new909(T1 initialize);
/* New instance of type SPECIAL [detachable ET_SYMBOL] */
extern T0* GE_new910(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
extern T0* GE_new911(T1 initialize);
/* New instance of type SPECIAL [detachable ET_POSITION] */
extern T0* GE_new912(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BIT_CONSTANT] */
extern T0* GE_new913(T1 initialize);
/* New instance of type ET_BIT_CONSTANT */
extern T0* GE_new914(T1 initialize);
/* New instance of type SPECIAL [detachable ET_BIT_CONSTANT] */
extern T0* GE_new915(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new916(T1 initialize);
/* New instance of type SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new918(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
extern T0* GE_new919(T1 initialize);
/* New instance of type SPECIAL [detachable ET_BREAK] */
extern T0* GE_new921(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new922(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new924(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
extern T0* GE_new925(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CURRENT] */
extern T0* GE_new926(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
extern T0* GE_new927(T1 initialize);
/* New instance of type ET_FREE_OPERATOR */
extern T0* GE_new928(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FREE_OPERATOR] */
extern T0* GE_new929(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new930(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new932(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new933(T1 initialize);
/* New instance of type ET_KEYWORD_OPERATOR */
extern T0* GE_new934(T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new935(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
extern T0* GE_new936(T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING] */
extern T0* GE_new937(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
extern T0* GE_new938(T1 initialize);
/* New instance of type SPECIAL [detachable ET_REAL_CONSTANT] */
extern T0* GE_new940(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
extern T0* GE_new941(T1 initialize);
/* New instance of type SPECIAL [detachable ET_RESULT] */
extern T0* GE_new942(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new943(T1 initialize);
/* New instance of type ET_RETRY_INSTRUCTION */
extern T0* GE_new944(T1 initialize);
/* New instance of type SPECIAL [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new945(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new946(T1 initialize);
/* New instance of type ET_SYMBOL_OPERATOR */
extern T0* GE_new947(T1 initialize);
/* New instance of type SPECIAL [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new948(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_VOID] */
extern T0* GE_new949(T1 initialize);
/* New instance of type ET_VOID */
extern T0* GE_new950(T1 initialize);
/* New instance of type SPECIAL [detachable ET_VOID] */
extern T0* GE_new951(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new952(T1 initialize);
/* New instance of type ET_SEMICOLON_SYMBOL */
extern T0* GE_new953(T1 initialize);
/* New instance of type SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new954(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new955(T1 initialize);
/* New instance of type SPECIAL [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new956(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new957(T1 initialize);
/* New instance of type ET_QUESTION_MARK_SYMBOL */
extern T0* GE_new958(T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new959(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new960(T1 initialize);
/* New instance of type ET_ACROSS_EXPRESSION */
extern T0* GE_new961(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new962(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new963(T1 initialize);
/* New instance of type ET_ACROSS_INSTRUCTION */
extern T0* GE_new964(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new965(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new966(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new967(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new968(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new969(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new970(T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new971(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new972(T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new974(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new975(T1 initialize);
/* New instance of type ET_AGENT_ARGUMENT_OPERAND_LIST */
extern T0* GE_new976(T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new977(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
extern T0* GE_new978(T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_TARGET] */
extern T0* GE_new979(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
extern T0* GE_new980(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ALIAS_NAME] */
extern T0* GE_new981(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
extern T0* GE_new982(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ASSIGNER] */
extern T0* GE_new984(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_ARGUMENT_LIST] */
extern T0* GE_new985(T1 initialize);
/* New instance of type ET_BRACKET_ARGUMENT_LIST */
extern T0* GE_new986(T1 initialize);
/* New instance of type SPECIAL [detachable ET_BRACKET_ARGUMENT_LIST] */
extern T0* GE_new987(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new988(T1 initialize);
/* New instance of type ET_BRACKET_EXPRESSION */
extern T0* GE_new989(T1 initialize);
/* New instance of type SPECIAL [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new990(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
extern T0* GE_new991(T1 initialize);
/* New instance of type ET_CALL_AGENT */
extern T0* GE_new992(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CALL_AGENT] */
extern T0* GE_new993(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new994(T1 initialize);
/* New instance of type ET_CHECK_INSTRUCTION */
extern T0* GE_new995(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new996(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
extern T0* GE_new997(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE] */
extern T0* GE_new999(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new1000(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new1002(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
extern T0* GE_new1003(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_ITEM] */
extern T0* GE_new1005(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
extern T0* GE_new1006(T1 initialize);
/* New instance of type ET_CHOICE_LIST */
extern T0* GE_new1007(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_LIST] */
extern T0* GE_new1008(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
extern T0* GE_new1009(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLASS] */
extern T0* GE_new1010(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
extern T0* GE_new1011(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLIENT_ITEM] */
extern T0* GE_new1012(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
extern T0* GE_new1013(T1 initialize);
/* New instance of type ET_CLIENTS */
extern T0* GE_new1014(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLIENTS] */
extern T0* GE_new1015(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
extern T0* GE_new1016(T1 initialize);
/* New instance of type SPECIAL [detachable ET_COMPOUND] */
extern T0* GE_new1017(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
extern T0* GE_new1018(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONDITIONAL] */
extern T0* GE_new1020(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1021(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1023(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1024(T1 initialize);
/* New instance of type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
extern T0* GE_new1025(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1026(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new1027(T1 initialize);
/* New instance of type ET_CONSTRAINT_CREATOR */
extern T0* GE_new1028(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new1029(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1030(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1032(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new1033(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new1035(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1036(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1038(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new1039(T1 initialize);
/* New instance of type ET_CONVERT_FEATURE_LIST */
extern T0* GE_new1040(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new1041(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new1042(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new1043(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
extern T0* GE_new1044(T1 initialize);
/* New instance of type ET_CREATOR */
extern T0* GE_new1045(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATOR] */
extern T0* GE_new1046(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
extern T0* GE_new1047(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATOR_LIST] */
extern T0* GE_new1048(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new1049(T1 initialize);
/* New instance of type ET_DEBUG_INSTRUCTION */
extern T0* GE_new1050(T1 initialize);
/* New instance of type SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new1051(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
extern T0* GE_new1052(T1 initialize);
/* New instance of type ET_ELSEIF_PART */
extern T0* GE_new1053(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_PART] */
extern T0* GE_new1054(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new1055(T1 initialize);
/* New instance of type ET_ELSEIF_PART_LIST */
extern T0* GE_new1056(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new1057(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
extern T0* GE_new1058(T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPORT] */
extern T0* GE_new1060(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
extern T0* GE_new1061(T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPORT_LIST] */
extern T0* GE_new1062(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new1063(T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new1064(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new1065(T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new1067(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new1068(T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE */
extern T0* GE_new1069(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new1070(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new1071(T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE_LIST */
extern T0* GE_new1072(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new1073(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new1074(T1 initialize);
/* New instance of type ET_FEATURE_EXPORT */
extern T0* GE_new1075(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new1076(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
extern T0* GE_new1077(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_NAME] */
extern T0* GE_new1078(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1079(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1081(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new1082(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new1083(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1084(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1086(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new1087(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new1088(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new1089(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER */
extern T0* GE_new1090(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new1091(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1092(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1094(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new1095(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new1096(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new1097(T1 initialize);
/* New instance of type ET_IF_INSTRUCTION */
extern T0* GE_new1098(T1 initialize);
/* New instance of type SPECIAL [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new1099(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
extern T0* GE_new1100(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INDEXING_LIST] */
extern T0* GE_new1102(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
extern T0* GE_new1103(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INDEXING_ITEM] */
extern T0* GE_new1105(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
extern T0* GE_new1106(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INDEXING_TERM] */
extern T0* GE_new1108(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
extern T0* GE_new1109(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
extern T0* GE_new1111(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
extern T0* GE_new1112(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INDEXING_TERM_LIST] */
extern T0* GE_new1114(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new1115(T1 initialize);
/* New instance of type ET_INSPECT_INSTRUCTION */
extern T0* GE_new1116(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new1117(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
extern T0* GE_new1118(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INSTRUCTION] */
extern T0* GE_new1120(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
extern T0* GE_new1121(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INVARIANTS] */
extern T0* GE_new1122(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new1123(T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new1124(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
extern T0* GE_new1125(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LIKE_TYPE] */
extern T0* GE_new1127(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new1128(T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE */
extern T0* GE_new1129(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new1130(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1131(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1133(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new1134(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new1135(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new1136(T1 initialize);
/* New instance of type ET_LOOP_INVARIANTS */
extern T0* GE_new1137(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new1138(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new1139(T1 initialize);
/* New instance of type ET_MANIFEST_ARRAY */
extern T0* GE_new1140(T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new1141(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1142(T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1144(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new1145(T1 initialize);
/* New instance of type ET_MANIFEST_STRING_LIST */
extern T0* GE_new1146(T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new1147(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new1148(T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new1149(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
extern T0* GE_new1150(T1 initialize);
/* New instance of type SPECIAL [detachable ET_OBSOLETE] */
extern T0* GE_new1152(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new1153(T1 initialize);
/* New instance of type ET_PARENTHESIZED_EXPRESSION */
extern T0* GE_new1154(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new1155(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
extern T0* GE_new1156(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT] */
extern T0* GE_new1157(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
extern T0* GE_new1158(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_ITEM] */
extern T0* GE_new1159(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
extern T0* GE_new1160(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_LIST] */
extern T0* GE_new1161(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
extern T0* GE_new1162(T1 initialize);
/* New instance of type SPECIAL [detachable ET_POSTCONDITIONS] */
extern T0* GE_new1163(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new1164(T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new1166(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
extern T0* GE_new1167(T1 initialize);
/* New instance of type SPECIAL [detachable ET_RENAME_ITEM] */
extern T0* GE_new1169(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
extern T0* GE_new1170(T1 initialize);
/* New instance of type SPECIAL [detachable ET_RENAME_LIST] */
extern T0* GE_new1171(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new1172(T1 initialize);
/* New instance of type ET_STATIC_CALL_EXPRESSION */
extern T0* GE_new1173(T1 initialize);
/* New instance of type SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new1174(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new1175(T1 initialize);
/* New instance of type ET_STRIP_EXPRESSION */
extern T0* GE_new1176(T1 initialize);
/* New instance of type SPECIAL [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new1177(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
extern T0* GE_new1178(T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_ITEM] */
extern T0* GE_new1180(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
extern T0* GE_new1181(T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_LIST] */
extern T0* GE_new1183(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
extern T0* GE_new1184(T1 initialize);
/* New instance of type ET_VARIANT */
extern T0* GE_new1185(T1 initialize);
/* New instance of type SPECIAL [detachable ET_VARIANT] */
extern T0* GE_new1186(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
extern T0* GE_new1187(T1 initialize);
/* New instance of type ET_WHEN_PART */
extern T0* GE_new1188(T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_PART] */
extern T0* GE_new1189(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new1190(T1 initialize);
/* New instance of type ET_WHEN_PART_LIST */
extern T0* GE_new1191(T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new1192(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
extern T0* GE_new1193(T1 initialize);
/* New instance of type SPECIAL [detachable ET_WRITABLE] */
extern T0* GE_new1194(T6 a1, T1 initialize);
/* New instance of type ET_OBJECT_TEST_LIST */
extern T0* GE_new1197(T1 initialize);
/* New instance of type ET_ACROSS_COMPONENT_LIST */
extern T0* GE_new1198(T1 initialize);
/* New instance of type ET_C3_CHARACTER_CONSTANT */
extern T0* GE_new1199(T1 initialize);
/* New instance of type ET_VERBATIM_STRING */
extern T0* GE_new1200(T1 initialize);
/* New instance of type ET_SPECIAL_MANIFEST_STRING */
extern T0* GE_new1201(T1 initialize);
/* New instance of type ET_REGULAR_INTEGER_CONSTANT */
extern T0* GE_new1202(T1 initialize);
/* New instance of type ET_UNDERSCORED_INTEGER_CONSTANT */
extern T0* GE_new1203(T1 initialize);
/* New instance of type ET_HEXADECIMAL_INTEGER_CONSTANT */
extern T0* GE_new1204(T1 initialize);
/* New instance of type ET_OCTAL_INTEGER_CONSTANT */
extern T0* GE_new1205(T1 initialize);
/* New instance of type ET_BINARY_INTEGER_CONSTANT */
extern T0* GE_new1206(T1 initialize);
/* New instance of type ET_REGULAR_REAL_CONSTANT */
extern T0* GE_new1207(T1 initialize);
/* New instance of type ET_UNDERSCORED_REAL_CONSTANT */
extern T0* GE_new1208(T1 initialize);
/* New instance of type ET_TRUE_CONSTANT */
extern T0* GE_new1210(T1 initialize);
/* New instance of type ET_FALSE_CONSTANT */
extern T0* GE_new1211(T1 initialize);
/* New instance of type ET_C1_CHARACTER_CONSTANT */
extern T0* GE_new1212(T1 initialize);
/* New instance of type ET_C2_CHARACTER_CONSTANT */
extern T0* GE_new1213(T1 initialize);
/* New instance of type ET_CUSTOM_ATTRIBUTE */
extern T0* GE_new1217(T1 initialize);
/* New instance of type ET_CONSTRAINED_FORMAL_PARAMETER */
extern T0* GE_new1218(T1 initialize);
/* New instance of type ET_CONSTRAINT_NAMED_TYPE */
extern T0* GE_new1219(T1 initialize);
/* New instance of type ET_ATTACHMENT_SEPARATE_KEYWORDS */
extern T0* GE_new1220(T1 initialize);
/* New instance of type ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD */
extern T0* GE_new1221(T1 initialize);
/* New instance of type ET_BIT_N */
extern T0* GE_new1222(T1 initialize);
/* New instance of type ET_BIT_FEATURE */
extern T0* GE_new1223(T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new1224(T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new1225(T1 initialize);
/* New instance of type ET_RENAME */
extern T0* GE_new1226(T1 initialize);
/* New instance of type ET_ALL_EXPORT */
extern T0* GE_new1227(T1 initialize);
/* New instance of type ET_CONVERT_FUNCTION */
extern T0* GE_new1229(T1 initialize);
/* New instance of type ET_CONVERT_PROCEDURE */
extern T0* GE_new1230(T1 initialize);
/* New instance of type ET_DO_FUNCTION */
extern T0* GE_new1232(T1 initialize);
/* New instance of type ET_ONCE_FUNCTION */
extern T0* GE_new1233(T1 initialize);
/* New instance of type ET_DEFERRED_FUNCTION */
extern T0* GE_new1234(T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE */
extern T0* GE_new1236(T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE */
extern T0* GE_new1237(T1 initialize);
/* New instance of type ET_PREFIX_NAME */
extern T0* GE_new1238(T1 initialize);
/* New instance of type ET_PREFIX_FREE_NAME */
extern T0* GE_new1239(T1 initialize);
/* New instance of type ET_INFIX_NAME */
extern T0* GE_new1240(T1 initialize);
/* New instance of type ET_ALIASED_FEATURE_NAME */
extern T0* GE_new1241(T1 initialize);
/* New instance of type ET_ALIAS_FREE_NAME */
extern T0* GE_new1242(T1 initialize);
/* New instance of type ET_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new1245(T1 initialize);
/* New instance of type ET_LIKE_FEATURE */
extern T0* GE_new1247(T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_BRACED_TYPE */
extern T0* GE_new1248(T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_TYPE */
extern T0* GE_new1249(T1 initialize);
/* New instance of type ET_ASSIGNER_INSTRUCTION */
extern T0* GE_new1250(T1 initialize);
/* New instance of type ET_ASSIGNMENT */
extern T0* GE_new1251(T1 initialize);
/* New instance of type ET_ASSIGNMENT_ATTEMPT */
extern T0* GE_new1252(T1 initialize);
/* New instance of type ET_LOOP_INSTRUCTION */
extern T0* GE_new1253(T1 initialize);
/* New instance of type ET_NULL_INSTRUCTION */
extern T0* GE_new1254(T1 initialize);
/* New instance of type ET_BANG_INSTRUCTION */
extern T0* GE_new1255(T1 initialize);
/* New instance of type ET_CREATE_INSTRUCTION */
extern T0* GE_new1256(T1 initialize);
/* New instance of type ET_CHOICE_RANGE */
extern T0* GE_new1257(T1 initialize);
/* New instance of type ET_PRECURSOR_INSTRUCTION */
extern T0* GE_new1258(T1 initialize);
/* New instance of type ET_STATIC_CALL_INSTRUCTION */
extern T0* GE_new1260(T1 initialize);
/* New instance of type ET_PRECURSOR_EXPRESSION */
extern T0* GE_new1261(T1 initialize);
/* New instance of type ET_FEATURE_ADDRESS */
extern T0* GE_new1262(T1 initialize);
/* New instance of type ET_CURRENT_ADDRESS */
extern T0* GE_new1263(T1 initialize);
/* New instance of type ET_RESULT_ADDRESS */
extern T0* GE_new1264(T1 initialize);
/* New instance of type ET_EXPRESSION_ADDRESS */
extern T0* GE_new1265(T1 initialize);
/* New instance of type ET_INFIX_EXPRESSION */
extern T0* GE_new1266(T1 initialize);
/* New instance of type ET_INFIX_AND_THEN_OPERATOR */
extern T0* GE_new1267(T1 initialize);
/* New instance of type ET_INFIX_OR_ELSE_OPERATOR */
extern T0* GE_new1268(T1 initialize);
/* New instance of type ET_MANIFEST_TYPE */
extern T0* GE_new1269(T1 initialize);
/* New instance of type ET_PREFIX_EXPRESSION */
extern T0* GE_new1270(T1 initialize);
/* New instance of type ET_OLD_EXPRESSION */
extern T0* GE_new1271(T1 initialize);
/* New instance of type ET_OLD_OBJECT_TEST */
extern T0* GE_new1272(T1 initialize);
/* New instance of type ET_ONCE_MANIFEST_STRING */
extern T0* GE_new1273(T1 initialize);
/* New instance of type ET_DO_FUNCTION_INLINE_AGENT */
extern T0* GE_new1274(T1 initialize);
/* New instance of type ET_ONCE_FUNCTION_INLINE_AGENT */
extern T0* GE_new1275(T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
extern T0* GE_new1276(T1 initialize);
/* New instance of type ET_DO_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1277(T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1278(T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1279(T1 initialize);
/* New instance of type ET_AGENT_OPEN_TARGET */
extern T0* GE_new1280(T1 initialize);
/* New instance of type ET_AGENT_TYPED_OPEN_ARGUMENT */
extern T0* GE_new1281(T1 initialize);
/* New instance of type ET_TAGGED_ASSERTION */
extern T0* GE_new1283(T1 initialize);
/* New instance of type ET_FILE_POSITION */
extern T0* GE_new1284(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
extern T0* GE_new1285(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new1286(T1 initialize);
/* New instance of type ET_PARENT_CHECKER1 */
extern T0* GE_new1287(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER1 */
extern T0* GE_new1288(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new1289(T1 initialize);
/* New instance of type ET_FEATURE_NAME_TESTER */
extern T0* GE_new1290(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new1292(T1 initialize);
/* New instance of type ET_ALIAS_NAME_TESTER */
extern T0* GE_new1293(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLIENT_LIST] */
extern T0* GE_new1295(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1296(T1 initialize);
/* New instance of type ET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1297(T1 initialize);
/* New instance of type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1298(T1 initialize);
/* New instance of type ET_IDENTIFIER_TYPE_RESOLVER */
extern T0* GE_new1299(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
extern T0* GE_new1300(T1 initialize);
/* New instance of type ET_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1301(T1 initialize);
/* New instance of type ET_SIGNATURE_CHECKER */
extern T0* GE_new1302(T1 initialize);
/* New instance of type ET_PARENT_CHECKER2 */
extern T0* GE_new1303(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER2 */
extern T0* GE_new1304(T1 initialize);
/* New instance of type ET_BUILTIN_FEATURE_CHECKER */
extern T0* GE_new1305(T1 initialize);
/* New instance of type ET_PRECURSOR_CHECKER */
extern T0* GE_new1306(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
extern T0* GE_new1307(T1 initialize);
/* New instance of type DS_HASH_SET [ET_CLASS] */
extern T0* GE_new1308(T1 initialize);
/* New instance of type ET_PARENT_CHECKER3 */
extern T0* GE_new1309(T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1310(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
extern T0* GE_new1311(T1 initialize);
/* New instance of type ET_PARENT_FEATURE */
extern T0* GE_new1313(T1 initialize);
/* New instance of type ET_INHERITED_FEATURE */
extern T0* GE_new1314(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1315(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1316(T1 initialize);
/* New instance of type SPECIAL [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1317(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1319(T1 initialize);
/* New instance of type ET_BRACED_TYPE_LIST */
extern T0* GE_new1321(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLASS] */
extern T0* GE_new1322(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_MASTER_CLASS] */
extern T0* GE_new1323(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_UNIVERSE] */
extern T0* GE_new1324(T1 initialize);
/* New instance of type SPECIAL [ET_UNIVERSE] */
extern T0* GE_new1325(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
extern T0* GE_new1327(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1328(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1330(T1 initialize);
/* New instance of type SPECIAL [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1331(T6 a1, T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER1 */
extern T0* GE_new1332(T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER2 */
extern T0* GE_new1333(T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
extern T0* GE_new1334(T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER3 */
extern T0* GE_new1335(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
extern T0* GE_new1336(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [YY_BUFFER] */
extern T0* GE_new1337(T1 initialize);
/* New instance of type UT_SYNTAX_ERROR */
extern T0* GE_new1338(T1 initialize);
/* New instance of type UT_TOO_MANY_INCLUDES_ERROR */
extern T0* GE_new1339(T1 initialize);
/* New instance of type ET_DYNAMIC_TARGET_LIST */
extern T0* GE_new1341(T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER_CONTEXT */
extern T0* GE_new1342(T1 initialize);
/* New instance of type DS_LINKED_QUEUE [STRING_8] */
extern T0* GE_new1344(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [XM_NAMESPACE] */
extern T0* GE_new1345(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
extern T0* GE_new1346(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
extern T0* GE_new1347(T1 initialize);
/* New instance of type SPECIAL [XM_NAMESPACE] */
extern T0* GE_new1348(T6 a1, T1 initialize);
/* New instance of type XM_EIFFEL_CHARACTER_ENTITY */
extern T0* GE_new1349(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [XM_POSITION] */
extern T0* GE_new1350(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
extern T0* GE_new1351(T1 initialize);
/* New instance of type detachable DS_LINKABLE [XM_EIFFEL_SCANNER] */
extern T0* GE_new1352(T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1353(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
extern T0* GE_new1356(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1357(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1358(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1359(T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1360(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1361(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1362(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [STRING_8] */
extern T0* GE_new1363(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [STRING_8] */
extern T0* GE_new1364(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_TARGET] */
extern T0* GE_new1365(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
extern T0* GE_new1366(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
extern T0* GE_new1367(T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1368(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1369(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1370(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_LIBRARY] */
extern T0* GE_new1371(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIBRARY] */
extern T0* GE_new1372(T1 initialize);
/* New instance of type SPECIAL [ET_LIBRARY] */
extern T0* GE_new1373(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1374(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1375(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1376(T1 initialize);
/* New instance of type SPECIAL [NATIVE_STRING] */
extern T0* GE_new1377(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
extern T0* GE_new1378(T1 initialize);
/* New instance of type SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1379(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1380(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1381(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
extern T0* GE_new1383(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
extern T0* GE_new1384(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1385(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT] */
extern T0* GE_new1386(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [NATURAL_8] */
extern T0* GE_new1389(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
extern T0* GE_new1390(T1 initialize);
/* New instance of type ET_XACE_INVALID_EXPRESSION_ERROR */
extern T0* GE_new1392(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
extern T0* GE_new1395(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
extern T0* GE_new1396(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1397(T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ET_UNIVERSE] */
extern T0* GE_new1398(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_UNIVERSE]] */
extern T0* GE_new1399(T1 initialize);
/* New instance of type [attached] TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
extern T0* GE_new1400(T1 initialize);
/* New instance of type [attached] TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_UNIVERSE]]] */
extern T0* GE_new1401(T1 initialize);
/* New instance of type KL_AGENT_HASH_FUNCTION [STRING_8] */
extern T0* GE_new1404(T1 initialize);
/* New instance of type [attached] TUPLE [STRING_8] */
extern T0* GE_new1405(T1 initialize);
/* New instance of type [attached] FUNCTION [KL_STRING_ROUTINES, [attached] TUPLE [STRING_8], INTEGER_32] */
extern T0* GE_new1406(T1 initialize);
/* New instance of type [attached] TUPLE [KL_STRING_ROUTINES] */
extern T0* GE_new1407(T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_SUBLIST */
extern T0* GE_new1409(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new1410(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
extern T0* GE_new1413(T1 initialize);
/* New instance of type XM_COMMENT */
extern T0* GE_new1414(T1 initialize);
/* New instance of type XM_PROCESSING_INSTRUCTION */
extern T0* GE_new1415(T1 initialize);
/* New instance of type XM_CHARACTER_DATA */
extern T0* GE_new1416(T1 initialize);
/* New instance of type detachable DS_CELL [detachable ET_CLASS] */
extern T0* GE_new1422(T1 initialize);
/* New instance of type [attached] TUPLE [detachable DS_CELL [detachable ET_CLASS]] */
extern T0* GE_new1423(T1 initialize);
/* New instance of type [attached] TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new1424(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLUSTER] */
extern T0* GE_new1425(T1 initialize);
/* New instance of type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
extern T0* GE_new1426(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_TYPE */
extern T0* GE_new1427(T1 initialize);
/* New instance of type ET_UNQUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new1428(T1 initialize);
/* New instance of type [attached] TUPLE [ET_EIFFEL_PARSER, DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new1430(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new1431(T1 initialize);
/* New instance of type ET_FEATURE_IDS */
extern T0* GE_new1439(T1 initialize);
/* New instance of type HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
extern T0* GE_new1440(T1 initialize);
/* New instance of type INTEGER_OVERFLOW_CHECKER */
extern T0* GE_new1443(T1 initialize);
/* New instance of type SPECIAL [ARRAY [INTEGER_32]] */
extern T0* GE_new1444(T6 a1, T1 initialize);
/* New instance of type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
extern T0* GE_new1445(T6 a1, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new1446(T1 initialize);
/* New instance of type detachable DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new1447(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
extern T0* GE_new1448(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1449(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1450(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1451(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
extern T0* GE_new1452(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1453(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1454(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1455(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_CONDITION] */
extern T0* GE_new1456(T1 initialize);
/* New instance of type detachable DS_LINKABLE [XM_DOCUMENT_NODE] */
extern T0* GE_new1457(T1 initialize);
/* New instance of type DS_LINKED_QUEUE [CHARACTER_8] */
extern T0* GE_new1462(T1 initialize);
/* New instance of type UC_UTF16_ROUTINES */
extern T0* GE_new1463(T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1464(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1465(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1466(T1 initialize);
/* New instance of type LX_DFA_WILDCARD */
extern T0* GE_new1467(T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
extern T0* GE_new1468(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new1470(T1 initialize);
/* New instance of type detachable DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new1471(T1 initialize);
/* New instance of type SPECIAL [ET_XACE_CLUSTER] */
extern T0* GE_new1472(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
extern T0* GE_new1473(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
extern T0* GE_new1474(T1 initialize);
/* New instance of type SPECIAL [ET_NAMED_CLASS] */
extern T0* GE_new1475(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
extern T0* GE_new1477(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
extern T0* GE_new1479(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_QUERY] */
extern T0* GE_new1480(T1 initialize);
/* New instance of type SPECIAL [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1481(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1482(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new1483(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new1484(T1 initialize);
/* New instance of type SPECIAL [ET_ASSERTION_ITEM] */
extern T0* GE_new1485(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
extern T0* GE_new1486(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
extern T0* GE_new1487(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1488(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
extern T0* GE_new1489(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
extern T0* GE_new1492(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
extern T0* GE_new1493(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new1494(T1 initialize);
/* New instance of type SPECIAL [ET_FLATTENED_FEATURE] */
extern T0* GE_new1495(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
extern T0* GE_new1498(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new1500(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
extern T0* GE_new1501(T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT_LIST] */
extern T0* GE_new1502(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
extern T0* GE_new1503(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1505(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT] */
extern T0* GE_new1506(T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT] */
extern T0* GE_new1507(T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME] */
extern T0* GE_new1508(T1 initialize);
/* New instance of type ET_CALL_NAME_TESTER */
extern T0* GE_new1509(T1 initialize);
/* New instance of type DS_HASH_SET [ET_CALL_NAME] */
extern T0* GE_new1511(T1 initialize);
/* New instance of type DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME] */
extern T0* GE_new1512(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME] */
extern T0* GE_new1513(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1514(T1 initialize);
/* New instance of type ET_REDECLARED_FEATURE */
extern T0* GE_new1515(T1 initialize);
/* New instance of type ET_REPLICATED_FEATURE */
extern T0* GE_new1518(T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
extern T0* GE_new1519(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
extern T0* GE_new1520(T1 initialize);
/* New instance of type ET_DOTNET_SIGNATURE_TESTER */
extern T0* GE_new1521(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DOTNET_FEATURE] */
extern T0* GE_new1522(T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new1524(T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
extern T0* GE_new1526(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
extern T0* GE_new1527(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
extern T0* GE_new1528(T1 initialize);
/* New instance of type detachable DS_LINKED_LIST [ET_PARENT_FEATURE] */
extern T0* GE_new1529(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
extern T0* GE_new1530(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_CLASS] */
extern T0* GE_new1531(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1533(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
extern T0* GE_new1534(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
extern T0* GE_new1535(T1 initialize);
/* New instance of type SPECIAL [YY_BUFFER] */
extern T0* GE_new1537(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [YY_BUFFER] */
extern T0* GE_new1538(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TARGET] */
extern T0* GE_new1539(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
extern T0* GE_new1540(T1 initialize);
/* New instance of type DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new1542(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new1543(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1544(T1 initialize);
/* New instance of type attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1545(T1 initialize);
/* New instance of type [attached] TUPLE [ET_GROUP] */
extern T0* GE_new1546(T1 initialize);
/* New instance of type [attached] TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
extern T0* GE_new1547(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_CLASS]], [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_CLASS]]] */
extern T0* GE_new1548(T1 initialize);
/* New instance of type [attached] TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1549(T1 initialize);
/* New instance of type ET_CLUSTER_ERROR */
extern T0* GE_new1550(T1 initialize);
/* New instance of type ET_SYNTAX_ERROR */
extern T0* GE_new1551(T1 initialize);
/* New instance of type AP_OPTION_COMPARATOR */
extern T0* GE_new1552(T1 initialize);
/* New instance of type DS_QUICK_SORTER [AP_OPTION] */
extern T0* GE_new1553(T1 initialize);
/* New instance of type [attached] TUPLE [ET_XACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1556(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1557(T1 initialize);
/* New instance of type ET_FORMAL_COMMA_ARGUMENT */
extern T0* GE_new1563(T1 initialize);
/* New instance of type ET_LOCAL_COMMA_VARIABLE */
extern T0* GE_new1564(T1 initialize);
/* New instance of type ET_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new1565(T1 initialize);
/* New instance of type ET_KEYWORD_EXPRESSION */
extern T0* GE_new1567(T1 initialize);
/* New instance of type detachable DS_LINKABLE [XM_ELEMENT_NODE] */
extern T0* GE_new1569(T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_QUERY] */
extern T0* GE_new1571(T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_PROCEDURE] */
extern T0* GE_new1572(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1577(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
extern T0* GE_new1578(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_INTERNAL_UNIVERSE, ET_ECF_STATE] */
extern T0* GE_new1579(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1581(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
extern T0* GE_new1582(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1584(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
extern T0* GE_new1585(T1 initialize);
/* New instance of type detachable DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new1588(T1 initialize);
/* New instance of type [attached] TUPLE [LX_WILDCARD] */
extern T0* GE_new1589(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [LX_WILDCARD]] */
extern T0* GE_new1590(T1 initialize);
/* New instance of type [attached] TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
extern T0* GE_new1591(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [STRING_8]] */
extern T0* GE_new1593(T1 initialize);
/* New instance of type [attached] TUPLE [KL_STRING_ROUTINES, STRING_8] */
extern T0* GE_new1594(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_CURRENT_TARGET */
extern T0* GE_new1598(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
extern T0* GE_new1608(T1 initialize);
/* New instance of type SPECIAL [ET_CLUSTER] */
extern T0* GE_new1611(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLUSTER] */
extern T0* GE_new1612(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
extern T0* GE_new1613(T1 initialize);
/* New instance of type SPECIAL [NATURAL_64] */
extern T0* GE_new1614(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_CLUSTER] */
extern T0* GE_new1615(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
extern T0* GE_new1616(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
extern T0* GE_new1617(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1618(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1619(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1620(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1621(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1622(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1623(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1624(T1 initialize);
/* New instance of type SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1625(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1626(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
extern T0* GE_new1627(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_FILE_RULE] */
extern T0* GE_new1628(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
extern T0* GE_new1629(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1630(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1631(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1632(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1633(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1634(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1635(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1636(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1637(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1638(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_CONDITION] */
extern T0* GE_new1639(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_CONDITION] */
extern T0* GE_new1640(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION] */
extern T0* GE_new1641(T1 initialize);
/* New instance of type detachable DS_LINKABLE [CHARACTER_8] */
extern T0* GE_new1642(T1 initialize);
/* New instance of type LX_WILDCARD_PARSER */
extern T0* GE_new1643(T1 initialize);
/* New instance of type LX_DESCRIPTION */
extern T0* GE_new1644(T1 initialize);
/* New instance of type LX_FULL_DFA */
extern T0* GE_new1645(T1 initialize);
/* New instance of type SPECIAL [LX_WILDCARD] */
extern T0* GE_new1647(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_WILDCARD] */
extern T0* GE_new1650(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
extern T0* GE_new1651(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
extern T0* GE_new1652(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
extern T0* GE_new1653(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
extern T0* GE_new1654(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME] */
extern T0* GE_new1655(T1 initialize);
/* New instance of type SPECIAL [ET_RENAME] */
extern T0* GE_new1656(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_CALL_NAME] */
extern T0* GE_new1661(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RENAME] */
extern T0* GE_new1662(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
extern T0* GE_new1663(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_CALL_NAME] */
extern T0* GE_new1664(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME] */
extern T0* GE_new1665(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME] */
extern T0* GE_new1668(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1669(T1 initialize);
/* New instance of type SPECIAL [ET_REPLICABLE_FEATURE] */
extern T0* GE_new1670(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
extern T0* GE_new1672(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
extern T0* GE_new1673(T1 initialize);
/* New instance of type detachable DS_LINKABLE [ET_ADAPTED_FEATURE] */
extern T0* GE_new1674(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
extern T0* GE_new1675(T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_FEATURE] */
extern T0* GE_new1676(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
extern T0* GE_new1677(T1 initialize);
/* New instance of type SPECIAL [ET_DOTNET_FEATURE] */
extern T0* GE_new1678(T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
extern T0* GE_new1679(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
extern T0* GE_new1680(T1 initialize);
/* New instance of type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new1681(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new1684(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new1685(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
extern T0* GE_new1686(T1 initialize);
/* New instance of type detachable DS_LINKABLE [ET_DOTNET_FEATURE] */
extern T0* GE_new1687(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
extern T0* GE_new1688(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new1689(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_ERROR */
extern T0* GE_new1690(T1 initialize);
/* New instance of type ET_STANDARD_ONCE_KEYS */
extern T0* GE_new1693(T1 initialize);
/* New instance of type KL_CHARACTER_ROUTINES */
extern T0* GE_new1696(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
extern T0* GE_new1697(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_IDENTIFIER, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new1698(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new1703(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new1704(T1 initialize);
/* New instance of type ET_SEEDED_QUERY_COMPARATOR */
extern T0* GE_new1708(T1 initialize);
/* New instance of type ET_SEEDED_PROCEDURE_COMPARATOR */
extern T0* GE_new1711(T1 initialize);
/* New instance of type [attached] TUPLE [ET_CLIENT_LIST] */
extern T0* GE_new1715(T1 initialize);
/* New instance of type ET_INFIX_CAST_EXPRESSION */
extern T0* GE_new1723(T1 initialize);
/* New instance of type detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1726(T1 initialize);
/* New instance of type SPECIAL [ET_LIKE_FEATURE] */
extern T0* GE_new1731(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
extern T0* GE_new1732(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
extern T0* GE_new1733(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_RULE] */
extern T0* GE_new1734(T1 initialize);
/* New instance of type LX_START_CONDITIONS */
extern T0* GE_new1735(T1 initialize);
/* New instance of type LX_ACTION_FACTORY */
extern T0* GE_new1736(T1 initialize);
/* New instance of type LX_SYMBOL_CLASS */
extern T0* GE_new1737(T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8] */
extern T0* GE_new1738(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
extern T0* GE_new1739(T1 initialize);
/* New instance of type SPECIAL [LX_SYMBOL_CLASS] */
extern T0* GE_new1740(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_NFA] */
extern T0* GE_new1741(T1 initialize);
/* New instance of type LX_NFA */
extern T0* GE_new1742(T1 initialize);
/* New instance of type SPECIAL [LX_NFA] */
extern T0* GE_new1743(T6 a1, T1 initialize);
/* New instance of type LX_EQUIVALENCE_CLASSES */
extern T0* GE_new1744(T1 initialize);
/* New instance of type LX_RULE */
extern T0* GE_new1745(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8] */
extern T0* GE_new1746(T1 initialize);
/* New instance of type LX_UNRECOGNIZED_RULE_ERROR */
extern T0* GE_new1747(T1 initialize);
/* New instance of type LX_MISSING_QUOTE_ERROR */
extern T0* GE_new1748(T1 initialize);
/* New instance of type LX_BAD_CHARACTER_CLASS_ERROR */
extern T0* GE_new1749(T1 initialize);
/* New instance of type LX_BAD_CHARACTER_ERROR */
extern T0* GE_new1750(T1 initialize);
/* New instance of type LX_FULL_AND_META_ERROR */
extern T0* GE_new1751(T1 initialize);
/* New instance of type LX_FULL_AND_REJECT_ERROR */
extern T0* GE_new1752(T1 initialize);
/* New instance of type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
extern T0* GE_new1753(T1 initialize);
/* New instance of type LX_CHARACTER_OUT_OF_RANGE_ERROR */
extern T0* GE_new1754(T1 initialize);
/* New instance of type SPECIAL [LX_RULE] */
extern T0* GE_new1755(T6 a1, T1 initialize);
/* New instance of type ARRAY [LX_RULE] */
extern T0* GE_new1756(T1 initialize);
/* New instance of type LX_DFA_STATE */
extern T0* GE_new1757(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_NFA_STATE] */
extern T0* GE_new1758(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_DFA_STATE] */
extern T0* GE_new1759(T1 initialize);
/* New instance of type LX_SYMBOL_PARTITIONS */
extern T0* GE_new1760(T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [LX_RULE] */
extern T0* GE_new1761(T1 initialize);
/* New instance of type LX_START_CONDITION */
extern T0* GE_new1762(T1 initialize);
/* New instance of type LX_TRANSITION_TABLE [LX_DFA_STATE] */
extern T0* GE_new1763(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_NFA] */
extern T0* GE_new1764(T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_NFA, INTEGER_32] */
extern T0* GE_new1765(T1 initialize);
/* New instance of type LX_NFA_STATE */
extern T0* GE_new1766(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
extern T0* GE_new1768(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
extern T0* GE_new1770(T1 initialize);
/* New instance of type ET_UNIVERSE_ERROR */
extern T0* GE_new1771(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1773(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_LIBRARY] */
extern T0* GE_new1776(T1 initialize);
/* New instance of type ET_PARENTHESIS_SYMBOL */
extern T0* GE_new1791(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
extern T0* GE_new1796(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
extern T0* GE_new1797(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_CLUSTER] */
extern T0* GE_new1804(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_CLUSTER]] */
extern T0* GE_new1805(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
extern T0* GE_new1806(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_FILE_RULE] */
extern T0* GE_new1807(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] NONE, [attached] TUPLE [ET_ECF_FILE_RULE]] */
extern T0* GE_new1808(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_FILE_RULES] */
extern T0* GE_new1809(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [ET_ECF_FILE_RULE]] */
extern T0* GE_new1810(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_STATE] */
extern T0* GE_new1811(T1 initialize);
/* New instance of type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
extern T0* GE_new1815(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1818(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_RULE] */
extern T0* GE_new1820(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_RULE] */
extern T0* GE_new1821(T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [STRING_8] */
extern T0* GE_new1822(T1 initialize);
/* New instance of type SPECIAL [LX_START_CONDITION] */
extern T0* GE_new1823(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
extern T0* GE_new1824(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
extern T0* GE_new1825(T1 initialize);
/* New instance of type LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new1828(T1 initialize);
/* New instance of type LX_EPSILON_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new1830(T1 initialize);
/* New instance of type LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new1832(T1 initialize);
/* New instance of type DS_BILINKABLE [INTEGER_32] */
extern T0* GE_new1833(T1 initialize);
/* New instance of type SPECIAL [DS_BILINKABLE [INTEGER_32]] */
extern T0* GE_new1834(T6 a1, T1 initialize);
/* New instance of type ARRAY [DS_BILINKABLE [INTEGER_32]] */
extern T0* GE_new1835(T1 initialize);
/* New instance of type LX_ACTION */
extern T0* GE_new1837(T1 initialize);
/* New instance of type DS_BUBBLE_SORTER [LX_NFA_STATE] */
extern T0* GE_new1838(T1 initialize);
/* New instance of type DS_BUBBLE_SORTER [LX_RULE] */
extern T0* GE_new1840(T1 initialize);
/* New instance of type SPECIAL [LX_NFA_STATE] */
extern T0* GE_new1842(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
extern T0* GE_new1844(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
extern T0* GE_new1845(T1 initialize);
/* New instance of type SPECIAL [LX_DFA_STATE] */
extern T0* GE_new1847(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
extern T0* GE_new1848(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
extern T0* GE_new1849(T1 initialize);
/* New instance of type KL_ARRAY [LX_RULE] */
extern T0* GE_new1850(T1 initialize);
/* New instance of type ARRAY [detachable LX_DFA_STATE] */
extern T0* GE_new1851(T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
extern T0* GE_new1852(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_NFA] */
extern T0* GE_new1853(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
extern T0* GE_new1855(T1 initialize);
/* New instance of type ET_DYNAMIC_EQUALITY_EXPRESSION */
extern T0* GE_new1858(T1 initialize);
/* New instance of type ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new1859(T1 initialize);
/* New instance of type ET_CONVERT_BUILTIN_EXPRESSION */
extern T0* GE_new1860(T1 initialize);
/* New instance of type ET_CONVERT_FROM_EXPRESSION */
extern T0* GE_new1861(T1 initialize);
/* New instance of type ET_CONVERT_TO_EXPRESSION */
extern T0* GE_new1862(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
extern T0* GE_new1867(T1 initialize);
/* New instance of type detachable DS_LINKABLE [ET_PARENT_FEATURE] */
extern T0* GE_new1870(T1 initialize);
/* New instance of type DS_SHELL_SORTER [INTEGER_32] */
extern T0* GE_new1872(T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [LX_RULE] */
extern T0* GE_new1873(T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
extern T0* GE_new1876(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1879(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1880(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1881(T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new1882(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new1883(T1 initialize);
/* New instance of type KL_ARRAY [STRING_8] */
extern T0* GE_new1884(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1885(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1886(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1887(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_DOTNET_GAC_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1888(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1889(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1890(T1 initialize);
/* New instance of type [attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1891(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] NONE, [attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
extern T0* GE_new1892(T1 initialize);
/* New instance of type ET_AST_NULL_LEAF */
extern T0* GE_new1895(T1 initialize);
/* GEC.execute */
extern T0* T22c42(GE_context* ac);
/* GEC.report_cannot_read_error */
extern void T22f48(GE_context* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error */
extern void T32f9(GE_context* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error_message */
extern void T32f11(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_line */
extern void T131f15(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_new_line */
extern void T131f19(GE_context* ac, T0* C);
/* KL_STDERR_FILE.put_string */
extern void T131f16(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.old_put_string */
extern void T131f20(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.console_ps */
extern void T131f24(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_ROUTINES.as_string */
extern T0* T34f6(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.string */
extern T0* T847f8(GE_context* ac, T0* C);
/* UC_UTF8_STRING.next_byte_index */
extern T6 T847f37(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_byte_count */
extern T6 T846f3(GE_context* ac, T0* C, T2 a1);
/* CHARACTER_8.is_less_equal */
extern T1 T2f7(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.is_less */
extern T1 T2f6(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.natural_32_code */
extern T10 T2f11(GE_context* ac, T2* C);
/* INTEGER_32.to_natural_32 */
extern T10 T6f20(GE_context* ac, T6* C);
/* UC_UTF8_STRING.utf8 */
extern unsigned char ge311os14397;
extern T0* ge311ov14397;
extern T0* T847f41(GE_context* ac, T0* C);
/* UC_UTF8_ROUTINES.default_create */
extern T0* T846c36(GE_context* ac);
/* KL_INTEGER_ROUTINES.to_character */
extern T2 T232f1(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.integer_ */
extern unsigned char ge217os3805;
extern T0* ge217ov3805;
extern T0* T847f36(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.default_create */
extern T0* T232c5(GE_context* ac);
/* INTEGER_32.is_less_equal */
extern T1 T6f14(GE_context* ac, T6* C, T6 a1);
/* KL_PLATFORM.maximum_character_code */
extern unsigned char ge292os16545;
extern T6 ge292ov16545;
extern T6 T231f1(GE_context* ac, T0* C);
/* UC_UTF8_STRING.platform */
extern unsigned char ge299os2415;
extern T0* ge299ov2415;
extern T0* T847f35(GE_context* ac, T0* C);
/* KL_PLATFORM.default_create */
extern T0* T231c3(GE_context* ac);
/* UC_UTF8_STRING.item_code_at_byte_index */
extern T6 T847f34(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_next_value */
extern T6 T846f6(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.encoded_first_value */
extern T6 T846f4(GE_context* ac, T0* C, T2 a1);
/* STRING_8.append_character */
extern void T17f46(GE_context* ac, T0* C, T2 a1);
/* STRING_8.resize */
extern void T17f47(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area_with_default */
extern T0* T15f4(GE_context* ac, T0* C, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].fill_with */
extern void T15f14(GE_context* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].extend */
extern void T15f16(GE_context* ac, T0* C, T2 a1);
/* INTEGER_32.min */
extern T6 T6f16(GE_context* ac, T6* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area */
extern T0* T15f5(GE_context* ac, T0* C, T6 a1);
/* STRING_8.additional_space */
extern T6 T17f5(GE_context* ac, T0* C);
/* INTEGER_32.max */
extern T6 T6f13(GE_context* ac, T6* C, T6 a1);
/* INTEGER_32.is_greater_equal */
extern T1 T6f12(GE_context* ac, T6* C, T6 a1);
/* STRING_8.capacity */
extern T6 T17f4(GE_context* ac, T0* C);
/* UC_UTF8_STRING.byte_item */
extern T2 T847f33(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.old_item */
extern T2 T847f49(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.set_count */
extern void T847f81(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.reset_byte_index_cache */
extern void T847f97(GE_context* ac, T0* C);
/* STRING_8.make */
extern void T17f44(GE_context* ac, T0* C, T6 a1);
/* STRING_8.make */
extern T0* T17c44(GE_context* ac, T6 a1);
/* SPECIAL [CHARACTER_8].make_filled */
extern T0* T15c12(GE_context* ac, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].make_empty */
extern void T15f15(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].make_empty */
extern T0* T15c15(GE_context* ac, T6 a1);
/* STRING_8.string */
extern T0* T17f22(GE_context* ac, T0* C);
/* STRING_8.make_from_string */
extern T0* T17c64(GE_context* ac, T0* a1);
/* SPECIAL [CHARACTER_8].copy_data */
extern void T15f18(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_8].force */
extern void T15f19(GE_context* ac, T0* C, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].move_data */
extern void T15f20(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].overlapping_move */
extern void T15f17(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].non_overlapping_move */
extern void T15f21(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_8.area_lower */
extern T6 T17f16(GE_context* ac, T0* C);
/* UC_UTF8_STRING.as_string */
extern T0* T847f7(GE_context* ac, T0* C);
/* UC_UTF8_STRING.to_utf8 */
extern T0* T847f31(GE_context* ac, T0* C);
/* KL_ANY_ROUTINES.same_types */
extern T1 T134f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.any_ */
extern unsigned char ge212os2414;
extern T0* ge212ov2414;
extern T0* T34f2(GE_context* ac, T0* C);
/* KL_ANY_ROUTINES.default_create */
extern T0* T134c3(GE_context* ac);
/* KL_STDERR_FILE.string_ */
extern unsigned char ge219os1985;
extern T0* ge219ov1985;
extern T0* T131f11(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.default_create */
extern T0* T34c19(GE_context* ac);
/* UT_ERROR_HANDLER.message */
extern T0* T32f5(GE_context* ac, T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.make */
extern T0* T86c8(GE_context* ac, T0* a1);
/* ARRAY [STRING_8].put */
extern void T142f12(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [STRING_8].make_filled */
extern T0* T142c11(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [STRING_8].make_filled_area */
extern void T142f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].make_filled */
extern T0* T141c7(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [STRING_8].fill_with */
extern void T141f10(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].extend */
extern void T141f13(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [STRING_8].make_empty */
extern void T141f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].make_empty */
extern T0* T141c8(GE_context* ac, T6 a1);
/* GEC.process_system */
extern void T22f47(GE_context* ac, T0* C, T0* a1);
/* KL_SHELL_COMMAND.execute */
extern void T75f13(GE_context* ac, T0* C);
/* KL_SHELL_COMMAND.operating_system */
extern unsigned char ge298os1980;
extern T0* ge298ov1980;
extern T0* T75f6(GE_context* ac, T0* C);
/* KL_OPERATING_SYSTEM.default_create */
extern T0* T84c6(GE_context* ac);
/* KL_SHELL_COMMAND.system */
extern void T75f14(GE_context* ac, T0* C, T0* a1);
/* KL_SHELL_COMMAND.system_call */
extern T6 T75f9(GE_context* ac, T0* C, T14 a1);
/* NATIVE_STRING.item */
extern T14 T368f3(GE_context* ac, T0* C);
/* NATIVE_STRING.make */
extern T0* T368c9(GE_context* ac, T0* a1);
/* NATIVE_STRING.set_string */
extern void T368f12(GE_context* ac, T0* C, T0* a1);
/* NATIVE_STRING.set_substring */
extern void T368f13(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* NATIVE_STRING.unit_size */
extern T6 T368f5(GE_context* ac, T0* C);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_8_0_pointer */
extern void T535f11(GE_context* ac, T535* C, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* CELL [INTEGER_32].put */
extern void T536f2(GE_context* ac, T0* C, T6 a1);
/* CELL [INTEGER_32].put */
extern T0* T536c2(GE_context* ac, T6 a1);
/* MANAGED_POINTER.put_natural_8 */
extern void T128f15(GE_context* ac, T0* C, T8 a1, T6 a2);
/* POINTER.memory_copy */
extern void T14f13(GE_context* ac, T14* C, T14 a1, T6 a2);
/* POINTER.c_memcpy */
extern void T14f17(GE_context* ac, T14* C, T14 a1, T14 a2, T6 a3);
/* NATURAL_32.to_natural_8 */
extern T8 T10f5(GE_context* ac, T10* C);
/* NATURAL_32.is_less_equal */
extern T1 T10f3(GE_context* ac, T10* C, T10 a1);
/* UTF_CONVERTER.to_natural_32 */
extern T10 T535f7(GE_context* ac, T535* C, T0* a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parsed_natural_32 */
extern T10 T1440f12(GE_context* ac, T0* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_string_with_type */
extern void T1440f19(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T1440f19ot1(T0* a1, T0** a2);
extern T1 T1440f19ot2(T0* a1, T0** a2);
/* NATURAL_32.is_valid_character_8_code */
extern T1 T10f17(GE_context* ac, T10* C);
/* CHARACTER_32.is_character_8 */
extern T1 T3f3(GE_context* ac, T3* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_character */
extern void T1440f22(GE_context* ac, T0* C, T2 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflowed */
extern T1 T1440f16(GE_context* ac, T0* C);
/* INTEGER_OVERFLOW_CHECKER.will_overflow */
extern T1 T1443f7(GE_context* ac, T0* C, T11 a1, T11 a2, T6 a3, T6 a4);
/* NATURAL_64.is_greater */
extern T1 T11f11(GE_context* ac, T11* C, T11 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflow_checker */
extern unsigned char ge1526os37610;
extern T0* ge1526ov37610;
extern T0* T1440f15(GE_context* ac, T0* C);
/* INTEGER_OVERFLOW_CHECKER.make */
extern T0* T1443c13(GE_context* ac);
/* NATURAL_64.to_natural_64 */
extern T11 T11f12(GE_context* ac, T11* C);
/* NATURAL_32.to_natural_64 */
extern T11 T10f22(GE_context* ac, T10* C);
/* NATURAL_16.to_natural_64 */
extern T11 T9f12(GE_context* ac, T9* C);
/* NATURAL_8.to_natural_64 */
extern T11 T8f17(GE_context* ac, T8* C);
/* INTEGER_64.to_natural_64 */
extern T11 T7f9(GE_context* ac, T7* C);
/* INTEGER_16.to_natural_64 */
extern T11 T5f3(GE_context* ac, T5* C);
/* INTEGER_8.to_natural_64 */
extern T11 T4f3(GE_context* ac, T4* C);
/* SPECIAL [NATURAL_64].extend */
extern void T1614f5(GE_context* ac, T0* C, T11 a1);
/* SPECIAL [NATURAL_64].make_empty */
extern T0* T1614c4(GE_context* ac, T6 a1);
/* STRING_8.has */
extern T1 T17f40(GE_context* ac, T0* C, T2 a1);
/* INTEGER_32.to_natural_64 */
extern T11 T6f26(GE_context* ac, T6* C);
/* CHARACTER_8.is_greater_equal */
extern T1 T2f5(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.is_hexa_digit */
extern T1 T2f26(GE_context* ac, T2* C);
/* NATURAL_8.is_greater */
extern T1 T8f2(GE_context* ac, T8* C, T8 a1);
/* CHARACTER_8.character_types */
extern T8 T2f9(GE_context* ac, T2* C, T6 a1);
/* CHARACTER_8.internal_character_types */
extern unsigned char ge1423os93;
extern T0* ge1423ov93;
extern T0* T2f12(GE_context* ac, T2* C);
/* SPECIAL [NATURAL_8].fill_with */
extern void T542f8(GE_context* ac, T0* C, T8 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_8].extend */
extern void T542f7(GE_context* ac, T0* C, T8 a1);
/* SPECIAL [NATURAL_8].make_empty */
extern void T542f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_8].make_empty */
extern T0* T542c6(GE_context* ac, T6 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.reset */
extern void T1440f18(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.ctoi_convertor */
extern unsigned char ge1496os29059;
extern T0* ge1496ov29059;
extern T0* T535f8(GE_context* ac, T535* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_trailing_separators_acceptable */
extern void T1440f21(GE_context* ac, T0* C, T1 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_leading_separators_acceptable */
extern void T1440f20(GE_context* ac, T0* C, T1 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.make */
extern T0* T1440c17(GE_context* ac);
/* UTF_CONVERTER.is_hexa_decimal */
extern T1 T535f6(GE_context* ac, T535* C, T0* a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.is_integral_integer */
extern T1 T1440f14(GE_context* ac, T0* C);
/* MANAGED_POINTER.resize */
extern void T128f11(GE_context* ac, T0* C, T6 a1);
/* POINTER.memory_set */
extern void T14f12(GE_context* ac, T14* C, T6 a1, T6 a2);
/* POINTER.c_memset */
extern void T14f16(GE_context* ac, T14* C, T14 a1, T6 a2, T6 a3);
/* EXCEPTIONS.raise */
extern void T836f2(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.raise */
extern void T117f16(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.raise */
extern void T19f17(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.code */
extern T6 T117f8(GE_context* ac, T0* C);
/* C_STRING.item */
extern T14 T537f6(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.default_pointer */
extern T14 T19f12(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.set_last_exception */
extern void T19f16(GE_context* ac, T0* C, T0* a1);
/* CELL [detachable EXCEPTION].put */
extern void T25f2(GE_context* ac, T0* C, T0* a1);
/* CELL [detachable EXCEPTION].put */
extern T0* T25c2(GE_context* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.last_exception_cell */
extern unsigned char ge1698os1921;
extern T0* ge1698ov1921;
extern T0* T19f5(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.last_exception */
extern T0* T19f8(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.in_rescue */
extern T1 T19f11(GE_context* ac, T0* C);
/* DEVELOPER_EXCEPTION.is_ignored */
extern T1 T117f7(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.is_ignored */
extern T1 T19f13(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].has */
extern T1 T23f34(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].same_keys */
extern T1 T23f26(GE_context* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].hash_code_of */
extern T6 T23f25(GE_context* ac, T0* C, T6 a1);
/* INTEGER_32.hash_code */
extern T6 T6f17(GE_context* ac, T6* C);
/* ISE_EXCEPTION_MANAGER.ignored_exceptions */
extern unsigned char ge1698os1916;
extern T0* ge1698ov1916;
extern T0* T19f1(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].make */
extern T0* T23c35(GE_context* ac, T6 a1);
/* SPECIAL [INTEGER_32].make_filled */
extern T0* T123c9(GE_context* ac, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].fill_with */
extern void T123f12(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].extend */
extern void T123f13(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].make_filled */
extern T0* T124c6(GE_context* ac, T1 a1, T6 a2);
/* SPECIAL [BOOLEAN].fill_with */
extern void T124f9(GE_context* ac, T0* C, T1 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].extend */
extern void T124f11(GE_context* ac, T0* C, T1 a1);
/* SPECIAL [BOOLEAN].make_empty */
extern void T124f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].make_empty */
extern T0* T124c8(GE_context* ac, T6 a1);
/* SPECIAL [INTEGER_32].make_empty */
extern void T123f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].make_empty */
extern T0* T123c8(GE_context* ac, T6 a1);
/* PRIMES.higher_prime */
extern T6 T122f1(GE_context* ac, T0* C, T6 a1);
/* PRIMES.is_prime */
extern T1 T122f3(GE_context* ac, T0* C, T6 a1);
/* PRIMES.default_create */
extern T0* T122c5(GE_context* ac);
/* DEVELOPER_EXCEPTION.generating_type */
extern T0* T117f9(GE_context* ac, T0* C);
/* DEVELOPER_EXCEPTION.exception_manager */
extern T0* T117f6(GE_context* ac, T0* C);
/* DEVELOPER_EXCEPTION.default_create */
extern T0* T117c10(GE_context* ac);
/* EXCEPTIONS.default_create */
extern T0* T836c1(GE_context* ac);
/* MANAGED_POINTER.default_pointer */
extern T14 T128f4(GE_context* ac, T0* C);
/* POINTER.memory_realloc */
extern T14 T14f3(GE_context* ac, T14* C, T6 a1);
/* POINTER.c_realloc */
extern T14 T14f8(GE_context* ac, T14* C, T14 a1, T6 a2);
/* UTF_CONVERTER.utf_8_bytes_count */
extern T6 T535f3(GE_context* ac, T535* C, T0* a1, T6 a2, T6 a3);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_16_0_pointer */
extern void T535f10(GE_context* ac, T535* C, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* MANAGED_POINTER.put_natural_16 */
extern void T128f14(GE_context* ac, T0* C, T9 a1, T6 a2);
/* NATURAL_32.to_natural_16 */
extern T9 T10f10(GE_context* ac, T10* C);
/* NATURAL_32.is_greater */
extern T1 T10f9(GE_context* ac, T10* C, T10 a1);
/* UTF_CONVERTER.utf_16_bytes_count */
extern T6 T535f4(GE_context* ac, T535* C, T0* a1, T6 a2, T6 a3);
/* NATIVE_STRING.upper_cell */
extern unsigned char ge1530os20820;
extern T0* ge1530ov20820;
extern T0* T368f7(GE_context* ac, T0* C);
/* PLATFORM.is_windows */
extern T1 T540s1(GE_context* ac);
/* NATIVE_STRING.make_empty */
extern void T368f11(GE_context* ac, T0* C, T6 a1);
/* NATIVE_STRING.make_empty */
extern T0* T368c11(GE_context* ac, T6 a1);
/* MANAGED_POINTER.make */
extern T0* T128c9(GE_context* ac, T6 a1);
/* POINTER.memory_calloc */
extern T14 T14f2(GE_context* ac, T14* C, T6 a1, T6 a2);
/* POINTER.c_calloc */
extern T14 T14f6(GE_context* ac, T14* C, T6 a1, T6 a2);
/* MANAGED_POINTER.increment_counter */
extern void T128f13(GE_context* ac, T0* C);
/* KL_SHELL_COMMAND.default_shell */
extern unsigned char ge1665os9815;
extern T0* ge1665ov9815;
extern T0* T75f8(GE_context* ac, T0* C);
/* STRING_32.make_empty */
extern T0* T18c13(GE_context* ac);
/* STRING_32.make */
extern void T18f14(GE_context* ac, T0* C, T6 a1);
/* STRING_32.make */
extern T0* T18c14(GE_context* ac, T6 a1);
/* SPECIAL [CHARACTER_32].make_filled */
extern T0* T16c7(GE_context* ac, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].fill_with */
extern void T16f12(GE_context* ac, T0* C, T3 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].extend */
extern void T16f11(GE_context* ac, T0* C, T3 a1);
/* SPECIAL [CHARACTER_32].make_empty */
extern void T16f10(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_32].make_empty */
extern T0* T16c10(GE_context* ac, T6 a1);
/* KL_SHELL_COMMAND.item */
extern T0* T75f10(GE_context* ac, T0* C, T0* a1);
/* NATIVE_STRING.string */
extern T0* T368f6(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_8_0_pointer_to_escaped_string_32 */
extern T0* T535f2(GE_context* ac, T535* C, T0* a1);
/* UTF_CONVERTER.utf_8_0_pointer_into_escaped_string_32 */
extern void T535f13(GE_context* ac, T535* C, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_8_0_subpointer_into_escaped_string_32 */
extern void T535f15(GE_context* ac, T535* C, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* UTF_CONVERTER.escape_code_into */
extern void T535f16(GE_context* ac, T535* C, T0* a1, T9 a2);
/* NATURAL_16.to_hex_string */
extern T0* T9f4(GE_context* ac, T9* C);
/* STRING_8.put */
extern void T17f71(GE_context* ac, T0* C, T2 a1, T6 a2);
/* INTEGER_32.to_hex_character */
extern T2 T6f27(GE_context* ac, T6* C);
/* NATURAL_16.to_integer_32 */
extern T6 T9f8(GE_context* ac, T9* C);
/* STRING_8.fill_blank */
extern void T17f74(GE_context* ac, T0* C);
/* STRING_8.fill_character */
extern void T17f57(GE_context* ac, T0* C, T2 a1);
/* PLATFORM.default_create */
extern T0* T540c4(GE_context* ac);
/* STRING_32.append_string_general */
extern void T18f15(GE_context* ac, T0* C, T0* a1);
/* STRING_32.append */
extern void T18f15p1(GE_context* ac, T0* C, T0* a1);
/* STRING_32.set_count */
extern void T18f20(GE_context* ac, T0* C, T6 a1);
/* STRING_32.append_code */
extern void T18f19(GE_context* ac, T0* C, T10 a1);
/* STRING_32.put_code */
extern void T18f21(GE_context* ac, T0* C, T10 a1, T6 a2);
/* STRING_32.resize */
extern void T18f18(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_32].aliased_resized_area_with_default */
extern T0* T16f3(GE_context* ac, T0* C, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].aliased_resized_area */
extern T0* T16f4(GE_context* ac, T0* C, T6 a1);
/* STRING_32.capacity */
extern T6 T18f4(GE_context* ac, T0* C);
/* STRING_32.append */
extern void T18f17(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_32].copy_data */
extern void T16f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_32].force */
extern void T16f14(GE_context* ac, T0* C, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].move_data */
extern void T16f13(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].overlapping_move */
extern void T16f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].non_overlapping_move */
extern void T16f15(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_32.additional_space */
extern T6 T18f5(GE_context* ac, T0* C);
/* NATURAL_8.to_hex_string */
extern T0* T8f11(GE_context* ac, T8* C);
/* NATURAL_8.to_integer_32 */
extern T6 T8f6(GE_context* ac, T8* C);
/* NATURAL_16.is_less_equal */
extern T1 T9f2(GE_context* ac, T9* C, T9 a1);
/* STRING_32.append_character */
extern void T18f16(GE_context* ac, T0* C, T3 a1);
/* NATURAL_8.to_natural_16 */
extern T9 T8f9(GE_context* ac, T8* C);
/* STRING_32.extend */
extern void T18f23(GE_context* ac, T0* C, T3 a1);
/* NATURAL_8.is_less_equal */
extern T1 T8f5(GE_context* ac, T8* C, T8 a1);
/* MANAGED_POINTER.read_natural_8 */
extern T8 T128f6(GE_context* ac, T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_8].memory_copy */
extern void T1412f2(GE_context* ac, T1412* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_8].c_memcpy */
extern void T1412f3(GE_context* ac, T1412* C, T14 a1, T14 a2, T6 a3);
/* STRING_32.grow */
extern void T18f22(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.utf_16_0_pointer_to_escaped_string_32 */
extern T0* T535f1(GE_context* ac, T535* C, T0* a1);
/* UTF_CONVERTER.utf_16_0_pointer_into_escaped_string_32 */
extern void T535f12(GE_context* ac, T535* C, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_16_0_subpointer_into_escaped_string_32 */
extern void T535f14(GE_context* ac, T535* C, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* NATURAL_32.is_greater_equal */
extern T1 T10f12(GE_context* ac, T10* C, T10 a1);
/* NATURAL_16.to_natural_32 */
extern T10 T9f1(GE_context* ac, T9* C);
/* MANAGED_POINTER.read_natural_16 */
extern T9 T128f5(GE_context* ac, T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_16].memory_copy */
extern void T1411f2(GE_context* ac, T1411* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_16].c_memcpy */
extern void T1411f3(GE_context* ac, T1411* C, T14 a1, T14 a2, T6 a3);
/* NATIVE_STRING.make_from_pointer */
extern T0* T368c10(GE_context* ac, T14 a1);
/* MANAGED_POINTER.make_from_pointer */
extern T0* T128c12(GE_context* ac, T14 a1, T6 a2);
/* POINTER.memory_alloc */
extern T14 T14f5(GE_context* ac, T14* C, T6 a1);
/* POINTER.c_malloc */
extern T14 T14f9(GE_context* ac, T14* C, T6 a1);
/* NATIVE_STRING.pointer_length_in_bytes */
extern T6 T368f4(GE_context* ac, T0* C, T14 a1);
/* NATURAL_64.to_integer_32 */
extern T6 T11f2(GE_context* ac, T11* C);
/* NATURAL_64.is_less_equal */
extern T1 T11f1(GE_context* ac, T11* C, T11 a1);
/* NATIVE_STRING.c_pointer_length_in_bytes */
extern T11 T368f8(GE_context* ac, T0* C, T14 a1);
/* KL_SHELL_COMMAND.eif_getenv */
extern T14 T75f11(GE_context* ac, T0* C, T14 a1);
/* UC_UTF8_STRING.old_is_empty */
extern T1 T847f50(GE_context* ac, T0* C);
/* KL_SHELL_COMMAND.make */
extern T0* T75c12(GE_context* ac, T0* a1);
/* KL_SHELL_COMMAND.string_ */
extern T0* T75f7(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.absolute_pathname */
extern T0* T121f1(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname */
extern T0* T121f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.appended_string */
extern T0* T34f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* STRING_8.append_string */
extern void T17f49(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append */
extern void T17f55(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.area_lower */
extern T6 T847f17(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.concat */
extern T0* T34f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.prefixed_string */
extern T0* T847f16(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.make */
extern void T847f79(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.make */
extern T0* T847c79(GE_context* ac, T6 a1);
/* UC_UTF8_STRING.old_set_count */
extern void T847f72(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.byte_capacity */
extern T6 T847f52(GE_context* ac, T0* C);
/* UC_UTF8_STRING.capacity */
extern T6 T847f52p1(GE_context* ac, T0* C);
/* UC_UTF8_STRING.make */
extern void T847f79p1(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.substring_byte_count */
extern T6 T846f22(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
extern T1 T846f22ot1(T0* a1, T0** a2);
extern T1 T846f22ot2(T0* a1, T0** a2);
/* UC_UTF8_ROUTINES.code_byte_count */
extern T6 T846f24(GE_context* ac, T0* C, T6 a1);
/* NATURAL_32.to_integer_32 */
extern T6 T10f18(GE_context* ac, T10* C);
/* UC_UTF8_STRING.shifted_byte_index */
extern T6 T847f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.byte_index */
extern T6 T847f38(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.dummy_uc_string */
extern unsigned char ge324os31109;
extern T0* ge324ov31109;
extern T0* T846f27(GE_context* ac, T0* C);
/* UC_STRING.make_empty */
extern T0* T133c8(GE_context* ac);
/* UC_STRING.make */
extern void T133f9(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.old_set_count */
extern void T133f12(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.set_count */
extern void T133f11(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.byte_capacity */
extern T6 T133f7(GE_context* ac, T0* C);
/* UC_STRING.capacity */
extern T6 T133f7p1(GE_context* ac, T0* C);
/* UC_STRING.make */
extern void T133f9p1(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.reset_byte_index_cache */
extern void T133f10(GE_context* ac, T0* C);
/* UC_UTF8_ROUTINES.character_byte_count */
extern T6 T846f23(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.any_ */
extern T0* T846f25(GE_context* ac, T0* C);
/* UC_UTF8_STRING.append_string */
extern void T847f67(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.append */
extern void T847f85(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.dummy_uc_string */
extern unsigned char ge314os14387;
extern T0* ge314ov14387;
extern T0* T847f56(GE_context* ac, T0* C);
/* UC_UTF8_STRING.gobo_append_substring */
extern void T847f69(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_substring_at_byte_index */
extern void T847f89(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
extern T1 T847f89ot1(T0* a1, T0** a2);
extern T1 T847f89ot2(T0* a1, T0** a2);
extern T1 T847f89ot3(T0* a1, T0** a2);
/* UC_UTF8_STRING.put_code_at_byte_index */
extern void T847f99(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_character_at_byte_index */
extern void T847f88(GE_context* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_byte */
extern void T847f100(GE_context* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.old_put */
extern void T847f87(GE_context* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.resize_byte_storage */
extern void T847f86(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.resize */
extern void T847f101(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.cloned_string */
extern T0* T847f40(GE_context* ac, T0* C);
/* UC_UTF8_STRING.twin */
extern T0* T847f10(GE_context* ac, T0* C);
/* UC_UTF8_STRING.copy */
extern void T847f78(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.copy */
extern void T847f78p1(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].resized_area */
extern T0* T15f7(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.append */
extern void T847f85p1(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.additional_space */
extern T6 T847f57(GE_context* ac, T0* C);
/* ISE_RUNTIME.check_assert */
extern T1 T1461s1(GE_context* ac, T1 a1);
/* UC_UTF8_STRING.as_string_8 */
extern T0* T847f51(GE_context* ac, T0* C);
/* STRING_8.put_code */
extern void T17f62(GE_context* ac, T0* C, T10 a1, T6 a2);
/* UC_UTF8_STRING.put_code */
extern void T847f73(GE_context* ac, T0* C, T10 a1, T6 a2);
/* UC_UTF8_STRING.put_item_code */
extern void T847f90(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.move_bytes_right */
extern void T847f92(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.move_bytes_left */
extern void T847f91(GE_context* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.valid_code */
extern T1 T17f31(GE_context* ac, T0* C, T10 a1);
/* UC_UTF8_STRING.valid_code */
extern T1 T847f30(GE_context* ac, T0* C, T10 a1);
/* STRING_8.set_count */
extern void T17f61(GE_context* ac, T0* C, T6 a1);
/* STRING_8.as_string_8 */
extern T0* T17f20(GE_context* ac, T0* C);
/* UC_UTF8_STRING.any_ */
extern T0* T847f54(GE_context* ac, T0* C);
/* UC_UTF8_STRING.append_character */
extern void T847f68(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.item */
extern T2 T847f9(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.character_item_at_byte_index */
extern T2 T847f39(GE_context* ac, T0* C, T6 a1);
/* STRING_8.item */
extern T2 T17f10(GE_context* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.cloned_string */
extern T0* T34f9(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.string_ */
extern T0* T121f21(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.cwd */
extern T0* T121f13(GE_context* ac, T0* C);
/* EXECUTION_ENVIRONMENT.current_working_directory */
extern T0* T202f2(GE_context* ac, T0* C);
/* FILE_INFO.pointer_to_file_name_8 */
extern T0* T129f13(GE_context* ac, T0* C, T14 a1);
/* C_STRING.string */
extern T0* T537f4(GE_context* ac, T0* C);
/* C_STRING.c_strlen */
extern T6 T537f5(GE_context* ac, T0* C, T14 a1);
/* C_STRING.make_shared_from_pointer */
extern T0* T537c12(GE_context* ac, T14 a1);
/* C_STRING.make_shared_from_pointer_and_count */
extern void T537f10(GE_context* ac, T0* C, T14 a1, T6 a2);
/* C_STRING.make_shared_from_pointer_and_count */
extern T0* T537c10(GE_context* ac, T14 a1, T6 a2);
/* MANAGED_POINTER.share_from_pointer */
extern T0* T128c16(GE_context* ac, T14 a1, T6 a2);
/* C_STRING.substring */
extern T0* T537f3(GE_context* ac, T0* C, T6 a1, T6 a2);
/* C_STRING.read_substring_into */
extern void T537f13(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* NATURAL_8.to_natural_32 */
extern T10 T8f12(GE_context* ac, T8* C);
/* C_STRING.make_empty */
extern void T537f7(GE_context* ac, T0* C, T6 a1);
/* C_STRING.make_empty */
extern T0* T537c7(GE_context* ac, T6 a1);
/* FILE_INFO.utf_16_to_multi_byte */
extern T6 T129f15(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* FILE_INFO.default_pointer */
extern T14 T129f9(GE_context* ac, T0* C);
/* EXECUTION_ENVIRONMENT.file_info */
extern unsigned char ge1665os9835;
extern T0* ge1665ov9835;
extern T0* T202f5(GE_context* ac, T0* C);
/* FILE_INFO.make */
extern T0* T129c17(GE_context* ac);
/* FILE_INFO.make_filled_area */
extern void T129f19(GE_context* ac, T0* C, T8 a1, T6 a2);
/* SPECIAL [NATURAL_8].make_filled */
extern T0* T542c5(GE_context* ac, T8 a1, T6 a2);
/* FILE_INFO.stat_size */
extern T6 T129f7(GE_context* ac, T0* C);
/* EXECUTION_ENVIRONMENT.eif_dir_current */
extern T6 T202f4(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.execution_environment */
extern unsigned char ge247os12683;
extern T0* ge247ov12683;
extern T0* T121f23(GE_context* ac, T0* C);
/* EXECUTION_ENVIRONMENT.default_create */
extern T0* T202c10(GE_context* ac);
/* KL_UNIX_FILE_SYSTEM.is_absolute_pathname */
extern T1 T121f12(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.absolute_pathname */
extern T0* T120f26(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.current_drive */
extern T0* T120f15(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_directory_separator */
extern T1 T120f18(GE_context* ac, T0* C, T2 a1);
/* KL_WINDOWS_FILE_SYSTEM.string_ */
extern T0* T120f14(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname */
extern T0* T120f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.cwd */
extern T0* T120f13(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.execution_environment */
extern T0* T120f25(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_relative_pathname */
extern T1 T120f5(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_absolute_pathname */
extern T1 T120f12(GE_context* ac, T0* C, T0* a1);
/* GEC.file_system */
extern unsigned char ge256os1981;
extern T0* ge256ov1981;
extern T0* T22f38(GE_context* ac, T0* C);
/* GEC.unix_file_system */
extern unsigned char ge256os1984;
extern T0* ge256ov1984;
extern T0* T22f41(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.make */
extern T0* T121c31(GE_context* ac);
/* KL_OPERATING_SYSTEM.is_unix */
extern unsigned char ge290os12651;
extern T1 ge290ov12651;
extern T1 T84f2(GE_context* ac, T0* C);
/* KL_OPERATING_SYSTEM.current_working_directory */
extern T0* T84f4(GE_context* ac, T0* C);
/* KL_OPERATING_SYSTEM.execution_environment */
extern unsigned char ge290os12655;
extern T0* ge290ov12655;
extern T0* T84f5(GE_context* ac, T0* C);
/* STRING_8.is_equal */
extern T1 T17f37(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].same_items */
extern T1 T15f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_OPERATING_SYSTEM.variable_value */
extern T0* T84f3(GE_context* ac, T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.get */
extern T0* T202f8(GE_context* ac, T0* C, T0* a1);
/* STRING_32.as_string_8 */
extern T0* T18f6(GE_context* ac, T0* C);
/* EXECUTION_ENVIRONMENT.item */
extern T0* T202f3(GE_context* ac, T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.eif_getenv */
extern T14 T202f6(GE_context* ac, T0* C, T14 a1);
/* GEC.windows_file_system */
extern unsigned char ge256os1982;
extern T0* ge256ov1982;
extern T0* T22f40(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.make */
extern T0* T120c34(GE_context* ac);
/* UC_UTF8_STRING.plus */
extern T0* T847f15(GE_context* ac, T0* C, T0* a1);
/* STRING_8.plus */
extern T0* T17f9(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append_string_general */
extern void T17f56(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append */
extern void T17f56p1(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append_code */
extern void T17f60(GE_context* ac, T0* C, T10 a1);
/* STRING_8.new_string */
extern T0* T17f15(GE_context* ac, T0* C, T6 a1);
/* KL_OPERATING_SYSTEM.is_windows */
extern unsigned char ge290os12650;
extern T1 ge290ov12650;
extern T1 T84f1(GE_context* ac, T0* C);
/* GEC.operating_system */
extern T0* T22f37(GE_context* ac, T0* C);
/* GEC.no_c_compile */
extern T1 T22f36(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.parameter */
extern T1 T44f13(GE_context* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].last */
extern T1 T148f5(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.put_new_line */
extern void T132f17(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.put_integer */
extern void T132f16(GE_context* ac, T0* C, T6 a1);
/* KL_STDOUT_FILE.put_integer_64 */
extern void T132f21(GE_context* ac, T0* C, T7 a1);
/* KL_STDOUT_FILE.put_character */
extern void T132f25(GE_context* ac, T0* C, T2 a1);
/* KL_STDOUT_FILE.old_put_character */
extern void T132f27(GE_context* ac, T0* C, T2 a1);
/* KL_STDOUT_FILE.console_pc */
extern void T132f28(GE_context* ac, T0* C, T14 a1, T2 a2);
/* INTEGER_32.to_integer_64 */
extern T7 T6f18(GE_context* ac, T6* C);
/* KL_STDOUT_FILE.put_string */
extern void T132f15(GE_context* ac, T0* C, T0* a1);
/* KL_STDOUT_FILE.old_put_string */
extern void T132f20(GE_context* ac, T0* C, T0* a1);
/* KL_STDOUT_FILE.console_ps */
extern void T132f24(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDOUT_FILE.string_ */
extern T0* T132f8(GE_context* ac, T0* C);
/* ET_C_GENERATOR.generate */
extern void T74f578(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].wipe_out */
extern void T54f71(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_wipe_out */
extern void T54f80(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_wipe_out */
extern void T54f79(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_wipe_out */
extern void T54f78(GE_context* ac, T0* C);
/* SPECIAL [STRING_8].keep_head */
extern void T141f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].set_count */
extern void T141f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_wipe_out */
extern void T54f77(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].unset_found_item */
extern void T54f54(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_all_cursors_after */
extern void T54f76(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_next_cursor */
extern void T172f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_after */
extern void T172f17(GE_context* ac, T0* C);
/* ET_C_GENERATOR.generate_compilation_script */
extern void T74f582(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.report_cannot_write_error */
extern void T74f584(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error */
extern void T36f188(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T36f193(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_error */
extern void T36f198(GE_context* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T36f193p1(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.message */
extern T0* T36f19(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error */
extern void T77f189(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T77f193(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_error */
extern void T77f197(GE_context* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T77f193p1(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.message */
extern T0* T77f19(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.error_handler */
extern T0* T74f109(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.make */
extern T0* T308c8(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.set_fatal_error */
extern void T74f583(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.change_mode */
extern void T305f35(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.old_change_mode */
extern void T305f44(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.file_chmod */
extern void T305f51(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.internal_name_pointer */
extern T0* T305f20(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_exists */
extern T1 T305f16(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_exists */
extern T1 T305f26(GE_context* ac, T0* C, T14 a1);
/* KL_TEXT_OUTPUT_FILE.old_is_closed */
extern T1 T305f22(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.string_name */
extern T0* T305f14(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.close */
extern void T305f34(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_close */
extern void T305f40(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.default_pointer */
extern T14 T305f18(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_close */
extern void T305f48(GE_context* ac, T0* C, T14 a1);
/* KL_UNIX_FILE_SYSTEM.file_exists */
extern T1 T121f8(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.exists */
extern T1 T29f32(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_plain */
extern T1 T29f34(GE_context* ac, T0* C);
/* FILE_INFO.is_plain */
extern T1 T129f14(GE_context* ac, T0* C);
/* FILE_INFO.file_info */
extern T6 T129f16(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.buffered_file_info */
extern unsigned char ge1433os2679;
extern T0* ge1433ov2679;
extern T0* T29f29(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.set_buffer */
extern void T29f59(GE_context* ac, T0* C);
/* FILE_INFO.fast_update */
extern void T129f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* FILE_INFO.eif_file_stat */
extern T6 T129f12(GE_context* ac, T0* C, T14 a1, T14 a2, T1 a3);
/* KL_TEXT_INPUT_FILE.internal_name_pointer */
extern T0* T29f23(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_exists */
extern T1 T29f15(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_exists */
extern T1 T29f30(GE_context* ac, T0* C, T14 a1);
/* KL_TEXT_INPUT_FILE.old_is_closed */
extern T1 T29f12(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.string_name */
extern T0* T29f13(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.reset */
extern void T29f60(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.tmp_file */
extern unsigned char ge247os12680;
extern T0* ge247ov12680;
extern T0* T121f22(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.file_exists */
extern T1 T120f8(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_file */
extern T0* T120f24(GE_context* ac, T0* C);
/* ET_C_GENERATOR.file_system */
extern T0* T74f107(GE_context* ac, T0* C);
/* ET_C_GENERATOR.unix_file_system */
extern T0* T74f444(GE_context* ac, T0* C);
/* ET_C_GENERATOR.windows_file_system */
extern T0* T74f443(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].found_item */
extern T0* T54f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_item */
extern T0* T54f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].found */
extern T1 T54f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].search */
extern void T54f74(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].search_position */
extern void T54f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].hash_position */
extern T6 T54f29(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.hash_code */
extern T6 T847f22(GE_context* ac, T0* C);
/* UC_UTF8_STRING.hash_code */
extern T6 T847f22p1(GE_context* ac, T0* C);
/* STRING_8.hash_code */
extern T6 T17f21(GE_context* ac, T0* C);
/* KL_AGENT_HASH_FUNCTION [STRING_8].hash_code */
extern T6 T1404f2(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_item */
extern T0* T54f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_item */
extern T6 T54f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_item */
extern T6 T54f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].back */
extern void T172f16(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_back */
extern void T54f88(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].add_traversing_cursor */
extern void T54f84(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_position */
extern void T172f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_traversing_cursor */
extern void T54f83(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_before */
extern void T172f20(GE_context* ac, T0* C);
/* UT_TEMPLATE_EXPANDER.expand_from_values */
extern T0* T307f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].value */
extern T0* T54f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].has */
extern T1 T54f46(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.append_substring_to_string */
extern void T34f21(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* KL_STRING_ROUTINES.appended_substring */
extern T0* T34f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* UC_UTF8_STRING.new_empty_string */
extern T0* T847f14(GE_context* ac, T0* C, T6 a1);
/* UT_TEMPLATE_EXPANDER.string_ */
extern T0* T307f2(GE_context* ac, T0* C);
/* ET_C_GENERATOR.template_expander */
extern unsigned char ge1167os9373;
extern T0* ge1167ov9373;
extern T0* T74f105(GE_context* ac, T0* C);
/* UT_TEMPLATE_EXPANDER.make */
extern T0* T307c3(GE_context* ac);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].item */
extern T0* T172f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_item */
extern T0* T54f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].before */
extern T1 T172f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].finish */
extern void T172f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_finish */
extern void T54f87(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_off */
extern T1 T54f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].off */
extern T1 T172f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].is_empty */
extern T1 T54f30(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.is_open_write */
extern T1 T305f23(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_open_write */
extern T1 T305f19(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T305f29(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.is_closed */
extern T1 T305f17(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_write */
extern void T305f41(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T305f41p1(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_open */
extern T14 T305f21(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.make */
extern T0* T305c27(GE_context* ac, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_make */
extern void T305f39(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.make_with_name */
extern void T305f47(GE_context* ac, T0* C, T0* a1);
/* STRING_8.make_empty */
extern T0* T17c48(GE_context* ac);
/* KL_TEXT_OUTPUT_FILE.set_name */
extern void T305f52(GE_context* ac, T0* C, T0* a1);
/* FILE_INFO.file_name_to_pointer */
extern T0* T129f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* C_STRING.set_string */
extern void T537f11(GE_context* ac, T0* C, T0* a1);
/* C_STRING.set_substring */
extern void T537f14(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* FILE_INFO.multi_byte_to_utf_16 */
extern T6 T129f10(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* C_STRING.make */
extern T0* T537c9(GE_context* ac, T0* a1);
/* KL_TEXT_OUTPUT_FILE.buffered_file_info */
extern T0* T305f25(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.string_ */
extern T0* T305f12(GE_context* ac, T0* C);
/* ET_C_GENERATOR.operating_system */
extern T0* T74f102(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].forth */
extern void T172f14(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_forth */
extern void T54f82(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].key */
extern T0* T172f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_key */
extern T0* T54f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].is_first */
extern T1 T172f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_is_first */
extern T1 T54f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].after */
extern T1 T172f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].start */
extern void T172f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_start */
extern void T54f81(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_cursor */
extern T0* T54f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].make */
extern T0* T172c12(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item */
extern T0* T54f43(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.add_external_c_files */
extern void T74f613(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_DIRECTORY.close */
extern void T330f33(GE_context* ac, T0* C);
/* KL_DIRECTORY.old_close */
extern void T330f35(GE_context* ac, T0* C);
/* KL_DIRECTORY.default_pointer */
extern T14 T330f17(GE_context* ac, T0* C);
/* KL_DIRECTORY.dir_close */
extern void T330f39(GE_context* ac, T0* C, T14 a1);
/* KL_STRING_ROUTINES.replaced_all_substrings */
extern T0* T34f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_STRING_ROUTINES.substring_index */
extern T6 T34f14(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* UC_UTF8_STRING.item_code */
extern T6 T847f13(GE_context* ac, T0* C, T6 a1);
/* STRING_8.item_code */
extern T6 T17f7(GE_context* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.platform */
extern T0* T34f15(GE_context* ac, T0* C);
/* UC_UTF8_STRING.substring_index */
extern T6 T847f21(GE_context* ac, T0* C, T0* a1, T6 a2);
/* STRING_8.substring_index */
extern T6 T17f36(GE_context* ac, T0* C, T0* a1, T6 a2);
/* STRING_8_SEARCHER.substring_index */
extern T6 T769f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_8_SEARCHER.substring_index_with_deltas */
extern T6 T769f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_8_SEARCHER.internal_initialize_deltas */
extern void T769f8(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* STRING_8.string_searcher */
extern unsigned char ge1533os489;
extern T0* ge1533ov489;
extern T0* T17f34(GE_context* ac, T0* C);
/* STRING_8_SEARCHER.make */
extern T0* T769c6(GE_context* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_last */
extern void T54f52(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_put */
extern void T54f60(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [STRING_8].force */
extern void T171f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_put */
extern void T54f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_put */
extern void T54f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].resize */
extern void T54f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_resize */
extern void T54f65(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].aliased_resized_area_with_default */
extern T0* T173f1(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].aliased_resized_area_with_default */
extern T0* T123f4(GE_context* ac, T0* C, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].aliased_resized_area */
extern T0* T123f5(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].special_integer_ */
extern unsigned char ge218os5807;
extern T0* ge218ov5807;
extern T0* T54f28(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [INTEGER_32].default_create */
extern T0* T173c6(GE_context* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_resize */
extern void T54f64(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].aliased_resized_area */
extern T0* T171f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].aliased_resized_area */
extern T0* T141f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_resize */
extern void T54f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_resize */
extern void T54f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_modulus */
extern T6 T54f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_capacity */
extern T6 T54f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_put */
extern void T54f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* STRING_8.remove_tail */
extern void T17f54(GE_context* ac, T0* C, T6 a1);
/* STRING_8.keep_head */
extern void T17f59(GE_context* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.extension */
extern T0* T121f10(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.extension */
extern T0* T120f10(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.ends_with */
extern T1 T847f20(GE_context* ac, T0* C, T0* a1);
/* STRING_8.area_upper */
extern T6 T17f17(GE_context* ac, T0* C);
/* UC_UTF8_STRING.area_upper */
extern T6 T847f43(GE_context* ac, T0* C);
/* STRING_8.ends_with */
extern T1 T17f30(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.read_entry */
extern void T330f32(GE_context* ac, T0* C);
/* KL_DIRECTORY.readentry */
extern void T330f37(GE_context* ac, T0* C);
/* KL_DIRECTORY.file_info */
extern unsigned char ge1428os20019;
extern T0* ge1428ov20019;
extern T0* T330f23(GE_context* ac, T0* C);
/* KL_DIRECTORY.eif_dir_next */
extern T14 T330f22(GE_context* ac, T0* C, T14 a1);
/* KL_DIRECTORY.old_end_of_input */
extern T1 T330f15(GE_context* ac, T0* C);
/* ET_C_GENERATOR.report_cannot_read_error */
extern void T74f674(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.is_open_read */
extern T1 T330f11(GE_context* ac, T0* C);
/* KL_DIRECTORY.is_closed */
extern T1 T330f16(GE_context* ac, T0* C);
/* KL_DIRECTORY.open_read */
extern void T330f31(GE_context* ac, T0* C);
/* KL_DIRECTORY.old_open_read */
extern void T330f36(GE_context* ac, T0* C);
/* KL_DIRECTORY.dir_open */
extern T14 T330f19(GE_context* ac, T0* C, T14 a1);
/* KL_DIRECTORY.internal_name_pointer */
extern T0* T330f18(GE_context* ac, T0* C);
/* KL_DIRECTORY.old_is_readable */
extern T1 T330f13(GE_context* ac, T0* C);
/* KL_DIRECTORY.eif_dir_is_readable */
extern T1 T330f27(GE_context* ac, T0* C, T14 a1);
/* KL_DIRECTORY.old_exists */
extern T1 T330f12(GE_context* ac, T0* C);
/* KL_DIRECTORY.eif_dir_exists */
extern T1 T330f26(GE_context* ac, T0* C, T14 a1);
/* KL_DIRECTORY.make */
extern void T330f29(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.make */
extern T0* T330c29(GE_context* ac, T0* a1);
/* KL_DIRECTORY.old_make */
extern void T330f34(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.make_with_name */
extern void T330f38(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.set_name */
extern void T330f40(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.string_ */
extern T0* T330f24(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring */
extern T0* T304f57(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_end_position */
extern T6 T304f79(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_start_position */
extern T6 T304f70(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.recognizes */
extern T1 T304f55(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_matched */
extern T1 T304f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_key_equality_tester */
extern void T54f51(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.string_equality_tester */
extern unsigned char ge221os4498;
extern T0* ge221ov4498;
extern T0* T74f147(GE_context* ac, T0* C);
/* KL_STRING_EQUALITY_TESTER.default_create */
extern T0* T144c2(GE_context* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern void T54f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern T0* T54c50(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_with_equality_testers */
extern void T54f53(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_sparse_container */
extern void T54f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_internal_cursor */
extern void T54f70(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_slots */
extern void T54f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_clashes */
extern void T54f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_key_storage */
extern void T54f67(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].make */
extern T0* T171f2(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].default_create */
extern T0* T171c3(GE_context* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_item_storage */
extern void T54f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].force */
extern void T54f86(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_EXECUTION_ENVIRONMENT.interpreted_string */
extern T0* T66f4(GE_context* ac, T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.variable_value */
extern T0* T66f3(GE_context* ac, T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.environment_impl */
extern unsigned char ge283os6396;
extern T0* ge283ov6396;
extern T0* T66f1(GE_context* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.string_ */
extern T0* T66f2(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.replace_all */
extern T0* T304f232(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replace_all_to_string */
extern void T304f306(GE_context* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_unbounded_substring */
extern void T304f320(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_substring */
extern void T304f318(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_it */
extern void T304f333(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_start */
extern T1 T304f150(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_internal */
extern T6 T304f233(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_type */
extern T6 T304f297(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.match_not_repeated_characters */
extern T6 T304f296(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.infinity */
extern unsigned char ge1719os18866;
extern T6 ge1719ov18866;
extern T6 T304f59(GE_context* ac, T0* C);
/* KL_PLATFORM.maximum_integer */
extern unsigned char ge292os16547;
extern T6 ge292ov16547;
extern T6 T231f2(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.platform */
extern T0* T304f195(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_characters */
extern T6 T304f295(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_BYTE_CODE.character_item */
extern T6 T712f8(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_classes */
extern T6 T304f294(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.character_set_has */
extern T1 T712f10(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_refs */
extern T6 T304f293(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_ref */
extern T6 T304f299(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.space_set */
extern unsigned char ge1725os19033;
extern T0* ge1725ov19033;
extern T0* T304f151(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.make */
extern T0* T713c5(GE_context* ac, T0* a1);
/* RX_CHARACTER_SET.add_string */
extern void T713f10(GE_context* ac, T0* C, T0* a1);
/* RX_CHARACTER_SET.add_character */
extern void T713f9(GE_context* ac, T0* C, T6 a1);
/* RX_CHARACTER_SET.make_empty */
extern void T713f4(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.make_empty */
extern T0* T713c4(GE_context* ac);
/* KL_SPECIAL_ROUTINES [BOOLEAN].make_filled */
extern T0* T601f3(GE_context* ac, T0* C, T1 a1, T6 a2);
/* RX_CHARACTER_SET.special_boolean_ */
extern unsigned char ge218os5805;
extern T0* ge218ov5805;
extern T0* T713f3(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [BOOLEAN].default_create */
extern T0* T601c5(GE_context* ac);
/* RX_PCRE_REGULAR_EXPRESSION.digit_set */
extern unsigned char ge1725os19025;
extern T0* ge1725ov19025;
extern T0* T304f167(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.has */
extern T1 T713f2(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ims_options */
extern void T304f331(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_dotall */
extern T1 T304f86(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_multiline */
extern T1 T304f85(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_caseless */
extern T1 T304f84(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_match_count */
extern void T304f340(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_next_start */
extern void T304f339(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_recursive */
extern T6 T304f292(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* RX_BYTE_CODE.integer_item */
extern T6 T712f11(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.next_matching_alternate */
extern T6 T304f290(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_additional_bracket */
extern T6 T304f271(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.opcode_item */
extern T6 T712f7(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.special_integer_ */
extern T0* T304f54(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.flip_case */
extern T6 T714f4(GE_context* ac, T0* C, T6 a1);
/* RX_CASE_MAPPING.to_lower */
extern T6 T714f3(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replacement_to_string */
extern void T304f319(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.append_code */
extern void T847f76(GE_context* ac, T0* C, T10 a1);
/* UC_UTF8_STRING.append_item_code */
extern void T847f95(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_captured_substring_to_string */
extern void T304f334(GE_context* ac, T0* C, T0* a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.string_ */
extern T0* T304f228(GE_context* ac, T0* C);
/* ET_C_GENERATOR.execution_environment */
extern unsigned char ge296os1978;
extern T0* ge296ov1978;
extern T0* T74f101(GE_context* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.default_create */
extern T0* T66c5(GE_context* ac);
/* KL_STRING_ROUTINES.new_empty_string */
extern T0* T34f7(GE_context* ac, T0* C, T0* a1, T6 a2);
/* UC_UTF8_STRING.old_wipe_out */
extern void T847f77(GE_context* ac, T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T847f93(GE_context* ac, T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T847f77p1(GE_context* ac, T0* C);
/* STRING_8.wipe_out */
extern void T17f70(GE_context* ac, T0* C);
/* ET_C_GENERATOR.string_ */
extern T0* T74f100(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match */
extern void T304f305(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].item */
extern T0* T136f7(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.current_system */
extern T0* T74f112(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_case_insensitive */
extern void T304f304(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_caseless */
extern void T304f317(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T304f303(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T304f303p1(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_startline */
extern void T304f316(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_startline */
extern T1 T304f231(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.first_significant_code */
extern T6 T304f190(GE_context* ac, T0* C, T6 a1, T6 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.find_firstchar */
extern T6 T304f230(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_anchored */
extern void T304f315(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.can_anchored */
extern T1 T304f229(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.ims_options */
extern T6 T304f148(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_dotall */
extern T6 T304f132(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_multiline */
extern T6 T304f130(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_caseless */
extern T6 T304f128(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_regexp */
extern void T304f314(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3, T6 a4);
/* RX_BYTE_CODE.set_count */
extern void T712f18(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.find_fixed_code_length */
extern T6 T304f64(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.put_integer */
extern void T712f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_branch */
extern void T304f332(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.meta_set */
extern unsigned char ge1725os19034;
extern T0* ge1725ov19034;
extern T0* T304f147(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.maxlit */
extern unsigned char ge1719os18867;
extern T6 ge1719ov18867;
extern T6 T304f146(GE_context* ac, T0* C);
/* RX_BYTE_CODE.append_character */
extern void T712f19(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.put_character */
extern void T712f25(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.resize_byte_code */
extern void T712f24(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.special_integer_ */
extern T0* T712f9(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_escape */
extern T6 T304f141(GE_context* ac, T0* C, T6 a1, T1 a2);
/* RX_PCRE_REGULAR_EXPRESSION.scan_hex_number */
extern T6 T304f223(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.xdigit_set */
extern unsigned char ge1725os19027;
extern T0* ge1725ov19027;
extern T0* T304f245(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_octal_number */
extern T6 T304f222(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.escape_character */
extern T6 T304f218(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.to_option_ims */
extern T6 T304f135(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ichanged */
extern void T304f330(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_dotall */
extern T6 T304f133(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_multiline */
extern T6 T304f131(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_caseless */
extern T6 T304f129(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_decimal_number */
extern T6 T304f110(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_repeats */
extern void T304f337(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5);
/* RX_BYTE_CODE.append_subcopy */
extern void T712f23(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.put_opcode */
extern void T712f22(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.move_right */
extern void T712f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_single_repeat */
extern void T304f338(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* RX_PCRE_REGULAR_EXPRESSION.compile_character_class */
extern void T304f336(GE_context* ac, T0* C);
/* RX_BYTE_CODE.append_character_set */
extern void T712f20(GE_context* ac, T0* C, T0* a1, T1 a2);
/* RX_BYTE_CODE.resize_character_sets */
extern void T712f26(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].aliased_resized_area_with_default */
extern T0* T601f4(GE_context* ac, T0* C, T0* a1, T1 a2, T6 a3);
/* SPECIAL [BOOLEAN].aliased_resized_area_with_default */
extern T0* T124f5(GE_context* ac, T0* C, T1 a1, T6 a2);
/* SPECIAL [BOOLEAN].aliased_resized_area */
extern T0* T124f4(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.special_boolean_ */
extern T0* T712f12(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.add_set */
extern void T713f8(GE_context* ac, T0* C, T0* a1);
/* RX_CHARACTER_SET.add_negated_set */
extern void T713f7(GE_context* ac, T0* C, T0* a1);
/* ARRAY [RX_CHARACTER_SET].item */
extern T0* T717f4(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.class_sets */
extern unsigned char ge1725os19036;
extern T0* ge1725ov19036;
extern T0* T304f159(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.default_word_set */
extern unsigned char ge1725os19021;
extern T0* ge1725ov19021;
extern T0* T304f76(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.punct_set */
extern unsigned char ge1725os19031;
extern T0* ge1725ov19031;
extern T0* T304f244(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.print_set */
extern unsigned char ge1725os19030;
extern T0* ge1725ov19030;
extern T0* T304f243(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.graph_set */
extern unsigned char ge1725os19029;
extern T0* ge1725ov19029;
extern T0* T304f242(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.cntrl_set */
extern unsigned char ge1725os19028;
extern T0* ge1725ov19028;
extern T0* T304f241(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.ascii_set */
extern unsigned char ge1725os19032;
extern T0* ge1725ov19032;
extern T0* T304f240(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alnum_set */
extern unsigned char ge1725os19026;
extern T0* ge1725ov19026;
extern T0* T304f239(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.upper_set */
extern unsigned char ge1725os19022;
extern T0* ge1725ov19022;
extern T0* T304f238(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.lower_set */
extern unsigned char ge1725os19023;
extern T0* ge1725ov19023;
extern T0* T304f237(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alpha_set */
extern unsigned char ge1725os19024;
extern T0* ge1725ov19024;
extern T0* T304f235(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_name */
extern T6 T304f157(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [STRING_8].item */
extern T0* T142f5(GE_context* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].count */
extern T6 T142f6(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.class_names */
extern unsigned char ge1725os19035;
extern T0* ge1725ov19035;
extern T0* T304f236(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_syntax */
extern T6 T304f155(GE_context* ac, T0* C, T6 a1);
/* RX_CHARACTER_SET.wipe_out */
extern void T713f6(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.actual_set */
extern unsigned char ge1719os18865;
extern T0* ge1719ov18865;
extern T0* T304f152(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.compile_counted_repeats */
extern T1 T304f88(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.scan_comment */
extern void T304f335(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_undef */
extern T1 T304f61(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.append_integer */
extern void T712f16(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.append_opcode */
extern void T712f15(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_error */
extern void T304f313(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_internal_options */
extern void T304f312(GE_context* ac, T0* C);
/* RX_BYTE_CODE.wipe_out */
extern void T712f14(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T304f311(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T304f311p1(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern T0* T304c302(GE_context* ac);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make_filled */
extern T0* T173f5(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern void T304f302p1(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_options */
extern void T304f310(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_strict */
extern void T304f329(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_greedy */
extern void T304f328(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_eol */
extern void T304f327(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_bol */
extern void T304f326(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dollar_endonly */
extern void T304f325(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_empty_allowed */
extern void T304f324(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_extended */
extern void T304f323(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dotall */
extern void T304f322(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_multiline */
extern void T304f321(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_word_set */
extern void T304f309(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_character_case_mapping */
extern void T304f308(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.default_character_case_mapping */
extern unsigned char ge1725os19020;
extern T0* ge1725ov19020;
extern T0* T304f75(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.make */
extern T0* T714c6(GE_context* ac, T0* a1, T0* a2);
/* RX_CASE_MAPPING.add */
extern void T714f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* RX_CASE_MAPPING.make_default */
extern void T714f7(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.clear */
extern void T714f9(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.special_integer_ */
extern T0* T714f5(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T304f307(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T304f307p1(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.wipe_out */
extern void T34f20(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.keep_head */
extern void T847f71(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.empty_pattern_buffer */
extern unsigned char ge1719os18864;
extern T0* ge1719ov18864;
extern T0* T304f74(GE_context* ac, T0* C);
/* RX_BYTE_CODE.make */
extern T0* T712c13(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].twin */
extern T0* T54f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].copy */
extern void T54f89(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].copy */
extern void T54f89p1(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_clashes */
extern void T54f94(GE_context* ac, T0* C);
/* SPECIAL [INTEGER_32].resized_area */
extern T0* T123f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].copy_data */
extern void T123f15(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [INTEGER_32].force */
extern void T123f11(GE_context* ac, T0* C, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].move_data */
extern void T123f17(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].overlapping_move */
extern void T123f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].non_overlapping_move */
extern void T123f18(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_slots */
extern void T54f93(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_key_storage */
extern void T54f92(GE_context* ac, T0* C);
/* SPECIAL [STRING_8].resized_area */
extern T0* T141f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].copy_data */
extern void T141f11(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [STRING_8].force */
extern void T141f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].move_data */
extern void T141f14(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].overlapping_move */
extern void T141f17(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].non_overlapping_move */
extern void T141f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_item_storage */
extern void T54f91(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].valid_cursor */
extern T1 T54f48(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.c_config */
extern T0* T74f99(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.parse_file */
extern void T524f180(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.parse */
extern void T524f184(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_pop_last_value */
extern void T524f197(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_push_error_value */
extern void T524f196(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ANY].force */
extern void T211f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ANY].fill_with */
extern void T210f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ANY].extend */
extern void T210f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ANY].aliased_resized_area */
extern T0* T211f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ANY].aliased_resized_area */
extern T0* T210f3(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_do_action */
extern void T524f195(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].force */
extern void T601f6(GE_context* ac, T0* C, T0* a1, T1 a2, T6 a3);
/* KL_SPECIAL_ROUTINES [BOOLEAN].aliased_resized_area */
extern T0* T601f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* UT_CONFIG_PARSER.is_defined */
extern T1 T524f136(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.process_include */
extern void T524f208(GE_context* ac, T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.make */
extern T0* T1339c8(GE_context* ac, T6 a1);
/* INTEGER_32.out */
extern T0* T6f3(GE_context* ac, T6* C);
/* STRING_8.append_integer */
extern void T17f45(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].put */
extern void T1337f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].force */
extern void T1538f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [YY_BUFFER].fill_with */
extern void T1537f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [YY_BUFFER].extend */
extern void T1537f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [INTEGER_32].put */
extern void T890f13(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.execution_environment */
extern T0* T524f162(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].is_full */
extern T1 T1337f5(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.undefine_value */
extern void T524f207(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove */
extern void T54f95(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_position */
extern void T54f96(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_keep_head */
extern void T54f100(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_keep_head */
extern void T54f99(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_cursors_forth */
extern void T54f98(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].internal_set_key_equality_tester */
extern void T54f97(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.ignored */
extern T1 T524f133(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_push_last_value */
extern void T524f194(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.accept */
extern void T524f193(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_do_error_action */
extern void T524f191(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.report_error */
extern void T524f206(GE_context* ac, T0* C, T0* a1);
extern T1 T524f206ot1(T0* a1, T0** a2);
/* UT_SYNTAX_ERROR.make */
extern T0* T1338c8(GE_context* ac, T0* a1, T6 a2);
/* UT_CONFIG_PARSER.report_eof_expected_error */
extern void T524f205(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.read_token */
extern void T524f190(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_execute_action */
extern void T524f204(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_set_beginning_of_line */
extern void T524f213(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_beginning_of_line */
extern void T205f28(GE_context* ac, T0* C, T1 a1);
/* YY_BUFFER.set_beginning_of_line */
extern void T206f17(GE_context* ac, T0* C, T1 a1);
/* UT_CONFIG_PARSER.text_item */
extern T2 T524f161(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.text_substring */
extern T0* T524f155(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.substring */
extern T0* T855f6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UT_CONFIG_PARSER.text_count */
extern T6 T524f154(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.string_ */
extern T0* T524f150(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.text */
extern T0* T524f149(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.set_start_condition */
extern void T524f211(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_execute_eof_action */
extern void T524f203(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.terminate */
extern void T524f212(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.wrap */
extern T1 T524f128(GE_context* ac, T0* C);
extern T1 T524f128ot1(T0* a1, T0** a2);
/* DS_ARRAYED_STACK [YY_BUFFER].remove */
extern void T1337f10(GE_context* ac, T0* C);
/* SPECIAL [YY_BUFFER].keep_head */
extern void T1537f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [YY_BUFFER].set_count */
extern void T1537f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].remove */
extern void T890f10(GE_context* ac, T0* C);
/* SPECIAL [INTEGER_32].keep_head */
extern void T123f14(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].set_count */
extern void T123f16(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].item */
extern T6 T890f5(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].item */
extern T0* T1337f7(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].is_empty */
extern T1 T1337f6(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_refill_input_buffer */
extern void T524f202(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_set_content */
extern void T524f200(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.count */
extern T6 T855f4(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.fill */
extern void T205f20(GE_context* ac, T0* C);
/* KL_CHARACTER_BUFFER.fill_from_stream */
extern T6 T855f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_CHARACTER_BUFFER.put */
extern void T855f10(GE_context* ac, T0* C, T2 a1, T6 a2);
/* YY_FILE_BUFFER.compact_left */
extern void T205f22(GE_context* ac, T0* C);
/* KL_CHARACTER_BUFFER.move_left */
extern void T855f11(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_8.subcopy */
extern void T17f76(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_FILE_BUFFER.resize */
extern void T205f24(GE_context* ac, T0* C);
/* KL_CHARACTER_BUFFER.resize */
extern void T855f12(GE_context* ac, T0* C, T6 a1);
/* YY_FILE_BUFFER.default_capacity */
extern unsigned char ge1704os16357;
extern T6 ge1704ov16357;
extern T6 T205f13(GE_context* ac, T0* C);
/* YY_BUFFER.fill */
extern void T206f15(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_index */
extern void T205f18(GE_context* ac, T0* C, T6 a1);
/* YY_BUFFER.set_index */
extern void T206f13(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_null_trans_state */
extern T6 T524f127(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_previous_state */
extern T6 T524f126(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.fatal_error */
extern void T524f201(GE_context* ac, T0* C, T0* a1);
/* UT_MESSAGE.make */
extern T0* T169c8(GE_context* ac, T0* a1);
/* KL_CHARACTER_BUFFER.item */
extern T2 T855f3(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].force */
extern void T173f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_SPECIAL_ROUTINES [INTEGER_32].aliased_resized_area */
extern T0* T173f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* UT_CONFIG_PARSER.special_integer_ */
extern T0* T524f104(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_init_value_stacks */
extern void T524f189(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_clear_all */
extern void T524f198(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.clear_all */
extern void T524f209(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.clear_stacks */
extern void T524f214(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_clear_value_stacks */
extern void T524f215(GE_context* ac, T0* C);
/* SPECIAL [BOOLEAN].keep_head */
extern void T124f12(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].set_count */
extern void T124f13(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].keep_head */
extern void T210f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].set_count */
extern void T210f8(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.abort */
extern void T524f192(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.set_input_buffer */
extern void T524f183(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_load_input_buffer */
extern void T524f188(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_position */
extern void T205f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* YY_BUFFER.set_position */
extern void T206f14(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UT_CONFIG_PARSER.new_file_buffer */
extern T0* T524f103(GE_context* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.make */
extern T0* T205c17(GE_context* ac, T0* a1);
/* YY_FILE_BUFFER.make_with_size */
extern void T205f21(GE_context* ac, T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.make_with_size */
extern T0* T205c21(GE_context* ac, T0* a1, T6 a2);
/* YY_FILE_BUFFER.set_file */
extern void T205f23(GE_context* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.set_file_with_size */
extern void T205f25(GE_context* ac, T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.flush */
extern void T205f26(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.new_default_buffer */
extern T0* T205f15(GE_context* ac, T0* C, T6 a1);
/* KL_CHARACTER_BUFFER.make */
extern T0* T855c9(GE_context* ac, T6 a1);
/* STRING_8.make_filled */
extern T0* T17c50(GE_context* ac, T2 a1, T6 a2);
/* ET_C_GENERATOR.multithreaded_mode */
extern T1 T74f96(GE_context* ac, T0* C);
/* ET_C_GENERATOR.console_application_mode */
extern T1 T74f442(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.define_value */
extern void T524f179(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UT_CONFIG_PARSER.make */
extern T0* T524c178(GE_context* ac, T0* a1);
/* DS_ARRAYED_STACK [INTEGER_32].make */
extern T0* T890c8(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make */
extern T0* T173f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].make */
extern T0* T1337c8(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].make */
extern T0* T1538f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [YY_BUFFER].make_empty */
extern T0* T1537c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].default_create */
extern T0* T1538c2(GE_context* ac);
/* UT_CONFIG_PARSER.string_equality_tester */
extern T0* T524f97(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.make_parser_skeleton */
extern void T524f182(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_build_parser_tables */
extern void T524f187(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yycheck_template */
extern unsigned char ge180os27734;
extern T0* ge180ov27734;
extern T0* T524f82(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yyfixed_array */
extern T0* T524f173(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].to_special */
extern T0* T173f4(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yytable_template */
extern unsigned char ge180os27733;
extern T0* ge180ov27733;
extern T0* T524f81(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yypgoto_template */
extern unsigned char ge180os27732;
extern T0* ge180ov27732;
extern T0* T524f135(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yypact_template */
extern unsigned char ge180os27731;
extern T0* ge180ov27731;
extern T0* T524f134(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yydefgoto_template */
extern unsigned char ge180os27730;
extern T0* ge180ov27730;
extern T0* T524f132(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yydefact_template */
extern unsigned char ge180os27729;
extern T0* ge180ov27729;
extern T0* T524f129(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytypes2_template */
extern unsigned char ge180os27728;
extern T0* ge180ov27728;
extern T0* T524f123(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytypes1_template */
extern unsigned char ge180os27727;
extern T0* ge180ov27727;
extern T0* T524f121(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yyr1_template */
extern unsigned char ge180os27726;
extern T0* ge180ov27726;
extern T0* T524f116(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytranslate_template */
extern unsigned char ge180os27723;
extern T0* ge180ov27723;
extern T0* T524f115(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytranslate_template_2 */
extern void T524f217(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yyarray_subcopy */
extern void T524f224(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* KL_ARRAY_ROUTINES [INTEGER_32].subcopy */
extern void T523f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ARRAY [INTEGER_32].subcopy */
extern void T522f16(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* UT_CONFIG_PARSER.integer_array_ */
extern unsigned char ge213os4337;
extern T0* ge213ov4337;
extern T0* T524f177(GE_context* ac, T0* C);
/* KL_ARRAY_ROUTINES [INTEGER_32].default_create */
extern T0* T523c2(GE_context* ac);
/* UT_CONFIG_PARSER.yytranslate_template_1 */
extern void T524f216(GE_context* ac, T0* C, T0* a1);
/* ARRAY [INTEGER_32].make_filled */
extern T0* T522c10(GE_context* ac, T6 a1, T6 a2, T6 a3);
/* ARRAY [INTEGER_32].make_filled_area */
extern void T522f13(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UT_CONFIG_PARSER.yy_create_value_stacks */
extern void T524f186(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [BOOLEAN].make */
extern T0* T601f1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ANY].make */
extern T0* T211f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].make_empty */
extern T0* T210c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ANY].default_create */
extern T0* T211c3(GE_context* ac);
/* UT_CONFIG_PARSER.make_scanner */
extern void T524f181(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.make_with_buffer */
extern void T524f185(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T524f199(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T524f199p1(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_build_tables */
extern void T524f210(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_accept_template */
extern unsigned char ge181os27789;
extern T0* ge181ov27789;
extern T0* T524f169(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_fixed_array */
extern T0* T524f175(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_meta_template */
extern unsigned char ge181os27788;
extern T0* ge181ov27788;
extern T0* T524f168(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_ec_template */
extern unsigned char ge181os27785;
extern T0* ge181ov27785;
extern T0* T524f167(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_ec_template_2 */
extern void T524f223(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_array_subcopy */
extern void T524f225(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* UT_CONFIG_PARSER.yy_ec_template_1 */
extern void T524f222(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_def_template */
extern unsigned char ge181os27784;
extern T0* ge181ov27784;
extern T0* T524f166(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_base_template */
extern unsigned char ge181os27783;
extern T0* ge181ov27783;
extern T0* T524f165(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_chk_template */
extern unsigned char ge181os27780;
extern T0* ge181ov27780;
extern T0* T524f164(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_chk_template_2 */
extern void T524f221(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_chk_template_1 */
extern void T524f220(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_nxt_template */
extern unsigned char ge181os27777;
extern T0* ge181ov27777;
extern T0* T524f163(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_nxt_template_2 */
extern void T524f219(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_nxt_template_1 */
extern void T524f218(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.empty_buffer */
extern unsigned char ge1709os6771;
extern T0* ge1709ov6771;
extern T0* T524f83(GE_context* ac, T0* C);
/* YY_BUFFER.make */
extern T0* T206c12(GE_context* ac, T0* a1);
/* YY_BUFFER.make_from_buffer */
extern void T206f16(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.fill_from_string */
extern void T855f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* YY_BUFFER.new_default_buffer */
extern T0* T206f11(GE_context* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.has_extension */
extern T1 T121f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.has_extension */
extern T1 T120f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].put_new */
extern void T54f85(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.right_adjust */
extern void T34f23(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.left_adjust */
extern void T34f22(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.remove_head */
extern void T847f75(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.keep_tail */
extern void T847f94(GE_context* ac, T0* C, T6 a1);
/* STRING_8.remove_head */
extern void T17f72(GE_context* ac, T0* C, T6 a1);
/* STRING_8.keep_tail */
extern void T17f75(GE_context* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.nested_pathname */
extern T0* T121f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.nested_pathname */
extern T0* T120f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.generate_c_code */
extern void T74f581(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.dummy_feature */
extern unsigned char ge1022os8352;
extern T0* ge1022ov8352;
extern T0* T74f212(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.make */
extern T0* T248c50(GE_context* ac, T0* a1, T0* a2, T0* a3);
extern T1 T248f50ot1(T0* a1, T0** a2);
/* ET_FORMAL_COMMA_ARGUMENT.name */
extern T0* T1563f5(GE_context* ac, T0* C);
/* ET_IDENTIFIER.identifier */
extern T0* T182f77(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.name */
extern T0* T265f5(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.put_last */
extern void T269f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].force */
extern void T656f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].fill_with */
extern void T655f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].extend */
extern void T655f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.fixed_array */
extern unsigned char ge1009os7546;
extern T0* ge1009ov7546;
extern T0* T269f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].default_create */
extern T0* T656c3(GE_context* ac);
/* ET_FORMAL_COMMA_ARGUMENT.type */
extern T0* T1563f4(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.type */
extern T0* T265f4(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.formal_argument */
extern T0* T262f7(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_COMMA_ARGUMENT.formal_argument */
extern T0* T1563f6(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.formal_argument */
extern T0* T265f6(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.item */
extern T0* T262f6(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.make_with_capacity */
extern T0* T269c9(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].make */
extern T0* T656f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].make_empty */
extern T0* T655c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_SYSTEM.set_type_of_type_feature */
extern void T71f79(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T238f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T79f141(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_result_dynamic_types */
extern void T79f142(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_giaaa_error */
extern void T36f181(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_internal_error */
extern void T36f191(GE_context* ac, T0* C, T0* a1);
/* KL_STANDARD_FILES.error */
extern unsigned char ge259os13340;
extern T0* ge259ov13340;
extern T0* T130f1(GE_context* ac, T0* C);
/* KL_STDERR_FILE.make */
extern T0* T131c13(GE_context* ac);
/* KL_STDERR_FILE.make_open_stderr */
extern void T131f18(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.set_write_mode */
extern void T131f23(GE_context* ac, T0* C);
/* KL_STDERR_FILE.console_def */
extern T14 T131f8(GE_context* ac, T0* C, T6 a1);
/* KL_STDERR_FILE.make_with_name */
extern void T131f22(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.default_pointer */
extern T14 T131f7(GE_context* ac, T0* C);
/* KL_STDERR_FILE.set_name */
extern void T131f26(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.buffered_file_info */
extern T0* T131f12(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.std */
extern unsigned char ge257os1979;
extern T0* ge257ov1979;
extern T0* T36f20(GE_context* ac, T0* C);
/* KL_STANDARD_FILES.default_create */
extern T0* T130c4(GE_context* ac);
/* ET_ERROR_HANDLER.set_has_internal_error */
extern void T36f197(GE_context* ac, T0* C, T1 a1);
/* ET_INTERNAL_ERROR.make_giaaa */
extern T0* T531c13(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.report_giaaa_error */
extern void T77f182(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_internal_error */
extern void T77f191(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.std */
extern T0* T77f20(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.set_has_internal_error */
extern void T77f196(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.error_handler */
extern T0* T79f113(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_system */
extern T0* T79f101(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_fatal_error */
extern void T79f132(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.create_meta_type */
extern void T71f78(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.meta_type */
extern T0* T71f61(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.make_generic */
extern T0* T80c113(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.put_first */
extern void T252f27(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].force */
extern void T653f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T650f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].extend */
extern void T650f10(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge867os12622;
extern T0* ge867ov12622;
extern T0* T252f12(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T653c3(GE_context* ac);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T252c26(GE_context* ac, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T252f26p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T653f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T650c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.right_bracket_symbol */
extern unsigned char ge808os11694;
extern T0* ge808ov11694;
extern T0* T81f223(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_bracket */
extern T0* T346c72(GE_context* ac);
/* ET_SYMBOL.make_leaf */
extern void T346f75(GE_context* ac, T0* C);
/* ET_SYMBOL.tokens */
extern unsigned char ge801os2020;
extern T0* ge801ov2020;
extern T0* T346f3(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_create */
extern T0* T81c1293(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_bracket_symbol */
extern unsigned char ge808os11689;
extern T0* ge808ov11689;
extern T0* T81f222(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.make */
extern T0* T651c102(GE_context* ac);
/* ET_BRACKET_SYMBOL.make_leaf */
extern void T651f103(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.tokens */
extern T0* T651f71(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T252f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].item */
extern T0* T234f11(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T238f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T79f100(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.make */
extern T0* T533c15(GE_context* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type */
extern void T533f19(GE_context* ac, T0* C, T0* a1);
extern T1 T533f19ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_TYPE_HASH_LIST.force_last */
extern void T273f22(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].force */
extern void T642f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].fill_with */
extern void T641f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].extend */
extern void T641f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.fixed_array */
extern unsigned char ge1006os7546;
extern T0* ge1006ov7546;
extern T0* T273f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].default_create */
extern T0* T642c3(GE_context* ac);
/* ET_DYNAMIC_TYPE_HASH_LIST.hash_position */
extern T6 T273f12(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.modulus */
extern T6 T273f15(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_HASH_LIST.resize */
extern void T273f18(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.special_integer_ */
extern T0* T273f7(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T642f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T641f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.new_modulus */
extern T6 T273f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.new_capacity */
extern T6 T273f13(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.capacity */
extern T6 T273f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_HASH_LIST.put_last */
extern void T273f19(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.append_last */
extern void T273f21(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.make_with_capacity */
extern T0* T273c17(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].make */
extern T0* T642f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].make_empty */
extern T0* T641c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_FEATURE.builtin_internal_feature */
extern T6 T248f20(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.object_id_dynamic_type_set */
extern T0* T238f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.builtin_identified_feature */
extern T6 T248f18(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.mark_type_alive */
extern void T238f14(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.set_regular */
extern void T310f54(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_regular */
extern void T248f52(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.item */
extern T0* T311f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.current_system */
extern T0* T238f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_type_alive */
extern void T79f122(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.dynamic_type */
extern T0* T71f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.set_index */
extern void T82f223(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].is_empty */
extern T1 T234f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_fatal_error */
extern void T71f76(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].last */
extern T0* T234f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.propagate_type_of_type_result_type */
extern void T71f77(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].force_last */
extern void T234f15(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].resize */
extern void T234f18(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T234f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].extendible */
extern T1 T234f9(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.new_dynamic_type */
extern T0* T71f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.make */
extern T0* T239c71(GE_context* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type */
extern void T274f17(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make_empty */
extern T0* T274c13(GE_context* ac, T0* a1);
/* ET_DYNAMIC_TYPE.empty_features */
extern unsigned char ge1002os16677;
extern T0* ge1002ov16677;
extern T0* T239f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.make */
extern T0* T309c12(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].make */
extern T0* T706f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].make_empty */
extern T0* T703c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.fixed_array */
extern unsigned char ge970os7546;
extern T0* ge970ov7546;
extern T0* T309f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].default_create */
extern T0* T706c3(GE_context* ac);
/* ET_CLASS.hash_code */
extern T6 T82f127(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_predicate_type */
extern T0* T71f57(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.make */
extern T0* T334c74(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_FUNCTION_TYPE.make_type */
extern void T334f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.empty_features */
extern T0* T334f65(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.empty_dynamic_type_sets */
extern unsigned char ge995os7174;
extern T0* ge995ov7174;
extern T0* T71f58(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.make */
extern T0* T269c14(GE_context* ac);
/* ET_CLASS.is_predicate_class */
extern T1 T82f67(GE_context* ac, T0* C);
/* ET_CLASS.class_codes */
extern unsigned char ge799os12501;
extern T0* ge799ov12501;
extern T0* T82f108(GE_context* ac, T0* C);
/* ET_CLASS_CODES.default_create */
extern T0* T398c35(GE_context* ac);
/* ET_DYNAMIC_SYSTEM.new_function_type */
extern T0* T71f56(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.new_procedure_type */
extern T0* T71f55(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.make */
extern T0* T335c74(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.make_type */
extern void T335f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.empty_features */
extern T0* T335f66(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_type_type */
extern T0* T71f54(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_class */
extern T1 T82f122(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_typed_pointer_type */
extern T0* T71f53(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_typed_pointer_class */
extern T1 T82f66(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_array_type */
extern T0* T71f52(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_array_class */
extern T1 T82f65(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_tuple_type */
extern T0* T71f51(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.make */
extern T0* T306c73(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TYPE_SET_LIST.item */
extern T0* T269f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.make_type */
extern void T306f81(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.empty_features */
extern T0* T306f64(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_special_type */
extern T0* T71f50(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.make */
extern T0* T323c73(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.make_type */
extern void T323f81(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.empty_features */
extern T0* T323f64(GE_context* ac, T0* C);
/* ET_CLASS.is_special_class */
extern T1 T82f63(GE_context* ac, T0* C);
/* ET_CLASS.is_tuple_class */
extern T1 T82f64(GE_context* ac, T0* C);
/* ET_CLASS.is_generic */
extern T1 T82f126(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_function_feature */
extern T6 T81f83(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.item_feature_name */
extern unsigned char ge808os11543;
extern T0* ge808ov11543;
extern T0* T81f78(GE_context* ac, T0* C);
/* ET_CLASS.is_function_class */
extern T1 T82f197(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_procedure_feature */
extern T6 T81f86(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.call_feature_name */
extern unsigned char ge808os11431;
extern T0* ge808ov11431;
extern T0* T81f221(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.tokens */
extern T0* T248f39(GE_context* ac, T0* C);
/* ET_CLASS.is_procedure_class */
extern T1 T82f128(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.empty_dynamic_type_sets */
extern unsigned char ge969os17719;
extern T0* ge969ov17719;
extern T0* T248f33(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.make */
extern T0* T528c72(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.empty_clients */
extern unsigned char ge808os12238;
extern T0* ge808ov12238;
extern T0* T81f138(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.make */
extern T0* T469c12(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].make */
extern T0* T1011f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].make_empty */
extern T0* T1012c5(GE_context* ac, T6 a1);
/* ET_CLIENT_LIST.fixed_array */
extern unsigned char ge507os12622;
extern T0* ge507ov12622;
extern T0* T469f3(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].default_create */
extern T0* T1011c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.end_keyword */
extern unsigned char ge808os11721;
extern T0* ge808ov11721;
extern T0* T81f74(GE_context* ac, T0* C);
/* ET_KEYWORD.make_end */
extern T0* T397c37(GE_context* ac);
/* ET_KEYWORD.make_token */
extern void T397f39(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_leaf */
extern void T397f40(GE_context* ac, T0* C);
/* ET_KEYWORD.tokens */
extern T0* T397f19(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.tokens */
extern T0* T528f35(GE_context* ac, T0* C);
/* ET_IDENTIFIER.make */
extern T0* T182c106(GE_context* ac, T0* a1);
/* ET_IDENTIFIER.make_with_hash_code */
extern void T182f116(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_with_hash_code */
extern T0* T182c116(GE_context* ac, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_leaf */
extern void T182f117(GE_context* ac, T0* C);
/* ET_IDENTIFIER.new_hash_code */
extern T6 T182f9(GE_context* ac, T0* C, T0* a1);
/* CHARACTER_8.upper */
extern T2 T2f21(GE_context* ac, T2* C);
/* CHARACTER_8.is_lower */
extern T1 T2f24(GE_context* ac, T2* C);
/* ET_C_GENERATOR.close_cpp_file */
extern void T74f612(GE_context* ac, T0* C);
/* ET_C_GENERATOR.close_c_file */
extern void T74f611(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].wipe_out */
extern void T299f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T299f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T299f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T299f41(GE_context* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_TYPE].keep_head */
extern void T641f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].set_count */
extern void T641f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T299f40(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].keep_head */
extern void T703f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].set_count */
extern void T703f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].unset_found_item */
extern void T299f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T299f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T705f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].set_after */
extern void T705f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].wipe_out */
extern void T298f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].slots_wipe_out */
extern void T298f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].clashes_wipe_out */
extern void T298f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].key_storage_wipe_out */
extern void T298f47(GE_context* ac, T0* C);
/* SPECIAL [ET_INLINE_CONSTANT].keep_head */
extern void T700f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].set_count */
extern void T700f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].item_storage_wipe_out */
extern void T298f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].unset_found_item */
extern void T298f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].move_all_cursors_after */
extern void T298f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].set_next_cursor */
extern void T699f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].set_after */
extern void T699f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].wipe_out */
extern void T297f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_wipe_out */
extern void T297f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_wipe_out */
extern void T297f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_wipe_out */
extern void T297f48(GE_context* ac, T0* C);
/* SPECIAL [ET_FEATURE].keep_head */
extern void T694f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].set_count */
extern void T694f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_wipe_out */
extern void T297f47(GE_context* ac, T0* C);
/* SPECIAL [ET_CONSTANT].keep_head */
extern void T696f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CONSTANT].set_count */
extern void T696f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].unset_found_item */
extern void T297f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].move_all_cursors_after */
extern void T297f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_next_cursor */
extern void T695f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_after */
extern void T695f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].wipe_out */
extern void T296f31(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_wipe_out */
extern void T296f43(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].clashes_wipe_out */
extern void T296f42(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].key_storage_wipe_out */
extern void T296f41(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].item_storage_wipe_out */
extern void T296f40(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].unset_found_item */
extern void T296f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].move_all_cursors_after */
extern void T296f39(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_next_cursor */
extern void T691f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_after */
extern void T691f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].wipe_out */
extern void T301f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_wipe_out */
extern void T301f59(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_wipe_out */
extern void T301f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_wipe_out */
extern void T301f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_wipe_out */
extern void T301f56(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].unset_found_item */
extern void T301f55(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].move_all_cursors_after */
extern void T301f54(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_next_cursor */
extern void T708f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_after */
extern void T708f9(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].wipe_out */
extern void T76f43(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].slots_wipe_out */
extern void T76f61(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].clashes_wipe_out */
extern void T76f60(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].key_storage_wipe_out */
extern void T76f59(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].item_storage_wipe_out */
extern void T76f58(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].unset_found_item */
extern void T76f44(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].move_all_cursors_after */
extern void T76f57(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].set_next_cursor */
extern void T369f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_after */
extern void T369f10(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].forth */
extern void T301f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_forth */
extern void T301f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].add_traversing_cursor */
extern void T301f67(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_position */
extern void T708f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].remove_traversing_cursor */
extern void T301f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_item */
extern T6 T301f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_for_iteration */
extern T0* T301f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_key */
extern T0* T301f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_item */
extern T0* T301f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_for_iteration */
extern T1 T301f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_item */
extern T1 T301f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_item */
extern T1 T301f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].after */
extern T1 T301f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_after */
extern T1 T301f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].after */
extern T1 T708f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].start */
extern void T301f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_start */
extern void T301f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_off */
extern T1 T301f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].off */
extern T1 T708f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].is_empty */
extern T1 T301f32(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].forth */
extern void T76f42(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_forth */
extern void T76f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].add_traversing_cursor */
extern void T76f67(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_position */
extern void T369f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].remove_traversing_cursor */
extern void T76f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].clashes_item */
extern T6 T76f19(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.include_runtime_c_file */
extern void T74f610(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.include_file */
extern void T74f673(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [STRING_8].item_for_iteration */
extern T0* T76f31(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_item */
extern T0* T76f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].item_storage_item */
extern T0* T76f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].after */
extern T1 T76f36(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_after */
extern T1 T76f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].after */
extern T1 T369f7(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].start */
extern void T76f41(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_start */
extern void T76f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].cursor_off */
extern T1 T76f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].off */
extern T1 T369f5(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].is_empty */
extern T1 T76f32(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_end_extern_c */
extern void T74f609(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_main_function */
extern void T74f608(GE_context* ac, T0* C);
/* ET_C_GENERATOR.dedent */
extern void T74f655(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.remove_last */
extern void T269f11(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].keep_head */
extern void T656f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].keep_head */
extern void T655f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].set_count */
extern void T655f10(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_creation_expression */
extern void T74f672(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].wipe_out */
extern void T276f13(GE_context* ac, T0* C);
/* SPECIAL [ET_EXPRESSION].keep_head */
extern void T660f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION].set_count */
extern void T660f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].move_all_cursors_after */
extern void T276f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_next_cursor */
extern void T662f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_after */
extern void T662f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attachment_expression */
extern void T74f714(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_boxed_attribute_item_access */
extern void T74f680(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_void_expression */
extern void T74f691(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_expression */
extern void T74f690(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_item_name */
extern void T74f688(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_expression */
extern void T74f735(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_cast */
extern void T74f729(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_name */
extern void T74f678(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [INTEGER_32].wipe_out */
extern void T272f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].move_all_cursors_after */
extern void T272f23(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_next_cursor */
extern void T658f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_after */
extern void T658f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_last_new */
extern void T54f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [INTEGER_32].item */
extern T6 T272f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].sort */
extern void T272f18(GE_context* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort */
extern void T339f3(GE_context* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort_with_comparator */
extern void T339f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [INTEGER_32].subsort_with_comparator */
extern void T339f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ARRAY [INTEGER_32].force */
extern void T522f12(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].capacity */
extern T6 T522f7(GE_context* ac, T0* C);
/* ARRAY [INTEGER_32].set_area */
extern void T522f15(GE_context* ac, T0* C, T0* a1);
/* ARRAY [INTEGER_32].make_empty_area */
extern void T522f14(GE_context* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].additional_space */
extern T6 T522f6(GE_context* ac, T0* C);
/* ARRAY [INTEGER_32].empty_area */
extern T1 T522f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].swap */
extern void T272f24(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER_32].replace */
extern void T272f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].less_than */
extern T1 T525f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].item */
extern T6 T522f4(GE_context* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].put */
extern void T522f11(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.dynamic_type_id_sorter */
extern unsigned char ge1022os8304;
extern T0* ge1022ov8304;
extern T0* T74f184(GE_context* ac, T0* C);
/* DS_QUICK_SORTER [INTEGER_32].make */
extern T0* T339c2(GE_context* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].make */
extern T0* T525c2(GE_context* ac);
/* DS_ARRAYED_LIST [INTEGER_32].is_empty */
extern T1 T272f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].put_last */
extern void T272f20(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].resize */
extern void T272f19(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.argument_type_set_in_feature */
extern T0* T74f206(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.argument_type_set */
extern T0* T310f23(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.argument_type_set */
extern T0* T248f24(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].item */
extern T0* T276f6(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_creation_procedure_name */
extern void T74f728(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_type_name */
extern void T74f675(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.new_temp_variable */
extern T0* T74f116(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].force_last */
extern void T272f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_capacity */
extern T6 T272f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].extendible */
extern T1 T272f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].force_last */
extern void T271f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].force */
extern void T213f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].fill_with */
extern void T212f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].extend */
extern void T212f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].resize */
extern void T271f12(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].aliased_resized_area */
extern T0* T213f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IDENTIFIER].aliased_resized_area */
extern T0* T212f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_capacity */
extern T6 T271f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].extendible */
extern T1 T271f7(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_temporary */
extern void T182f113(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].item */
extern T0* T271f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].replace */
extern void T234f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.same_declaration_types */
extern T1 T74f445(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_writable */
extern void T74f727(GE_context* ac, T0* C, T0* a1);
extern T1 T74f727ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_attribute_access */
extern void T74f653(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_name */
extern void T74f683(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_type_cast */
extern void T74f648(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.current_keyword */
extern unsigned char ge808os11714;
extern T0* ge808ov11714;
extern T0* T81f18(GE_context* ac, T0* C);
/* ET_CURRENT.make */
extern T0* T286c30(GE_context* ac);
/* ET_CURRENT.make_token */
extern void T286f32(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.make_leaf */
extern void T286f33(GE_context* ac, T0* C);
/* ET_CURRENT.tokens */
extern T0* T286f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.tokens */
extern T0* T74f111(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].remove */
extern void T207f43(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].remove_position */
extern void T207f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_put */
extern void T207f73(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_put */
extern void T207f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_keep_head */
extern void T207f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_keep_head */
extern void T207f71(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].keep_head */
extern void T212f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].set_count */
extern void T212f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_put */
extern void T207f60(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].slots_put */
extern void T207f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_item */
extern T6 T207f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].move_cursors_forth */
extern void T207f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_position */
extern void T631f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_next_cursor */
extern void T631f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_after */
extern void T631f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].internal_set_key_equality_tester */
extern void T207f69(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_equality_tester */
extern T0* T207f24(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].slots_item */
extern T6 T207f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].hash_position */
extern T6 T207f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_item */
extern T0* T207f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_item */
extern T0* T207f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].search_position */
extern void T207f44(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TESTER.test */
extern T1 T302f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.same_identifier */
extern T1 T182f23(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.same_case_insensitive */
extern T1 T34f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* CHARACTER_8.lower */
extern T2 T2f20(GE_context* ac, T2* C);
/* CHARACTER_8.is_upper */
extern T1 T2f23(GE_context* ac, T2* C);
/* UC_UNICODE_ROUTINES.lower_code */
extern T6 T772f1(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_codes */
extern unsigned char ge327os30028;
extern T0* ge327ov30028;
extern T0* T772f2(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_plane */
extern unsigned char ge327os30027;
extern T0* ge327ov30027;
extern T0* T772f5(GE_context* ac, T0* C);
/* SPECIAL [ARRAY [INTEGER_32]].make_filled */
extern T0* T1444c4(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [ARRAY [INTEGER_32]].fill_with */
extern void T1444f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ARRAY [INTEGER_32]].extend */
extern void T1444f8(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [ARRAY [INTEGER_32]].make_empty */
extern void T1444f6(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.empty_lower_code_segment */
extern unsigned char ge327os30014;
extern T0* ge327ov30014;
extern T0* T772f12(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.to_integer */
extern T6 T232f4(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.integer_ */
extern T0* T772f23(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1 */
extern unsigned char ge327os30026;
extern T0* ge327ov30026;
extern T0* T772f4(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1_segment_4 */
extern unsigned char ge327os30025;
extern T0* ge327ov30025;
extern T0* T772f22(GE_context* ac, T0* C);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make_filled */
extern T0* T1445c4(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].fill_with */
extern void T1445f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].extend */
extern void T1445f8(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make_empty */
extern void T1445f6(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_code_plane_0 */
extern unsigned char ge327os30024;
extern T0* ge327ov30024;
extern T0* T772f3(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_255 */
extern unsigned char ge327os30023;
extern T0* ge327ov30023;
extern T0* T772f21(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_167 */
extern unsigned char ge327os30022;
extern T0* ge327ov30022;
extern T0* T772f20(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_166 */
extern unsigned char ge327os30021;
extern T0* ge327ov30021;
extern T0* T772f19(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_44 */
extern unsigned char ge327os30020;
extern T0* ge327ov30020;
extern T0* T772f18(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_36 */
extern unsigned char ge327os30019;
extern T0* ge327ov30019;
extern T0* T772f17(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_33 */
extern unsigned char ge327os30018;
extern T0* ge327ov30018;
extern T0* T772f16(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_31 */
extern unsigned char ge327os30017;
extern T0* ge327ov30017;
extern T0* T772f15(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_30 */
extern unsigned char ge327os30016;
extern T0* ge327ov30016;
extern T0* T772f14(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_16 */
extern unsigned char ge327os30015;
extern T0* ge327ov30015;
extern T0* T772f13(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_5 */
extern unsigned char ge327os30013;
extern T0* ge327ov30013;
extern T0* T772f11(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_4 */
extern unsigned char ge327os30012;
extern T0* ge327ov30012;
extern T0* T772f10(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_3 */
extern unsigned char ge327os30011;
extern T0* ge327ov30011;
extern T0* T772f9(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_2 */
extern unsigned char ge327os30010;
extern T0* ge327ov30010;
extern T0* T772f8(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_1 */
extern unsigned char ge327os30009;
extern T0* ge327ov30009;
extern T0* T772f7(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_0 */
extern unsigned char ge327os30008;
extern T0* ge327ov30008;
extern T0* T772f6(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.unicode */
extern unsigned char ge308os3806;
extern T0* ge308ov3806;
extern T0* T34f13(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.default_create */
extern T0* T772c52(GE_context* ac);
/* ET_IDENTIFIER.string_ */
extern T0* T182f36(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].unset_found_item */
extern void T207f49(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_local_variable */
extern void T74f742(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_local_name */
extern void T74f747(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_IDENTIFIER].has */
extern T1 T207f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].force_last */
extern void T207f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].resize */
extern void T207f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_resize */
extern void T207f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].special_integer_ */
extern T0* T207f35(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_resize */
extern void T207f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_resize */
extern void T207f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].slots_resize */
extern void T207f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_modulus */
extern T6 T207f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_capacity */
extern T6 T207f19(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_across_cursor */
extern void T74f741(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_cursor_name */
extern void T74f746(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_temporary_variable */
extern void T74f740(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_temporary */
extern T1 T182f28(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_formal_argument */
extern void T74f739(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_argument_name */
extern void T74f698(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_STACK [ET_EXPRESSION].force */
extern void T275f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].force */
extern void T661f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].fill_with */
extern void T660f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].extend */
extern void T660f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].resize */
extern void T275f11(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].aliased_resized_area */
extern T0* T661f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION].aliased_resized_area */
extern T0* T660f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].new_capacity */
extern T6 T275f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].extendible */
extern T1 T275f6(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.fill_call_operands */
extern void T74f726(GE_context* ac, T0* C, T6 a1);
extern T1 T74f726ot1(T0* a1, T0** a2);
/* DS_ARRAYED_STACK [ET_EXPRESSION].prune */
extern void T275f10(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.mark_temp_variable_free */
extern void T74f654(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.is_temp_variable_frozen */
extern T1 T74f224(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].i_th */
extern T0* T275f5(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].put_last */
extern void T276f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].resize */
extern void T276f16(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_operand */
extern void T74f725(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_FROM_EXPRESSION.arguments */
extern T0* T1861f14(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.arguments */
extern T0* T326f6(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.name */
extern T0* T1861f17(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.name */
extern T0* T326f5(GE_context* ac, T0* C);
/* ET_C_GENERATOR.dynamic_type_set */
extern T0* T74f194(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.item */
extern T0* T278f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.valid_index */
extern T1 T278f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.valid_index */
extern T1 T269f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.force_last */
extern void T269f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.resize */
extern void T269f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T656f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T655f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.new_capacity */
extern T6 T269f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.capacity */
extern T6 T269f6(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.make */
extern T0* T326c25(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.create_keyword */
extern unsigned char ge808os11712;
extern T0* ge808ov11712;
extern T0* T81f230(GE_context* ac, T0* C);
/* ET_KEYWORD.make_create */
extern T0* T397c41(GE_context* ac);
/* ET_CREATE_EXPRESSION.tokens */
extern T0* T326f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.name */
extern T0* T327f3(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.make */
extern T0* T327c5(GE_context* ac, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_show_console_call */
extern void T74f671(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_routine_name */
extern void T74f669(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T74f669ot1(T0* a1, T0** a2);
/* ET_CLASS.upper_name */
extern T0* T82f119(GE_context* ac, T0* C);
/* ET_IDENTIFIER.upper_name */
extern T0* T182f7(GE_context* ac, T0* C);
/* UC_UTF8_STRING.as_upper */
extern T0* T847f25(GE_context* ac, T0* C);
/* UC_UTF8_STRING.to_upper */
extern void T847f83(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code */
extern T6 T772f29(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.upper_codes */
extern unsigned char ge329os30053;
extern T0* ge329ov30053;
extern T0* T772f30(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_plane */
extern unsigned char ge329os30052;
extern T0* ge329ov30052;
extern T0* T772f33(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_segment */
extern unsigned char ge329os30038;
extern T0* ge329ov30038;
extern T0* T772f40(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1 */
extern unsigned char ge329os30051;
extern T0* ge329ov30051;
extern T0* T772f32(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1_segment_4 */
extern unsigned char ge329os30050;
extern T0* ge329ov30050;
extern T0* T772f51(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0 */
extern unsigned char ge329os30049;
extern T0* ge329ov30049;
extern T0* T772f31(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_255 */
extern unsigned char ge329os30048;
extern T0* ge329ov30048;
extern T0* T772f50(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_167 */
extern unsigned char ge329os30047;
extern T0* ge329ov30047;
extern T0* T772f49(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_166 */
extern unsigned char ge329os30046;
extern T0* ge329ov30046;
extern T0* T772f48(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_45 */
extern unsigned char ge329os30045;
extern T0* ge329ov30045;
extern T0* T772f47(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_44 */
extern unsigned char ge329os30044;
extern T0* ge329ov30044;
extern T0* T772f46(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_36 */
extern unsigned char ge329os30043;
extern T0* ge329ov30043;
extern T0* T772f45(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_33 */
extern unsigned char ge329os30042;
extern T0* ge329ov30042;
extern T0* T772f44(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_31 */
extern unsigned char ge329os30041;
extern T0* ge329ov30041;
extern T0* T772f43(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_30 */
extern unsigned char ge329os30040;
extern T0* ge329ov30040;
extern T0* T772f42(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_29 */
extern unsigned char ge329os30039;
extern T0* ge329ov30039;
extern T0* T772f41(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_5 */
extern unsigned char ge329os30037;
extern T0* ge329ov30037;
extern T0* T772f39(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_4 */
extern unsigned char ge329os30036;
extern T0* ge329ov30036;
extern T0* T772f38(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_3 */
extern unsigned char ge329os30035;
extern T0* ge329ov30035;
extern T0* T772f37(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_2 */
extern unsigned char ge329os30034;
extern T0* ge329ov30034;
extern T0* T772f36(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_1 */
extern unsigned char ge329os30033;
extern T0* ge329ov30033;
extern T0* T772f35(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_0 */
extern unsigned char ge329os30032;
extern T0* ge329ov30032;
extern T0* T772f34(GE_context* ac, T0* C);
/* UC_UTF8_STRING.unicode */
extern T0* T847f53(GE_context* ac, T0* C);
/* STRING_8.as_upper */
extern T0* T17f29(GE_context* ac, T0* C);
/* STRING_8.to_upper */
extern void T17f66(GE_context* ac, T0* C);
/* STRING_8.to_upper_area */
extern void T17f68(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_escaped_string */
extern void T74f670(GE_context* ac, T0* C, T0* a1);
/* UT_INTEGER_FORMATTER.put_octal_integer */
extern void T353f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.integer_formatter_ */
extern unsigned char ge177os9376;
extern T0* ge177ov9376;
extern T0* T74f209(GE_context* ac, T0* C);
/* UT_INTEGER_FORMATTER.default_create */
extern T0* T353c1(GE_context* ac);
/* ET_C_GENERATOR.print_temp_name */
extern void T74f647(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.temp_variable */
extern unsigned char ge1022os8324;
extern T0* ge1022ov8324;
extern T0* T74f130(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_type_declaration */
extern void T74f643(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_eif_any_type_name */
extern void T74f614(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_indentation */
extern void T74f645(GE_context* ac, T0* C);
/* ET_C_GENERATOR.indent */
extern void T74f644(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_types_array */
extern void T74f607(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].found_item */
extern T0* T299f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T299f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].found */
extern T1 T299f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].search */
extern void T299f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].search_position */
extern void T299f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].hash_position */
extern T6 T299f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T299f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T299f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].slots_item */
extern T6 T299f21(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_dynamic_type_id_set_constants */
extern void T74f606(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].forth */
extern void T54f73(GE_context* ac, T0* C);
/* UC_UTF8_STRING.occurrences */
extern T6 T847f23(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.code_occurrences */
extern T6 T847f45(GE_context* ac, T0* C, T6 a1);
/* STRING_8.occurrences */
extern T6 T17f27(GE_context* ac, T0* C, T2 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_for_iteration */
extern T0* T54f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_for_iteration */
extern T0* T54f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].after */
extern T1 T54f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_after */
extern T1 T54f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].start */
extern void T54f72(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_init_const_function */
extern void T74f605(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].forth */
extern void T298f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_forth */
extern void T298f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].add_traversing_cursor */
extern void T298f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].set_position */
extern void T699f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].remove_traversing_cursor */
extern void T298f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].clashes_item */
extern T6 T298f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].item_for_iteration */
extern T0* T298f20(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_item */
extern T0* T298f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].item_storage_item */
extern T0* T298f36(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.constant */
extern T0* T1273f11(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_inline_constant_name */
extern void T74f667(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].key_for_iteration */
extern T0* T298f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_key */
extern T0* T298f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].key_storage_item */
extern T0* T298f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].after */
extern T1 T298f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_after */
extern T1 T298f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].after */
extern T1 T699f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].start */
extern void T298f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_start */
extern void T298f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_off */
extern T1 T298f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].off */
extern T1 T699f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].is_empty */
extern T1 T298f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].forth */
extern void T297f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_forth */
extern void T297f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].add_traversing_cursor */
extern void T297f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_position */
extern void T695f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].remove_traversing_cursor */
extern void T297f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_item */
extern T6 T297f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_for_iteration */
extern T0* T297f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_item */
extern T0* T297f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_item */
extern T0* T297f20(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_once_value_name */
extern void T74f666(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_once_status_name */
extern void T74f668(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_FEATURE].has */
extern T1 T296f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].search_position */
extern void T296f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].hash_position */
extern T6 T296f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].key_storage_item */
extern T0* T296f17(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_item */
extern T0* T296f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].clashes_item */
extern T6 T296f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].key_equality_tester */
extern T0* T296f24(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_item */
extern T6 T296f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_for_iteration */
extern T0* T297f22(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_key */
extern T0* T297f27(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_item */
extern T0* T297f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].after */
extern T1 T297f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_after */
extern T1 T297f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].after */
extern T1 T695f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].start */
extern void T297f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_start */
extern void T297f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_off */
extern T1 T297f29(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].off */
extern T1 T695f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].is_empty */
extern T1 T297f28(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_constants_declaration */
extern void T74f604(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_functions */
extern void T74f603(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].wipe_out */
extern void T280f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T280f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T280f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T280f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T280f50(GE_context* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].keep_head */
extern void T665f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].set_count */
extern void T665f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].unset_found_item */
extern void T280f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T280f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T668f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].set_after */
extern void T668f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].forth */
extern void T280f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_forth */
extern void T280f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T280f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].set_position */
extern void T668f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T280f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T280f24(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_deep_twin_polymorphic_call_function */
extern void T74f665(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_entity_value */
extern void T74f703(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_default_name */
extern void T74f649(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].wipe_out */
extern void T277f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_wipe_out */
extern void T277f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_wipe_out */
extern void T277f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_wipe_out */
extern void T277f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_wipe_out */
extern void T277f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].unset_found_item */
extern void T277f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].move_all_cursors_after */
extern void T277f45(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].set_next_cursor */
extern void T664f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].set_after */
extern void T664f7(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_binary_search_polymorphic_call */
extern void T74f724(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_adapted_deep_twin_call */
extern void T74f723(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_deep_twin_call */
extern T0* T74f723ac1(T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_deep_twin_call */
extern void T74f738(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_target_expression */
extern void T74f718(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_adapted_expression */
extern void T74f731(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item */
extern T0* T277f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_item */
extern T0* T277f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].search_position */
extern void T277f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].hash_position */
extern T6 T277f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_item */
extern T6 T277f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_item */
extern T6 T277f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_item */
extern T6 T277f21(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_attribute_type_id_access */
extern void T74f699(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_type_id_name */
extern void T74f682(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].force_last */
extern void T277f36(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_put */
extern void T277f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_put */
extern void T277f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_put */
extern void T277f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].resize */
extern void T277f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_resize */
extern void T277f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].special_integer_ */
extern T0* T277f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_resize */
extern void T277f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_resize */
extern void T277f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_resize */
extern void T277f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_modulus */
extern T6 T277f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_capacity */
extern T6 T277f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_put */
extern void T277f43(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.print_current_name */
extern void T74f697(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T280f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_item */
extern T0* T280f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T280f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T280f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_after */
extern T1 T280f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T668f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].start */
extern void T280f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_start */
extern void T280f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_off */
extern T1 T280f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].off */
extern T1 T668f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].is_empty */
extern T1 T280f22(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_function */
extern void T74f664(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f664ac1(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #2 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f664ac2(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #3 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f664ac3(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #4 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f664ac4(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #5 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f664ac5(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #6 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f664ac6(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #7 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f664ac7(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #8 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f664ac8(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #9 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f664ac9(T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #10 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f664ac10(T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #11 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f664ac11(T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #12 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T74f664ac12(T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T74f664ot1(T0* a1, T0** a2);
extern T1 T74f664ot2(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_attribute_tuple_item_access */
extern void T74f663(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_tuple_item_name */
extern void T74f686(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_special_indexed_item_access */
extern void T74f721(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.reset_temp_variables */
extern void T74f656(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].wipe_out */
extern void T234f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T234f17(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T643f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_after */
extern void T643f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_set_deep_twined_attribute */
extern void T74f722(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_deep_twined_attribute */
extern void T74f737(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_types */
extern void T274f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].force_last_new */
extern void T280f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_put */
extern void T280f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_put */
extern void T280f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].force */
extern void T666f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].fill_with */
extern void T665f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].extend */
extern void T665f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_put */
extern void T280f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_put */
extern void T280f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_item */
extern T6 T280f38(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].hash_position */
extern T6 T280f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].resize */
extern void T280f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_resize */
extern void T280f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T280f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T280f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T280f64(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T666f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T665f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T280f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_resize */
extern void T280f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T280f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T280f34(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.force_last */
extern void T278f11(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.fixed_array */
extern unsigned char ge994os7546;
extern T0* ge994ov7546;
extern T0* T278f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].default_create */
extern T0* T666c3(GE_context* ac);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.resize */
extern void T278f9(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.new_capacity */
extern T6 T278f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.capacity */
extern T6 T278f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make */
extern T0* T274c18(GE_context* ac, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset */
extern void T274f16(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.wipe_out */
extern void T273f20(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].keep_head */
extern void T642f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].found_item */
extern T0* T280f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].found */
extern T1 T280f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].search */
extern void T280f43(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].search_position */
extern void T280f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].force_last */
extern void T279f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_put */
extern void T279f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_put */
extern void T279f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_item */
extern T6 T279f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].hash_position */
extern T6 T279f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].resize */
extern void T279f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_resize */
extern void T279f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T279f32(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_resize */
extern void T279f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_resize */
extern void T279f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T279f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T279f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_item */
extern T6 T279f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_resize */
extern void T279f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_modulus */
extern T6 T279f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T279f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_put */
extern void T279f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].search_position */
extern void T279f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_equality_tester */
extern T0* T279f30(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].unset_found_item */
extern void T279f44(GE_context* ac, T0* C);
/* ET_C_GENERATOR.result_type_set_in_feature */
extern T0* T74f176(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.item */
extern T0* T309f3(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_attribute_special_count_access */
extern void T74f651(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_count_name */
extern void T74f693(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.first */
extern T0* T309f4(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_special_item_access */
extern void T74f652(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_item_name */
extern void T74f685(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.result_keyword */
extern unsigned char ge808os11751;
extern T0* ge808ov11751;
extern T0* T81f19(GE_context* ac, T0* C);
/* ET_RESULT.make */
extern T0* T313c29(GE_context* ac);
/* ET_RESULT.make_token */
extern void T313f31(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT.make_leaf */
extern void T313f32(GE_context* ac, T0* C);
/* ET_RESULT.tokens */
extern T0* T313f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_special_capacity_access */
extern void T74f650(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_capacity_name */
extern void T74f692(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_result_name */
extern void T74f646(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].is_empty */
extern T1 T279f20(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].wipe_out */
extern void T295f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_wipe_out */
extern void T295f51(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_wipe_out */
extern void T295f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_wipe_out */
extern void T295f49(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_wipe_out */
extern void T295f48(GE_context* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].keep_head */
extern void T689f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].set_count */
extern void T689f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].unset_found_item */
extern void T295f43(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].move_all_cursors_after */
extern void T295f47(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_next_cursor */
extern void T688f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_after */
extern void T688f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].forth */
extern void T295f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_forth */
extern void T295f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].add_traversing_cursor */
extern void T295f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_position */
extern void T688f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].remove_traversing_cursor */
extern void T295f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_item */
extern T6 T295f23(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_manifest_tuple_function */
extern void T74f602(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_for_iteration */
extern T0* T295f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_item */
extern T0* T295f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_item */
extern T0* T295f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T295f34(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_after */
extern T1 T295f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T688f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].start */
extern void T295f36(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_start */
extern void T295f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_off */
extern T1 T295f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].off */
extern T1 T688f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].is_empty */
extern T1 T295f21(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_big_manifest_array_function */
extern void T74f601(GE_context* ac, T0* C, T0* a1);
extern T1 T74f601ot1(T0* a1, T0** a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].wipe_out */
extern void T279f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T279f52(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T279f51(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T279f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T279f49(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T279f48(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T667f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_after */
extern void T667f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].forth */
extern void T279f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_forth */
extern void T279f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T279f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_position */
extern void T667f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T279f58(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array_function */
extern void T74f600(GE_context* ac, T0* C, T0* a1);
extern T1 T74f600ot1(T0* a1, T0** a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T279f33(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_item */
extern T0* T279f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].after */
extern T1 T279f22(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_after */
extern T1 T279f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].after */
extern T1 T667f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].start */
extern void T279f36(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_start */
extern void T279f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_off */
extern T1 T279f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].off */
extern T1 T667f5(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_tuple_label_call_functions */
extern void T74f599(GE_context* ac, T0* C);
extern T1 T74f599ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_polymorphic_call_function */
extern void T74f657(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T74f657ot1(T0* a1, T0** a2);
extern T1 T74f657ot2(T0* a1, T0** a2);
/* ET_MANIFEST_TUPLE.wipe_out */
extern void T294f30(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].keep_head */
extern void T684f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].keep_head */
extern void T682f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].set_count */
extern void T682f9(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.fixed_array */
extern unsigned char ge600os12622;
extern T0* ge600ov12622;
extern T0* T294f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].default_create */
extern T0* T684c3(GE_context* ac);
/* ET_C_GENERATOR.print_binary_search_polymorphic_calls */
extern void T74f704(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T6 a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.print_named_procedure_call */
extern void T74f702(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_procedure_call */
extern void T74f734(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_inlined_procedure_call */
extern void T74f745(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_ARRAYED_LIST [ET_EXPRESSION].first */
extern T0* T276f10(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_procedure_call */
extern void T74f744(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_procedure_call */
extern void T74f763(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_set_object_comparison_call */
extern void T74f794(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_adapted_attribute_access */
extern void T74f748(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_boxed_attribute_access */
extern void T74f764(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.builtin_tuple_feature */
extern T6 T74f401(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_special_procedure_call */
extern void T74f762(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_put_call */
extern void T74f793(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_procedure_call */
extern void T74f761(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_set_item_call */
extern void T74f792(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.builtin_feature */
extern T6 T74f394(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.print_unboxed_expression */
extern void T74f717(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_procedure_call */
extern void T74f760(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_call_call */
extern void T74f791(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_routine_call_call */
extern void T74f919(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T74f919ot1(T0* a1, T0** a2);
extern T1 T74f919ot2(T0* a1, T0** a2);
extern T1 T74f919ot3(T0* a1, T0** a2);
extern T1 T74f919ot4(T0* a1, T0** a2);
extern T1 T74f919ot5(T0* a1, T0** a2);
extern T1 T74f919ot6(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_call_operands_unfrozen */
extern void T74f922(GE_context* ac, T0* C);
extern T1 T74f922ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_temp_variable_unfrozen */
extern void T74f924(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.make */
extern T0* T314c12(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_CALL_EXPRESSION.set_target */
extern void T291f25(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.new_agent_tuple_item_expression */
extern T0* T74f440(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].replace */
extern void T293f11(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_QUALIFIED_CALL_EXPRESSION.make */
extern T0* T291c24(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.make_qualified_call */
extern void T291f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_tuple_label */
extern void T182f115(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].item */
extern T0* T293f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].put_last */
extern void T293f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].force */
extern void T686f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].fill_with */
extern void T685f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].extend */
extern void T685f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].resize */
extern void T293f9(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T686f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T685f4(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.mark_call_operands_frozen */
extern void T74f921(GE_context* ac, T0* C);
extern T1 T74f921ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_temp_variable_frozen */
extern void T74f923(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset_with_types */
extern void T274f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_routine_function_name */
extern void T74f687(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_typed_default_entity_value */
extern void T74f920(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.is_procedure */
extern T1 T310f25(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_procedure */
extern T1 T248f26(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_pointer_procedure_call */
extern void T74f759(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_set_item_call */
extern void T74f790(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.builtin_pointer_feature */
extern T6 T74f399(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_memory_procedure_call */
extern void T74f758(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_free_call */
extern void T74f789(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_exception_manager_procedure_call */
extern void T74f757(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_exception_manager_developer_raise_call */
extern void T74f788(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_procedure_call */
extern void T74f756(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_set_item_call */
extern void T74f787(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_procedure_call */
extern void T74f755(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_eif_object_id_free_call */
extern void T74f786(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_procedure_call */
extern void T74f754(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_cwin_local_free_call */
extern void T74f785(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_character_procedure_call */
extern void T74f753(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_character_set_item_call */
extern void T74f784(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_procedure_call */
extern void T74f752(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_set_item_call */
extern void T74f783(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.builtin_boolean_feature */
extern T6 T74f393(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_any_procedure_call */
extern void T74f751(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_call */
extern void T74f782(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T74f782ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_info_message_call */
extern void T74f918(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_copy_call */
extern void T74f781(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_DYNAMIC_PRECURSOR.is_builtin */
extern T1 T310f19(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin */
extern T1 T248f22(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_tuple_label_setter_call */
extern void T74f733(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T74f733ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_adapted_named_query_call */
extern void T74f701(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_named_query_call */
extern T0* T74f701ac1(T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T74f701ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_adapted_query_call */
extern void T74f732(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_query_call */
extern T0* T74f732ac1(T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_query_call */
extern void T74f743(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T74f743ot1(T0* a1, T0** a2);
extern T1 T74f743ot2(T0* a1, T0** a2);
extern T1 T74f743ot3(T0* a1, T0** a2);
extern T1 T74f743ot4(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_non_inlined_query_call */
extern void T74f750(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_query_call */
extern void T74f749(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_query_call */
extern void T74f780(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_runtime_name_call */
extern void T74f917(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_type_id_call */
extern void T74f916(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_new_special_any_instance_call */
extern void T74f915(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T74f915ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_SYSTEM.is_new_instance_type */
extern T1 T71f48(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].has */
extern T1 T76f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].search_position */
extern void T76f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].hash_position */
extern T6 T76f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].key_storage_item */
extern T0* T76f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].key_equality_tester */
extern T0* T76f26(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].slots_item */
extern T6 T76f20(GE_context* ac, T0* C, T6 a1);
/* STRING_8.replace_substring_all */
extern void T17f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* SPECIAL [CHARACTER_8].resized_area_with_default */
extern T0* T15f8(GE_context* ac, T0* C, T2 a1, T6 a2);
/* detachable ARRAYED_LIST [INTEGER_32].area */
extern T0* T770f3(GE_context* ac, T0* C);
/* STRING_8_SEARCHER.substring_index_list_with_deltas */
extern T0* T769f2(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* detachable ARRAYED_LIST [INTEGER_32].extend */
extern void T770f9(GE_context* ac, T0* C, T6 a1);
/* detachable ARRAYED_LIST [INTEGER_32].additional_space */
extern T6 T770f5(GE_context* ac, T0* C);
/* detachable ARRAYED_LIST [INTEGER_32].capacity */
extern T6 T770f6(GE_context* ac, T0* C);
/* detachable ARRAYED_LIST [INTEGER_32].count */
extern T6 T770f4(GE_context* ac, T0* C);
/* detachable ARRAYED_LIST [INTEGER_32].make */
extern T0* T770c8(GE_context* ac, T6 a1);
/* STRING_8_SEARCHER.initialize_deltas */
extern void T769f7(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_new_instance_call */
extern void T74f914(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T74f914ot1(T0* a1, T0** a2);
/* ET_CLASS.is_none */
extern T1 T82f121(GE_context* ac, T0* C);
/* ET_CLASS.is_deferred */
extern T1 T82f120(GE_context* ac, T0* C);
/* ET_CLASS.has_deferred_mark */
extern T1 T82f79(GE_context* ac, T0* C);
/* ET_KEYWORD.is_deferred */
extern T1 T397f22(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_type_name_call */
extern void T74f913(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_expanded_call */
extern void T74f912(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_has_default_call */
extern void T74f911(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_count_call */
extern void T74f910(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_field_count_call */
extern void T74f909(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_default_call */
extern void T74f908(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_base_class_name_call */
extern void T74f907(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_query_call */
extern void T74f779(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_object_comparison_call */
extern void T74f906(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_count_call */
extern void T74f905(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T74f905ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_special_query_call */
extern void T74f778(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_item_call */
extern void T74f904(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_element_size_call */
extern void T74f903(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T74f903ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_special_count_call */
extern void T74f902(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_capacity_call */
extern void T74f901(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_base_address_call */
extern void T74f900(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_query_call */
extern void T74f777(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_real_call */
extern void T74f899(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_integer_64_call */
extern void T74f898(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_integer_call */
extern void T74f897(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_to_double_call */
extern void T74f896(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_times_call */
extern void T74f895(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_power_call */
extern void T74f894(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_positive_infinity_call */
extern void T74f893(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_plus_call */
extern void T74f892(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_opposite_call */
extern void T74f891(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_negative_infinity_call */
extern void T74f890(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_nan_call */
extern void T74f889(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_minus_call */
extern void T74f888(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_lt_call */
extern void T74f887(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_item_call */
extern void T74f886(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_is_positive_infinity_call */
extern void T74f885(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_is_negative_infinity_call */
extern void T74f884(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_is_nan_call */
extern void T74f883(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_identity_call */
extern void T74f882(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_floor_real_64_call */
extern void T74f881(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_floor_real_32_call */
extern void T74f880(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_divide_call */
extern void T74f879(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_ceiling_real_64_call */
extern void T74f878(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_ceiling_real_32_call */
extern void T74f877(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_query_call */
extern void T74f776(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_to_integer_32_call */
extern void T74f876(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_plus_call */
extern void T74f875(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_item_call */
extern void T74f874(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_is_default_pointer_call */
extern void T74f873(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.current_universe_impl */
extern T0* T74f223(GE_context* ac, T0* C);
/* ET_CLASS.universe */
extern T0* T82f84(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_pointer_hash_code_call */
extern void T74f872(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_query_call */
extern void T74f775(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_wide_character_bytes_call */
extern void T74f871(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_real_bytes_call */
extern void T74f870(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_pointer_bytes_call */
extern void T74f869(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_windows_call */
extern void T74f868(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vxworks_call */
extern void T74f867(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vms_call */
extern void T74f866(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_unix_call */
extern void T74f865(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_thread_capable_call */
extern void T74f864(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_scoop_capable_call */
extern void T74f863(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_mac_call */
extern void T74f862(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_dotnet_call */
extern void T74f861(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_integer_bytes_call */
extern void T74f860(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_double_bytes_call */
extern void T74f859(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_character_bytes_call */
extern void T74f858(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_boolean_bytes_call */
extern void T74f857(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_query_call */
extern void T74f774(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_find_referers_call */
extern void T74f856(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_declaration_type_cast */
extern void T74f709(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_internal_query_call */
extern void T74f773(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_internal_max_type_id_call */
extern void T74f855(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_query_call */
extern void T74f772(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_64_call */
extern void T74f854(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_32_call */
extern void T74f853(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_call */
extern void T74f852(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_double_call */
extern void T74f851(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_character_32_call */
extern void T74f850(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_character_8_call */
extern void T74f849(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_times_call */
extern void T74f848(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_power_call */
extern void T74f847(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_plus_call */
extern void T74f846(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_opposite_call */
extern void T74f845(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_mod_call */
extern void T74f844(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_minus_call */
extern void T74f843(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_lt_call */
extern void T74f842(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_item_call */
extern void T74f841(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_identity_call */
extern void T74f840(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_divide_call */
extern void T74f839(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_div_call */
extern void T74f838(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_xor_call */
extern void T74f837(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_shift_right_call */
extern void T74f836(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_shift_left_call */
extern void T74f835(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_or_call */
extern void T74f834(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_not_call */
extern void T74f833(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_and_call */
extern void T74f832(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_64_call */
extern void T74f831(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_32_call */
extern void T74f830(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_16_call */
extern void T74f829(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_8_call */
extern void T74f828(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_64_call */
extern void T74f827(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_32_call */
extern void T74f826(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_16_call */
extern void T74f825(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_8_call */
extern void T74f824(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_query_call */
extern void T74f771(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_eif_object_id_call */
extern void T74f823(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_eif_id_object_call */
extern void T74f822(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_query_call */
extern void T74f770(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_item_call */
extern void T74f821(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_query_call */
extern void T74f769(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_cwin_error_text_call */
extern void T74f820(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_character_size_call */
extern void T74f819(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_facility_call */
extern void T74f818(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_code_call */
extern void T74f817(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_call */
extern void T74f816(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_c_strlen_call */
extern void T74f815(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_character_query_call */
extern void T74f768(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_character_to_character_32_call */
extern void T74f814(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_character_to_character_8_call */
extern void T74f813(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_character_natural_32_code_call */
extern void T74f812(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_character_item_call */
extern void T74f811(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_character_code_call */
extern void T74f810(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_query_call */
extern void T74f767(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_xor_call */
extern void T74f809(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_else_call */
extern void T74f808(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_call */
extern void T74f807(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_not_call */
extern void T74f806(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_item_call */
extern void T74f805(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_implies_call */
extern void T74f804(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_then_call */
extern void T74f803(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_call */
extern void T74f802(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_query_call */
extern void T74f766(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_i_th_argument_pointer_call */
extern void T74f801(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_argument_count_call */
extern void T74f800(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_query_call */
extern void T74f765(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call */
extern void T74f799(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T74f799ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_same_type_call */
extern void T74f798(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generator_call */
extern void T74f797(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generating_type_call */
extern void T74f796(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_deep_twin_call */
extern void T74f795(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].force_last */
extern void T297f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_put */
extern void T297f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].force */
extern void T693f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FEATURE].fill_with */
extern void T694f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].extend */
extern void T694f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_put */
extern void T297f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_put */
extern void T297f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_item */
extern T6 T297f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].hash_position */
extern T6 T297f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].resize */
extern void T297f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_resize */
extern void T297f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].special_integer_ */
extern T0* T297f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_resize */
extern void T297f64(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].aliased_resized_area */
extern T0* T693f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE].aliased_resized_area */
extern T0* T694f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_resize */
extern void T297f63(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].aliased_resized_area */
extern T0* T698f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTANT].aliased_resized_area */
extern T0* T696f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_resize */
extern void T297f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_modulus */
extern T6 T297f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_capacity */
extern T6 T297f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_put */
extern void T297f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].force */
extern void T698f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CONSTANT].fill_with */
extern void T696f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].extend */
extern void T696f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].search_position */
extern void T297f53(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.set_polymorphic_call_argument_type_sets */
extern void T74f700(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T74f700ot1(T0* a1, T0** a2);
extern T1 T74f700ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_static_type */
extern void T274f19(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.put_last */
extern void T278f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_call_agent */
extern T1 T318f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_call_agent */
extern T1 T314f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_tuple_label */
extern T1 T318f8(GE_context* ac, T0* C);
/* ET_C_GENERATOR.dynamic_type_set_in_feature */
extern T0* T74f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.dynamic_type_set */
extern T0* T310f32(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.dynamic_type_set */
extern T0* T248f28(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.expression */
extern T0* T294f9(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.item */
extern T0* T294f12(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_name */
extern void T74f696(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T74f696ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_call_name_comment */
extern void T74f695(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T74f695ot1(T0* a1, T0** a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].force_last_new */
extern void T277f34(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].has */
extern T1 T277f25(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].replace */
extern void T276f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_MANIFEST_TUPLE.put_first */
extern void T294f28(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].force */
extern void T684f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].fill_with */
extern void T682f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].extend */
extern void T682f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.resize */
extern void T294f27(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T684f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T682f4(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.capacity */
extern T6 T294f7(GE_context* ac, T0* C);
/* ET_C_GENERATOR.fill_call_formal_arguments */
extern void T74f694(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.static_feature */
extern T0* T318f7(GE_context* ac, T0* C);
/* ET_CLASS.seeded_procedure */
extern T0* T82f124(GE_context* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.seeded_feature */
extern T0* T267f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.static_feature */
extern T0* T314f9(GE_context* ac, T0* C);
/* ET_CLASS.seeded_query */
extern T0* T82f123(GE_context* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.seeded_feature */
extern T0* T266f4(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.formal_argument */
extern T0* T74f183(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].put_last */
extern void T271f13(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_argument */
extern void T182f114(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].force_last */
extern void T276f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_capacity */
extern T6 T276f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].extendible */
extern T1 T276f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_next */
extern void T314f13(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.same_declared_signature */
extern T1 T74f128(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T74f128ot1(T0* a1);
extern T1 T74f128ot2(T0* a1);
extern T1 T74f128ot3(T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_tuple_label */
extern T1 T314f7(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_feature */
extern void T74f598(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].wipe_out */
extern void T283f11(GE_context* ac, T0* C);
/* SPECIAL [ET_EQUALITY_EXPRESSION].keep_head */
extern void T676f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_EQUALITY_EXPRESSION].set_count */
extern void T676f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].move_all_cursors_after */
extern void T283f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].set_next_cursor */
extern void T678f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].set_after */
extern void T678f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_equality_function */
extern void T74f662(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_BRACKET_SYMBOL.is_not_equal */
extern T1 T651f75(GE_context* ac, T0* C);
/* ET_SYMBOL.is_not_equal */
extern T1 T346f68(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_equality_expression */
extern void T74f720(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].force_last */
extern void T283f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].force */
extern void T677f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EQUALITY_EXPRESSION].fill_with */
extern void T676f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EQUALITY_EXPRESSION].extend */
extern void T676f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].resize */
extern void T283f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T677f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T676f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].new_capacity */
extern T6 T283f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].extendible */
extern T1 T283f7(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_target_operand */
extern void T74f736(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_equality_function_name */
extern void T74f719(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].item */
extern T0* T283f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].wipe_out */
extern void T282f11(GE_context* ac, T0* C);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].keep_head */
extern void T673f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].set_count */
extern void T673f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].move_all_cursors_after */
extern void T282f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION].set_next_cursor */
extern void T675f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION].set_after */
extern void T675f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_equality_function */
extern void T74f661(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_BRACKET_SYMBOL.is_not_tilde */
extern T1 T651f74(GE_context* ac, T0* C);
/* ET_SYMBOL.is_not_tilde */
extern T1 T346f67(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_equality_expression */
extern void T74f716(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].force_last */
extern void T282f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION].force */
extern void T674f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].fill_with */
extern void T673f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].extend */
extern void T673f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].resize */
extern void T282f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T674f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T673f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].new_capacity */
extern T6 T282f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].extendible */
extern T1 T282f7(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_object_equality_function_name */
extern void T74f715(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].item */
extern T0* T282f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].wipe_out */
extern void T281f11(GE_context* ac, T0* C);
/* SPECIAL [ET_OBJECT_TEST].keep_head */
extern void T670f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST].set_count */
extern void T670f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].move_all_cursors_after */
extern void T281f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].set_next_cursor */
extern void T672f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].set_after */
extern void T672f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_function */
extern void T74f660(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE_HASH_LIST.is_empty */
extern T1 T273f9(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_function_name */
extern void T74f713(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].item */
extern T0* T281f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].wipe_out */
extern void T284f11(GE_context* ac, T0* C);
/* SPECIAL [ET_AGENT].keep_head */
extern void T679f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT].set_count */
extern void T679f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].move_all_cursors_after */
extern void T284f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_next_cursor */
extern void T681f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_after */
extern void T681f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_agent_declaration */
extern void T74f659(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_C_GENERATOR.print_agent_closed_operand_access */
extern void T74f712(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_routine_function_access */
extern void T74f711(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_agent_creation_name */
extern void T74f710(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_agent_body_declaration */
extern void T74f708(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.put_first */
extern void T287f15(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T287f9(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.resize */
extern void T287f14(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.capacity */
extern T6 T287f8(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.wipe_out */
extern void T287f13(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_agent_open_operand_access */
extern void T74f707(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_function_name */
extern void T74f706(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.make */
extern T0* T261c108(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.tuple_keyword */
extern unsigned char ge808os11759;
extern T0* ge808ov11759;
extern T0* T81f75(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.tokens */
extern T0* T261f22(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_type_mark */
extern unsigned char ge808os11657;
extern T0* ge808ov11657;
extern T0* T81f26(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_attached_mark */
extern void T345f15(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLICIT_TYPE_MARK.make */
extern T0* T345c14(GE_context* ac);
/* ET_IDENTIFIER.set_agent_closed_operand */
extern void T182f110(GE_context* ac, T0* C, T1 a1);
/* ET_IDENTIFIER.set_agent_open_operand */
extern void T182f107(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_AGENT].item */
extern T0* T284f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_semistrict */
extern T1 T310f21(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.is_semistrict */
extern T1 T248f32(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].remove_last */
extern void T300f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].move_last_cursors_after */
extern void T300f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T707f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_after */
extern void T707f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].last */
extern T0* T300f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].is_empty */
extern T1 T300f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].force_last */
extern void T300f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].force */
extern void T706f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].fill_with */
extern void T703f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].extend */
extern void T703f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].resize */
extern void T300f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T706f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T703f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T300f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].extendible */
extern T1 T300f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_generated */
extern void T310f53(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_generated */
extern void T248f51(GE_context* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_object_allocation_functions */
extern void T74f597(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_allocation_function */
extern void T74f658(GE_context* ac, T0* C, T0* a1);
extern T1 T74f658ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_dispose_registration */
extern void T74f705(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T74f705ot1(T0* a1, T0** a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].force_last_new */
extern void T299f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].key_storage_put */
extern void T299f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].item_storage_put */
extern void T299f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].slots_put */
extern void T299f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].clashes_put */
extern void T299f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].resize */
extern void T299f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].clashes_resize */
extern void T299f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T299f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T299f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T299f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].slots_resize */
extern void T299f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T299f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T299f32(GE_context* ac, T0* C, T6 a1);
/* ET_COMPOUND.is_empty */
extern T1 T332f4(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_procedure_call_functions */
extern void T74f596(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_next */
extern void T318f14(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_polymorphic_query_call_functions */
extern void T74f595(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_manifest_string_32_function */
extern void T74f594(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_manifest_string_8_function */
extern void T74f593(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_default_declarations */
extern void T74f592(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_default_declaration */
extern void T74f642(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_object_value */
extern void T74f689(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T74f689ot1(T0* a1, T0** a2);
extern T1 T74f689ot2(T0* a1, T0** a2);
extern T1 T74f689ot3(T0* a1, T0** a2);
extern T1 T74f689ot4(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_default_attribute_value */
extern void T74f730(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.flush_to_c_file */
extern void T74f591(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T305f36(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_append */
extern void T305f45(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T305f45p1(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_types */
extern void T74f590(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_eif_type_struct */
extern void T74f641(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_type_struct */
extern void T74f640(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_struct_name */
extern void T74f681(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_struct */
extern void T74f639(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T74f639ot1(T0* a1, T0** a2);
extern T1 T74f639ot2(T0* a1, T0** a2);
extern T1 T74f639ot3(T0* a1, T0** a2);
extern T1 T74f639ot4(T0* a1, T0** a2);
extern T1 T74f639ot5(T0* a1, T0** a2);
/* ET_C_GENERATOR.print */
extern void T74f684(GE_context* ac, T0* C, T0* a1);
/* STD_FILES.put_string */
extern void T357f5(GE_context* ac, T0* C, T0* a1);
/* CONSOLE.put_string */
extern void T866f13(GE_context* ac, T0* C, T0* a1);
/* CONSOLE.console_ps */
extern void T866f16(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* STD_FILES.standard_default */
extern T0* T357f2(GE_context* ac, T0* C);
/* STD_FILES.output */
extern unsigned char ge1485os20669;
extern T0* ge1485ov20669;
extern T0* T357f3(GE_context* ac, T0* C);
/* CONSOLE.make_open_stdout */
extern T0* T866c11(GE_context* ac, T0* a1);
/* CONSOLE.set_write_mode */
extern void T866f15(GE_context* ac, T0* C);
/* CONSOLE.console_def */
extern T14 T866f6(GE_context* ac, T0* C, T6 a1);
/* CONSOLE.make_with_name */
extern void T866f14(GE_context* ac, T0* C, T0* a1);
/* CONSOLE.default_pointer */
extern T14 T866f9(GE_context* ac, T0* C);
/* CONSOLE.set_name */
extern void T866f17(GE_context* ac, T0* C, T0* a1);
/* CONSOLE.buffered_file_info */
extern T0* T866f10(GE_context* ac, T0* C);
/* STRING_8.out */
extern T0* T17f18(GE_context* ac, T0* C);
/* ET_C_GENERATOR.io */
extern unsigned char ge1413os44;
extern T0* ge1413ov44;
extern T0* T74f215(GE_context* ac, T0* C);
/* STD_FILES.set_output_default */
extern void T357f6(GE_context* ac, T0* C);
/* STD_FILES.default_create */
extern T0* T357c4(GE_context* ac);
/* ET_C_GENERATOR.print_struct_name */
extern void T74f676(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].has_cycle */
extern T1 T312f8(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].sort */
extern void T312f15(GE_context* ac, T0* C);
/* ARRAY [BOOLEAN].item */
extern T1 T719f4(GE_context* ac, T0* C, T6 a1);
/* ARRAY [BOOLEAN].put */
extern void T719f6(GE_context* ac, T0* C, T1 a1, T6 a2);
/* ARRAY [BOOLEAN].make_filled */
extern T0* T719c5(GE_context* ac, T1 a1, T6 a2, T6 a3);
/* ARRAY [BOOLEAN].make_filled_area */
extern void T719f7(GE_context* ac, T0* C, T1 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].put_last */
extern void T234f19(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].replace */
extern void T718f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].item */
extern T0* T718f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].make */
extern T0* T234c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T234f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T234f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T643c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].cloned_object */
extern T0* T718f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].twin */
extern T0* T718f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].copy */
extern void T718f15(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].resized_area */
extern T0* T1379f4(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].copy_data */
extern void T1379f10(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].force */
extern void T1379f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].extend */
extern void T1379f11(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].move_data */
extern void T1379f13(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].overlapping_move */
extern void T1379f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].fill_with */
extern void T1379f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].non_overlapping_move */
extern void T1379f15(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].make_empty */
extern T0* T1379c6(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].new_cursor */
extern T0* T718f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T1381c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].set_internal_cursor */
extern void T718f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].valid_cursor */
extern T1 T718f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].move_all_cursors_after */
extern void T718f17(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].set_next_cursor */
extern void T1381f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].set_after */
extern void T1381f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].cloned_object */
extern T0* T272f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].twin */
extern T0* T272f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].copy */
extern void T272f25(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_cursor */
extern T0* T272f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].make */
extern T0* T658c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].set_internal_cursor */
extern void T272f22(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].valid_cursor */
extern T1 T272f13(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].reset */
extern void T312f19(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_boxed_type_definition */
extern void T74f638(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_type_definition */
extern void T74f637(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_function */
extern void T74f636(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_type_id_access */
extern void T74f679(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_type_declaration */
extern void T74f677(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].force_relation */
extern void T312f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].put_indexed_relation */
extern void T312f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_LINKABLE [INTEGER_32].put_right */
extern void T555f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [INTEGER_32].make */
extern T0* T555c3(GE_context* ac, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].count */
extern T6 T312f10(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].index_of */
extern T6 T312f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].found_item */
extern T6 T372f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_item */
extern T6 T372f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].found */
extern T1 T372f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].search */
extern void T372f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].search_position */
extern void T372f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].hash_position */
extern T6 T372f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T372f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T372f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_item */
extern T6 T372f22(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_type_definition */
extern void T74f635(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_pointer_type_definition */
extern void T74f634(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_64_type_definition */
extern void T74f633(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_32_type_definition */
extern void T74f632(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_64_type_definition */
extern void T74f631(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_32_type_definition */
extern void T74f630(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_16_type_definition */
extern void T74f629(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_8_type_definition */
extern void T74f628(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_64_type_definition */
extern void T74f627(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_32_type_definition */
extern void T74f626(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_16_type_definition */
extern void T74f625(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_8_type_definition */
extern void T74f624(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_32_type_definition */
extern void T74f623(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_8_type_definition */
extern void T74f622(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boolean_type_definition */
extern void T74f621(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].force */
extern void T312f13(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].put */
extern void T312f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].put_last */
extern void T718f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].force */
extern void T1380f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].put_new */
extern void T372f38(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_put */
extern void T372f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_put */
extern void T372f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_put */
extern void T372f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_put */
extern void T372f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].unset_found_item */
extern void T372f42(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].resize */
extern void T718f12(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].aliased_resized_area */
extern T0* T1380f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].aliased_resized_area */
extern T0* T1379f5(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].resize */
extern void T372f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_resize */
extern void T372f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T372f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T372f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T372f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_resize */
extern void T372f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T372f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].capacity */
extern T6 T312f7(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].has */
extern T1 T312f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].has */
extern T1 T372f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].make_default */
extern T0* T312c12(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].make */
extern void T312f16(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T718c11(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T1380f1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].default_create */
extern T0* T1380c3(GE_context* ac);
/* DS_ARRAYED_LIST [INTEGER_32].make */
extern T0* T272c15(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_map */
extern T0* T372c35(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T372f40(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T372f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T372f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T372f29(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].make */
extern T0* T722c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_slots */
extern void T372f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_clashes */
extern void T372f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_key_storage */
extern void T372f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_item_storage */
extern void T372f56(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_aliased_double_type_definition */
extern void T74f620(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.double_class_name */
extern unsigned char ge808os11345;
extern T0* ge808ov11345;
extern T0* T81f25(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_real_type_definition */
extern void T74f619(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.real_class_name */
extern unsigned char ge808os11372;
extern T0* ge808ov11372;
extern T0* T81f24(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_natural_type_definition */
extern void T74f618(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.natural_class_name */
extern unsigned char ge808os11362;
extern T0* ge808ov11362;
extern T0* T81f23(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_integer_type_definition */
extern void T74f617(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.integer_class_name */
extern unsigned char ge808os11351;
extern T0* ge808ov11351;
extern T0* T81f22(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_wide_character_type_definition */
extern void T74f616(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.wide_character_class_name */
extern unsigned char ge808os11385;
extern T0* ge808ov11385;
extern T0* T81f21(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_character_type_definition */
extern void T74f615(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.character_class_name */
extern unsigned char ge808os11340;
extern T0* ge808ov11340;
extern T0* T81f20(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_start_extern_c */
extern void T74f589(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_runtime_header_file */
extern void T74f588(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].replace */
extern void T301f49(GE_context* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_put */
extern void T301f60(GE_context* ac, T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].search_position */
extern void T301f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].hash_position */
extern T6 T301f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_item */
extern T6 T301f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item */
extern T1 T301f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].force */
extern void T301f48(GE_context* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_put */
extern void T301f64(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_put */
extern void T301f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_put */
extern void T301f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].resize */
extern void T301f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_resize */
extern void T301f71(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].special_integer_ */
extern T0* T301f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_resize */
extern void T301f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_resize */
extern void T301f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_resize */
extern void T301f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_modulus */
extern T6 T301f38(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_capacity */
extern T6 T301f22(GE_context* ac, T0* C, T6 a1);
/* STRING_8.same_string */
extern T1 T17f8(GE_context* ac, T0* C, T0* a1);
/* STRING_8.same_characters */
extern T1 T17f14(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].has */
extern T1 T301f34(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.exception_trace_mode */
extern T1 T74f226(GE_context* ac, T0* C);
/* ET_C_GENERATOR.trace_mode */
extern T1 T74f219(GE_context* ac, T0* C);
/* ET_C_GENERATOR.generate_ids */
extern void T74f587(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_id */
extern void T310f56(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_id */
extern void T248f56(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.open_cpp_file */
extern void T74f586(GE_context* ac, T0* C);
/* ET_C_GENERATOR.open_c_file */
extern void T74f585(GE_context* ac, T0* C);
/* ET_C_GENERATOR.set_split_threshold */
extern void T74f577(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.set_split_mode */
extern void T74f576(GE_context* ac, T0* C, T1 a1);
/* GEC.no_split */
extern T1 T22f35(GE_context* ac, T0* C);
/* ET_C_GENERATOR.set_finalize_mode */
extern void T74f575(GE_context* ac, T0* C, T1 a1);
/* GEC.is_finalize */
extern T1 T22f23(GE_context* ac, T0* C);
/* ET_C_GENERATOR.set_use_boehm_gc */
extern void T74f574(GE_context* ac, T0* C, T1 a1);
/* GEC.use_boehm_gc */
extern T1 T22f34(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.parameter */
extern T0* T43f15(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].last */
extern T0* T136f19(GE_context* ac, T0* C);
/* ET_C_GENERATOR.make */
extern T0* T74c573(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.make_external_regexps */
extern void T74f580(GE_context* ac, T0* C);
/* ET_C_GENERATOR.make_rescue_data */
extern void T74f579(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].set_equality_tester */
extern void T207f41(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.identifier_tester */
extern unsigned char ge859os9375;
extern T0* ge859ov9375;
extern T0* T74f180(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TESTER.default_create */
extern T0* T302c2(GE_context* ac);
/* DS_HASH_SET [ET_IDENTIFIER].make */
extern T0* T207c37(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].set_internal_cursor */
extern void T207f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_cursor */
extern T0* T207f36(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].make */
extern T0* T631c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_slots */
extern void T207f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_clashes */
extern void T207f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_key_storage */
extern void T207f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_item_storage */
extern void T207f45(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].make */
extern T0* T213f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].make_empty */
extern T0* T212c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].default_create */
extern T0* T213c3(GE_context* ac);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].set_key_equality_tester */
extern void T301f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make */
extern T0* T301c43(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_with_equality_testers */
extern void T301f51(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_sparse_container */
extern void T301f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].set_internal_cursor */
extern void T301f76(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_cursor */
extern T0* T301f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].make */
extern T0* T708c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_slots */
extern void T301f75(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_clashes */
extern void T301f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_key_storage */
extern void T301f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_item_storage */
extern void T301f72(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [STRING_8].default_create */
extern T0* T58c2(GE_context* ac);
/* DS_HASH_SET [STRING_8].set_equality_tester */
extern void T76f40(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].make */
extern void T76f39(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make */
extern T0* T76c39(GE_context* ac, T6 a1);
/* DS_HASH_SET [STRING_8].set_internal_cursor */
extern void T76f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].new_cursor */
extern T0* T76f23(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].make */
extern T0* T369c9(GE_context* ac, T0* a1);
/* DS_HASH_SET [STRING_8].make_slots */
extern void T76f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_modulus */
extern T6 T76f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_clashes */
extern void T76f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_key_storage */
extern void T76f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_item_storage */
extern void T76f50(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].make */
extern T0* T300c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].set_internal_cursor */
extern void T300f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T300f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].make */
extern T0* T707c5(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_map */
extern T0* T299c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T299f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T299f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T299f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T299f30(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make */
extern T0* T705c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_slots */
extern void T299f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_clashes */
extern void T299f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_key_storage */
extern void T299f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_item_storage */
extern void T299f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_map */
extern T0* T298c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_with_equality_testers */
extern void T298f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_sparse_container */
extern void T298f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].set_internal_cursor */
extern void T298f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].new_cursor */
extern T0* T298f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make */
extern T0* T699c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_slots */
extern void T298f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].new_modulus */
extern T6 T298f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_clashes */
extern void T298f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_key_storage */
extern void T298f56(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].make */
extern T0* T702f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].make_empty */
extern T0* T700c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].default_create */
extern T0* T702c3(GE_context* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_item_storage */
extern void T298f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_map */
extern T0* T297c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_with_equality_testers */
extern void T297f44(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_sparse_container */
extern void T297f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].set_internal_cursor */
extern void T297f70(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T297f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T695c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_slots */
extern void T297f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_clashes */
extern void T297f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_key_storage */
extern void T297f67(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].make */
extern T0* T693f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].make_empty */
extern T0* T694c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].default_create */
extern T0* T693c3(GE_context* ac);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_item_storage */
extern void T297f66(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].make */
extern T0* T698f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CONSTANT].make_empty */
extern T0* T696c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].default_create */
extern T0* T698c3(GE_context* ac);
/* DS_HASH_SET [ET_FEATURE].make */
extern T0* T296c30(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_FEATURE].set_internal_cursor */
extern void T296f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].new_cursor */
extern T0* T296f19(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].make */
extern T0* T691c6(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_FEATURE].make_slots */
extern void T296f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_modulus */
extern T6 T296f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_clashes */
extern void T296f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_key_storage */
extern void T296f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_item_storage */
extern void T296f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T295c35(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].set_internal_cursor */
extern void T295f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_cursor */
extern T0* T295f33(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T688c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_slots */
extern void T295f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_modulus */
extern T6 T295f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_clashes */
extern void T295f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_key_storage */
extern void T295f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_item_storage */
extern void T295f39(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T690f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make_empty */
extern T0* T689c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].default_create */
extern T0* T690c3(GE_context* ac);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern T0* T294c26(GE_context* ac, T6 a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern void T294f26p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].make */
extern T0* T684f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].make_empty */
extern T0* T682c5(GE_context* ac, T6 a1);
/* ET_MANIFEST_TUPLE.tokens */
extern T0* T294f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T293c8(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].set_internal_cursor */
extern void T293f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].new_cursor */
extern T0* T293f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T687c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T686f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].make_empty */
extern T0* T685c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].default_create */
extern T0* T686c3(GE_context* ac);
/* ET_UNQUALIFIED_CALL_EXPRESSION.make */
extern T0* T292c21(GE_context* ac, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL_INSTRUCTION.make */
extern T0* T288c9(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_INSTRUCTION.make_qualified_call */
extern void T288f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T287c12(GE_context* ac, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T287f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_parenthesis_symbol */
extern unsigned char ge808os11695;
extern T0* ge808ov11695;
extern T0* T81f227(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_parenthesis */
extern T0* T346c74(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_parenthesis_symbol */
extern unsigned char ge808os11690;
extern T0* ge808ov11690;
extern T0* T81f226(GE_context* ac, T0* C);
/* ET_SYMBOL.make_left_parenthesis */
extern T0* T346c73(GE_context* ac);
/* ET_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T287f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_AGENT].make */
extern T0* T284c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].set_internal_cursor */
extern void T284f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].new_cursor */
extern T0* T284f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].make */
extern T0* T681c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].make */
extern T0* T680f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT].make_empty */
extern T0* T679c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].default_create */
extern T0* T680c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].make */
extern T0* T283c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].set_internal_cursor */
extern void T283f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].new_cursor */
extern T0* T283f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].make */
extern T0* T678c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].make */
extern T0* T677f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_EQUALITY_EXPRESSION].make_empty */
extern T0* T676c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].default_create */
extern T0* T677c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T282c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].set_internal_cursor */
extern void T282f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].new_cursor */
extern T0* T282f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T675c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T674f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].make_empty */
extern T0* T673c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION].default_create */
extern T0* T674c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].make */
extern T0* T281c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].set_internal_cursor */
extern void T281f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].new_cursor */
extern T0* T281f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].make */
extern T0* T672c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].make */
extern T0* T671f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST].make_empty */
extern T0* T670c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].default_create */
extern T0* T671c3(GE_context* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_map */
extern T0* T280c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T280f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T280f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T280f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T280f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make */
extern T0* T668c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_slots */
extern void T280f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_clashes */
extern void T280f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_key_storage */
extern void T280f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_item_storage */
extern void T280f67(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T666f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make_empty */
extern T0* T665c5(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make */
extern T0* T279c35(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T279f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T279f17(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T667c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_slots */
extern void T279f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_clashes */
extern void T279f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_key_storage */
extern void T279f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_item_storage */
extern void T279f40(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.make_with_capacity */
extern T0* T278c8(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_map */
extern T0* T277c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_with_equality_testers */
extern void T277f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_sparse_container */
extern void T277f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].set_internal_cursor */
extern void T277f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_cursor */
extern T0* T277f30(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].make */
extern T0* T664c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_slots */
extern void T277f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_clashes */
extern void T277f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_key_storage */
extern void T277f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_item_storage */
extern void T277f55(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].make */
extern T0* T276c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].set_internal_cursor */
extern void T276f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_cursor */
extern T0* T276f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].make */
extern T0* T662c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].make */
extern T0* T661f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION].make_empty */
extern T0* T660c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].default_create */
extern T0* T661c3(GE_context* ac);
/* DS_ARRAYED_STACK [ET_EXPRESSION].make */
extern T0* T275c8(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].make */
extern T0* T271c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].set_internal_cursor */
extern void T271f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_cursor */
extern T0* T271f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].make */
extern T0* T657c3(GE_context* ac, T0* a1);
/* KL_STRING_OUTPUT_STREAM.make */
extern T0* T270c4(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.null_output_stream */
extern unsigned char ge258os3283;
extern T0* ge258ov3283;
extern T0* T74f148(GE_context* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.make */
extern T0* T268c3(GE_context* ac, T0* a1);
/* ET_CLASS.lower_name */
extern T0* T82f60(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_class */
extern unsigned char ge808os12239;
extern T0* ge808ov12239;
extern T0* T81f1(GE_context* ac, T0* C);
/* ET_CLASS.set_implementation_error */
extern void T82f220(GE_context* ac, T0* C);
/* ET_CLASS.set_implementation_checked */
extern void T82f219(GE_context* ac, T0* C);
/* ET_CLASS.set_interface_error */
extern void T82f218(GE_context* ac, T0* C);
/* ET_CLASS.set_interface_checked */
extern void T82f217(GE_context* ac, T0* C);
/* ET_CLASS.set_flattening_error */
extern void T82f216(GE_context* ac, T0* C);
/* ET_CLASS.set_features_flattened */
extern void T82f215(GE_context* ac, T0* C);
/* ET_CLASS.set_ancestors_error */
extern void T82f214(GE_context* ac, T0* C);
/* ET_CLASS.set_ancestors_built */
extern void T82f213(GE_context* ac, T0* C);
/* ET_CLASS.set_syntax_error */
extern void T82f212(GE_context* ac, T0* C);
/* ET_CLASS.set_parsed */
extern void T82f211(GE_context* ac, T0* C);
/* ET_CLASS.set_group */
extern void T82f210(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.unknown_group */
extern unsigned char ge808os12243;
extern T0* ge808ov12243;
extern T0* T81f2(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.make */
extern T0* T394c30(GE_context* ac);
/* ET_CLASS.make_unknown */
extern T0* T82c209(GE_context* ac);
/* ET_CLASS.make */
extern void T82f221(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.make */
extern T0* T82c221(GE_context* ac, T0* a1);
/* ET_CLASS_CODES.class_code */
extern T8 T398f1(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].found_item */
extern T8 T766f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_item */
extern T8 T766f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].found */
extern T1 T766f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].search */
extern void T766f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].search_position */
extern void T766f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].hash_position */
extern T6 T766f23(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_NAME_TESTER.test */
extern T1 T465f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.same_class_name */
extern T1 T182f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_item */
extern T0* T766f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_item */
extern T6 T766f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_item */
extern T6 T766f26(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS_CODES.codes_by_name */
extern unsigned char ge787os21480;
extern T0* ge787ov21480;
extern T0* T398f2(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.iteration_cursor_class_name */
extern unsigned char ge808os11359;
extern T0* ge808ov11359;
extern T0* T81f132(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.iterable_class_name */
extern unsigned char ge808os11358;
extern T0* ge808ov11358;
extern T0* T81f131(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disposable_class_name */
extern unsigned char ge808os11344;
extern T0* ge808ov11344;
extern T0* T81f130(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.system_object_class_name */
extern unsigned char ge808os11380;
extern T0* ge808ov11380;
extern T0* T81f129(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.any_class_name */
extern unsigned char ge808os11335;
extern T0* ge808ov11335;
extern T0* T81f128(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.array_class_name */
extern unsigned char ge808os11337;
extern T0* ge808ov11337;
extern T0* T81f127(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.typed_pointer_class_name */
extern unsigned char ge808os11384;
extern T0* ge808ov11384;
extern T0* T81f126(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_class_name */
extern unsigned char ge808os11383;
extern T0* ge808ov11383;
extern T0* T81f125(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.special_class_name */
extern unsigned char ge808os11376;
extern T0* ge808ov11376;
extern T0* T81f124(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.routine_class_name */
extern unsigned char ge808os11375;
extern T0* ge808ov11375;
extern T0* T81f123(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.procedure_class_name */
extern unsigned char ge808os11371;
extern T0* ge808ov11371;
extern T0* T81f122(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.predicate_class_name */
extern unsigned char ge808os11370;
extern T0* ge808ov11370;
extern T0* T81f121(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.function_class_name */
extern unsigned char ge808os11349;
extern T0* ge808ov11349;
extern T0* T81f120(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.tuple_class_name */
extern unsigned char ge808os11382;
extern T0* ge808ov11382;
extern T0* T81f119(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_class_name */
extern unsigned char ge808os11369;
extern T0* ge808ov11369;
extern T0* T81f118(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_class_name */
extern unsigned char ge808os11374;
extern T0* ge808ov11374;
extern T0* T81f117(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_class_name */
extern unsigned char ge808os11373;
extern T0* ge808ov11373;
extern T0* T81f116(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_class_name */
extern unsigned char ge808os11366;
extern T0* ge808ov11366;
extern T0* T81f115(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_class_name */
extern unsigned char ge808os11365;
extern T0* ge808ov11365;
extern T0* T81f114(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_class_name */
extern unsigned char ge808os11364;
extern T0* ge808ov11364;
extern T0* T81f113(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_class_name */
extern unsigned char ge808os11363;
extern T0* ge808ov11363;
extern T0* T81f112(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_class_name */
extern unsigned char ge808os11355;
extern T0* ge808ov11355;
extern T0* T81f111(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_class_name */
extern unsigned char ge808os11354;
extern T0* ge808ov11354;
extern T0* T81f110(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_class_name */
extern unsigned char ge808os11353;
extern T0* ge808ov11353;
extern T0* T81f109(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_class_name */
extern unsigned char ge808os11352;
extern T0* ge808ov11352;
extern T0* T81f108(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_class_name */
extern unsigned char ge808os11342;
extern T0* ge808ov11342;
extern T0* T81f107(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_class_name */
extern unsigned char ge808os11341;
extern T0* ge808ov11341;
extern T0* T81f106(GE_context* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].force_last */
extern void T766f37(GE_context* ac, T0* C, T8 a1, T0* a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_put */
extern void T766f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].force */
extern void T639f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].fill_with */
extern void T640f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].extend */
extern void T640f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_put */
extern void T766f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_put */
extern void T766f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].resize */
extern void T766f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_resize */
extern void T766f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].special_integer_ */
extern T0* T766f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_resize */
extern void T766f49(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].aliased_resized_area */
extern T0* T639f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME].aliased_resized_area */
extern T0* T640f3(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_resize */
extern void T766f48(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].aliased_resized_area */
extern T0* T1389f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [NATURAL_8].aliased_resized_area */
extern T0* T542f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_resize */
extern void T766f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_modulus */
extern T6 T766f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_capacity */
extern T6 T766f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_put */
extern void T766f41(GE_context* ac, T0* C, T8 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [NATURAL_8].force */
extern void T1389f4(GE_context* ac, T0* C, T0* a1, T8 a2, T6 a3);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].unset_found_item */
extern void T766f40(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_class_name */
extern unsigned char ge808os11339;
extern T0* ge808ov11339;
extern T0* T81f105(GE_context* ac, T0* C);
/* ET_CLASS_CODES.tokens */
extern T0* T398f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].set_key_equality_tester */
extern void T766f36(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_CODES.class_name_tester */
extern unsigned char ge857os3714;
extern T0* ge857ov3714;
extern T0* T398f4(GE_context* ac, T0* C);
/* ET_CLASS_NAME_TESTER.default_create */
extern T0* T465c2(GE_context* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_map */
extern T0* T766c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_with_equality_testers */
extern void T766f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_sparse_container */
extern void T766f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].set_internal_cursor */
extern void T766f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_cursor */
extern T0* T766f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME].make */
extern T0* T1390c4(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_slots */
extern void T766f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_clashes */
extern void T766f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_key_storage */
extern void T766f52(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].make */
extern T0* T639f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME].make_empty */
extern T0* T640c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].default_create */
extern T0* T639c3(GE_context* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_item_storage */
extern void T766f51(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].make */
extern T0* T1389f2(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].default_create */
extern T0* T1389c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.class_keyword */
extern unsigned char ge808os11710;
extern T0* ge808ov11710;
extern T0* T81f73(GE_context* ac, T0* C);
/* ET_KEYWORD.make_class */
extern T0* T397c36(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_procedures */
extern unsigned char ge808os12237;
extern T0* ge808ov12237;
extern T0* T81f72(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.make_with_capacity */
extern T0* T267c8(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].make */
extern T0* T862f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_PROCEDURE].make_empty */
extern T0* T861c5(GE_context* ac, T6 a1);
/* ET_PROCEDURE_LIST.fixed_array */
extern unsigned char ge691os12622;
extern T0* ge691ov12622;
extern T0* T267f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].default_create */
extern T0* T862c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_queries */
extern unsigned char ge808os12236;
extern T0* ge808ov12236;
extern T0* T81f71(GE_context* ac, T0* C);
/* ET_QUERY_LIST.make_with_capacity */
extern T0* T266c8(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].make */
extern T0* T860f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_QUERY].make_empty */
extern T0* T858c5(GE_context* ac, T6 a1);
/* ET_QUERY_LIST.fixed_array */
extern unsigned char ge693os12622;
extern T0* ge693ov12622;
extern T0* T266f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_QUERY].default_create */
extern T0* T860c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_ancestors */
extern unsigned char ge808os12233;
extern T0* ge808ov12233;
extern T0* T81f70(GE_context* ac, T0* C);
/* ET_BASE_TYPE_LIST.make_with_capacity */
extern T0* T396c7(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].make */
extern T0* T869f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].make_empty */
extern T0* T868c5(GE_context* ac, T6 a1);
/* ET_BASE_TYPE_LIST.fixed_array */
extern unsigned char ge870os7546;
extern T0* ge870ov7546;
extern T0* T396f4(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].default_create */
extern T0* T869c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.unknown_class_name */
extern unsigned char ge808os11386;
extern T0* ge808ov11386;
extern T0* T81f69(GE_context* ac, T0* C);
/* ET_CLASS.tokens */
extern T0* T82f80(GE_context* ac, T0* C);
/* GEC.tokens */
extern T0* T22f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile */
extern void T71f68(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile_system */
extern void T71f71(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.build_dynamic_type_sets */
extern void T71f75(GE_context* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T238f17(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T79f125(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_validity */
extern void T79f128(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_call_validity */
extern void T79f133(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_target_validity */
extern void T79f135(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f135ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.seeded_dynamic_feature */
extern T0* T318f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.seeded_dynamic_feature */
extern T0* T314f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_catcall_error */
extern void T79f139(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_catcall_error */
extern void T36f189(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info_message */
extern void T36f195(GE_context* ac, T0* C, T0* a1);
/* KL_STDOUT_FILE.put_line */
extern void T132f18(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_eiffel_error */
extern void T36f194(GE_context* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_catcall_error */
extern void T77f199(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info_message */
extern void T77f198(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_eiffel_error */
extern void T77f194(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.append_catcall_error_message */
extern void T79f140(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.position */
extern T0* T318f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.position */
extern T0* T314f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.string_ */
extern T0* T79f52(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.shared_error_message */
extern unsigned char ge1004os10171;
extern T0* ge1004ov10171;
extern T0* T79f51(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_feature_dynamic_type_sets */
extern void T79f127(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.wipe_out */
extern void T269f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].wipe_out */
extern void T372f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T372f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T372f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T372f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T372f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T372f41(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T722f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].set_after */
extern void T722f7(GE_context* ac, T0* C);
/* DS_CELL [INTEGER_32].put */
extern void T371f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_built */
extern void T310f59(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_built */
extern void T248f58(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_validity */
extern void T79f131(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE.wipe_out */
extern void T386f10(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].wipe_out */
extern void T175f50(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].slots_wipe_out */
extern void T175f59(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].clashes_wipe_out */
extern void T175f58(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].key_storage_wipe_out */
extern void T175f57(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].item_storage_wipe_out */
extern void T175f56(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].unset_found_item */
extern void T175f45(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].move_all_cursors_after */
extern void T175f55(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_next_cursor */
extern void T611f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_after */
extern void T611f10(GE_context* ac, T0* C);
/* ET_ACROSS_CURSOR_SCOPE.wipe_out */
extern void T385f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].wipe_out */
extern void T757f11(GE_context* ac, T0* C);
/* SPECIAL [ET_ACROSS_COMPONENT].keep_head */
extern void T755f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACROSS_COMPONENT].set_count */
extern void T755f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].move_all_cursors_after */
extern void T757f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT].set_next_cursor */
extern void T1386f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT].set_after */
extern void T1386f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].wipe_out */
extern void T384f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].slots_wipe_out */
extern void T384f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].clashes_wipe_out */
extern void T384f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].key_storage_wipe_out */
extern void T384f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_storage_wipe_out */
extern void T384f50(GE_context* ac, T0* C);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].keep_head */
extern void T741f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].set_count */
extern void T741f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].unset_found_item */
extern void T384f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].move_all_cursors_after */
extern void T384f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].set_next_cursor */
extern void T752f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].set_after */
extern void T752f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].forth */
extern void T384f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].cursor_forth */
extern void T384f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].add_traversing_cursor */
extern void T384f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].set_position */
extern void T752f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].remove_traversing_cursor */
extern void T384f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].clashes_item */
extern T6 T384f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_for_iteration */
extern T0* T384f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].cursor_item */
extern T0* T384f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_storage_item */
extern T0* T384f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].after */
extern T1 T384f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].cursor_after */
extern T1 T384f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].after */
extern T1 T752f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].start */
extern void T384f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].cursor_start */
extern void T384f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].cursor_off */
extern T1 T384f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].off */
extern T1 T752f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].is_empty */
extern T1 T384f27(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.wipe_out */
extern void T382f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].wipe_out */
extern void T751f11(GE_context* ac, T0* C);
/* SPECIAL [ET_NAMED_OBJECT_TEST].keep_head */
extern void T749f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_OBJECT_TEST].set_count */
extern void T749f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T751f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T1385f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].set_after */
extern void T1385f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].wipe_out */
extern void T381f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_wipe_out */
extern void T381f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_wipe_out */
extern void T381f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_wipe_out */
extern void T381f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_wipe_out */
extern void T381f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].unset_found_item */
extern void T381f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T381f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T745f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_after */
extern void T745f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].forth */
extern void T381f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_forth */
extern void T381f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].add_traversing_cursor */
extern void T381f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_position */
extern void T745f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].remove_traversing_cursor */
extern void T381f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_item */
extern T6 T381f33(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_context */
extern void T79f129(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.reset */
extern void T380f53(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.wipe_out */
extern void T380f55(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].keep_head */
extern void T744f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].keep_head */
extern void T263f7(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE].set_count */
extern void T263f9(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.fixed_array */
extern unsigned char ge899os7546;
extern T0* ge899ov7546;
extern T0* T380f4(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].default_create */
extern T0* T744c3(GE_context* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tokens */
extern T0* T79f99(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].force_last */
extern void T379f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].force */
extern void T742f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].fill_with */
extern void T741f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].extend */
extern void T741f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].resize */
extern void T379f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T742f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T741f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_capacity */
extern T6 T379f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].extendible */
extern T1 T379f8(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_for_iteration */
extern T0* T381f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_item */
extern T0* T381f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_item */
extern T0* T381f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].after */
extern T1 T381f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_after */
extern T1 T381f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].after */
extern T1 T745f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].start */
extern void T381f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_start */
extern void T381f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_off */
extern T1 T381f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].off */
extern T1 T745f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].is_empty */
extern T1 T381f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_preconditions_attachment_scope */
extern void T79f134(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_attachment_scope */
extern void T79f138(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].force_last */
extern void T388f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].force */
extern void T760f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ATTACHMENT_SCOPE].fill_with */
extern void T759f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ATTACHMENT_SCOPE].extend */
extern void T759f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].resize */
extern void T388f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T760f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T759f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].new_capacity */
extern T6 T388f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].extendible */
extern T1 T388f8(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].forth */
extern void T390f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].cursor_forth */
extern void T390f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].add_traversing_cursor */
extern void T390f58(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_PRECONDITIONS, ET_FEATURE].set_next_cursor */
extern void T762f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_PRECONDITIONS, ET_FEATURE].set_position */
extern void T762f10(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].remove_traversing_cursor */
extern void T390f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_PRECONDITIONS, ET_FEATURE].set_after */
extern void T762f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].clashes_item */
extern T6 T390f28(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE.merge_scope */
extern void T386f12(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].forth */
extern void T175f54(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_forth */
extern void T175f64(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].add_traversing_cursor */
extern void T175f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_position */
extern void T611f14(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].remove_traversing_cursor */
extern void T175f70(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].clashes_item */
extern T6 T175f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].remove */
extern void T175f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].remove_position */
extern void T175f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_storage_put */
extern void T175f76(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].item_storage_put */
extern void T175f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].key_storage_keep_head */
extern void T175f75(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_keep_head */
extern void T175f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].clashes_put */
extern void T175f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].slots_put */
extern void T175f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].move_cursors_forth */
extern void T175f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].internal_set_key_equality_tester */
extern void T175f72(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].key_equality_tester */
extern T0* T175f30(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].slots_item */
extern T6 T175f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].hash_position */
extern T6 T175f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_storage_item */
extern T6 T175f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_item */
extern T6 T175f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].search_position */
extern void T175f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].has */
extern T1 T175f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_for_iteration */
extern T6 T175f27(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_item */
extern T6 T175f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].after */
extern T1 T175f26(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_after */
extern T1 T175f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].after */
extern T1 T611f7(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].start */
extern void T175f52(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_start */
extern void T175f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].cursor_off */
extern T1 T175f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].off */
extern T1 T611f8(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].is_empty */
extern T1 T175f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].is_last */
extern T1 T390f25(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].cursor_is_last */
extern T1 T390f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].is_empty */
extern T1 T390f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].item_for_iteration */
extern T0* T390f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].cursor_item */
extern T0* T390f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].item_storage_item */
extern T0* T390f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].start */
extern void T390f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].cursor_start */
extern void T390f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].cursor_off */
extern T1 T390f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_PRECONDITIONS, ET_FEATURE].off */
extern T1 T762f5(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.copy_scope */
extern void T386f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].append_last */
extern void T175f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].extend_last */
extern void T175f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].forth */
extern void T611f13(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].put_last */
extern void T175f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].compress */
extern void T175f77(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].move_all_cursors */
extern void T175f78(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET_CURSOR [INTEGER_32].item */
extern T6 T611f4(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].start */
extern void T611f12(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].new_cursor */
extern T0* T175f20(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].make */
extern T0* T611c9(GE_context* ac, T0* a1);
/* DS_HASH_SET [INTEGER_32].resize */
extern void T175f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].clashes_resize */
extern void T175f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].special_integer_ */
extern T0* T175f37(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].key_storage_resize */
extern void T175f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_resize */
extern void T175f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].slots_resize */
extern void T175f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].new_modulus */
extern T6 T175f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].new_capacity */
extern T6 T175f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].extendible */
extern T1 T175f33(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_attachment_scope */
extern T0* T79f50(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].remove_last */
extern void T388f13(GE_context* ac, T0* C);
/* SPECIAL [ET_ATTACHMENT_SCOPE].keep_head */
extern void T759f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ATTACHMENT_SCOPE].set_count */
extern void T759f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].move_last_cursors_after */
extern void T388f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].set_next_cursor */
extern void T761f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].set_after */
extern void T761f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].last */
extern T0* T388f6(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.make */
extern T0* T386c9(GE_context* ac);
/* DS_HASH_SET [INTEGER_32].make */
extern T0* T175c38(GE_context* ac, T6 a1);
/* DS_HASH_SET [INTEGER_32].set_internal_cursor */
extern void T175f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].make_slots */
extern void T175f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_clashes */
extern void T175f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_key_storage */
extern void T175f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_item_storage */
extern void T175f41(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].is_empty */
extern T1 T388f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_assertions_attachment_scope */
extern void T79f137(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.build_scope */
extern void T387f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.assertion */
extern T0* T389f7(GE_context* ac, T0* C, T6 a1);
/* ET_PRECONDITIONS.item */
extern T0* T389f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].first */
extern T0* T390f20(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].force_last */
extern void T390f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].key_storage_put */
extern void T390f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].slots_put */
extern void T390f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].clashes_put */
extern void T390f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].slots_item */
extern T6 T390f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].hash_position */
extern T6 T390f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].resize */
extern void T390f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].clashes_resize */
extern void T390f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].special_integer_ */
extern T0* T390f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].key_storage_resize */
extern void T390f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].item_storage_resize */
extern void T390f54(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].aliased_resized_area */
extern T0* T765f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PRECONDITIONS].aliased_resized_area */
extern T0* T763f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].key_storage_item */
extern T0* T390f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].slots_resize */
extern void T390f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].new_modulus */
extern T6 T390f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].new_capacity */
extern T6 T390f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].item_storage_put */
extern void T390f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].force */
extern void T765f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].fill_with */
extern void T763f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].extend */
extern void T763f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].search_position */
extern void T390f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].unset_found_item */
extern void T390f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.add_precursors_with_preconditions_recursive */
extern void T79f136(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_LIST.item */
extern T0* T392f3(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].make_map */
extern T0* T390c38(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].make_with_equality_testers */
extern void T390f42(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].make_sparse_container */
extern void T390f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].set_internal_cursor */
extern void T390f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].new_cursor */
extern T0* T390f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_PRECONDITIONS, ET_FEATURE].make */
extern T0* T762c7(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].make_slots */
extern void T390f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].make_clashes */
extern void T390f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].make_key_storage */
extern void T390f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_PRECONDITIONS, ET_FEATURE].make_item_storage */
extern void T390f59(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].make */
extern T0* T765f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_PRECONDITIONS].make_empty */
extern T0* T763c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].default_create */
extern T0* T765c3(GE_context* ac);
/* ET_FEATURE_CHECKER.check_preconditions_validity */
extern void T370f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECONDITIONS.set_validity_error */
extern void T389f20(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.set_validity_checked */
extern void T389f19(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.free_context */
extern void T370f61(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.tokens */
extern T0* T370f43(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.keep_object_tests */
extern void T382f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].keep_first */
extern void T751f12(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.current_universe */
extern T0* T370f41(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.build_scope */
extern void T383f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwbe0a_error */
extern void T36f199(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_validity_error */
extern void T36f192(GE_context* ac, T0* C, T0* a1);
/* KL_STANDARD_FILES.output */
extern unsigned char ge259os13339;
extern T0* ge259ov13339;
extern T0* T130f2(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.make */
extern T0* T132c13(GE_context* ac);
/* KL_STDOUT_FILE.make_open_stdout */
extern void T132f19(GE_context* ac, T0* C, T0* a1);
/* KL_STDOUT_FILE.set_write_mode */
extern void T132f23(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.console_def */
extern T14 T132f10(GE_context* ac, T0* C, T6 a1);
/* KL_STDOUT_FILE.make_with_name */
extern void T132f22(GE_context* ac, T0* C, T0* a1);
/* KL_STDOUT_FILE.default_pointer */
extern T14 T132f7(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.set_name */
extern void T132f26(GE_context* ac, T0* C, T0* a1);
/* KL_STDOUT_FILE.buffered_file_info */
extern T0* T132f12(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_info */
extern void T36f196(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vwbe0a */
extern T0* T532c763(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.set_compilers */
extern void T532f762(GE_context* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.filename */
extern T0* T532f21(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.default_message_template */
extern T0* T532f19(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.null_position */
extern unsigned char ge1012os28980;
extern T0* ge1012ov28980;
extern T0* T532f12(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.make_default */
extern T0* T180c13(GE_context* ac);
/* ET_VALIDITY_ERROR.template_code */
extern T0* T532f15(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T36f23(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwbe0a_error */
extern void T77f200(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_validity_error */
extern void T77f192(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info */
extern void T77f195(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T77f24(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_type */
extern T1 T380f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_expression_validity */
extern void T370f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_expression_supplier */
extern void T370f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_expression_supplier */
extern void T884f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.add_supplier */
extern void T884f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].force_last */
extern void T881f42(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].slots_put */
extern void T881f60(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].clashes_put */
extern void T881f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].slots_item */
extern T6 T881f18(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].hash_position */
extern T6 T881f20(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.hash_code */
extern T6 T471f36(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].resize */
extern void T881f62(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].clashes_resize */
extern void T881f72(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].special_integer_ */
extern T0* T881f33(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].key_storage_resize */
extern void T881f71(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].item_storage_resize */
extern void T881f70(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1477f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1475f4(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].key_storage_item */
extern T0* T881f32(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].item_storage_item */
extern T0* T881f35(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].clashes_item */
extern T6 T881f26(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].slots_resize */
extern void T881f69(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].new_modulus */
extern T6 T881f23(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].new_capacity */
extern T6 T881f19(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].item_storage_put */
extern void T881f57(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].force */
extern void T1477f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NAMED_CLASS].fill_with */
extern void T1475f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NAMED_CLASS].extend */
extern void T1475f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].search_position */
extern void T881f56(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].key_equality_tester */
extern T0* T881f31(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].unset_found_item */
extern void T881f47(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.actual_class */
extern T0* T471f19(GE_context* ac, T0* C);
/* ET_CLASS.actual_class */
extern T0* T82f95(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.count */
extern T6 T382f3(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.new_context */
extern T0* T370f36(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove_last */
extern void T379f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_last_cursors_after */
extern void T379f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_next_cursor */
extern void T743f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_after */
extern void T743f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].last */
extern T0* T379f6(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.make_with_capacity */
extern T0* T380c52(GE_context* ac, T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.make_ast_list_with_capacity */
extern void T380f54(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].make */
extern T0* T744f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE].make_empty */
extern T0* T263c5(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].is_empty */
extern T1 T379f10(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.current_system */
extern T0* T370f38(GE_context* ac, T0* C);
/* ET_CLASS.current_system */
extern T0* T82f69(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.current_universe_impl */
extern T0* T370f37(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.error_handler */
extern T0* T370f34(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_fatal_error */
extern void T370f62(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe */
extern T0* T79f49(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe_impl */
extern T0* T79f114(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_feature_validity */
extern void T79f130(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_precursor */
extern T1 T248f34(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_current_type_needed */
extern void T310f58(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_current_type_needed */
extern void T248f57(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_dynamic_type_sets */
extern void T310f57(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.set_dynamic_type_sets */
extern void T248f55(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T238f13(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T79f121(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T238f12(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T79f120(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_assertion */
extern void T238f16(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_assertion */
extern void T79f124(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_debug */
extern void T238f15(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_debug */
extern void T79f123(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_creation */
extern void T310f55(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_creation */
extern void T248f53(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.is_creation_directly_exported_to */
extern T1 T82f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_directly_exported_to */
extern T1 T834f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_directly_exported_to */
extern T1 T1045f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.has_feature_name */
extern T1 T1045f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.has_class */
extern T1 T1014f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT.base_class */
extern T0* T498f3(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.has_class */
extern T1 T469f4(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR.is_empty */
extern T1 T1045f9(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc5a_error */
extern void T36f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_system_error */
extern void T36f190(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc5a */
extern T0* T530c32(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T36f12(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc5a_error */
extern void T77f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_system_error */
extern void T77f190(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T77f12(GE_context* ac, T0* C);
/* ET_CLASS.named_query */
extern T0* T82f58(GE_context* ac, T0* C, T0* a1);
/* ET_QUERY_LIST.named_feature */
extern T0* T266f5(GE_context* ac, T0* C, T0* a1);
extern T1 T266f5ot1(T0* a1, T0** a2);
/* ET_CLASS.named_procedure */
extern T0* T82f57(GE_context* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.named_feature */
extern T0* T267f5(GE_context* ac, T0* C, T0* a1);
extern T1 T267f5ot1(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vsrc1a_error */
extern void T36f179(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_vsrc1a */
extern T0* T530c31(GE_context* ac, T0* a1);
/* ET_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T36f30(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vsrc1a_error */
extern void T77f180(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T77f31(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc4a_error */
extern void T36f178(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc4a */
extern T0* T530c30(GE_context* ac, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T36f24(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc4a_error */
extern void T77f179(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T77f25(GE_context* ac, T0* C);
/* ET_CLASS.is_preparsed */
extern T1 T82f53(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc6a_error */
extern void T36f177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_ERROR.make_gvsrc6a */
extern T0* T530c29(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T36f22(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc6a_error */
extern void T77f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T77f23(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_create_feature_name */
extern unsigned char ge808os11456;
extern T0* ge808ov11456;
extern T0* T81f4(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc3a_error */
extern void T36f176(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.make_gvsrc3a */
extern T0* T530c28(GE_context* ac);
/* ET_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T36f21(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc3a_error */
extern void T77f177(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T77f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile_kernel */
extern void T71f73(GE_context* ac, T0* C);
extern T1 T71f73ot1(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_gvkfe6a_error */
extern void T36f187(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkfe6a */
extern T0* T532c761(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ARRAY [ET_TYPE].item */
extern T0* T264f4(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T36f18(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe6a_error */
extern void T77f188(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T77f18(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_exception_data_feature_name */
extern unsigned char ge808os11611;
extern T0* ge808ov11611;
extern T0* T81f17(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvkfe4a_error */
extern void T36f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe4a */
extern T0* T532c760(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T36f17(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe4a_error */
extern void T77f187(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T77f17(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.init_exception_manager_feature_name */
extern unsigned char ge808os11509;
extern T0* ge808ov11509;
extern T0* T81f16(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_target_closed_feature_name */
extern unsigned char ge808os11537;
extern T0* ge808ov11537;
extern T0* T81f15(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.closed_operands_feature_name */
extern unsigned char ge808os11445;
extern T0* ge808ov11445;
extern T0* T81f14(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_pointer_feature */
extern T6 T81f13(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.to_pointer_feature_name */
extern unsigned char ge808os11638;
extern T0* ge808ov11638;
extern T0* T81f11(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_item_feature_name */
extern unsigned char ge808os11573;
extern T0* ge808ov11573;
extern T0* T81f10(GE_context* ac, T0* C);
/* UT_VERSION.is_less */
extern T1 T78f5(GE_context* ac, T0* C, T0* a1);
/* UT_VERSION.build */
extern T6 T78f14(GE_context* ac, T0* C);
/* UT_VERSION.has_build */
extern T1 T78f13(GE_context* ac, T0* C);
/* UT_VERSION.revision */
extern T6 T78f12(GE_context* ac, T0* C);
/* UT_VERSION.has_revision */
extern T1 T78f11(GE_context* ac, T0* C);
/* UT_VERSION.minor */
extern T6 T78f10(GE_context* ac, T0* C);
/* UT_VERSION.has_minor */
extern T1 T78f9(GE_context* ac, T0* C);
/* UT_VERSION.major */
extern T6 T78f8(GE_context* ac, T0* C);
/* UT_VERSION.has_major */
extern T1 T78f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.ise_6_0_6_7057 */
extern unsigned char ge191os1996;
extern T0* ge191ov1996;
extern T0* T71f47(GE_context* ac, T0* C);
/* UT_VERSION.make */
extern T0* T78c17(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_TOKEN_CONSTANTS.upper_feature_name */
extern unsigned char ge808os11648;
extern T0* ge808ov11648;
extern T0* T81f9(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.lower_feature_name */
extern unsigned char ge808os11547;
extern T0* ge808ov11547;
extern T0* T81f8(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.area_feature_name */
extern unsigned char ge808os11409;
extern T0* ge808ov11409;
extern T0* T81f7(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.capacity_feature_name */
extern unsigned char ge808os11432;
extern T0* ge808ov11432;
extern T0* T81f6(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvkfe3a_error */
extern void T36f185(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvkfe3a */
extern T0* T532c759(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T36f16(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe3a_error */
extern void T77f186(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T77f16(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe1a_error */
extern void T36f184(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe1a */
extern T0* T532c758(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T36f15(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe1a_error */
extern void T77f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T77f15(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe2a_error */
extern void T36f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe2a */
extern T0* T532c757(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T36f14(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe2a_error */
extern void T77f184(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T77f14(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.count_feature_name */
extern unsigned char ge808os11451;
extern T0* ge808ov11451;
extern T0* T81f5(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvknl1a_error */
extern void T36f182(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvknl1a */
extern T0* T530c33(GE_context* ac, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T36f13(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvknl1a_error */
extern void T77f183(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T77f13(GE_context* ac, T0* C);
/* DT_SYSTEM_CLOCK.date_time_now */
extern T0* T242f10(GE_context* ac, T0* C);
/* DT_SYSTEM_CLOCK.set_date_time_to_now */
extern void T242f12(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.set_precise_hour_minute_second */
extern void T241f58(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_DATE_TIME.set_year_month_day */
extern void T241f57(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_SYSTEM_CLOCK.set_local_time */
extern void T242f13(GE_context* ac, T0* C);
/* C_DATE.second_now */
extern T6 T646f6(GE_context* ac, T0* C);
/* C_DATE.get_tm_sec */
extern T6 T646f13(GE_context* ac, T0* C, T14 a1);
/* C_DATE.minute_now */
extern T6 T646f5(GE_context* ac, T0* C);
/* C_DATE.get_tm_min */
extern T6 T646f12(GE_context* ac, T0* C, T14 a1);
/* C_DATE.hour_now */
extern T6 T646f4(GE_context* ac, T0* C);
/* C_DATE.get_tm_hour */
extern T6 T646f11(GE_context* ac, T0* C, T14 a1);
/* C_DATE.day_now */
extern T6 T646f15(GE_context* ac, T0* C);
/* C_DATE.get_tm_mday */
extern T6 T646f10(GE_context* ac, T0* C, T14 a1);
/* C_DATE.month_now */
extern T6 T646f8(GE_context* ac, T0* C);
/* C_DATE.get_tm_mon */
extern T6 T646f9(GE_context* ac, T0* C, T14 a1);
/* C_DATE.year_now */
extern T6 T646f7(GE_context* ac, T0* C);
/* C_DATE.get_tm_year */
extern T6 T646f14(GE_context* ac, T0* C, T14 a1);
/* C_DATE.update */
extern void T646f23(GE_context* ac, T0* C);
/* POINTER.memory_free */
extern void T14f11(GE_context* ac, T14* C);
/* POINTER.default_pointer */
extern T14 T14f10(GE_context* ac, T14* C);
/* POINTER.c_free */
extern void T14f14(GE_context* ac, T14* C, T14 a1);
/* C_DATE.get_millitm */
extern T6 T646f21(GE_context* ac, T0* C, T14 a1);
/* C_DATE.tm_structure_size */
extern T6 T646f20(GE_context* ac, T0* C);
/* C_DATE.localtime */
extern T14 T646f19(GE_context* ac, T0* C, T14 a1);
/* C_DATE.gmtime */
extern T14 T646f18(GE_context* ac, T0* C, T14 a1);
/* C_DATE.get_time */
extern void T646f25(GE_context* ac, T0* C, T14 a1, T14 a2);
/* C_DATE.ftime */
extern void T646f24(GE_context* ac, T0* C, T14 a1);
/* C_DATE.time_t_structure_size */
extern T6 T646f17(GE_context* ac, T0* C);
/* C_DATE.timeb_structure_size */
extern T6 T646f16(GE_context* ac, T0* C);
/* C_DATE.default_create */
extern T0* T646c22(GE_context* ac);
/* DT_DATE_TIME.make_from_storage */
extern T0* T241c56(GE_context* ac, T6 a1, T6 a2);
/* DT_SHARED_SYSTEM_CLOCK.system_clock */
extern unsigned char ge1378os17108;
extern T0* ge1378ov17108;
extern T0* T240f1(GE_context* ac, T0* C);
/* DT_SYSTEM_CLOCK.make */
extern T0* T242c11(GE_context* ac);
/* DT_SHARED_SYSTEM_CLOCK.default_create */
extern T0* T240c2(GE_context* ac);
/* ET_DYNAMIC_SYSTEM.error_handler */
extern T0* T71f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.activate_dynamic_type_set_builder */
extern void T71f72(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.tokens */
extern T0* T71f60(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile_all */
extern void T71f70(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.compile_all */
extern T0* T71f70ac1(T0* a1);
/* ET_DYNAMIC_SYSTEM.compile_all_features */
extern void T71f74(GE_context* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.item */
extern T0* T267f7(GE_context* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.item */
extern T0* T266f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.set_dynamic_type_set_builder */
extern void T71f67(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern T0* T79c119(GE_context* ac, T0* a1);
/* DS_CELL [INTEGER_32].make */
extern T0* T371c2(GE_context* ac, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_feature */
extern unsigned char ge1004os10318;
extern T0* ge1004ov10318;
extern T0* T79f55(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_feature */
extern unsigned char ge928os10727;
extern T0* ge928ov10727;
extern T0* T79f103(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern T0* T534c71(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DEFERRED_PROCEDURE.make */
extern void T534f71p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.deferred_keyword */
extern unsigned char ge808os11716;
extern T0* ge808ov11716;
extern T0* T81f572(GE_context* ac, T0* C);
/* ET_KEYWORD.make_deferred */
extern T0* T397c45(GE_context* ac);
/* ET_DEFERRED_PROCEDURE.tokens */
extern T0* T534f34(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_type */
extern unsigned char ge1004os10317;
extern T0* ge1004ov10317;
extern T0* T79f54(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.make */
extern T0* T370c59(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].make */
extern T0* T388c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].set_internal_cursor */
extern void T388f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].new_cursor */
extern T0* T388f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].make */
extern T0* T761c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].make */
extern T0* T760f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ATTACHMENT_SCOPE].make_empty */
extern T0* T759c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].default_create */
extern T0* T760c3(GE_context* ac);
/* ET_ATTACHMENT_SCOPE_BUILDER.make */
extern T0* T387c3(GE_context* ac);
/* ET_ACROSS_CURSOR_SCOPE.make */
extern T0* T385c6(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].make */
extern T0* T757c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].set_internal_cursor */
extern void T757f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].new_cursor */
extern T0* T757f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT].make */
extern T0* T1386c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT].make */
extern T0* T756f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACROSS_COMPONENT].make_empty */
extern T0* T755c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT].default_create */
extern T0* T756c3(GE_context* ac);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_map */
extern T0* T384c41(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_with_equality_testers */
extern void T384f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_sparse_container */
extern void T384f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].set_internal_cursor */
extern void T384f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].new_cursor */
extern T0* T384f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make */
extern T0* T752c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_slots */
extern void T384f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].new_modulus */
extern T6 T384f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_clashes */
extern void T384f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_key_storage */
extern void T384f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_item_storage */
extern void T384f57(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T742f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].make_empty */
extern T0* T741c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].default_create */
extern T0* T742c3(GE_context* ac);
/* ET_OBJECT_TEST_SCOPE_BUILDER.make */
extern T0* T383c8(GE_context* ac);
/* ET_OBJECT_TEST_SCOPE_BUILDER.tokens */
extern T0* T383f5(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.make */
extern T0* T382c6(GE_context* ac);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].make */
extern T0* T751c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T751f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T751f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].make */
extern T0* T1385c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].make */
extern T0* T750f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_OBJECT_TEST].make_empty */
extern T0* T749c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].default_create */
extern T0* T750c3(GE_context* ac);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_map */
extern T0* T381c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_with_equality_testers */
extern void T381f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_sparse_container */
extern void T381f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T381f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T381f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make */
extern T0* T745c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_slots */
extern void T381f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_modulus */
extern T6 T381f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_clashes */
extern void T381f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_key_storage */
extern void T381f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_item_storage */
extern void T381f55(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T379c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].set_internal_cursor */
extern void T379f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_cursor */
extern T0* T379f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T743c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T378c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].set_internal_cursor */
extern void T378f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].new_cursor */
extern T0* T378f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T740c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T737f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].make_empty */
extern T0* T739c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].default_create */
extern T0* T737c3(GE_context* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T377c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].set_internal_cursor */
extern void T377f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_cursor */
extern T0* T377f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T736c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T733f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].make_empty */
extern T0* T735c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].default_create */
extern T0* T733c3(GE_context* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T376c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].set_internal_cursor */
extern void T376f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_cursor */
extern T0* T376f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T732c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T729f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].make_empty */
extern T0* T731c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].default_create */
extern T0* T729c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].make */
extern T0* T375c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].set_internal_cursor */
extern void T375f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_cursor */
extern T0* T375f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].make */
extern T0* T728c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].make */
extern T0* T725f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].make_empty */
extern T0* T727c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].default_create */
extern T0* T725c3(GE_context* ac);
/* ET_FEATURE_CHECKER.dummy_feature */
extern T0* T370f49(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.make */
extern T0* T373c16(GE_context* ac);
/* ET_TYPE_CHECKER.dummy_feature */
extern unsigned char ge952os20856;
extern T0* ge952ov20856;
extern T0* T373f9(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.tokens */
extern T0* T373f13(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.make */
extern void T373f16p1(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make_feature_checker */
extern void T79f126(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_context */
extern T0* T79f56(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_new_instance_types */
extern void T71f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].force */
extern void T76f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].slots_put */
extern void T76f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].clashes_put */
extern void T76f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].resize */
extern void T76f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].clashes_resize */
extern void T76f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].special_integer_ */
extern T0* T76f34(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].key_storage_resize */
extern void T76f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_resize */
extern void T76f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].slots_resize */
extern void T76f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_capacity */
extern T6 T76f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_put */
extern void T76f46(GE_context* ac, T0* C, T0* a1, T6 a2);
/* STRING_8.starts_with */
extern T1 T17f13(GE_context* ac, T0* C, T0* a1);
/* STRING_8.is_empty */
extern T1 T17f12(GE_context* ac, T0* C);
/* STRING_8.right_adjust */
extern void T17f52(GE_context* ac, T0* C);
/* CHARACTER_8.is_space */
extern T1 T2f4(GE_context* ac, T2* C);
/* STRING_8.left_adjust */
extern void T17f51(GE_context* ac, T0* C);
/* STRING_8.twin */
extern T0* T17f6(GE_context* ac, T0* C);
/* STRING_8.copy */
extern void T17f53(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.read_line */
extern void T29f49(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.unread_character */
extern void T29f54(GE_context* ac, T0* C, T2 a1);
/* detachable KL_LINKABLE [CHARACTER_8].put_right */
extern void T126f4(GE_context* ac, T0* C, T0* a1);
/* detachable KL_LINKABLE [CHARACTER_8].make */
extern T0* T126c3(GE_context* ac, T2 a1);
/* KL_TEXT_INPUT_FILE.string_ */
extern T0* T29f28(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].make_equal */
extern T0* T76c37(GE_context* ac, T6 a1);
/* AP_STRING_OPTION.parameter */
extern T0* T46f13(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_catcall_warning_mode */
extern void T71f65(GE_context* ac, T0* C, T1 a1);
/* GEC.catcall_warning_mode */
extern T1 T22f32(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_catcall_error_mode */
extern void T71f64(GE_context* ac, T0* C, T1 a1);
/* GEC.catcall_error_mode */
extern T1 T22f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_full_class_checking */
extern void T71f63(GE_context* ac, T0* C, T1 a1);
/* GEC.is_gelint */
extern T1 T22f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.make */
extern T0* T71c62(GE_context* ac, T0* a1);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.make */
extern T0* T71f62ac1(T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.make */
extern T0* T238c11(GE_context* ac, T0* a1);
/* ET_DYNAMIC_SYSTEM.make_basic_types */
extern void T71f69(GE_context* ac, T0* C);
/* GEC.is_verbose */
extern T1 T22f29(GE_context* ac, T0* C);
/* GEC.qualified_anchored_types_enabled */
extern T1 T22f28(GE_context* ac, T0* C);
/* GEC.ise_latest */
extern unsigned char ge191os2017;
extern T0* ge191ov2017;
extern T0* T22f27(GE_context* ac, T0* C);
/* UT_VERSION.make_latest */
extern T0* T78c16(GE_context* ac);
/* ET_ERROR_HANDLER.set_ise */
extern void T36f175(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.set_ise */
extern void T77f176(GE_context* ac, T0* C);
/* GEC.null_error_handler */
extern unsigned char ge1017os2019;
extern T0* ge1017ov2019;
extern T0* T22f26(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.make_null */
extern T0* T77c175(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.null_output_stream */
extern T0* T77f21(GE_context* ac, T0* C);
/* GEC.is_silent */
extern T1 T22f25(GE_context* ac, T0* C);
/* GEC.parse_ace_file */
extern void T22f46(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.syntax_error */
extern T1 T68f141(GE_context* ac, T0* C);
/* ET_LACE_PARSER.parse_file */
extern void T68f248(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yyparse */
extern void T68f252(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_pop_last_value */
extern void T68f265(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.yy_push_error_value */
extern void T68f264(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_do_action */
extern void T68f263(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.add_external_value */
extern void T68f278(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.object_option */
extern unsigned char ge1063os6521;
extern T0* ge1063ov6521;
extern T0* T68f223(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_identifier */
extern T0* T68f140(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_position */
extern void T182f111(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].force_last */
extern void T136f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].resize */
extern void T136f29(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].new_capacity */
extern T6 T136f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].extendible */
extern T1 T136f16(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.include_path_option */
extern unsigned char ge1063os6518;
extern T0* ge1063ov6518;
extern T0* T68f222(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_gac_assembly */
extern T0* T68f174(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_public_key_token_id */
extern void T230f116(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_public_key_token */
extern void T230f121(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_culture_id */
extern void T230f115(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_culture */
extern void T230f120(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_version_id */
extern void T230f114(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_version */
extern void T230f119(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.unknown_system */
extern unsigned char ge808os12244;
extern T0* ge808ov12244;
extern T0* T81f3(GE_context* ac, T0* C);
/* ET_SYSTEM.make */
extern T0* T33c158(GE_context* ac, T0* a1);
/* ET_SYSTEM.set_default_class_mapping */
extern void T33f166(GE_context* ac, T0* C);
/* ET_SYSTEM.set_wide_character_ref_class_mapping */
extern void T33f224(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_class_mapping */
extern void T33f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.set_mapped_class */
extern void T471f51(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.set_marked */
extern void T471f52(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.set_marked */
extern void T82f230(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.is_unknown */
extern T1 T82f61(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.wide_character_ref_class_name */
extern unsigned char ge808os11406;
extern T0* ge808ov11406;
extern T0* T81f165(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_ref_class_name */
extern unsigned char ge808os11390;
extern T0* ge808ov11390;
extern T0* T81f149(GE_context* ac, T0* C);
/* ET_SYSTEM.set_wide_character_class_mapping */
extern void T33f223(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_string_class_mapping */
extern void T33f222(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.string_class_name */
extern unsigned char ge808os11377;
extern T0* ge808ov11377;
extern T0* T81f157(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_8_class_name */
extern unsigned char ge808os11378;
extern T0* ge808ov11378;
extern T0* T81f148(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_ref_class_mapping */
extern void T33f221(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.real_ref_class_name */
extern unsigned char ge808os11403;
extern T0* ge808ov11403;
extern T0* T81f164(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_ref_class_name */
extern unsigned char ge808os11404;
extern T0* ge808ov11404;
extern T0* T81f147(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_class_mapping */
extern void T33f220(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_natural_ref_class_mapping */
extern void T33f219(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.natural_ref_class_name */
extern unsigned char ge808os11397;
extern T0* ge808ov11397;
extern T0* T81f163(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_ref_class_name */
extern unsigned char ge808os11400;
extern T0* ge808ov11400;
extern T0* T81f146(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_class_mapping */
extern void T33f218(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_integer_ref_class_mapping */
extern void T33f217(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.integer_ref_class_name */
extern unsigned char ge808os11392;
extern T0* ge808ov11392;
extern T0* T81f162(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_ref_class_name */
extern unsigned char ge808os11395;
extern T0* ge808ov11395;
extern T0* T81f145(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_class_mapping */
extern void T33f216(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_double_ref_class_mapping */
extern void T33f215(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.double_ref_class_name */
extern unsigned char ge808os11391;
extern T0* ge808ov11391;
extern T0* T81f161(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_ref_class_name */
extern unsigned char ge808os11405;
extern T0* ge808ov11405;
extern T0* T81f144(GE_context* ac, T0* C);
/* ET_SYSTEM.set_double_class_mapping */
extern void T33f214(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_character_ref_class_mapping */
extern void T33f213(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.character_ref_class_name */
extern unsigned char ge808os11388;
extern T0* ge808ov11388;
extern T0* T81f160(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_ref_class_name */
extern unsigned char ge808os11389;
extern T0* ge808ov11389;
extern T0* T81f143(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_class_mapping */
extern void T33f212(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_kernel_types */
extern void T33f165(GE_context* ac, T0* C);
/* ET_SYSTEM.set_wide_character_type */
extern void T33f211(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.make */
extern T0* T80c114(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_MASTER_CLASS.set_in_system */
extern void T471f49(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM.set_typed_pointer_type */
extern void T33f210(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.like_current */
extern unsigned char ge808os11651;
extern T0* ge808ov11651;
extern T0* T81f151(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.make */
extern T0* T504c74(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.like_keyword */
extern unsigned char ge808os11736;
extern T0* ge808ov11736;
extern T0* T81f571(GE_context* ac, T0* C);
/* ET_KEYWORD.make_like */
extern T0* T397c44(GE_context* ac);
/* ET_LIKE_CURRENT.tokens */
extern T0* T504f4(GE_context* ac, T0* C);
/* ET_SYSTEM.set_type_type */
extern void T33f209(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_like_current */
extern unsigned char ge808os11653;
extern T0* ge808ov11653;
extern T0* T81f159(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_keyword */
extern unsigned char ge808os11717;
extern T0* ge808ov11717;
extern T0* T81f150(GE_context* ac, T0* C);
/* ET_KEYWORD.make_detachable */
extern T0* T397c38(GE_context* ac);
/* ET_SYSTEM.set_system_string_type */
extern void T33f208(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.system_string_class_name */
extern unsigned char ge808os11381;
extern T0* ge808ov11381;
extern T0* T81f158(GE_context* ac, T0* C);
/* ET_SYSTEM.set_system_object_type */
extern void T33f207(GE_context* ac, T0* C);
/* ET_PARENT_LIST.put_first */
extern void T468f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].force */
extern void T1158f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_ITEM].fill_with */
extern void T1159f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_ITEM].extend */
extern void T1159f10(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_LIST.fixed_array */
extern unsigned char ge542os12622;
extern T0* ge542ov12622;
extern T0* T468f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].default_create */
extern T0* T1158c3(GE_context* ac);
/* ET_PARENT_LIST.make_with_capacity */
extern T0* T468c10(GE_context* ac, T6 a1);
/* ET_PARENT_LIST.make_with_capacity */
extern void T468f10p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].make */
extern T0* T1158f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].make_empty */
extern T0* T1159c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.inherit_keyword */
extern unsigned char ge808os11732;
extern T0* ge808ov11732;
extern T0* T81f568(GE_context* ac, T0* C);
/* ET_KEYWORD.make_inherit */
extern T0* T397c43(GE_context* ac);
/* ET_PARENT_LIST.tokens */
extern T0* T468f4(GE_context* ac, T0* C);
/* ET_PARENT.make */
extern T0* T467c11(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_PARENT.tokens */
extern T0* T467f9(GE_context* ac, T0* C);
/* ET_PARENT.has_feature_adaptation */
extern T1 T467f8(GE_context* ac, T0* C);
/* ET_SYSTEM.set_string_type */
extern void T33f206(GE_context* ac, T0* C);
/* ET_SYSTEM.set_string_32_type */
extern void T33f205(GE_context* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.make */
extern T0* T470c6(GE_context* ac, T0* a1);
/* ET_BRACED_TYPE_LIST.make */
extern T0* T1321c8(GE_context* ac);
/* ET_BRACED_TYPE_LIST.make */
extern void T1321f8p1(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].make */
extern T0* T1178f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].make_empty */
extern T0* T1180c5(GE_context* ac, T6 a1);
/* ET_BRACED_TYPE_LIST.fixed_array */
extern unsigned char ge909os12622;
extern T0* ge909ov12622;
extern T0* T1321f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].default_create */
extern T0* T1178c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.right_brace_symbol */
extern unsigned char ge808os11693;
extern T0* ge808ov11693;
extern T0* T81f585(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_brace */
extern T0* T346c88(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_brace_symbol */
extern unsigned char ge808os11688;
extern T0* ge808ov11688;
extern T0* T81f584(GE_context* ac, T0* C);
/* ET_SYMBOL.make_left_brace */
extern T0* T346c87(GE_context* ac);
/* ET_BRACED_TYPE_LIST.tokens */
extern T0* T1321f5(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_32_class_name */
extern unsigned char ge808os11379;
extern T0* ge808ov11379;
extern T0* T81f156(GE_context* ac, T0* C);
/* ET_SYSTEM.set_string_8_type */
extern void T33f204(GE_context* ac, T0* C);
/* ET_SYSTEM.set_special_type */
extern void T33f203(GE_context* ac, T0* C);
/* ET_SYSTEM.set_routine_type */
extern void T33f202(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_64_type */
extern void T33f201(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_32_type */
extern void T33f200(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_type */
extern void T33f199(GE_context* ac, T0* C);
/* ET_SYSTEM.set_procedure_type */
extern void T33f198(GE_context* ac, T0* C);
/* ET_SYSTEM.set_predicate_type */
extern void T33f197(GE_context* ac, T0* C);
/* ET_SYSTEM.set_pointer_type */
extern void T33f196(GE_context* ac, T0* C);
/* ET_SYSTEM.set_none_type */
extern void T33f195(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_class */
extern void T471f50(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_first_local_non_override_class */
extern void T471f56(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.update_intrinsic_class */
extern void T471f58(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.set_intrinsic_class */
extern void T471f60(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T471f60ac1(T0* a1);
/* Creation of agent #2 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T471f60ac2(T0* a1);
/* Creation of agent #3 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T471f60ac3(T0* a1);
extern T1 T471f60ot1(T0* a1, T0** a2);
/* ET_MASTER_CLASS.mark_overridden */
extern void T471f57(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_overriding_class */
extern void T471f59(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].force_last */
extern void T1323f16(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].force */
extern void T637f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_MASTER_CLASS].fill_with */
extern void T638f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_MASTER_CLASS].extend */
extern void T638f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].resize */
extern void T1323f22(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].aliased_resized_area */
extern T0* T637f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MASTER_CLASS].aliased_resized_area */
extern T0* T638f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].new_capacity */
extern T6 T1323f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].extendible */
extern T1 T1323f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].make */
extern T0* T1323c14(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].set_internal_cursor */
extern void T1323f21(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].new_cursor */
extern T0* T1323f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].make */
extern T0* T1535c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].make */
extern T0* T637f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].make_empty */
extern T0* T638c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].default_create */
extern T0* T637c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_master_classes */
extern unsigned char ge808os12251;
extern T0* ge808ov12251;
extern T0* T81f570(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_override */
extern T1 T471f21(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_override */
extern T1 T82f99(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].do_all */
extern void T1323f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].item */
extern T0* T1323f7(GE_context* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.unmark_overridden */
extern void T471f61(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_overriding_class */
extern void T471f62(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove_first */
extern void T1323f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove */
extern void T1323f20(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].keep_head */
extern void T638f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].set_count */
extern void T638f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_left */
extern void T1323f27(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_cursors_left */
extern void T1323f26(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_position */
extern void T1535f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove_last */
extern void T1323f25(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_last_cursors_after */
extern void T1323f31(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_next_cursor */
extern void T1535f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_after */
extern void T1535f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].first */
extern T0* T1323f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].is_empty */
extern T1 T1323f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].delete */
extern void T1323f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_all_cursors_after */
extern void T1323f24(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].force_first */
extern void T1322f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].put */
extern void T1322f27(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_cursors_right */
extern void T1322f33(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_position */
extern void T1534f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].move_right */
extern void T1322f32(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].force */
extern void T1009f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLASS].fill_with */
extern void T1010f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLASS].extend */
extern void T1010f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].put_last */
extern void T1322f23(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].resize */
extern void T1322f25(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].aliased_resized_area */
extern T0* T1009f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLASS].aliased_resized_area */
extern T0* T1010f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_capacity */
extern T6 T1322f12(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].extendible */
extern T1 T1322f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].make */
extern T0* T1322c15(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].set_internal_cursor */
extern void T1322f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_cursor */
extern T0* T1322f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].make */
extern T0* T1534c9(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].make */
extern T0* T1009f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].make_empty */
extern T0* T1010c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].default_create */
extern T0* T1009c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_classes */
extern unsigned char ge808os12250;
extern T0* ge808ov12250;
extern T0* T81f569(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.tokens */
extern T0* T471f20(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_override_class */
extern void T471f55(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_in_override_group */
extern T1 T82f98(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_ignored_class */
extern void T471f54(GE_context* ac, T0* C, T0* a1);
/* ET_NONE_GROUP.make */
extern T0* T506c29(GE_context* ac, T0* a1);
/* ET_AST_FACTORY.new_class */
extern T0* T403f1(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.none_class_name */
extern unsigned char ge808os11367;
extern T0* ge808ov11367;
extern T0* T81f155(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_64_type */
extern void T33f194(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_32_type */
extern void T33f193(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_16_type */
extern void T33f192(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_8_type */
extern void T33f191(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_type */
extern void T33f190(GE_context* ac, T0* C);
/* ET_SYSTEM.set_iterable_type */
extern void T33f189(GE_context* ac, T0* C);
/* ET_SYSTEM.set_ise_exception_manager_type */
extern void T33f188(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ise_exception_manager_class_name */
extern unsigned char ge808os11357;
extern T0* ge808ov11357;
extern T0* T81f154(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_64_type */
extern void T33f187(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_32_type */
extern void T33f186(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_16_type */
extern void T33f185(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_8_type */
extern void T33f184(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_type */
extern void T33f183(GE_context* ac, T0* C);
/* ET_SYSTEM.set_function_type */
extern void T33f182(GE_context* ac, T0* C);
/* ET_SYSTEM.set_exception_manager_type */
extern void T33f181(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_class_name */
extern unsigned char ge808os11347;
extern T0* ge808ov11347;
extern T0* T81f153(GE_context* ac, T0* C);
/* ET_SYSTEM.set_exception_type */
extern void T33f180(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_class_name */
extern unsigned char ge808os11346;
extern T0* ge808ov11346;
extern T0* T81f152(GE_context* ac, T0* C);
/* ET_SYSTEM.set_double_type */
extern void T33f179(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_32_type */
extern void T33f178(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_8_type */
extern void T33f177(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_type */
extern void T33f176(GE_context* ac, T0* C);
/* ET_SYSTEM.set_boolean_type */
extern void T33f175(GE_context* ac, T0* C);
/* ET_SYSTEM.set_array_type */
extern void T33f174(GE_context* ac, T0* C);
/* ET_SYSTEM.set_tuple_type */
extern void T33f173(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T505c17(GE_context* ac, T0* a1);
/* ET_SYSTEM.set_any_type */
extern void T33f172(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.put_first */
extern void T469f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].force */
extern void T1011f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLIENT_ITEM].fill_with */
extern void T1012f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLIENT_ITEM].extend */
extern void T1012f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT.make */
extern T0* T498c6(GE_context* ac, T0* a1, T0* a2);
/* ET_CLIENT_LIST.make_with_capacity */
extern T0* T469c10(GE_context* ac, T6 a1);
/* ET_SYSTEM.make_adapted */
extern void T33f164(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.default_read_only_value */
extern unsigned char ge732os3713;
extern T1 ge732ov3713;
extern T1 T33f146(GE_context* ac, T0* C);
/* ET_SYSTEM.set_unknown_kernel_types */
extern void T33f163(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_convert_feature */
extern unsigned char ge808os12231;
extern T0* ge808ov12231;
extern T0* T81f142(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_generic_class_type */
extern unsigned char ge808os12241;
extern T0* ge808ov12241;
extern T0* T81f141(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.make */
extern T0* T252c29(GE_context* ac);
/* ET_ACTUAL_PARAMETER_LIST.make */
extern void T252f29p1(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.empty_actual_parameters */
extern unsigned char ge808os12249;
extern T0* ge808ov12249;
extern T0* T81f140(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_tuple_type */
extern unsigned char ge808os12242;
extern T0* ge808ov12242;
extern T0* T81f139(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_parents */
extern unsigned char ge808os12235;
extern T0* ge808ov12235;
extern T0* T81f137(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_parent */
extern unsigned char ge808os12234;
extern T0* ge808ov12234;
extern T0* T81f136(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_class_type */
extern unsigned char ge808os12240;
extern T0* ge808ov12240;
extern T0* T81f135(GE_context* ac, T0* C);
/* ET_SYSTEM.set_system_name */
extern void T33f162(GE_context* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.make */
extern T0* T430c1(GE_context* ac);
/* DS_ARRAYED_LIST [STRING_8].make */
extern void T136f22(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].make */
extern T0* T136c22(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].set_internal_cursor */
extern void T136f28(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].new_cursor */
extern T0* T136f15(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].make */
extern T0* T463c9(GE_context* ac, T0* a1);
/* ET_SYSTEM.set_preparse_shallow_mode */
extern void T33f161(GE_context* ac, T0* C);
/* ET_SYSTEM.set_default_keyword_usage */
extern void T33f160(GE_context* ac, T0* C);
/* ET_SYSTEM.set_use_detachable_keyword */
extern void T33f171(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM.set_use_attached_keyword */
extern void T33f170(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM.set_use_reference_keyword */
extern void T33f169(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM.set_use_note_keyword */
extern void T33f168(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM.set_use_attribute_keyword */
extern void T33f167(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM.initialize */
extern void T33f159(GE_context* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.make_empty */
extern T0* T197c6(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T627c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T627f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T627f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1376c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1375f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T1374c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T1375c3(GE_context* ac);
/* ET_CLUSTERS.make_empty */
extern T0* T771c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_CLUSTER].make */
extern T0* T1425c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].set_internal_cursor */
extern void T1425f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].new_cursor */
extern T0* T1425f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLUSTER].make */
extern T0* T1613c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].make */
extern T0* T1612f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLUSTER].make_empty */
extern T0* T1611c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].default_create */
extern T0* T1612c3(GE_context* ac);
/* ET_ADAPTED_LIBRARIES.make_empty */
extern T0* T190c6(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].make */
extern T0* T624c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].set_internal_cursor */
extern void T624f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].new_cursor */
extern T0* T624f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY].make */
extern T0* T1370c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].make */
extern T0* T1369f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_LIBRARY].make_empty */
extern T0* T1368c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].default_create */
extern T0* T1369c3(GE_context* ac);
/* ET_SYSTEM.initialize */
extern void T33f159p1(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].set_key_equality_tester */
extern void T233f39(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.class_name_tester */
extern T0* T33f140(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_map */
extern T0* T233c38(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_with_equality_testers */
extern void T233f41(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_sparse_container */
extern void T233f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].set_internal_cursor */
extern void T233f48(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T233f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].make */
extern T0* T636c10(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].unset_found_item */
extern void T233f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_slots */
extern void T233f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_modulus */
extern T6 T233f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_clashes */
extern void T233f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_key_storage */
extern void T233f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_item_storage */
extern void T233f43(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.default_ast_factory */
extern unsigned char ge808os12248;
extern T0* ge808ov12248;
extern T0* T81f134(GE_context* ac, T0* C);
/* ET_AST_FACTORY.make */
extern T0* T403c357(GE_context* ac);
/* ET_TOKEN_CONSTANTS.standard_error_handler */
extern unsigned char ge808os12247;
extern T0* ge808ov12247;
extern T0* T81f133(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.make_standard */
extern T0* T36c174(GE_context* ac);
/* ET_SYSTEM.tokens */
extern T0* T33f144(GE_context* ac, T0* C);
/* ET_LACE_PARSER.tokens */
extern T0* T68f241(GE_context* ac, T0* C);
/* ET_LACE_AST_FACTORY.new_gac_assembly */
extern T0* T203f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make */
extern T0* T230c112(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_dotnet_gac_assembly */
extern void T230f117(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_dotnet_assembly */
extern void T230f122(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_from_system */
extern void T230f123(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_default_class_mapping */
extern void T230f128(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T230f181(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_class_mapping */
extern void T230f182(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_class */
extern T0* T230f97(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].force_last_new */
extern void T233f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_put */
extern void T233f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_put */
extern void T233f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_put */
extern void T233f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_put */
extern void T233f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_item */
extern T6 T233f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].hash_position */
extern T6 T233f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].resize */
extern void T233f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_resize */
extern void T233f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].special_integer_ */
extern T0* T233f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_resize */
extern void T233f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_resize */
extern void T233f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_item */
extern T0* T233f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_item */
extern T6 T233f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_resize */
extern void T233f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_capacity */
extern T6 T233f25(GE_context* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.make */
extern T0* T471c48(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].found_item */
extern T0* T233f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_item */
extern T0* T233f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].found */
extern T1 T233f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].search */
extern void T233f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].search_position */
extern void T233f51(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_wide_character_class_mapping */
extern void T230f180(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_class_mapping */
extern void T230f179(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_ref_class_mapping */
extern void T230f178(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_class_mapping */
extern void T230f177(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_ref_class_mapping */
extern void T230f176(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_class_mapping */
extern void T230f175(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_ref_class_mapping */
extern void T230f174(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_class_mapping */
extern void T230f173(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_double_ref_class_mapping */
extern void T230f172(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_double_class_mapping */
extern void T230f171(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_ref_class_mapping */
extern void T230f170(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_class_mapping */
extern void T230f169(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.tokens */
extern T0* T230f102(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_kernel_types */
extern void T230f127(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_wide_character_type */
extern void T230f168(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_typed_pointer_type */
extern void T230f167(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_type_type */
extern void T230f166(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_system_string_type */
extern void T230f165(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_system_object_type */
extern void T230f164(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_type */
extern void T230f163(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_32_type */
extern void T230f162(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_8_type */
extern void T230f161(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_special_type */
extern void T230f160(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_routine_type */
extern void T230f159(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_64_type */
extern void T230f158(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_32_type */
extern void T230f157(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_type */
extern void T230f156(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_procedure_type */
extern void T230f155(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_predicate_type */
extern void T230f154(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_pointer_type */
extern void T230f153(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_none_type */
extern void T230f152(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_imported_class */
extern void T471f53(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].force_first */
extern void T1323f15(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].put */
extern void T1323f23(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_cursors_right */
extern void T1323f30(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_right */
extern void T1323f29(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].put_last */
extern void T1323f28(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_64_type */
extern void T230f151(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_32_type */
extern void T230f150(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_16_type */
extern void T230f149(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_8_type */
extern void T230f148(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_type */
extern void T230f147(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_iterable_type */
extern void T230f146(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_ise_exception_manager_type */
extern void T230f145(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_64_type */
extern void T230f144(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_32_type */
extern void T230f143(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_16_type */
extern void T230f142(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_8_type */
extern void T230f141(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_type */
extern void T230f140(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_function_type */
extern void T230f139(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_exception_manager_type */
extern void T230f138(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_exception_type */
extern void T230f137(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_double_type */
extern void T230f136(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_32_type */
extern void T230f135(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_8_type */
extern void T230f134(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_type */
extern void T230f133(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_boolean_type */
extern void T230f132(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_array_type */
extern void T230f131(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_tuple_type */
extern void T230f130(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_any_type */
extern void T230f129(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_adapted */
extern void T230f126(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.default_read_only_value */
extern unsigned char ge712os3713;
extern T1 ge712ov3713;
extern T1 T230f96(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_unknown_kernel_types */
extern void T230f125(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.initialize */
extern void T230f124(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.class_name_tester */
extern T0* T230f104(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLIES.make_empty */
extern T0* T447c5(GE_context* ac);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].make */
extern T0* T1319c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1319f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1319f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY].make */
extern T0* T1533c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].make */
extern T0* T1316f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_ASSEMBLY].make_empty */
extern T0* T1317c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].default_create */
extern T0* T1316c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].force */
extern void T229f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].fill_with */
extern void T228f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].extend */
extern void T228f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T229f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T228f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_classname_prefix_id */
extern void T230f113(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_classname_prefix */
extern void T230f118(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_classname_prefix_id */
extern void T217f106(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T217f108(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.new_assembly */
extern T0* T68f171(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_AST_FACTORY.new_assembly */
extern T0* T203f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.make */
extern T0* T217c105(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.make_dotnet_assembly */
extern void T217f107(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.make_from_system */
extern void T217f109(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.set_default_class_mapping */
extern void T217f114(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T217f167(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_class_mapping */
extern void T217f168(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.master_class */
extern T0* T217f90(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_wide_character_class_mapping */
extern void T217f166(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_class_mapping */
extern void T217f165(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_ref_class_mapping */
extern void T217f164(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_class_mapping */
extern void T217f163(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_ref_class_mapping */
extern void T217f162(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_class_mapping */
extern void T217f161(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_ref_class_mapping */
extern void T217f160(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_class_mapping */
extern void T217f159(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_double_ref_class_mapping */
extern void T217f158(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_double_class_mapping */
extern void T217f157(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_ref_class_mapping */
extern void T217f156(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_class_mapping */
extern void T217f155(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.tokens */
extern T0* T217f95(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_kernel_types */
extern void T217f113(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T217f154(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T217f153(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_type_type */
extern void T217f152(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_system_string_type */
extern void T217f151(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_system_object_type */
extern void T217f150(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_type */
extern void T217f149(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_32_type */
extern void T217f148(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_8_type */
extern void T217f147(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_special_type */
extern void T217f146(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_routine_type */
extern void T217f145(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_64_type */
extern void T217f144(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_32_type */
extern void T217f143(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_type */
extern void T217f142(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_procedure_type */
extern void T217f141(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_predicate_type */
extern void T217f140(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_pointer_type */
extern void T217f139(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_none_type */
extern void T217f138(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T217f137(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T217f136(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T217f135(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T217f134(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_type */
extern void T217f133(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_iterable_type */
extern void T217f132(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T217f131(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T217f130(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T217f129(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T217f128(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T217f127(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_type */
extern void T217f126(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_function_type */
extern void T217f125(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T217f124(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_exception_type */
extern void T217f123(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_double_type */
extern void T217f122(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_32_type */
extern void T217f121(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_8_type */
extern void T217f120(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_type */
extern void T217f119(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_boolean_type */
extern void T217f118(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_array_type */
extern void T217f117(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_tuple_type */
extern void T217f116(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_any_type */
extern void T217f115(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.make_adapted */
extern void T217f112(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T217f89(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T217f111(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.initialize */
extern void T217f110(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T217f97(GE_context* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T197f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T627f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T1375f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T1374f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T1374f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T627f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1375f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1374f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T627f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T627f7(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_assemblies */
extern T0* T68f168(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_assemblies */
extern T0* T203f6(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.make */
extern T0* T197c10(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].put_last */
extern void T627f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].force */
extern void T227f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].fill_with */
extern void T220f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].extend */
extern void T220f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].aliased_resized_area */
extern T0* T227f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].aliased_resized_area */
extern T0* T220f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_EXCLUDE.put_last */
extern void T216f7(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_EXCLUDE.make */
extern T0* T216c6(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].force */
extern void T226f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LACE_EXCLUDE].fill_with */
extern void T225f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LACE_EXCLUDE].extend */
extern void T225f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].aliased_resized_area */
extern T0* T226f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LACE_EXCLUDE].aliased_resized_area */
extern T0* T225f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_CLUSTER.set_subclusters */
extern void T215f58(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_parent */
extern void T214f5(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_parent */
extern void T215f62(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_exclude */
extern void T215f57(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.new_cluster */
extern T0* T68f158(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].force_last */
extern void T204f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_put */
extern void T204f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_put */
extern void T204f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_put */
extern void T204f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_item */
extern T6 T204f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].hash_position */
extern T6 T204f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].resize */
extern void T204f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_resize */
extern void T204f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].special_integer_ */
extern T0* T204f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_resize */
extern void T204f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_resize */
extern void T204f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_item */
extern T0* T204f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_item */
extern T6 T204f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_resize */
extern void T204f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_modulus */
extern T6 T204f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_capacity */
extern T6 T204f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_put */
extern void T204f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search_position */
extern void T204f44(GE_context* ac, T0* C, T0* a1);
/* detachable KL_EQUALITY_TESTER [ET_IDENTIFIER].test */
extern T1 T303f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.is_equal */
extern T1 T182f26(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.any_ */
extern T0* T182f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].unset_found_item */
extern void T204f39(GE_context* ac, T0* C);
/* ET_LACE_AST_FACTORY.new_cluster */
extern T0* T203f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_CLUSTER.make */
extern T0* T215c53(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T215f59(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T214f6(GE_context* ac, T0* C, T1 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].aliased_resized_area */
extern T0* T224f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_CLUSTER].aliased_resized_area */
extern T0* T223f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_qualified_subcluster */
extern T0* T68f156(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LACE_PARSER.report_error */
extern void T68f276(GE_context* ac, T0* C, T0* a1);
extern T1 T68f276ot1(T0* a1, T0** a2);
/* ET_LACE_ERROR_HANDLER.report_error */
extern void T69f7(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.report_error_message */
extern void T69f8(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.message */
extern T0* T69f5(GE_context* ac, T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.append_decimal_integer */
extern void T232f6(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_LACE_PARSER.integer_ */
extern T0* T68f219(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.add_subcluster */
extern void T215f61(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make_empty */
extern T0* T214c7(GE_context* ac);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].make */
extern T0* T633c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].set_internal_cursor */
extern void T633f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_cursor */
extern T0* T633f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].make */
extern T0* T1378c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].make */
extern T0* T224f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTER].make_empty */
extern T0* T223c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].default_create */
extern T0* T224c3(GE_context* ac);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found_item */
extern T0* T204f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_item */
extern T0* T204f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found */
extern T1 T204f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search */
extern void T204f35(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_read_only */
extern void T215f56(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_recursive */
extern void T215f55(GE_context* ac, T0* C, T1 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].force */
extern void T224f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].fill_with */
extern void T223f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].extend */
extern void T223f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_abstract */
extern void T215f54(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTERS.put_last */
extern void T214f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].force_last */
extern void T633f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].resize */
extern void T633f14(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_capacity */
extern T6 T633f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].extendible */
extern T1 T633f7(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_clusters */
extern T0* T68f151(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_clusters */
extern T0* T203f4(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make */
extern T0* T214c3(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].put_last */
extern void T633f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].force */
extern void T222f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LACE_CLUSTERS].fill_with */
extern void T219f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LACE_CLUSTERS].extend */
extern void T219f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].aliased_resized_area */
extern T0* T222f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LACE_CLUSTERS].aliased_resized_area */
extern T0* T219f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_default_value */
extern T0* T68f146(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.trace_option */
extern unsigned char ge1063os6523;
extern T0* ge1063ov6523;
extern T0* T68f240(GE_context* ac, T0* C);
/* ET_LACE_PARSER.metadata_cache_path_option */
extern unsigned char ge1063os6519;
extern T0* ge1063ov6519;
extern T0* T68f239(GE_context* ac, T0* C);
/* ET_LACE_PARSER.msil_clr_version_option */
extern unsigned char ge1063os6520;
extern T0* ge1063ov6520;
extern T0* T68f238(GE_context* ac, T0* C);
/* ET_LACE_PARSER.exception_trace_option */
extern unsigned char ge1063os6517;
extern T0* ge1063ov6517;
extern T0* T68f237(GE_context* ac, T0* C);
/* ET_LACE_PARSER.no_value */
extern unsigned char ge1063os6524;
extern T0* ge1063ov6524;
extern T0* T68f236(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yes_value */
extern unsigned char ge1063os6525;
extern T0* ge1063ov6525;
extern T0* T68f235(GE_context* ac, T0* C);
/* ET_LACE_PARSER.console_application_option */
extern unsigned char ge1063os6516;
extern T0* ge1063ov6516;
extern T0* T68f234(GE_context* ac, T0* C);
/* ET_LACE_PARSER.override_cluster_option */
extern unsigned char ge1063os6522;
extern T0* ge1063ov6522;
extern T0* T68f233(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM].aliased_resized_area */
extern T0* T221f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_SYSTEM].aliased_resized_area */
extern T0* T218f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_system */
extern T0* T68f142(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_ast_factory */
extern void T70f202(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_ast_factory */
extern T0* T203f3(GE_context* ac, T0* C);
/* ET_LACE_AST_FACTORY.new_error_handler */
extern T0* T203f10(GE_context* ac, T0* C);
/* ET_LACE_AST_FACTORY.new_system */
extern T0* T203f9(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.make */
extern T0* T70c181(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.set_default_class_mapping */
extern void T70f210(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_wide_character_ref_class_mapping */
extern void T70f283(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_class_mapping */
extern void T70f296(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.set_wide_character_class_mapping */
extern void T70f282(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_string_class_mapping */
extern void T70f281(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_real_ref_class_mapping */
extern void T70f280(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_real_class_mapping */
extern void T70f279(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_natural_ref_class_mapping */
extern void T70f278(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_natural_class_mapping */
extern void T70f277(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_integer_ref_class_mapping */
extern void T70f276(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_integer_class_mapping */
extern void T70f275(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_double_ref_class_mapping */
extern void T70f274(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_double_class_mapping */
extern void T70f273(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_character_ref_class_mapping */
extern void T70f272(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_character_class_mapping */
extern void T70f271(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_kernel_types */
extern void T70f209(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_wide_character_type */
extern void T70f270(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_typed_pointer_type */
extern void T70f269(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_type_type */
extern void T70f268(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_system_string_type */
extern void T70f267(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_system_object_type */
extern void T70f266(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_string_type */
extern void T70f265(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_string_32_type */
extern void T70f264(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_string_8_type */
extern void T70f263(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_special_type */
extern void T70f262(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_routine_type */
extern void T70f261(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_real_64_type */
extern void T70f260(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_real_32_type */
extern void T70f259(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_real_type */
extern void T70f258(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_procedure_type */
extern void T70f257(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_predicate_type */
extern void T70f256(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_pointer_type */
extern void T70f255(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_none_type */
extern void T70f254(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_64_type */
extern void T70f253(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_32_type */
extern void T70f252(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_16_type */
extern void T70f251(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_8_type */
extern void T70f250(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_type */
extern void T70f249(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_iterable_type */
extern void T70f248(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_ise_exception_manager_type */
extern void T70f247(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_64_type */
extern void T70f246(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_32_type */
extern void T70f245(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_16_type */
extern void T70f244(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_8_type */
extern void T70f243(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_type */
extern void T70f242(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_function_type */
extern void T70f241(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_exception_manager_type */
extern void T70f240(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_exception_type */
extern void T70f239(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_double_type */
extern void T70f238(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_character_32_type */
extern void T70f237(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_character_8_type */
extern void T70f236(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_character_type */
extern void T70f235(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_boolean_type */
extern void T70f234(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_array_type */
extern void T70f233(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_tuple_type */
extern void T70f232(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_any_type */
extern void T70f231(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.make_adapted */
extern void T70f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.default_read_only_value */
extern T1 T70f174(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_unknown_kernel_types */
extern void T70f207(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_system_name */
extern void T70f206(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_preparse_shallow_mode */
extern void T70f205(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_default_keyword_usage */
extern void T70f204(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_use_detachable_keyword */
extern void T70f215(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_use_attached_keyword */
extern void T70f214(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_use_reference_keyword */
extern void T70f213(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_use_note_keyword */
extern void T70f212(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_use_attribute_keyword */
extern void T70f211(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.initialize */
extern void T70f203(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.initialize */
extern void T70f203p1(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.class_name_tester */
extern T0* T70f162(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.tokens */
extern T0* T70f175(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM].force */
extern void T221f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LACE_SYSTEM].fill_with */
extern void T218f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_SYSTEM].extend */
extern void T218f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_root_creation */
extern void T70f190(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_root_type */
extern void T70f189(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_dotnet_assemblies */
extern void T70f188(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_clusters */
extern void T70f187(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.set_system */
extern void T68f277(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_trace_mode */
extern void T70f186(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_exception_trace_mode */
extern void T70f185(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_console_application_mode */
extern void T70f184(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_external_object_pathnames */
extern void T70f183(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_external_include_pathnames */
extern void T70f182(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].forth */
extern void T207f40(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_forth */
extern void T207f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].add_traversing_cursor */
extern void T207f64(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].remove_traversing_cursor */
extern void T207f63(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_override */
extern void T215f60(GE_context* ac, T0* C, T1 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_for_iteration */
extern T0* T207f31(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_item */
extern T0* T207f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].after */
extern T1 T207f23(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_after */
extern T1 T207f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].after */
extern T1 T631f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].start */
extern void T207f39(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_start */
extern void T207f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_off */
extern T1 T207f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].off */
extern T1 T631f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].is_empty */
extern T1 T207f32(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_push_last_value */
extern void T68f262(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.accept */
extern void T68f261(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_do_error_action */
extern void T68f259(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.report_eof_expected_error */
extern void T68f275(GE_context* ac, T0* C);
/* ET_LACE_PARSER.read_token */
extern void T68f258(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_execute_action */
extern void T68f274(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.text_item */
extern T2 T68f221(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.string_ */
extern T0* T68f132(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_identifier_from_buffer */
extern T0* T68f220(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.platform */
extern T0* T68f218(GE_context* ac, T0* C);
/* STRING_8.to_integer */
extern T6 T17f23(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parsed_integer */
extern T6 T767f13(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parse_string_with_type */
extern void T767f17(GE_context* ac, T0* C, T0* a1, T6 a2);
/* STRING_TO_INTEGER_CONVERTOR.parse_character */
extern void T767f23(GE_context* ac, T0* C, T2 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflowed */
extern T1 T767f15(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.overflow_checker */
extern unsigned char ge1543os29916;
extern T0* ge1543ov29916;
extern T0* T767f14(GE_context* ac, T0* C);
/* CHARACTER_8.is_digit */
extern T1 T2f25(GE_context* ac, T2* C);
/* STRING_TO_INTEGER_CONVERTOR.reset */
extern void T767f22(GE_context* ac, T0* C, T6 a1);
/* STRING_8.ctoi_convertor */
extern unsigned char ge1534os491;
extern T0* ge1534ov491;
extern T0* T17f33(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators_acceptable */
extern void T767f21(GE_context* ac, T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators_acceptable */
extern void T767f20(GE_context* ac, T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators */
extern void T767f19(GE_context* ac, T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators */
extern void T767f18(GE_context* ac, T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.make */
extern T0* T767c16(GE_context* ac);
/* ET_LACE_PARSER.set_start_condition */
extern void T68f282(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.text_substring */
extern T0* T68f215(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_LACE_PARSER.text */
extern T0* T68f199(GE_context* ac, T0* C);
/* ET_LACE_PARSER.text_count */
extern T6 T68f191(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_execute_eof_action */
extern void T68f273(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.terminate */
extern void T68f281(GE_context* ac, T0* C);
/* ET_LACE_PARSER.wrap */
extern T1 T68f126(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_refill_input_buffer */
extern void T68f272(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_set_content */
extern void T68f270(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_null_trans_state */
extern T6 T68f125(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.yy_previous_state */
extern T6 T68f217(GE_context* ac, T0* C);
/* ET_LACE_PARSER.fatal_error */
extern void T68f271(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_character */
extern void T131f17(GE_context* ac, T0* C, T2 a1);
/* KL_STDERR_FILE.old_put_character */
extern void T131f21(GE_context* ac, T0* C, T2 a1);
/* KL_STDERR_FILE.console_pc */
extern void T131f25(GE_context* ac, T0* C, T14 a1, T2 a2);
/* ET_LACE_PARSER.std */
extern T0* T68f188(GE_context* ac, T0* C);
/* ET_LACE_PARSER.special_integer_ */
extern T0* T68f161(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_init_value_stacks */
extern void T68f257(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_clear_all */
extern void T68f266(GE_context* ac, T0* C);
/* ET_LACE_PARSER.clear_all */
extern void T68f279(GE_context* ac, T0* C);
/* ET_LACE_PARSER.clear_stacks */
extern void T68f283(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_clear_value_stacks */
extern void T68f285(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].keep_head */
extern void T220f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].set_count */
extern void T220f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_SYSTEM].keep_head */
extern void T218f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_SYSTEM].set_count */
extern void T218f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].keep_head */
extern void T228f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].set_count */
extern void T228f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_EXCLUDE].keep_head */
extern void T225f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_EXCLUDE].set_count */
extern void T225f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_CLUSTERS].keep_head */
extern void T219f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_CLUSTERS].set_count */
extern void T219f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTER].keep_head */
extern void T223f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTER].set_count */
extern void T223f9(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.abort */
extern void T68f260(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].wipe_out */
extern void T136f27(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].move_all_cursors_after */
extern void T136f33(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T463f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_after */
extern void T463f10(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].wipe_out */
extern void T207f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].slots_wipe_out */
extern void T207f55(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_wipe_out */
extern void T207f54(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_wipe_out */
extern void T207f53(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_wipe_out */
extern void T207f52(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].move_all_cursors_after */
extern void T207f51(GE_context* ac, T0* C);
/* ET_LACE_PARSER.set_input_buffer */
extern void T68f251(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_load_input_buffer */
extern void T68f256(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_file_buffer */
extern T0* T68f143(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].wipe_out */
extern void T204f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_wipe_out */
extern void T204f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_wipe_out */
extern void T204f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_wipe_out */
extern void T204f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_wipe_out */
extern void T204f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].move_all_cursors_after */
extern void T204f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_next_cursor */
extern void T630f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_after */
extern void T630f7(GE_context* ac, T0* C);
/* ET_LACE_PARSER.reset */
extern void T68f250(GE_context* ac, T0* C);
/* ET_LACE_PARSER.reset_compressed_scanner_skeleton */
extern void T68f255(GE_context* ac, T0* C);
/* ET_LACE_PARSER.reset */
extern void T68f255p1(GE_context* ac, T0* C);
/* ET_LACE_PARSER.make */
extern T0* T68c247(GE_context* ac, T0* a1);
/* ET_LACE_PARSER.make_with_factory */
extern void T68f249(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_parser_skeleton */
extern void T68f254(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_build_parser_tables */
extern void T68f269(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yycheck_template */
extern unsigned char ge1062os6433;
extern T0* ge1062ov6433;
extern T0* T68f187(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yyfixed_array */
extern T0* T68f242(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yycheck_template_2 */
extern void T68f291(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yyarray_subcopy */
extern void T68f298(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_LACE_PARSER.integer_array_ */
extern T0* T68f246(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yycheck_template_1 */
extern void T68f290(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yytable_template */
extern unsigned char ge1062os6430;
extern T0* ge1062ov6430;
extern T0* T68f186(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytable_template_2 */
extern void T68f289(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yytable_template_1 */
extern void T68f288(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yypgoto_template */
extern unsigned char ge1062os6429;
extern T0* ge1062ov6429;
extern T0* T68f185(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yypact_template */
extern unsigned char ge1062os6428;
extern T0* ge1062ov6428;
extern T0* T68f184(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yydefgoto_template */
extern unsigned char ge1062os6427;
extern T0* ge1062ov6427;
extern T0* T68f183(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yydefact_template */
extern unsigned char ge1062os6426;
extern T0* ge1062ov6426;
extern T0* T68f182(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytypes2_template */
extern unsigned char ge1062os6425;
extern T0* ge1062ov6425;
extern T0* T68f181(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytypes1_template */
extern unsigned char ge1062os6424;
extern T0* ge1062ov6424;
extern T0* T68f180(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yyr1_template */
extern unsigned char ge1062os6423;
extern T0* ge1062ov6423;
extern T0* T68f179(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytranslate_template */
extern unsigned char ge1062os6420;
extern T0* ge1062ov6420;
extern T0* T68f178(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytranslate_template_2 */
extern void T68f287(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yytranslate_template_1 */
extern void T68f286(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_create_value_stacks */
extern void T68f268(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].make */
extern T0* T227f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].make_empty */
extern T0* T220c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].default_create */
extern T0* T227c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM].make */
extern T0* T221f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_SYSTEM].make_empty */
extern T0* T218c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM].default_create */
extern T0* T221c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T229f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].make_empty */
extern T0* T228c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].default_create */
extern T0* T229c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].make */
extern T0* T226f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_EXCLUDE].make_empty */
extern T0* T225c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].default_create */
extern T0* T226c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].make */
extern T0* T222f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_CLUSTERS].make_empty */
extern T0* T219c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].default_create */
extern T0* T222c3(GE_context* ac);
/* ET_LACE_PARSER.make_lace_scanner */
extern void T68f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_with_buffer */
extern void T68f267(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_initialize */
extern void T68f280(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_initialize */
extern void T68f280p1(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_build_tables */
extern void T68f284(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_accept_template */
extern unsigned char ge1064os6920;
extern T0* ge1064ov6920;
extern T0* T68f231(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_fixed_array */
extern T0* T68f244(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_meta_template */
extern unsigned char ge1064os6919;
extern T0* ge1064ov6919;
extern T0* T68f230(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_ec_template */
extern unsigned char ge1064os6916;
extern T0* ge1064ov6916;
extern T0* T68f229(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_ec_template_2 */
extern void T68f297(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_array_subcopy */
extern void T68f299(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_LACE_PARSER.yy_ec_template_1 */
extern void T68f296(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_def_template */
extern unsigned char ge1064os6915;
extern T0* ge1064ov6915;
extern T0* T68f228(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_base_template */
extern unsigned char ge1064os6914;
extern T0* ge1064ov6914;
extern T0* T68f227(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_chk_template */
extern unsigned char ge1064os6911;
extern T0* ge1064ov6911;
extern T0* T68f226(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_chk_template_2 */
extern void T68f295(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_chk_template_1 */
extern void T68f294(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_nxt_template */
extern unsigned char ge1064os6908;
extern T0* ge1064ov6908;
extern T0* T68f225(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_nxt_template_2 */
extern void T68f293(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_nxt_template_1 */
extern void T68f292(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.empty_buffer */
extern T0* T68f135(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T204c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_with_equality_testers */
extern void T204f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_sparse_container */
extern void T204f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].set_internal_cursor */
extern void T204f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_cursor */
extern T0* T204f30(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T630c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_slots */
extern void T204f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_clashes */
extern void T204f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_key_storage */
extern void T204f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_item_storage */
extern void T204f55(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [ET_IDENTIFIER].default_create */
extern T0* T303c2(GE_context* ac);
/* ET_LACE_AST_FACTORY.make */
extern T0* T203c11(GE_context* ac);
/* ET_LACE_ERROR_HANDLER.make_standard */
extern T0* T69c6(GE_context* ac);
/* ET_LACE_ERROR_HANDLER.std */
extern T0* T69f4(GE_context* ac, T0* C);
/* GEC.parse_ecf_file */
extern void T22f45(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.to_boolean */
extern T1 T847f59(GE_context* ac, T0* C);
/* STRING_8.to_boolean */
extern T1 T17f42(GE_context* ac, T0* C);
/* UC_UTF8_STRING.is_boolean */
extern T1 T847f58(GE_context* ac, T0* C);
/* STRING_8.is_boolean */
extern T1 T17f41(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.value */
extern T0* T67f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.has_error */
extern T1 T63f5(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_file */
extern void T62f99(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].wipe_out */
extern void T179f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_wipe_out */
extern void T179f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_wipe_out */
extern void T179f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_wipe_out */
extern void T179f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_wipe_out */
extern void T179f42(GE_context* ac, T0* C);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].keep_head */
extern void T618f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].set_count */
extern void T618f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].unset_found_item */
extern void T179f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].move_all_cursors_after */
extern void T179f40(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_next_cursor */
extern void T621f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_after */
extern void T621f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].wipe_out */
extern void T178f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_wipe_out */
extern void T178f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_wipe_out */
extern void T178f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_wipe_out */
extern void T178f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_wipe_out */
extern void T178f48(GE_context* ac, T0* C);
/* SPECIAL [ET_ECF_LIBRARY].keep_head */
extern void T614f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_LIBRARY].set_count */
extern void T614f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].unset_found_item */
extern void T178f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].move_all_cursors_after */
extern void T178f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_next_cursor */
extern void T613f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_after */
extern void T613f9(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_file */
extern void T62f99p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.last_error_description */
extern T0* T165f128(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.position */
extern T0* T165f120(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_POSITION].first */
extern T0* T573f6(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.positions */
extern T0* T165f93(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_positions */
extern T0* T165f122(GE_context* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].remove */
extern void T574f7(GE_context* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].item */
extern T0* T574f4(GE_context* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].is_empty */
extern T1 T574f3(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_POSITION].force_last */
extern void T573f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_POSITION].put_right */
extern void T1350f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_POSITION].attach_left */
extern void T1350f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_POSITION].make */
extern T0* T1350c4(GE_context* ac, T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].make */
extern T0* T573c7(GE_context* ac);
/* DS_BILINKED_LIST [XM_POSITION].set_internal_cursor */
extern void T573f9(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].new_cursor */
extern T0* T573f5(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_POSITION].make */
extern T0* T1351c3(GE_context* ac, T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].copy */
extern void T574f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_EIFFEL_SCANNER].put_right */
extern void T1352f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_EIFFEL_SCANNER].make */
extern T0* T1352c3(GE_context* ac, T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].make */
extern T0* T574c5(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.report_syntax_error */
extern void T63f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_error */
extern void T63f13(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_error_message */
extern void T63f14(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_error_message */
extern void T63f14p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.message */
extern T0* T63f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.default_message */
extern T0* T201f9(GE_context* ac, T0* C);
/* ET_ECF_ERROR.message */
extern T0* T201f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.arguments */
extern unsigned char ge293os1977;
extern T0* ge293ov1977;
extern T0* T201f6(GE_context* ac, T0* C);
/* KL_ARGUMENTS.make */
extern T0* T30c5(GE_context* ac);
/* KL_ARGUMENTS.argument */
extern T0* T30f2(GE_context* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.as_string_8 */
extern T0* T401f8(GE_context* ac, T0* C);
/* IMMUTABLE_STRING_32.code */
extern T10 T401f10(GE_context* ac, T0* C, T6 a1);
/* ARGUMENTS_32.argument */
extern T0* T400f1(GE_context* ac, T0* C, T6 a1);
/* ARRAY [IMMUTABLE_STRING_32].item */
extern T0* T871f5(GE_context* ac, T0* C, T6 a1);
/* ARGUMENTS_32.internal_argument_array */
extern unsigned char ge1415os21501;
extern T0* ge1415ov21501;
extern T0* T400f3(GE_context* ac, T0* C);
/* ARRAY [IMMUTABLE_STRING_32].put */
extern void T871f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARGUMENTS_32.i_th_argument_string */
extern T0* T400f4(GE_context* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.make_from_string */
extern T0* T401c13(GE_context* ac, T0* a1);
/* STRING_32.area_lower */
extern T6 T18f7(GE_context* ac, T0* C);
/* NATIVE_STRING.set_shared_from_pointer */
extern void T368f14(GE_context* ac, T0* C, T14 a1);
/* NATIVE_STRING.set_shared_from_pointer_and_count */
extern void T368f15(GE_context* ac, T0* C, T14 a1, T6 a2);
/* MANAGED_POINTER.set_from_pointer */
extern void T128f17(GE_context* ac, T0* C, T14 a1, T6 a2);
/* ARGUMENTS_32.default_pointer */
extern T14 T400f6(GE_context* ac, T0* C);
/* ARRAY [IMMUTABLE_STRING_32].compare_objects */
extern void T871f7(GE_context* ac, T0* C);
/* ARRAY [IMMUTABLE_STRING_32].make_filled */
extern T0* T871c6(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [IMMUTABLE_STRING_32].make_filled_area */
extern void T871f9(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [IMMUTABLE_STRING_32].make_filled */
extern T0* T870c8(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [IMMUTABLE_STRING_32].fill_with */
extern void T870f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [IMMUTABLE_STRING_32].extend */
extern void T870f7(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [IMMUTABLE_STRING_32].make_empty */
extern void T870f4(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [IMMUTABLE_STRING_32].make_empty */
extern T0* T870c4(GE_context* ac, T6 a1);
/* IMMUTABLE_STRING_32.make_empty */
extern T0* T401c12(GE_context* ac);
/* IMMUTABLE_STRING_32.make */
extern void T401f16(GE_context* ac, T0* C, T6 a1);
/* KL_ARGUMENTS.internal_arguments */
extern unsigned char ge1414os3253;
extern T0* ge1414ov3253;
extern T0* T30f3(GE_context* ac, T0* C);
/* ARGUMENTS_32.default_create */
extern T0* T400c7(GE_context* ac);
/* ARRAY [STRING_8].valid_index */
extern T1 T142f4(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.to_integer */
extern T6 T847f29(GE_context* ac, T0* C);
/* UC_UTF8_STRING.ctoi_convertor */
extern T0* T847f48(GE_context* ac, T0* C);
/* UC_UTF8_STRING.is_integer */
extern T1 T847f28(GE_context* ac, T0* C);
/* UC_UTF8_STRING.is_valid_integer_or_natural */
extern T1 T847f47(GE_context* ac, T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.is_integral_integer */
extern T1 T767f12(GE_context* ac, T0* C);
/* STRING_8.is_integer */
extern T1 T17f35(GE_context* ac, T0* C);
/* STRING_8.is_valid_integer_or_natural */
extern T1 T17f39(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ERROR.string_ */
extern T0* T201f8(GE_context* ac, T0* C);
/* ET_ECF_ERROR.make_syntax */
extern T0* T201c190(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.filename */
extern T0* T201f14(GE_context* ac, T0* C);
/* ET_ECF_ERROR.default_message_template */
extern T0* T201f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.add_dependent_universes */
extern void T201f274(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T201f274ot1(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].item */
extern T0* T852f9(GE_context* ac, T0* C, T6 a1);
/* XM_TREE_CALLBACKS_PIPE.last_error */
extern T0* T158f8(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.make */
extern T0* T180c11(GE_context* ac, T6 a1, T6 a2);
/* ET_COMPRESSED_POSITION.set_position */
extern void T180f12(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_ECF_ERROR_HANDLER.report_eabx_error */
extern void T63f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabx */
extern T0* T201c189(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.element_name */
extern T0* T62f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_POSITION_TABLE.item */
extern T0* T156f2(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].forth */
extern void T843f11(GE_context* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_forth */
extern void T844f12(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].add_traversing_cursor */
extern void T844f13(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_next_cursor */
extern void T843f14(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].remove_traversing_cursor */
extern void T844f14(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set */
extern void T843f12(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].go_after */
extern void T843f10(GE_context* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_go_after */
extern void T844f11(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_after */
extern void T843f13(GE_context* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_off */
extern T1 T844f6(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].off */
extern T1 T843f7(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].item */
extern T0* T843f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].start */
extern void T843f9(GE_context* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_start */
extern void T844f10(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].new_cursor */
extern T0* T844f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T843c8(GE_context* ac, T0* a1);
/* XM_POSITION_TABLE.has */
extern T1 T156f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_system */
extern T0* T176f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.make */
extern T0* T64c188(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.make_system */
extern void T64f206(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_default_class_mapping */
extern void T64f234(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_wide_character_ref_class_mapping */
extern void T64f298(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_class_mapping */
extern void T64f300(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.set_wide_character_class_mapping */
extern void T64f297(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_string_class_mapping */
extern void T64f296(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_real_ref_class_mapping */
extern void T64f295(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_real_class_mapping */
extern void T64f294(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_natural_ref_class_mapping */
extern void T64f293(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_natural_class_mapping */
extern void T64f292(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_integer_ref_class_mapping */
extern void T64f291(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_integer_class_mapping */
extern void T64f290(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_double_ref_class_mapping */
extern void T64f289(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_double_class_mapping */
extern void T64f288(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_character_ref_class_mapping */
extern void T64f287(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_character_class_mapping */
extern void T64f286(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_kernel_types */
extern void T64f233(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_wide_character_type */
extern void T64f285(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_typed_pointer_type */
extern void T64f284(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_type_type */
extern void T64f283(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_string_type */
extern void T64f282(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_object_type */
extern void T64f281(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_type */
extern void T64f280(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_32_type */
extern void T64f279(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_8_type */
extern void T64f278(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_special_type */
extern void T64f277(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_routine_type */
extern void T64f276(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_64_type */
extern void T64f275(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_32_type */
extern void T64f274(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_type */
extern void T64f273(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_procedure_type */
extern void T64f272(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_predicate_type */
extern void T64f271(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_pointer_type */
extern void T64f270(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_none_type */
extern void T64f269(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_64_type */
extern void T64f268(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_32_type */
extern void T64f267(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_16_type */
extern void T64f266(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_8_type */
extern void T64f265(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_type */
extern void T64f264(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_iterable_type */
extern void T64f263(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_ise_exception_manager_type */
extern void T64f262(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_64_type */
extern void T64f261(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_32_type */
extern void T64f260(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_16_type */
extern void T64f259(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_8_type */
extern void T64f258(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_type */
extern void T64f257(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_function_type */
extern void T64f256(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_exception_manager_type */
extern void T64f255(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_exception_type */
extern void T64f254(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_double_type */
extern void T64f253(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_32_type */
extern void T64f252(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_8_type */
extern void T64f251(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_type */
extern void T64f250(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_boolean_type */
extern void T64f249(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_array_type */
extern void T64f248(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_tuple_type */
extern void T64f247(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_any_type */
extern void T64f246(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.make_adapted */
extern void T64f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.default_read_only_value */
extern T1 T64f169(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_unknown_kernel_types */
extern void T64f231(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_name */
extern void T64f230(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_preparse_shallow_mode */
extern void T64f229(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_default_keyword_usage */
extern void T64f213(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_use_detachable_keyword */
extern void T64f211(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_use_attached_keyword */
extern void T64f210(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_use_reference_keyword */
extern void T64f209(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_use_note_keyword */
extern void T64f208(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_use_attribute_keyword */
extern void T64f207(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.initialize */
extern void T64f228(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.initialize */
extern void T64f228p1(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.class_name_tester */
extern T0* T64f183(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.tokens */
extern T0* T64f176(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.make */
extern void T64f188p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.build_system_config */
extern void T62f101(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.build_system_config */
extern T0* T62f101ac1(void);
/* ET_ECF_ADAPTED_LIBRARY.propagate_read_only */
extern void T196f21(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_read_only */
extern void T189f205(GE_context* ac, T0* C, T1 a1);
/* ET_LIBRARY.set_read_only */
extern void T460f177(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM_PARSER.parse_dotnet_assemblies */
extern void T62f104(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T62f104ot1(T0* a1, T0** a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].force_last_new */
extern void T179f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_put */
extern void T179f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_put */
extern void T179f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].force */
extern void T622f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].fill_with */
extern void T618f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].extend */
extern void T618f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_put */
extern void T179f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_put */
extern void T179f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_item */
extern T6 T179f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].hash_position */
extern T6 T179f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].resize */
extern void T179f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_resize */
extern void T179f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].special_integer_ */
extern T0* T179f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_resize */
extern void T179f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_resize */
extern void T179f54(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T622f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T618f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_item */
extern T0* T179f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_item */
extern T6 T179f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_resize */
extern void T179f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_modulus */
extern T6 T179f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_capacity */
extern T6 T179f21(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_dotnet_assembly */
extern T0* T176f2(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.make */
extern T0* T198c100(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.make_from_system */
extern void T198f101(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.set_default_class_mapping */
extern void T198f106(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T198f159(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_class_mapping */
extern void T198f160(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_class */
extern T0* T198f86(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_class_mapping */
extern void T198f158(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_class_mapping */
extern void T198f157(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_ref_class_mapping */
extern void T198f156(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_class_mapping */
extern void T198f155(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_ref_class_mapping */
extern void T198f154(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_class_mapping */
extern void T198f153(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_ref_class_mapping */
extern void T198f152(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_class_mapping */
extern void T198f151(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_ref_class_mapping */
extern void T198f150(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_class_mapping */
extern void T198f149(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_ref_class_mapping */
extern void T198f148(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_class_mapping */
extern void T198f147(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.tokens */
extern T0* T198f93(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_kernel_types */
extern void T198f105(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T198f146(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T198f145(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_type_type */
extern void T198f144(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_system_string_type */
extern void T198f143(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_system_object_type */
extern void T198f142(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_type */
extern void T198f141(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_32_type */
extern void T198f140(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_8_type */
extern void T198f139(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_special_type */
extern void T198f138(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_routine_type */
extern void T198f137(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_64_type */
extern void T198f136(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_32_type */
extern void T198f135(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_type */
extern void T198f134(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_procedure_type */
extern void T198f133(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_predicate_type */
extern void T198f132(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_pointer_type */
extern void T198f131(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_none_type */
extern void T198f130(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T198f129(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T198f128(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T198f127(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T198f126(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_type */
extern void T198f125(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_iterable_type */
extern void T198f124(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T198f123(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T198f122(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T198f121(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T198f120(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T198f119(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_type */
extern void T198f118(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_function_type */
extern void T198f117(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T198f116(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_exception_type */
extern void T198f115(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_type */
extern void T198f114(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_32_type */
extern void T198f113(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_8_type */
extern void T198f112(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_type */
extern void T198f111(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_boolean_type */
extern void T198f110(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_array_type */
extern void T198f109(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_tuple_type */
extern void T198f108(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_any_type */
extern void T198f107(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.make_adapted */
extern void T198f104(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T198f85(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T198f103(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.initialize */
extern void T198f102(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T198f84(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_dotnet_assembly */
extern void T200f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].found_item */
extern T0* T179f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_item */
extern T0* T179f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].found */
extern T1 T179f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].search */
extern void T179f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].search_position */
extern void T179f46(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.as_lower */
extern T0* T847f12(GE_context* ac, T0* C);
/* UC_UTF8_STRING.to_lower */
extern void T847f82(GE_context* ac, T0* C);
/* STRING_8.as_lower */
extern T0* T17f25(GE_context* ac, T0* C);
/* STRING_8.to_lower */
extern void T17f65(GE_context* ac, T0* C);
/* STRING_8.to_lower_area */
extern void T17f67(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_ECF_SYSTEM_PARSER.operating_system */
extern T0* T62f21(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.dirname */
extern T0* T121f6(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.root_directory */
extern unsigned char ge265os12728;
extern T0* ge265ov12728;
extern T0* T121f15(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.is_root_directory */
extern T1 T121f14(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.dirname */
extern T0* T120f6(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.root_directory */
extern unsigned char ge268os12728;
extern T0* ge268ov12728;
extern T0* T120f17(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_root_directory */
extern T1 T120f16(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.is_relative_pathname */
extern T1 T121f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.execution_environment */
extern T0* T62f20(GE_context* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T197f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T627f9(GE_context* ac, T0* C, T6 a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T197f2(GE_context* ac, T0* C);
/* ET_ECF_TARGET.fill_options */
extern void T65f36(GE_context* ac, T0* C, T0* a1);
extern T1 T65f36ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.set_trace_mode */
extern void T64f319(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_obsolete_routine_type_mode */
extern void T64f318(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_obsolete_routine_type_mode */
extern void T189f187(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.ecf_1_15_0 */
extern unsigned char ge189os6319;
extern T0* ge189ov6319;
extern T0* T65f17(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_type_mark */
extern unsigned char ge808os11663;
extern T0* ge808ov11663;
extern T0* T81f62(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_detachable_mark */
extern void T345f19(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_implicit_attachment_type_mark */
extern void T64f317(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_implicit_attachment_type_mark */
extern void T189f186(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.tokens */
extern T0* T65f16(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_target_type_attachment_mode */
extern void T64f316(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_target_type_attachment_mode */
extern void T189f185(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_attachment_type_conformance_mode */
extern void T64f315(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_attachment_type_conformance_mode */
extern void T189f184(GE_context* ac, T0* C, T1 a1);
/* UC_UTF8_STRING.same_string */
extern T1 T847f19(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_OPTIONS.value */
extern T0* T813f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.fill_settings */
extern void T65f40(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_unknown_builtin_reported */
extern void T64f324(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_exception_trace_mode */
extern void T64f323(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_multithreaded_mode */
extern void T64f322(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.string_ */
extern T0* T65f23(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_console_application_mode */
extern void T64f321(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SETTINGS.value */
extern T0* T812f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.fill_root */
extern void T65f39(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.fill_root */
extern void T815f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_root_creation */
extern void T64f326(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_root_type */
extern void T64f325(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_ALL_CLASSES.fill_root */
extern void T816f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.unset_root_type */
extern void T64f327(GE_context* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.do_adapted */
extern void T190f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].do_all */
extern void T624f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].item */
extern T0* T624f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].forth */
extern void T178f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_forth */
extern void T178f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].add_traversing_cursor */
extern void T178f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_position */
extern void T613f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].remove_traversing_cursor */
extern void T178f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_item */
extern T6 T178f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_for_iteration */
extern T0* T178f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_item */
extern T0* T178f29(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_item */
extern T0* T178f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].after */
extern T1 T178f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_after */
extern T1 T178f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].after */
extern T1 T613f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].start */
extern void T178f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_start */
extern void T178f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_off */
extern T1 T178f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].off */
extern T1 T613f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].is_empty */
extern T1 T178f21(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_libraries */
extern void T62f103(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.select_target */
extern void T189f116(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.fill_universe */
extern void T65f37(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T65f37ot1(T0* a1);
/* ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern void T810f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern T0* T810f5ac1(T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARY.fill_external_libraries */
extern void T809f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARY.file_system */
extern T0* T809f4(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.unix_file_system */
extern T0* T809f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.windows_file_system */
extern T0* T809f6(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.operating_system */
extern T0* T809f5(GE_context* ac, T0* C);
/* UC_UTF8_STRING.starts_with */
extern T1 T847f60(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.is_enabled */
extern T1 T809f3(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].do_all */
extern void T1455f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].item */
extern T0* T1455f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern void T808f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern T0* T808f5ac1(T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_OBJECT.fill_external_objects */
extern void T807f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_OBJECT.file_system */
extern T0* T807f4(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.unix_file_system */
extern T0* T807f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.windows_file_system */
extern T0* T807f6(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.operating_system */
extern T0* T807f5(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.is_enabled */
extern T1 T807f3(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].do_all */
extern void T1454f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].item */
extern T0* T1454f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern void T806f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern T0* T806f5ac1(T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDE.fill_external_includes */
extern void T805f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDE.file_system */
extern T0* T805f4(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.unix_file_system */
extern T0* T805f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.windows_file_system */
extern T0* T805f6(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.operating_system */
extern T0* T805f5(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.is_enabled */
extern T1 T805f3(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].do_all */
extern void T1453f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].item */
extern T0* T1453f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_dotnet */
extern void T64f320(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.is_enabled */
extern T1 T200f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T802f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T1450f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T802f3(GE_context* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.put_last */
extern void T190f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].force_last */
extern void T624f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].force */
extern void T1369f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_LIBRARY].fill_with */
extern void T1368f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_LIBRARY].extend */
extern void T1368f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].resize */
extern void T624f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1369f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1368f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].new_capacity */
extern T6 T624f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].extendible */
extern T1 T624f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_LIBRARY.is_enabled */
extern T1 T196f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.library */
extern T0* T801f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].item */
extern T0* T1449f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_LIBRARIES.count */
extern T6 T801f3(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.fill_file_rules */
extern void T799f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_CLUSTER.fill_file_rules */
extern T0* T799f71ac1(T0* a1, T0* a2);
/* ET_ECF_CLUSTERS.do_all */
extern void T800f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.fill_file_rules */
extern void T804f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T804f7ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T804f7ac2(T0* a1);
/* ET_ECF_FILE_RULE.is_enabled */
extern T1 T803f8(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.put_last */
extern void T804f5(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].force_last */
extern void T1452f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].force */
extern void T1627f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_FILE_RULE].fill_with */
extern void T1628f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_FILE_RULE].extend */
extern void T1628f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].resize */
extern void T1452f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T1627f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T1628f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].new_capacity */
extern T6 T1452f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].extendible */
extern T1 T1452f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].do_if */
extern void T1452f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].item */
extern T0* T1452f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_TARGET.fill_file_rules */
extern void T65f41(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_FILE_RULES.make_empty */
extern T0* T804c6(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].make */
extern T0* T1452c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].set_internal_cursor */
extern void T1452f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].new_cursor */
extern T0* T1452f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE].make */
extern T0* T1629c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].make */
extern T0* T1627f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_FILE_RULE].make_empty */
extern T0* T1628c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].default_create */
extern T0* T1627c3(GE_context* ac);
/* ET_ECF_CLUSTER.fill_subclusters */
extern void T799f70(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.add_subcluster */
extern void T799f76(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_parent */
extern void T799f66(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.put_last */
extern void T800f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].force_last */
extern void T1448f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].force */
extern void T1616f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_CLUSTER].fill_with */
extern void T1615f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_CLUSTER].extend */
extern void T1615f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].resize */
extern void T1448f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T1616f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T1615f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].new_capacity */
extern T6 T1448f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].extendible */
extern T1 T1448f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.set_subclusters */
extern void T799f77(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_parent */
extern void T800f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.make_empty */
extern T0* T800c8(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].make */
extern T0* T1448c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].set_internal_cursor */
extern void T1448f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].new_cursor */
extern T0* T1448f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].make */
extern T0* T1617c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].make */
extern T0* T1616f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].make_empty */
extern T0* T1615c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].default_create */
extern T0* T1616c3(GE_context* ac);
/* ET_CLUSTERS.put_last */
extern void T771f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].force_last */
extern void T1425f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].force */
extern void T1612f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLUSTER].fill_with */
extern void T1611f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLUSTER].extend */
extern void T1611f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].resize */
extern void T1425f13(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].aliased_resized_area */
extern T0* T1612f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLUSTER].aliased_resized_area */
extern T0* T1611f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].new_capacity */
extern T6 T1425f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].extendible */
extern T1 T1425f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.is_enabled */
extern T1 T799f34(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.cluster */
extern T0* T800f4(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTERS.count */
extern T6 T800f3(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eabw_error */
extern void T63f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabw */
extern T0* T201c192(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.set_library */
extern void T196f15(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.parse_adapted_library */
extern void T195f99(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.parse_file */
extern void T195f101(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.parse_file */
extern void T195f101p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.element_name */
extern T0* T195f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.build_system_config */
extern void T195f102(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY_PARSER.new_library */
extern T0* T195f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].force_last_new */
extern void T178f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_put */
extern void T178f69(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_put */
extern void T178f68(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].force */
extern void T617f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_LIBRARY].fill_with */
extern void T614f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_LIBRARY].extend */
extern void T614f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_put */
extern void T178f67(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_put */
extern void T178f66(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_item */
extern T6 T178f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].hash_position */
extern T6 T178f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].resize */
extern void T178f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_resize */
extern void T178f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].special_integer_ */
extern T0* T178f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_resize */
extern void T178f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_resize */
extern void T178f71(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T617f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T614f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_item */
extern T0* T178f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_resize */
extern void T178f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_modulus */
extern T6 T178f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_capacity */
extern T6 T178f32(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_LIBRARY_PARSER.fill_system_config */
extern void T195f103(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T195f103ot1(T0* a1, T0** a2);
/* ET_ECF_LIBRARY.set_library_target */
extern void T189f121(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.target_by_name */
extern T0* T188f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.string_ */
extern T0* T188f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].item */
extern T0* T623f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_eabq_error */
extern void T63f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabq */
extern T0* T201c197(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabp_error */
extern void T63f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabp */
extern T0* T201c196(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.set_targets */
extern void T189f120(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eaby_error */
extern void T63f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaby */
extern T0* T201c195(GE_context* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].forth */
extern void T417f12(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_forth */
extern void T839f15(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].add_traversing_cursor */
extern void T839f19(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_next_cursor */
extern void T417f17(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_traversing_cursor */
extern void T839f20(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set */
extern void T417f15(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_ECF_TARGETS.put_last */
extern void T188f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].force_last */
extern void T623f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].force */
extern void T1366f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET].fill_with */
extern void T1365f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET].extend */
extern void T1365f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].resize */
extern void T623f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].aliased_resized_area */
extern T0* T1366f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_TARGET].aliased_resized_area */
extern T0* T1365f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].new_capacity */
extern T6 T623f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].extendible */
extern T1 T623f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_targets */
extern T0* T176f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.make */
extern T0* T188c8(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].put_last */
extern void T623f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].make */
extern T0* T623c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].set_internal_cursor */
extern void T623f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].new_cursor */
extern T0* T623f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET].make */
extern T0* T1367c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].make */
extern T0* T1366f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_TARGET].make_empty */
extern T0* T1365c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].default_create */
extern T0* T1366c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_target */
extern T0* T195f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T195f27ot1(T0* a1, T0** a2);
/* ET_ECF_TARGET.set_external_objects */
extern void T65f35(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_libraries */
extern void T65f34(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_includes */
extern void T65f33(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_file_rules */
extern void T65f32(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_dotnet_assemblies */
extern void T65f31(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_libraries */
extern void T65f30(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_clusters */
extern void T65f29(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.add_option */
extern void T195f106(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_OPTIONS.set_primary_value */
extern void T813f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_value */
extern T0* T813f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.add_setting */
extern void T195f105(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SETTINGS.set_primary_value */
extern void T812f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SETTINGS.primary_value */
extern T0* T812f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_esve_error */
extern void T63f95(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_esve */
extern T0* T201c273(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_esvm_error */
extern void T63f94(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_esvm */
extern T0* T201c272(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_esne_error */
extern void T63f93(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_esne */
extern T0* T201c271(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_esnm_error */
extern void T63f92(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_esnm */
extern T0* T201c270(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.add_variable */
extern void T195f104(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_VARIABLES.set_primary_value */
extern void T67f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_VARIABLES.primary_value */
extern T0* T67f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabu_error */
extern void T63f91(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabu */
extern T0* T201c269(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabt_error */
extern void T63f90(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabt */
extern T0* T201c268(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabs_error */
extern void T63f89(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabs */
extern T0* T201c267(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabr_error */
extern void T63f88(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabr */
extern T0* T201c266(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_TARGET.set_root */
extern void T65f28(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.new_root */
extern T0* T195f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ROOT_CLASS.set_creation_procedure_name */
extern void T815f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacc_error */
extern void T63f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacc */
extern T0* T201c236(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_root_class */
extern T0* T176f21(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.make */
extern T0* T815c3(GE_context* ac, T0* a1);
/* ET_ECF_LIBRARY_PARSER.attribute_value */
extern T0* T195f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacb_error */
extern void T63f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacb */
extern T0* T201c235(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaca_error */
extern void T63f56(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaca */
extern T0* T201c234(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_root_all_classes */
extern T0* T176f20(GE_context* ac, T0* C);
/* ET_ECF_ROOT_ALL_CLASSES.make */
extern T0* T816c1(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.report_eabz_error */
extern void T63f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabz */
extern T0* T201c233(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY_PARSER.is_false */
extern T1 T195f53(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.is_true */
extern T1 T195f52(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECTS.put_last */
extern void T808f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].force_last */
extern void T1454f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].force */
extern void T1633f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].fill_with */
extern void T1634f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].extend */
extern void T1634f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].resize */
extern void T1454f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T1633f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T1634f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].new_capacity */
extern T6 T1454f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].extendible */
extern T1 T1454f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_objects */
extern T0* T176f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECTS.make */
extern T0* T808c3(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].put_last */
extern void T1454f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1454c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].set_internal_cursor */
extern void T1454f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].new_cursor */
extern T0* T1454f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1635c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1633f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].make_empty */
extern T0* T1634c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].default_create */
extern T0* T1633c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_external_object */
extern T0* T195f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T195f44ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_OBJECT.set_condition */
extern void T807f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONDITIONS.put_last */
extern void T814f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].force_last */
extern void T1456f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION].force */
extern void T1639f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_CONDITION].fill_with */
extern void T1640f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_CONDITION].extend */
extern void T1640f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].resize */
extern void T1456f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION].aliased_resized_area */
extern T0* T1639f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_CONDITION].aliased_resized_area */
extern T0* T1640f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].new_capacity */
extern T6 T1456f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].extendible */
extern T1 T1456f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_conditions */
extern T0* T176f13(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONDITIONS.make_ored */
extern T0* T814c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].put_last */
extern void T1456f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].make */
extern T0* T1456c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].set_internal_cursor */
extern void T1456f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].new_cursor */
extern T0* T1456f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION].make */
extern T0* T1641c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION].make */
extern T0* T1639f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CONDITION].make_empty */
extern T0* T1640c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION].default_create */
extern T0* T1639c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_condition */
extern T0* T195f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T195f56ot1(T0* a1, T0** a2);
/* ET_ECF_LIBRARY_PARSER.new_version_condition */
extern T0* T195f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabj_error */
extern void T63f87(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabj */
extern T0* T201c265(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_COMPILER_VERSION_CONDITION.make */
extern T0* T826c5(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabi_error */
extern void T63f86(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabi */
extern T0* T201c264(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabh_error */
extern void T63f85(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR.make_eabh */
extern T0* T201c263(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR_HANDLER.report_eabg_error */
extern void T63f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabg */
extern T0* T201c262(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabf_error */
extern void T63f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabf */
extern T0* T201c261(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* UT_VERSION.make_major_minor */
extern T0* T78c19(GE_context* ac, T6 a1, T6 a2);
/* UT_VERSION.make_major */
extern T0* T78c18(GE_context* ac, T6 a1);
/* ET_ECF_LIBRARY_PARSER.new_custom_condition */
extern T0* T195f82(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaar_error */
extern void T63f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaar */
extern T0* T201c260(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaas_error */
extern void T63f81(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaas */
extern T0* T201c259(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_custom_condition */
extern T0* T176f29(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_ECF_CUSTOM_CONDITION.make */
extern T0* T824c7(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_CUSTOM_CONDITION.make_excluded */
extern T0* T824c6(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaaq_error */
extern void T63f80(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaaq */
extern T0* T201c258(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaap_error */
extern void T63f79(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaap */
extern T0* T201c257(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaao_error */
extern void T63f78(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaao */
extern T0* T201c256(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaan_error */
extern void T63f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaan */
extern T0* T201c255(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.new_dynamic_runtime_condition */
extern T0* T195f80(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaaw_error */
extern void T63f76(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaaw */
extern T0* T201c254(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_dynamic_runtime_condition */
extern T0* T176f28(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.make */
extern T0* T823c3(GE_context* ac, T1 a1);
/* ET_ECF_ERROR_HANDLER.report_eaav_error */
extern void T63f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaav */
extern T0* T201c253(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.new_dotnet_condition */
extern T0* T195f78(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaau_error */
extern void T63f74(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaau */
extern T0* T201c252(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_dotnet_condition */
extern T0* T176f27(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_DOTNET_CONDITION.make */
extern T0* T822c3(GE_context* ac, T1 a1);
/* ET_ECF_ERROR_HANDLER.report_eaat_error */
extern void T63f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaat */
extern T0* T201c251(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.new_concurrency_condition */
extern T0* T195f76(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eade_error */
extern void T63f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eade */
extern T0* T201c250(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eadd_error */
extern void T63f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eadd */
extern T0* T201c249(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_concurrency_condition */
extern T0* T176f26(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_CONCURRENCY_CONDITION.make */
extern T0* T821c6(GE_context* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.make_excluded */
extern T0* T821c5(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eadc_error */
extern void T63f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eadc */
extern T0* T201c248(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eadb_error */
extern void T63f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadb */
extern T0* T201c247(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY_PARSER.new_multithreaded_condition */
extern T0* T195f74(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaay_error */
extern void T63f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaay */
extern T0* T201c246(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_multithreaded_condition */
extern T0* T176f25(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_MULTITHREADED_CONDITION.make */
extern T0* T820c3(GE_context* ac, T1 a1);
/* ET_ECF_ERROR_HANDLER.report_eaax_error */
extern void T63f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaax */
extern T0* T201c245(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.new_build_condition */
extern T0* T195f72(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaag_error */
extern void T63f66(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaag */
extern T0* T201c244(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaah_error */
extern void T63f65(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaah */
extern T0* T201c243(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_build_condition */
extern T0* T176f24(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_BUILD_CONDITION.make */
extern T0* T819c6(GE_context* ac, T0* a1);
/* ET_ECF_BUILD_CONDITION.make_excluded */
extern T0* T819c5(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eaaf_error */
extern void T63f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaaf */
extern T0* T201c242(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaae_error */
extern void T63f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaae */
extern T0* T201c241(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY_PARSER.new_platform_condition */
extern T0* T195f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabb_error */
extern void T63f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabb */
extern T0* T201c240(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabc_error */
extern void T63f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabc */
extern T0* T201c239(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_platform_condition */
extern T0* T176f23(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_PLATFORM_CONDITION.make */
extern T0* T818c7(GE_context* ac, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.make_excluded */
extern T0* T818c6(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eaba_error */
extern void T63f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaba */
extern T0* T201c238(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaaz_error */
extern void T63f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaaz */
extern T0* T201c237(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_condition */
extern T0* T176f22(GE_context* ac, T0* C);
/* ET_ECF_CONDITIONS.make_anded_empty */
extern T0* T814c7(GE_context* ac);
/* ET_ECF_AST_FACTORY.new_external_object */
extern T0* T176f19(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECT.make */
extern T0* T807c8(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacn_error */
extern void T63f54(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacn */
extern T0* T201c232(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacm_error */
extern void T63f53(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacm */
extern T0* T201c231(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARIES.put_last */
extern void T810f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].force_last */
extern void T1455f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].force */
extern void T1636f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].fill_with */
extern void T1637f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].extend */
extern void T1637f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].resize */
extern void T1455f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T1636f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T1637f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].new_capacity */
extern T6 T1455f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].extendible */
extern T1 T1455f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_libraries */
extern T0* T176f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARIES.make */
extern T0* T810c3(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].put_last */
extern void T1455f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1455c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].set_internal_cursor */
extern void T1455f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].new_cursor */
extern T0* T1455f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1638c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1636f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].make_empty */
extern T0* T1637c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].default_create */
extern T0* T1636c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_external_library */
extern T0* T195f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T195f42ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_LIBRARY.set_condition */
extern void T809f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_library */
extern T0* T176f18(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.make */
extern T0* T809c8(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacl_error */
extern void T63f52(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacl */
extern T0* T201c230(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eack_error */
extern void T63f51(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eack */
extern T0* T201c229(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDES.put_last */
extern void T806f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].force_last */
extern void T1453f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].force */
extern void T1630f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].fill_with */
extern void T1631f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].extend */
extern void T1631f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].resize */
extern void T1453f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T1630f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T1631f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].new_capacity */
extern T6 T1453f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].extendible */
extern T1 T1453f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_includes */
extern T0* T176f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDES.make */
extern T0* T806c3(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].put_last */
extern void T1453f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1453c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].set_internal_cursor */
extern void T1453f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].new_cursor */
extern T0* T1453f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1632c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1630f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].make_empty */
extern T0* T1631c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].default_create */
extern T0* T1630c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_external_include */
extern T0* T195f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T195f40ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_INCLUDE.set_condition */
extern void T805f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_include */
extern T0* T176f17(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDE.make */
extern T0* T805c8(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacj_error */
extern void T63f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacj */
extern T0* T201c228(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaci_error */
extern void T63f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaci */
extern T0* T201c227(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_file_rules */
extern T0* T176f8(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.make */
extern T0* T804c4(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].put_last */
extern void T1452f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.new_file_rule */
extern T0* T195f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T195f38ot1(T0* a1, T0** a2);
/* ET_ECF_FILE_RULE.set_condition */
extern void T803f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_file_rule */
extern T0* T176f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_FILE_RULE.make */
extern T0* T803c10(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_FILE_RULE.compiled_regexp */
extern T0* T803f6(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].forth */
extern void T369f14(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].put_last */
extern void T1451f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].force */
extern void T1624f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].fill_with */
extern void T1625f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].extend */
extern void T1625f7(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_compiled */
extern T1 T304f300(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].item */
extern T0* T369f8(GE_context* ac, T0* C);
/* ET_ECF_FILE_RULE.operating_system */
extern T0* T803f7(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].start */
extern void T369f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1451c9(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].set_internal_cursor */
extern void T1451f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].new_cursor */
extern T0* T1451f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1626c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1624f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].make_empty */
extern T0* T1625c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].default_create */
extern T0* T1624c2(GE_context* ac);
/* DS_HASH_SET [STRING_8].force_last */
extern void T76f68(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.text */
extern T0* T155f20(GE_context* ac, T0* C);
extern T1 T155f20ot1(T0* a1, T0** a2);
/* XM_ELEMENT.string_ */
extern T0* T155f21(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T802f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T1450f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T1622f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T1621f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T1621f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T1450f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1622f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1621f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1450f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T1450f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_adapted_dotnet_assemblies */
extern T0* T176f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.make */
extern T0* T802c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].put_last */
extern void T1450f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1450c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1450f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1450f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1623c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1622f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T1621c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T1622c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_adapted_dotnet_assembly */
extern T0* T195f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T195f36ot1(T0* a1, T0** a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_condition */
extern void T200f18(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_class_renamings */
extern void T200f17(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacs_error */
extern void T63f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacs */
extern T0* T201c221(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.case_insensitive_string_equality_tester */
extern unsigned char ge221os4499;
extern T0* ge221ov4499;
extern T0* T195f11(GE_context* ac, T0* C);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.default_create */
extern T0* T184c3(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.report_eacr_error */
extern void T63f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacr */
extern T0* T201c220(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacq_error */
extern void T63f41(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacq */
extern T0* T201c219(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacp_error */
extern void T63f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacp */
extern T0* T201c218(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaco_error */
extern void T63f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaco */
extern T0* T201c217(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T200f16(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacw_error */
extern void T63f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eacw */
extern T0* T201c226(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_read_only */
extern void T200f15(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_AST_FACTORY.new_adapted_dotnet_assembly */
extern T0* T176f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make */
extern T0* T200c14(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make_adapted_dotnet_assembly */
extern void T200f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T200f11(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_dotnet_assembly */
extern unsigned char ge808os12246;
extern T0* ge808ov12246;
extern T0* T81f242(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.make */
extern T0* T448c100(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.make_from_system */
extern void T448f101(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.set_default_class_mapping */
extern void T448f106(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T448f159(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_class_mapping */
extern void T448f160(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_class */
extern T0* T448f86(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_wide_character_class_mapping */
extern void T448f158(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_string_class_mapping */
extern void T448f157(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_real_ref_class_mapping */
extern void T448f156(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_real_class_mapping */
extern void T448f155(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_natural_ref_class_mapping */
extern void T448f154(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_natural_class_mapping */
extern void T448f153(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_integer_ref_class_mapping */
extern void T448f152(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_integer_class_mapping */
extern void T448f151(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_double_ref_class_mapping */
extern void T448f150(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_double_class_mapping */
extern void T448f149(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_character_ref_class_mapping */
extern void T448f148(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_character_class_mapping */
extern void T448f147(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.tokens */
extern T0* T448f93(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_kernel_types */
extern void T448f105(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T448f146(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T448f145(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_type_type */
extern void T448f144(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_system_string_type */
extern void T448f143(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_system_object_type */
extern void T448f142(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_type */
extern void T448f141(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_32_type */
extern void T448f140(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_8_type */
extern void T448f139(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_special_type */
extern void T448f138(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_routine_type */
extern void T448f137(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_64_type */
extern void T448f136(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_32_type */
extern void T448f135(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_type */
extern void T448f134(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_procedure_type */
extern void T448f133(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_predicate_type */
extern void T448f132(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_pointer_type */
extern void T448f131(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_none_type */
extern void T448f130(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T448f129(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T448f128(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T448f127(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T448f126(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_type */
extern void T448f125(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_iterable_type */
extern void T448f124(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T448f123(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T448f122(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T448f121(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T448f120(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T448f119(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_type */
extern void T448f118(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_function_type */
extern void T448f117(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T448f116(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_exception_type */
extern void T448f115(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_double_type */
extern void T448f114(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_32_type */
extern void T448f113(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_8_type */
extern void T448f112(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_type */
extern void T448f111(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_boolean_type */
extern void T448f110(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_array_type */
extern void T448f109(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_tuple_type */
extern void T448f108(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_any_type */
extern void T448f107(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.make_adapted */
extern void T448f104(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T448f85(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T448f103(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.initialize */
extern void T448f102(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T448f84(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.tokens */
extern T0* T200f10(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eada_error */
extern void T63f47(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eada */
extern T0* T201c225(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacz_error */
extern void T63f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacz */
extern T0* T201c224(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacy_error */
extern void T63f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacy */
extern T0* T201c223(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacx_error */
extern void T63f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacx */
extern T0* T201c222(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_LIBRARIES.put_last */
extern void T801f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].force_last */
extern void T1449f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].force */
extern void T1619f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].fill_with */
extern void T1618f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].extend */
extern void T1618f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].resize */
extern void T1449f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1619f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1618f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].new_capacity */
extern T6 T1449f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].extendible */
extern T1 T1449f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_adapted_libraries */
extern T0* T176f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.make */
extern T0* T801c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].put_last */
extern void T1449f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1449c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].set_internal_cursor */
extern void T1449f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].new_cursor */
extern T0* T1449f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1620c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1619f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].make_empty */
extern T0* T1618c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].default_create */
extern T0* T1619c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_adapted_library */
extern T0* T195f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T195f34ot1(T0* a1, T0** a2);
/* ET_ECF_ADAPTED_LIBRARY.set_condition */
extern void T196f20(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_class_renamings */
extern void T196f19(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_classname_prefix */
extern void T196f18(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacv_error */
extern void T63f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eacv */
extern T0* T201c216(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.set_read_only */
extern void T196f17(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_AST_FACTORY.new_adapted_library */
extern T0* T176f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.make */
extern T0* T196c14(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.make_adapted_library */
extern void T196f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_LIBRARY.default_read_only_value */
extern T1 T196f10(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_library */
extern unsigned char ge808os12245;
extern T0* ge808ov12245;
extern T0* T81f220(GE_context* ac, T0* C);
/* ET_LIBRARY.make */
extern T0* T460c101(GE_context* ac, T0* a1, T0* a2);
/* ET_LIBRARY.make_from_system */
extern void T460f102(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.set_default_class_mapping */
extern void T460f107(GE_context* ac, T0* C);
/* ET_LIBRARY.set_wide_character_ref_class_mapping */
extern void T460f160(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_class_mapping */
extern void T460f161(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.set_wide_character_class_mapping */
extern void T460f159(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_string_class_mapping */
extern void T460f158(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_real_ref_class_mapping */
extern void T460f157(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_real_class_mapping */
extern void T460f156(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_natural_ref_class_mapping */
extern void T460f155(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_natural_class_mapping */
extern void T460f154(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_integer_ref_class_mapping */
extern void T460f153(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_integer_class_mapping */
extern void T460f152(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_double_ref_class_mapping */
extern void T460f151(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_double_class_mapping */
extern void T460f150(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_character_ref_class_mapping */
extern void T460f149(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_character_class_mapping */
extern void T460f148(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.tokens */
extern T0* T460f95(GE_context* ac, T0* C);
/* ET_LIBRARY.set_kernel_types */
extern void T460f106(GE_context* ac, T0* C);
/* ET_LIBRARY.set_wide_character_type */
extern void T460f147(GE_context* ac, T0* C);
/* ET_LIBRARY.set_typed_pointer_type */
extern void T460f146(GE_context* ac, T0* C);
/* ET_LIBRARY.set_type_type */
extern void T460f145(GE_context* ac, T0* C);
/* ET_LIBRARY.set_system_string_type */
extern void T460f144(GE_context* ac, T0* C);
/* ET_LIBRARY.set_system_object_type */
extern void T460f143(GE_context* ac, T0* C);
/* ET_LIBRARY.set_string_type */
extern void T460f142(GE_context* ac, T0* C);
/* ET_LIBRARY.set_string_32_type */
extern void T460f141(GE_context* ac, T0* C);
/* ET_LIBRARY.set_string_8_type */
extern void T460f140(GE_context* ac, T0* C);
/* ET_LIBRARY.set_special_type */
extern void T460f139(GE_context* ac, T0* C);
/* ET_LIBRARY.set_routine_type */
extern void T460f138(GE_context* ac, T0* C);
/* ET_LIBRARY.set_real_64_type */
extern void T460f137(GE_context* ac, T0* C);
/* ET_LIBRARY.set_real_32_type */
extern void T460f136(GE_context* ac, T0* C);
/* ET_LIBRARY.set_real_type */
extern void T460f135(GE_context* ac, T0* C);
/* ET_LIBRARY.set_procedure_type */
extern void T460f134(GE_context* ac, T0* C);
/* ET_LIBRARY.set_predicate_type */
extern void T460f133(GE_context* ac, T0* C);
/* ET_LIBRARY.set_pointer_type */
extern void T460f132(GE_context* ac, T0* C);
/* ET_LIBRARY.set_none_type */
extern void T460f131(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_64_type */
extern void T460f130(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_32_type */
extern void T460f129(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_16_type */
extern void T460f128(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_8_type */
extern void T460f127(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_type */
extern void T460f126(GE_context* ac, T0* C);
/* ET_LIBRARY.set_iterable_type */
extern void T460f125(GE_context* ac, T0* C);
/* ET_LIBRARY.set_ise_exception_manager_type */
extern void T460f124(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_64_type */
extern void T460f123(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_32_type */
extern void T460f122(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_16_type */
extern void T460f121(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_8_type */
extern void T460f120(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_type */
extern void T460f119(GE_context* ac, T0* C);
/* ET_LIBRARY.set_function_type */
extern void T460f118(GE_context* ac, T0* C);
/* ET_LIBRARY.set_exception_manager_type */
extern void T460f117(GE_context* ac, T0* C);
/* ET_LIBRARY.set_exception_type */
extern void T460f116(GE_context* ac, T0* C);
/* ET_LIBRARY.set_double_type */
extern void T460f115(GE_context* ac, T0* C);
/* ET_LIBRARY.set_character_32_type */
extern void T460f114(GE_context* ac, T0* C);
/* ET_LIBRARY.set_character_8_type */
extern void T460f113(GE_context* ac, T0* C);
/* ET_LIBRARY.set_character_type */
extern void T460f112(GE_context* ac, T0* C);
/* ET_LIBRARY.set_boolean_type */
extern void T460f111(GE_context* ac, T0* C);
/* ET_LIBRARY.set_array_type */
extern void T460f110(GE_context* ac, T0* C);
/* ET_LIBRARY.set_tuple_type */
extern void T460f109(GE_context* ac, T0* C);
/* ET_LIBRARY.set_any_type */
extern void T460f108(GE_context* ac, T0* C);
/* ET_LIBRARY.make_adapted */
extern void T460f105(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.default_read_only_value */
extern T1 T460f86(GE_context* ac, T0* C);
/* ET_LIBRARY.set_unknown_kernel_types */
extern void T460f104(GE_context* ac, T0* C);
/* ET_LIBRARY.initialize */
extern void T460f103(GE_context* ac, T0* C);
/* ET_LIBRARY.initialize */
extern void T460f103p1(GE_context* ac, T0* C);
/* ET_LIBRARY.class_name_tester */
extern T0* T460f85(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.tokens */
extern T0* T196f11(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eaad_error */
extern void T63f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaad */
extern T0* T201c215(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaac_error */
extern void T63f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaac */
extern T0* T201c214(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaab_error */
extern void T63f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaab */
extern T0* T201c213(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaaa_error */
extern void T63f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaaa */
extern T0* T201c212(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.new_override */
extern T0* T195f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T195f32ot1(T0* a1, T0** a2);
/* ET_ECF_CLUSTER.set_condition */
extern void T799f63(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_ecf_file_rules */
extern void T799f62(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_ecf_subclusters */
extern void T799f61(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacu_error */
extern void T63f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eacu */
extern T0* T201c211(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.set_read_only */
extern void T799f60(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ERROR_HANDLER.report_each_error */
extern void T63f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_each */
extern T0* T201c210(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.set_recursive */
extern void T799f59(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_override */
extern void T799f58(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_AST_FACTORY.new_cluster */
extern T0* T176f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.make */
extern T0* T799c57(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.set_use_obsolete_syntax */
extern void T799f65(GE_context* ac, T0* C, T1 a1);
/* UT_VERSION.is_less_equal */
extern T1 T78f15(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.ecf_1_4_0 */
extern unsigned char ge189os6317;
extern T0* ge189ov6317;
extern T0* T799f33(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T799f64(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T800f9(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ERROR_HANDLER.report_eacg_error */
extern void T63f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacg */
extern T0* T201c209(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eace_error */
extern void T63f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eace */
extern T0* T201c208(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacf_error */
extern void T63f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacf */
extern T0* T201c207(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacd_error */
extern void T63f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacd */
extern T0* T201c206(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_clusters */
extern T0* T176f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.make */
extern T0* T800c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].put_last */
extern void T1448f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.new_cluster */
extern T0* T195f30(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
extern T1 T195f30ot1(T0* a1, T0** a2);
/* ET_ECF_ERROR_HANDLER.report_eact_error */
extern void T63f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eact */
extern T0* T201c205(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaam_error */
extern void T63f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaam */
extern T0* T201c204(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaal_error */
extern void T63f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaal */
extern T0* T201c203(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaaj_error */
extern void T63f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaaj */
extern T0* T201c202(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaak_error */
extern void T63f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaak */
extern T0* T201c201(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaai_error */
extern void T63f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaai */
extern T0* T201c200(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_target */
extern T0* T176f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.make */
extern T0* T65c27(GE_context* ac, T0* a1);
/* ET_ECF_OPTIONS.make */
extern T0* T813c7(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_OPTIONS.make */
extern T0* T813f7ac1(T0* a1);
/* KL_STRING_ROUTINES.case_insensitive_hash_code */
extern T6 T34f16(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_hash_function */
extern void T54f101(GE_context* ac, T0* C, T0* a1);
/* KL_AGENT_HASH_FUNCTION [STRING_8].make */
extern T0* T1404c3(GE_context* ac, T0* a1);
/* ET_ECF_OPTIONS.string_ */
extern T0* T813f4(GE_context* ac, T0* C);
/* ET_ECF_OPTIONS.case_insensitive_string_equality_tester */
extern T0* T813f3(GE_context* ac, T0* C);
/* ET_ECF_SETTINGS.make */
extern T0* T812c7(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_SETTINGS.make */
extern T0* T812f7ac1(T0* a1);
/* ET_ECF_SETTINGS.string_ */
extern T0* T812f4(GE_context* ac, T0* C);
/* ET_ECF_SETTINGS.case_insensitive_string_equality_tester */
extern T0* T812f3(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.set_secondary_variables */
extern void T67f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.execution_environment */
extern T0* T65f20(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.make */
extern T0* T67c8(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_VARIABLES.make */
extern T0* T67f8ac1(T0* a1);
/* ET_ECF_VARIABLES.string_ */
extern T0* T67f6(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.case_insensitive_string_equality_tester */
extern T0* T67f5(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.execution_environment */
extern T0* T67f4(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eabe_error */
extern void T63f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabe */
extern T0* T201c199(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabd_error */
extern void T63f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabd */
extern T0* T201c198(GE_context* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].item */
extern T0* T417f8(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].start */
extern void T417f11(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_start */
extern void T839f14(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_off */
extern T1 T839f6(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].off */
extern T1 T417f9(GE_context* ac, T0* C);
/* XM_ELEMENT.new_cursor */
extern T0* T155f9(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].new_cursor */
extern T0* T839f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].make */
extern T0* T417c10(GE_context* ac, T0* a1);
/* ET_ECF_LIBRARY.set_ecf_version */
extern void T189f119(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.ecf_version */
extern T0* T195f25(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.matches */
extern T1 T304f188(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_ecf_namespace */
extern void T189f118(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_uuid */
extern void T189f117(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabn_error */
extern void T63f98(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabn */
extern T0* T201c277(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.attribute_name */
extern T0* T195f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabm_error */
extern void T63f97(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabm */
extern T0* T201c276(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].found_item */
extern T0* T178f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].found */
extern T1 T178f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].search */
extern void T178f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].search_position */
extern void T178f64(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabo_error */
extern void T63f96(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabo */
extern T0* T201c275(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_library */
extern T0* T176f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.make */
extern T0* T189c115(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.make_library */
extern void T189f123(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.make_from_system */
extern void T189f124(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.set_default_class_mapping */
extern void T189f129(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_wide_character_ref_class_mapping */
extern void T189f182(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_class_mapping */
extern void T189f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.set_wide_character_class_mapping */
extern void T189f181(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_string_class_mapping */
extern void T189f180(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_real_ref_class_mapping */
extern void T189f179(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_real_class_mapping */
extern void T189f178(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_natural_ref_class_mapping */
extern void T189f177(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_natural_class_mapping */
extern void T189f176(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_integer_ref_class_mapping */
extern void T189f175(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_integer_class_mapping */
extern void T189f174(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_double_ref_class_mapping */
extern void T189f173(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_double_class_mapping */
extern void T189f172(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_character_ref_class_mapping */
extern void T189f171(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_character_class_mapping */
extern void T189f170(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.tokens */
extern T0* T189f106(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_kernel_types */
extern void T189f128(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_wide_character_type */
extern void T189f169(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_typed_pointer_type */
extern void T189f168(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_type_type */
extern void T189f167(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_system_string_type */
extern void T189f166(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_system_object_type */
extern void T189f165(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_type */
extern void T189f164(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_32_type */
extern void T189f163(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_8_type */
extern void T189f162(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_special_type */
extern void T189f161(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_routine_type */
extern void T189f160(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_64_type */
extern void T189f159(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_32_type */
extern void T189f158(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_type */
extern void T189f157(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_procedure_type */
extern void T189f156(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_predicate_type */
extern void T189f155(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_pointer_type */
extern void T189f154(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_none_type */
extern void T189f153(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_64_type */
extern void T189f152(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_32_type */
extern void T189f151(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_16_type */
extern void T189f150(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_8_type */
extern void T189f149(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_type */
extern void T189f148(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_iterable_type */
extern void T189f147(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_ise_exception_manager_type */
extern void T189f146(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_64_type */
extern void T189f145(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_32_type */
extern void T189f144(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_16_type */
extern void T189f143(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_8_type */
extern void T189f142(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_type */
extern void T189f141(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_function_type */
extern void T189f140(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_exception_manager_type */
extern void T189f139(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_exception_type */
extern void T189f138(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_double_type */
extern void T189f137(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_32_type */
extern void T189f136(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_8_type */
extern void T189f135(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_type */
extern void T189f134(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_boolean_type */
extern void T189f133(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_array_type */
extern void T189f132(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_tuple_type */
extern void T189f131(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_any_type */
extern void T189f130(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.make_adapted */
extern void T189f127(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.default_read_only_value */
extern T1 T189f97(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_unknown_kernel_types */
extern void T189f126(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.initialize */
extern void T189f125(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.initialize */
extern void T189f125p1(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.class_name_tester */
extern T0* T189f96(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.make_config */
extern void T189f122(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.attribute_by_name */
extern T0* T155f5(GE_context* ac, T0* C, T0* a1);
extern T1 T155f5ot1(T0* a1, T0** a2);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].go_after */
extern void T417f14(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_go_after */
extern void T839f17(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_after */
extern void T417f16(GE_context* ac, T0* C);
/* XM_ELEMENT.attribute_same_name */
extern T1 T155f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_string */
extern T1 T155f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.string_equality_tester */
extern unsigned char ge313os1986;
extern T0* ge313ov1986;
extern T0* T155f15(GE_context* ac, T0* C);
/* UC_STRING_EQUALITY_TESTER.default_create */
extern T0* T57c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.string_ */
extern T0* T195f16(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY_PARSER.windows_file_system */
extern T0* T195f15(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY_PARSER.file_system */
extern T0* T195f14(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY_PARSER.unix_file_system */
extern T0* T195f21(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY_PARSER.operating_system */
extern T0* T195f20(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eabv_error */
extern void T63f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabv */
extern T0* T201c191(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ADAPTED_LIBRARIES.library */
extern T0* T190f4(GE_context* ac, T0* C, T6 a1);
/* ET_ADAPTED_LIBRARIES.count */
extern T6 T190f3(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.select_target */
extern void T64f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.update_state */
extern void T65f38(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_STATE.set_dotnet */
extern void T187f11(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.set_scoop */
extern void T187f10(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.set_multithreaded */
extern void T187f9(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.set_finalize_mode */
extern void T187f8(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.make */
extern T0* T187c7(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_TARGETS.target */
extern T0* T188f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_TARGETS.count */
extern T6 T188f3(GE_context* ac, T0* C);
/* ET_ECF_TARGETS.is_empty */
extern T1 T188f4(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_system */
extern T0* T62f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.fill_system_config */
extern void T62f105(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T62f105ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.set_library_target */
extern void T64f205(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.attribute_name */
extern T0* T62f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.set_targets */
extern void T64f204(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_target */
extern T0* T62f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T62f27ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.add_option */
extern void T62f108(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_setting */
extern void T62f107(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_variable */
extern void T62f106(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.new_root */
extern T0* T62f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.attribute_value */
extern T0* T62f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.is_false */
extern T1 T62f54(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.is_true */
extern T1 T62f53(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_object */
extern T0* T62f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T62f45ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_condition */
extern T0* T62f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T62f57ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_version_condition */
extern T0* T62f85(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_custom_condition */
extern T0* T62f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_dynamic_runtime_condition */
extern T0* T62f81(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_dotnet_condition */
extern T0* T62f79(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_concurrency_condition */
extern T0* T62f77(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_multithreaded_condition */
extern T0* T62f75(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_build_condition */
extern T0* T62f73(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_platform_condition */
extern T0* T62f71(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_external_library */
extern T0* T62f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T62f43ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_external_include */
extern T0* T62f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T62f41ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_file_rule */
extern T0* T62f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T62f39ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assembly */
extern T0* T62f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T62f37ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.case_insensitive_string_equality_tester */
extern T0* T62f14(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_adapted_library */
extern T0* T62f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T62f35ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_override */
extern T0* T62f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T62f33ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_cluster */
extern T0* T62f31(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
extern T1 T62f31ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.set_ecf_version */
extern void T64f203(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.ecf_version */
extern T0* T62f25(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_ecf_namespace */
extern void T64f202(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_uuid */
extern void T64f201(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabl_error */
extern void T63f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabl */
extern T0* T201c194(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabk_error */
extern void T63f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabk */
extern T0* T201c193(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.string_ */
extern T0* T62f19(GE_context* ac, T0* C);
/* XM_TREE_CALLBACKS_PIPE.document */
extern T0* T158f5(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.is_correct */
extern T1 T165f140(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.parse_from_stream */
extern void T165f206(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.parse_with_events */
extern void T165f213(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_finish */
extern void T165f219(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.parse */
extern void T165f218(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_pop_last_value */
extern void T165f228(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.yy_push_error_value */
extern void T165f227(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_do_action */
extern void T165f226(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_notation_declaration */
extern void T165f256(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_notation_declaration */
extern void T579f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.set_public */
extern void T587f5(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T586f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T588f4(GE_context* ac, T0* C, T6 a1);
/* XM_DTD_EXTERNAL_ID.set_system */
extern void T587f4(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_external_id */
extern T0* T165f174(GE_context* ac, T0* C);
/* XM_DTD_EXTERNAL_ID.make */
extern T0* T587c3(GE_context* ac);
/* XM_EIFFEL_PARSER.when_pe_entity_declared */
extern void T165f255(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].force_new */
extern void T575f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_put */
extern void T575f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_put */
extern void T575f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].force */
extern void T1357f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].fill_with */
extern void T1353f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].extend */
extern void T1353f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_put */
extern void T575f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_put */
extern void T575f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_item */
extern T6 T575f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].hash_position */
extern T6 T575f27(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_item */
extern T6 T575f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].resize */
extern void T575f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_resize */
extern void T575f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].special_integer_ */
extern T0* T575f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_resize */
extern void T575f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_resize */
extern void T575f55(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1357f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1353f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_item */
extern T0* T575f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_resize */
extern void T575f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_modulus */
extern T6 T575f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_capacity */
extern T6 T575f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].unset_found_item */
extern void T575f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].has */
extern T1 T575f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].search_position */
extern void T575f40(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_def */
extern T0* T610c210(GE_context* ac, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_literal */
extern void T610f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.default_create */
extern T0* T577c3(GE_context* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.make_scanner */
extern void T610f213(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T610f215(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset_sent */
extern void T610f218(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T610f215p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T610f215p0(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T610f215p2(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T610f215p3(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.make_with_buffer */
extern void T610f214(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_load_input_buffer */
extern void T610f217(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_content */
extern void T610f220(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T610f216(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T610f216p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_build_tables */
extern void T610f219(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template */
extern unsigned char ge1296os29268;
extern T0* ge1296ov29268;
extern T0* T610f54(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_fixed_array */
extern T0* T610f57(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_5 */
extern void T610f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_array_subcopy */
extern void T610f292(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PE_ENTITY_DEF.integer_array_ */
extern T0* T610f59(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_4 */
extern void T610f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_3 */
extern void T610f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_2 */
extern void T610f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_1 */
extern void T610f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_meta_template */
extern unsigned char ge1296os29267;
extern T0* ge1296ov29267;
extern T0* T610f52(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template */
extern unsigned char ge1296os29264;
extern T0* ge1296ov29264;
extern T0* T610f93(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_2 */
extern void T610f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_1 */
extern void T610f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template */
extern unsigned char ge1296os29258;
extern T0* ge1296ov29258;
extern T0* T610f71(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_5 */
extern void T610f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_4 */
extern void T610f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_3 */
extern void T610f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_2 */
extern void T610f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_1 */
extern void T610f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template */
extern unsigned char ge1296os29252;
extern T0* ge1296ov29252;
extern T0* T610f61(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_5 */
extern void T610f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_4 */
extern void T610f224(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_3 */
extern void T610f223(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_2 */
extern void T610f222(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_1 */
extern void T610f221(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template */
extern unsigned char ge1296os29224;
extern T0* ge1296ov29224;
extern T0* T610f55(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_27 */
extern void T610f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_26 */
extern void T610f290(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_25 */
extern void T610f289(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_24 */
extern void T610f288(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_23 */
extern void T610f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_22 */
extern void T610f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_21 */
extern void T610f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_20 */
extern void T610f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_19 */
extern void T610f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_18 */
extern void T610f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_17 */
extern void T610f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_16 */
extern void T610f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_15 */
extern void T610f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_14 */
extern void T610f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_13 */
extern void T610f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_12 */
extern void T610f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_11 */
extern void T610f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_10 */
extern void T610f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_9 */
extern void T610f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_8 */
extern void T610f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_7 */
extern void T610f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_6 */
extern void T610f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_5 */
extern void T610f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_4 */
extern void T610f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_3 */
extern void T610f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_2 */
extern void T610f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_1 */
extern void T610f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template */
extern unsigned char ge1296os29196;
extern T0* ge1296ov29196;
extern T0* T610f51(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_27 */
extern void T610f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_26 */
extern void T610f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_25 */
extern void T610f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_24 */
extern void T610f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_23 */
extern void T610f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_22 */
extern void T610f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_21 */
extern void T610f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_20 */
extern void T610f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_19 */
extern void T610f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_18 */
extern void T610f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_17 */
extern void T610f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_16 */
extern void T610f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_15 */
extern void T610f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_14 */
extern void T610f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_13 */
extern void T610f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_12 */
extern void T610f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_11 */
extern void T610f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_10 */
extern void T610f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_9 */
extern void T610f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_8 */
extern void T610f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_7 */
extern void T610f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_6 */
extern void T610f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_5 */
extern void T610f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_4 */
extern void T610f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_3 */
extern void T610f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_2 */
extern void T610f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_1 */
extern void T610f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.special_integer_ */
extern T0* T610f56(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.empty_buffer */
extern T0* T610f53(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.make */
extern T0* T1349c8(GE_context* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.make_external */
extern void T610f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_external_entity */
extern T0* T165f173(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.make_external */
extern T0* T607c209(GE_context* ac, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_scanner */
extern void T607f210(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T607f212(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T607f212p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T607f212p0(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T607f212p2(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.make_with_buffer */
extern void T607f211(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_load_input_buffer */
extern void T607f214(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_content */
extern void T607f216(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T607f213(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T607f213p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_build_tables */
extern void T607f215(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template */
extern T0* T607f52(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_fixed_array */
extern T0* T607f55(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_5 */
extern void T607f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_array_subcopy */
extern void T607f288(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_ENTITY_DEF.integer_array_ */
extern T0* T607f57(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_4 */
extern void T607f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_3 */
extern void T607f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_2 */
extern void T607f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_1 */
extern void T607f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_meta_template */
extern T0* T607f50(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template */
extern T0* T607f90(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template_2 */
extern void T607f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template_1 */
extern void T607f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template */
extern T0* T607f69(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_5 */
extern void T607f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_4 */
extern void T607f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_3 */
extern void T607f224(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_2 */
extern void T607f223(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_1 */
extern void T607f222(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template */
extern T0* T607f59(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_5 */
extern void T607f221(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_4 */
extern void T607f220(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_3 */
extern void T607f219(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_2 */
extern void T607f218(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_1 */
extern void T607f217(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template */
extern T0* T607f53(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_27 */
extern void T607f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_26 */
extern void T607f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_25 */
extern void T607f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_24 */
extern void T607f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_23 */
extern void T607f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_22 */
extern void T607f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_21 */
extern void T607f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_20 */
extern void T607f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_19 */
extern void T607f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_18 */
extern void T607f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_17 */
extern void T607f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_16 */
extern void T607f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_15 */
extern void T607f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_14 */
extern void T607f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_13 */
extern void T607f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_12 */
extern void T607f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_11 */
extern void T607f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_10 */
extern void T607f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_9 */
extern void T607f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_8 */
extern void T607f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_7 */
extern void T607f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_6 */
extern void T607f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_5 */
extern void T607f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_4 */
extern void T607f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_3 */
extern void T607f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_2 */
extern void T607f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_1 */
extern void T607f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template */
extern T0* T607f49(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_27 */
extern void T607f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_26 */
extern void T607f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_25 */
extern void T607f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_24 */
extern void T607f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_23 */
extern void T607f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_22 */
extern void T607f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_21 */
extern void T607f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_20 */
extern void T607f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_19 */
extern void T607f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_18 */
extern void T607f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_17 */
extern void T607f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_16 */
extern void T607f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_15 */
extern void T607f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_14 */
extern void T607f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_13 */
extern void T607f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_12 */
extern void T607f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_11 */
extern void T607f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_10 */
extern void T607f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_9 */
extern void T607f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_8 */
extern void T607f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_7 */
extern void T607f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_6 */
extern void T607f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_5 */
extern void T607f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_4 */
extern void T607f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_3 */
extern void T607f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_2 */
extern void T607f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_1 */
extern void T607f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.special_integer_ */
extern T0* T607f70(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.empty_buffer */
extern T0* T607f65(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_entity_declaration */
extern void T165f254(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_DTD_CALLBACKS_NULL.on_entity_declaration */
extern void T579f7(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_EIFFEL_PARSER.when_entity_declared */
extern void T165f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_literal_entity */
extern T0* T165f172(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_literal */
extern T0* T607c208(GE_context* ac, T0* a1, T0* a2);
/* XM_DTD_ATTRIBUTE_CONTENT.set_default_value */
extern void T596f26(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_fixed */
extern void T596f25(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_implied */
extern void T596f24(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_required */
extern void T596f23(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].aliased_resized_area */
extern T0* T598f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].aliased_resized_area */
extern T0* T600f4(GE_context* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING_8].force_last */
extern void T599f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [STRING_8].put_right */
extern void T1364f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [STRING_8].attach_left */
extern void T1364f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [STRING_8].make */
extern T0* T1364c4(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.new_string_bilinked_list */
extern T0* T165f169(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].set_equality_tester */
extern void T599f12(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.string_equality_tester */
extern T0* T165f184(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].make */
extern T0* T599c10(GE_context* ac);
/* DS_BILINKED_LIST [STRING_8].set_internal_cursor */
extern void T599f13(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].new_cursor */
extern T0* T599f6(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].make */
extern T0* T1363c8(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].force */
extern void T598f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].fill_with */
extern void T600f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].extend */
extern void T600f10(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration_list */
extern void T596f22(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration */
extern void T596f27(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.default_enumeration_list */
extern unsigned char ge1206os29744;
extern T0* ge1206ov29744;
extern T0* T596f11(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].make */
extern T0* T143c17(GE_context* ac);
/* DS_LINKED_LIST [STRING_8].set_internal_cursor */
extern void T143f22(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].new_cursor */
extern T0* T143f11(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].make */
extern T0* T174c8(GE_context* ac, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_notation */
extern void T596f21(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_token */
extern void T596f20(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_entity */
extern void T596f19(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_list_type */
extern void T596f18(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id_ref */
extern void T596f17(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id */
extern void T596f16(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_data */
extern void T596f15(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content */
extern T0* T165f168(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T595f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T597f4(GE_context* ac, T0* C, T6 a1);
/* XM_DTD_ATTRIBUTE_CONTENT.make */
extern T0* T596c12(GE_context* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].force */
extern void T595f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].fill_with */
extern void T597f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].extend */
extern void T597f10(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.copy_default */
extern void T596f14(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_implied */
extern T1 T596f10(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_required */
extern T1 T596f9(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.has_default_value */
extern T1 T596f8(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_fixed */
extern T1 T596f7(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_name */
extern void T596f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].force */
extern void T592f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].fill_with */
extern void T594f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].extend */
extern void T594f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T592f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T594f4(GE_context* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].force_last */
extern void T593f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].put_right */
extern void T1362f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].attach_left */
extern void T1362f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1362c4(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content_list */
extern T0* T165f166(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T593c7(GE_context* ac);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].set_internal_cursor */
extern void T593f9(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].new_cursor */
extern T0* T593f5(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1361c8(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.on_attribute_declarations */
extern void T165f252(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].forth */
extern void T1361f10(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_forth */
extern void T593f11(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].add_traversing_cursor */
extern void T593f12(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set_next_cursor */
extern void T1361f12(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].remove_traversing_cursor */
extern void T593f13(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set */
extern void T1361f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* XM_EIFFEL_PARSER.on_attribute_declaration */
extern void T165f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_DTD_CALLBACKS_NULL.on_attribute_declaration */
extern void T579f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].item */
extern T0* T1361f6(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].start */
extern void T1361f9(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_start */
extern void T593f10(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_off */
extern T1 T593f6(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].off */
extern T1 T1361f7(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_more */
extern void T590f11(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_mixed */
extern T0* T590c10(GE_context* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_mixed */
extern void T590f21(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_choice */
extern void T590f19(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_list */
extern void T590f16(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_default */
extern void T590f22(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one */
extern void T590f12(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_sequence */
extern void T590f20(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1360c6(GE_context* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].set_internal_cursor */
extern void T1360f9(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].new_cursor */
extern T0* T1360f5(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1544c3(GE_context* ac, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_sequence */
extern T0* T590c9(GE_context* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_last */
extern void T1360f8(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].put_right */
extern void T1545f5(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].attach_left */
extern void T1545f6(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1545c4(GE_context* ac, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_choice */
extern T0* T590c8(GE_context* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_first */
extern void T1360f7(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.element_name */
extern T0* T165f161(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_name */
extern T0* T590c15(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.set_element_repetition */
extern void T165f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_one */
extern void T590f14(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one_or_more */
extern void T590f13(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_any */
extern T0* T590c7(GE_context* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_any */
extern void T590f18(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].force */
extern void T589f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].fill_with */
extern void T591f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].extend */
extern void T591f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T589f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T591f4(GE_context* ac, T0* C, T6 a1);
/* XM_DTD_ELEMENT_CONTENT.make_empty */
extern T0* T590c6(GE_context* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_empty */
extern void T590f17(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_element_declaration */
extern void T165f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_element_declaration */
extern void T579f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_attribute */
extern void T165f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].has */
extern T1 T584f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].search_position */
extern void T584f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].hash_position */
extern T6 T584f24(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.hash_code */
extern T6 T581f16(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.item */
extern T0* T581f17(GE_context* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING_8].item */
extern T0* T599f8(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].test */
extern T1 T1358f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_item */
extern T0* T584f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_item */
extern T0* T584f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_item */
extern T6 T584f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_equality_tester */
extern T0* T584f17(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_item */
extern T6 T584f25(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].force */
extern void T583f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].fill_with */
extern void T585f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].extend */
extern void T585f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T583f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T585f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].force_new */
extern void T584f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_put */
extern void T584f39(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_put */
extern void T584f38(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_put */
extern void T584f37(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].resize */
extern void T584f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_resize */
extern void T584f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].special_integer_ */
extern T0* T584f28(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_resize */
extern void T584f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_resize */
extern void T584f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_resize */
extern void T584f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_modulus */
extern T6 T584f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_capacity */
extern T6 T584f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].unset_found_item */
extern void T584f35(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_name_set */
extern T0* T165f154(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_equal */
extern T0* T584c31(GE_context* ac, T6 a1);
/* detachable KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T1358c2(GE_context* ac);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make */
extern void T584f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].set_internal_cursor */
extern void T584f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_cursor */
extern T0* T584f21(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME].make */
extern T0* T1359c4(GE_context* ac, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_slots */
extern void T584f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_clashes */
extern void T584f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_key_storage */
extern void T584f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_item_storage */
extern void T584f40(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].make */
extern T0* T580f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].make_empty */
extern T0* T582c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T580c3(GE_context* ac);
/* XM_EIFFEL_PARSER.on_start_tag */
extern void T165f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER.on_end_tag */
extern void T165f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER_NAME.local_part */
extern T0* T581f11(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].forth */
extern void T1363f10(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_forth */
extern void T599f15(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].add_traversing_cursor */
extern void T599f16(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T1363f12(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T599f17(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set */
extern void T1363f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [STRING_8].item */
extern T0* T1363f6(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].start */
extern void T1363f9(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_start */
extern void T599f14(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].cursor_off */
extern T1 T599f9(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].off */
extern T1 T1363f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.string_ */
extern T0* T581f10(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.last */
extern T0* T581f9(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].last */
extern T0* T599f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.ns_prefix */
extern T0* T581f8(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.is_namespace_name */
extern T1 T581f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern void T581f18(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern T0* T581c18(GE_context* ac);
/* XM_EIFFEL_PARSER_NAME.new_string_bilinked_list */
extern T0* T581f15(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.string_equality_tester */
extern T0* T581f14(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_start_tag_finish */
extern void T165f246(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.is_equal */
extern T1 T581f6(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.same_string */
extern T1 T581f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.when_external_dtd */
extern void T165f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern T0* T608c201(GE_context* ac);
/* XM_EIFFEL_SCANNER_DTD.set_start_condition */
extern void T608f208(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern void T608f201p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T608f210(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T608f210p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T608f210p0(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_with_buffer */
extern void T608f209(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_load_input_buffer */
extern void T608f220(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_content */
extern void T608f221(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T608f219(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T608f219p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_build_tables */
extern void T608f224(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template */
extern T0* T608f195(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_fixed_array */
extern T0* T608f198(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_5 */
extern void T608f295(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_array_subcopy */
extern void T608f296(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER_DTD.integer_array_ */
extern T0* T608f200(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_4 */
extern void T608f294(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_3 */
extern void T608f293(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_2 */
extern void T608f292(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_1 */
extern void T608f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_meta_template */
extern T0* T608f194(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template */
extern T0* T608f193(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template_2 */
extern void T608f290(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template_1 */
extern void T608f289(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template */
extern T0* T608f192(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_5 */
extern void T608f288(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_4 */
extern void T608f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_3 */
extern void T608f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_2 */
extern void T608f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_1 */
extern void T608f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template */
extern T0* T608f191(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_5 */
extern void T608f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_4 */
extern void T608f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_3 */
extern void T608f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_2 */
extern void T608f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_1 */
extern void T608f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template */
extern T0* T608f190(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_27 */
extern void T608f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_26 */
extern void T608f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_25 */
extern void T608f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_24 */
extern void T608f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_23 */
extern void T608f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_22 */
extern void T608f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_21 */
extern void T608f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_20 */
extern void T608f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_19 */
extern void T608f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_18 */
extern void T608f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_17 */
extern void T608f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_16 */
extern void T608f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_15 */
extern void T608f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_14 */
extern void T608f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_13 */
extern void T608f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_12 */
extern void T608f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_11 */
extern void T608f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_10 */
extern void T608f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_9 */
extern void T608f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_8 */
extern void T608f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_7 */
extern void T608f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_6 */
extern void T608f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_5 */
extern void T608f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_4 */
extern void T608f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_3 */
extern void T608f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_2 */
extern void T608f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_1 */
extern void T608f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template */
extern T0* T608f189(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_27 */
extern void T608f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_26 */
extern void T608f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_25 */
extern void T608f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_24 */
extern void T608f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_23 */
extern void T608f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_22 */
extern void T608f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_21 */
extern void T608f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_20 */
extern void T608f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_19 */
extern void T608f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_18 */
extern void T608f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_17 */
extern void T608f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_16 */
extern void T608f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_15 */
extern void T608f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_14 */
extern void T608f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_13 */
extern void T608f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_12 */
extern void T608f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_11 */
extern void T608f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_10 */
extern void T608f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_9 */
extern void T608f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_8 */
extern void T608f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_7 */
extern void T608f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_6 */
extern void T608f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_5 */
extern void T608f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_4 */
extern void T608f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_3 */
extern void T608f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_2 */
extern void T608f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_1 */
extern void T608f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.special_integer_ */
extern T0* T608f62(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.empty_buffer */
extern T0* T608f50(GE_context* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].force */
extern void T574f8(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.null_resolver */
extern unsigned char ge1294os15030;
extern T0* ge1294ov15030;
extern T0* T165f94(GE_context* ac, T0* C);
/* XM_NULL_EXTERNAL_RESOLVER.last_error */
extern T0* T577f1(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.resolve_external_id */
extern void T165f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.resolve */
extern void T577f5(GE_context* ac, T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_public */
extern void T577f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].force */
extern void T586f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].fill_with */
extern void T588f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].extend */
extern void T588f10(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_end */
extern void T165f244(GE_context* ac, T0* C);
/* XM_DTD_CALLBACKS_NULL.on_dtd_end */
extern void T579f5(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_doctype */
extern void T165f243(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.on_doctype */
extern void T579f4(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_DECLARATION.set_encoding */
extern void T603f9(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_DECLARATION.set_stand_alone */
extern void T603f8(GE_context* ac, T0* C, T1 a1);
/* XM_EIFFEL_DECLARATION.set_version */
extern void T603f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].force */
extern void T602f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].fill_with */
extern void T604f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].extend */
extern void T604f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T602f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T604f4(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_DECLARATION.make */
extern T0* T603c7(GE_context* ac);
/* XM_EIFFEL_DECLARATION.process */
extern void T603f10(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_xml_declaration */
extern void T165f287(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_PARSER.apply_encoding */
extern void T165f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_content */
extern void T165f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_processing_instruction */
extern void T165f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_dtd_processing_instruction */
extern void T579f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_processing_instruction */
extern void T165f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_dtd_comment */
extern void T165f238(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_CALLBACKS_NULL.on_dtd_comment */
extern void T579f2(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_comment */
extern void T165f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.entity_referenced_in_entity_value */
extern T0* T165f144(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.defined_entity_referenced */
extern T0* T165f196(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.external_entity_to_string */
extern T0* T165f202(GE_context* ac, T0* C, T0* a1);
/* STRING_8.remove */
extern void T17f73(GE_context* ac, T0* C, T6 a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_finish */
extern void T577f6(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_string */
extern void T848f30(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.string_ */
extern T0* T848f8(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.platform */
extern T0* T232f2(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.integer_ */
extern T0* T165f203(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.make_from_stream */
extern T0* T848c29(GE_context* ac, T0* a1);
/* DS_LINKED_QUEUE [CHARACTER_8].make */
extern T0* T1462c5(GE_context* ac);
/* XM_NULL_EXTERNAL_RESOLVER.last_stream */
extern T0* T577f2(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item */
extern T0* T575f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_item */
extern T0* T575f35(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.string_ */
extern T0* T165f89(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.force_error */
extern void T165f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.report_error */
extern void T165f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_error */
extern void T165f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.last_error_extended_description */
extern T0* T165f92(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.safe_error_component */
extern T0* T165f87(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_safe_error_character */
extern T1 T165f97(GE_context* ac, T0* C, T2 a1);
/* XM_EIFFEL_PARSER.setup_error_state */
extern void T165f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.onstring_utf8 */
extern T0* T165f133(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.maximum_item_code */
extern T6 T165f191(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_latin1 */
extern T1 T165f190(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_from_utf8 */
extern T0* T165f186(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.make_from_utf8 */
extern T0* T847c66(GE_context* ac, T0* a1);
/* UC_UTF8_STRING.append_utf8 */
extern void T847f84(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_ROUTINES.valid_utf8 */
extern T1 T846f1(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_ROUTINES.is_encoded_next_byte */
extern T1 T846f10(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.is_encoded_second_byte */
extern T1 T846f5(GE_context* ac, T0* C, T2 a1, T2 a2);
/* UC_UTF8_ROUTINES.is_encoded_first_byte */
extern T1 T846f2(GE_context* ac, T0* C, T2 a1);
/* XM_EIFFEL_PARSER.utf8 */
extern T0* T165f189(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.is_string_mode_ascii */
extern T1 T165f187(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.onstring_ascii */
extern T0* T165f131(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_unicode */
extern T1 T165f185(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string */
extern T0* T165f142(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_string */
extern unsigned char ge1294os15097;
extern T0* ge1294ov15097;
extern T0* T165f195(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_uc */
extern unsigned char ge1294os15098;
extern T0* ge1294ov15098;
extern T0* T165f194(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_empty */
extern T0* T165f201(GE_context* ac, T0* C);
/* UC_UTF8_STRING.make_empty */
extern T0* T847c70(GE_context* ac);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].force */
extern void T580f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].fill_with */
extern void T582f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].extend */
extern void T582f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T580f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T582f4(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.namespace_force_last */
extern void T165f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER_NAME.force_last */
extern void T581f19(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.can_force_last */
extern T1 T581f12(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_namespace_name */
extern T0* T165f141(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_namespaces */
extern T0* T581c20(GE_context* ac);
/* XM_EIFFEL_PARSER.yy_push_last_value */
extern void T165f225(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.accept */
extern void T165f224(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_do_error_action */
extern void T165f222(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.report_eof_expected_error */
extern void T165f233(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.read_token */
extern void T165f221(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.process_attribute_entity */
extern void T165f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity_scanner */
extern void T165f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_start_condition */
extern void T607f290(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_start_condition */
extern void T610f294(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.apply_input_buffer */
extern void T607f289(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.make */
extern T0* T899c9(GE_context* ac, T0* a1);
/* UC_UTF8_ROUTINES.to_utf8 */
extern T0* T846f32(GE_context* ac, T0* C, T0* a1);
extern T1 T846f32ot1(T0* a1, T0** a2);
/* UC_UTF8_ROUTINES.append_code_to_utf8 */
extern void T846f37(GE_context* ac, T0* C, T0* a1, T6 a2);
/* UC_UTF8_ROUTINES.integer_ */
extern T0* T846f29(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.utf8 */
extern T0* T607f68(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.fatal_error */
extern void T607f297(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.apply_input_buffer */
extern void T610f293(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.utf8 */
extern T0* T610f70(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.fatal_error */
extern void T610f301(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_literal */
extern T1 T607f63(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.is_external */
extern T1 T607f66(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_literal */
extern T1 T610f65(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_external */
extern T1 T610f68(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.process_entity */
extern void T165f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_pe_entity */
extern void T165f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.special_integer_ */
extern T0* T165f124(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_init_value_stacks */
extern void T165f220(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_clear_all */
extern void T165f229(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.clear_all */
extern void T165f257(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.clear_stacks */
extern void T165f263(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T165f264(GE_context* ac, T0* C);
/* SPECIAL [XM_EIFFEL_DECLARATION].keep_head */
extern void T604f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].set_count */
extern void T604f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].keep_head */
extern void T600f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].set_count */
extern void T600f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].keep_head */
extern void T597f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].set_count */
extern void T597f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].keep_head */
extern void T594f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].set_count */
extern void T594f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].keep_head */
extern void T591f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].set_count */
extern void T591f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].keep_head */
extern void T588f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].set_count */
extern void T588f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].keep_head */
extern void T585f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].set_count */
extern void T585f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].keep_head */
extern void T582f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].set_count */
extern void T582f9(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.abort */
extern void T165f223(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_start */
extern void T165f217(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.reset_error_state */
extern void T165f216(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.reset */
extern void T165f212(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].wipe_out */
extern void T575f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_wipe_out */
extern void T575f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_wipe_out */
extern void T575f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_wipe_out */
extern void T575f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_wipe_out */
extern void T575f44(GE_context* ac, T0* C);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].keep_head */
extern void T1353f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].set_count */
extern void T1353f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].move_all_cursors_after */
extern void T575f42(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_next_cursor */
extern void T1356f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_after */
extern void T1356f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.make_scanner */
extern void T165f210(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.make_scanner */
extern T0* T570c199(GE_context* ac);
/* XM_EIFFEL_SCANNER.reset */
extern void T570f207(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T570f207p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T570f207p0(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.make_with_buffer */
extern void T570f206(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_load_input_buffer */
extern void T570f215(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_set_content */
extern void T570f216(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T570f214(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T570f214p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_build_tables */
extern void T570f222(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template */
extern T0* T570f193(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_fixed_array */
extern T0* T570f196(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_5 */
extern void T570f293(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_array_subcopy */
extern void T570f294(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER.integer_array_ */
extern T0* T570f198(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template_4 */
extern void T570f292(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_3 */
extern void T570f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_2 */
extern void T570f290(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_1 */
extern void T570f289(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_meta_template */
extern T0* T570f192(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template */
extern T0* T570f191(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template_2 */
extern void T570f288(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_ec_template_1 */
extern void T570f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template */
extern T0* T570f190(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_def_template_5 */
extern void T570f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_4 */
extern void T570f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_3 */
extern void T570f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_2 */
extern void T570f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_1 */
extern void T570f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template */
extern T0* T570f189(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_base_template_5 */
extern void T570f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_4 */
extern void T570f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_3 */
extern void T570f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_2 */
extern void T570f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_1 */
extern void T570f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template */
extern T0* T570f188(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_27 */
extern void T570f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_26 */
extern void T570f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_25 */
extern void T570f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_24 */
extern void T570f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_23 */
extern void T570f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_22 */
extern void T570f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_21 */
extern void T570f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_20 */
extern void T570f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_19 */
extern void T570f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_18 */
extern void T570f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_17 */
extern void T570f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_16 */
extern void T570f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_15 */
extern void T570f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_14 */
extern void T570f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_13 */
extern void T570f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_12 */
extern void T570f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_11 */
extern void T570f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_10 */
extern void T570f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_9 */
extern void T570f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_8 */
extern void T570f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_7 */
extern void T570f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_6 */
extern void T570f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_5 */
extern void T570f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_4 */
extern void T570f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_3 */
extern void T570f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_2 */
extern void T570f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_1 */
extern void T570f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template */
extern T0* T570f187(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_nxt_template_27 */
extern void T570f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_26 */
extern void T570f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_25 */
extern void T570f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_24 */
extern void T570f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_23 */
extern void T570f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_22 */
extern void T570f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_21 */
extern void T570f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_20 */
extern void T570f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_19 */
extern void T570f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_18 */
extern void T570f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_17 */
extern void T570f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_16 */
extern void T570f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_15 */
extern void T570f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_14 */
extern void T570f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_13 */
extern void T570f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_12 */
extern void T570f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_11 */
extern void T570f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_10 */
extern void T570f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_9 */
extern void T570f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_8 */
extern void T570f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_7 */
extern void T570f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_6 */
extern void T570f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_5 */
extern void T570f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_4 */
extern void T570f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_3 */
extern void T570f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_2 */
extern void T570f224(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_1 */
extern void T570f223(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.special_integer_ */
extern T0* T570f51(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.empty_buffer */
extern T0* T570f70(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.canonical_pathname */
extern T0* T121f4(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname_to_string */
extern T0* T121f18(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.item */
extern T0* T539f8(GE_context* ac, T0* C, T6 a1);
/* KL_PATHNAME.is_parent */
extern T1 T539f7(GE_context* ac, T0* C, T6 a1);
/* KL_PATHNAME.is_current */
extern T1 T539f11(GE_context* ac, T0* C, T6 a1);
/* KL_PATHNAME.set_canonical */
extern void T539f21(GE_context* ac, T0* C);
/* KL_PATHNAME.append_current */
extern void T539f23(GE_context* ac, T0* C);
/* KL_PATHNAME.append_name */
extern void T539f28(GE_context* ac, T0* C, T0* a1);
/* ARRAY [STRING_8].force */
extern void T142f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [STRING_8].capacity */
extern T6 T142f9(GE_context* ac, T0* C);
/* ARRAY [STRING_8].set_area */
extern void T142f16(GE_context* ac, T0* C, T0* a1);
/* ARRAY [STRING_8].make_empty_area */
extern void T142f15(GE_context* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].additional_space */
extern T6 T142f8(GE_context* ac, T0* C);
/* ARRAY [STRING_8].empty_area */
extern T1 T142f7(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.string_to_pathname */
extern T0* T121f19(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.append_parent */
extern void T539f24(GE_context* ac, T0* C);
/* KL_PATHNAME.set_relative */
extern void T539f22(GE_context* ac, T0* C, T1 a1);
/* KL_PATHNAME.make */
extern T0* T539c20(GE_context* ac);
/* KL_WINDOWS_FILE_SYSTEM.canonical_pathname */
extern T0* T120f4(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.pathname_to_string */
extern T0* T120f21(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.string_to_pathname */
extern T0* T120f20(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_drive */
extern void T539f27(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_sharename */
extern void T539f26(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_hostname */
extern void T539f25(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname_from_file_system */
extern T0* T121f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.any_ */
extern T0* T121f17(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname_from_file_system */
extern T0* T120f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.any_ */
extern T0* T120f19(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.windows_file_system */
extern T0* T62f16(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.file_system */
extern T0* T62f12(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.unix_file_system */
extern T0* T62f22(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_finalize_mode */
extern void T62f98(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM_PARSER.make */
extern T0* T62c97(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T62f100(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.create_library_parser */
extern void T62f102(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.set_parsed_dotnet_assemblies */
extern void T195f98(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.set_parsed_libraries */
extern void T195f97(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.make_with_factory */
extern T0* T195c96(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.make_with_factory */
extern void T195f96p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.create_library_parser */
extern void T195f100(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.string_equality_tester */
extern T0* T195f13(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY_PARSER.make_with_factory */
extern void T195f96p0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.ise_latest */
extern T0* T195f12(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.enable_position_table */
extern void T160f10(GE_context* ac, T0* C, T0* a1);
/* XM_POSITION_TABLE.make */
extern T0* T156c4(GE_context* ac);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T844c7(GE_context* ac);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].set_internal_cursor */
extern void T844f8(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.set_callbacks */
extern void T165f208(GE_context* ac, T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.make */
extern T0* T158c10(GE_context* ac);
/* XM_TREE_CALLBACKS_PIPE.callbacks_pipe */
extern T0* T158f9(GE_context* ac, T0* C, T0* a1);
/* ARRAY [XM_CALLBACKS_FILTER].item */
extern T0* T559f4(GE_context* ac, T0* C, T6 a1);
/* XM_CALLBACKS_TO_TREE_FILTER.make_null */
extern T0* T160c9(GE_context* ac);
/* XM_CALLBACKS_TO_TREE_FILTER.make_next */
extern void T160f11(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.initialize */
extern void T160f12(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_equal */
extern T0* T561c31(GE_context* ac, T6 a1);
/* detachable KL_EQUALITY_TESTER [XM_NAMESPACE].default_create */
extern T0* T1345c2(GE_context* ac);
/* DS_HASH_SET [XM_NAMESPACE].make */
extern void T561f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].set_internal_cursor */
extern void T561f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].new_cursor */
extern T0* T561f24(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [XM_NAMESPACE].make */
extern T0* T1346c4(GE_context* ac, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].unset_found_item */
extern void T561f37(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_slots */
extern void T561f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_modulus */
extern T6 T561f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_clashes */
extern void T561f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_key_storage */
extern void T561f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_item_storage */
extern void T561f33(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].make */
extern T0* T1347f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_NAMESPACE].make_empty */
extern T0* T1348c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].default_create */
extern T0* T1347c3(GE_context* ac);
/* XM_DOCUMENT.make */
extern T0* T154c10(GE_context* ac);
/* XM_DOCUMENT.make_with_root_named */
extern void T154f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DOCUMENT.force_last */
extern void T154f12(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].force_last */
extern void T837f12(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].force_last */
extern void T837f12p1(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_DOCUMENT_NODE].put_right */
extern void T1457f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_DOCUMENT_NODE].make */
extern T0* T1457c3(GE_context* ac, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].before_addition */
extern void T837f14(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.before_addition */
extern void T154f13(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.equality_delete */
extern void T155f28(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].remove */
extern void T417f13(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_at_cursor */
extern void T839f16(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_all_cursors */
extern void T839f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_current_cell */
extern void T417f18(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_ELEMENT_NODE].put */
extern void T1569f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_ELEMENT_NODE].put_right */
extern void T1569f4(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_last_cell */
extern void T839f23(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_ELEMENT_NODE].forget_right */
extern void T1569f5(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_last */
extern void T839f22(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_last_cursors_after */
extern void T839f27(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].wipe_out */
extern void T839f25(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_all_cursors_after */
extern void T839f28(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].is_last */
extern T1 T417f7(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_is_last */
extern T1 T839f10(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_first */
extern void T839f21(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_first_cell */
extern void T839f26(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].is_first */
extern T1 T417f6(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_is_first */
extern T1 T839f9(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.equality_delete */
extern void T154f14(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].forth */
extern void T1413f13(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_forth */
extern void T837f17(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].add_traversing_cursor */
extern void T837f18(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_next_cursor */
extern void T1413f16(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_traversing_cursor */
extern void T837f23(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set */
extern void T1413f15(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].remove */
extern void T1413f12(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_at_cursor */
extern void T837f16(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_all_cursors */
extern void T837f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_current_cell */
extern void T1413f17(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_DOCUMENT_NODE].put */
extern void T1457f6(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_last_cell */
extern void T837f21(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_DOCUMENT_NODE].forget_right */
extern void T1457f5(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_last */
extern void T837f20(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_last_cursors_after */
extern void T837f26(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_after */
extern void T1413f18(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].wipe_out */
extern void T837f24(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_all_cursors_after */
extern void T837f27(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].is_last */
extern T1 T1413f7(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_is_last */
extern T1 T837f10(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_first */
extern void T837f19(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_first_cell */
extern void T837f25(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].is_first */
extern T1 T1413f6(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_is_first */
extern T1 T837f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].item */
extern T0* T1413f8(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].start */
extern void T1413f11(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_start */
extern void T837f15(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_off */
extern T1 T837f8(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].off */
extern T1 T1413f9(GE_context* ac, T0* C);
/* XM_DOCUMENT.new_cursor */
extern T0* T154f7(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].new_cursor */
extern T0* T837f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].make */
extern T0* T1413c10(GE_context* ac, T0* a1);
/* XM_DOCUMENT.last */
extern T0* T154f6(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].last */
extern T0* T837f7(GE_context* ac, T0* C);
/* XM_DOCUMENT.is_empty */
extern T1 T154f5(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].is_empty */
extern T1 T837f6(GE_context* ac, T0* C);
/* XM_ELEMENT.make */
extern T0* T155c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].make */
extern T0* T839c11(GE_context* ac);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_internal_cursor */
extern void T839f12(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].make */
extern T0* T837c11(GE_context* ac);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_internal_cursor */
extern void T837f13(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.default_ns */
extern unsigned char ge1249os14591;
extern T0* ge1249ov14591;
extern T0* T154f3(GE_context* ac, T0* C);
/* XM_NAMESPACE.make_default */
extern T0* T521c7(GE_context* ac);
/* XM_NAMESPACE.make */
extern void T521f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE.make */
extern T0* T521c8(GE_context* ac, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.null_callbacks */
extern T0* T160f7(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.make */
extern T0* T560c1(GE_context* ac);
/* XM_TREE_CALLBACKS_PIPE.new_stop_on_error */
extern T0* T158f7(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.make_null */
extern T0* T159c5(GE_context* ac);
/* XM_STOP_ON_ERROR_FILTER.make_next */
extern void T159f6(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.initialize */
extern void T159f7(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.null_callbacks */
extern T0* T159f4(GE_context* ac, T0* C);
/* XM_TREE_CALLBACKS_PIPE.new_namespace_resolver */
extern T0* T158f6(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.make_null */
extern T0* T557c26(GE_context* ac);
/* XM_NAMESPACE_RESOLVER.make_next */
extern void T557f37(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.initialize */
extern void T557f38(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_make */
extern void T557f42(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.new_string_queue */
extern T0* T557f20(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].make */
extern T0* T1344c6(GE_context* ac);
/* XM_NAMESPACE_RESOLVER_CONTEXT.make */
extern T0* T1342c10(GE_context* ac);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1542c8(GE_context* ac);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].set_internal_cursor */
extern void T1542f11(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].new_cursor */
extern T0* T1542f6(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1543c8(GE_context* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER.null_callbacks */
extern T0* T557f13(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.set_string_mode_mixed */
extern void T165f207(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.make */
extern T0* T165c205(GE_context* ac);
/* XM_EIFFEL_PARSER.new_entities_table */
extern T0* T165f91(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].set_key_equality_tester */
extern void T575f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map_default */
extern T0* T575c36(GE_context* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map */
extern void T575f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_with_equality_testers */
extern void T575f53(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_sparse_container */
extern void T575f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].set_internal_cursor */
extern void T575f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_cursor */
extern T0* T575f34(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].make */
extern T0* T1356c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_slots */
extern void T575f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_clashes */
extern void T575f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_key_storage */
extern void T575f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_item_storage */
extern void T575f59(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].make */
extern T0* T1357f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].make_empty */
extern T0* T1353c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].default_create */
extern T0* T1357c3(GE_context* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].default_capacity */
extern T6 T575f30(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.make_parser */
extern void T165f211(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_build_parser_tables */
extern void T165f215(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yycheck_template */
extern unsigned char ge1290os14972;
extern T0* ge1290ov14972;
extern T0* T165f88(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yyfixed_array */
extern T0* T165f183(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_4 */
extern void T165f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyarray_subcopy */
extern void T165f286(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PARSER.integer_array_ */
extern T0* T165f204(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yycheck_template_3 */
extern void T165f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_2 */
extern void T165f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_1 */
extern void T165f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template */
extern unsigned char ge1290os14967;
extern T0* ge1290ov14967;
extern T0* T165f86(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytable_template_4 */
extern void T165f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_3 */
extern void T165f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_2 */
extern void T165f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_1 */
extern void T165f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypgoto_template */
extern unsigned char ge1290os14966;
extern T0* ge1290ov14966;
extern T0* T165f84(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yypact_template */
extern unsigned char ge1290os14962;
extern T0* ge1290ov14962;
extern T0* T165f129(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yypact_template_3 */
extern void T165f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypact_template_2 */
extern void T165f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypact_template_1 */
extern void T165f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefgoto_template */
extern unsigned char ge1290os14961;
extern T0* ge1290ov14961;
extern T0* T165f127(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yydefact_template */
extern unsigned char ge1290os14957;
extern T0* ge1290ov14957;
extern T0* T165f125(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yydefact_template_3 */
extern void T165f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefact_template_2 */
extern void T165f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefact_template_1 */
extern void T165f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes2_template */
extern unsigned char ge1290os14956;
extern T0* ge1290ov14956;
extern T0* T165f123(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template */
extern unsigned char ge1290os14952;
extern T0* ge1290ov14952;
extern T0* T165f121(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template_3 */
extern void T165f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes1_template_2 */
extern void T165f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes1_template_1 */
extern void T165f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyr1_template */
extern unsigned char ge1290os14949;
extern T0* ge1290ov14949;
extern T0* T165f119(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yyr1_template_2 */
extern void T165f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyr1_template_1 */
extern void T165f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytranslate_template */
extern unsigned char ge1290os14946;
extern T0* ge1290ov14946;
extern T0* T165f106(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytranslate_template_2 */
extern void T165f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytranslate_template_1 */
extern void T165f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yy_create_value_stacks */
extern void T165f214(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].make */
extern T0* T602f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].make_empty */
extern T0* T604c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].default_create */
extern T0* T602c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].make */
extern T0* T598f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].make_empty */
extern T0* T600c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].default_create */
extern T0* T598c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T595f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].make_empty */
extern T0* T597c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].default_create */
extern T0* T595c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T592f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make_empty */
extern T0* T594c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].default_create */
extern T0* T592c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T589f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].make_empty */
extern T0* T591c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].default_create */
extern T0* T589c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].make */
extern T0* T586f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].make_empty */
extern T0* T588c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].default_create */
extern T0* T586c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make */
extern T0* T583f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make_empty */
extern T0* T585c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].default_create */
extern T0* T583c3(GE_context* ac);
/* XM_EIFFEL_PARSER.initialize */
extern void T165f209(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.null_dtd_callbacks */
extern T0* T165f112(GE_context* ac, T0* C);
/* XM_DTD_CALLBACKS_NULL.make */
extern T0* T579c1(GE_context* ac);
/* XM_EIFFEL_PARSER.null_callbacks */
extern T0* T165f104(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_key_equality_tester */
extern void T179f36(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.string_equality_tester */
extern T0* T62f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_map */
extern T0* T179c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_with_equality_testers */
extern void T179f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_sparse_container */
extern void T179f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_internal_cursor */
extern void T179f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_cursor */
extern T0* T179f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make */
extern T0* T621c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_slots */
extern void T179f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_clashes */
extern void T179f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_key_storage */
extern void T179f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_item_storage */
extern void T179f57(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].make */
extern T0* T622f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].make_empty */
extern T0* T618c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].default_create */
extern T0* T622c3(GE_context* ac);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].set_key_equality_tester */
extern void T178f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_map */
extern T0* T178c40(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_with_equality_testers */
extern void T178f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_sparse_container */
extern void T178f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].set_internal_cursor */
extern void T178f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_cursor */
extern T0* T178f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].make */
extern T0* T613c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_slots */
extern void T178f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_clashes */
extern void T178f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_key_storage */
extern void T178f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_item_storage */
extern void T178f57(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].make */
extern T0* T617f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_LIBRARY].make_empty */
extern T0* T614c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].default_create */
extern T0* T617c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T62f100p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ise_latest */
extern T0* T62f17(GE_context* ac, T0* C);
/* ET_ECF_AST_FACTORY.make */
extern T0* T176c31(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.make_standard */
extern T0* T63c8(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.std */
extern T0* T63f6(GE_context* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.set_variable_value */
extern void T66f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.put */
extern void T202f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.eif_putenv */
extern T6 T202f9(GE_context* ac, T0* C, T14 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].force */
extern void T628f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* SPECIAL [NATIVE_STRING].force */
extern void T1377f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [NATIVE_STRING].extend */
extern void T1377f7(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].position */
extern T6 T628f22(GE_context* ac, T0* C);
/* SPECIAL [IMMUTABLE_STRING_32].force */
extern void T870f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [BOOLEAN].force */
extern void T124f7(GE_context* ac, T0* C, T1 a1, T6 a2);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].deleted_position */
extern T6 T628f21(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].add_space */
extern void T628f37(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].accommodate */
extern void T628f38(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_indexes_map */
extern void T628f42(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_deleted_marks */
extern void T628f41(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_keys */
extern void T628f40(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_content */
extern void T628f39(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].put */
extern void T628f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_conflict */
extern void T628f45(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].found */
extern T1 T628f31(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].occupied */
extern T1 T628f29(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].empty_duplicate */
extern T0* T628f28(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].compare_objects */
extern void T628f44(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].make */
extern T0* T628c34(GE_context* ac, T6 a1);
/* SPECIAL [NATIVE_STRING].make_empty */
extern T0* T1377c4(GE_context* ac, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].soon_full */
extern T1 T628f20(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].not_found */
extern T1 T628f19(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].internal_search */
extern void T628f36(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].same_keys */
extern T1 T628f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* IMMUTABLE_STRING_32.is_equal */
extern T1 T401f7(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_32].same_items */
extern T1 T16f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].hash_code_of */
extern T6 T628f25(GE_context* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.hash_code */
extern T6 T401f6(GE_context* ac, T0* C);
/* IMMUTABLE_STRING_32.item */
extern T3 T401f9(GE_context* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.make_from_string_general */
extern T0* T401c11(GE_context* ac, T0* a1);
/* UC_UTF8_STRING.to_string_32 */
extern T0* T847f26(GE_context* ac, T0* C);
/* STRING_8.to_string_32 */
extern T0* T17f38(GE_context* ac, T0* C);
/* IMMUTABLE_STRING_32.make_from_string_32 */
extern void T401f15(GE_context* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.make_from_string_8 */
extern void T401f14(GE_context* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.make_from_area_and_bounds */
extern void T401f17(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* EXECUTION_ENVIRONMENT.environ */
extern unsigned char ge1665os9832;
extern T0* ge1665ov9832;
extern T0* T202f7(GE_context* ac, T0* C);
/* GEC.execution_environment */
extern T0* T22f22(GE_context* ac, T0* C);
/* GEC.parse_xace_file */
extern void T22f44(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.has_error */
extern T1 T53f5(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.parse_file */
extern void T52f262(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_parser_error */
extern void T53f9(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error */
extern void T53f10(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T53f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T53f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.message */
extern T0* T53f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_VALIDATOR.validate_system_doc */
extern void T161f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_root_element_error */
extern void T53f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.make */
extern T0* T775c8(GE_context* ac, T0* a1, T0* a2);
/* XM_DEFAULT_POSITION.out */
extern T0* T571f6(GE_context* ac, T0* C);
/* XM_DEFAULT_POSITION.string_ */
extern T0* T571f5(GE_context* ac, T0* C);
/* XM_ELEMENT.position */
extern T0* T155f7(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.null_position */
extern unsigned char ge1249os14590;
extern T0* ge1249ov14590;
extern T0* T155f11(GE_context* ac, T0* C);
/* XM_DEFAULT_POSITION.make */
extern T0* T571c7(GE_context* ac, T0* a1, T6 a2, T6 a3, T6 a4);
/* ET_XACE_VALIDATOR.validate_system */
extern void T161f35(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T161f35ot1(T0* a1, T0** a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_element_error */
extern void T53f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.make */
extern T0* T777c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.validate_external */
extern void T161f38(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T161f38ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_export */
extern void T161f42(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T161f42ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_feature */
extern unsigned char ge1159os5027;
extern T0* ge1159ov5027;
extern T0* T161f29(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_class */
extern unsigned char ge1159os5002;
extern T0* ge1159ov5002;
extern T0* T161f27(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_export */
extern unsigned char ge1159os5025;
extern T0* ge1159ov5025;
extern T0* T161f26(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_link_library */
extern unsigned char ge1159os5028;
extern T0* ge1159ov5028;
extern T0* T161f25(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_location */
extern unsigned char ge1159os5011;
extern T0* ge1159ov5011;
extern T0* T161f13(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_include_dir */
extern unsigned char ge1159os5024;
extern T0* ge1159ov5024;
extern T0* T161f24(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_element_obsoleted_by_element_warning */
extern void T53f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning */
extern void T53f18(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning_message */
extern void T53f19(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T428c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_external */
extern unsigned char ge1159os5015;
extern T0* ge1159ov5015;
extern T0* T161f11(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_option */
extern void T161f37(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T161f37ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_optimize */
extern unsigned char ge1159os5023;
extern T0* ge1159ov5023;
extern T0* T161f23(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_debug */
extern unsigned char ge1159os5022;
extern T0* ge1159ov5022;
extern T0* T161f22(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_check */
extern unsigned char ge1159os5021;
extern T0* ge1159ov5021;
extern T0* T161f21(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_loop */
extern unsigned char ge1159os5020;
extern T0* ge1159ov5020;
extern T0* T161f20(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_invariant */
extern unsigned char ge1159os5019;
extern T0* ge1159ov5019;
extern T0* T161f19(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_ensure */
extern unsigned char ge1159os5018;
extern T0* ge1159ov5018;
extern T0* T161f18(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_require */
extern unsigned char ge1159os5017;
extern T0* ge1159ov5017;
extern T0* T161f17(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_value */
extern unsigned char ge1159os5007;
extern T0* ge1159ov5007;
extern T0* T161f16(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_option_warning */
extern void T53f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.make */
extern T0* T781c9(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.uc_name */
extern unsigned char ge1159os5006;
extern T0* ge1159ov5006;
extern T0* T781f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].has */
extern T1 T420f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search_position */
extern void T420f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].hash_position */
extern T6 T420f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_item */
extern T0* T420f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_item */
extern T6 T420f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_item */
extern T6 T420f27(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTION_NAMES.option_codes */
extern unsigned char ge1131os5224;
extern T0* ge1131ov5224;
extern T0* T409f2(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].put_new */
extern void T420f40(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_put */
extern void T420f47(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_put */
extern void T420f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_put */
extern void T420f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_put */
extern void T420f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].unset_found_item */
extern void T420f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_key_equality_tester */
extern void T420f39(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTION_NAMES.string_equality_tester */
extern T0* T409f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_map */
extern T0* T420c37(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_with_equality_testers */
extern void T420f42(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_sparse_container */
extern void T420f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_internal_cursor */
extern void T420f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_cursor */
extern T0* T420f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8].make */
extern T0* T879c4(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_slots */
extern void T420f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_modulus */
extern T6 T420f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_clashes */
extern void T420f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_key_storage */
extern void T420f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_item_storage */
extern void T420f49(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_VALIDATOR.options */
extern unsigned char ge1118os5259;
extern T0* ge1118ov5259;
extern T0* T161f15(GE_context* ac, T0* C);
/* ET_XACE_OPTION_NAMES.default_create */
extern T0* T409c228(GE_context* ac);
/* ET_XACE_VALIDATOR.uc_option */
extern unsigned char ge1159os5014;
extern T0* ge1159ov5014;
extern T0* T161f10(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_mount */
extern void T161f36(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T161f36ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_exclude */
extern void T161f41(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_exclude_element_warning */
extern void T53f25(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.make */
extern T0* T780c8(GE_context* ac, T0* a1);
/* ET_XACE_VALIDATOR.uc_exclude */
extern unsigned char ge1159os5029;
extern T0* ge1159ov5029;
extern T0* T161f14(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_mount */
extern unsigned char ge1159os5010;
extern T0* ge1159ov5010;
extern T0* T161f9(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_cluster */
extern void T161f39(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T161f39ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_class */
extern void T161f43(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T161f43ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_feature */
extern void T161f44(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T161f44ot1(T0* a1, T0** a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_cluster_element_warning */
extern void T53f24(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.make */
extern T0* T779c8(GE_context* ac, T0* a1);
/* ET_XACE_VALIDATOR.validate_named_cluster */
extern void T161f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_non_empty_attribute_expected_error */
extern void T53f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.make */
extern T0* T425c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_cluster */
extern unsigned char ge1159os5005;
extern T0* ge1159ov5005;
extern T0* T161f5(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_description */
extern unsigned char ge1159os5013;
extern T0* ge1159ov5013;
extern T0* T161f8(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_root */
extern void T161f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_creation */
extern unsigned char ge1159os5003;
extern T0* ge1159ov5003;
extern T0* T161f28(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_element_error */
extern void T53f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ELEMENT_ERROR.make */
extern T0* T778c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.element_by_name */
extern T0* T155f8(GE_context* ac, T0* C, T0* a1);
extern T1 T155f8ot1(T0* a1, T0** a2);
/* XM_ELEMENT.named_same_name */
extern T1 T155f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_namespace */
extern T1 T155f14(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE.is_equal */
extern T1 T521f4(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE.string_ */
extern T0* T521f3(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_root */
extern unsigned char ge1159os5001;
extern T0* ge1159ov5001;
extern T0* T161f12(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_attribute_error */
extern void T53f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.make */
extern T0* T776c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.has_attribute_by_name */
extern T1 T155f6(GE_context* ac, T0* C, T0* a1);
extern T1 T155f6ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_name */
extern T0* T161f7(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_system */
extern unsigned char ge1159os5000;
extern T0* ge1159ov5000;
extern T0* T161f6(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.string_ */
extern T0* T161f3(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].wipe_out */
extern void T163f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].slots_wipe_out */
extern void T163f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].clashes_wipe_out */
extern void T163f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].key_storage_wipe_out */
extern void T163f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].item_storage_wipe_out */
extern void T163f41(GE_context* ac, T0* C);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].keep_head */
extern void T568f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].set_count */
extern void T568f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].unset_found_item */
extern void T163f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].move_all_cursors_after */
extern void T163f39(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8].set_next_cursor */
extern void T567f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8].set_after */
extern void T567f7(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_root_class_name */
extern void T61f186(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.unset_root_type */
extern void T61f218(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_root_type */
extern void T61f217(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_system */
extern T0* T52f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.set_use_boehm_gc */
extern void T61f204(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM_PARSER.options */
extern T0* T52f19(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.garbage_collector */
extern T0* T405f107(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_garbage_collector */
extern unsigned char ge1130os22447;
extern T0* ge1130ov22447;
extern T0* T405f131(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.options */
extern T0* T405f118(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_trace_mode */
extern void T61f203(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.trace */
extern T1 T405f106(GE_context* ac, T0* C);
/* UT_TRISTATE.is_true */
extern T1 T790f3(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_trace_declared */
extern T1 T405f127(GE_context* ac, T0* C);
/* UT_TRISTATE.is_undefined */
extern T1 T790f2(GE_context* ac, T0* C);
/* UT_TRISTATE.is_false */
extern T1 T790f4(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_exception_trace_mode */
extern void T61f202(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.exception_trace */
extern T1 T405f105(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_exception_trace_declared */
extern T1 T405f124(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_console_application_mode */
extern void T61f201(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.console_application */
extern T1 T405f104(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_console_application_declared */
extern T1 T405f121(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.replace_all_characters */
extern T0* T52f18(GE_context* ac, T0* C, T0* a1, T2 a2, T2 a3);
/* UC_UTF8_STRING.put */
extern void T847f74(GE_context* ac, T0* C, T2 a1, T6 a2);
/* ET_XACE_SYSTEM.merge_externals */
extern void T61f200(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.merge_externals */
extern void T414f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].item */
extern T0* T415f10(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_CLUSTERS.merge_externals */
extern void T412f6(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.merge_externals */
extern void T411f70(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].forth */
extern void T463f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_forth */
extern void T136f32(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_position */
extern void T463f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].add_traversing_cursor */
extern void T136f37(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].remove_traversing_cursor */
extern void T136f38(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_EXTERNALS.put_link_library */
extern void T404f7(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].force_last */
extern void T143f18(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [STRING_8].put_right */
extern void T552f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [STRING_8].make */
extern T0* T552c3(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].item */
extern T0* T463f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_item */
extern T0* T136f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].after */
extern T1 T463f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].start */
extern void T463f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_start */
extern void T136f31(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].is_empty */
extern T1 T136f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].off */
extern T1 T463f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].before */
extern T1 T463f7(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.link */
extern T0* T405f110(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_link */
extern unsigned char ge1130os22461;
extern T0* ge1130ov22461;
extern T0* T405f95(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].set_equality_tester */
extern void T136f39(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.string_equality_tester */
extern T0* T405f117(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_link_declared */
extern T1 T405f138(GE_context* ac, T0* C);
/* ET_XACE_EXTERNALS.put_include_directory */
extern void T404f6(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.header */
extern T0* T405f109(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_header */
extern unsigned char ge1130os22450;
extern T0* ge1130ov22450;
extern T0* T405f137(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_header_declared */
extern T1 T405f135(GE_context* ac, T0* C);
/* ET_XACE_EXTERNALS.put_c_compiler_options */
extern void T404f5(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.c_compiler_options */
extern T0* T405f108(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_c_compiler_options */
extern unsigned char ge1130os22427;
extern T0* ge1130ov22427;
extern T0* T405f134(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_c_compiler_options_declared */
extern T1 T405f132(GE_context* ac, T0* C);
/* ET_XACE_EXTERNALS.make */
extern T0* T404c4(GE_context* ac);
/* ET_XACE_SYSTEM.mount_libraries */
extern void T61f199(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.mount_libraries */
extern void T414f8(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.mount_libraries */
extern void T412f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTERS.put_last */
extern void T412f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].force_last */
extern void T873f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].force */
extern void T1473f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].fill_with */
extern void T1472f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].extend */
extern void T1472f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].resize */
extern void T873f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].aliased_resized_area */
extern T0* T1473f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_CLUSTER].aliased_resized_area */
extern T0* T1472f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].new_capacity */
extern T6 T873f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].extendible */
extern T1 T873f7(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_CLUSTER.set_library_prefix */
extern void T411f76(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_library_prefix */
extern void T412f13(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_mounted */
extern void T411f77(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_mounted */
extern void T412f17(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.make_empty */
extern T0* T412c5(GE_context* ac);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].make */
extern T0* T873c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].set_internal_cursor */
extern void T873f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].new_cursor */
extern T0* T873f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].make */
extern T0* T1474c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].make */
extern T0* T1473f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_CLUSTER].make_empty */
extern T0* T1472c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].default_create */
extern T0* T1473c3(GE_context* ac);
/* ET_XACE_SYSTEM_PARSER.fill_system */
extern void T52f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T52f265ot1(T0* a1, T0** a2);
extern T1 T52f265ot2(T0* a1, T0** a2);
/* ET_XACE_SYSTEM.set_mounted_libraries */
extern void T61f209(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_options */
extern void T61f208(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_creation_procedure_name */
extern void T61f207(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_root_creation */
extern void T61f239(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_system_name */
extern void T61f206(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_clusters */
extern void T61f205(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG.merge_libraries */
extern void T419f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.merge_libraries */
extern void T414f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARY.set_root */
extern void T413f12(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_MOUNTED_LIBRARY.cloned_object */
extern T0* T413f8(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARY.twin */
extern T0* T413f9(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARY.copy */
extern void T413f13(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.set_root */
extern void T414f7(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].is_empty */
extern T1 T415f6(GE_context* ac, T0* C);
/* ET_XACE_CLUSTERS.merge_libraries */
extern void T412f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.merge_libraries */
extern void T411f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_override */
extern void T411f69(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.cluster_by_name */
extern T0* T412f2(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.string_ */
extern T0* T412f3(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.override_cluster */
extern T0* T405f103(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_override_cluster */
extern unsigned char ge1130os22479;
extern T0* ge1130ov22479;
extern T0* T405f120(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_override_cluster_declared */
extern T1 T405f102(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.fill_externals */
extern void T52f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T52f267ot1(T0* a1, T0** a2);
/* ET_XACE_CLUSTER.put_class_option */
extern void T411f61(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].put_last */
extern void T872f7(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_XACE_CLASS_OPTIONS].put_right */
extern void T1471f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1471c3(GE_context* ac, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].make */
extern T0* T872c6(GE_context* ac);
/* detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].set_internal_cursor */
extern void T872f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].new_cursor */
extern T0* T872f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1470c3(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_export */
extern T0* T52f150(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T52f150ot1(T0* a1, T0** a2);
/* ET_XACE_OPTIONS.set_export_option */
extern void T405f173(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].is_empty */
extern T1 T774f6(GE_context* ac, T0* C);
/* ET_XACE_CLASS_OPTIONS.put_feature_option */
extern void T422f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].put_last */
extern void T774f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_XACE_FEATURE_OPTIONS].put_right */
extern void T1447f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1447c3(GE_context* ac, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T774c7(GE_context* ac);
/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].set_internal_cursor */
extern void T774f9(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].new_cursor */
extern T0* T774f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1446c3(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_exported_feature */
extern T0* T52f258(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_AST_FACTORY.new_feature_options */
extern T0* T153f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_FEATURE_OPTIONS.make */
extern T0* T773c3(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.uc_alias */
extern unsigned char ge1159os5026;
extern T0* ge1159ov5026;
extern T0* T52f260(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_feature */
extern T0* T52f257(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_class_options */
extern T0* T153f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLASS_OPTIONS.make */
extern T0* T422c4(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.uc_export */
extern T0* T52f149(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_header */
extern void T405f184(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_include_dir */
extern T0* T52f148(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_link */
extern void T405f195(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_location */
extern T0* T52f147(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_link_library */
extern T0* T52f146(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_options */
extern T0* T153f3(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.make */
extern T0* T405c143(GE_context* ac);
/* ET_XACE_SYSTEM_PARSER.uc_external */
extern T0* T52f32(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.new_options */
extern T0* T52f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.fill_options */
extern void T52f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T52f266ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.uc_debug */
extern T0* T52f145(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_optimize */
extern T0* T52f144(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_check */
extern T0* T52f142(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_loop */
extern T0* T52f139(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_invariant */
extern T0* T52f137(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_ensure */
extern T0* T52f135(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_enable */
extern unsigned char ge1159os5016;
extern T0* ge1159ov5016;
extern T0* T52f133(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_require */
extern T0* T52f132(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_wedit */
extern void T405f237(GE_context* ac, T0* C, T1 a1);
/* UT_TRISTATE.set_false */
extern void T790f8(GE_context* ac, T0* C);
/* UT_TRISTATE.set_true */
extern void T790f6(GE_context* ac, T0* C);
/* UT_TRISTATE.make_undefined */
extern T0* T790c7(GE_context* ac);
/* UT_TRISTATE.set_undefined */
extern void T790f9(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_warning */
extern void T405f236(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_warning */
extern unsigned char ge1130os22312;
extern T0* ge1130ov22312;
extern T0* T405f100(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].put_last */
extern void T76f69(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].compress */
extern void T76f70(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].key_storage_keep_head */
extern void T76f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_keep_head */
extern void T76f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].move_all_cursors */
extern void T76f72(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].key_storage_put */
extern void T76f71(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_XACE_OPTIONS.set_void_safety */
extern void T405f235(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_void_safety */
extern unsigned char ge1130os22311;
extern T0* ge1130ov22311;
extern T0* T405f98(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_visible_filename */
extern void T405f234(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_version */
extern void T405f233(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_verbose */
extern void T405f232(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_use_full_cluster_name_as_namespace */
extern void T405f231(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_use_cluster_name_as_namespace */
extern void T405f230(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_trace */
extern void T405f229(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_target */
extern void T405f228(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_target */
extern unsigned char ge1130os22309;
extern T0* ge1130ov22309;
extern T0* T405f96(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_syntax */
extern void T405f227(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_syntax */
extern unsigned char ge1130os22308;
extern T0* ge1130ov22308;
extern T0* T405f139(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_strip_option */
extern void T405f226(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_storable_filename */
extern void T405f225(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_stack_size */
extern void T405f224(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_split */
extern void T405f223(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_shared_library_definition */
extern void T405f222(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_reloads_optimization */
extern void T405f221(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_recursive */
extern void T405f220(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_read_only */
extern void T405f219(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_public_key_token */
extern void T405f218(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_profile */
extern void T405f217(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_prefix_option */
extern void T405f216(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_precompiled */
extern void T405f215(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_portable_code_generation */
extern void T405f214(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_override_cluster */
extern void T405f213(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_old_verbatim_strings */
extern void T405f212(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_no_default_lib */
extern void T405f211(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_namespace */
extern void T405f210(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_multithreaded */
extern void T405f209(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_use_optimized_precompile */
extern void T405f208(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_key_file_name */
extern void T405f207(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_generation_version */
extern void T405f206(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_generation */
extern void T405f205(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_culture */
extern void T405f204(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_clr_version */
extern void T405f203(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_classes_per_module */
extern void T405f202(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_msil_assembly_compatibility */
extern void T405f201(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_metadata_cache_path */
extern void T405f200(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_map */
extern void T405f199(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_manifest_string_trace */
extern void T405f198(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_linux_fpu_double_precision */
extern void T405f197(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_linker */
extern void T405f196(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_linker */
extern unsigned char ge1130os22307;
extern T0* ge1130ov22307;
extern T0* T405f136(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_line_generation */
extern void T405f194(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_leaves_optimization */
extern void T405f193(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_layout_optimization */
extern void T405f192(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_layout */
extern void T405f191(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_layout */
extern unsigned char ge1130os22306;
extern T0* ge1130ov22306;
extern T0* T405f133(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_jumps_optimization */
extern void T405f190(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_inlining_size */
extern void T405f189(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_inlining */
extern void T405f188(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_inlining */
extern unsigned char ge1130os22305;
extern T0* ge1130ov22305;
extern T0* T405f130(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_include */
extern void T405f187(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_il_verifiable */
extern void T405f186(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_high_memory_compiler */
extern void T405f185(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_heap_size */
extern void T405f183(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_gc_info */
extern void T405f182(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_garbage_collector */
extern void T405f181(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_garbage_collector */
extern unsigned char ge1130os22304;
extern T0* ge1130ov22304;
extern T0* T405f128(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_full_class_checking */
extern void T405f180(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_fst_optimization */
extern void T405f179(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_positive_integer_expected_error */
extern void T53f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.make */
extern T0* T427c8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_OPTIONS.set_fst_expansion_factor */
extern void T405f178(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_force_32bits */
extern void T405f177(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_flat_fst_optimization */
extern void T405f176(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_finalize_option */
extern void T405f175(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_external_runtime */
extern void T405f174(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_exclude */
extern void T405f172(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_exception_trace */
extern void T405f171(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_enforce_unique_class_names */
extern void T405f170(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_ecf_library */
extern void T405f169(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_dynamic_runtime */
extern void T405f168(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dotnet_naming_convention */
extern void T405f167(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_document */
extern void T405f166(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_debugger */
extern void T405f165(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_debug_tag */
extern void T405f164(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_debug_option */
extern void T405f163(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dead_code_removal */
extern void T405f162(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_dead_code_removal */
extern unsigned char ge1130os22303;
extern T0* ge1130ov22303;
extern T0* T405f125(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_c_compiler_options */
extern void T405f161(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_culture */
extern void T405f160(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_create_keyword_extension */
extern void T405f159(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_console_application */
extern void T405f158(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_component */
extern void T405f157(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_cls_compliant */
extern void T405f156(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_clean */
extern void T405f155(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_check_vape */
extern void T405f154(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_case_insensitive */
extern void T405f153(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_callback */
extern void T405f152(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_callback */
extern unsigned char ge1130os22302;
extern T0* ge1130ov22302;
extern T0* T405f122(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_automatic_backup */
extern void T405f151(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_attached_by_default */
extern void T405f150(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_attribute_value_error */
extern void T53f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.make */
extern T0* T426c8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.string_ */
extern T0* T426f4(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_assertion */
extern void T405f149(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_assertion */
extern unsigned char ge1130os22301;
extern T0* ge1130ov22301;
extern T0* T405f119(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_assembly */
extern void T405f148(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_array_optimization */
extern void T405f147(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_arguments */
extern void T405f146(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_address_expression */
extern void T405f145(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_boolean_expected_error */
extern void T53f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.make */
extern T0* T424c8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_SYSTEM_PARSER.is_false */
extern T1 T52f131(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_abstract */
extern void T405f144(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM_PARSER.is_true */
extern T1 T52f130(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_item */
extern T6 T420f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_item */
extern T6 T420f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found */
extern T1 T420f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search */
extern void T420f38(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.option_codes */
extern T0* T52f34(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.string_equality_tester */
extern T0* T52f156(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_value */
extern T0* T52f33(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_option */
extern T0* T52f30(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.put_last */
extern void T414f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].force_last */
extern void T415f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].force */
extern void T876f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].fill_with */
extern void T875f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].extend */
extern void T875f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].resize */
extern void T415f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].aliased_resized_area */
extern T0* T876f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].aliased_resized_area */
extern T0* T875f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].new_capacity */
extern T6 T415f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].extendible */
extern T1 T415f8(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_multiple_library_prefix_error */
extern void T53f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.make */
extern T0* T423c8(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARY.same_library_prefix */
extern T1 T413f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARY.string_ */
extern T0* T413f6(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.item */
extern T0* T414f2(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.string_ */
extern T0* T414f3(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_mounted_libraries */
extern T0* T153f2(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.make_empty */
extern T0* T414c5(GE_context* ac);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T415c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].set_internal_cursor */
extern void T415f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].new_cursor */
extern T0* T415f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T877c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T876f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].make_empty */
extern T0* T875c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].default_create */
extern T0* T876c3(GE_context* ac);
/* ET_XACE_SYSTEM_PARSER.new_mount */
extern T0* T52f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MOUNTED_LIBRARY.set_library_prefix */
extern void T413f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_prefix */
extern unsigned char ge1159os5012;
extern T0* ge1159ov5012;
extern T0* T52f153(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_mounted_library */
extern T0* T153f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MOUNTED_LIBRARY.make */
extern T0* T413c10(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_cannot_read_file_error */
extern void T53f28(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.parse_library */
extern void T168f253(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_library */
extern void T168f254(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T168f254ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG.set_libraries */
extern void T419f12(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG.set_clusters */
extern void T419f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_externals */
extern void T168f256(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T168f256ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_export */
extern T0* T168f139(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T168f139ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_exported_feature */
extern T0* T168f247(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_alias */
extern T0* T168f249(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_feature */
extern T0* T168f246(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_class */
extern T0* T168f142(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_export */
extern T0* T168f138(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_include_dir */
extern T0* T168f137(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_location */
extern T0* T168f136(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_link_library */
extern T0* T168f135(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_external */
extern T0* T168f21(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_options */
extern T0* T168f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_options */
extern void T168f255(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T168f255ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_debug */
extern T0* T168f134(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_optimize */
extern T0* T168f133(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_check */
extern T0* T168f131(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_loop */
extern T0* T168f128(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_invariant */
extern T0* T168f126(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_ensure */
extern T0* T168f124(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_enable */
extern T0* T168f122(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_require */
extern T0* T168f121(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.is_false */
extern T1 T168f120(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.is_true */
extern T1 T168f119(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.option_codes */
extern T0* T168f23(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.string_equality_tester */
extern T0* T168f144(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_value */
extern T0* T168f22(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_option */
extern T0* T168f19(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_mount */
extern T0* T168f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.execution_environment */
extern T0* T168f146(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_mount */
extern T0* T168f17(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG.set_library_prefix */
extern void T419f10(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_prefix */
extern T0* T168f16(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG.set_options */
extern void T419f9(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_cluster */
extern T0* T168f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T168f15ot1(T0* a1, T0** a2);
/* ET_XACE_CLUSTER.set_libraries */
extern void T411f67(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_subclusters */
extern void T411f66(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_parent */
extern void T412f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_parent */
extern void T411f75(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_options */
extern void T411f65(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_read_only */
extern void T411f64(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.read_only */
extern T1 T405f116(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_read_only_declared */
extern T1 T405f115(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.set_recursive */
extern void T411f63(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.recursive */
extern T1 T405f114(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_recursive_declared */
extern T1 T405f113(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.set_abstract */
extern void T411f62(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.abstract */
extern T1 T405f112(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_abstract_declared */
extern T1 T405f111(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_class */
extern T0* T168f143(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T168f143ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_feature */
extern T0* T168f248(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T168f248ot1(T0* a1, T0** a2);
/* ET_XACE_CLUSTER.set_cluster_prefix */
extern void T411f60(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_relative */
extern void T411f59(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_relative */
extern unsigned char ge1159os5009;
extern T0* ge1159ov5009;
extern T0* T168f141(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_attribute_obsoleted_by_element_warning */
extern void T53f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T782c8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_abstract */
extern unsigned char ge1159os5008;
extern T0* ge1159ov5008;
extern T0* T168f140(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_cluster */
extern T0* T153f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_CLUSTER.make */
extern T0* T411c58(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T411f68(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T412f12(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_cluster */
extern T0* T168f13(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.string_ */
extern T0* T168f12(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG.set_name */
extern void T419f8(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_name */
extern T0* T168f145(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.execution_environment */
extern T0* T52f157(GE_context* ac, T0* C);
/* UC_UTF8_STRING.has_substring */
extern T1 T847f64(GE_context* ac, T0* C, T0* a1);
/* STRING_8.has_substring */
extern T1 T17f43(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].force_new */
extern void T163f52(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].key_storage_put */
extern void T163f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].item_storage_put */
extern void T163f57(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG].force */
extern void T569f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].fill_with */
extern void T568f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].extend */
extern void T568f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].slots_put */
extern void T163f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].clashes_put */
extern void T163f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].slots_item */
extern T6 T163f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].hash_position */
extern T6 T163f27(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].clashes_item */
extern T6 T163f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].resize */
extern void T163f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].clashes_resize */
extern void T163f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].special_integer_ */
extern T0* T163f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].key_storage_resize */
extern void T163f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].item_storage_resize */
extern void T163f60(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG].aliased_resized_area */
extern T0* T569f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].aliased_resized_area */
extern T0* T568f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].key_storage_item */
extern T0* T163f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].slots_resize */
extern void T163f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].new_modulus */
extern T6 T163f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].new_capacity */
extern T6 T163f24(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_AST_FACTORY.new_library */
extern T0* T153f5(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG.make */
extern T0* T419c7(GE_context* ac);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].found_item */
extern T0* T163f22(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].item_storage_item */
extern T0* T163f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].found */
extern T1 T163f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].search */
extern void T163f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].search_position */
extern void T163f53(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_mount */
extern T0* T52f28(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_clusters */
extern T0* T153f1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.make */
extern T0* T412c8(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].put_last */
extern void T873f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_cluster */
extern T0* T52f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T52f27ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.new_class */
extern T0* T52f154(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T52f154ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.new_feature */
extern T0* T52f259(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T52f259ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.uc_relative */
extern T0* T52f152(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_abstract */
extern T0* T52f151(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_cluster */
extern T0* T52f25(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_creation */
extern T0* T52f24(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_class */
extern T0* T52f23(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_root */
extern T0* T52f22(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.new_eiffel_error_handler */
extern T0* T52f17(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_ast_factory */
extern void T61f198(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_eiffel_ast_factory */
extern T0* T52f16(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.make */
extern T0* T61c185(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.set_default_class_mapping */
extern void T61f216(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_wide_character_ref_class_mapping */
extern void T61f292(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_class_mapping */
extern void T61f305(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.set_wide_character_class_mapping */
extern void T61f291(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_string_class_mapping */
extern void T61f290(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_real_ref_class_mapping */
extern void T61f289(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_real_class_mapping */
extern void T61f288(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_natural_ref_class_mapping */
extern void T61f287(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_natural_class_mapping */
extern void T61f286(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_integer_ref_class_mapping */
extern void T61f285(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_integer_class_mapping */
extern void T61f284(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_double_ref_class_mapping */
extern void T61f283(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_double_class_mapping */
extern void T61f282(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_character_ref_class_mapping */
extern void T61f281(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_character_class_mapping */
extern void T61f280(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_kernel_types */
extern void T61f215(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_wide_character_type */
extern void T61f279(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_typed_pointer_type */
extern void T61f278(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_type_type */
extern void T61f277(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_system_string_type */
extern void T61f276(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_system_object_type */
extern void T61f275(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_string_type */
extern void T61f274(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_string_32_type */
extern void T61f273(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_string_8_type */
extern void T61f272(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_special_type */
extern void T61f271(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_routine_type */
extern void T61f270(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_real_64_type */
extern void T61f269(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_real_32_type */
extern void T61f268(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_real_type */
extern void T61f267(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_procedure_type */
extern void T61f266(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_predicate_type */
extern void T61f265(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_pointer_type */
extern void T61f264(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_none_type */
extern void T61f263(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_64_type */
extern void T61f262(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_32_type */
extern void T61f261(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_16_type */
extern void T61f260(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_8_type */
extern void T61f259(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_type */
extern void T61f258(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_iterable_type */
extern void T61f257(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_ise_exception_manager_type */
extern void T61f256(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_64_type */
extern void T61f255(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_32_type */
extern void T61f254(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_16_type */
extern void T61f253(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_8_type */
extern void T61f252(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_type */
extern void T61f251(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_function_type */
extern void T61f250(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_exception_manager_type */
extern void T61f249(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_exception_type */
extern void T61f248(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_double_type */
extern void T61f247(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_character_32_type */
extern void T61f246(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_character_8_type */
extern void T61f245(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_character_type */
extern void T61f244(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_boolean_type */
extern void T61f243(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_array_type */
extern void T61f242(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_tuple_type */
extern void T61f241(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_any_type */
extern void T61f240(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.make_adapted */
extern void T61f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.default_read_only_value */
extern T1 T61f161(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_unknown_kernel_types */
extern void T61f213(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_preparse_shallow_mode */
extern void T61f212(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_default_keyword_usage */
extern void T61f211(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_use_detachable_keyword */
extern void T61f223(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_use_attached_keyword */
extern void T61f222(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_use_reference_keyword */
extern void T61f221(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_use_note_keyword */
extern void T61f220(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_use_attribute_keyword */
extern void T61f219(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.initialize */
extern void T61f210(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.initialize */
extern void T61f210p1(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.class_name_tester */
extern T0* T61f173(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.tokens */
extern T0* T61f164(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_name */
extern T0* T52f15(GE_context* ac, T0* C);
/* XM_ELEMENT.set_name */
extern void T155f23(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_system */
extern T0* T52f14(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.preprocess_element */
extern void T162f11(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T162f11ot1(T0* a1, T0** a2);
/* ET_XACE_PREPROCESSOR.should_strip_element */
extern T1 T162f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_invalid_expression_error */
extern void T53f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_INVALID_EXPRESSION_ERROR.make */
extern T0* T1392c8(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_PREPROCESSOR.is_expression_true */
extern T1 T162f8(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.template_expander */
extern T0* T162f4(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.string_ */
extern T0* T162f9(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.is_valid_expression */
extern T1 T162f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.uc_unless */
extern unsigned char ge1159os5031;
extern T0* ge1159ov5031;
extern T0* T162f6(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.uc_if */
extern unsigned char ge1159os5030;
extern T0* ge1159ov5030;
extern T0* T162f5(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.expand_attribute_variables */
extern void T162f12(GE_context* ac, T0* C, T0* a1);
extern T1 T162f12ot1(T0* a1, T0** a2);
/* XM_ATTRIBUTE.set_value */
extern void T406f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_VALIDATOR.validate_library_doc */
extern void T161f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_library */
extern void T161f33(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T161f33ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_library */
extern unsigned char ge1159os5004;
extern T0* ge1159ov5004;
extern T0* T161f4(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_library */
extern T0* T52f155(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.string_ */
extern T0* T52f21(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.make_with_variables */
extern T0* T52c261(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.make_with_variables_and_factory */
extern void T52f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM_PARSER.create_library_parser */
extern void T52f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.set_parsed_libraries */
extern void T168f251(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.make_with_variables_and_factory */
extern T0* T168c250(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.create_library_parser */
extern void T168f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EXPAT_PARSER_FACTORY.new_expat_parser */
extern T0* T164f2(GE_context* ac, T0* C);
/* XM_EXPAT_PARSER_FACTORY.is_expat_parser_available */
extern T1 T164f1(GE_context* ac, T0* C);
/* XM_EXPAT_PARSER_FACTORY.default_create */
extern T0* T164c3(GE_context* ac);
/* ET_XACE_VALIDATOR.make */
extern T0* T161c30(GE_context* ac, T0* a1);
/* ET_XACE_PREPROCESSOR.make */
extern T0* T162c10(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].set_key_equality_tester */
extern void T163f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_map */
extern T0* T163c35(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_with_equality_testers */
extern void T163f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_sparse_container */
extern void T163f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].set_internal_cursor */
extern void T163f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].new_cursor */
extern T0* T163f29(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8].make */
extern T0* T567c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_slots */
extern void T163f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_clashes */
extern void T163f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_key_storage */
extern void T163f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_item_storage */
extern void T163f46(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG].make */
extern T0* T569f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].make_empty */
extern T0* T568c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG].default_create */
extern T0* T569c3(GE_context* ac);
/* ET_XACE_AST_FACTORY.make */
extern T0* T153c9(GE_context* ac);
/* DS_LINKED_LIST_CURSOR [STRING_8].forth */
extern void T174f10(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_forth */
extern void T143f24(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].add_traversing_cursor */
extern void T143f25(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T174f12(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T143f26(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set */
extern void T174f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* UC_UTF8_STRING.index_of */
extern T6 T847f24(GE_context* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.index_of_item_code */
extern T6 T847f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.index_of */
extern T6 T17f28(GE_context* ac, T0* C, T2 a1, T6 a2);
/* DS_LINKED_LIST_CURSOR [STRING_8].item */
extern T0* T174f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].start */
extern void T174f9(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_start */
extern void T143f23(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].cursor_off */
extern T1 T143f13(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].off */
extern T1 T174f7(GE_context* ac, T0* C);
/* ST_SPLITTER.split */
extern T0* T55f6(GE_context* ac, T0* C, T0* a1);
/* ST_SPLITTER.do_split */
extern T0* T55f8(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ST_SPLITTER.string_ */
extern T0* T55f5(GE_context* ac, T0* C);
/* ST_SPLITTER.make */
extern T0* T55c9(GE_context* ac);
/* ST_SPLITTER.set_separators */
extern void T55f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].put */
extern void T175f39(GE_context* ac, T0* C, T6 a1);
/* GEC.string_equality_tester */
extern T0* T22f21(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.make_standard */
extern T0* T53c8(GE_context* ac);
/* ET_XACE_DEFAULT_ERROR_HANDLER.std */
extern T0* T53f6(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.same_string */
extern T1 T34f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.elks_same_string */
extern T1 T34f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.same_unicode_string */
extern T1 T847f18(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.unicode_substring_index */
extern T6 T847f42(GE_context* ac, T0* C, T0* a1, T6 a2);
/* GEC.string_ */
extern T0* T22f18(GE_context* ac, T0* C);
/* INTEGER_32.is_greater */
extern T1 T6f1(GE_context* ac, T6* C, T6 a1);
/* KL_TEXT_INPUT_FILE.is_open_read */
extern T1 T29f14(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_read */
extern T1 T29f27(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T29f47(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_closed */
extern T1 T29f17(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_open_read */
extern void T29f52(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.default_pointer */
extern T14 T29f21(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T29f52p1(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_open */
extern T14 T29f24(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.old_is_readable */
extern T1 T29f16(GE_context* ac, T0* C);
/* FILE_INFO.is_readable */
extern T1 T129f8(GE_context* ac, T0* C);
/* FILE_INFO.file_eaccess */
extern T1 T129f6(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.make */
extern void T29f45(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern T0* T29c45(GE_context* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern void T29f45p1(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.old_make */
extern void T29f50(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make_with_name */
extern void T29f55(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.set_name */
extern void T29f58(GE_context* ac, T0* C, T0* a1);
/* GEC.parse_arguments */
extern void T22f43(GE_context* ac, T0* C);
/* AP_ERROR.make_invalid_parameter_error */
extern T0* T40c21(GE_context* ac, T0* a1, T0* a2);
/* AP_INTEGER_OPTION.parameter */
extern T6 T45f12(GE_context* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].last */
extern T6 T151f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].first */
extern T0* T136f10(GE_context* ac, T0* C);
/* UT_ERROR_HANDLER.report_info_message */
extern void T32f8(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_usage_instruction */
extern T0* T50f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].forth */
extern void T138f17(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_forth */
extern void T138f21(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_position */
extern void T549f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].add_traversing_cursor */
extern void T138f22(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_next_cursor */
extern void T549f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].remove_traversing_cursor */
extern void T138f23(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.alternative_usage_instruction */
extern T0* T50f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ST_WORD_WRAPPER.wrapped_string */
extern T0* T152f5(GE_context* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.canonify_whitespace */
extern void T152f12(GE_context* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.is_space */
extern T1 T152f8(GE_context* ac, T0* C, T2 a1);
/* ST_WORD_WRAPPER.string_ */
extern T0* T152f4(GE_context* ac, T0* C);
/* ST_WORD_WRAPPER.set_new_line_indentation */
extern void T152f10(GE_context* ac, T0* C, T6 a1);
/* AP_DISPLAY_HELP_FLAG.wrapper */
extern unsigned char ge7os4946;
extern T0* ge7ov4946;
extern T0* T50f25(GE_context* ac, T0* C);
/* ST_WORD_WRAPPER.set_maximum_text_width */
extern void T152f11(GE_context* ac, T0* C, T6 a1);
/* ST_WORD_WRAPPER.make */
extern T0* T152c9(GE_context* ac);
/* KL_UNIX_FILE_SYSTEM.basename */
extern T0* T121f2(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.basename */
extern T0* T120f2(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.arguments */
extern T0* T50f17(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.file_system */
extern T0* T50f16(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.unix_file_system */
extern T0* T50f11(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.windows_file_system */
extern T0* T50f10(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.operating_system */
extern T0* T50f9(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.forth */
extern void T39f17(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_forth */
extern void T39f19(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.add_traversing_cursor */
extern void T39f20(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T140f9(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.remove_traversing_cursor */
extern void T39f21(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set */
extern void T140f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* AP_ALTERNATIVE_OPTIONS_LIST.item_for_iteration */
extern T0* T39f6(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_item */
extern T0* T39f8(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.after */
extern T1 T39f5(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_after */
extern T1 T39f7(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.start */
extern void T39f16(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_start */
extern void T39f18(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_off */
extern T1 T39f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].off */
extern T1 T140f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item_for_iteration */
extern T0* T138f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_item */
extern T0* T138f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T138f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_after */
extern T1 T138f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T549f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].start */
extern void T138f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_start */
extern void T138f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_after */
extern void T549f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].is_empty */
extern T1 T138f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].off */
extern T1 T549f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].before */
extern T1 T549f6(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.usage_instruction */
extern T0* T50f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].forth */
extern void T137f20(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_forth */
extern void T137f24(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_position */
extern void T545f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].add_traversing_cursor */
extern void T137f25(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T545f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].remove_traversing_cursor */
extern void T137f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].item_for_iteration */
extern T0* T137f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_item */
extern T0* T137f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].after */
extern T1 T137f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_after */
extern T1 T137f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].after */
extern T1 T545f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].start */
extern void T137f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_start */
extern void T137f23(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_after */
extern void T545f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].is_empty */
extern T1 T137f15(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].off */
extern T1 T545f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].before */
extern T1 T545f6(GE_context* ac, T0* C);
/* GEC.report_version_number */
extern void T22f49(GE_context* ac, T0* C);
/* UT_ERROR_HANDLER.report_info */
extern void T32f10(GE_context* ac, T0* C, T0* a1);
/* UT_VERSION_NUMBER.make */
extern T0* T87c8(GE_context* ac, T0* a1);
/* AP_PARSER.parse_arguments */
extern void T38f27(GE_context* ac, T0* C);
/* AP_PARSER.parse_list */
extern void T38f29(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.final_error_action */
extern void T38f33(GE_context* ac, T0* C);
/* AP_PARSER.exceptions */
extern unsigned char ge295os1976;
extern T0* ge295ov1976;
extern T0* T38f20(GE_context* ac, T0* C);
/* KL_EXCEPTIONS.default_create */
extern T0* T37c1(GE_context* ac);
/* AP_ERROR_HANDLER.report_error_message */
extern void T139f10(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR_HANDLER.report_error_message */
extern void T139f10p1(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.check_options_after_parsing */
extern void T38f32(GE_context* ac, T0* C);
/* AP_ERROR.make_surplus_option_error */
extern T0* T40c23(GE_context* ac, T0* a1);
/* AP_ERROR_HANDLER.report_error */
extern void T139f9(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR_HANDLER.message */
extern T0* T139f6(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_missing_option_error */
extern T0* T40c22(GE_context* ac, T0* a1);
/* AP_PARSER.parse_argument */
extern void T38f31(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.parse_short */
extern void T38f35(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_missing_parameter_error */
extern T0* T40c25(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].off */
extern T1 T136f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_off */
extern T1 T136f12(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_unknown_option_error */
extern T0* T40c24(GE_context* ac, T0* a1);
/* CHARACTER_8.out */
extern T0* T2f1(GE_context* ac, T2* C);
/* AP_PARSER.parse_long */
extern void T38f34(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_unnecessary_parameter_error */
extern T0* T40c26(GE_context* ac, T0* a1, T0* a2);
/* AP_PARSER.string_ */
extern T0* T38f22(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].forth */
extern void T136f25(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].item_for_iteration */
extern T0* T136f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].after */
extern T1 T136f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_after */
extern T1 T136f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].start */
extern void T136f24(GE_context* ac, T0* C);
/* AP_PARSER.reset_parser */
extern void T38f30(GE_context* ac, T0* C);
/* AP_PARSER.all_options */
extern T0* T38f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].has */
extern T1 T137f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].make */
extern T0* T137c17(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].set_internal_cursor */
extern void T137f21(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_cursor */
extern T0* T137f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].make */
extern T0* T545c8(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].make */
extern T0* T548f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [AP_OPTION].make_empty */
extern T0* T547c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].default_create */
extern T0* T548c3(GE_context* ac);
/* AP_ERROR_HANDLER.reset */
extern void T139f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].force */
extern void T136f23(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].put */
extern void T136f30(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_cursors_right */
extern void T136f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_right */
extern void T136f35(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].put_last */
extern void T136f34(GE_context* ac, T0* C, T0* a1);
/* KL_ARGUMENTS.argument_count */
extern T6 T30f4(GE_context* ac, T0* C);
/* AP_PARSER.arguments */
extern T0* T38f23(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].force_last */
extern void T138f15(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].force */
extern void T551f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].fill_with */
extern void T550f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].extend */
extern void T550f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern void T138f19(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T551f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T550f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_capacity */
extern T6 T138f12(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].extendible */
extern T1 T138f10(GE_context* ac, T0* C, T6 a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.make */
extern T0* T39c11(GE_context* ac, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.old_make */
extern void T39f14(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_internal_cursor */
extern void T39f15(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.new_cursor */
extern T0* T39f10(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].make */
extern T0* T140c7(GE_context* ac, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_parameters_description */
extern void T39f13(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_introduction_option */
extern void T39f12(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.make */
extern T0* T41c19(GE_context* ac, T2 a1, T0* a2);
/* AP_FLAG.set_long_form */
extern void T41f21(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.set_short_form */
extern void T41f23(GE_context* ac, T0* C, T2 a1);
/* AP_FLAG.initialize */
extern void T41f20(GE_context* ac, T0* C);
/* AP_STRING_OPTION.set_parameter_description */
extern void T46f24(GE_context* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.set_description */
extern void T46f23(GE_context* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.make_with_long_form */
extern T0* T46c22(GE_context* ac, T0* a1);
/* AP_STRING_OPTION.set_long_form */
extern void T46f26(GE_context* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.initialize */
extern void T46f25(GE_context* ac, T0* C);
/* AP_STRING_OPTION.initialize */
extern void T46f25p1(GE_context* ac, T0* C);
/* AP_STRING_OPTION.initialize */
extern void T46f25p0(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.set_parameter_description */
extern void T45f24(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.set_description */
extern void T45f23(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.make_with_long_form */
extern T0* T45c22(GE_context* ac, T0* a1);
/* AP_INTEGER_OPTION.set_long_form */
extern void T45f26(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.initialize */
extern void T45f25(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T45f25p1(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T45f25p0(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.set_parameter_description */
extern void T44f27(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.set_description */
extern void T44f26(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.make_with_long_form */
extern T0* T44c25(GE_context* ac, T0* a1);
/* AP_BOOLEAN_OPTION.set_long_form */
extern void T44f29(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.initialize */
extern void T44f28(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T44f28p1(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T44f28p0(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.set_parameter_description */
extern void T43f27(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.extend */
extern void T43f26(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.update_parameter_description */
extern void T43f31(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].forth */
extern void T143f21(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].is_last */
extern T1 T143f10(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_is_last */
extern T1 T143f8(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].item_for_iteration */
extern T0* T143f9(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_item */
extern T0* T143f7(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].after */
extern T1 T143f12(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_after */
extern T1 T143f6(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].start */
extern void T143f20(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.set_description */
extern void T43f25(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.make_with_long_form */
extern T0* T43c24(GE_context* ac, T0* a1);
/* AP_ENUMERATION_OPTION.set_long_form */
extern void T43f29(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.initialize */
extern void T43f28(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].set_equality_tester */
extern void T143f19(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.string_equality_tester */
extern T0* T43f13(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T43f28p1(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T43f28p0(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T43f28p2(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].force_last */
extern void T137f18(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].force */
extern void T548f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [AP_OPTION].fill_with */
extern void T547f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].extend */
extern void T547f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].resize */
extern void T137f22(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].aliased_resized_area */
extern T0* T548f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_OPTION].aliased_resized_area */
extern T0* T547f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_capacity */
extern T6 T137f14(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].extendible */
extern T1 T137f13(GE_context* ac, T0* C, T6 a1);
/* AP_FLAG.set_description */
extern void T41f18(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.make_with_long_form */
extern T0* T41c17(GE_context* ac, T0* a1);
/* AP_PARSER.set_parameters_description */
extern void T38f26(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.set_application_description */
extern void T38f25(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.make */
extern T0* T38c24(GE_context* ac);
/* AP_DISPLAY_HELP_FLAG.set_description */
extern void T50f36(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.make */
extern T0* T50c35(GE_context* ac, T2 a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.set_long_form */
extern void T50f39(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.set_short_form */
extern void T50f38(GE_context* ac, T0* C, T2 a1);
/* AP_DISPLAY_HELP_FLAG.initialize */
extern void T50f37(GE_context* ac, T0* C);
/* AP_PARSER.make_empty */
extern void T38f28(GE_context* ac, T0* C);
/* AP_ERROR_HANDLER.make_standard */
extern T0* T139c7(GE_context* ac);
/* AP_ERROR_HANDLER.std */
extern T0* T139f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T138c14(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].set_internal_cursor */
extern void T138f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_cursor */
extern T0* T138f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T549c8(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T551f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make_empty */
extern T0* T550c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].default_create */
extern T0* T551c3(GE_context* ac);
/* UT_ERROR_HANDLER.make_standard */
extern T0* T32c7(GE_context* ac);
/* UT_ERROR_HANDLER.std */
extern T0* T32f4(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.set_ise_library_variable */
extern void T31f7(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.execution_environment */
extern T0* T31f3(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.ise_eiffel_value */
extern T0* T31f2(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.ise_library_value */
extern T0* T31f1(GE_context* ac, T0* C);
/* GEC.ise_variables */
extern unsigned char ge1171os2018;
extern T0* ge1171ov2018;
extern T0* T22f20(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.default_create */
extern T0* T31c6(GE_context* ac);
/* KL_ARGUMENTS.set_program_name */
extern void T30f6(GE_context* ac, T0* C, T0* a1);
/* GEC.arguments */
extern T0* T22f24(GE_context* ac, T0* C);
/* KL_EXCEPTIONS.die */
extern void T37f2(GE_context* ac, T0* C, T6 a1);
/* GEC.exceptions */
extern T0* T22f19(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.set_exception_data */
extern void T19f15(GE_context* ac, T0* C, T6 a1, T1 a2, T6 a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T6 a11, T1 a12);
/* ISE_EXCEPTION_MANAGER.exception_from_data */
extern T0* T19f7(GE_context* ac, T0* C);
extern T1 T19f7ot1(T0* a1, T0** a2);
extern T1 T19f7ot2(T0* a1, T0** a2);
extern T1 T19f7ot3(T0* a1, T0** a2);
extern T1 T19f7ot4(T0* a1, T0** a2);
extern T1 T19f7ot5(T0* a1, T0** a2);
extern T1 T19f7ot6(T0* a1, T0** a2);
extern T1 T19f7ot7(T0* a1, T0** a2);
/* COM_FAILURE.set_exception_information */
extern void T99f15(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.ccom_hresult_to_string */
extern T0* T99f11(GE_context* ac, T0* C, T6 a1);
/* INTEGER_32.to_hex_string */
extern T0* T6f24(GE_context* ac, T6* C);
/* COM_FAILURE.set_hresult_code */
extern void T99f14(GE_context* ac, T0* C, T6 a1);
/* OPERATING_SYSTEM_FAILURE.set_error_code */
extern void T98f9(GE_context* ac, T0* C, T6 a1);
/* IO_FAILURE.set_error_code */
extern void T97f11(GE_context* ac, T0* C, T6 a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_signal_code */
extern void T96f9(GE_context* ac, T0* C, T6 a1);
/* INVARIANT_VIOLATION.set_is_entry */
extern void T95f9(GE_context* ac, T0* C, T1 a1);
/* ROUTINE_FAILURE.set_class_name */
extern void T90f10(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_routine_name */
extern void T90f9(GE_context* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_from_code */
extern T0* T19f10(GE_context* ac, T0* C, T6 a1);
/* SERIALIZATION_FAILURE.default_create */
extern T0* T119c6(GE_context* ac);
/* OLD_VIOLATION.default_create */
extern T0* T92c6(GE_context* ac);
/* COM_FAILURE.default_create */
extern T0* T99c12(GE_context* ac);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.default_create */
extern T0* T118c6(GE_context* ac);
/* MISMATCH_FAILURE.default_create */
extern T0* T116c6(GE_context* ac);
/* OPERATING_SYSTEM_FAILURE.default_create */
extern T0* T98c7(GE_context* ac);
/* IO_FAILURE.set_code */
extern void T97f9(GE_context* ac, T0* C, T6 a1);
/* IO_FAILURE.default_create */
extern T0* T97c8(GE_context* ac);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.default_create */
extern T0* T115c6(GE_context* ac);
/* VOID_ASSIGNED_TO_EXPANDED.default_create */
extern T0* T114c6(GE_context* ac);
/* EXTERNAL_FAILURE.default_create */
extern T0* T113c6(GE_context* ac);
/* CREATE_ON_DEFERRED.default_create */
extern T0* T112c6(GE_context* ac);
/* RESUMPTION_FAILURE.default_create */
extern T0* T111c6(GE_context* ac);
/* RESCUE_FAILURE.default_create */
extern T0* T110c6(GE_context* ac);
/* EIFFEL_RUNTIME_PANIC.set_code */
extern void T100f9(GE_context* ac, T0* C, T6 a1);
/* EIFFEL_RUNTIME_PANIC.code */
extern T6 T100f7(GE_context* ac, T0* C);
/* EIFFEL_RUNTIME_PANIC.default_create */
extern T0* T100c8(GE_context* ac);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.default_create */
extern T0* T96c7(GE_context* ac);
/* LOOP_INVARIANT_VIOLATION.default_create */
extern T0* T109c6(GE_context* ac);
/* VARIANT_VIOLATION.default_create */
extern T0* T108c6(GE_context* ac);
/* BAD_INSPECT_VALUE.default_create */
extern T0* T107c6(GE_context* ac);
/* ROUTINE_FAILURE.default_create */
extern T0* T90c8(GE_context* ac);
/* CHECK_VIOLATION.default_create */
extern T0* T106c6(GE_context* ac);
/* INVARIANT_VIOLATION.default_create */
extern T0* T95c7(GE_context* ac);
/* FLOATING_POINT_FAILURE.default_create */
extern T0* T105c6(GE_context* ac);
/* POSTCONDITION_VIOLATION.default_create */
extern T0* T104c6(GE_context* ac);
/* PRECONDITION_VIOLATION.default_create */
extern T0* T103c6(GE_context* ac);
/* NO_MORE_MEMORY.set_code */
extern void T94f10(GE_context* ac, T0* C, T6 a1);
/* NO_MORE_MEMORY.code */
extern T6 T94f7(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.no_memory_exception_object_cell */
extern unsigned char ge1698os1922;
extern T0* ge1698ov1922;
extern T0* T19f6(GE_context* ac, T0* C);
/* CELL [NO_MORE_MEMORY].put */
extern T0* T26c2(GE_context* ac, T0* a1);
/* NO_MORE_MEMORY.default_create */
extern T0* T94c8(GE_context* ac);
/* VOID_TARGET.default_create */
extern T0* T88c6(GE_context* ac);
/* ISE_EXCEPTION_MANAGER.exception_data */
extern T0* T19f9(GE_context* ac, T0* C);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].put */
extern void T24f2(GE_context* ac, T0* C, T0* a1);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].put */
extern T0* T24c2(GE_context* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_data_cell */
extern unsigned char ge1698os1920;
extern T0* ge1698ov1920;
extern T0* T19f4(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.init_exception_manager */
extern void T19f14(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.unraisable_exceptions */
extern unsigned char ge1698os1918;
extern T0* ge1698ov1918;
extern T0* T19f3(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].force */
extern void T23f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].position */
extern T6 T23f22(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].deleted_position */
extern T6 T23f21(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].add_space */
extern void T23f38(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].accommodate */
extern void T23f39(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_indexes_map */
extern void T23f43(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_deleted_marks */
extern void T23f42(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_keys */
extern void T23f41(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_content */
extern void T23f40(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].put */
extern void T23f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_conflict */
extern void T23f46(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].found */
extern T1 T23f31(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].occupied */
extern T1 T23f29(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].empty_duplicate */
extern T0* T23f28(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].compare_objects */
extern void T23f45(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].soon_full */
extern T1 T23f20(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].not_found */
extern T1 T23f19(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].internal_search */
extern void T23f37(GE_context* ac, T0* C, T6 a1);
/* ISE_EXCEPTION_MANAGER.unignorable_exceptions */
extern unsigned char ge1698os1917;
extern T0* ge1698ov1917;
extern T0* T19f2(GE_context* ac, T0* C);
/* KL_DIRECTORY.dispose */
extern void T330f30(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.dispose */
extern void T305f28(GE_context* ac, T0* C);
/* MANAGED_POINTER.dispose */
extern void T128f10(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.dispose */
extern void T29f46(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_close */
extern void T29f51(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_close */
extern void T29f56(GE_context* ac, T0* C, T14 a1);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].record */
extern void T1832f5(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T1760f12(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T1760f12p1(GE_context* ac, T0* C, T6 a1);
/* DS_BILINKABLE [INTEGER_32].forget_left */
extern void T1833f8(GE_context* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].forget_right */
extern void T1833f7(GE_context* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].put_right */
extern void T1833f6(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].attach_left */
extern void T1833f11(GE_context* ac, T0* C, T0* a1);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].item */
extern T0* T1835f4(GE_context* ac, T0* C, T6 a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].record */
extern void T1830f4(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].record */
extern void T1828f5(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.add */
extern void T1760f11(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.item */
extern T6 T1737f14(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.upper */
extern T6 T1760f6(GE_context* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.lower */
extern T6 T1760f7(GE_context* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.add */
extern void T1760f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T1428f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T292f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T291f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T288f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_OR_ELSE_OPERATOR.reset */
extern void T1268f34(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.reset */
extern void T1267f34(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.reset */
extern void T947f75(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.reset */
extern void T934f55(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.reset */
extern void T928f53(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].remove */
extern void T1448f15(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].keep_head */
extern void T1615f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].set_count */
extern void T1615f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_left */
extern void T1448f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_cursors_left */
extern void T1448f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_position */
extern void T1617f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].remove_last */
extern void T1448f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_last_cursors_after */
extern void T1448f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_next_cursor */
extern void T1617f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_after */
extern void T1617f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].remove */
extern void T873f15(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_CLUSTER].keep_head */
extern void T1472f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_CLUSTER].set_count */
extern void T1472f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].move_left */
extern void T873f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].move_cursors_left */
extern void T873f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].set_position */
extern void T1474f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].remove_last */
extern void T873f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].move_last_cursors_after */
extern void T873f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].set_next_cursor */
extern void T1474f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].set_after */
extern void T1474f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].remove */
extern void T633f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].move_left */
extern void T633f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].move_cursors_left */
extern void T633f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].set_position */
extern void T1378f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].remove_last */
extern void T633f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].move_last_cursors_after */
extern void T633f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].set_next_cursor */
extern void T1378f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].set_after */
extern void T1378f7(GE_context* ac, T0* C);
/* XM_CHARACTER_DATA.node_set_parent */
extern void T1416f4(GE_context* ac, T0* C, T0* a1);
/* XM_ATTRIBUTE.node_set_parent */
extern void T406f6(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T1428f8(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T1428f8p1(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.reset */
extern void T287f16(GE_context* ac, T0* C);
extern T1 T287f16ot1(T0* a1, T0** a2);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T1260f12(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.type */
extern T0* T1260f6(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T1260f12p1(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.name */
extern T0* T1260f7(GE_context* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.reset */
extern void T1258f13(GE_context* ac, T0* C);
/* ET_CREATE_INSTRUCTION.reset */
extern void T1256f14(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.reset */
extern void T327f6(GE_context* ac, T0* C);
/* ET_CREATE_INSTRUCTION.type */
extern T0* T1256f6(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.reset */
extern void T1255f14(GE_context* ac, T0* C);
/* ET_LOOP_INSTRUCTION.reset */
extern void T1253f15(GE_context* ac, T0* C);
/* ET_LOOP_INSTRUCTION.until_expression */
extern T0* T1253f9(GE_context* ac, T0* C);
/* ET_VARIANT.reset */
extern void T1185f7(GE_context* ac, T0* C);
/* ET_LOOP_INVARIANTS.reset */
extern void T1137f11(GE_context* ac, T0* C);
/* ET_COMPOUND.reset */
extern void T332f13(GE_context* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.reset */
extern void T1252f7(GE_context* ac, T0* C);
/* ET_ASSIGNMENT.reset */
extern void T1251f7(GE_context* ac, T0* C);
extern T1 T1251f7ot1(T0* a1, T0** a2);
/* ET_ASSIGNER_INSTRUCTION.reset */
extern void T1250f17(GE_context* ac, T0* C);
extern T1 T1250f17ot1(T0* a1, T0** a2);
/* ET_ASSIGNER_INSTRUCTION.dummy_name */
extern unsigned char ge738os33307;
extern T0* ge738ov33307;
extern T0* T1250f6(GE_context* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.reset */
extern void T1116f10(GE_context* ac, T0* C);
/* ET_WHEN_PART_LIST.reset */
extern void T1191f7(GE_context* ac, T0* C);
/* ET_WHEN_PART.reset */
extern void T1188f4(GE_context* ac, T0* C);
/* ET_CHOICE_LIST.reset */
extern void T1007f11(GE_context* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.expression */
extern T0* T1116f6(GE_context* ac, T0* C);
/* ET_IF_INSTRUCTION.reset */
extern void T1098f12(GE_context* ac, T0* C);
/* ET_ELSEIF_PART_LIST.reset */
extern void T1056f7(GE_context* ac, T0* C);
/* ET_ELSEIF_PART.reset */
extern void T1053f6(GE_context* ac, T0* C);
/* ET_ELSEIF_PART.expression */
extern T0* T1053f3(GE_context* ac, T0* C);
/* ET_IF_INSTRUCTION.expression */
extern T0* T1098f7(GE_context* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.reset */
extern void T1050f7(GE_context* ac, T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T995f15(GE_context* ac, T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T995f15p1(GE_context* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset */
extern void T964f25(GE_context* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset_unfolded_form */
extern void T964f26(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.reset */
extern void T944f18(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T288f15(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T288f15p1(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T288f15p0(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.process */
extern void T1428f7(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.process */
extern void T1260f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.process */
extern void T1258f12(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.process */
extern void T1256f13(GE_context* ac, T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.process */
extern void T1255f13(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.process */
extern void T1253f14(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT_ATTEMPT.process */
extern void T1252f6(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT.process */
extern void T1251f6(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.process */
extern void T1250f16(GE_context* ac, T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.process */
extern void T1116f9(GE_context* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.process */
extern void T1098f11(GE_context* ac, T0* C, T0* a1);
/* ET_DEBUG_INSTRUCTION.process */
extern void T1050f6(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.process */
extern void T995f14(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.process */
extern void T964f24(GE_context* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.process */
extern void T944f17(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.process */
extern void T288f11(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_RANGE.reset */
extern void T1257f8(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.set_sign */
extern void T1206f69(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_sign */
extern void T1205f69(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_sign */
extern void T1204f69(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_sign */
extern void T1203f69(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_sign */
extern void T1202f69(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_type */
extern void T1206f74(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_type */
extern void T1205f74(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_type */
extern void T1204f74(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_type */
extern void T1203f74(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_type */
extern void T1202f74(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_cast_type */
extern void T1206f70(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_cast_type */
extern void T1205f70(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_cast_type */
extern void T1204f70(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_cast_type */
extern void T1203f70(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_cast_type */
extern void T1202f70(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.set_type */
extern void T1213f44(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_type */
extern void T1212f44(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_type */
extern void T1199f45(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.set_cast_type */
extern void T1213f40(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_cast_type */
extern void T1212f40(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_cast_type */
extern void T1199f41(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.set_prefix */
extern void T1242f47(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.tokens */
extern T0* T1242f12(GE_context* ac, T0* C);
/* ET_INFIX_NAME.set_prefix */
extern void T1240f105(GE_context* ac, T0* C);
/* ET_INFIX_NAME.tokens */
extern T0* T1240f41(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.set_prefix */
extern void T1239f73(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.set_prefix */
extern void T1238f91(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.set_prefix */
extern void T859f86(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.tokens */
extern T0* T859f5(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.set_prefix */
extern void T833f73(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.tokens */
extern T0* T833f17(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.set_infix */
extern void T1242f46(GE_context* ac, T0* C);
/* ET_INFIX_NAME.set_infix */
extern void T1240f104(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.set_infix */
extern void T1239f72(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.tokens */
extern T0* T1239f32(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.set_infix */
extern void T1238f90(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.tokens */
extern T0* T1238f27(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.set_infix */
extern void T859f85(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.set_infix */
extern void T833f72(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.reset */
extern void T1242f48(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.reset */
extern void T859f87(GE_context* ac, T0* C);
/* XM_PROCESSING_INSTRUCTION.node_set_parent */
extern void T1415f6(GE_context* ac, T0* C, T0* a1);
/* XM_COMMENT.node_set_parent */
extern void T1414f5(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.node_set_parent */
extern void T155f24(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1279f35(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1278f37(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1277f36(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1276f36(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1275f38(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1274f37(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T1279f36(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T1278f38(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T1277f37(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_across_components */
extern void T1276f37(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_across_components */
extern void T1275f39(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_across_components */
extern void T1274f38(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T1859f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_type */
extern void T1859f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T238f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T79f536(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_actual_argument_dynamic_types */
extern void T79f185(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.error_handler */
extern T0* T238f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_fatal_error */
extern void T238f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T1858f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_type */
extern void T1858f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T831f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T831f18ot1(T0* a1, T0** a2);
extern T1 T831f18ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T831f18p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T831f18p1ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T533f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TARGET_LIST.item */
extern T0* T1341f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T533f17p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T533f17p1ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_type_from_type_set */
extern void T335f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FUNCTION_TYPE.put_type_from_type_set */
extern void T334f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.put_type_from_type_set */
extern void T323f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_from_type_set */
extern void T318f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_tuple_label */
extern void T318f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T238f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T79f532(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f532ot1(T0* a1, T0** a2);
extern T1 T79f532ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_argument_dynamic_types */
extern void T79f535(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_feature */
extern void T318f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T318f15ot1(T0* a1, T0** a2);
extern T1 T318f15ot2(T0* a1, T0** a2);
extern T1 T318f15ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type */
extern void T831f20(GE_context* ac, T0* C, T0* a1);
extern T1 T831f20ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PRECURSOR.is_builtin_function_item */
extern T1 T310f47(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.builtin_function_feature */
extern T6 T310f48(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.is_builtin_function_item */
extern T1 T248f45(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.builtin_function_feature */
extern T6 T248f46(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_routine_call */
extern T1 T310f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.builtin_procedure_feature */
extern T6 T310f49(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.is_builtin_routine_call */
extern T1 T248f44(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.builtin_procedure_feature */
extern T6 T248f47(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_from_type_set */
extern void T314f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_tuple_label */
extern void T314f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T238f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T79f531(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f531ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_result_dynamic_types */
extern void T79f534(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T314f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T314f16p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T314f16p1ot1(T0* a1, T0** a2);
extern T1 T314f16p1ot2(T0* a1, T0** a2);
extern T1 T314f16p1ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_type_from_type_set */
extern void T306f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type_from_type_set */
extern void T274f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TYPE.put_type_from_type_set */
extern void T239f80(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T1859f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T1858f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.propagate_can_be_void */
extern void T831f19(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.propagate_can_be_void */
extern void T318f13(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.propagate_can_be_void */
extern void T314f15(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.propagate_can_be_void */
extern void T274f21(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_stream */
extern void T610f295(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T610f302(GE_context* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.name */
extern T0* T205f16(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T610f302p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.new_file_buffer */
extern T0* T610f73(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_stream */
extern void T608f202(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T608f211(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T608f211p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.new_file_buffer */
extern T0* T608f55(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_stream */
extern void T607f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T607f298(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T607f298p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.new_file_buffer */
extern T0* T607f71(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_stream */
extern void T570f200(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T570f208(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T570f208p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.new_file_buffer */
extern T0* T570f46(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T610f296(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T610f296p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T610f296p0(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_action */
extern void T610f306(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.from_hexadecimal */
extern void T1349f10(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.hexadecimal_to_integer */
extern T6 T34f17(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_CHARACTER_ENTITY.string_ */
extern T0* T1349f7(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.to_utf8 */
extern T0* T1349f3(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.utf8 */
extern T0* T1349f6(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_ascii */
extern T1 T1349f2(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_valid */
extern T1 T1349f5(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_code */
extern T1 T772f24(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.unicode */
extern T0* T1349f4(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.from_decimal */
extern void T1349f9(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.has_normalized_newline */
extern T1 T610f203(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_substring */
extern T0* T610f183(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_PE_ENTITY_DEF.text_count */
extern T6 T610f182(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.system_literal_text */
extern T0* T610f164(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_item */
extern T2 T610f209(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T610f123(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern unsigned char ge1298os29329;
extern T0* ge1298ov29329;
extern T0* T610f123p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_line_column */
extern void T610f310(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text */
extern T0* T610f107(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.pop_start_condition */
extern void T610f309(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition */
extern void T610f307(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_last_token */
extern void T610f308(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_eof_action */
extern void T610f305(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.wrap */
extern T1 T610f101(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_refill_input_buffer */
extern void T610f304(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_null_trans_state */
extern T6 T610f100(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_previous_state */
extern T6 T610f99(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.terminate */
extern void T610f303(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T608f203(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T608f203p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_action */
extern void T608f217(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.has_normalized_newline */
extern T1 T608f183(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_substring */
extern T0* T608f163(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER_DTD.text_count */
extern T6 T608f162(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.system_literal_text */
extern T0* T608f144(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_item */
extern T2 T608f197(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.normalized_newline */
extern T0* T608f106(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_line_column */
extern void T608f223(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text */
extern T0* T608f80(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.pop_start_condition */
extern void T608f222(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition */
extern void T608f218(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_eof_action */
extern void T608f216(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.wrap */
extern T1 T608f68(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_refill_input_buffer */
extern void T608f215(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_null_trans_state */
extern T6 T608f67(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_previous_state */
extern T6 T608f66(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.fatal_error */
extern void T608f214(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.terminate */
extern void T608f213(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_last_token */
extern void T608f212(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T607f292(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T607f292p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_action */
extern void T607f301(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.has_normalized_newline */
extern T1 T607f200(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_substring */
extern T0* T607f180(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_ENTITY_DEF.text_count */
extern T6 T607f179(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.system_literal_text */
extern T0* T607f161(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_item */
extern T2 T607f207(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T607f120(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T607f120p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_line_column */
extern void T607f306(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text */
extern T0* T607f104(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.pop_start_condition */
extern void T607f305(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition */
extern void T607f302(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.set_last_token */
extern void T607f304(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_eof_action */
extern void T607f300(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.terminate */
extern void T607f303(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.wrap */
extern T1 T607f98(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_refill_input_buffer */
extern void T607f299(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_null_trans_state */
extern T6 T607f97(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_previous_state */
extern T6 T607f96(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.read_token */
extern void T570f201(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_execute_action */
extern void T570f212(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.has_normalized_newline */
extern T1 T570f181(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.text_substring */
extern T0* T570f161(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER.text_count */
extern T6 T570f160(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.system_literal_text */
extern T0* T570f142(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.text_item */
extern T2 T570f195(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.normalized_newline */
extern T0* T570f101(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_set_line_column */
extern void T570f220(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.text */
extern T0* T570f75(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.pop_start_condition */
extern void T570f219(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.set_start_condition */
extern void T570f221(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.push_start_condition */
extern void T570f213(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.set_last_token */
extern void T570f218(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_execute_eof_action */
extern void T570f211(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.terminate */
extern void T570f217(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.wrap */
extern T1 T570f63(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_refill_input_buffer */
extern void T570f210(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_null_trans_state */
extern T6 T570f62(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_previous_state */
extern T6 T570f61(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.fatal_error */
extern void T570f209(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T610f298(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition_dtd_ignore */
extern void T608f205(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T607f294(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T570f203(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_encoding */
extern void T610f299(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.set_encoding */
extern void T848f31(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_encoding */
extern void T608f206(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_encoding */
extern void T607f295(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_encoding */
extern void T570f204(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_from_resolver */
extern void T610f300(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_from_resolver */
extern void T608f207(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_from_resolver */
extern void T607f296(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T570f205(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.close_input */
extern void T610f297(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.close_input */
extern void T608f204(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.close_input */
extern void T607f293(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.close_input */
extern void T570f202(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.reset */
extern void T1241f8(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.preparse */
extern void T448f162(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.preparse */
extern void T230f183(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.preparse */
extern void T217f169(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.preparse */
extern void T198f162(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.parse_all */
extern void T448f164(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.parse_all */
extern void T230f185(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.parse_all */
extern void T217f171(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.parse_all */
extern void T198f164(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_classes */
extern void T448f163(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_kernel_class */
extern void T448f177(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_imported_class */
extern void T471f87(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_imported_class */
extern T1 T471f31(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].has */
extern T1 T1323f13(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.is_declared_locally */
extern T1 T471f29(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T448f176(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.native_array_class_name */
extern unsigned char ge808os11361;
extern T0* ge808ov11361;
extern T0* T81f573(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.import_classes */
extern void T230f184(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.import_kernel_class */
extern void T230f198(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.import_kernel_classes */
extern void T230f197(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.import_classes */
extern void T217f170(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.import_kernel_class */
extern void T217f184(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T217f183(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.import_classes */
extern void T198f163(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.import_kernel_class */
extern void T198f177(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T198f176(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.consume */
extern void T448f161(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assembly */
extern void T789f6(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gaaaa_error */
extern void T36f243(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_assembly_error */
extern void T36f270(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.make_gaaaa */
extern T0* T1690c14(GE_context* ac, T0* a1);
/* ET_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T36f42(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gaaaa_error */
extern void T77f244(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_assembly_error */
extern void T77f271(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T77f43(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.error_handler */
extern T0* T789f2(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.consume */
extern void T230f199(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_gac_assembly */
extern void T789f7(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.consume */
extern void T217f185(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.consume */
extern void T198f161(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T448f165(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T448f165ac1(T0* a1);
/* ET_DOTNET_ASSEMBLIES.do_all */
extern void T447f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].item */
extern T0* T1319f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].force_last */
extern void T472f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].slots_put */
extern void T472f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_UNIVERSE].clashes_put */
extern void T472f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_UNIVERSE].slots_item */
extern T6 T472f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].hash_position */
extern T6 T472f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].resize */
extern void T472f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].clashes_resize */
extern void T472f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].special_integer_ */
extern T0* T472f33(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].key_storage_resize */
extern void T472f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_resize */
extern void T472f59(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].aliased_resized_area */
extern T0* T1327f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_UNIVERSE].aliased_resized_area */
extern T0* T1325f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].key_storage_item */
extern T0* T472f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_item */
extern T0* T472f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].clashes_item */
extern T6 T472f17(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].slots_resize */
extern void T472f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].new_modulus */
extern T6 T472f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].new_capacity */
extern T6 T472f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_put */
extern void T472f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].force */
extern void T1327f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_UNIVERSE].fill_with */
extern void T1325f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_UNIVERSE].extend */
extern void T1325f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].search_position */
extern void T472f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].key_equality_tester */
extern T0* T472f25(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].unset_found_item */
extern void T472f47(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].has */
extern T1 T472f24(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.add_universe_recursive */
extern void T230f186(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.add_universe_recursive */
extern T0* T230f186ac1(T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T217f172(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T217f172ac1(T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T198f165(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T198f165ac1(T0* a1);
/* ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T448f166(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T448f166ac1(T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].force_last */
extern void T446f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_put */
extern void T446f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_put */
extern void T446f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_item */
extern T6 T446f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].hash_position */
extern T6 T446f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].resize */
extern void T446f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_resize */
extern void T446f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].special_integer_ */
extern T0* T446f26(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_storage_resize */
extern void T446f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_resize */
extern void T446f45(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1316f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1317f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_storage_item */
extern T0* T446f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_item */
extern T0* T446f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_item */
extern T6 T446f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_resize */
extern void T446f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_modulus */
extern T6 T446f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T446f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_put */
extern void T446f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].force */
extern void T1316f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DOTNET_ASSEMBLY].fill_with */
extern void T1317f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_ASSEMBLY].extend */
extern void T1317f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].search_position */
extern void T446f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_equality_tester */
extern T0* T446f24(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].unset_found_item */
extern void T446f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].has */
extern T1 T446f29(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T230f187(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T230f187ac1(T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T217f173(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T217f173ac1(T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T198f166(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T198f166ac1(T0* a1);
/* ET_LIBRARY.dotnet_assemblies_do_if */
extern void T460f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_if */
extern void T197f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.dotnet_assemblies_do_if */
extern void T189f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.dotnet_assemblies_do_if */
extern void T70f309(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.dotnet_assemblies_do_if */
extern void T64f313(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.dotnet_assemblies_do_if */
extern void T61f317(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.clusters_do_explicit */
extern void T460f179(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTERS.do_explicit */
extern void T771f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.do_recursive */
extern void T800f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].item */
extern T0* T1425f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_LIBRARY.clusters_do_explicit */
extern void T189f204(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.clusters_do_explicit */
extern void T70f310(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.do_explicit */
extern void T214f11(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.do_recursive */
extern void T214f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.clusters_do_explicit */
extern void T64f314(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.clusters_do_explicit */
extern void T61f318(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.do_explicit */
extern void T412f15(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.do_recursive */
extern void T412f16(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_scm_read_mapping */
extern void T799f67(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_scm_read_mapping */
extern void T411f71(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_scm_read_mapping */
extern void T215f65(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_scm_write_mapping */
extern void T799f68(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_scm_write_mapping */
extern void T411f72(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_scm_write_mapping */
extern void T215f66(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_preparsed */
extern void T799f74(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_preparsed */
extern void T411f78(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_preparsed */
extern void T215f68(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.add_recursive_cluster */
extern void T799f75(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.new_recursive_cluster */
extern T0* T799f41(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_implicit */
extern void T799f79(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_file_rules */
extern void T799f78(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.string_ */
extern T0* T799f40(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.add_recursive_cluster */
extern void T411f79(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.add_subcluster */
extern void T411f82(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.new_recursive_cluster */
extern T0* T411f42(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_use_obsolete_syntax */
extern void T411f84(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_implicit */
extern void T411f83(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.string_ */
extern T0* T411f41(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.add_recursive_cluster */
extern void T215f69(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.new_recursive_cluster */
extern T0* T215f44(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_use_obsolete_syntax */
extern void T215f71(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_implicit */
extern void T215f70(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.name */
extern T0* T215f22(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.string_ */
extern T0* T215f39(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.set_provider_constraint */
extern void T799f72(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_provider_constraint */
extern void T800f12(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_provider_constraint */
extern void T411f80(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_provider_constraint */
extern void T412f18(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_provider_constraint */
extern void T215f63(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_provider_constraint */
extern void T214f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_dependant_constraint */
extern void T799f73(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_dependant_constraint */
extern void T800f13(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_dependant_constraint */
extern void T411f81(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_dependant_constraint */
extern void T412f19(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_dependant_constraint */
extern void T215f64(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_dependant_constraint */
extern void T214f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.process */
extern void T799f69(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.process */
extern void T411f73(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.process */
extern void T215f67(GE_context* ac, T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.reset */
extern void T1283f7(GE_context* ac, T0* C);
/* ET_TAGGED_ASSERTION.process */
extern void T1283f8(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_tagged_assertion */
extern void T1306f106(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_cast_type */
extern void T1201f39(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.set_cast_type */
extern void T1200f43(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_cast_type */
extern void T832f39(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_type */
extern void T1201f43(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.set_type */
extern void T1200f47(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_type */
extern void T832f42(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T1281f10(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.reset */
extern void T958f75(GE_context* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.process */
extern void T1281f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_typed_open_argument */
extern void T1306f105(GE_context* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.process */
extern void T958f76(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_question_mark_symbol */
extern void T1306f102(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.reset */
extern void T1598f6(GE_context* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.reset */
extern void T1280f9(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.process */
extern void T1598f7(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_implicit_current_target */
extern void T1306f100(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_OPEN_TARGET.process */
extern void T1280f10(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_open_target */
extern void T1306f104(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.set_index */
extern void T1862f25(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.set_index */
extern void T1861f24(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.set_index */
extern void T1860f20(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.set_index */
extern void T1797f6(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.set_index */
extern void T1723f17(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.set_index */
extern void T1598f8(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.set_index */
extern void T1281f12(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_OPEN_TARGET.set_index */
extern void T1280f11(GE_context* ac, T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.set_index */
extern void T958f77(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1279f39(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1278f41(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1277f40(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1276f40(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1275f42(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1274f41(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.set_arguments */
extern void T992f35(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.set_seed */
extern void T1268f35(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_AND_THEN_OPERATOR.set_seed */
extern void T1267f35(GE_context* ac, T0* C, T6 a1);
/* ET_SYMBOL_OPERATOR.set_seed */
extern void T947f76(GE_context* ac, T0* C, T6 a1);
/* ET_KEYWORD_OPERATOR.set_seed */
extern void T934f56(GE_context* ac, T0* C, T6 a1);
/* ET_FREE_OPERATOR.set_seed */
extern void T928f54(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_SYMBOL.set_seed */
extern void T651f106(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_validity_checked */
extern void T1237f82(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.set_validity_checked */
extern void T1236f79(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_validity_checked */
extern void T1234f78(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.set_validity_checked */
extern void T1233f80(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.set_validity_checked */
extern void T1232f79(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.set_validity_checked */
extern void T534f73(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.set_validity_checked */
extern void T528f74(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.set_validity_checked */
extern void T366f75(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_validity_checked */
extern void T365f77(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_validity_checked */
extern void T363f77(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.set_validity_checked */
extern void T331f78(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_validity_checked */
extern void T260f83(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_validity_error */
extern void T1237f83(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.set_validity_error */
extern void T1236f80(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_validity_error */
extern void T1234f79(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.set_validity_error */
extern void T1233f81(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.set_validity_error */
extern void T1232f80(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.set_validity_error */
extern void T534f74(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.set_validity_error */
extern void T528f75(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.set_validity_error */
extern void T366f76(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_validity_error */
extern void T365f78(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_validity_error */
extern void T363f78(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.set_validity_error */
extern void T331f79(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_validity_error */
extern void T260f84(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_id */
extern void T1237f79(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_id */
extern void T1236f76(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_id */
extern void T1234f75(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_id */
extern void T1233f77(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_id */
extern void T1232f76(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_id */
extern void T534f77(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_id */
extern void T528f78(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_id */
extern void T366f72(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_id */
extern void T365f74(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_id */
extern void T363f74(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_id */
extern void T331f75(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_id */
extern void T260f80(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_feature */
extern void T1237f108(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_feature */
extern void T1236f107(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_feature */
extern void T1234f104(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_feature */
extern void T1233f109(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_feature */
extern void T1232f107(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_feature */
extern void T534f102(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_feature */
extern void T528f105(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_feature */
extern void T366f95(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_feature */
extern void T365f99(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_feature */
extern void T363f98(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_implementation_feature */
extern void T331f105(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_feature */
extern void T260f110(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_class */
extern void T1237f109(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_class */
extern void T1236f108(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_class */
extern void T1234f105(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_class */
extern void T1233f110(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_class */
extern void T1232f108(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_class */
extern void T534f103(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_class */
extern void T528f106(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_class */
extern void T366f96(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_class */
extern void T365f100(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_class */
extern void T363f99(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_implementation_class */
extern void T331f106(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_class */
extern void T260f111(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_preconditions */
extern void T1237f106(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_preconditions */
extern void T1236f105(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_preconditions */
extern void T1234f102(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_preconditions */
extern void T1233f107(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_preconditions */
extern void T1232f105(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_preconditions */
extern void T534f100(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_preconditions */
extern void T528f103(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_preconditions */
extern void T366f93(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_preconditions */
extern void T365f97(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_preconditions */
extern void T363f96(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_preconditions */
extern void T331f103(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_preconditions */
extern void T260f108(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_postconditions */
extern void T1237f107(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_postconditions */
extern void T1236f106(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_postconditions */
extern void T1234f103(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_postconditions */
extern void T1233f108(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_postconditions */
extern void T1232f106(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_postconditions */
extern void T534f101(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_postconditions */
extern void T528f104(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_postconditions */
extern void T366f94(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_postconditions */
extern void T365f98(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_postconditions */
extern void T363f97(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_postconditions */
extern void T331f104(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_postconditions */
extern void T260f109(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_first_precursor */
extern void T1237f104(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_first_precursor */
extern void T1236f103(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_first_precursor */
extern void T1234f100(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_first_precursor */
extern void T1233f105(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_first_precursor */
extern void T1232f103(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_first_precursor */
extern void T534f98(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_first_precursor */
extern void T528f101(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_precursor */
extern void T366f89(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_precursor */
extern void T365f93(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_precursor */
extern void T363f92(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_precursor */
extern void T331f99(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_first_precursor */
extern void T260f104(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_other_precursors */
extern void T1237f105(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_precursors */
extern void T1236f104(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_precursors */
extern void T1234f101(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_precursors */
extern void T1233f106(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_precursors */
extern void T1232f104(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_precursors */
extern void T534f99(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_precursors */
extern void T528f102(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_precursors */
extern void T366f90(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_precursors */
extern void T365f94(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_precursors */
extern void T363f93(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_other_precursors */
extern void T331f100(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_precursors */
extern void T260f105(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_version */
extern void T1237f101(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_version */
extern void T1236f100(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_version */
extern void T1234f97(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_version */
extern void T1233f102(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_version */
extern void T1232f100(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_version */
extern void T534f95(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_version */
extern void T528f98(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_version */
extern void T366f91(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_version */
extern void T365f95(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_version */
extern void T363f94(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_version */
extern void T331f101(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_version */
extern void T260f106(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_clients */
extern void T1237f93(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_clients */
extern void T1236f93(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_clients */
extern void T1234f89(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_clients */
extern void T1233f95(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_clients */
extern void T1232f93(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_clients */
extern void T534f87(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_clients */
extern void T528f91(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_clients */
extern void T366f82(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_clients */
extern void T365f84(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_clients */
extern void T363f84(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_clients */
extern void T331f91(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_clients */
extern void T260f95(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_seed */
extern void T1237f100(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_first_seed */
extern void T1236f99(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_first_seed */
extern void T1234f96(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_first_seed */
extern void T1233f101(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_first_seed */
extern void T1232f99(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_first_seed */
extern void T534f94(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_first_seed */
extern void T528f97(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_first_seed */
extern void T366f87(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_seed */
extern void T365f91(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_seed */
extern void T363f90(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_seed */
extern void T331f97(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_first_seed */
extern void T260f102(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_other_seeds */
extern void T1237f103(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_seeds */
extern void T1236f102(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_seeds */
extern void T1234f99(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_seeds */
extern void T1233f104(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_seeds */
extern void T1232f102(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_seeds */
extern void T534f97(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_seeds */
extern void T528f100(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_seeds */
extern void T366f88(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_seeds */
extern void T365f92(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_seeds */
extern void T363f91(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_other_seeds */
extern void T331f98(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_seeds */
extern void T260f103(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.process */
extern void T1237f81(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.process */
extern void T1236f78(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.process */
extern void T1234f77(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.process */
extern void T1233f79(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.process */
extern void T1232f78(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.process */
extern void T534f72(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.process */
extern void T528f73(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.process */
extern void T366f74(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.process */
extern void T365f76(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.process */
extern void T363f76(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.process */
extern void T331f77(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.process */
extern void T260f82(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_index */
extern void T1279f38(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_index */
extern void T1278f40(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_index */
extern void T1277f39(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_index */
extern void T1276f39(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_index */
extern void T1275f41(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_index */
extern void T1274f40(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.set_index */
extern void T1273f24(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_OBJECT_TEST.set_index */
extern void T1272f29(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.set_index */
extern void T1271f21(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.set_index */
extern void T1270f26(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TYPE.set_index */
extern void T1269f22(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.set_index */
extern void T1266f24(GE_context* ac, T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.set_index */
extern void T1265f21(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT_ADDRESS.set_index */
extern void T1264f21(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.set_index */
extern void T1263f21(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.set_index */
extern void T1262f21(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.set_index */
extern void T1261f25(GE_context* ac, T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.set_index */
extern void T1213f39(GE_context* ac, T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.set_index */
extern void T1212f39(GE_context* ac, T0* C, T6 a1);
/* ET_FALSE_CONSTANT.set_index */
extern void T1211f35(GE_context* ac, T0* C, T6 a1);
/* ET_TRUE_CONSTANT.set_index */
extern void T1210f35(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_index */
extern void T1208f37(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.set_index */
extern void T1207f37(GE_context* ac, T0* C, T6 a1);
/* ET_BINARY_INTEGER_CONSTANT.set_index */
extern void T1206f68(GE_context* ac, T0* C, T6 a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_index */
extern void T1205f68(GE_context* ac, T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_index */
extern void T1204f68(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_index */
extern void T1203f68(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_index */
extern void T1202f68(GE_context* ac, T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.set_index */
extern void T1201f38(GE_context* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.set_index */
extern void T1200f42(GE_context* ac, T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.set_index */
extern void T1199f40(GE_context* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.set_index */
extern void T1176f28(GE_context* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.set_index */
extern void T1173f29(GE_context* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.set_index */
extern void T1154f22(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.set_index */
extern void T1140f27(GE_context* ac, T0* C, T6 a1);
/* ET_CALL_AGENT.set_index */
extern void T992f30(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.set_index */
extern void T989f25(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_EXPRESSION.set_index */
extern void T961f33(GE_context* ac, T0* C, T6 a1);
/* ET_VOID.set_index */
extern void T950f30(GE_context* ac, T0* C, T6 a1);
/* ET_BIT_CONSTANT.set_index */
extern void T914f33(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.set_index */
extern void T832f38(GE_context* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.set_index */
extern void T748f26(GE_context* ac, T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.set_index */
extern void T326f26(GE_context* ac, T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.set_index */
extern void T322f21(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_index */
extern void T321f23(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST.set_index */
extern void T320f24(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT.set_index */
extern void T313f33(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.set_index */
extern void T294f29(GE_context* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_index */
extern void T292f23(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_index */
extern void T291f26(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT.set_index */
extern void T286f34(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_index */
extern void T182f109(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.reset */
extern void T1862f24(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.reset */
extern void T1861f23(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.reset */
extern void T1860f19(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.reset */
extern void T1723f19(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.reset */
extern void T1279f46(GE_context* ac, T0* C);
extern T1 T1279f46ot1(T0* a1, T0** a2);
/* ET_POSTCONDITIONS.reset */
extern void T886f22(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.reset_validity_checked */
extern void T886f19(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.reset */
extern void T886f22p1(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.reset */
extern void T389f22(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.reset_validity_checked */
extern void T389f21(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.reset */
extern void T389f22p1(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset */
extern void T262f14(GE_context* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.reset */
extern void T1563f10(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.reset */
extern void T265f9(GE_context* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.reset */
extern void T976f13(GE_context* ac, T0* C);
extern T1 T976f13ot1(T0* a1, T0** a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T1278f50(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.reset */
extern void T333f14(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.reset */
extern void T1564f10(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.type */
extern T0* T1564f6(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.name */
extern T0* T1564f5(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.reset */
extern void T1129f9(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.type */
extern T0* T1129f6(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.name */
extern T0* T1129f5(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.local_variable */
extern T0* T1564f4(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.local_variable */
extern T0* T1129f4(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T1278f50p1(GE_context* ac, T0* C);
extern T1 T1278f50p1ot1(T0* a1, T0** a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T1277f48(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T1277f48p1(GE_context* ac, T0* C);
extern T1 T1277f48p1ot1(T0* a1, T0** a2);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.reset */
extern void T1276f47(GE_context* ac, T0* C);
extern T1 T1276f47ot1(T0* a1, T0** a2);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T1275f51(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T1275f51p1(GE_context* ac, T0* C);
extern T1 T1275f51p1ot1(T0* a1, T0** a2);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T1274f49(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T1274f49p1(GE_context* ac, T0* C);
extern T1 T1274f49p1ot1(T0* a1, T0** a2);
/* ET_ONCE_MANIFEST_STRING.reset */
extern void T1273f27(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.reset */
extern void T1272f31(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.reset */
extern void T1271f23(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.reset */
extern void T1270f27(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.reset */
extern void T1269f23(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.reset */
extern void T1266f25(GE_context* ac, T0* C);
extern T1 T1266f25ot1(T0* a1, T0** a2);
extern T1 T1266f25ot2(T0* a1, T0** a2);
extern T1 T1266f25ot3(T0* a1, T0** a2);
/* ET_EXPRESSION_ADDRESS.reset */
extern void T1265f23(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.reset */
extern void T1264f23(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.reset */
extern void T1263f23(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.reset */
extern void T1262f23(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.reset */
extern void T1261f28(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.reset */
extern void T1213f43(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.reset */
extern void T1212f43(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.reset */
extern void T1211f39(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.reset */
extern void T1210f39(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.reset */
extern void T1208f43(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.reset */
extern void T1207f43(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.reset */
extern void T1206f75(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.reset */
extern void T1205f75(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.reset */
extern void T1204f75(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.reset */
extern void T1203f75(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.reset */
extern void T1202f75(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.reset */
extern void T1201f42(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.reset */
extern void T1200f46(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.reset */
extern void T1199f44(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.reset */
extern void T1176f31(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T1173f32(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.type */
extern T0* T1173f10(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T1173f32p1(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.name */
extern T0* T1173f11(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.reset */
extern void T1154f24(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.reset */
extern void T1140f30(GE_context* ac, T0* C);
extern T1 T1140f30ot1(T0* a1, T0** a2);
/* ET_CALL_AGENT.reset */
extern void T992f33(GE_context* ac, T0* C);
extern T1 T992f33ot1(T0* a1, T0** a2);
/* ET_BRACKET_EXPRESSION.reset */
extern void T989f26(GE_context* ac, T0* C);
/* ET_BRACKET_ARGUMENT_LIST.reset */
extern void T986f13(GE_context* ac, T0* C);
extern T1 T986f13ot1(T0* a1, T0** a2);
/* ET_BRACKET_SYMBOL.reset */
extern void T651f105(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset */
extern void T961f42(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset_unfolded_form */
extern void T961f43(GE_context* ac, T0* C);
/* ET_VOID.reset */
extern void T950f34(GE_context* ac, T0* C);
/* ET_BIT_CONSTANT.reset */
extern void T914f36(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.reset */
extern void T832f41(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.reset */
extern void T748f29(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.reset */
extern void T326f29(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.type */
extern T0* T326f16(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.reset */
extern void T322f22(GE_context* ac, T0* C);
extern T1 T322f22ot1(T0* a1, T0** a2);
extern T1 T322f22ot2(T0* a1, T0** a2);
/* ET_OBJECT_EQUALITY_EXPRESSION.reset */
extern void T321f24(GE_context* ac, T0* C);
extern T1 T321f24ot1(T0* a1, T0** a2);
extern T1 T321f24ot2(T0* a1, T0** a2);
/* ET_OBJECT_TEST.reset */
extern void T320f26(GE_context* ac, T0* C);
/* ET_RESULT.reset */
extern void T313f35(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.reset */
extern void T294f33(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T292f24(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T292f24p1(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T291f31(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T291f31p1(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T291f31p0(GE_context* ac, T0* C);
/* ET_CURRENT.reset */
extern void T286f36(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.process */
extern void T1862f23(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_FROM_EXPRESSION.process */
extern void T1861f22(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.process */
extern void T1860f18(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.process */
extern void T1723f18(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.process */
extern void T1279f37(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.process */
extern void T1278f39(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.process */
extern void T1277f38(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.process */
extern void T1276f38(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.process */
extern void T1275f40(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.process */
extern void T1274f39(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.process */
extern void T1273f23(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_OBJECT_TEST.process */
extern void T1272f28(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.process */
extern void T1271f20(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_EXPRESSION.process */
extern void T1270f25(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TYPE.process */
extern void T1269f21(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.process */
extern void T1266f23(GE_context* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.process */
extern void T1265f20(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT_ADDRESS.process */
extern void T1264f20(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.process */
extern void T1263f20(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.process */
extern void T1262f20(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.process */
extern void T1261f24(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.process */
extern void T1213f38(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.process */
extern void T1212f38(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.process */
extern void T1211f34(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.process */
extern void T1210f34(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.process */
extern void T1208f36(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.process */
extern void T1207f36(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.process */
extern void T1206f67(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.process */
extern void T1205f67(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.process */
extern void T1204f67(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.process */
extern void T1203f67(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.process */
extern void T1202f67(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.process */
extern void T1201f37(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.process */
extern void T1200f41(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.process */
extern void T1199f39(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.process */
extern void T1176f27(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.process */
extern void T1173f28(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.process */
extern void T1154f21(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.process */
extern void T1140f26(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.process */
extern void T992f29(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.process */
extern void T989f24(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.process */
extern void T961f32(GE_context* ac, T0* C, T0* a1);
/* ET_VOID.process */
extern void T950f29(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_CONSTANT.process */
extern void T914f32(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.process */
extern void T832f37(GE_context* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.process */
extern void T748f25(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.process */
extern void T326f27(GE_context* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.process */
extern void T322f20(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.process */
extern void T321f22(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST.process */
extern void T320f23(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT.process */
extern void T313f30(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.process */
extern void T294f31(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.process */
extern void T292f22(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.process */
extern void T291f27(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.process */
extern void T286f31(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.process */
extern void T182f112(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.propagate_can_be_void */
extern void T533f18(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.propagate_can_be_void */
extern void T335f85(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.propagate_can_be_void */
extern void T334f85(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.propagate_can_be_void */
extern void T323f84(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.propagate_can_be_void */
extern void T306f84(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.propagate_can_be_void */
extern void T239f81(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.set_never_void */
extern void T831f16(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.set_never_void */
extern void T533f16(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_never_void */
extern void T335f79(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_never_void */
extern void T334f79(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_never_void */
extern void T323f78(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_never_void */
extern void T306f78(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_never_void */
extern void T274f15(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.set_never_void */
extern void T239f76(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_target */
extern void T831f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_target */
extern void T533f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TARGET_LIST.force_last */
extern void T1341f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].force */
extern void T1540f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].fill_with */
extern void T1539f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].extend */
extern void T1539f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.fixed_array */
extern unsigned char ge999os7546;
extern T0* ge999ov7546;
extern T0* T1341f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].default_create */
extern T0* T1540c3(GE_context* ac);
/* ET_DYNAMIC_TARGET_LIST.resize */
extern void T1341f12(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T1540f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T1539f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.new_capacity */
extern T6 T1341f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.capacity */
extern T6 T1341f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_TARGET_LIST.has */
extern T1 T1341f3(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.index_of */
extern T6 T1341f5(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.put_last */
extern void T1341f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.make_with_capacity */
extern T0* T1341c9(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].make */
extern T0* T1540f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TARGET].make_empty */
extern T0* T1539c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_target */
extern void T274f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T1410f20(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_unaliased_to_string */
extern void T1409f22(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_unaliased_to_string */
extern void T644f28(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T505f18(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_unaliased_to_string */
extern void T252f28(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T1410f21(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_to_string */
extern void T1409f23(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_to_string */
extern void T644f29(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T505f19(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_to_string */
extern void T252f30(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T1410f22(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.reset */
extern void T1409f24(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset */
extern void T644f30(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T505f20(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset */
extern void T252f32(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T1410f23(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.reset_qualified_anchored_types */
extern void T1409f25(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T644f33(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T505f21(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T252f33(GE_context* ac, T0* C);
/* ET_LIBRARY.classes_do_all */
extern void T460f168(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].forth */
extern void T636f12(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_forth */
extern void T233f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].add_traversing_cursor */
extern void T233f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_next_cursor */
extern void T636f16(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_position */
extern void T636f15(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].remove_traversing_cursor */
extern void T233f65(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_after */
extern void T636f14(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_mapped */
extern T1 T471f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].item */
extern T0* T636f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_item */
extern T0* T233f34(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].after */
extern T1 T636f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].start */
extern void T636f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_start */
extern void T233f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_off */
extern T1 T233f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].off */
extern T1 T636f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].is_empty */
extern T1 T233f36(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T448f167(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T448f167p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_all */
extern void T230f189(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_all */
extern void T230f189p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_all */
extern void T217f175(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_all */
extern void T217f175p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T198f167(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T198f167p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.classes_do_all */
extern void T189f194(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.classes_do_all */
extern void T70f302(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.classes_do_all */
extern void T64f306(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.classes_do_all */
extern void T61f310(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.classes_do_all */
extern void T33f233(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.classes_do_until */
extern void T460f169(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].go_after */
extern void T636f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_go_after */
extern void T233f64(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.classes_do_until */
extern void T448f168(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_until */
extern void T230f190(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_until */
extern void T217f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_until */
extern void T198f168(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.classes_do_until */
extern void T189f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.classes_do_until */
extern void T70f303(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_until */
extern void T64f307(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.classes_do_until */
extern void T61f311(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.classes_do_until */
extern void T33f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.classes_do_if_until */
extern void T460f171(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.classes_do_if_until */
extern void T448f170(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_if_until */
extern void T230f192(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_if_until */
extern void T217f178(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if_until */
extern void T198f170(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.classes_do_if_until */
extern void T189f197(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_SYSTEM.classes_do_if_until */
extern void T70f305(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.classes_do_if_until */
extern void T64f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM.classes_do_if_until */
extern void T61f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SYSTEM.classes_do_if_until */
extern void T33f236(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIBRARY.master_classes_do_until */
extern void T460f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T448f172(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_until */
extern void T230f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T217f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T198f172(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.master_classes_do_until */
extern void T189f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.master_classes_do_until */
extern void T70f306(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_until */
extern void T64f310(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.master_classes_do_until */
extern void T61f314(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.master_classes_do_until */
extern void T33f237(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_all */
extern void T460f172(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].do_all */
extern void T233f40(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T448f171(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_all */
extern void T230f193(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T217f179(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T198f171(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.master_classes_do_all */
extern void T189f198(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.master_classes_do_all */
extern void T70f292(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.master_classes_do_all */
extern void T64f243(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.master_classes_do_all */
extern void T61f301(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.master_classes_do_all */
extern void T33f231(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.classes_do_if */
extern void T460f170(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T448f169(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T448f169p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_if */
extern void T230f191(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_if */
extern void T230f191p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_if */
extern void T217f177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_if */
extern void T217f177p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T198f169(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T198f169p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.classes_do_if */
extern void T189f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.classes_do_if */
extern void T70f304(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_if */
extern void T64f308(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.classes_do_if */
extern void T61f312(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.classes_do_if */
extern void T33f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_if */
extern void T460f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].do_if */
extern void T233f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T448f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_if */
extern void T230f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T217f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T198f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.master_classes_do_if */
extern void T189f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.master_classes_do_if */
extern void T70f307(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_if */
extern void T64f311(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.master_classes_do_if */
extern void T61f315(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.master_classes_do_if */
extern void T33f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_if_until */
extern void T460f175(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T448f174(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_if_until */
extern void T230f196(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T217f182(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T198f174(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.master_classes_do_if_until */
extern void T189f201(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_SYSTEM.master_classes_do_if_until */
extern void T70f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.master_classes_do_if_until */
extern void T64f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM.master_classes_do_if_until */
extern void T61f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SYSTEM.master_classes_do_if_until */
extern void T33f239(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.resolve_unfolded_tuple_actual_parameters */
extern void T189f206(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_1 */
extern void T80f116(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.attached_keyword */
extern unsigned char ge808os11706;
extern T0* ge808ov11706;
extern T0* T81f241(GE_context* ac, T0* C);
/* ET_KEYWORD.make_attached */
extern T0* T397c42(GE_context* ac);
/* ET_CLASS_TYPE.tokens */
extern T0* T80f27(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T1410c19(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.make */
extern T0* T1409c21(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ET_CLASS.is_routine_class */
extern T1 T82f107(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.resolve_unfolded_tuple_actual_parameters */
extern void T70f297(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.resolve_unfolded_tuple_actual_parameters */
extern void T64f301(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.resolve_unfolded_tuple_actual_parameters */
extern void T61f307(GE_context* ac, T0* C);
/* ET_SYSTEM.resolve_unfolded_tuple_actual_parameters */
extern void T33f227(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.universes_do_all */
extern void T189f207(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_all */
extern void T197f12(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.universes_do_all */
extern void T190f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.universes_do_all */
extern void T70f299(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.universes_do_all */
extern void T64f338(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.universes_do_all */
extern void T61f320(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.universes_do_all */
extern void T33f228(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.universes_do_if */
extern void T460f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_if */
extern void T197f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_LIBRARIES.universes_do_if */
extern void T190f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.universes_do_if */
extern void T448f175(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLIES.universes_do_if */
extern void T447f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.universes_do_if */
extern void T230f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.universes_do_if */
extern void T217f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.universes_do_if */
extern void T198f175(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.universes_do_if */
extern void T189f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.universes_do_if */
extern void T70f321(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.universes_do_if */
extern void T64f337(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.universes_do_if */
extern void T61f330(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.universes_do_if */
extern void T33f249(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.append_unaliased_to_string */
extern void T1427f77(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_unaliased_to_string */
extern void T1249f80(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_unaliased_to_string */
extern void T1248f81(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_unaliased_to_string */
extern void T1247f82(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.append_unaliased_to_string */
extern void T1223f114(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.append_unaliased_to_string */
extern void T1222f113(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T1218f86(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T1090f83(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.append_unaliased_to_string */
extern void T867f74(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_unaliased_to_string */
extern void T504f75(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_unaliased_to_string */
extern void T261f110(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.append_unaliased_to_string */
extern void T82f224(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_unaliased_to_string */
extern void T80f115(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_to_string */
extern void T1427f73(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.upper_name */
extern T0* T1427f44(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.append_to_string */
extern void T1249f77(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_to_string */
extern void T1248f82(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_to_string */
extern void T1247f83(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.append_to_string */
extern void T1223f115(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.append_to_string */
extern void T1222f114(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_to_string */
extern void T1218f87(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.upper_name */
extern T0* T1218f11(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.append_to_string */
extern void T1090f84(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.upper_name */
extern T0* T1090f9(GE_context* ac, T0* C);
/* ET_LIKE_N.append_to_string */
extern void T867f73(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_to_string */
extern void T504f76(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_to_string */
extern void T261f111(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.append_to_string */
extern void T82f231(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_to_string */
extern void T80f117(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.process */
extern void T1427f76(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.process */
extern void T1249f81(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.process */
extern void T1248f83(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.process */
extern void T1247f84(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.process */
extern void T1223f116(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.process */
extern void T1222f115(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.process */
extern void T1218f89(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.process */
extern void T1090f86(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.process */
extern void T867f75(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.process */
extern void T504f78(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.process */
extern void T261f112(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.process */
extern void T82f222(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.process */
extern void T80f118(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.reset_qualified_anchored_types */
extern void T1427f75(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset_qualified_anchored_types */
extern void T1249f79(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset_qualified_anchored_types */
extern void T1248f85(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.reset_qualified_anchored_types */
extern void T1247f86(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.reset_qualified_anchored_types */
extern void T1223f118(GE_context* ac, T0* C);
/* ET_BIT_N.reset_qualified_anchored_types */
extern void T1222f117(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T1218f90(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T1090f87(GE_context* ac, T0* C);
/* ET_LIKE_N.reset_qualified_anchored_types */
extern void T867f77(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.reset_qualified_anchored_types */
extern void T504f80(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.reset_qualified_anchored_types */
extern void T261f114(GE_context* ac, T0* C);
/* ET_CLASS.reset_qualified_anchored_types */
extern void T82f272(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.reset_qualified_anchored_types */
extern void T80f120(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reset */
extern void T1427f74(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset */
extern void T1249f78(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset */
extern void T1248f84(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.reset */
extern void T1247f85(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.is_like_argument */
extern T1 T1247f21(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.reset */
extern void T1223f117(GE_context* ac, T0* C);
/* ET_BIT_N.reset */
extern void T1222f116(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset */
extern void T1218f88(GE_context* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.reset */
extern void T1028f14(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset */
extern void T1090f85(GE_context* ac, T0* C);
/* ET_LIKE_N.reset */
extern void T867f76(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.reset */
extern void T504f79(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.reset */
extern void T261f113(GE_context* ac, T0* C);
/* ET_CLASS.reset_type */
extern void T82f271(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.reset */
extern void T80f119(GE_context* ac, T0* C);
extern T1 T80f119ot1(T0* a1, T0** a2);
extern T1 T80f119ot2(T0* a1, T0** a2);
extern T1 T80f119ot3(T0* a1, T0** a2);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class */
extern void T1335f5(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class */
extern void T1334f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class */
extern void T1333f4(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class */
extern void T1332f5(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class */
extern void T1311f6(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class */
extern void T1310f11(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class */
extern void T1309f13(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class */
extern void T1304f11(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_class */
extern void T1303f12(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_class */
extern void T1302f18(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class */
extern void T1301f10(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class */
extern void T1300f7(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class */
extern void T1299f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class */
extern void T1288f16(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class */
extern void T1287f13(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.process_class */
extern void T444f16(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.internal_process_class */
extern void T444f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove */
extern void T1308f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_position */
extern void T1308f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_put */
extern void T1308f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].item_storage_put */
extern void T1308f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].key_storage_keep_head */
extern void T1308f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_keep_head */
extern void T1308f46(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].keep_head */
extern void T1010f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].set_count */
extern void T1010f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_put */
extern void T1308f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].slots_put */
extern void T1308f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].clashes_item */
extern T6 T1308f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].move_cursors_forth */
extern void T1308f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_position */
extern void T1531f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_next_cursor */
extern void T1531f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_after */
extern void T1531f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].internal_set_key_equality_tester */
extern void T1308f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].key_equality_tester */
extern T0* T1308f24(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].slots_item */
extern T6 T1308f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].hash_position */
extern T6 T1308f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].key_storage_item */
extern T0* T1308f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_item */
extern T0* T1308f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].search_position */
extern void T1308f40(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].unset_found_item */
extern void T1308f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].last */
extern T0* T1308f17(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].is_empty */
extern T1 T1308f28(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_parents_validity */
extern void T444f23(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.check_parents_validity */
extern void T1309f9(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.check_constraint_creations_validity */
extern void T444f22(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creation_validity */
extern void T444f27(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0a_error */
extern void T77f204(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtgc0a */
extern T0* T532c766(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T77f27(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtgc0a_error */
extern void T36f203(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T36f26(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0b_error */
extern void T77f203(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vtgc0b */
extern T0* T532c765(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vtgc0b_error */
extern void T36f202(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcp3c_error */
extern void T77f202(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3c */
extern T0* T532c764(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T77f26(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp3c_error */
extern void T36f201(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T36f25(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.feature_name */
extern T0* T1028f7(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.item */
extern T0* T1028f10(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.current_universe */
extern T0* T444f14(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.constraint_base_type */
extern T0* T1090f8(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.creation_procedures */
extern T0* T1090f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter */
extern T0* T644f11(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.formal_parameter */
extern T0* T1218f10(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.formal_parameter */
extern T0* T1090f5(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.item */
extern T0* T644f10(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.is_dotnet */
extern T1 T82f72(GE_context* ac, T0* C);
/* ET_CLASS.is_in_dotnet_assembly */
extern T1 T82f86(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_signatures_validity */
extern void T444f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].wipe_out */
extern void T1289f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_wipe_out */
extern void T1289f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1289f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1289f56(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_FEATURE_NAME].keep_head */
extern void T1078f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME].set_count */
extern void T1078f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1289f55(GE_context* ac, T0* C);
/* SPECIAL [ET_FLATTENED_FEATURE].keep_head */
extern void T1495f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].set_count */
extern void T1495f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].unset_found_item */
extern void T1289f54(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1289f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_next_cursor */
extern void T1494f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_after */
extern void T1494f10(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].forth */
extern void T1289f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_forth */
extern void T1289f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1289f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_position */
extern void T1494f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1289f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_item */
extern T6 T1289f21(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.check_signature_validity */
extern void T444f26(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_validity */
extern void T1302f11(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1528f10(GE_context* ac, T0* C);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1529f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1529f12(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1528f12(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1529f13(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set */
extern void T1528f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_SIGNATURE_CHECKER.check_selected_signature_validity */
extern void T1302f14(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1302f14ot1(T0* a1);
extern T1 T1302f14ot2(T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.is_empty */
extern T1 T262f8(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_tuple_actual_parameters_unfolded */
extern void T1302f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SIGNATURE_CHECKER.tokens */
extern T0* T1302f5(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd2c_error */
extern void T77f270(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2c */
extern T0* T532c809(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.upper_name */
extern T0* T80f99(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T77f60(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd2c_error */
extern void T36f269(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T36f59(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2d_error */
extern void T77f269(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2d */
extern T0* T532c808(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.name */
extern T0* T1313f15(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdrd2d_error */
extern void T36f268(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.error_handler */
extern T0* T1302f7(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.current_system */
extern T0* T1302f9(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.set_fatal_error */
extern void T1302f15(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.set */
extern void T380f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.force_last */
extern void T380f56(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].force */
extern void T744f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_TYPE].fill_with */
extern void T263f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].extend */
extern void T263f10(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.resize */
extern void T380f60(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].aliased_resized_area */
extern T0* T744f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE].aliased_resized_area */
extern T0* T263f4(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.new_capacity */
extern T6 T380f17(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.capacity */
extern T6 T380f13(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1528f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1528f9(GE_context* ac, T0* C);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1529f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1529f6(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1528f7(GE_context* ac, T0* C);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1529f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1528c8(GE_context* ac, T0* a1);
/* ET_PARENT_FEATURE.is_deferred */
extern T1 T1313f11(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.has_undefine */
extern T1 T1313f16(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_joined_signature_validity */
extern void T1302f13(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0b_error */
extern void T77f268(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_VALIDITY_ERROR.make_vdjr0b */
extern T0* T532c807(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T77f62(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr0b_error */
extern void T36f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T36f61(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr0a_error */
extern void T77f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0a */
extern T0* T532c806(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0a_error */
extern void T36f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0c_error */
extern void T77f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0c */
extern T0* T532c805(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0c_error */
extern void T36f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_redeclared_signature_validity */
extern void T1302f12(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1302f12ot1(T0* a1);
extern T1 T1302f12ot2(T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd6b_error */
extern void T77f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6b */
extern T0* T532c804(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T77f61(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd6b_error */
extern void T36f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T36f60(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2a_error */
extern void T77f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2a */
extern T0* T532c803(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2a_error */
extern void T36f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd2b_error */
extern void T77f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2b */
extern T0* T532c802(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2b_error */
extern void T36f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_for_iteration */
extern T0* T1289f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_item */
extern T0* T1289f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_item */
extern T0* T1289f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T1289f25(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_after */
extern T1 T1289f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T1494f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].start */
extern void T1289f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_start */
extern void T1289f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_off */
extern T1 T1289f40(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].off */
extern T1 T1494f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].is_empty */
extern T1 T1289f36(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_feature_adaptations */
extern void T444f25(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_inherited_features */
extern void T444f28(GE_context* ac, T0* C, T0* a1);
extern T1 T444f28ot1(T0* a1, T0** a2);
/* ET_INHERITED_FEATURE.set_flattened_parent */
extern void T1314f33(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_flattened_feature */
extern void T1314f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found_item */
extern T0* T1289f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found */
extern T1 T1289f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search */
extern void T1289f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search_position */
extern void T1289f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].hash_position */
extern T6 T1289f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_NAME_TESTER.test */
extern T1 T1290f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_item */
extern T0* T1289f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_item */
extern T6 T1289f27(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1297f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].wipe_out */
extern void T1513f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].slots_wipe_out */
extern void T1513f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].clashes_wipe_out */
extern void T1513f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1513f45(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_ALIAS_NAME].keep_head */
extern void T981f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME].set_count */
extern void T981f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1513f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].unset_found_item */
extern void T1513f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].move_all_cursors_after */
extern void T1513f42(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME].set_next_cursor */
extern void T1668f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME].set_after */
extern void T1668f7(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replication */
extern void T1297f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].wipe_out */
extern void T1514f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_wipe_out */
extern void T1514f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_wipe_out */
extern void T1514f56(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_wipe_out */
extern void T1514f55(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_wipe_out */
extern void T1514f54(GE_context* ac, T0* C);
/* SPECIAL [ET_REPLICABLE_FEATURE].keep_head */
extern void T1670f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].set_count */
extern void T1670f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].unset_found_item */
extern void T1514f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].move_all_cursors_after */
extern void T1514f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_next_cursor */
extern void T1669f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_after */
extern void T1669f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].forth */
extern void T1514f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_forth */
extern void T1514f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].add_traversing_cursor */
extern void T1514f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_position */
extern void T1669f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].remove_traversing_cursor */
extern void T1514f65(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_item */
extern T6 T1514f23(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replicated_feature */
extern void T1297f36(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vmrc2b_error */
extern void T77f262(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2b */
extern T0* T532c801(GE_context* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].after */
extern T1 T1677f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1677f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1520f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_position */
extern void T1677f13(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1520f15(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1677f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1520f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1677f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_item */
extern T0* T1520f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1677f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1520f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_after */
extern void T1677f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1520f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1677f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].before */
extern T1 T1677f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1520f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1677c9(GE_context* ac, T0* a1);
/* ET_VALIDITY_ERROR.ast_position */
extern T0* T532f139(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].first */
extern T0* T1520f7(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T77f59(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmrc2b_error */
extern void T36f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T36f58(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.selected_feature */
extern T0* T1314f19(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.has_select */
extern T1 T1313f14(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.selected_feature */
extern T0* T1515f15(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.add_replicated_feature */
extern void T1314f37(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].force_last */
extern void T1529f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_PARENT_FEATURE].put_right */
extern void T1870f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_PARENT_FEATURE].make */
extern T0* T1870c3(GE_context* ac, T0* a1);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1529c7(GE_context* ac);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].set_internal_cursor */
extern void T1529f9(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.add_replicated_feature */
extern void T1515f33(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_seed */
extern T1 T1313f21(GE_context* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_selected */
extern void T1314f39(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.set_selected */
extern void T1515f35(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.set_replicated */
extern void T1314f38(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.put */
extern void T1439f13(GE_context* ac, T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].resize */
extern void T523f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ARRAY [INTEGER_32].conservative_resize */
extern void T522f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].conservative_resize_with_default */
extern void T522f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ET_FEATURE_IDS.integer_array_ */
extern T0* T1439f5(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.has */
extern T1 T1439f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.make */
extern T0* T1439c9(GE_context* ac, T6 a1);
/* ET_REDECLARED_FEATURE.set_replicated */
extern void T1515f34(GE_context* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.has_selected_feature */
extern T1 T1314f18(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.has_selected_feature */
extern T1 T1515f21(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmrc2a_error */
extern void T77f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2a */
extern T0* T532c800(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vmrc2a_error */
extern void T36f260(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1297f19(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.current_system */
extern T0* T1297f20(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1297f29(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].forth */
extern void T1519f16(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_forth */
extern void T1519f18(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].add_traversing_cursor */
extern void T1519f19(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set_next_cursor */
extern void T1673f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].remove_traversing_cursor */
extern void T1519f20(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set */
extern void T1673f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].put_last */
extern void T1520f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].force */
extern void T1675f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PARENT_FEATURE].fill_with */
extern void T1676f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_FEATURE].extend */
extern void T1676f7(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.seeded_feature */
extern T0* T1314f28(GE_context* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.seeded_feature */
extern T0* T1515f26(GE_context* ac, T0* C, T6 a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].item_for_iteration */
extern T0* T1519f7(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_item */
extern T0* T1519f10(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].after */
extern T1 T1519f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_after */
extern T1 T1519f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].start */
extern void T1519f15(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_start */
extern void T1519f17(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_off */
extern T1 T1519f11(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].off */
extern T1 T1673f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1520c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].set_internal_cursor */
extern void T1520f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].make */
extern T0* T1675f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_PARENT_FEATURE].make_empty */
extern T0* T1676c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].default_create */
extern T0* T1675c2(GE_context* ac);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_for_iteration */
extern T6 T1514f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_key */
extern T6 T1514f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1514f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_for_iteration */
extern T0* T1514f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_item */
extern T0* T1514f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1514f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].after */
extern T1 T1514f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_after */
extern T1 T1514f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].after */
extern T1 T1669f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].start */
extern void T1514f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_start */
extern void T1514f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_off */
extern T1 T1514f29(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].off */
extern T1 T1669f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].is_empty */
extern T1 T1514f28(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.item */
extern T6 T1439f6(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.record_replicable_feature */
extern void T1297f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].force_new */
extern void T1514f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_put */
extern void T1514f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_put */
extern void T1514f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].force */
extern void T1672f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].fill_with */
extern void T1670f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].extend */
extern void T1670f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_put */
extern void T1514f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_put */
extern void T1514f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_item */
extern T6 T1514f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].hash_position */
extern T6 T1514f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].resize */
extern void T1514f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_resize */
extern void T1514f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1514f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_resize */
extern void T1514f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_resize */
extern void T1514f68(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T1672f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T1670f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_resize */
extern void T1514f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_modulus */
extern T6 T1514f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_capacity */
extern T6 T1514f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].replace_found_item */
extern void T1514f47(GE_context* ac, T0* C, T0* a1);
/* ET_REPLICATED_FEATURE.make */
extern T0* T1518c6(GE_context* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].make */
extern T0* T1519c12(GE_context* ac);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].set_internal_cursor */
extern void T1519f14(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].new_cursor */
extern T0* T1519f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].make */
extern T0* T1673c7(GE_context* ac, T0* a1);
/* ET_REPLICATED_FEATURE.put_feature */
extern void T1518f7(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].force_last */
extern void T1519f13(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_ADAPTED_FEATURE].put_right */
extern void T1674f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_ADAPTED_FEATURE].make */
extern T0* T1674c3(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found_item */
extern T0* T1514f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found */
extern T1 T1514f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search */
extern void T1514f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search_position */
extern void T1514f58(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1297f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vmss1a_error */
extern void T77f254(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmss1a */
extern T0* T532c793(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T77f52(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss1a_error */
extern void T36f253(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T36f51(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs1a_error */
extern void T77f253(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs1a */
extern T0* T532c792(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T77f51(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs1a_error */
extern void T36f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T36f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].wipe_out */
extern void T1512f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].slots_wipe_out */
extern void T1512f62(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].clashes_wipe_out */
extern void T1512f61(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].key_storage_wipe_out */
extern void T1512f60(GE_context* ac, T0* C);
/* SPECIAL [ET_CALL_NAME].keep_head */
extern void T1661f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CALL_NAME].set_count */
extern void T1661f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].item_storage_wipe_out */
extern void T1512f59(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].unset_found_item */
extern void T1512f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].move_all_cursors_after */
extern void T1512f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].set_next_cursor */
extern void T1665f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].set_after */
extern void T1665f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].forth */
extern void T1512f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_forth */
extern void T1512f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].add_traversing_cursor */
extern void T1512f72(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].set_position */
extern void T1665f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].remove_traversing_cursor */
extern void T1512f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].clashes_item */
extern T6 T1512f26(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdus1a_error */
extern void T77f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus1a */
extern T0* T532c791(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T77f50(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus1a_error */
extern void T36f251(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T36f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].key_for_iteration */
extern T0* T1512f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_key */
extern T0* T1512f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].key_storage_item */
extern T0* T1512f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].item_for_iteration */
extern T1 T1512f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_item */
extern T1 T1512f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].item_storage_item */
extern T1 T1512f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].after */
extern T1 T1512f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_after */
extern T1 T1512f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].after */
extern T1 T1665f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].start */
extern void T1512f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_start */
extern void T1512f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_off */
extern T1 T1512f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].off */
extern T1 T1665f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].is_empty */
extern T1 T1512f35(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].wipe_out */
extern void T1511f43(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].slots_wipe_out */
extern void T1511f60(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].clashes_wipe_out */
extern void T1511f59(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].key_storage_wipe_out */
extern void T1511f58(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].item_storage_wipe_out */
extern void T1511f57(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].unset_found_item */
extern void T1511f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].move_all_cursors_after */
extern void T1511f56(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].set_next_cursor */
extern void T1664f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].set_after */
extern void T1664f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].forth */
extern void T1511f42(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].cursor_forth */
extern void T1511f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].add_traversing_cursor */
extern void T1511f74(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].set_position */
extern void T1664f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].remove_traversing_cursor */
extern void T1511f73(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].clashes_item */
extern T6 T1511f22(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel2a_error */
extern void T77f251(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vlel2a */
extern T0* T532c790(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T77f49(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel2a_error */
extern void T36f250(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T36f48(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].item_for_iteration */
extern T0* T1511f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].cursor_item */
extern T0* T1511f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].item_storage_item */
extern T0* T1511f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].after */
extern T1 T1511f19(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].cursor_after */
extern T1 T1511f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].after */
extern T1 T1664f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].start */
extern void T1511f41(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].cursor_start */
extern void T1511f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].cursor_off */
extern T1 T1511f34(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].off */
extern T1 T1664f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].wipe_out */
extern void T1508f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].slots_wipe_out */
extern void T1508f59(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].clashes_wipe_out */
extern void T1508f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].key_storage_wipe_out */
extern void T1508f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_storage_wipe_out */
extern void T1508f56(GE_context* ac, T0* C);
/* SPECIAL [ET_RENAME].keep_head */
extern void T1656f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_RENAME].set_count */
extern void T1656f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].unset_found_item */
extern void T1508f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].move_all_cursors_after */
extern void T1508f55(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].set_next_cursor */
extern void T1655f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].set_after */
extern void T1655f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].forth */
extern void T1508f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].cursor_forth */
extern void T1508f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].add_traversing_cursor */
extern void T1508f74(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].set_position */
extern void T1655f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].remove_traversing_cursor */
extern void T1508f73(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].clashes_item */
extern T6 T1508f22(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc1a_error */
extern void T77f250(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vhrc1a */
extern T0* T532c789(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T77f48(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc1a_error */
extern void T36f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T36f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_for_iteration */
extern T0* T1508f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].cursor_item */
extern T0* T1508f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_storage_item */
extern T0* T1508f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].after */
extern T1 T1508f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].cursor_after */
extern T1 T1508f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].after */
extern T1 T1655f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].start */
extern void T1508f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].cursor_start */
extern void T1508f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].cursor_off */
extern T1 T1508f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].off */
extern T1 T1655f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].force_last_new */
extern void T1513f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].key_storage_put */
extern void T1513f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].force */
extern void T980f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME].fill_with */
extern void T981f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME].extend */
extern void T981f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].item_storage_put */
extern void T1513f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].force */
extern void T1077f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME].fill_with */
extern void T1078f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME].extend */
extern void T1078f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].slots_put */
extern void T1513f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].clashes_put */
extern void T1513f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].slots_item */
extern T6 T1513f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].hash_position */
extern T6 T1513f27(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].resize */
extern void T1513f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].clashes_resize */
extern void T1513f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].special_integer_ */
extern T0* T1513f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].key_storage_resize */
extern void T1513f56(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T980f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T981f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].item_storage_resize */
extern void T1513f55(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1077f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1078f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].key_storage_item */
extern T0* T1513f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].clashes_item */
extern T6 T1513f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].slots_resize */
extern void T1513f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].new_modulus */
extern T6 T1513f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].new_capacity */
extern T6 T1513f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].has */
extern T1 T1513f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].search_position */
extern void T1513f40(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_TESTER.test */
extern T1 T1293f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].put_last_new */
extern void T1289f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_put */
extern void T1289f83(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_put */
extern void T1289f82(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].force */
extern void T1498f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].fill_with */
extern void T1495f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].extend */
extern void T1495f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_put */
extern void T1289f76(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_put */
extern void T1289f77(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].compress */
extern void T1289f81(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_keep_head */
extern void T1289f89(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_keep_head */
extern void T1289f88(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors */
extern void T1289f87(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1297f23(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_next */
extern void T1314f31(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.make */
extern T0* T1314c29(GE_context* ac, T0* a1);
/* ET_PARENT_FEATURE.other_seeds */
extern T0* T1313f10(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.first_seed */
extern T6 T1313f9(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.reset */
extern void T1314f30(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.put_parent_feature */
extern void T1314f34(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_IDS.cloned_object */
extern T0* T1439f4(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.twin */
extern T0* T1439f3(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.copy */
extern void T1439f12(GE_context* ac, T0* C, T0* a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].cloned_array */
extern T0* T523f1(GE_context* ac, T0* C, T0* a1);
/* ARRAY [INTEGER_32].twin */
extern T0* T522f9(GE_context* ac, T0* C);
/* ARRAY [INTEGER_32].copy */
extern void T522f18(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [INTEGER_32].twin */
extern T0* T123f7(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.has_seed */
extern T1 T1314f22(GE_context* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.is_other_seeds_shared */
extern T1 T1314f21(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.set_merged_feature */
extern void T1313f29(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.put_parent_feature */
extern void T1515f30(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.has_seed */
extern T1 T1515f20(GE_context* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.is_other_seeds_shared */
extern T1 T1515f19(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].replace_found_item */
extern void T1289f70(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1297f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.set_next */
extern void T1515f29(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.make */
extern T0* T1515c27(GE_context* ac, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.reset */
extern void T1515f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].found_item */
extern T0* T1513f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].item_storage_item */
extern T0* T1513f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].found */
extern T1 T1513f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].search */
extern void T1513f39(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_select_name */
extern void T1313f26(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_redefine_name */
extern void T1313f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].replace_found_item */
extern void T1512f46(GE_context* ac, T0* C, T1 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].item_storage_put */
extern void T1512f54(GE_context* ac, T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].found_item */
extern T1 T1512f25(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.set_undefine_name */
extern void T1313f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].found_key */
extern T0* T1512f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].found */
extern T1 T1512f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].search */
extern void T1512f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].search_position */
extern void T1512f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].hash_position */
extern T6 T1512f28(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_NAME_TESTER.test */
extern T1 T1509f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].slots_item */
extern T6 T1512f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].remove_found_item */
extern void T1511f40(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].remove_position */
extern void T1511f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].key_storage_put */
extern void T1511f72(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CALL_NAME].item_storage_put */
extern void T1511f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].force */
extern void T1663f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CALL_NAME].fill_with */
extern void T1661f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_NAME].extend */
extern void T1661f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].key_storage_keep_head */
extern void T1511f71(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].item_storage_keep_head */
extern void T1511f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].clashes_put */
extern void T1511f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CALL_NAME].slots_put */
extern void T1511f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CALL_NAME].move_cursors_forth */
extern void T1511f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].search_position */
extern void T1511f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].internal_set_key_equality_tester */
extern void T1511f68(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].key_equality_tester */
extern T0* T1511f33(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].slots_item */
extern T6 T1511f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].hash_position */
extern T6 T1511f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].key_storage_item */
extern T0* T1511f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].found */
extern T1 T1511f17(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].search */
extern void T1511f39(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_new_name */
extern void T1313f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].remove_found_item */
extern void T1508f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].remove_position */
extern void T1508f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].key_storage_put */
extern void T1508f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_storage_put */
extern void T1508f66(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_RENAME].force */
extern void T1662f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_RENAME].fill_with */
extern void T1656f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].extend */
extern void T1656f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].key_storage_keep_head */
extern void T1508f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_storage_keep_head */
extern void T1508f71(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].clashes_put */
extern void T1508f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].slots_put */
extern void T1508f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].move_cursors_forth */
extern void T1508f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].search_position */
extern void T1508f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].internal_set_key_equality_tester */
extern void T1508f69(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].slots_item */
extern T6 T1508f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].hash_position */
extern T6 T1508f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].key_storage_item */
extern T0* T1508f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].found_item */
extern T0* T1508f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].found */
extern T1 T1508f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].search */
extern void T1508f42(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1297f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_next */
extern void T1313f28(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.make */
extern T0* T1313c22(GE_context* ac, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.reset */
extern void T1313f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].resize */
extern void T1289f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_resize */
extern void T1289f80(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].special_integer_ */
extern T0* T1289f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_resize */
extern void T1289f79(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_resize */
extern void T1289f78(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1498f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1495f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_resize */
extern void T1289f75(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_modulus */
extern T6 T1289f33(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_select_table */
extern void T1297f34(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss2a_error */
extern void T77f260(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vmss2a */
extern T0* T532c799(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T77f58(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss2a_error */
extern void T36f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T36f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].put_new */
extern void T1512f51(GE_context* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].key_storage_put */
extern void T1512f69(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].slots_put */
extern void T1512f64(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].clashes_put */
extern void T1512f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.feature_name */
extern T0* T501f4(GE_context* ac, T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.item */
extern T0* T501f5(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].resize */
extern void T1512f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].clashes_resize */
extern void T1512f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].special_integer_ */
extern T0* T1512f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].key_storage_resize */
extern void T1512f67(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].aliased_resized_area */
extern T0* T1663f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_NAME].aliased_resized_area */
extern T0* T1661f3(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].item_storage_resize */
extern void T1512f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].slots_resize */
extern void T1512f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].new_modulus */
extern T6 T1512f24(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_redefine_table */
extern void T1297f33(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs3a_error */
extern void T77f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdrs3a */
extern T0* T532c798(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T77f57(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs3a_error */
extern void T36f258(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T36f56(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_undefine_table */
extern void T1297f32(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus4a_error */
extern void T77f258(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdus4a */
extern T0* T532c797(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T77f56(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus4a_error */
extern void T36f257(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T36f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].is_empty */
extern T1 T1511f31(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_export_table */
extern void T1297f31(GE_context* ac, T0* C, T0* a1);
extern T1 T1297f31ot1(T0* a1, T0** a2);
extern T1 T1297f31ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vlel3a_error */
extern void T77f257(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel3a */
extern T0* T532c796(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T77f55(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel3a_error */
extern void T36f256(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T36f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].found_item */
extern T0* T1511f32(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].put_new */
extern void T1511f45(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.feature_name */
extern T0* T1075f5(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_EXPORT.item */
extern T0* T1075f6(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].resize */
extern void T1511f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].clashes_resize */
extern void T1511f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].special_integer_ */
extern T0* T1511f35(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].key_storage_resize */
extern void T1511f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].item_storage_resize */
extern void T1511f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].slots_resize */
extern void T1511f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].new_modulus */
extern T6 T1511f36(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel1a_error */
extern void T77f256(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel1a */
extern T0* T532c795(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T77f54(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel1a_error */
extern void T36f255(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T36f53(GE_context* ac, T0* C, T0* a1);
/* ET_EXPORT_LIST.item */
extern T0* T500f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].is_empty */
extern T1 T1508f32(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_rename_table */
extern void T1297f30(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc2a_error */
extern void T77f255(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc2a */
extern T0* T532c794(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T77f53(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc2a_error */
extern void T36f254(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T36f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].put_new */
extern void T1508f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_RENAME_LIST.rename_pair */
extern T0* T499f4(GE_context* ac, T0* C, T6 a1);
/* ET_RENAME.rename_pair */
extern T0* T1226f5(GE_context* ac, T0* C);
/* ET_RENAME_LIST.item */
extern T0* T499f5(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].resize */
extern void T1508f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].clashes_resize */
extern void T1508f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].special_integer_ */
extern T0* T1508f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].key_storage_resize */
extern void T1508f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_storage_resize */
extern void T1508f63(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].aliased_resized_area */
extern T0* T1662f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME].aliased_resized_area */
extern T0* T1656f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].slots_resize */
extern void T1508f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].new_modulus */
extern T6 T1508f39(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1297f26(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn0a_error */
extern void T77f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0a */
extern T0* T532c788(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T77f47(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn0a_error */
extern void T36f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T36f46(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1298f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].wipe_out */
extern void T1524f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1524f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1524f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1524f43(GE_context* ac, T0* C);
/* SPECIAL [ET_DOTNET_FEATURE].keep_head */
extern void T1678f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].set_count */
extern void T1678f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1524f42(GE_context* ac, T0* C);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].keep_head */
extern void T1681f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].set_count */
extern void T1681f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].unset_found_item */
extern void T1524f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1524f40(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_next_cursor */
extern void T1684f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_after */
extern void T1684f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].wipe_out */
extern void T1522f33(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1522f47(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1522f46(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1522f45(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1522f44(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].unset_found_item */
extern void T1522f41(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1522f43(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1679f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_after */
extern void T1679f7(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_any_features */
extern void T1298f22(GE_context* ac, T0* C, T0* a1);
extern T1 T1298f22ot1(T0* a1, T0** a2);
extern T1 T1298f22ot2(T0* a1, T0** a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1298f16(GE_context* ac, T0* C, T0* a1);
/* ET_RENAME.make */
extern T0* T1226c6(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_keyword */
extern unsigned char ge808os11704;
extern T0* ge808ov11704;
extern T0* T81f591(GE_context* ac, T0* C);
/* ET_KEYWORD.make_as */
extern T0* T397c60(GE_context* ac);
/* ET_RENAME.tokens */
extern T0* T1226f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].has */
extern T1 T1289f37(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1298f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_system */
extern T0* T1298f14(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1298f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1298f13(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1298f24(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].forth */
extern void T1526f15(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_forth */
extern void T1526f17(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].add_traversing_cursor */
extern void T1526f18(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1686f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].remove_traversing_cursor */
extern void T1526f19(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set */
extern void T1686f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].item_for_iteration */
extern T0* T1526f7(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_item */
extern T0* T1526f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].after */
extern T1 T1526f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_after */
extern T1 T1526f8(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].start */
extern void T1526f14(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_start */
extern void T1526f16(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_off */
extern T1 T1526f10(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].off */
extern T1 T1686f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found_item */
extern T0* T1524f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1524f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found */
extern T1 T1524f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search */
extern void T1524f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search_position */
extern void T1524f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].hash_position */
extern T6 T1524f22(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.test */
extern T1 T1521f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1524f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_item */
extern T6 T1524f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_item */
extern T6 T1524f23(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_feature */
extern void T1298f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1298f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found_item */
extern T0* T1522f24(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1522f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found */
extern T1 T1522f26(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search */
extern void T1522f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search_position */
extern void T1522f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].hash_position */
extern T6 T1522f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1522f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_item */
extern T6 T1522f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_equality_tester */
extern T0* T1522f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_item */
extern T6 T1522f20(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_universe */
extern T0* T1298f12(GE_context* ac, T0* C);
/* ET_CLASS.is_system_object_class */
extern T1 T82f71(GE_context* ac, T0* C);
/* ET_PARENT_LIST.is_empty */
extern T1 T468f7(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1298f20(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_feature */
extern void T1298f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].force_last */
extern void T1522f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_put */
extern void T1522f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_put */
extern void T1522f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_capacity */
extern T6 T1522f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_put */
extern void T1522f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].force */
extern void T1680f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].fill_with */
extern void T1678f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].extend */
extern void T1678f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].force_last_new */
extern void T1524f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_put */
extern void T1524f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_put */
extern void T1524f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].force */
extern void T1685f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].fill_with */
extern void T1681f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].extend */
extern void T1681f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_put */
extern void T1524f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_put */
extern void T1524f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].resize */
extern void T1524f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_resize */
extern void T1524f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1524f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_resize */
extern void T1524f55(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T1680f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T1678f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_resize */
extern void T1524f54(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T1685f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T1681f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_resize */
extern void T1524f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_modulus */
extern T6 T1524f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_capacity */
extern T6 T1524f21(GE_context* ac, T0* C, T6 a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].make */
extern T0* T1526c11(GE_context* ac);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1526f13(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1526f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1686c7(GE_context* ac, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].force_last */
extern void T1526f12(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_DOTNET_FEATURE].put_right */
extern void T1687f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_DOTNET_FEATURE].make */
extern T0* T1687c3(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].force_last_new */
extern void T1289f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_capacity */
extern T6 T1289f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].resize */
extern void T1522f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_resize */
extern void T1522f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1522f27(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_resize */
extern void T1522f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_resize */
extern void T1522f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_resize */
extern void T1522f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_modulus */
extern T6 T1522f28(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.resolve_signatures_unfolded_tuple_actual_parameters */
extern void T444f20(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T444f24(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_type */
extern void T1311f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INTERFACE_CHECKER.check_qualified_anchored_signatures_validity */
extern void T444f19(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_signatures_validity */
extern void T1310f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.reset_fatal_error */
extern void T1310f10(GE_context* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_compilation_status */
extern void T77f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_compilation_status */
extern void T36f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_LIST.parent */
extern T0* T468f6(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT.parent */
extern T0* T467f10(GE_context* ac, T0* C);
/* ET_PARENT_LIST.item */
extern T0* T468f8(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.parents */
extern T0* T82f92(GE_context* ac, T0* C);
/* ET_CLASS.is_any_class */
extern T1 T82f110(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.current_system */
extern T0* T444f13(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.set_fatal_error */
extern void T444f17(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.make */
extern T0* T444c15(GE_context* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern T0* T1311c4(GE_context* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern void T1311f4p1(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.tokens */
extern T0* T1311f3(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.make */
extern T0* T1302c10(GE_context* ac);
/* ET_SIGNATURE_CHECKER.make */
extern void T1302f10p1(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1298c18(GE_context* ac);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_key_equality_tester */
extern void T1524f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_map */
extern T0* T1524c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_with_equality_testers */
extern void T1524f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_sparse_container */
extern void T1524f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1524f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1524f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1684c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_slots */
extern void T1524f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_clashes */
extern void T1524f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_key_storage */
extern void T1524f58(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].make */
extern T0* T1680f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].make_empty */
extern T0* T1678c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].default_create */
extern T0* T1680c3(GE_context* ac);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_item_storage */
extern void T1524f57(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T1685f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make_empty */
extern T0* T1681c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].default_create */
extern T0* T1685c3(GE_context* ac);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_equality_tester */
extern void T1522f32(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.make */
extern T0* T1521c2(GE_context* ac);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make */
extern T0* T1522c31(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1522f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1522f25(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1679c6(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_slots */
extern void T1522f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_clashes */
extern void T1522f39(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_key_storage */
extern void T1522f38(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_item_storage */
extern void T1522f37(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1298f18p1(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1298f11(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1297c24(GE_context* ac);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_map */
extern T0* T1514c42(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1514f49(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_sparse_container */
extern void T1514f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].set_internal_cursor */
extern void T1514f75(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_cursor */
extern T0* T1514f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1669c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_slots */
extern void T1514f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_clashes */
extern void T1514f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_key_storage */
extern void T1514f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_item_storage */
extern void T1514f71(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].make */
extern T0* T1672f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].make_empty */
extern T0* T1670c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].default_create */
extern T0* T1672c3(GE_context* ac);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].set_key_equality_tester */
extern void T1513f36(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.alias_name_tester */
extern unsigned char ge855os26170;
extern T0* ge855ov26170;
extern T0* T1297f17(GE_context* ac, T0* C);
/* ET_ALIAS_NAME_TESTER.default_create */
extern T0* T1293c2(GE_context* ac);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_map */
extern T0* T1513c35(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_with_equality_testers */
extern void T1513f41(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_sparse_container */
extern void T1513f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].set_internal_cursor */
extern void T1513f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].new_cursor */
extern T0* T1513f32(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME].make */
extern T0* T1668c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_slots */
extern void T1513f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_clashes */
extern void T1513f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_key_storage */
extern void T1513f59(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].make */
extern T0* T980f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME].make_empty */
extern T0* T981c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].default_create */
extern T0* T980c3(GE_context* ac);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_item_storage */
extern void T1513f58(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].make */
extern T0* T1077f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME].make_empty */
extern T0* T1078c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].default_create */
extern T0* T1077c3(GE_context* ac);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].set_key_equality_tester */
extern void T1512f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_map */
extern T0* T1512c43(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_with_equality_testers */
extern void T1512f52(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_sparse_container */
extern void T1512f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].set_internal_cursor */
extern void T1512f77(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].new_cursor */
extern T0* T1512f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].make */
extern T0* T1665c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_slots */
extern void T1512f76(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_clashes */
extern void T1512f75(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_key_storage */
extern void T1512f74(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].make */
extern T0* T1663f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CALL_NAME].make_empty */
extern T0* T1661c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].default_create */
extern T0* T1663c3(GE_context* ac);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_item_storage */
extern void T1512f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].set_equality_tester */
extern void T1511f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].make */
extern T0* T1511c37(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].set_internal_cursor */
extern void T1511f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].new_cursor */
extern T0* T1511f20(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].make */
extern T0* T1664c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].make_slots */
extern void T1511f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].make_clashes */
extern void T1511f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].make_key_storage */
extern void T1511f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].make_item_storage */
extern void T1511f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].set_key_equality_tester */
extern void T1508f41(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.call_name_tester */
extern unsigned char ge856os34125;
extern T0* ge856ov34125;
extern T0* T1297f16(GE_context* ac, T0* C);
/* ET_CALL_NAME_TESTER.default_create */
extern T0* T1509c2(GE_context* ac);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_map */
extern T0* T1508c40(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_with_equality_testers */
extern void T1508f49(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_sparse_container */
extern void T1508f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].set_internal_cursor */
extern void T1508f79(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].new_cursor */
extern T0* T1508f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].make */
extern T0* T1655c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_slots */
extern void T1508f78(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_clashes */
extern void T1508f77(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_key_storage */
extern void T1508f76(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_item_storage */
extern void T1508f75(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].make */
extern T0* T1662f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_RENAME].make_empty */
extern T0* T1656c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].default_create */
extern T0* T1662c3(GE_context* ac);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1297f24p1(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1297f18(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1289f45(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.feature_name_tester */
extern unsigned char ge858os11334;
extern T0* ge858ov11334;
extern T0* T444f10(GE_context* ac, T0* C);
/* ET_FEATURE_NAME_TESTER.default_create */
extern T0* T1290c2(GE_context* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_map */
extern T0* T1289c44(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1289f50(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_sparse_container */
extern void T1289f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_internal_cursor */
extern void T1289f67(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T1289f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1494c9(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_slots */
extern void T1289f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_clashes */
extern void T1289f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_key_storage */
extern void T1289f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_item_storage */
extern void T1289f63(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].make */
extern T0* T1498f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].make_empty */
extern T0* T1495c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].default_create */
extern T0* T1498c3(GE_context* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern T0* T1310c8(GE_context* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern void T1310f8p1(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1310f5(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.set_classes_to_be_processed */
extern void T1309f8(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.make */
extern T0* T1309c7(GE_context* ac);
/* ET_PARENT_CHECKER3.make */
extern void T1309f7p1(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.tokens */
extern T0* T1309f4(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].make */
extern T0* T1308c32(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_CLASS].set_internal_cursor */
extern void T1308f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].new_cursor */
extern T0* T1308f29(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].make */
extern T0* T1531c6(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_CLASS].make_slots */
extern void T1308f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_modulus */
extern T6 T1308f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_clashes */
extern void T1308f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_key_storage */
extern void T1308f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_item_storage */
extern void T1308f34(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.make */
extern void T444f15p1(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.tokens */
extern T0* T444f11(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.error_handler */
extern T0* T444f12(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.process_class */
extern void T443f29(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.internal_process_class */
extern void T443f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_features */
extern void T443f34(GE_context* ac, T0* C);
extern T1 T443f34ot1(T0* a1, T0** a2);
extern T1 T443f34ot2(T0* a1, T0** a2);
/* ET_FEATURE_FLATTENER.check_kernel_features_validity */
extern void T443f45(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.forth_feature_name */
extern unsigned char ge808os11478;
extern T0* ge808ov11478;
extern T0* T81f632(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.after_feature_name */
extern unsigned char ge808os11407;
extern T0* ge808ov11407;
extern T0* T81f631(GE_context* ac, T0* C);
/* ET_CLASS.is_iteration_cursor_class */
extern T1 T82f153(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_cursor_feature_name */
extern unsigned char ge808os11565;
extern T0* ge808ov11565;
extern T0* T81f630(GE_context* ac, T0* C);
/* ET_CLASS.is_iterable_class */
extern T1 T82f152(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dispose_feature_name */
extern unsigned char ge808os11461;
extern T0* ge808ov11461;
extern T0* T81f629(GE_context* ac, T0* C);
/* ET_CLASS.is_disposable_class */
extern T1 T82f151(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe5a_error */
extern void T77f341(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe5a */
extern T0* T532c873(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T77f102(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe5a_error */
extern void T36f340(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T36f101(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_equal_feature_name */
extern unsigned char ge808os11526;
extern T0* ge808ov11526;
extern T0* T81f628(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.copy_feature_name */
extern unsigned char ge808os11450;
extern T0* ge808ov11450;
extern T0* T81f627(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.tokens */
extern T0* T443f21(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_convert_validity */
extern void T443f44(GE_context* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.convert_feature */
extern T0* T1040f4(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_PROCEDURE.convert_feature */
extern T0* T1230f6(GE_context* ac, T0* C);
/* ET_CONVERT_FUNCTION.convert_feature */
extern T0* T1229f5(GE_context* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.item */
extern T0* T1040f5(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_creators_validity */
extern void T443f43(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcp2a_error */
extern void T77f340(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp2a */
extern T0* T532c872(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T77f101(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp2a_error */
extern void T36f339(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T36f100(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp2b_error */
extern void T77f339(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp2b */
extern T0* T532c871(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp2b_error */
extern void T36f338(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6a_error */
extern void T77f338(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcc6a */
extern T0* T532c870(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T77f100(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc6a_error */
extern void T36f337(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T36f99(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp3b_error */
extern void T77f337(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3b */
extern T0* T532c869(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3b_error */
extern void T36f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcp3a_error */
extern void T77f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3a */
extern T0* T532c868(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3a_error */
extern void T36f335(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.feature_name */
extern T0* T1045f8(GE_context* ac, T0* C, T6 a1);
/* ET_CREATOR.item */
extern T0* T1045f11(GE_context* ac, T0* C, T6 a1);
/* ET_CREATOR_LIST.item */
extern T0* T834f5(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp1a_error */
extern void T77f335(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp1a */
extern T0* T532c867(GE_context* ac, T0* a1, T0* a2);
/* ET_CREATOR.position */
extern T0* T1045f12(GE_context* ac, T0* C);
/* ET_CREATOR.first */
extern T0* T1045f15(GE_context* ac, T0* C);
/* ET_CLIENTS.position */
extern T0* T1014f12(GE_context* ac, T0* C);
/* ET_CLIENT.position */
extern T0* T498f5(GE_context* ac, T0* C);
/* ET_CLIENTS.first */
extern T0* T1014f15(GE_context* ac, T0* C);
/* ET_CLIENTS.is_empty */
extern T1 T1014f14(GE_context* ac, T0* C);
/* ET_CREATOR.clients_clause */
extern T0* T1045f14(GE_context* ac, T0* C);
extern T1 T1045f14ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T77f99(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp1a_error */
extern void T36f334(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T36f98(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.first */
extern T0* T834f3(GE_context* ac, T0* C);
/* ET_CREATOR_LIST.is_empty */
extern T1 T834f6(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_assigners_validity */
extern void T443f42(GE_context* ac, T0* C);
extern T1 T443f42ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vfac4a_error */
extern void T77f334(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_VALIDITY_ERROR.make_vfac4a */
extern T0* T532c866(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_NULL_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T77f98(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac4a_error */
extern void T36f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T36f97(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac3a_error */
extern void T77f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfac3a */
extern T0* T532c865(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T77f97(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac3a_error */
extern void T36f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T36f96(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac2a_error */
extern void T77f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfac2a */
extern T0* T532c864(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T77f96(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac2a_error */
extern void T36f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T36f95(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1b_error */
extern void T77f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1b */
extern T0* T532c863(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T77f95(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac1b_error */
extern void T36f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T36f94(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1a_error */
extern void T77f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1a */
extern T0* T532c862(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfac1a_error */
extern void T36f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcch2a_error */
extern void T77f326(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.set_ise_reported */
extern void T532f770(GE_context* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vcch2a */
extern T0* T532c858(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T77f92(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch2a_error */
extern void T36f325(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T36f91(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1a_error */
extern void T77f325(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1a */
extern T0* T532c857(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T77f91(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch1a_error */
extern void T36f324(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T36f90(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1b_error */
extern void T77f324(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1b */
extern T0* T532c856(GE_context* ac, T0* a1, T0* a2);
/* ET_INHERITED_FEATURE.name */
extern T0* T1314f27(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vcch1b_error */
extern void T36f323(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].go_after */
extern void T1289f74(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_go_after */
extern void T1289f86(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_has_deferred_features */
extern void T82f270(GE_context* ac, T0* C, T1 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].wipe_out */
extern void T1292f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_wipe_out */
extern void T1292f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_wipe_out */
extern void T1292f56(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1292f55(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1292f54(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].unset_found_item */
extern void T1292f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].move_all_cursors_after */
extern void T1292f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_next_cursor */
extern void T1500f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_after */
extern void T1500f7(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_signature_validity */
extern void T443f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].force_last_new */
extern void T1292f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_put */
extern void T1292f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_put */
extern void T1292f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_put */
extern void T1292f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_put */
extern void T1292f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_item */
extern T6 T1292f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].hash_position */
extern T6 T1292f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].resize */
extern void T1292f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_resize */
extern void T1292f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].special_integer_ */
extern T0* T1292f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_resize */
extern void T1292f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_resize */
extern void T1292f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_item */
extern T0* T1292f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_item */
extern T6 T1292f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_resize */
extern void T1292f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_modulus */
extern T6 T1292f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_capacity */
extern T6 T1292f23(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1f_error */
extern void T77f323(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1f */
extern T0* T532c855(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.alias_lower_name */
extern T0* T532f243(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T77f90(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav1f_error */
extern void T36f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T36f89(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1c_error */
extern void T77f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1c */
extern T0* T532c854(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1c_error */
extern void T36f321(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4b_error */
extern void T77f321(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4b */
extern T0* T532c853(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T77f89(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav4b_error */
extern void T36f320(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T36f88(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav2b_error */
extern void T77f320(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2b */
extern T0* T532c852(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T77f88(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav2b_error */
extern void T36f319(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T36f87(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1g_error */
extern void T77f319(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1g */
extern T0* T532c851(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.alias_name */
extern T0* T1313f13(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vfav1g_error */
extern void T36f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1d_error */
extern void T77f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1d */
extern T0* T532c850(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1d_error */
extern void T36f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4c_error */
extern void T77f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4c */
extern T0* T532c849(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4c_error */
extern void T36f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2c_error */
extern void T77f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2c */
extern T0* T532c848(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2c_error */
extern void T36f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1h_error */
extern void T77f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1h */
extern T0* T532c847(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1h_error */
extern void T36f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1e_error */
extern void T77f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1e */
extern T0* T532c846(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1e_error */
extern void T36f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4d_error */
extern void T77f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4d */
extern T0* T532c845(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4d_error */
extern void T36f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2d_error */
extern void T77f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2d */
extern T0* T532c844(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2d_error */
extern void T36f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found_item */
extern T0* T1292f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_item */
extern T0* T1292f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found */
extern T1 T1292f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search */
extern void T1292f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search_position */
extern void T1292f47(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_redeclared_signatures_checked */
extern void T82f269(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_FLATTENER.check_anchored_signatures */
extern void T443f40(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.check_signatures */
extern void T1301f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].wipe_out */
extern void T1527f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].wipe_out */
extern void T718f19(GE_context* ac, T0* C);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].keep_head */
extern void T1379f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].set_count */
extern void T1379f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].wipe_out */
extern void T1688f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_wipe_out */
extern void T1688f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_wipe_out */
extern void T1688f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_wipe_out */
extern void T1688f42(GE_context* ac, T0* C);
/* SPECIAL [ET_LIKE_FEATURE].keep_head */
extern void T1731f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LIKE_FEATURE].set_count */
extern void T1731f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_wipe_out */
extern void T1688f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].unset_found_item */
extern void T1688f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].move_all_cursors_after */
extern void T1688f39(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].set_next_cursor */
extern void T1770f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].set_after */
extern void T1770f7(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].wipe_out */
extern void T1608f12(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].move_all_cursors_after */
extern void T1608f15(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_next_cursor */
extern void T1733f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_after */
extern void T1733f10(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].reset */
extern void T1527f15(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat2a_error */
extern void T77f381(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat2a */
extern T0* T532c912(GE_context* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].forth */
extern void T1733f14(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_forth */
extern void T1608f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_position */
extern void T1733f15(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].add_traversing_cursor */
extern void T1608f19(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].remove_traversing_cursor */
extern void T1608f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].go_after */
extern void T1733f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_go_after */
extern void T1608f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].off */
extern T1 T1733f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].before */
extern T1 T1733f8(GE_context* ac, T0* C);
/* ET_CLASS.seeded_feature */
extern T0* T82f160(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].item */
extern T0* T1733f6(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_item */
extern T0* T1608f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].after */
extern T1 T1733f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].start */
extern void T1733f12(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_start */
extern void T1608f16(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].new_cursor */
extern T0* T1608f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].make */
extern T0* T1733c9(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T77f76(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat2a_error */
extern void T36f380(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T36f75(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1301f5(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.current_system */
extern T0* T1301f7(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1301f14(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].is_empty */
extern T1 T1608f6(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].sort */
extern void T1527f11(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].put_last */
extern void T1608f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].force */
extern void T1732f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LIKE_FEATURE].fill_with */
extern void T1731f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_FEATURE].extend */
extern void T1731f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].item */
extern T0* T1608f8(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].make */
extern T0* T1608c10(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].set_internal_cursor */
extern void T1608f14(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].make */
extern T0* T1732f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LIKE_FEATURE].make_empty */
extern T0* T1731c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].default_create */
extern T0* T1732c3(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.report_vffd7b_error */
extern void T77f311(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7b */
extern T0* T532c843(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T77f87(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd7b_error */
extern void T36f310(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T36f86(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7a_error */
extern void T77f310(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7a */
extern T0* T532c842(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd7a_error */
extern void T36f309(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1b_error */
extern void T77f309(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1b */
extern T0* T532c841(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1b_error */
extern void T36f308(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1a_error */
extern void T77f308(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1a */
extern T0* T532c840(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1a_error */
extern void T36f307(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav4a_error */
extern void T77f307(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav4a */
extern T0* T532c839(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav4a_error */
extern void T36f306(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav2a_error */
extern void T77f306(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav2a */
extern T0* T532c838(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav2a_error */
extern void T36f305(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd6a_error */
extern void T77f305(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd6a */
extern T0* T532c837(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd6a_error */
extern void T36f304(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd5a_error */
extern void T77f304(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd5a */
extern T0* T532c836(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T77f86(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd5a_error */
extern void T36f303(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T36f85(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd4a_error */
extern void T77f303(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd4a */
extern T0* T532c835(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T77f85(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd4a_error */
extern void T36f302(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T36f84(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T443f39(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_type */
extern void T1300f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.check_signature_vtct_validity */
extern void T443f38(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_vtct_validity */
extern void T1302f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.resolve_identifier_signature */
extern void T443f37(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrfa0a_error */
extern void T77f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrfa0a */
extern T0* T532c861(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T77f94(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrfa0a_error */
extern void T36f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T36f93(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item */
extern T0* T1289f39(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0a_error */
extern void T77f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0a */
extern T0* T532c860(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vreg_error */
extern T1 T77f34(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0a_error */
extern void T36f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vreg_error */
extern T1 T36f33(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_type */
extern void T1299f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_PROCEDURE].wipe_out */
extern void T730f16(GE_context* ac, T0* C);
/* SPECIAL [ET_PROCEDURE].keep_head */
extern void T861f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_PROCEDURE].set_count */
extern void T861f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_all_cursors_after */
extern void T730f23(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T1383f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_after */
extern void T1383f12(GE_context* ac, T0* C);
/* ET_CLASS.set_procedures */
extern void T82f244(GE_context* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.set_declared_count */
extern void T267f10(GE_context* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.put_first */
extern void T267f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].force */
extern void T862f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].fill_with */
extern void T861f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].extend */
extern void T861f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].item */
extern T0* T730f7(GE_context* ac, T0* C, T6 a1);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort */
extern void T1572f3(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort_with_comparator */
extern void T1572f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_PROCEDURE].swap */
extern void T730f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].replace */
extern void T730f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_SEEDED_PROCEDURE_COMPARATOR.less_than */
extern T1 T1711f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.procedure_sorter */
extern unsigned char ge929os26169;
extern T0* ge929ov26169;
extern T0* T443f26(GE_context* ac, T0* C);
/* DS_QUICK_SORTER [ET_PROCEDURE].make */
extern T0* T1572c2(GE_context* ac, T0* a1);
/* ET_SEEDED_PROCEDURE_COMPARATOR.make */
extern T0* T1711c2(GE_context* ac);
/* DS_ARRAYED_LIST [ET_QUERY].wipe_out */
extern void T734f16(GE_context* ac, T0* C);
/* SPECIAL [ET_QUERY].keep_head */
extern void T858f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_QUERY].set_count */
extern void T858f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_all_cursors_after */
extern void T734f23(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_next_cursor */
extern void T1384f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_after */
extern void T1384f12(GE_context* ac, T0* C);
/* ET_CLASS.set_queries */
extern void T82f243(GE_context* ac, T0* C, T0* a1);
/* ET_QUERY_LIST.set_declared_count */
extern void T266f10(GE_context* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.put_first */
extern void T266f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].force */
extern void T860f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_QUERY].fill_with */
extern void T858f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].extend */
extern void T858f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].item */
extern T0* T734f7(GE_context* ac, T0* C, T6 a1);
/* DS_QUICK_SORTER [ET_QUERY].subsort */
extern void T1571f3(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_QUERY].subsort_with_comparator */
extern void T1571f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_QUERY].swap */
extern void T734f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].replace */
extern void T734f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_SEEDED_QUERY_COMPARATOR.less_than */
extern T1 T1708f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.query_sorter */
extern unsigned char ge929os26168;
extern T0* ge929ov26168;
extern T0* T443f25(GE_context* ac, T0* C);
/* DS_QUICK_SORTER [ET_QUERY].make */
extern T0* T1571c2(GE_context* ac, T0* a1);
/* ET_SEEDED_QUERY_COMPARATOR.make */
extern T0* T1708c2(GE_context* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].back */
extern void T1289f73(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_back */
extern void T1289f85(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_before */
extern void T1494f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].force_last */
extern void T734f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].resize */
extern void T734f24(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].aliased_resized_area */
extern T0* T860f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUERY].aliased_resized_area */
extern T0* T858f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_capacity */
extern T6 T734f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].extendible */
extern T1 T734f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_last */
extern void T730f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].resize */
extern void T730f24(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].aliased_resized_area */
extern T0* T862f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PROCEDURE].aliased_resized_area */
extern T0* T861f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_capacity */
extern T6 T730f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].extendible */
extern T1 T730f10(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.flatten_feature */
extern void T443f36(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_inherited_feature */
extern void T443f48(GE_context* ac, T0* C, T0* a1);
extern T1 T443f48ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vdjr2b_error */
extern void T77f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2b */
extern T0* T532c880(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T77f105(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr2b_error */
extern void T36f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T36f104(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn2b_error */
extern void T77f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2b */
extern T0* T532c879(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T77f104(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn2b_error */
extern void T36f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T36f103(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2a_error */
extern void T77f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2a */
extern T0* T532c878(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr2a_error */
extern void T36f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn2a_error */
extern void T77f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2a */
extern T0* T532c877(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn2a_error */
extern void T36f344(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.process_replicated_seeds */
extern void T443f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_INHERITED_FEATURE.set_other_seeds */
extern void T1314f36(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.set_other_seeds */
extern void T1515f32(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_first_seed */
extern void T1314f35(GE_context* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_first_seed */
extern void T1515f31(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.replace */
extern void T1439f10(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.first */
extern T6 T1439f8(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.remove */
extern void T1439f11(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT_FEATURE.extended_name */
extern T0* T1313f20(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.make */
extern T0* T1241c7(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].wipe_out */
extern void T1307f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_wipe_out */
extern void T1307f66(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_wipe_out */
extern void T1307f65(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_wipe_out */
extern void T1307f64(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_wipe_out */
extern void T1307f63(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].unset_found_item */
extern void T1307f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].move_all_cursors_after */
extern void T1307f62(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_next_cursor */
extern void T1530f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_after */
extern void T1530f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].forth */
extern void T1307f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_forth */
extern void T1307f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].add_traversing_cursor */
extern void T1307f76(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_position */
extern void T1530f10(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove_traversing_cursor */
extern void T1307f75(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_item */
extern T6 T1307f30(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_LIST.put_first */
extern void T392f6(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_LIST.fixed_array */
extern unsigned char ge665os12622;
extern T0* ge665ov12622;
extern T0* T392f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_for_iteration */
extern T0* T1307f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_item */
extern T0* T1307f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1307f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].after */
extern T1 T1307f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_after */
extern T1 T1307f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].after */
extern T1 T1530f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].start */
extern void T1307f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_start */
extern void T1307f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_off */
extern T1 T1307f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].off */
extern T1 T1530f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].is_empty */
extern T1 T1307f34(GE_context* ac, T0* C);
/* ET_FEATURE_LIST.make_with_capacity */
extern T0* T392c5(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove */
extern void T1307f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove_position */
extern void T1307f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_put */
extern void T1307f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_put */
extern void T1307f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_keep_head */
extern void T1307f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_keep_head */
extern void T1307f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_put */
extern void T1307f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_put */
extern void T1307f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].move_cursors_forth */
extern void T1307f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].internal_set_key_equality_tester */
extern void T1307f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_item */
extern T6 T1307f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].hash_position */
extern T6 T1307f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1307f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].search_position */
extern void T1307f53(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENTS.same_clients */
extern T1 T1014f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.same_clients */
extern T1 T469f9(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.clients */
extern T0* T1313f19(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.has_rename */
extern T1 T1313f18(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmfn0c_error */
extern void T77f344(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0c */
extern T0* T532c876(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0c_error */
extern void T36f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.same_version */
extern T1 T1313f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].force_last */
extern void T1307f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].resize */
extern void T1307f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_resize */
extern void T1307f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1307f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_resize */
extern void T1307f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_resize */
extern void T1307f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_resize */
extern void T1307f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_modulus */
extern T6 T1307f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_capacity */
extern T6 T1307f25(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_no_redeclaration_validity */
extern void T443f53(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs4a_error */
extern void T77f359(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdrs4a */
extern T0* T532c891(GE_context* ac, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.feature_lower_name */
extern T0* T532f290(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T77f108(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs4a_error */
extern void T36f358(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T36f107(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_redefine */
extern T1 T1313f12(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_redefine_clause_validity */
extern void T443f56(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2b_error */
extern void T77f370(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2b */
extern T0* T532c902(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T77f114(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs2b_error */
extern void T36f369(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T36f113(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2a_error */
extern void T77f369(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2a */
extern T0* T532c901(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs2a_error */
extern void T36f368(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.check_undefine_clause_validity */
extern void T443f55(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2b_error */
extern void T77f368(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2b */
extern T0* T532c900(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T77f113(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus2b_error */
extern void T36f367(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T36f112(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2a_error */
extern void T77f367(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2a */
extern T0* T532c899(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdus2a_error */
extern void T36f366(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdus3a_error */
extern void T77f366(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus3a */
extern T0* T532c898(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T77f112(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus3a_error */
extern void T36f365(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T36f111(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_rename_clause_validity */
extern void T443f54(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4d_error */
extern void T77f365(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4d */
extern T0* T532c897(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T77f111(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc4d_error */
extern void T36f364(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T36f110(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4c_error */
extern void T77f364(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4c */
extern T0* T532c896(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4c_error */
extern void T36f363(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vfav4e_error */
extern void T77f363(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4e */
extern T0* T532c895(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4e_error */
extern void T36f362(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4b_error */
extern void T77f362(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4b */
extern T0* T532c894(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4b_error */
extern void T36f361(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4a_error */
extern void T77f361(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4a */
extern T0* T532c893(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4a_error */
extern void T36f360(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc5a_error */
extern void T77f360(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc5a */
extern T0* T532c892(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T77f110(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc5a_error */
extern void T36f359(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T36f109(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.is_replicated */
extern T1 T1314f20(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T443f27(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T443f27ac1(T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].wipe_out */
extern void T1295f16(GE_context* ac, T0* C);
/* SPECIAL [ET_CLIENT_LIST].keep_head */
extern void T1502f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_LIST].set_count */
extern void T1502f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_all_cursors_after */
extern void T1295f21(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_next_cursor */
extern void T1503f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_after */
extern void T1503f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].wipe_out */
extern void T1296f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_wipe_out */
extern void T1296f66(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_wipe_out */
extern void T1296f65(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_wipe_out */
extern void T1296f64(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_wipe_out */
extern void T1296f63(GE_context* ac, T0* C);
/* SPECIAL [ET_CLIENT].keep_head */
extern void T1507f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT].set_count */
extern void T1507f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].unset_found_item */
extern void T1296f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].move_all_cursors_after */
extern void T1296f62(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_next_cursor */
extern void T1505f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_after */
extern void T1505f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].back */
extern void T1296f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_back */
extern void T1296f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].add_traversing_cursor */
extern void T1296f72(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_position */
extern void T1505f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].remove_traversing_cursor */
extern void T1296f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_before */
extern void T1505f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_item */
extern T6 T1296f31(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENTS.put_first */
extern void T1014f17(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.fixed_array */
extern T0* T1014f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_for_iteration */
extern T0* T1296f22(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_item */
extern T0* T1296f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_item */
extern T0* T1296f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].before */
extern T1 T1296f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_before */
extern T1 T1296f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].before */
extern T1 T1505f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].finish */
extern void T1296f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_finish */
extern void T1296f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_off */
extern T1 T1296f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].off */
extern T1 T1505f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].is_empty */
extern T1 T1296f36(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].for_all */
extern T1 T1726f6(GE_context* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].forth */
extern void T1818f8(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_forth */
extern void T1726f12(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].forth */
extern void T1505f17(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_forth */
extern void T1296f75(GE_context* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].go_after */
extern void T1818f7(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_go_after */
extern void T1726f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].go_after */
extern void T1505f16(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_go_after */
extern void T1296f74(GE_context* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].item */
extern T0* T1818f4(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_item */
extern T0* T1726f7(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].key */
extern T0* T1505f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_key */
extern T0* T1296f40(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_item */
extern T0* T1296f35(GE_context* ac, T0* C, T6 a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].after */
extern T1 T1818f3(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].after */
extern T1 T1505f8(GE_context* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].start */
extern void T1818f6(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_start */
extern void T1726f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].start */
extern void T1505f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_start */
extern void T1296f73(GE_context* ac, T0* C, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].new_cursor */
extern T0* T1726f4(GE_context* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].make */
extern T0* T1818c5(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_cursor */
extern T0* T1296f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].make */
extern T0* T1505c10(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].keys */
extern T0* T1296f39(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].make */
extern T0* T1726c8(GE_context* ac, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].set_internal_cursor */
extern void T1726f9(GE_context* ac, T0* C, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].new_cursor_with_table_cursor */
extern T0* T1726f5(GE_context* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].make_with_table_cursor */
extern T0* T1818c9(GE_context* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].is_empty */
extern T1 T1295f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].force */
extern void T1296f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_put */
extern void T1296f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_put */
extern void T1296f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_put */
extern void T1296f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_item */
extern T6 T1296f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].hash_position */
extern T6 T1296f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].resize */
extern void T1296f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_resize */
extern void T1296f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].special_integer_ */
extern T0* T1296f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_resize */
extern void T1296f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_resize */
extern void T1296f68(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].aliased_resized_area */
extern T0* T1506f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT].aliased_resized_area */
extern T0* T1507f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_resize */
extern void T1296f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_modulus */
extern T6 T1296f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_capacity */
extern T6 T1296f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_put */
extern void T1296f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].force */
extern void T1506f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLIENT].fill_with */
extern void T1507f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT].extend */
extern void T1507f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].search_position */
extern void T1296f54(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.client */
extern T0* T1014f9(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENT.client */
extern T0* T498f4(GE_context* ac, T0* C);
/* ET_CLIENTS.item */
extern T0* T1014f11(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.client */
extern T0* T469f6(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.item */
extern T0* T469f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].remove */
extern void T1295f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_left */
extern void T1295f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_cursors_left */
extern void T1295f19(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_position */
extern void T1503f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].remove_last */
extern void T1295f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_last_cursors_after */
extern void T1295f22(GE_context* ac, T0* C);
/* ET_CLIENTS.is_none */
extern T1 T1014f8(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.is_none */
extern T1 T469f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].item */
extern T0* T1295f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].first */
extern T0* T1295f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].force_last */
extern void T1295f14(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].force */
extern void T1501f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLIENT_LIST].fill_with */
extern void T1502f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT_LIST].extend */
extern void T1502f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].resize */
extern void T1295f17(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1501f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1502f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].new_capacity */
extern T6 T1295f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].extendible */
extern T1 T1295f10(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_EXPORT.clients */
extern T0* T1075f9(GE_context* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.clients */
extern T0* T1227f6(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.has_feature_name */
extern T1 T1075f8(GE_context* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.has_feature_name */
extern T1 T1227f5(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.is_all */
extern T1 T1075f7(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.flatten_redeclared_feature */
extern void T443f47(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_precursor_validity */
extern void T443f52(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_feature_validity */
extern void T1306f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd3b_error */
extern void T77f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3b */
extern T0* T532c875(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_POSTCONDITIONS.position */
extern T0* T886f12(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.first */
extern T0* T886f14(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.is_empty */
extern T1 T886f13(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T77f103(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd3b_error */
extern void T36f342(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T36f102(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.is_ensure_then */
extern T1 T886f11(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd3a_error */
extern void T77f342(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3a */
extern T0* T532c874(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.position */
extern T0* T389f12(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.first */
extern T0* T389f14(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.is_empty */
extern T1 T389f13(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdrd3a_error */
extern void T36f341(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.is_require_else */
extern T1 T389f8(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_redeclaration_validity */
extern void T443f51(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd6a_error */
extern void T77f358(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6a */
extern T0* T532c890(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd6a_error */
extern void T36f357(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4b_error */
extern void T77f357(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4b */
extern T0* T532c889(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T77f109(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd4b_error */
extern void T36f356(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T36f108(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd4c_error */
extern void T77f356(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4c */
extern T0* T532c888(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4c_error */
extern void T36f355(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn0b_error */
extern void T77f355(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_ge_reported */
extern void T532f772(GE_context* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vmfn0b */
extern T0* T532c887(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0b_error */
extern void T36f354(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4a_error */
extern void T77f354(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4a */
extern T0* T532c886(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4a_error */
extern void T36f353(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrs4b_error */
extern void T77f353(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs4b */
extern T0* T532c885(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs4b_error */
extern void T36f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd5a_error */
extern void T77f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd5a */
extern T0* T532c884(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T77f107(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd5a_error */
extern void T36f351(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T36f106(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7c_error */
extern void T77f351(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7c */
extern T0* T532c883(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T77f106(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd7c_error */
extern void T36f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T36f105(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7a_error */
extern void T77f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7a */
extern T0* T532c882(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7a_error */
extern void T36f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd7b_error */
extern void T77f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7b */
extern T0* T532c881(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7b_error */
extern void T36f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REDECLARED_FEATURE.is_replicated */
extern T1 T1515f17(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_builtin_feature_validity */
extern void T443f49(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_feature_validity */
extern void T1305f14(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss3a_error */
extern void T77f327(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmss3a */
extern T0* T532c859(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T77f93(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss3a_error */
extern void T36f326(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T36f92(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_immediate_feature */
extern void T443f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T1289f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_before */
extern T1 T1289f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T1494f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].finish */
extern void T1289f72(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_finish */
extern void T1289f84(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_feature_adaptations */
extern void T443f35(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_parents_validity */
extern void T443f33(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.check_parents_validity */
extern void T1303f8(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_formal_parameters_validity */
extern void T443f32(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.check_formal_parameters_validity */
extern void T1304f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_constraint_validity */
extern void T1304f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.constraint */
extern T0* T1090f6(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.current_system */
extern T0* T443f23(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.set_fatal_error */
extern void T443f30(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.make */
extern T0* T443c28(GE_context* ac);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_map */
extern T0* T1307c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1307f40(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_sparse_container */
extern void T1307f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].set_internal_cursor */
extern void T1307f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_cursor */
extern T0* T1307f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].make */
extern T0* T1530c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_slots */
extern void T1307f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_clashes */
extern void T1307f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_key_storage */
extern void T1307f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_item_storage */
extern void T1307f42(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.make */
extern T0* T1306c9(GE_context* ac);
/* ET_PRECURSOR_CHECKER.dummy_feature */
extern unsigned char ge945os36273;
extern T0* ge945ov36273;
extern T0* T1306f5(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.current_system */
extern T0* T1306f6(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.make */
extern void T1306f9p1(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.tokens */
extern T0* T1306f4(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.make */
extern T0* T1305c13(GE_context* ac);
/* ET_BUILTIN_FEATURE_CHECKER.tokens */
extern T0* T1305f3(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern T0* T1304c8(GE_context* ac);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern void T1304f8p1(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.tokens */
extern T0* T1304f4(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.make */
extern T0* T1303c7(GE_context* ac);
/* ET_PARENT_CHECKER2.make */
extern void T1303f7p1(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.tokens */
extern T0* T1303f4(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern T0* T1301c8(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].make_default */
extern T0* T1527c10(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].make */
extern void T1527f14(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_map */
extern T0* T1688c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_with_equality_testers */
extern void T1688f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_sparse_container */
extern void T1688f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].set_internal_cursor */
extern void T1688f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].new_cursor */
extern T0* T1688f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].make */
extern T0* T1770c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_slots */
extern void T1688f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].new_modulus */
extern T6 T1688f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_clashes */
extern void T1688f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_key_storage */
extern void T1688f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_item_storage */
extern void T1688f55(GE_context* ac, T0* C, T6 a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern void T1301f8p1(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1301f6(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern T0* T1300c5(GE_context* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern void T1300f5p1(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.tokens */
extern T0* T1300f3(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern T0* T1299c7(GE_context* ac);
/* ET_IDENTIFIER_TYPE_RESOLVER.tokens */
extern T0* T1299f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_map */
extern T0* T1296c41(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_with_equality_testers */
extern void T1296f42(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_sparse_container */
extern void T1296f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].set_internal_cursor */
extern void T1296f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_slots */
extern void T1296f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_clashes */
extern void T1296f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_key_storage */
extern void T1296f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_item_storage */
extern void T1296f44(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].make */
extern T0* T1506f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT].make_empty */
extern T0* T1507c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].default_create */
extern T0* T1506c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].make */
extern T0* T1295c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].set_internal_cursor */
extern void T1295f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].new_cursor */
extern T0* T1295f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].make */
extern T0* T1503c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].make */
extern T0* T1501f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_LIST].make_empty */
extern T0* T1502c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].default_create */
extern T0* T1501c3(GE_context* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_key_equality_tester */
extern void T1292f35(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.alias_name_tester */
extern T0* T443f20(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_map */
extern T0* T1292c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_with_equality_testers */
extern void T1292f36(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_sparse_container */
extern void T1292f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_internal_cursor */
extern void T1292f43(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T1292f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1500c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_slots */
extern void T1292f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_clashes */
extern void T1292f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_key_storage */
extern void T1292f39(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_item_storage */
extern void T1292f38(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].make */
extern T0* T730c15(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].set_internal_cursor */
extern void T730f22(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_cursor */
extern T0* T730f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].make */
extern T0* T1383c9(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].make */
extern T0* T734c15(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].set_internal_cursor */
extern void T734f22(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_cursor */
extern T0* T734f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].make */
extern T0* T1384c9(GE_context* ac, T0* a1);
/* ET_FEATURE_FLATTENER.feature_name_tester */
extern T0* T443f24(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.make */
extern void T443f28p1(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.error_handler */
extern T0* T443f22(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.process_class */
extern void T442f12(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.internal_process_class */
extern void T442f14(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1a_error */
extern void T77f237(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1a */
extern T0* T532c777(GE_context* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].after */
extern T1 T1534f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].forth */
extern void T1534f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_forth */
extern void T1322f36(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].add_traversing_cursor */
extern void T1322f37(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_next_cursor */
extern void T1534f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_traversing_cursor */
extern void T1322f38(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].item */
extern T0* T1534f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_item */
extern T0* T1322f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].start */
extern void T1534f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_start */
extern void T1322f35(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_after */
extern void T1534f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].off */
extern T1 T1534f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].before */
extern T1 T1534f8(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T77f37(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr1a_error */
extern void T36f236(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T36f36(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].first */
extern T0* T1322f9(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.set_parents_inheritance_error */
extern void T442f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].wipe_out */
extern void T1285f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].wipe_out */
extern void T1489f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_wipe_out */
extern void T1489f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_wipe_out */
extern void T1489f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_wipe_out */
extern void T1489f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_wipe_out */
extern void T1489f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].unset_found_item */
extern void T1489f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].move_all_cursors_after */
extern void T1489f41(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_next_cursor */
extern void T1652f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_after */
extern void T1652f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].wipe_out */
extern void T1322f24(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_all_cursors_after */
extern void T1322f31(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].reset */
extern void T1285f17(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].is_empty */
extern T1 T1322f8(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.check_parents_validity */
extern void T442f18(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.check_parents_validity */
extern void T1287f9(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.check_formal_parameters_validity */
extern void T442f17(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameters_validity */
extern void T1288f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_cycles */
extern void T1288f15(GE_context* ac, T0* C);
extern T1 T1288f15ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3j_error */
extern void T77f248(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3j */
extern T0* T532c787(GE_context* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].after */
extern T1 T1654f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].forth */
extern void T1654f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_forth */
extern void T1493f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_position */
extern void T1654f14(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].add_traversing_cursor */
extern void T1493f19(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1654f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].remove_traversing_cursor */
extern void T1493f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].item */
extern T0* T1654f4(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_item */
extern T0* T1493f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].start */
extern void T1654f12(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_start */
extern void T1493f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_after */
extern void T1654f10(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].is_empty */
extern T1 T1493f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].off */
extern T1 T1654f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].before */
extern T1 T1654f8(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1493f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].make */
extern T0* T1654c9(GE_context* ac, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].first */
extern T0* T1493f8(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T77f46(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg3j_error */
extern void T36f247(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T36f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].wipe_out */
extern void T1492f12(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].wipe_out */
extern void T1653f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_wipe_out */
extern void T1653f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_wipe_out */
extern void T1653f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_wipe_out */
extern void T1653f41(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].keep_head */
extern void T1091f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].set_count */
extern void T1091f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_wipe_out */
extern void T1653f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].unset_found_item */
extern void T1653f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1653f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1768f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].set_after */
extern void T1768f7(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].wipe_out */
extern void T1493f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1493f15(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].reset */
extern void T1492f14(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint_base_type */
extern void T1218f84(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.set_constraint_base_type */
extern void T1090f82(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].item */
extern T0* T1493f7(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3g_error */
extern void T77f247(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3g */
extern T0* T532c786(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3g_error */
extern void T36f246(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_CHECKER1.ise_6_1_latest */
extern unsigned char ge191os2000;
extern T0* ge191ov2000;
extern T0* T1288f10(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.current_system */
extern T0* T1288f9(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].sort */
extern void T1492f11(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].put_last */
extern void T1493f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].force */
extern void T1089f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].fill_with */
extern void T1091f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].extend */
extern void T1091f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].make */
extern T0* T1493c11(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].set_internal_cursor */
extern void T1493f14(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].make */
extern T0* T1089f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].make_empty */
extern T0* T1091c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].default_create */
extern T0* T1089c3(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].count */
extern T6 T1492f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_validity */
extern void T1288f14(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg2a_error */
extern void T77f246(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg2a */
extern T0* T532c785(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T77f45(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg2a_error */
extern void T36f245(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T36f44(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg1a_error */
extern void T77f245(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg1a */
extern T0* T532c784(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T77f44(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg1a_error */
extern void T36f244(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T36f43(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.error_handler */
extern T0* T1288f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_fatal_error */
extern void T1288f13(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.current_universe */
extern T0* T1288f6(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.set_ancestors */
extern void T442f16(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_ancestors */
extern void T82f249(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].wipe_out */
extern void T1286f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_wipe_out */
extern void T1286f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_wipe_out */
extern void T1286f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_wipe_out */
extern void T1286f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_wipe_out */
extern void T1286f44(GE_context* ac, T0* C);
/* SPECIAL [ET_BASE_TYPE].keep_head */
extern void T868f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].set_count */
extern void T868f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].unset_found_item */
extern void T1286f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].move_all_cursors_after */
extern void T1286f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_next_cursor */
extern void T1431f13(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_after */
extern void T1431f12(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].forth */
extern void T1431f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_forth */
extern void T1286f65(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].add_traversing_cursor */
extern void T1286f67(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_position */
extern void T1431f14(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].remove_traversing_cursor */
extern void T1286f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_item */
extern T6 T1286f25(GE_context* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_LIST.put_last */
extern void T396f8(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].force */
extern void T869f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].fill_with */
extern void T868f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].extend */
extern void T868f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].item */
extern T0* T1431f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_item */
extern T0* T1286f34(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_item */
extern T0* T1286f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].after */
extern T1 T1431f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].start */
extern void T1431f10(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_start */
extern void T1286f64(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_off */
extern T1 T1286f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].off */
extern T1 T1431f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].is_empty */
extern T1 T1286f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_cursor */
extern T0* T1286f20(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].make */
extern T0* T1431c9(GE_context* ac, T0* a1);
/* ET_ANCESTOR_BUILDER.add_parent_to_ancestors */
extern void T442f21(GE_context* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.item */
extern T0* T396f5(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].force_new */
extern void T1286f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_put */
extern void T1286f53(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_put */
extern void T1286f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_put */
extern void T1286f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_put */
extern void T1286f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_item */
extern T6 T1286f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].hash_position */
extern T6 T1286f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].resize */
extern void T1286f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_resize */
extern void T1286f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].special_integer_ */
extern T0* T1286f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_resize */
extern void T1286f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_resize */
extern void T1286f56(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].aliased_resized_area */
extern T0* T869f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BASE_TYPE].aliased_resized_area */
extern T0* T868f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_item */
extern T0* T1286f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_resize */
extern void T1286f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_modulus */
extern T6 T1286f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_capacity */
extern T6 T1286f23(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvagp0a_error */
extern void T77f243(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvagp0a */
extern T0* T532c783(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T77f42(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvagp0a_error */
extern void T36f242(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T36f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].found_item */
extern T0* T1286f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].found */
extern T1 T1286f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].search */
extern void T1286f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].search_position */
extern void T1286f48(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso2a_error */
extern void T77f242(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso2a */
extern T0* T532c782(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T77f41(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso2a_error */
extern void T36f241(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T36f40(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtct0a_error */
extern void T77f241(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtct0a */
extern T0* T532c781(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtct_error */
extern T1 T77f40(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtct0a_error */
extern void T36f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtct_error */
extern T1 T36f39(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso1a_error */
extern void T77f240(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso1a */
extern T0* T532c780(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T77f39(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso1a_error */
extern void T36f239(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T36f38(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhay0a_error */
extern void T77f239(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vhay0a */
extern T0* T532c779(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhay_error */
extern T1 T77f38(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhay0a_error */
extern void T36f238(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vhay_error */
extern T1 T36f37(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1b_error */
extern void T77f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1b */
extern T0* T532c778(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr1b_error */
extern void T36f237(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_CLASS].item */
extern T0* T1322f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].sort */
extern void T1285f12(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_class_to_sorter */
extern void T442f15(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.add_parents_to_sorter */
extern void T442f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force_relation */
extern void T1285f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put_indexed_relation */
extern void T1285f19(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].count */
extern T6 T1285f8(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].index_of */
extern T6 T1285f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found_item */
extern T6 T1489f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_item */
extern T6 T1489f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found */
extern T1 T1489f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search */
extern void T1489f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search_position */
extern void T1489f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].hash_position */
extern T6 T1489f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_item */
extern T0* T1489f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_item */
extern T6 T1489f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_item */
extern T6 T1489f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force */
extern void T1285f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put */
extern void T1285f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].put_new */
extern void T1489f37(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_put */
extern void T1489f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_put */
extern void T1489f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_put */
extern void T1489f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_put */
extern void T1489f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].resize */
extern void T1489f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_resize */
extern void T1489f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].special_integer_ */
extern T0* T1489f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_resize */
extern void T1489f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_resize */
extern void T1489f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_resize */
extern void T1489f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_modulus */
extern T6 T1489f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].capacity */
extern T6 T1285f9(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.current_universe */
extern T0* T442f10(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has */
extern T1 T1285f7(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].has */
extern T1 T1489f21(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.current_system */
extern T0* T442f9(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.set_fatal_error */
extern void T442f13(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.make */
extern T0* T442c11(GE_context* ac);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern T0* T1288c11(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make_default */
extern T0* T1492c10(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make */
extern void T1492f13(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_map */
extern T0* T1653c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_with_equality_testers */
extern void T1653f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_sparse_container */
extern void T1653f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].set_internal_cursor */
extern void T1653f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1653f26(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].make */
extern T0* T1768c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_slots */
extern void T1653f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].new_modulus */
extern T6 T1653f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_clashes */
extern void T1653f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_key_storage */
extern void T1653f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_item_storage */
extern void T1653f53(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern void T1288f11p1(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.tokens */
extern T0* T1288f8(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.make */
extern T0* T1287c8(GE_context* ac);
/* ET_PARENT_CHECKER1.tokens */
extern T0* T1287f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_map */
extern T0* T1286c37(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_with_equality_testers */
extern void T1286f41(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_sparse_container */
extern void T1286f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].set_internal_cursor */
extern void T1286f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_slots */
extern void T1286f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_clashes */
extern void T1286f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_key_storage */
extern void T1286f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_item_storage */
extern void T1286f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make_default */
extern T0* T1285c11(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make */
extern void T1285f16(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_map */
extern T0* T1489c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_with_equality_testers */
extern void T1489f40(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_sparse_container */
extern void T1489f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].set_internal_cursor */
extern void T1489f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_cursor */
extern T0* T1489f32(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].make */
extern T0* T1652c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_slots */
extern void T1489f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_clashes */
extern void T1489f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_key_storage */
extern void T1489f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_item_storage */
extern void T1489f56(GE_context* ac, T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.make */
extern void T442f11p1(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.tokens */
extern T0* T442f7(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.error_handler */
extern T0* T442f8(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.process_class */
extern void T441f7(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.internal_process_class */
extern void T441f9(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.check_cluster_dependence_constraints */
extern void T441f10(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].forth */
extern void T1336f12(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].cursor_forth */
extern void T881f61(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].add_traversing_cursor */
extern void T881f64(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_next_cursor */
extern void T1336f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_position */
extern void T1336f15(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].remove_traversing_cursor */
extern void T881f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_after */
extern void T1336f13(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gcdep_error */
extern void T77f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_cluster_error */
extern void T77f231(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_ERROR.make_gcdep */
extern T0* T1550c26(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].forth */
extern void T1651f12(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_forth */
extern void T1468f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].add_traversing_cursor */
extern void T1468f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_next_cursor */
extern void T1651f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_position */
extern void T1651f10(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].remove_traversing_cursor */
extern void T1468f58(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_after */
extern void T1651f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_item */
extern T6 T1468f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].key */
extern T0* T1651f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_key */
extern T0* T1468f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_item */
extern T0* T1468f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].after */
extern T1 T1651f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].start */
extern void T1651f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_start */
extern void T1468f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_off */
extern T1 T1468f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].off */
extern T1 T1651f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].new_cursor */
extern T0* T1468f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].make */
extern T0* T1651c9(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].is_empty */
extern T1 T1468f23(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T77f84(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcdep_error */
extern void T36f301(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_cluster_error */
extern void T36f230(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T36f83(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcpro_error */
extern void T77f301(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLUSTER_ERROR.make_gcpro */
extern T0* T1550c25(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T77f83(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcpro_error */
extern void T36f300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T36f82(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T1 T857f10(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T857f10ac1(T0* a1, T0* a2, T0* a3);
/* Creation of agent #2 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T857f10ac2(T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T857f10ac3(T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T857f10ac4(T0* a1, T0* a2);
extern T1 T857f10ot1(T0* a1, T0** a2);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.matches_pathname */
extern T1 T857f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* LX_DFA_WILDCARD.recognizes */
extern T1 T1467f12(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.longest_end_position */
extern T6 T1467f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* LX_DFA_WILDCARD.is_compiled */
extern T1 T1467f15(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].there_exists */
extern T1 T136f21(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_ */
extern T0* T857f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].there_exists */
extern T1 T1468f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_item */
extern T0* T1468f30(GE_context* ac, T0* C, T6 a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.group_pathname */
extern T0* T857f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.replace_backslashes */
extern void T857f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].item */
extern T0* T1336f4(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].cursor_item */
extern T0* T881f34(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].after */
extern T1 T1336f7(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].start */
extern void T1336f10(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].cursor_start */
extern void T881f55(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].cursor_off */
extern T1 T881f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].off */
extern T1 T1336f8(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].is_empty */
extern T1 T881f27(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].new_cursor */
extern T0* T881f21(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].make */
extern T0* T1336c9(GE_context* ac, T0* a1);
/* ET_CLASS.first_non_override_overridden_class */
extern T0* T82f150(GE_context* ac, T0* C);
/* ET_CLASS.master_class_in_universe */
extern T0* T82f170(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.scm_mapped_cluster */
extern T0* T441f5(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.current_system */
extern T0* T441f4(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.set_fatal_error */
extern void T441f8(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.make */
extern T0* T441c6(GE_context* ac);
/* ET_PROVIDER_CHECKER.tokens */
extern T0* T441f2(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.error_handler */
extern T0* T441f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_class */
extern void T440f953(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.reset_preparsed */
extern void T82f229(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_class */
extern void T789f5(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaab_error */
extern void T36f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaab */
extern T0* T1550c23(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T36f28(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcaab_error */
extern void T77f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T77f29(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvscn1b_error */
extern void T36f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvscn1b */
extern T0* T532c767(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T36f27(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvscn1b_error */
extern void T77f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T77f28(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.current_system */
extern T0* T440f671(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.syntax_error */
extern T1 T440f669(GE_context* ac, T0* C);
/* ET_CLASS.set_filename */
extern void T82f228(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_file */
extern void T440f957(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_EIFFEL_PARSER.yyparse */
extern void T440f962(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_pop_last_value */
extern void T440f974(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_push_error_value */
extern void T440f973(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action */
extern void T440f972(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_801_1000 */
extern void T440f999(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_931 */
extern void T440f1946(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_counter */
extern void T440f1955(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].force */
extern void T890f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].resize */
extern void T890f14(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].new_capacity */
extern T6 T890f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].extendible */
extern T1 T890f6(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_930 */
extern void T440f1945(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_929 */
extern void T440f1944(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_928 */
extern void T440f1943(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_927 */
extern void T440f1942(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].force */
extern void T938f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_REAL_CONSTANT].fill_with */
extern void T940f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_REAL_CONSTANT].extend */
extern void T940f10(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_cast_type */
extern void T1208f39(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_cast_type */
extern void T1207f39(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_target_type */
extern T0* T403f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.ast_factory */
extern T0* T440f691(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_926 */
extern void T440f1941(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_sign */
extern void T1208f38(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_sign */
extern void T1207f38(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_925 */
extern void T440f1940(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_924 */
extern void T440f1939(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_923 */
extern void T440f1938(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_922 */
extern void T440f1937(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_921 */
extern void T440f1936(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_920 */
extern void T440f1935(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].force */
extern void T930f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].fill_with */
extern void T932f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].extend */
extern void T932f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_919 */
extern void T440f1934(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_918 */
extern void T440f1933(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_917 */
extern void T440f1932(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_916 */
extern void T440f1931(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_915 */
extern void T440f1930(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_914 */
extern void T440f1929(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_913 */
extern void T440f1928(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].force */
extern void T916f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].fill_with */
extern void T918f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].extend */
extern void T918f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_912 */
extern void T440f1927(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_911 */
extern void T440f1926(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].force */
extern void T922f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].fill_with */
extern void T924f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].extend */
extern void T924f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_910 */
extern void T440f1925(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T922f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T924f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_909 */
extern void T440f1924(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_908 */
extern void T440f1923(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_907 */
extern void T440f1922(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_906 */
extern void T440f1921(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].force */
extern void T936f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING].fill_with */
extern void T937f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING].extend */
extern void T937f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_905 */
extern void T440f1920(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T936f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T937f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_904 */
extern void T440f1919(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_903 */
extern void T440f1918(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_902 */
extern void T440f1917(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_901 */
extern void T440f1916(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_900 */
extern void T440f1915(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_899 */
extern void T440f1914(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_898 */
extern void T440f1913(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_897 */
extern void T440f1912(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_896 */
extern void T440f1911(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_895 */
extern void T440f1910(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_894 */
extern void T440f1909(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_893 */
extern void T440f1908(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_892 */
extern void T440f1907(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_891 */
extern void T440f1906(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_890 */
extern void T440f1905(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_889 */
extern void T440f1904(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_888 */
extern void T440f1903(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_887 */
extern void T440f1902(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_886 */
extern void T440f1901(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_885 */
extern void T440f1900(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_884 */
extern void T440f1899(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_883 */
extern void T440f1898(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_882 */
extern void T440f1897(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_881 */
extern void T440f1896(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_880 */
extern void T440f1895(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_879 */
extern void T440f1894(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].force */
extern void T970f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].fill_with */
extern void T971f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].extend */
extern void T971f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T970f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T971f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_typed_open_argument */
extern T0* T403f323(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.make */
extern T0* T1281c9(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.question_mark_symbol */
extern unsigned char ge808os11691;
extern T0* ge808ov11691;
extern T0* T81f771(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.make */
extern T0* T958c71(GE_context* ac);
/* ET_QUESTION_MARK_SYMBOL.make_leaf */
extern void T958f73(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.tokens */
extern T0* T958f12(GE_context* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.tokens */
extern T0* T1281f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_878 */
extern void T440f1893(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_877 */
extern void T440f1892(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_876 */
extern void T440f1891(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].force */
extern void T972f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].fill_with */
extern void T974f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].extend */
extern void T974f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T972f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T974f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.increment_counter */
extern void T440f1956(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].replace */
extern void T890f12(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_argument_operand_comma */
extern T0* T403f322(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_875 */
extern void T440f1890(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].force */
extern void T975f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].fill_with */
extern void T977f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].extend */
extern void T977f10(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put_first */
extern void T976f12(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.fixed_array */
extern unsigned char ge465os12622;
extern T0* ge465ov12622;
extern T0* T976f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T972c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_874 */
extern void T440f1889(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T975f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T977f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_argument_operands */
extern T0* T403f321(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern T0* T976c11(GE_context* ac, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern void T976f11p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T972f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make_empty */
extern T0* T974c5(GE_context* ac, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.tokens */
extern T0* T976f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.counter_value */
extern T6 T440f867(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_symbol */
extern T0* T440f869(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].item */
extern T0* T894f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_873 */
extern void T440f1888(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_872 */
extern void T440f1887(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_symbol */
extern void T440f1959(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].force */
extern void T894f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].force */
extern void T909f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL].fill_with */
extern void T910f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL].extend */
extern void T910f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].resize */
extern void T894f12(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T909f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T910f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].new_capacity */
extern T6 T894f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].extendible */
extern T1 T894f6(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_871 */
extern void T440f1886(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_counter */
extern void T440f1953(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_symbol */
extern void T440f1958(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].remove */
extern void T894f10(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_SYMBOL].keep_head */
extern void T910f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL].set_count */
extern void T910f9(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_870 */
extern void T440f1885(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_869 */
extern void T440f1884(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_868 */
extern void T440f1883(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].force */
extern void T978f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_TARGET].fill_with */
extern void T979f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_TARGET].extend */
extern void T979f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T978f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T979f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_open_target */
extern T0* T403f320(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AGENT_OPEN_TARGET.make */
extern T0* T1280c8(GE_context* ac, T0* a1);
/* ET_AGENT_OPEN_TARGET.tokens */
extern T0* T1280f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_867 */
extern void T440f1882(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_866 */
extern void T440f1881(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_865 */
extern void T440f1880(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_864 */
extern void T440f1879(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_agent_identifier_target */
extern T0* T440f914(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_across_cursor */
extern void T182f120(GE_context* ac, T0* C, T1 a1);
/* ET_ACROSS_COMPONENT_LIST.across_component */
extern T0* T1198f3(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_COMPONENT_LIST.index_of_name */
extern T6 T1198f5(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_object_test_local */
extern void T182f119(GE_context* ac, T0* C, T1 a1);
/* ET_OBJECT_TEST_LIST.index_of_name */
extern T6 T1197f4(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.set_used */
extern void T1564f9(GE_context* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE.set_used */
extern void T1129f8(GE_context* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.local_variable */
extern T0* T333f4(GE_context* ac, T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.item */
extern T0* T333f7(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_local */
extern void T182f118(GE_context* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.index_of */
extern T6 T333f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.set_used */
extern void T1563f9(GE_context* ac, T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT.set_used */
extern void T265f8(GE_context* ac, T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT_LIST.index_of */
extern T6 T262f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_863 */
extern void T440f1878(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_start_closure */
extern void T440f1967(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].force */
extern void T896f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].force */
extern void T1484f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].fill_with */
extern void T1483f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].extend */
extern void T1483f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].resize */
extern void T896f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].aliased_resized_area */
extern T0* T1484f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].aliased_resized_area */
extern T0* T1483f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].new_capacity */
extern T6 T896f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].extendible */
extern T1 T896f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].is_empty */
extern T1 T896f6(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].force */
extern void T895f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].force */
extern void T1482f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].fill_with */
extern void T1481f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].extend */
extern void T1481f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].resize */
extern void T895f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1482f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1481f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].new_capacity */
extern T6 T895f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].extendible */
extern T1 T895f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].is_empty */
extern T1 T895f6(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T892f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T1134f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].fill_with */
extern void T1135f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].extend */
extern void T1135f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].resize */
extern void T892f13(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T1134f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T1135f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].new_capacity */
extern T6 T892f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].extendible */
extern T1 T892f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].is_empty */
extern T1 T892f5(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T891f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T1087f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].fill_with */
extern void T1088f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].extend */
extern void T1088f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].resize */
extern void T891f13(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1087f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1088f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].new_capacity */
extern T6 T891f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].extendible */
extern T1 T891f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].is_empty */
extern T1 T891f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_862 */
extern void T440f1877(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_861 */
extern void T440f1876(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].force */
extern void T725f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].fill_with */
extern void T727f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].extend */
extern void T727f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].aliased_resized_area */
extern T0* T725f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_AGENT].aliased_resized_area */
extern T0* T727f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.register_inline_agent */
extern void T440f1973(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_end_closure */
extern void T440f1975(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].remove */
extern void T896f13(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].keep_head */
extern void T1483f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].set_count */
extern void T1483f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].item */
extern T0* T896f7(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].remove */
extern void T895f13(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].keep_head */
extern void T1481f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].set_count */
extern void T1481f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].item */
extern T0* T895f7(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].remove */
extern void T892f12(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].keep_head */
extern void T1135f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].set_count */
extern void T1135f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].item */
extern T0* T892f6(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].remove */
extern void T891f12(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].keep_head */
extern void T1088f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].set_count */
extern void T1088f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].item */
extern T0* T891f6(GE_context* ac, T0* C);
/* ET_ACROSS_COMPONENT_LIST.cloned_across_component_list */
extern T0* T1198f4(GE_context* ac, T0* C);
/* ET_ACROSS_COMPONENT_LIST.put_last */
extern void T1198f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT].force */
extern void T756f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ACROSS_COMPONENT].fill_with */
extern void T755f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACROSS_COMPONENT].extend */
extern void T755f10(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_COMPONENT_LIST.fixed_array */
extern unsigned char ge632os7546;
extern T0* ge632ov7546;
extern T0* T1198f6(GE_context* ac, T0* C);
/* ET_ACROSS_COMPONENT_LIST.make_with_capacity */
extern T0* T1198c9(GE_context* ac, T6 a1);
/* ET_OBJECT_TEST_LIST.cloned_object_test_list */
extern T0* T1197f3(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_LIST.put_last */
extern void T1197f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].force */
extern void T750f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NAMED_OBJECT_TEST].fill_with */
extern void T749f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NAMED_OBJECT_TEST].extend */
extern void T749f10(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.fixed_array */
extern unsigned char ge684os7546;
extern T0* ge684ov7546;
extern T0* T1197f5(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_LIST.make_with_capacity */
extern T0* T1197c9(GE_context* ac, T6 a1);
/* ET_AST_FACTORY.new_external_procedure_inline_agent */
extern T0* T403f319(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1279f43(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_alias_clause */
extern void T1279f42(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1279f41(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1279f40(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make */
extern T0* T1279c34(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_procedure */
extern void T1279f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1279f45(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.make */
extern T0* T1598c5(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.agent_keyword */
extern unsigned char ge808os11700;
extern T0* ge808ov11700;
extern T0* T81f759(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.make */
extern T0* T904c13(GE_context* ac);
/* ET_AGENT_KEYWORD.make_token */
extern void T904f15(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_KEYWORD.make_leaf */
extern void T904f16(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.tokens */
extern T0* T904f7(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1279f15(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_external_language */
extern T0* T403f177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_860 */
extern void T440f1875(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_859 */
extern void T440f1874(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_procedure_inline_agent */
extern T0* T403f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T1278f48(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1278f47(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_compound */
extern void T1278f46(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_keys */
extern void T1278f45(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_locals */
extern void T1278f44(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1278f43(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1278f42(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make */
extern T0* T1278c36(GE_context* ac, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1278f49(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1278f16(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_compound */
extern T0* T403f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_COMPOUND.set_keyword */
extern void T332f10(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.once_keyword */
extern unsigned char ge808os11742;
extern T0* ge808ov11742;
extern T0* T81f626(GE_context* ac, T0* C);
/* ET_KEYWORD.make_once */
extern T0* T397c46(GE_context* ac);
/* ET_AST_FACTORY.tokens */
extern T0* T403f356(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_858 */
extern void T440f1873(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_857 */
extern void T440f1872(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_procedure_inline_agent */
extern T0* T403f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T1277f46(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1277f45(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_compound */
extern void T1277f44(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_locals */
extern void T1277f43(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1277f42(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1277f41(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.make */
extern T0* T1277c35(GE_context* ac, T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1277f47(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1277f16(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_856 */
extern void T440f1871(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_855 */
extern void T440f1870(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_external_function_inline_agent */
extern T0* T403f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1276f44(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_alias_clause */
extern void T1276f43(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1276f42(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1276f41(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make */
extern T0* T1276c35(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_function */
extern void T1276f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1276f46(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1276f16(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_colon_type */
extern T0* T403f168(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_854 */
extern void T440f1869(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_853 */
extern void T440f1868(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_function_inline_agent */
extern T0* T403f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T1275f49(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1275f48(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_compound */
extern void T1275f47(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_keys */
extern void T1275f46(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_locals */
extern void T1275f45(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1275f44(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1275f43(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make */
extern T0* T1275c37(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1275f50(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1275f17(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_852 */
extern void T440f1867(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_851 */
extern void T440f1866(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_function_inline_agent */
extern T0* T403f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_DO_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T1274f47(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1274f46(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_compound */
extern void T1274f45(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_locals */
extern void T1274f44(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1274f43(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1274f42(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.make */
extern T0* T1274c36(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1274f48(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1274f17(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_850 */
extern void T440f1865(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_849 */
extern void T440f1864(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_inline_agent_actual_arguments */
extern void T440f1972(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_848 */
extern void T440f1863(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].force */
extern void T991f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CALL_AGENT].fill_with */
extern void T993f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CALL_AGENT].extend */
extern void T993f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T991f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T993f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_call_agent */
extern T0* T403f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_agent_keyword */
extern void T992f32(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.make */
extern T0* T992c31(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.tokens */
extern T0* T992f9(GE_context* ac, T0* C);
/* ET_CALL_AGENT.make_unqualified */
extern T0* T992c28(GE_context* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_dot_feature_name */
extern T0* T403f245(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_847 */
extern void T440f1862(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_846 */
extern void T440f1861(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].force */
extern void T960f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].fill_with */
extern void T962f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].extend */
extern void T962f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T960f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T962f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_across_expression_header */
extern T0* T440f913(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_COMPONENT_LIST.force_last */
extern void T1198f11(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_COMPONENT_LIST.resize */
extern void T1198f13(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT].aliased_resized_area */
extern T0* T756f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACROSS_COMPONENT].aliased_resized_area */
extern T0* T755f4(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_COMPONENT_LIST.new_capacity */
extern T6 T1198f8(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_COMPONENT_LIST.capacity */
extern T6 T1198f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_component_list */
extern T0* T440f930(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_across_all_expression */
extern T0* T403f355(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_ACROSS_EXPRESSION.set_variant_part */
extern void T961f38(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_invariant_part */
extern void T961f37(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.make_all */
extern T0* T961c31(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_EXPRESSION.create_unfolded_form */
extern void T961f41(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.across_keyword */
extern unsigned char ge808os11699;
extern T0* ge808ov11699;
extern T0* T81f758(GE_context* ac, T0* C);
/* ET_KEYWORD.make_across */
extern T0* T397c52(GE_context* ac);
/* ET_ACROSS_EXPRESSION.tokens */
extern T0* T961f16(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.true_keyword */
extern unsigned char ge808os11758;
extern T0* ge808ov11758;
extern T0* T81f245(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.make */
extern T0* T1210c33(GE_context* ac);
/* ET_TRUE_CONSTANT.make_token */
extern void T1210f37(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.make_leaf */
extern void T1210f38(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.tokens */
extern T0* T1210f11(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.tokens */
extern T0* T440f661(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_845 */
extern void T440f1860(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_all_expression */
extern T0* T440f912(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACROSS_EXPRESSION.set_end_keyword */
extern void T961f39(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_all */
extern void T961f40(GE_context* ac, T0* C, T1 a1);
/* ET_ACROSS_EXPRESSION.set_iteration_conditional */
extern void T961f35(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_until_conditional */
extern void T961f34(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_conditional */
extern T0* T403f260(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_KEYWORD_EXPRESSION.make */
extern T0* T1567c3(GE_context* ac, T0* a1, T0* a2);
/* ET_KEYWORD.is_inspect */
extern T1 T397f25(GE_context* ac, T0* C);
/* ET_KEYWORD.is_if */
extern T1 T397f24(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_844 */
extern void T440f1859(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_some_expression */
extern T0* T440f911(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACROSS_EXPRESSION.set_some */
extern void T961f36(GE_context* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_843 */
extern void T440f1858(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_842 */
extern void T440f1857(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_841 */
extern void T440f1856(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_840 */
extern void T440f1855(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_839 */
extern void T440f1854(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_838 */
extern void T440f1853(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_837 */
extern void T440f1852(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].force */
extern void T1175f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].fill_with */
extern void T1177f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].extend */
extern void T1177f10(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.put_first */
extern void T1176f29(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].force */
extern void T1079f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].fill_with */
extern void T1081f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].extend */
extern void T1081f10(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.fixed_array */
extern unsigned char ge829os12622;
extern T0* ge829ov12622;
extern T0* T1176f13(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].default_create */
extern T0* T1079c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_836 */
extern void T440f1851(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T1175f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T1177f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_strip_expression */
extern T0* T403f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_STRIP_EXPRESSION.set_strip_keyword */
extern void T1176f30(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern T0* T1176c26(GE_context* ac, T6 a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern void T1176f26p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].make */
extern T0* T1079f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].make_empty */
extern T0* T1081c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.strip_keyword */
extern unsigned char ge808os11756;
extern T0* ge808ov11756;
extern T0* T81f761(GE_context* ac, T0* C);
/* ET_KEYWORD.make_strip */
extern T0* T397c51(GE_context* ac);
/* ET_STRIP_EXPRESSION.tokens */
extern T0* T1176f11(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_keyword */
extern T0* T440f866(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].item */
extern T0* T893f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_835 */
extern void T440f1850(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_834 */
extern void T440f1849(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_keyword */
extern void T440f1954(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].force */
extern void T893f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].force */
extern void T901f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD].fill_with */
extern void T902f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD].extend */
extern void T902f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].resize */
extern void T893f12(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T901f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T902f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].new_capacity */
extern T6 T893f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].extendible */
extern T1 T893f6(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_833 */
extern void T440f1848(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_keyword */
extern void T440f1952(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].remove */
extern void T893f10(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_KEYWORD].keep_head */
extern void T902f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD].set_count */
extern void T902f9(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_832 */
extern void T440f1847(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_831 */
extern void T440f1846(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].force */
extern void T1148f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].fill_with */
extern void T1149f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].extend */
extern void T1149f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_830 */
extern void T440f1845(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T1148f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T1149f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_tuple */
extern T0* T403f311(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_TUPLE.set_left_symbol */
extern void T294f32(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_829 */
extern void T440f1844(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_828 */
extern void T440f1843(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_827 */
extern void T440f1842(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_826 */
extern void T440f1841(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_825 */
extern void T440f1840(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].force */
extern void T1139f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].fill_with */
extern void T1141f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].extend */
extern void T1141f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.put_first */
extern void T1140f28(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.fixed_array */
extern T0* T1140f12(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_824 */
extern void T440f1839(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T1139f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T1141f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_array */
extern T0* T403f310(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_ARRAY.set_left_symbol */
extern void T1140f29(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern T0* T1140c25(GE_context* ac, T6 a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern void T1140f25p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_array_symbol */
extern unsigned char ge808os11692;
extern T0* ge808ov11692;
extern T0* T81f586(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_array */
extern T0* T346c89(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_array_symbol */
extern unsigned char ge808os11687;
extern T0* ge808ov11687;
extern T0* T81f760(GE_context* ac, T0* C);
/* ET_SYMBOL.make_left_array */
extern T0* T346c83(GE_context* ac);
/* ET_MANIFEST_ARRAY.tokens */
extern T0* T1140f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_823 */
extern void T440f1838(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_822 */
extern void T440f1837(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_821 */
extern void T440f1836(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_820 */
extern void T440f1835(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_819 */
extern void T440f1834(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].force */
extern void T1153f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].fill_with */
extern void T1155f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].extend */
extern void T1155f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T1153f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T1155f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parenthesized_expression */
extern T0* T403f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.set_left_parenthesis */
extern void T1154f23(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.make */
extern T0* T1154c20(GE_context* ac, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.tokens */
extern T0* T1154f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_818 */
extern void T440f1833(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_ARGUMENT_LIST].force */
extern void T985f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_ARGUMENT_LIST].fill_with */
extern void T987f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_ARGUMENT_LIST].extend */
extern void T987f10(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_ARGUMENT_LIST.put_first */
extern void T986f12(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_ARGUMENT_LIST.fixed_array */
extern T0* T986f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_817 */
extern void T440f1832(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_ARGUMENT_LIST].aliased_resized_area */
extern T0* T985f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BRACKET_ARGUMENT_LIST].aliased_resized_area */
extern T0* T987f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_bracket_arguments */
extern T0* T403f308(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern T0* T986c11(GE_context* ac, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.tokens */
extern T0* T986f5(GE_context* ac, T0* C);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern void T986f11p1(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern void T986f11p0(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_816 */
extern void T440f1831(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_815 */
extern void T440f1830(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].force */
extern void T988f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].fill_with */
extern void T990f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].extend */
extern void T990f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T988f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T990f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_814 */
extern void T440f1829(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_bracket_expression */
extern T0* T403f307(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.make */
extern T0* T989c23(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_813 */
extern void T440f1828(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_812 */
extern void T440f1827(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_811 */
extern void T440f1826(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_810 */
extern void T440f1825(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_809 */
extern void T440f1824(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_808 */
extern void T440f1823(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_807 */
extern void T440f1822(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_806 */
extern void T440f1821(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_805 */
extern void T440f1820(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_804 */
extern void T440f1819(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_803 */
extern void T440f1818(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_802 */
extern void T440f1817(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_once_manifest_string */
extern T0* T440f910(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_once_manifest_string */
extern T0* T403f354(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.set_once_keyword */
extern void T1273f26(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.make */
extern T0* T1273c22(GE_context* ac, T0* a1);
/* ET_ONCE_MANIFEST_STRING.tokens */
extern T0* T1273f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_801 */
extern void T440f1816(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601_800 */
extern void T440f998(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_800 */
extern void T440f1815(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_799 */
extern void T440f1814(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_798 */
extern void T440f1813(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_797 */
extern void T440f1812(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_796 */
extern void T440f1811(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_795 */
extern void T440f1810(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_794 */
extern void T440f1809(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_793 */
extern void T440f1808(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_792 */
extern void T440f1807(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_791 */
extern void T440f1806(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_790 */
extern void T440f1805(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_789 */
extern void T440f1804(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_named_object_test */
extern T0* T440f909(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_OBJECT_TEST_LIST.force_last */
extern void T1197f11(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.resize */
extern void T1197f13(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T750f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T749f4(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.new_capacity */
extern T6 T1197f7(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.capacity */
extern T6 T1197f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_object_test_list */
extern T0* T440f931(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_named_object_test */
extern T0* T403f353(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NAMED_OBJECT_TEST.set_attached_keyword */
extern void T748f27(GE_context* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.make */
extern T0* T748c24(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NAMED_OBJECT_TEST.make_object_test */
extern void T748f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NAMED_OBJECT_TEST.tokens */
extern T0* T748f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_788 */
extern void T440f1803(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_787 */
extern void T440f1802(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_object_test */
extern T0* T403f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST.set_attached_keyword */
extern void T320f25(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST.make */
extern T0* T320c22(GE_context* ac, T0* a1, T0* a2);
/* ET_OBJECT_TEST.tokens */
extern T0* T320f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_786 */
extern void T440f1801(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_785 */
extern void T440f1800(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_old_object_test */
extern T0* T440f908(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_AST_FACTORY.new_old_object_test */
extern T0* T403f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_OLD_OBJECT_TEST.set_left_brace */
extern void T1272f30(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_OBJECT_TEST.make */
extern T0* T1272c27(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.colon_symbol */
extern unsigned char ge808os11682;
extern T0* ge808ov11682;
extern T0* T81f583(GE_context* ac, T0* C);
/* ET_SYMBOL.make_colon */
extern T0* T346c86(GE_context* ac);
/* ET_OLD_OBJECT_TEST.tokens */
extern T0* T1272f12(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.raise_error */
extern void T440f1948(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_6_1_0 */
extern unsigned char ge191os1999;
extern T0* ge191ov1999;
extern T0* T440f896(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_784 */
extern void T440f1799(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_old_expression */
extern T0* T403f305(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.set_old_keyword */
extern void T1271f22(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.make */
extern T0* T1271c19(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.old_keyword */
extern unsigned char ge808os11741;
extern T0* ge808ov11741;
extern T0* T81f770(GE_context* ac, T0* C);
/* ET_KEYWORD.make_old */
extern T0* T397c49(GE_context* ac);
/* ET_OLD_EXPRESSION.tokens */
extern T0* T1271f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_783 */
extern void T440f1798(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_expression */
extern T0* T403f303(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.make */
extern T0* T1270c24(GE_context* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_operator */
extern T0* T403f304(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_prefix */
extern void T928f50(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.tokens */
extern T0* T928f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_782 */
extern void T440f1797(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_781 */
extern void T440f1796(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_prefix_minus_expression */
extern T0* T440f907(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T440f907ot1(T0* a1, T0** a2);
extern T1 T440f907ot2(T0* a1, T0** a2);
/* ET_AST_FACTORY.new_prefix_minus_operator */
extern T0* T403f351(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_minus */
extern void T947f73(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.tokens */
extern T0* T947f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_780 */
extern void T440f1795(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_prefix_plus_expression */
extern T0* T440f906(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T440f906ot1(T0* a1, T0** a2);
extern T1 T440f906ot2(T0* a1, T0** a2);
/* ET_AST_FACTORY.new_prefix_plus_operator */
extern T0* T403f350(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_plus */
extern void T947f72(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_779 */
extern void T440f1794(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_778 */
extern void T440f1793(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_777 */
extern void T440f1792(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_776 */
extern void T440f1791(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_775 */
extern void T440f1790(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_774 */
extern void T440f1789(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_773 */
extern void T440f1788(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_772 */
extern void T440f1787(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_771 */
extern void T440f1786(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_manifest_type */
extern T0* T403f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.make */
extern T0* T1269c20(GE_context* ac, T0* a1);
/* ET_MANIFEST_TYPE.tokens */
extern T0* T1269f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_770 */
extern void T440f1785(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_769 */
extern void T440f1784(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_768 */
extern void T440f1783(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_767 */
extern void T440f1782(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_766 */
extern void T440f1781(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_765 */
extern void T440f1780(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_object_equality_expression */
extern T0* T403f301(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T321c21(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_764 */
extern void T440f1779(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_763 */
extern void T440f1778(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_equality_expression */
extern T0* T403f300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.make */
extern T0* T322c19(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_762 */
extern void T440f1777(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_761 */
extern void T440f1776(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_expression */
extern T0* T403f295(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.make */
extern T0* T1266c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_760 */
extern void T440f1775(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_else_operator */
extern T0* T403f299(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_OR_ELSE_OPERATOR.set_or_keyword */
extern void T1268f33(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.make */
extern T0* T1268c32(GE_context* ac);
/* ET_TOKEN_CONSTANTS.else_keyword */
extern unsigned char ge808os11719;
extern T0* ge808ov11719;
extern T0* T81f595(GE_context* ac, T0* C);
/* ET_KEYWORD.make_else */
extern T0* T397c64(GE_context* ac);
/* ET_TOKEN_CONSTANTS.or_keyword */
extern unsigned char ge808os11743;
extern T0* ge808ov11743;
extern T0* T81f769(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.make_or */
extern T0* T934c47(GE_context* ac);
/* ET_KEYWORD_OPERATOR.make_token */
extern void T934f53(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_leaf */
extern void T934f54(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.tokens */
extern T0* T934f7(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.tokens */
extern T0* T1268f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_759 */
extern void T440f1774(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_then_operator */
extern T0* T403f298(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_AND_THEN_OPERATOR.set_and_keyword */
extern void T1267f33(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.make */
extern T0* T1267c32(GE_context* ac);
/* ET_TOKEN_CONSTANTS.then_keyword */
extern unsigned char ge808os11757;
extern T0* ge808ov11757;
extern T0* T81f599(GE_context* ac, T0* C);
/* ET_KEYWORD.make_then */
extern T0* T397c68(GE_context* ac);
/* ET_TOKEN_CONSTANTS.and_keyword */
extern unsigned char ge808os11701;
extern T0* ge808ov11701;
extern T0* T81f768(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.make_and */
extern T0* T934c49(GE_context* ac);
/* ET_INFIX_AND_THEN_OPERATOR.tokens */
extern T0* T1267f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_758 */
extern void T440f1773(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_757 */
extern void T440f1772(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_756 */
extern void T440f1771(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_755 */
extern void T440f1770(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_754 */
extern void T440f1769(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_753 */
extern void T440f1768(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_752 */
extern void T440f1767(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_751 */
extern void T440f1766(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_750 */
extern void T440f1765(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_749 */
extern void T440f1764(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_748 */
extern void T440f1763(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_747 */
extern void T440f1762(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_746 */
extern void T440f1761(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_minus_operator */
extern T0* T403f297(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_minus */
extern void T947f71(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_745 */
extern void T440f1760(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_plus_operator */
extern T0* T403f296(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_plus */
extern void T947f70(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_744 */
extern void T440f1759(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_free_operator */
extern T0* T403f294(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_infix */
extern void T928f49(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_743 */
extern void T440f1758(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_742 */
extern void T440f1757(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_741 */
extern void T440f1756(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].force */
extern void T1193f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WRITABLE].fill_with */
extern void T1194f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WRITABLE].extend */
extern void T1194f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T1193f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T1194f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_740 */
extern void T440f1755(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_writable */
extern T0* T440f905(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_739 */
extern void T440f1754(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_expression_address */
extern T0* T403f293(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.set_dollar */
extern void T1265f22(GE_context* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.make */
extern T0* T1265c19(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.dollar_symbol */
extern unsigned char ge808os11684;
extern T0* ge808ov11684;
extern T0* T81f767(GE_context* ac, T0* C);
/* ET_SYMBOL.make_dollar */
extern T0* T346c79(GE_context* ac);
/* ET_EXPRESSION_ADDRESS.tokens */
extern T0* T1265f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_738 */
extern void T440f1753(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_result_address */
extern T0* T403f292(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.set_dollar */
extern void T1264f22(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT_ADDRESS.make */
extern T0* T1264c19(GE_context* ac);
/* ET_RESULT_ADDRESS.tokens */
extern T0* T1264f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_737 */
extern void T440f1752(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_current_address */
extern T0* T403f291(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.set_dollar */
extern void T1263f22(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.make */
extern T0* T1263c19(GE_context* ac);
/* ET_CURRENT_ADDRESS.tokens */
extern T0* T1263f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_736 */
extern void T440f1751(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_feature_address */
extern T0* T440f904(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T440f904ot1(T0* a1, T0** a2);
/* ET_AST_FACTORY.new_feature_address */
extern T0* T403f349(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.set_dollar */
extern void T1262f22(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.make */
extern T0* T1262c19(GE_context* ac, T0* a1);
/* ET_FEATURE_ADDRESS.tokens */
extern T0* T1262f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_735 */
extern void T440f1750(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_expression_comma */
extern T0* T403f290(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_734 */
extern void T440f1749(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].force */
extern void T966f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].fill_with */
extern void T967f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].extend */
extern void T967f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_733 */
extern void T440f1748(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T966f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T967f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_actual_arguments */
extern T0* T403f289(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_732 */
extern void T440f1747(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_731 */
extern void T440f1746(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_730 */
extern void T440f1745(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_729 */
extern void T440f1744(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_728 */
extern void T440f1743(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_727 */
extern void T440f1742(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_call_expression */
extern T0* T403f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_726 */
extern void T440f1741(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_5_7_59914 */
extern unsigned char ge191os1991;
extern T0* ge191ov1991;
extern T0* T440f880(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_725 */
extern void T440f1740(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_724 */
extern void T440f1739(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_723 */
extern void T440f1738(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_722 */
extern void T440f1737(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_721 */
extern void T440f1736(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_720 */
extern void T440f1735(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_719 */
extern void T440f1734(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_718 */
extern void T440f1733(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_expression */
extern T0* T440f903(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_unqualified_call_expression */
extern T0* T403f348(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_717 */
extern void T440f1732(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_expression */
extern T0* T403f288(GE_context* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_precursor_keyword */
extern void T1261f27(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_parent_prefixed */
extern void T1261f26(GE_context* ac, T0* C, T1 a1);
/* ET_PRECURSOR_EXPRESSION.make */
extern T0* T1261c23(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.precursor_keyword */
extern unsigned char ge808os11744;
extern T0* ge808ov11744;
extern T0* T81f766(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.make */
extern T0* T907c18(GE_context* ac);
/* ET_PRECURSOR_KEYWORD.make_token */
extern void T907f20(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.make_leaf */
extern void T907f21(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.tokens */
extern T0* T907f7(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.tokens */
extern T0* T1261f9(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_class_name */
extern T0* T403f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_716 */
extern void T440f1731(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_715 */
extern void T440f1730(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].force */
extern void T1172f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].fill_with */
extern void T1174f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].extend */
extern void T1174f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1172f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1174f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_static_call_expression */
extern T0* T403f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_EXPRESSION.set_feature_keyword */
extern void T1173f30(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.make */
extern T0* T1173c27(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make_qualified_call */
extern void T1173f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_714 */
extern void T440f1729(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_713 */
extern void T440f1728(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_712 */
extern void T440f1727(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_711 */
extern void T440f1726(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_710 */
extern void T440f1725(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_709 */
extern void T440f1724(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_708 */
extern void T440f1723(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].force */
extern void T1118f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INSTRUCTION].fill_with */
extern void T1120f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INSTRUCTION].extend */
extern void T1120f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T1118f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T1120f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_static_call_instruction */
extern T0* T403f285(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.set_feature_keyword */
extern void T1260f9(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.make */
extern T0* T1260c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_INSTRUCTION.make_qualified_call */
extern void T1260f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_707 */
extern void T440f1722(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_706 */
extern void T440f1721(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_instruction */
extern T0* T403f283(GE_context* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_precursor_keyword */
extern void T1258f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_prefixed */
extern void T1258f10(GE_context* ac, T0* C, T1 a1);
/* ET_PRECURSOR_INSTRUCTION.make */
extern T0* T1258c9(GE_context* ac, T0* a1, T0* a2);
/* ET_PRECURSOR_INSTRUCTION.tokens */
extern T0* T1258f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_705 */
extern void T440f1720(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_704 */
extern void T440f1719(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_call_instruction */
extern T0* T403f282(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_703 */
extern void T440f1718(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_702 */
extern void T440f1717(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_instruction */
extern T0* T440f902(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_instruction */
extern void T182f121(GE_context* ac, T0* C, T1 a1);
/* ET_AST_FACTORY.new_unqualified_call_instruction */
extern T0* T403f347(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.make */
extern T0* T1428c6(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_701 */
extern void T440f1716(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].force */
extern void T1142f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].fill_with */
extern void T1144f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].extend */
extern void T1144f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T1142f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T1144f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_string_comma */
extern T0* T403f281(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_700 */
extern void T440f1715(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].force */
extern void T1145f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].fill_with */
extern void T1147f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].extend */
extern void T1147f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.put_first */
extern void T1146f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.fixed_array */
extern unsigned char ge610os12622;
extern T0* ge610ov12622;
extern T0* T1146f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T1142c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_699 */
extern void T440f1714(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T1145f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T1147f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_string_list */
extern T0* T403f280(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern T0* T1146c9(GE_context* ac, T6 a1);
/* ET_MANIFEST_STRING_LIST.tokens */
extern T0* T1146f5(GE_context* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern void T1146f9p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].make */
extern T0* T1142f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].make_empty */
extern T0* T1144c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_698 */
extern void T440f1713(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_697 */
extern void T440f1712(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_696 */
extern void T440f1711(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_695 */
extern void T440f1710(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_694 */
extern void T440f1709(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].force */
extern void T1049f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].fill_with */
extern void T1051f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].extend */
extern void T1051f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T1049f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T1051f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_debug_instruction */
extern T0* T403f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEBUG_INSTRUCTION.make */
extern T0* T1050c5(GE_context* ac, T0* a1, T0* a2);
/* ET_DEBUG_INSTRUCTION.tokens */
extern T0* T1050f4(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_debug_compound */
extern T0* T403f278(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.debug_keyword */
extern unsigned char ge808os11715;
extern T0* ge808ov11715;
extern T0* T81f603(GE_context* ac, T0* C);
/* ET_KEYWORD.make_debug */
extern T0* T397c72(GE_context* ac);
/* ET_COMPOUND.make */
extern T0* T332c9(GE_context* ac);
/* ET_COMPOUND.make */
extern void T332f9p1(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].make */
extern T0* T1118f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].make_empty */
extern T0* T1120c5(GE_context* ac, T6 a1);
/* ET_COMPOUND.fixed_array */
extern unsigned char ge750os12622;
extern T0* ge750ov12622;
extern T0* T332f7(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].default_create */
extern T0* T1118c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.do_keyword */
extern unsigned char ge808os11718;
extern T0* ge808ov11718;
extern T0* T81f592(GE_context* ac, T0* C);
/* ET_KEYWORD.make_do */
extern T0* T397c61(GE_context* ac);
/* ET_COMPOUND.tokens */
extern T0* T332f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_693 */
extern void T440f1708(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].force */
extern void T1018f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONDITIONAL].fill_with */
extern void T1020f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONDITIONAL].extend */
extern void T1020f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T1018f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T1020f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_692 */
extern void T440f1707(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_691 */
extern void T440f1706(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].force */
extern void T963f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].fill_with */
extern void T965f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].extend */
extern void T965f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T963f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T965f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_across_instruction_header */
extern T0* T440f901(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_FACTORY.new_across_instruction */
extern T0* T403f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ACROSS_INSTRUCTION.set_variant_part */
extern void T964f21(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_invariant_part */
extern void T964f20(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.make */
extern T0* T964c16(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACROSS_INSTRUCTION.create_unfolded_form */
extern void T964f23(GE_context* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.tokens */
extern T0* T964f14(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_690 */
extern void T440f1705(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].force */
extern void T1000f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].fill_with */
extern void T1002f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].extend */
extern void T1002f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T1000f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T1002f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_689 */
extern void T440f1704(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_choice_attribute_constant */
extern T0* T440f900(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_688 */
extern void T440f1703(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_687 */
extern void T440f1702(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_686 */
extern void T440f1701(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].force */
extern void T997f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE].fill_with */
extern void T999f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE].extend */
extern void T999f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].aliased_resized_area */
extern T0* T997f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE].aliased_resized_area */
extern T0* T999f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_range */
extern T0* T403f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CHOICE_RANGE.make */
extern T0* T1257c7(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.dotdot_symbol */
extern unsigned char ge808os11686;
extern T0* ge808ov11686;
extern T0* T81f588(GE_context* ac, T0* C);
/* ET_SYMBOL.make_dotdot */
extern T0* T346c91(GE_context* ac);
/* ET_CHOICE_RANGE.tokens */
extern T0* T1257f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_685 */
extern void T440f1700(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_684 */
extern void T440f1699(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].force */
extern void T1003f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_ITEM].fill_with */
extern void T1005f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_ITEM].extend */
extern void T1005f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T1003f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T1005f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_comma */
extern T0* T403f276(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_683 */
extern void T440f1698(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].force */
extern void T1006f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_LIST].fill_with */
extern void T1008f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_LIST].extend */
extern void T1008f10(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.put_first */
extern void T1007f9(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.fixed_array */
extern unsigned char ge748os12622;
extern T0* ge748ov12622;
extern T0* T1007f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].default_create */
extern T0* T1003c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_682 */
extern void T440f1697(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T1006f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T1008f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_list */
extern T0* T403f275(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_CHOICE_LIST.set_when_keyword */
extern void T1007f10(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern T0* T1007c8(GE_context* ac, T6 a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern void T1007f8p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].make */
extern T0* T1003f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].make_empty */
extern T0* T1005c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.when_keyword */
extern unsigned char ge808os11765;
extern T0* ge808ov11765;
extern T0* T81f600(GE_context* ac, T0* C);
/* ET_KEYWORD.make_when */
extern T0* T397c69(GE_context* ac);
/* ET_CHOICE_LIST.tokens */
extern T0* T1007f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_681 */
extern void T440f1696(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_680 */
extern void T440f1695(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_679 */
extern void T440f1694(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_678 */
extern void T440f1693(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_677 */
extern void T440f1692(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].force */
extern void T1187f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART].fill_with */
extern void T1189f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART].extend */
extern void T1189f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T1187f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T1189f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_part */
extern T0* T403f274(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_WHEN_PART.make */
extern T0* T1188c3(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_676 */
extern void T440f1691(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].force */
extern void T1190f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART_LIST].fill_with */
extern void T1192f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART_LIST].extend */
extern void T1192f10(GE_context* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.put_first */
extern void T1191f6(GE_context* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.fixed_array */
extern unsigned char ge780os12622;
extern T0* ge780ov12622;
extern T0* T1191f3(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].default_create */
extern T0* T1187c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_675 */
extern void T440f1690(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T1190f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T1192f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_part_list */
extern T0* T403f273(GE_context* ac, T0* C, T6 a1);
/* ET_WHEN_PART_LIST.make_with_capacity */
extern T0* T1191c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].make */
extern T0* T1187f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].make_empty */
extern T0* T1189c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_674 */
extern void T440f1689(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_673 */
extern void T440f1688(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_672 */
extern void T440f1687(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].force */
extern void T1115f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].fill_with */
extern void T1117f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].extend */
extern void T1117f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T1115f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T1117f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inspect_instruction */
extern T0* T403f272(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_INSTRUCTION.set_else_compound */
extern void T1116f8(GE_context* ac, T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.make */
extern T0* T1116c7(GE_context* ac, T0* a1, T0* a2);
/* ET_INSPECT_INSTRUCTION.tokens */
extern T0* T1116f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_671 */
extern void T440f1686(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_670 */
extern void T440f1685(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].force */
extern void T1052f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART].fill_with */
extern void T1054f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART].extend */
extern void T1054f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T1052f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T1054f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_part */
extern T0* T403f271(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ELSEIF_PART.make */
extern T0* T1053c4(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_669 */
extern void T440f1684(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].force */
extern void T1055f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].fill_with */
extern void T1057f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].extend */
extern void T1057f10(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.put_first */
extern void T1056f6(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.fixed_array */
extern unsigned char ge755os12622;
extern T0* ge755ov12622;
extern T0* T1056f3(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].default_create */
extern T0* T1052c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_668 */
extern void T440f1683(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T1055f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T1057f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_part_list */
extern T0* T403f270(GE_context* ac, T0* C, T6 a1);
/* ET_ELSEIF_PART_LIST.make_with_capacity */
extern T0* T1056c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].make */
extern T0* T1052f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].make_empty */
extern T0* T1054c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_667 */
extern void T440f1682(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_666 */
extern void T440f1681(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].force */
extern void T1097f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_IF_INSTRUCTION].fill_with */
extern void T1099f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_IF_INSTRUCTION].extend */
extern void T1099f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T1097f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T1099f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_if_instruction */
extern T0* T403f269(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_IF_INSTRUCTION.set_else_compound */
extern void T1098f10(GE_context* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.set_elseif_parts */
extern void T1098f9(GE_context* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.make */
extern T0* T1098c8(GE_context* ac, T0* a1, T0* a2);
/* ET_IF_INSTRUCTION.tokens */
extern T0* T1098f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_665 */
extern void T440f1680(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_664 */
extern void T440f1679(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_663 */
extern void T440f1678(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_662 */
extern void T440f1677(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].force */
extern void T1042f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].fill_with */
extern void T1043f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].extend */
extern void T1043f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T1042f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T1043f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_create_expression */
extern T0* T403f268(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.set_create_keyword */
extern void T326f28(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_qualified_call */
extern T0* T403f265(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_661 */
extern void T440f1676(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_660 */
extern void T440f1675(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_create_instruction */
extern T0* T403f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.set_create_keyword */
extern void T1256f12(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.make */
extern T0* T1256c11(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_INSTRUCTION.tokens */
extern T0* T1256f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_659 */
extern void T440f1674(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_658 */
extern void T440f1673(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_657 */
extern void T440f1672(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_656 */
extern void T440f1671(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_bang_instruction */
extern T0* T403f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BANG_INSTRUCTION.set_left_bang */
extern void T1255f12(GE_context* ac, T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.make */
extern T0* T1255c11(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.bang_symbol */
extern unsigned char ge808os11681;
extern T0* ge808ov11681;
extern T0* T81f765(GE_context* ac, T0* C);
/* ET_SYMBOL.make_bang */
extern T0* T346c78(GE_context* ac);
/* ET_BANG_INSTRUCTION.tokens */
extern T0* T1255f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_655 */
extern void T440f1670(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_654 */
extern void T440f1669(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_653 */
extern void T440f1668(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_652 */
extern void T440f1667(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.start_check_instruction */
extern void T440f1971(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_651 */
extern void T440f1666(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].force */
extern void T994f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].fill_with */
extern void T996f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].extend */
extern void T996f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T994f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T996f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_check_instruction */
extern T0* T440f899(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].remove_last */
extern void T897f15(GE_context* ac, T0* C);
/* SPECIAL [ET_ASSERTION_ITEM].keep_head */
extern void T1485f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].set_count */
extern void T1485f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_last_cursors_after */
extern void T897f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_next_cursor */
extern void T1487f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_after */
extern void T1487f6(GE_context* ac, T0* C);
/* ET_CHECK_INSTRUCTION.put_first */
extern void T995f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].force */
extern void T1486f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].fill_with */
extern void T1485f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].extend */
extern void T1485f10(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.fixed_array */
extern unsigned char ge490os12622;
extern T0* ge490ov12622;
extern T0* T995f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].default_create */
extern T0* T1486c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].item */
extern T0* T897f7(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_check_instruction */
extern T0* T403f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_CHECK_INSTRUCTION.set_check_keyword */
extern void T995f13(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.set_then_compound */
extern void T995f12(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern T0* T995c10(GE_context* ac, T6 a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern void T995f10p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].make */
extern T0* T1486f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].make_empty */
extern T0* T1485c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.check_keyword */
extern unsigned char ge808os11709;
extern T0* ge808ov11709;
extern T0* T81f602(GE_context* ac, T0* C);
/* ET_KEYWORD.make_check */
extern T0* T397c71(GE_context* ac);
/* ET_CHECK_INSTRUCTION.tokens */
extern T0* T995f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].remove_last */
extern void T272f27(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].move_last_cursors_after */
extern void T272f28(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].last */
extern T6 T272f14(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_650 */
extern void T440f1665(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_649 */
extern void T440f1664(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_648 */
extern void T440f1663(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_647 */
extern void T440f1662(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_null_instruction */
extern T0* T403f263(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_646 */
extern void T440f1661(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_645 */
extern void T440f1660(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_644 */
extern void T440f1659(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_643 */
extern void T440f1658(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_instruction */
extern T0* T440f898(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ACROSS_INSTRUCTION.set_end_keyword */
extern void T964f22(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_loop_compound */
extern void T964f19(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_until_conditional */
extern void T964f18(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_from_compound */
extern void T964f17(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_642 */
extern void T440f1657(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_instruction */
extern T0* T403f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LOOP_INSTRUCTION.set_has_old_variant_syntax */
extern void T1253f13(GE_context* ac, T0* C, T1 a1);
/* ET_LOOP_INSTRUCTION.set_variant_part */
extern void T1253f12(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.set_invariant_part */
extern void T1253f11(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.make */
extern T0* T1253c10(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LOOP_INSTRUCTION.tokens */
extern T0* T1253f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_6_3_7_4554 */
extern unsigned char ge191os2006;
extern T0* ge191ov2006;
extern T0* T440f897(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_641 */
extern void T440f1656(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_instruction_old_syntax */
extern T0* T403f261(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_EIFFEL_PARSER.yy_do_action_640 */
extern void T440f1655(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_639 */
extern void T440f1654(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_638 */
extern void T440f1653(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_637 */
extern void T440f1652(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_assignment_attempt */
extern T0* T403f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT_ATTEMPT.make */
extern T0* T1252c5(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_attempt_symbol */
extern unsigned char ge808os11680;
extern T0* ge808ov11680;
extern T0* T81f590(GE_context* ac, T0* C);
/* ET_SYMBOL.make_assign_attempt */
extern T0* T346c93(GE_context* ac);
/* ET_ASSIGNMENT_ATTEMPT.tokens */
extern T0* T1252f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_636 */
extern void T440f1651(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_assignment */
extern T0* T403f258(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT.make */
extern T0* T1251c5(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_symbol */
extern unsigned char ge808os11679;
extern T0* ge808ov11679;
extern T0* T81f589(GE_context* ac, T0* C);
/* ET_SYMBOL.make_assign */
extern T0* T346c92(GE_context* ac);
/* ET_ASSIGNMENT.tokens */
extern T0* T1251f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_635 */
extern void T440f1650(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_assigner_instruction */
extern T0* T403f257(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.make */
extern T0* T1250c15(GE_context* ac, T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.tokens */
extern T0* T1250f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_634 */
extern void T440f1649(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_633 */
extern void T440f1648(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_632 */
extern void T440f1647(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_631 */
extern void T440f1646(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_630 */
extern void T440f1645(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].force */
extern void T1016f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_COMPOUND].fill_with */
extern void T1017f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_COMPOUND].extend */
extern void T1017f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T1016f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T1017f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_629 */
extern void T440f1644(GE_context* ac, T0* C);
/* ET_COMPOUND.put_first */
extern void T332f11(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_628 */
extern void T440f1643(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_compound */
extern T0* T403f256(GE_context* ac, T0* C, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern T0* T332c12(GE_context* ac, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern void T332f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_627 */
extern void T440f1642(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_626 */
extern void T440f1641(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_625 */
extern void T440f1640(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_624 */
extern void T440f1639(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_empty_compound */
extern T0* T403f255(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_623 */
extern void T440f1638(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_622 */
extern void T440f1637(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_compound */
extern T0* T403f254(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.loop_keyword */
extern unsigned char ge808os11738;
extern T0* ge808ov11738;
extern T0* T81f597(GE_context* ac, T0* C);
/* ET_KEYWORD.make_loop */
extern T0* T397c66(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_621 */
extern void T440f1636(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_620 */
extern void T440f1635(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_619 */
extern void T440f1634(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_from_compound */
extern T0* T403f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.from_keyword */
extern unsigned char ge808os11727;
extern T0* ge808ov11727;
extern T0* T81f596(GE_context* ac, T0* C);
/* ET_KEYWORD.make_from */
extern T0* T397c65(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_618 */
extern void T440f1633(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_rescue_compound */
extern T0* T403f252(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.rescue_keyword */
extern unsigned char ge808os11750;
extern T0* ge808ov11750;
extern T0* T81f612(GE_context* ac, T0* C);
/* ET_KEYWORD.make_rescue */
extern T0* T397c81(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_617 */
extern void T440f1632(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_else_compound */
extern T0* T403f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_616 */
extern void T440f1631(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_615 */
extern void T440f1630(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_then_compound */
extern T0* T403f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_614 */
extern void T440f1629(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_613 */
extern void T440f1628(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_attribute_compound */
extern T0* T403f249(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.attribute_keyword */
extern unsigned char ge808os11707;
extern T0* ge808ov11707;
extern T0* T81f624(GE_context* ac, T0* C);
/* ET_KEYWORD.make_attribute */
extern T0* T397c93(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_612 */
extern void T440f1627(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_compound */
extern T0* T403f248(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_611 */
extern void T440f1626(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].force */
extern void T1164f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].fill_with */
extern void T1166f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].extend */
extern void T1166f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T1164f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T1166f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_qualified_like_type */
extern T0* T403f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.make */
extern T0* T1249c76(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_attachment_symbol_separate_keyword */
extern T0* T403f137(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.make */
extern T0* T1221c18(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_610 */
extern void T440f1625(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_609 */
extern void T440f1624(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_608 */
extern void T440f1623(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_607 */
extern void T440f1622(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_attachment_separate_keywords */
extern T0* T403f136(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.make */
extern T0* T1220c18(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_606 */
extern void T440f1621(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_605 */
extern void T440f1620(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_604 */
extern void T440f1619(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_603 */
extern void T440f1618(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_602 */
extern void T440f1617(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_like_braced_type */
extern T0* T403f246(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_like_keyword */
extern void T1248f80(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.make */
extern T0* T1248c79(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.tokens */
extern T0* T1248f23(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601 */
extern void T440f1616(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401_600 */
extern void T440f997(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_600 */
extern void T440f1615(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_599 */
extern void T440f1614(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_598 */
extern void T440f1613(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_597 */
extern void T440f1612(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_596 */
extern void T440f1611(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_595 */
extern void T440f1610(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_594 */
extern void T440f1609(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_593 */
extern void T440f1608(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_592 */
extern void T440f1607(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_591 */
extern void T440f1606(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_590 */
extern void T440f1605(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].force */
extern void T1125f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LIKE_TYPE].fill_with */
extern void T1127f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LIKE_TYPE].extend */
extern void T1127f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T1125f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T1127f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_589 */
extern void T440f1604(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_like_current */
extern T0* T403f244(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.set_like_keyword */
extern void T504f77(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_588 */
extern void T440f1603(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_587 */
extern void T440f1602(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_586 */
extern void T440f1601(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_585 */
extern void T440f1600(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_584 */
extern void T440f1599(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_583 */
extern void T440f1598(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_582 */
extern void T440f1597(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_581 */
extern void T440f1596(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_580 */
extern void T440f1595(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.current_universe */
extern T0* T440f895(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_579 */
extern void T440f1594(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_like_feature */
extern T0* T403f243(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.set_like_keyword */
extern void T1247f81(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.make */
extern T0* T1247c80(GE_context* ac, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.tokens */
extern T0* T1247f24(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_578 */
extern void T440f1593(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_577 */
extern void T440f1592(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_576 */
extern void T440f1591(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_575 */
extern void T440f1590(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_574 */
extern void T440f1589(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_573 */
extern void T440f1588(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_572 */
extern void T440f1587(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_571 */
extern void T440f1586(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_570 */
extern void T440f1585(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_569 */
extern void T440f1584(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_568 */
extern void T440f1583(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_567 */
extern void T440f1582(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_566 */
extern void T440f1581(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T653f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T650f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_labeled_actual_parameter_semicolon */
extern T0* T403f242(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_actual_parameter */
extern T0* T403f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LABELED_ACTUAL_PARAMETER.make */
extern T0* T1245c9(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_565 */
extern void T440f1580(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_564 */
extern void T440f1579(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].force */
extern void T968f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].fill_with */
extern void T969f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].extend */
extern void T969f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.add_to_actual_parameter_list */
extern void T440f1970(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_comma_actual_parameter */
extern T0* T403f241(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T1565c9(GE_context* ac, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.first */
extern T0* T252f15(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_label_comma */
extern T0* T403f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_563 */
extern void T440f1578(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_562 */
extern void T440f1577(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_561 */
extern void T440f1576(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_560 */
extern void T440f1575(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_559 */
extern void T440f1574(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T968f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T969f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_actual_parameters */
extern T0* T403f237(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T252f31(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_558 */
extern void T440f1573(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_557 */
extern void T440f1572(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_556 */
extern void T440f1571(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_555 */
extern void T440f1570(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_554 */
extern void T440f1569(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_553 */
extern void T440f1568(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_actual_parameter_comma */
extern T0* T403f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_552 */
extern void T440f1567(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_551 */
extern void T440f1566(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_tuple_type */
extern T0* T440f894(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_tuple_type */
extern T0* T403f344(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.set_tuple_keyword */
extern void T261f109(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.providers_enabled */
extern T1 T440f915(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_550 */
extern void T440f1565(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_named_type */
extern T0* T440f893(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_class_type */
extern T0* T403f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_generic_class_type */
extern T0* T403f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_FACTORY.new_formal_parameter_type */
extern T0* T403f343(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.make */
extern T0* T1427c72(GE_context* ac, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_CLASS.formal_parameter */
extern T0* T82f132(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter_by_name */
extern T0* T644f9(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_549 */
extern void T440f1564(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_548 */
extern void T440f1563(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_547 */
extern void T440f1562(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_546 */
extern void T440f1561(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_545 */
extern void T440f1560(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_544 */
extern void T440f1559(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_543 */
extern void T440f1558(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_542 */
extern void T440f1557(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_541 */
extern void T440f1556(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_540 */
extern void T440f1555(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_539 */
extern void T440f1554(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_538 */
extern void T440f1553(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_537 */
extern void T440f1552(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_536 */
extern void T440f1551(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_535 */
extern void T440f1550(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_534 */
extern void T440f1549(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_533 */
extern void T440f1548(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_532 */
extern void T440f1547(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_531 */
extern void T440f1546(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_bit_feature */
extern T0* T440f873(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_bit_feature */
extern T0* T403f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.set_bit_keyword */
extern void T1223f112(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.make */
extern T0* T1223c111(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.bit_keyword */
extern unsigned char ge808os11708;
extern T0* ge808ov11708;
extern T0* T81f639(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.tokens */
extern T0* T1223f63(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_530 */
extern void T440f1545(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_bit_n */
extern T0* T440f872(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0d_error */
extern void T36f228(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0d */
extern T0* T532c771(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtbt_error */
extern T1 T36f29(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtbt0d_error */
extern void T77f229(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtbt_error */
extern T1 T77f30(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_syntax_error */
extern void T36f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.make */
extern T0* T1551c18(GE_context* ac, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.set_compilers */
extern void T1551f19(GE_context* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_syntax_error */
extern void T77f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0c_error */
extern void T36f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0c */
extern T0* T532c769(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtbt0c_error */
extern void T77f228(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_N.has_size_error */
extern T1 T1222f11(GE_context* ac, T0* C);
/* ET_BIT_N.compute_size */
extern void T1222f111(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_bit_n */
extern T0* T403f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.set_bit_keyword */
extern void T1222f112(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.make */
extern T0* T1222c110(GE_context* ac, T0* a1, T0* a2);
/* ET_BIT_N.tokens */
extern T0* T1222f62(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_529 */
extern void T440f1544(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_528 */
extern void T440f1543(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_527 */
extern void T440f1542(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_526 */
extern void T440f1541(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_525 */
extern void T440f1540(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_524 */
extern void T440f1539(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_523 */
extern void T440f1538(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_522 */
extern void T440f1537(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_521 */
extern void T440f1536(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_520 */
extern void T440f1535(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_519 */
extern void T440f1534(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_518 */
extern void T440f1533(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_517 */
extern void T440f1532(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_516 */
extern void T440f1531(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_515 */
extern void T440f1530(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_514 */
extern void T440f1529(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_513 */
extern void T440f1528(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_512 */
extern void T440f1527(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_511 */
extern void T440f1526(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_510 */
extern void T440f1525(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_509 */
extern void T440f1524(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_508 */
extern void T440f1523(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_507 */
extern void T440f1522(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_506 */
extern void T440f1521(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_505 */
extern void T440f1520(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_504 */
extern void T440f1519(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_503 */
extern void T440f1518(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_502 */
extern void T440f1517(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_501 */
extern void T440f1516(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_500 */
extern void T440f1515(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_499 */
extern void T440f1514(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_498 */
extern void T440f1513(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_497 */
extern void T440f1512(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_496 */
extern void T440f1511(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_495 */
extern void T440f1510(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_494 */
extern void T440f1509(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_493 */
extern void T440f1508(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_492 */
extern void T440f1507(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_491 */
extern void T440f1506(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_490 */
extern void T440f1505(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_489 */
extern void T440f1504(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_488 */
extern void T440f1503(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_487 */
extern void T440f1502(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_486 */
extern void T440f1501(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_485 */
extern void T440f1500(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_484 */
extern void T440f1499(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_483 */
extern void T440f1498(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_482 */
extern void T440f1497(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_481 */
extern void T440f1496(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_480 */
extern void T440f1495(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_479 */
extern void T440f1494(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_478 */
extern void T440f1493(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_477 */
extern void T440f1492(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_476 */
extern void T440f1491(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_475 */
extern void T440f1490(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_474 */
extern void T440f1489(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_473 */
extern void T440f1488(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_472 */
extern void T440f1487(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_471 */
extern void T440f1486(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_470 */
extern void T440f1485(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_469 */
extern void T440f1484(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_468 */
extern void T440f1483(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_467 */
extern void T440f1482(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_466 */
extern void T440f1481(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_465 */
extern void T440f1480(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_464 */
extern void T440f1479(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_463 */
extern void T440f1478(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_462 */
extern void T440f1477(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_461 */
extern void T440f1476(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].force */
extern void T1184f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_VARIANT].fill_with */
extern void T1186f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_VARIANT].extend */
extern void T1186f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_460 */
extern void T440f1475(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].aliased_resized_area */
extern T0* T1184f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_VARIANT].aliased_resized_area */
extern T0* T1186f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_459 */
extern void T440f1474(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_variant */
extern T0* T403f236(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VARIANT.set_variant_keyword */
extern void T1185f6(GE_context* ac, T0* C, T0* a1);
/* ET_VARIANT.make */
extern T0* T1185c5(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.variant_keyword */
extern unsigned char ge808os11763;
extern T0* ge808ov11763;
extern T0* T81f617(GE_context* ac, T0* C);
/* ET_KEYWORD.make_variant */
extern T0* T397c86(GE_context* ac);
/* ET_VARIANT.tokens */
extern T0* T1185f4(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_tag */
extern T0* T403f124(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_458 */
extern void T440f1473(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_457 */
extern void T440f1472(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].force */
extern void T1136f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].fill_with */
extern void T1138f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].extend */
extern void T1138f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T1136f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T1138f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_loop_invariants */
extern T0* T440f892(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].wipe_out */
extern void T897f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_all_cursors_after */
extern void T897f18(GE_context* ac, T0* C);
/* ET_LOOP_INVARIANTS.put_first */
extern void T1137f9(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.fixed_array */
extern T0* T1137f5(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_invariants */
extern T0* T403f342(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_LOOP_INVARIANTS.set_invariant_keyword */
extern void T1137f10(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern T0* T1137c8(GE_context* ac, T6 a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern void T1137f8p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.invariant_keyword */
extern unsigned char ge808os11734;
extern T0* ge808ov11734;
extern T0* T81f625(GE_context* ac, T0* C);
/* ET_KEYWORD.make_invariant */
extern T0* T397c94(GE_context* ac);
/* ET_LOOP_INVARIANTS.tokens */
extern T0* T1137f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_456 */
extern void T440f1471(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_455 */
extern void T440f1470(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_454 */
extern void T440f1469(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_453 */
extern void T440f1468(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_452 */
extern void T440f1467(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].force */
extern void T1121f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INVARIANTS].fill_with */
extern void T1122f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INVARIANTS].extend */
extern void T1122f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T1121f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T1122f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_invariants */
extern T0* T440f891(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.wipe_out_last_across_components_stack */
extern void T440f979(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].wipe_out */
extern void T896f12(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].i_th */
extern T0* T896f5(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_COMPONENT_LIST.wipe_out */
extern void T1198f10(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT].keep_head */
extern void T756f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.wipe_out_last_object_tests_stack */
extern void T440f978(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].wipe_out */
extern void T895f12(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].i_th */
extern T0* T895f5(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.wipe_out */
extern void T1197f10(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].keep_head */
extern void T750f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.wipe_out_last_local_variables_stack */
extern void T440f977(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].wipe_out */
extern void T892f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.wipe_out_last_formal_arguments_stack */
extern void T440f976(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].wipe_out */
extern void T891f10(GE_context* ac, T0* C);
/* ET_INVARIANTS.set_across_components */
extern void T887f32(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.set_object_tests */
extern void T887f31(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.put_first */
extern void T887f30(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.fixed_array */
extern T0* T887f10(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_invariants */
extern T0* T403f341(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_INVARIANTS.set_invariant_keyword */
extern void T887f33(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.make_with_capacity */
extern T0* T887c25(GE_context* ac, T0* a1, T6 a2);
/* ET_INVARIANTS.make_assertions_with_capacity */
extern void T887f34(GE_context* ac, T0* C, T6 a1);
/* ET_INVARIANTS.tokens */
extern T0* T887f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_451 */
extern void T440f1466(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_450 */
extern void T440f1465(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_449 */
extern void T440f1464(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_448 */
extern void T440f1463(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].force */
extern void T1162f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_POSTCONDITIONS].fill_with */
extern void T1163f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_POSTCONDITIONS].extend */
extern void T1163f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T1162f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T1163f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_postconditions */
extern T0* T440f890(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_POSTCONDITIONS.put_first */
extern void T886f16(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.fixed_array */
extern T0* T886f9(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_postconditions */
extern T0* T403f340(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_POSTCONDITIONS.set_then_keyword */
extern void T886f18(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.set_ensure_keyword */
extern void T886f17(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern T0* T886c15(GE_context* ac, T6 a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern void T886f15p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.ensure_keyword */
extern unsigned char ge808os11722;
extern T0* ge808ov11722;
extern T0* T81f753(GE_context* ac, T0* C);
/* ET_KEYWORD.make_ensure */
extern T0* T397c53(GE_context* ac);
/* ET_POSTCONDITIONS.tokens */
extern T0* T886f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_447 */
extern void T440f1462(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_446 */
extern void T440f1461(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_445 */
extern void T440f1460(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_444 */
extern void T440f1459(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_443 */
extern void T440f1458(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_preconditions */
extern T0* T440f889(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.put_first */
extern void T389f16(GE_context* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.fixed_array */
extern T0* T389f11(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_preconditions */
extern T0* T403f339(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_PRECONDITIONS.set_else_keyword */
extern void T389f18(GE_context* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.set_require_keyword */
extern void T389f17(GE_context* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern T0* T389c15(GE_context* ac, T6 a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern void T389f15p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.require_keyword */
extern unsigned char ge808os11749;
extern T0* ge808ov11749;
extern T0* T81f1266(GE_context* ac, T0* C);
/* ET_KEYWORD.make_require */
extern T0* T397c56(GE_context* ac);
/* ET_PRECONDITIONS.tokens */
extern T0* T389f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_442 */
extern void T440f1457(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_441 */
extern void T440f1456(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_440 */
extern void T440f1455(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_439 */
extern void T440f1454(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_438 */
extern void T440f1453(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_tagged_assertion */
extern void T440f1969(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T440f1969ot1(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].force_last */
extern void T897f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].resize */
extern void T897f20(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1486f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1485f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_capacity */
extern T6 T897f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].extendible */
extern T1 T897f9(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_assertion_semicolon */
extern T0* T403f324(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_tagged_assertion */
extern T0* T403f325(GE_context* ac, T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.make */
extern T0* T1283c5(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.report_syntax_error */
extern void T440f1001(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_syntax_error */
extern void T440f1005(GE_context* ac, T0* C);
/* ET_FILE_POSITION.make */
extern T0* T1284c12(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ET_FILE_POSITION.make_compressed_position */
extern void T1284f13(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.set_position */
extern void T1284f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.column */
extern T6 T1284f3(GE_context* ac, T0* C);
/* ET_FILE_POSITION.line */
extern T6 T1284f6(GE_context* ac, T0* C);
/* ET_FILE_POSITION.is_null */
extern T1 T1284f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.current_position */
extern T0* T440f681(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].last */
extern T0* T897f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].is_empty */
extern T1 T897f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_437 */
extern void T440f1452(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_436 */
extern void T440f1451(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_expression_assertion */
extern void T440f1968(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T440f1968ot1(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].replace */
extern void T897f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_TAGGED_ASSERTION.set_expression */
extern void T1283f6(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_435 */
extern void T440f1450(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_434 */
extern void T440f1449(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_433 */
extern void T440f1448(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_432 */
extern void T440f1447(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_431 */
extern void T440f1446(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_430 */
extern void T440f1445(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].force */
extern void T1131f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].fill_with */
extern void T1133f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].extend */
extern void T1133f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T1131f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T1133f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_variable_semicolon */
extern T0* T403f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_local_variable */
extern T0* T403f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LOCAL_VARIABLE.make */
extern T0* T1129c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_429 */
extern void T440f1444(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_428 */
extern void T440f1443(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].force */
extern void T1128f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].fill_with */
extern void T1130f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].extend */
extern void T1130f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T1128f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T1130f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_comma_variable */
extern T0* T403f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LOCAL_COMMA_VARIABLE.make */
extern T0* T1564c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_type */
extern unsigned char ge1029os25320;
extern T0* ge1029ov25320;
extern T0* T440f887(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_427 */
extern void T440f1442(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_local_name_comma */
extern T0* T403f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_426 */
extern void T440f1441(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.put_first */
extern void T333f12(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.fixed_array */
extern unsigned char ge681os12622;
extern T0* ge681ov12622;
extern T0* T333f10(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T1131c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_425 */
extern void T440f1440(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_424 */
extern void T440f1439(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.set_declared_type */
extern void T1564f8(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.first */
extern T0* T333f6(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.is_empty */
extern T1 T333f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_423 */
extern void T440f1438(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_422 */
extern void T440f1437(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_local_variables */
extern T0* T440f888(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_AST_FACTORY.new_local_variables */
extern T0* T403f338(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_LOCAL_VARIABLE_LIST.set_local_keyword */
extern void T333f13(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern T0* T333c11(GE_context* ac, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern void T333f11p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T1131f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].make_empty */
extern T0* T1133c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.local_keyword */
extern unsigned char ge808os11737;
extern T0* ge808ov11737;
extern T0* T81f605(GE_context* ac, T0* C);
/* ET_KEYWORD.make_local */
extern T0* T397c74(GE_context* ac);
/* ET_LOCAL_VARIABLE_LIST.tokens */
extern T0* T333f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_421 */
extern void T440f1436(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_420 */
extern void T440f1435(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_419 */
extern void T440f1434(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_418 */
extern void T440f1433(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_417 */
extern void T440f1432(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_416 */
extern void T440f1431(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].force */
extern void T1084f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].fill_with */
extern void T1086f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].extend */
extern void T1086f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T1084f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T1086f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_argument_semicolon */
extern T0* T403f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_formal_argument */
extern T0* T403f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_ARGUMENT.make */
extern T0* T265c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_415 */
extern void T440f1430(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_414 */
extern void T440f1429(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].force */
extern void T1082f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].fill_with */
extern void T1083f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].extend */
extern void T1083f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T1082f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T1083f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_comma_argument */
extern T0* T403f229(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.make */
extern T0* T1563c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_413 */
extern void T440f1428(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_argument_name_comma */
extern T0* T403f228(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_412 */
extern void T440f1427(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.put_first */
extern void T262f13(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.fixed_array */
extern unsigned char ge669os12622;
extern T0* ge669ov12622;
extern T0* T262f11(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T1084c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_411 */
extern void T440f1426(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_410 */
extern void T440f1425(GE_context* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_declared_type */
extern void T1563f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.first */
extern T0* T262f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_409 */
extern void T440f1424(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_408 */
extern void T440f1423(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_formal_arguments */
extern T0* T440f886(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AST_FACTORY.new_formal_arguments */
extern T0* T403f337(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T262c12(GE_context* ac, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern void T262f12p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T1084f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].make_empty */
extern T0* T1086c5(GE_context* ac, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.tokens */
extern T0* T262f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_407 */
extern void T440f1422(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_406 */
extern void T440f1421(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_405 */
extern void T440f1420(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_404 */
extern void T440f1419(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_403 */
extern void T440f1418(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_402 */
extern void T440f1417(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_invalid_alias_name */
extern T0* T440f885(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_alias_free_name */
extern T0* T440f929(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_alias_free_name */
extern T0* T403f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_FREE_NAME.set_alias_keyword */
extern void T1242f45(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.make_infix */
extern T0* T1242c44(GE_context* ac, T0* a1);
/* ET_ALIAS_FREE_NAME.string_ */
extern T0* T1242f10(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.default_keyword */
extern unsigned char ge813os30493;
extern T0* ge813ov30493;
extern T0* T1242f15(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_keyword */
extern unsigned char ge808os11702;
extern T0* ge808ov11702;
extern T0* T81f601(GE_context* ac, T0* C);
/* ET_KEYWORD.make_alias */
extern T0* T397c70(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_401 */
extern void T440f1416(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_parenthesis_name */
extern T0* T403f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.set_alias_keyword */
extern void T859f64(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.make_parenthesis */
extern T0* T859c84(GE_context* ac, T0* a1);
/* ET_ALIAS_NAME.default_keyword */
extern T0* T859f60(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201_400 */
extern void T440f996(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_400 */
extern void T440f1415(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_bracket_name */
extern T0* T403f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_bracket */
extern T0* T859c83(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_399 */
extern void T440f1414(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_398 */
extern void T440f1413(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_dotdot_name */
extern T0* T403f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_dotdot */
extern T0* T859c82(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_397 */
extern void T440f1412(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_xor_name */
extern T0* T403f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_xor */
extern T0* T859c81(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_396 */
extern void T440f1411(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_implies_name */
extern T0* T403f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_implies */
extern T0* T859c80(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_395 */
extern void T440f1410(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_else_name */
extern T0* T403f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or_else */
extern T0* T859c79(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_394 */
extern void T440f1409(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_name */
extern T0* T403f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or */
extern T0* T859c78(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_393 */
extern void T440f1408(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_then_name */
extern T0* T403f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and_then */
extern T0* T859c77(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_392 */
extern void T440f1407(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_name */
extern T0* T403f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and */
extern T0* T859c76(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_391 */
extern void T440f1406(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_ge_name */
extern T0* T403f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_ge */
extern T0* T859c75(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_390 */
extern void T440f1405(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_gt_name */
extern T0* T403f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_gt */
extern T0* T859c74(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_389 */
extern void T440f1404(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_le_name */
extern T0* T403f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_le */
extern T0* T859c73(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_388 */
extern void T440f1403(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_lt_name */
extern T0* T403f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_lt */
extern T0* T859c72(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_387 */
extern void T440f1402(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_power_name */
extern T0* T403f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_power */
extern T0* T859c71(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_386 */
extern void T440f1401(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_mod_name */
extern T0* T403f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_mod */
extern T0* T859c70(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_385 */
extern void T440f1400(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_div_name */
extern T0* T403f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_div */
extern T0* T859c69(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_384 */
extern void T440f1399(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_divide_name */
extern T0* T403f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_divide */
extern T0* T859c68(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_383 */
extern void T440f1398(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_times_name */
extern T0* T403f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_times */
extern T0* T859c67(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_382 */
extern void T440f1397(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_minus_name */
extern T0* T403f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_minus */
extern T0* T859c66(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_381 */
extern void T440f1396(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_plus_name */
extern T0* T403f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_plus */
extern T0* T859c65(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_380 */
extern void T440f1395(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_not_name */
extern T0* T403f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_not */
extern T0* T859c63(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_379 */
extern void T440f1394(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].force */
extern void T1063f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].fill_with */
extern void T1064f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].extend */
extern void T1064f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T1063f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T1064f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_aliased_feature_name */
extern T0* T403f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_378 */
extern void T440f1393(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_377 */
extern void T440f1392(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_invalid_infix_name */
extern T0* T440f884(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_infix_free_name */
extern T0* T440f928(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_infix_free_name */
extern T0* T403f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_FREE_NAME.set_infix_keyword */
extern void T833f69(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.make */
extern T0* T833c68(GE_context* ac, T0* a1);
/* ET_INFIX_FREE_NAME.string_ */
extern T0* T833f7(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.default_keyword */
extern unsigned char ge841os30493;
extern T0* ge841ov30493;
extern T0* T833f6(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_keyword */
extern unsigned char ge808os11731;
extern T0* ge808ov11731;
extern T0* T81f604(GE_context* ac, T0* C);
/* ET_KEYWORD.make_infix */
extern T0* T397c73(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_376 */
extern void T440f1391(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_375 */
extern void T440f1390(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_invalid_prefix_name */
extern T0* T440f883(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_prefix_free_name */
extern T0* T440f927(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_name */
extern T0* T403f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_FREE_NAME.set_prefix_keyword */
extern void T1239f69(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.make */
extern T0* T1239c68(GE_context* ac, T0* a1);
/* ET_PREFIX_FREE_NAME.string_ */
extern T0* T1239f29(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.default_keyword */
extern unsigned char ge853os30493;
extern T0* ge853ov30493;
extern T0* T1239f30(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.prefix_keyword */
extern unsigned char ge808os11745;
extern T0* ge808ov11745;
extern T0* T81f610(GE_context* ac, T0* C);
/* ET_KEYWORD.make_prefix */
extern T0* T397c79(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_374 */
extern void T440f1389(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_373 */
extern void T440f1388(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_372 */
extern void T440f1387(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_371 */
extern void T440f1386(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_370 */
extern void T440f1385(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_369 */
extern void T440f1384(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_368 */
extern void T440f1383(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_367 */
extern void T440f1382(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_366 */
extern void T440f1381(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_365 */
extern void T440f1380(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_364 */
extern void T440f1379(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_363 */
extern void T440f1378(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_362 */
extern void T440f1377(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_361 */
extern void T440f1376(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_360 */
extern void T440f1375(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_359 */
extern void T440f1374(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_358 */
extern void T440f1373(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_xor_name */
extern T0* T403f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.set_infix_keyword */
extern void T1240f85(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_NAME.make_xor */
extern T0* T1240c101(GE_context* ac, T0* a1);
/* ET_INFIX_NAME.default_keyword */
extern T0* T1240f45(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_357 */
extern void T440f1372(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_implies_name */
extern T0* T403f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_implies */
extern T0* T1240c100(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_356 */
extern void T440f1371(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_else_name */
extern T0* T403f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or_else */
extern T0* T1240c99(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_355 */
extern void T440f1370(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_name */
extern T0* T403f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or */
extern T0* T1240c98(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_354 */
extern void T440f1369(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_then_name */
extern T0* T403f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and_then */
extern T0* T1240c97(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_353 */
extern void T440f1368(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_name */
extern T0* T403f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and */
extern T0* T1240c96(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_352 */
extern void T440f1367(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_ge_name */
extern T0* T403f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_ge */
extern T0* T1240c95(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_351 */
extern void T440f1366(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_gt_name */
extern T0* T403f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_gt */
extern T0* T1240c94(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_350 */
extern void T440f1365(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_le_name */
extern T0* T403f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_le */
extern T0* T1240c93(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_349 */
extern void T440f1364(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_lt_name */
extern T0* T403f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_lt */
extern T0* T1240c92(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_348 */
extern void T440f1363(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_power_name */
extern T0* T403f193(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_power */
extern T0* T1240c91(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_347 */
extern void T440f1362(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_mod_name */
extern T0* T403f192(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_mod */
extern T0* T1240c90(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_346 */
extern void T440f1361(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_div_name */
extern T0* T403f191(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_div */
extern T0* T1240c89(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_345 */
extern void T440f1360(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_divide_name */
extern T0* T403f190(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_divide */
extern T0* T1240c88(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_344 */
extern void T440f1359(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_times_name */
extern T0* T403f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_times */
extern T0* T1240c87(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_343 */
extern void T440f1358(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_minus_name */
extern T0* T403f188(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_minus */
extern T0* T1240c86(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_342 */
extern void T440f1357(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_plus_name */
extern T0* T403f187(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_plus */
extern T0* T1240c84(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_341 */
extern void T440f1356(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_340 */
extern void T440f1355(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_minus_name */
extern T0* T403f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.set_prefix_keyword */
extern void T1238f85(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_NAME.make_minus */
extern T0* T1238c87(GE_context* ac, T0* a1);
/* ET_PREFIX_NAME.default_keyword */
extern T0* T1238f31(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_339 */
extern void T440f1354(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_plus_name */
extern T0* T403f184(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_plus */
extern T0* T1238c86(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_338 */
extern void T440f1353(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_not_name */
extern T0* T403f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_not */
extern T0* T1238c84(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_337 */
extern void T440f1352(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_336 */
extern void T440f1351(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].force */
extern void T982f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ASSIGNER].fill_with */
extern void T984f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ASSIGNER].extend */
extern void T984f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T982f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T984f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_assigner */
extern T0* T403f182(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_335 */
extern void T440f1350(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_334 */
extern void T440f1349(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].force */
extern void T1065f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].fill_with */
extern void T1067f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].extend */
extern void T1067f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T1065f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T1067f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_external_alias */
extern T0* T403f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_333 */
extern void T440f1348(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_332 */
extern void T440f1347(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].force */
extern void T952f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].fill_with */
extern void T954f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].extend */
extern void T954f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_331 */
extern void T440f1346(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T952f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T954f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_330 */
extern void T440f1345(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_329 */
extern void T440f1344(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_328 */
extern void T440f1343(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_external_procedure */
extern T0* T440f882(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_AST_FACTORY.new_external_procedure */
extern T0* T403f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EXTERNAL_PROCEDURE.set_first_indexing */
extern void T1237f94(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_alias_clause */
extern void T1237f92(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_postconditions */
extern void T1237f91(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_preconditions */
extern void T1237f90(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_obsolete_message */
extern void T1237f89(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_is_keyword */
extern void T1237f88(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_keyword */
extern unsigned char ge808os11735;
extern T0* ge808ov11735;
extern T0* T81f594(GE_context* ac, T0* C);
/* ET_KEYWORD.make_is */
extern T0* T397c63(GE_context* ac);
/* ET_EXTERNAL_PROCEDURE.make */
extern T0* T1237c76(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.tokens */
extern T0* T1237f35(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_327 */
extern void T440f1342(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_326 */
extern void T440f1341(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_deferred_procedure */
extern T0* T403f180(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13);
/* ET_DEFERRED_PROCEDURE.set_first_indexing */
extern void T534f88(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_postconditions */
extern void T534f86(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_preconditions */
extern void T534f85(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_obsolete_message */
extern void T534f84(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_is_keyword */
extern void T534f83(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_325 */
extern void T440f1340(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_324 */
extern void T440f1339(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_procedure */
extern T0* T403f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_ONCE_PROCEDURE.set_first_indexing */
extern void T1236f94(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_rescue_clause */
extern void T1236f92(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_postconditions */
extern void T1236f91(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_compound */
extern void T1236f90(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_keys */
extern void T1236f89(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_locals */
extern void T1236f88(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_preconditions */
extern void T1236f87(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_obsolete_message */
extern void T1236f86(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_is_keyword */
extern void T1236f85(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.make */
extern T0* T1236c73(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.tokens */
extern T0* T1236f37(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_323 */
extern void T440f1338(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_322 */
extern void T440f1337(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_procedure */
extern T0* T403f178(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DO_PROCEDURE.set_first_indexing */
extern void T528f92(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_rescue_clause */
extern void T528f90(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_postconditions */
extern void T528f89(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_compound */
extern void T528f88(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_locals */
extern void T528f87(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_preconditions */
extern void T528f86(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_obsolete_message */
extern void T528f85(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_is_keyword */
extern void T528f84(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_321 */
extern void T440f1336(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_320 */
extern void T440f1335(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_external_function */
extern T0* T440f881(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_AST_FACTORY.new_external_function */
extern T0* T403f335(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EXTERNAL_FUNCTION.set_first_indexing */
extern void T260f96(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_alias_clause */
extern void T260f94(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_postconditions */
extern void T260f93(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_preconditions */
extern void T260f92(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_obsolete_message */
extern void T260f91(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_assigner */
extern void T260f90(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_is_keyword */
extern void T260f89(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.make */
extern T0* T260c77(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_FUNCTION.tokens */
extern T0* T260f57(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_319 */
extern void T440f1334(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_318 */
extern void T440f1333(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_317 */
extern void T440f1332(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_316 */
extern void T440f1331(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_deferred_function */
extern T0* T403f176(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DEFERRED_FUNCTION.set_first_indexing */
extern void T1234f90(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_postconditions */
extern void T1234f88(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_preconditions */
extern void T1234f87(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_obsolete_message */
extern void T1234f86(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_assigner */
extern void T1234f85(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_is_keyword */
extern void T1234f84(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.make */
extern T0* T1234c72(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.make */
extern void T1234f72p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.tokens */
extern T0* T1234f42(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_315 */
extern void T440f1330(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_314 */
extern void T440f1329(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_313 */
extern void T440f1328(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_312 */
extern void T440f1327(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_function */
extern T0* T403f175(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17, T0* a18);
/* ET_ONCE_FUNCTION.set_first_indexing */
extern void T1233f96(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_rescue_clause */
extern void T1233f94(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_postconditions */
extern void T1233f93(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_compound */
extern void T1233f92(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_keys */
extern void T1233f91(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_locals */
extern void T1233f90(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_preconditions */
extern void T1233f89(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_obsolete_message */
extern void T1233f88(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_assigner */
extern void T1233f87(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_is_keyword */
extern void T1233f86(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.make */
extern T0* T1233c74(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ONCE_FUNCTION.tokens */
extern T0* T1233f44(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_311 */
extern void T440f1326(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_310 */
extern void T440f1325(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_309 */
extern void T440f1324(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_308 */
extern void T440f1323(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_function */
extern T0* T403f173(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_DO_FUNCTION.set_first_indexing */
extern void T1232f94(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_rescue_clause */
extern void T1232f92(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_postconditions */
extern void T1232f91(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_compound */
extern void T1232f90(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_locals */
extern void T1232f89(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_preconditions */
extern void T1232f88(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_obsolete_message */
extern void T1232f87(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_assigner */
extern void T1232f86(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_is_keyword */
extern void T1232f85(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.make */
extern T0* T1232c73(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DO_FUNCTION.tokens */
extern T0* T1232f44(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_307 */
extern void T440f1322(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_306 */
extern void T440f1321(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_305 */
extern void T440f1320(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_304 */
extern void T440f1319(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_unique_attribute */
extern T0* T403f172(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_UNIQUE_ATTRIBUTE.set_assigner */
extern void T365f83(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.make */
extern T0* T365c71(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.unique_keyword */
extern unsigned char ge808os11761;
extern T0* ge808ov11761;
extern T0* T81f1264(GE_context* ac, T0* C);
/* ET_KEYWORD.make_unique */
extern T0* T397c55(GE_context* ac);
/* ET_UNIQUE_ATTRIBUTE.tokens */
extern T0* T365f55(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_303 */
extern void T440f1318(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_302 */
extern void T440f1317(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_constant_attribute */
extern T0* T403f171(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CONSTANT_ATTRIBUTE.set_assigner */
extern void T363f83(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.make */
extern T0* T363c71(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTANT_ATTRIBUTE.tokens */
extern T0* T363f55(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_301 */
extern void T440f1316(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_300 */
extern void T440f1315(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_extended_attribute */
extern T0* T403f170(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_EXTENDED_ATTRIBUTE.set_first_indexing */
extern void T331f92(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_rescue_clause */
extern void T331f90(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_postconditions */
extern void T331f89(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_compound */
extern void T331f88(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_locals */
extern void T331f87(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_preconditions */
extern void T331f86(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_obsolete_message */
extern void T331f85(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_assigner */
extern void T331f84(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.make */
extern T0* T331c72(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.make */
extern void T331f72p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.tokens */
extern T0* T331f58(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_299 */
extern void T440f1314(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_attribute */
extern T0* T403f169(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ATTRIBUTE.set_assigner */
extern void T366f81(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.make */
extern T0* T366c69(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ATTRIBUTE.tokens */
extern T0* T366f53(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_298 */
extern void T440f1313(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_297 */
extern void T440f1312(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_procedure_synonym */
extern void T440f1966(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].back */
extern void T730f21(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_back */
extern void T730f28(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].add_traversing_cursor */
extern void T730f29(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_traversing_cursor */
extern void T730f30(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_position */
extern void T1383f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left */
extern void T730f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left_cursor */
extern void T730f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put */
extern void T730f31(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_right */
extern void T730f34(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_right */
extern void T730f33(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put_last */
extern void T730f32(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].index */
extern T6 T1383f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_index */
extern T6 T730f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].forth */
extern void T730f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_forth */
extern void T730f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].before */
extern T1 T730f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_before */
extern T1 T730f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].before */
extern T1 T1383f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_procedure_synonym */
extern T0* T440f879(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_296 */
extern void T440f1311(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_extended_feature_name_comma */
extern T0* T403f167(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_295 */
extern void T440f1310(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_294 */
extern void T440f1309(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_293 */
extern void T440f1308(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_procedure */
extern void T440f1965(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].finish */
extern void T730f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_finish */
extern void T730f25(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].off */
extern T1 T1383f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].after */
extern T1 T1383f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_292 */
extern void T440f1307(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_291 */
extern void T440f1306(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_query_synonym */
extern void T440f1964(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].back */
extern void T734f21(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_back */
extern void T734f28(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].add_traversing_cursor */
extern void T734f29(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_traversing_cursor */
extern void T734f30(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_position */
extern void T1384f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left */
extern void T734f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left_cursor */
extern void T734f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_QUERY].put */
extern void T734f31(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_right */
extern void T734f34(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_right */
extern void T734f33(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].put_last */
extern void T734f32(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].index */
extern T6 T1384f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_index */
extern T6 T734f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].forth */
extern void T734f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_forth */
extern void T734f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].before */
extern T1 T734f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_before */
extern T1 T734f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].before */
extern T1 T1384f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_query_synonym */
extern T0* T440f878(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_290 */
extern void T440f1305(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_289 */
extern void T440f1304(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_288 */
extern void T440f1303(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_287 */
extern void T440f1302(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_query */
extern void T440f1963(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].finish */
extern void T734f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_finish */
extern void T734f25(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].off */
extern T1 T1384f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].after */
extern T1 T1384f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_286 */
extern void T440f1301(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_285 */
extern void T440f1300(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_284 */
extern void T440f1299(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_283 */
extern void T440f1298(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_282 */
extern void T440f1297(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_281 */
extern void T440f1296(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].force */
extern void T1068f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].fill_with */
extern void T1070f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].extend */
extern void T1070f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T1068f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T1070f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_clause */
extern T0* T403f166(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CLAUSE.make */
extern T0* T1069c4(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.feature_keyword */
extern unsigned char ge808os11726;
extern T0* ge808ov11726;
extern T0* T81f615(GE_context* ac, T0* C);
/* ET_KEYWORD.make_feature */
extern T0* T397c84(GE_context* ac);
/* ET_FEATURE_CLAUSE.tokens */
extern T0* T1069f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_any_clients */
extern T0* T440f877(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_client */
extern T0* T440f875(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_client */
extern T0* T403f333(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_280 */
extern void T440f1295(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_279 */
extern void T440f1294(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_278 */
extern void T440f1293(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_277 */
extern void T440f1292(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].force */
extern void T1071f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].fill_with */
extern void T1073f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].extend */
extern void T1073f10(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE_LIST.put_first */
extern void T1072f5(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE_LIST.fixed_array */
extern unsigned char ge522os12622;
extern T0* ge522ov12622;
extern T0* T1072f3(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].default_create */
extern T0* T1068c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_276 */
extern void T440f1291(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T1071f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T1073f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_clauses */
extern T0* T403f165(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CLAUSE_LIST.make_with_capacity */
extern T0* T1072c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].make */
extern T0* T1068f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].make_empty */
extern T0* T1070c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_275 */
extern void T440f1290(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_features */
extern void T440f1962(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_274 */
extern void T440f1289(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_273 */
extern void T440f1288(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_272 */
extern void T440f1287(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].force */
extern void T1178f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_ITEM].fill_with */
extern void T1180f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_ITEM].extend */
extern void T1180f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T1178f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T1180f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_comma */
extern T0* T403f164(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_271 */
extern void T440f1286(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].force */
extern void T1181f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_LIST].fill_with */
extern void T1183f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_LIST].extend */
extern void T1183f10(GE_context* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.put_first */
extern void T1321f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_270 */
extern void T440f1285(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T1181f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T1183f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_types */
extern T0* T403f163(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACED_TYPE_LIST.set_left_brace */
extern void T1321f11(GE_context* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern T0* T1321c9(GE_context* ac, T6 a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern void T1321f9p1(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_269 */
extern void T440f1284(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_268 */
extern void T440f1283(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_267 */
extern void T440f1282(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_266 */
extern void T440f1281(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].force */
extern void T1033f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE].fill_with */
extern void T1035f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE].extend */
extern void T1035f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T1033f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T1035f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_procedure */
extern T0* T403f162(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_PROCEDURE.make */
extern T0* T1230c9(GE_context* ac, T0* a1, T0* a2);
/* ET_CONVERT_PROCEDURE.tokens */
extern T0* T1230f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_265 */
extern void T440f1280(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_convert_function */
extern T0* T403f161(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FUNCTION.make */
extern T0* T1229c8(GE_context* ac, T0* a1, T0* a2);
/* ET_CONVERT_FUNCTION.tokens */
extern T0* T1229f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_264 */
extern void T440f1279(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].force */
extern void T1036f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].fill_with */
extern void T1038f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].extend */
extern void T1038f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T1036f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T1038f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_feature_comma */
extern T0* T403f160(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_263 */
extern void T440f1278(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].force */
extern void T1039f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].fill_with */
extern void T1041f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].extend */
extern void T1041f10(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_FEATURE_LIST.put_first */
extern void T1040f9(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_FEATURE_LIST.fixed_array */
extern unsigned char ge513os12622;
extern T0* ge513ov12622;
extern T0* T1040f7(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T1036c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_262 */
extern void T440f1277(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T1039f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T1041f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_features */
extern T0* T403f159(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern T0* T1040c8(GE_context* ac, T6 a1);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern void T1040f8p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].make */
extern T0* T1036f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].make_empty */
extern T0* T1038c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.convert_keyword */
extern unsigned char ge808os11711;
extern T0* ge808ov11711;
extern T0* T81f614(GE_context* ac, T0* C);
/* ET_KEYWORD.make_convert */
extern T0* T397c83(GE_context* ac);
/* ET_CONVERT_FEATURE_LIST.tokens */
extern T0* T1040f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_261 */
extern void T440f1276(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_260 */
extern void T440f1275(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_259 */
extern void T440f1274(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_258 */
extern void T440f1273(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_257 */
extern void T440f1272(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_256 */
extern void T440f1271(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T1079f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T1081f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_name_comma */
extern T0* T403f156(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_255 */
extern void T440f1270(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].force */
extern void T1044f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR].fill_with */
extern void T1046f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR].extend */
extern void T1046f10(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR.put_first */
extern void T1045f17(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR.fixed_array */
extern T0* T1045f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_254 */
extern void T440f1269(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].aliased_resized_area */
extern T0* T1044f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATOR].aliased_resized_area */
extern T0* T1046f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_creator */
extern T0* T403f158(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CREATOR.make_with_capacity */
extern T0* T1045c16(GE_context* ac, T0* a1, T6 a2);
/* ET_CREATOR.make_feature_name_list_with_capacity */
extern void T1045f18(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.creation_keyword */
extern unsigned char ge808os11713;
extern T0* ge808ov11713;
extern T0* T81f618(GE_context* ac, T0* C);
/* ET_KEYWORD.make_creation */
extern T0* T397c87(GE_context* ac);
/* ET_CREATOR.tokens */
extern T0* T1045f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_253 */
extern void T440f1268(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_252 */
extern void T440f1267(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_251 */
extern void T440f1266(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_250 */
extern void T440f1265(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_249 */
extern void T440f1264(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_248 */
extern void T440f1263(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_247 */
extern void T440f1262(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_246 */
extern void T440f1261(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_245 */
extern void T440f1260(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_244 */
extern void T440f1259(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_243 */
extern void T440f1258(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_242 */
extern void T440f1257(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_241 */
extern void T440f1256(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_240 */
extern void T440f1255(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].force */
extern void T1047f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR_LIST].fill_with */
extern void T1048f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR_LIST].extend */
extern void T1048f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T1047f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T1048f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_239 */
extern void T440f1254(GE_context* ac, T0* C);
/* ET_CREATOR_LIST.put_first */
extern void T834f10(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.fixed_array */
extern unsigned char ge517os12622;
extern T0* ge517ov12622;
extern T0* T834f7(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].default_create */
extern T0* T1044c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_238 */
extern void T440f1253(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_creators */
extern T0* T403f157(GE_context* ac, T0* C, T6 a1);
/* ET_CREATOR_LIST.make_with_capacity */
extern T0* T834c9(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].make */
extern T0* T1044f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].make_empty */
extern T0* T1046c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_237 */
extern void T440f1252(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_236 */
extern void T440f1251(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_235 */
extern void T440f1250(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_234 */
extern void T440f1249(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_233 */
extern void T440f1248(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].force */
extern void T1123f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].fill_with */
extern void T1124f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].extend */
extern void T1124f10(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.put_first */
extern void T501f9(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.fixed_array */
extern T0* T501f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_232 */
extern void T440f1247(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T1123f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T1124f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_keyword_feature_name_list */
extern T0* T403f155(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern T0* T501c8(GE_context* ac, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern void T501f8p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.redefine_keyword */
extern unsigned char ge808os11746;
extern T0* ge808ov11746;
extern T0* T81f622(GE_context* ac, T0* C);
/* ET_KEYWORD.make_redefine */
extern T0* T397c91(GE_context* ac);
/* ET_KEYWORD_FEATURE_NAME_LIST.tokens */
extern T0* T501f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_231 */
extern void T440f1246(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_230 */
extern void T440f1245(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_229 */
extern void T440f1244(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_228 */
extern void T440f1243(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_227 */
extern void T440f1242(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_226 */
extern void T440f1241(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_225 */
extern void T440f1240(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_224 */
extern void T440f1239(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_223 */
extern void T440f1238(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_222 */
extern void T440f1237(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_221 */
extern void T440f1236(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_220 */
extern void T440f1235(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_219 */
extern void T440f1234(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_218 */
extern void T440f1233(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_217 */
extern void T440f1232(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_216 */
extern void T440f1231(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_215 */
extern void T440f1230(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T1011f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T1012f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_client_comma */
extern T0* T440f876(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_client_comma */
extern T0* T403f334(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_214 */
extern void T440f1229(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_213 */
extern void T440f1228(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].force */
extern void T1013f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLIENTS].fill_with */
extern void T1015f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLIENTS].extend */
extern void T1015f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_212 */
extern void T440f1227(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_211 */
extern void T440f1226(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T1013f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T1015f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_clients */
extern T0* T403f154(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CLIENTS.set_left_brace */
extern void T1014f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.make_with_capacity */
extern T0* T1014c19(GE_context* ac, T6 a1);
/* ET_CLIENTS.make_with_capacity */
extern void T1014f19p1(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENTS.tokens */
extern T0* T1014f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_210 */
extern void T440f1225(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_209 */
extern void T440f1224(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_none_clients */
extern T0* T403f153(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.make */
extern T0* T1014c16(GE_context* ac);
/* ET_CLIENTS.make */
extern void T1014f16p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_208 */
extern void T440f1223(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_207 */
extern void T440f1222(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_206 */
extern void T440f1221(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].force */
extern void T1074f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_EXPORT].fill_with */
extern void T1076f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_EXPORT].extend */
extern void T1076f10(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.put_first */
extern void T1075f11(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.fixed_array */
extern T0* T1075f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_205 */
extern void T440f1220(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T1074f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T1076f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_export */
extern T0* T403f151(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_with_capacity */
extern T0* T1075c10(GE_context* ac, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_feature_name_list_with_capacity */
extern void T1075f12(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_204 */
extern void T440f1219(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_203 */
extern void T440f1218(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].force */
extern void T1058f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT].fill_with */
extern void T1060f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT].extend */
extern void T1060f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].aliased_resized_area */
extern T0* T1058f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPORT].aliased_resized_area */
extern T0* T1060f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_null_export */
extern T0* T403f152(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_202 */
extern void T440f1217(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201 */
extern void T440f1216(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_1_200 */
extern void T440f995(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_200 */
extern void T440f1215(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_199 */
extern void T440f1214(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_all_export */
extern T0* T403f150(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALL_EXPORT.make */
extern T0* T1227c7(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.all_keyword */
extern unsigned char ge808os11703;
extern T0* ge808ov11703;
extern T0* T81f764(GE_context* ac, T0* C);
/* ET_KEYWORD.make_all */
extern T0* T397c48(GE_context* ac);
/* ET_ALL_EXPORT.tokens */
extern T0* T1227f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_198 */
extern void T440f1213(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].force */
extern void T1061f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT_LIST].fill_with */
extern void T1062f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT_LIST].extend */
extern void T1062f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T1061f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T1062f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_197 */
extern void T440f1212(GE_context* ac, T0* C);
/* ET_EXPORT_LIST.put_first */
extern void T500f8(GE_context* ac, T0* C, T0* a1);
/* ET_EXPORT_LIST.fixed_array */
extern unsigned char ge520os12622;
extern T0* ge520ov12622;
extern T0* T500f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].default_create */
extern T0* T1058c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_196 */
extern void T440f1211(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_exports */
extern T0* T403f149(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_EXPORT_LIST.make_with_capacity */
extern T0* T500c7(GE_context* ac, T6 a1);
/* ET_EXPORT_LIST.make_with_capacity */
extern void T500f7p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].make */
extern T0* T1058f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].make_empty */
extern T0* T1060c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.export_keyword */
extern unsigned char ge808os11724;
extern T0* ge808ov11724;
extern T0* T81f609(GE_context* ac, T0* C);
/* ET_KEYWORD.make_export */
extern T0* T397c78(GE_context* ac);
/* ET_EXPORT_LIST.tokens */
extern T0* T500f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_195 */
extern void T440f1210(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_194 */
extern void T440f1209(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_193 */
extern void T440f1208(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_192 */
extern void T440f1207(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_191 */
extern void T440f1206(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_190 */
extern void T440f1205(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].force */
extern void T1167f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_ITEM].fill_with */
extern void T1169f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_ITEM].extend */
extern void T1169f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T1167f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T1169f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_rename_comma */
extern T0* T403f148(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_189 */
extern void T440f1204(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_rename */
extern T0* T403f147(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_188 */
extern void T440f1203(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].force */
extern void T1170f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_LIST].fill_with */
extern void T1171f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_LIST].extend */
extern void T1171f10(GE_context* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.put_first */
extern void T499f9(GE_context* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.fixed_array */
extern unsigned char ge547os12622;
extern T0* ge547ov12622;
extern T0* T499f7(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].default_create */
extern T0* T1167c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_187 */
extern void T440f1202(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T1170f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T1171f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_renames */
extern T0* T403f146(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_RENAME_LIST.make_with_capacity */
extern T0* T499c8(GE_context* ac, T6 a1);
/* ET_RENAME_LIST.make_with_capacity */
extern void T499f8p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].make */
extern T0* T1167f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].make_empty */
extern T0* T1169c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.rename_keyword */
extern unsigned char ge808os11748;
extern T0* ge808ov11748;
extern T0* T81f611(GE_context* ac, T0* C);
/* ET_KEYWORD.make_rename */
extern T0* T397c80(GE_context* ac);
/* ET_RENAME_LIST.tokens */
extern T0* T499f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_186 */
extern void T440f1201(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_185 */
extern void T440f1200(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_184 */
extern void T440f1199(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_183 */
extern void T440f1198(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_182 */
extern void T440f1197(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T1158f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T1159f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parent_semicolon */
extern T0* T403f145(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_181 */
extern void T440f1196(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_180 */
extern void T440f1195(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].force */
extern void T1160f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_LIST].fill_with */
extern void T1161f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_LIST].extend */
extern void T1161f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_179 */
extern void T440f1194(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_178 */
extern void T440f1193(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_177 */
extern void T440f1192(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T1160f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T1161f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parents */
extern T0* T403f144(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_176 */
extern void T440f1191(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_175 */
extern void T440f1190(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_174 */
extern void T440f1189(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_173 */
extern void T440f1188(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_172 */
extern void T440f1187(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_171 */
extern void T440f1186(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].force */
extern void T1156f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT].fill_with */
extern void T1157f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT].extend */
extern void T1157f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].aliased_resized_area */
extern T0* T1156f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT].aliased_resized_area */
extern T0* T1157f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_parent */
extern T0* T440f874(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_AST_FACTORY.new_parent */
extern T0* T403f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_CLASS.has_formal_parameter */
extern T1 T82f131(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_parameter */
extern T1 T644f8(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_170 */
extern void T440f1185(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_169 */
extern void T440f1184(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_168 */
extern void T440f1183(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_167 */
extern void T440f1182(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_166 */
extern void T440f1181(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_165 */
extern void T440f1180(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_164 */
extern void T440f1179(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_163 */
extern void T440f1178(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_162 */
extern void T440f1177(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_161 */
extern void T440f1176(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_160 */
extern void T440f1175(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_159 */
extern void T440f1174(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].force */
extern void T1150f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_OBSOLETE].fill_with */
extern void T1152f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_OBSOLETE].extend */
extern void T1152f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T1150f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T1152f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_obsolete_message */
extern T0* T403f143(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_158 */
extern void T440f1173(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_157 */
extern void T440f1172(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].force */
extern void T1021f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T1023f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].extend */
extern void T1023f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1021f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1023f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter_semicolon */
extern T0* T403f142(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter */
extern T0* T403f140(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.make */
extern T0* T1224c6(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_156 */
extern void T440f1171(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_155 */
extern void T440f1170(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].force */
extern void T1024f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].fill_with */
extern void T1026f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].extend */
extern void T1026f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.add_to_constraint_actual_parameter_list */
extern void T440f1961(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.put_first */
extern void T1025f13(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge881os12622;
extern T0* ge881ov12622;
extern T0* T1025f8(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T1021c3(GE_context* ac);
/* ET_AST_FACTORY.new_constraint_labeled_comma_actual_parameter */
extern T0* T403f141(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T1225c6(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.first */
extern T0* T1025f7(GE_context* ac, T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T1025f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_154 */
extern void T440f1169(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_153 */
extern void T440f1168(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_152 */
extern void T440f1167(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_151 */
extern void T440f1166(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_150 */
extern void T440f1165(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1024f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1026f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_actual_parameters */
extern T0* T403f138(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T1025f14(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T1025c12(GE_context* ac, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T1025f12p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T1021f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T1023c5(GE_context* ac, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T1025f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_149 */
extern void T440f1164(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_148 */
extern void T440f1163(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_147 */
extern void T440f1162(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_146 */
extern void T440f1161(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_145 */
extern void T440f1160(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_144 */
extern void T440f1159(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_constraint_actual_parameter_comma */
extern T0* T403f139(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_143 */
extern void T440f1158(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_constraint_named_type */
extern T0* T440f871(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_constraint_named_type */
extern T0* T403f327(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.make */
extern T0* T1219c7(GE_context* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_generic_named_type */
extern T0* T403f326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.make */
extern T0* T1426c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_142 */
extern void T440f1157(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_141 */
extern void T440f1156(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_140 */
extern void T440f1155(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_139 */
extern void T440f1154(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_138 */
extern void T440f1153(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_137 */
extern void T440f1152(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_136 */
extern void T440f1151(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_135 */
extern void T440f1150(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].force */
extern void T1030f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].fill_with */
extern void T1032f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].extend */
extern void T1032f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T1030f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T1032f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_134 */
extern void T440f1149(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_133 */
extern void T440f1148(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_132 */
extern void T440f1147(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_131 */
extern void T440f1146(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_130 */
extern void T440f1145(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_129 */
extern void T440f1144(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_128 */
extern void T440f1143(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_127 */
extern void T440f1142(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_126 */
extern void T440f1141(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_125 */
extern void T440f1140(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_124 */
extern void T440f1139(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_123 */
extern void T440f1138(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_122 */
extern void T440f1137(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_121 */
extern void T440f1136(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_120 */
extern void T440f1135(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_119 */
extern void T440f1134(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_118 */
extern void T440f1133(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_117 */
extern void T440f1132(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_116 */
extern void T440f1131(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_115 */
extern void T440f1130(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_114 */
extern void T440f1129(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_113 */
extern void T440f1128(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_112 */
extern void T440f1127(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_111 */
extern void T440f1126(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_110 */
extern void T440f1125(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_109 */
extern void T440f1124(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_108 */
extern void T440f1123(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_107 */
extern void T440f1122(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_106 */
extern void T440f1121(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_105 */
extern void T440f1120(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_104 */
extern void T440f1119(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_103 */
extern void T440f1118(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_102 */
extern void T440f1117(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_101 */
extern void T440f1116(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_100 */
extern void T440f1115(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_99 */
extern void T440f1114(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_98 */
extern void T440f1113(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_97 */
extern void T440f1112(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_96 */
extern void T440f1111(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_95 */
extern void T440f1110(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_94 */
extern void T440f1109(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_93 */
extern void T440f1108(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_92 */
extern void T440f1107(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_91 */
extern void T440f1106(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_90 */
extern void T440f1105(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_89 */
extern void T440f1104(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_88 */
extern void T440f1103(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_87 */
extern void T440f1102(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_86 */
extern void T440f1101(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_85 */
extern void T440f1100(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].force */
extern void T1027f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].fill_with */
extern void T1029f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].extend */
extern void T1029f10(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.put_first */
extern void T1028f13(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.fixed_array */
extern T0* T1028f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_84 */
extern void T440f1099(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T1027f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T1029f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_creator */
extern T0* T403f135(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern T0* T1028c12(GE_context* ac, T6 a1);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern void T1028f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.tokens */
extern T0* T1028f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_83 */
extern void T440f1098(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_82 */
extern void T440f1097(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_81 */
extern void T440f1096(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_80 */
extern void T440f1095(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_79 */
extern void T440f1094(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T1089f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T1091f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.register_constraint */
extern void T440f1960(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].force_last */
extern void T898f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].resize */
extern void T898f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_capacity */
extern T6 T898f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].extendible */
extern T1 T898f7(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constrained_formal_parameter */
extern T0* T403f134(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_type_mark */
extern void T1218f81(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make */
extern T0* T1218c80(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make_unconstrained */
extern void T1218f83(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.arrow_symbol */
extern unsigned char ge808os11678;
extern T0* ge808ov11678;
extern T0* T81f587(GE_context* ac, T0* C);
/* ET_SYMBOL.make_arrow */
extern T0* T346c90(GE_context* ac);
/* ET_CONSTRAINED_FORMAL_PARAMETER.tokens */
extern T0* T1218f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.dummy_constraint */
extern T0* T440f870(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_78 */
extern void T440f1093(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_77 */
extern void T440f1092(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_76 */
extern void T440f1091(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_75 */
extern void T440f1090(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_74 */
extern void T440f1089(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_73 */
extern void T440f1088(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_formal_parameter */
extern T0* T403f133(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.set_type_mark */
extern void T1090f80(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.make */
extern T0* T1090c79(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_72 */
extern void T440f1087(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_71 */
extern void T440f1086(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_70 */
extern void T440f1085(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].force */
extern void T1092f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].fill_with */
extern void T1094f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].extend */
extern void T1094f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1092f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1094f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_parameter_comma */
extern T0* T403f132(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_69 */
extern void T440f1084(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].force */
extern void T1095f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].fill_with */
extern void T1096f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].extend */
extern void T1096f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T644f31(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_index */
extern void T1218f82(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.set_index */
extern void T1090f81(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.capacity */
extern T6 T644f16(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T644f31p1(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge527os12622;
extern T0* ge527ov12622;
extern T0* T644f15(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T1092c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_68 */
extern void T440f1083(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1095f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1096f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_parameters */
extern T0* T403f131(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_PARAMETER_LIST.set_left_bracket */
extern void T644f32(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern T0* T644c26(GE_context* ac, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern void T644f26p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T1092f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].make_empty */
extern T0* T1094c5(GE_context* ac, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.tokens */
extern T0* T644f13(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_67 */
extern void T440f1082(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_66 */
extern void T440f1081(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_formal_parameters */
extern void T440f1957(GE_context* ac, T0* C, T0* a1);
extern T1 T440f1957ot1(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].wipe_out */
extern void T898f11(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].keep_head */
extern void T1032f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].set_count */
extern void T1032f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].move_all_cursors_after */
extern void T898f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_next_cursor */
extern void T1488f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_after */
extern void T1488f6(GE_context* ac, T0* C);
/* ET_CLASS.set_formal_parameters */
extern void T82f242(GE_context* ac, T0* C, T0* a1);
extern T1 T82f242ot1(T0* a1);
/* ET_FORMAL_PARAMETER_LIST.remove */
extern void T644f27(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T1092f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T1094f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].set_count */
extern void T1094f9(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint */
extern void T1218f85(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].item */
extern T0* T898f6(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_65 */
extern void T440f1080(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_64 */
extern void T440f1079(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_63 */
extern void T440f1078(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_62 */
extern void T440f1077(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_61 */
extern void T440f1076(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_60 */
extern void T440f1075(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_59 */
extern void T440f1074(GE_context* ac, T0* C);
/* ET_CLASS.set_external_keyword */
extern void T82f240(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_frozen_keyword */
extern void T82f239(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_class_mark */
extern void T82f245(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_class_keyword */
extern void T82f238(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_class */
extern T0* T440f868(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_in_system */
extern void T82f248(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.set_time_stamp */
extern void T82f237(GE_context* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.add_last_local_class */
extern void T471f69(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_non_override_class */
extern void T471f84(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].force_last */
extern void T1322f22(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_override_class */
extern void T471f83(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_ignored_class */
extern void T471f82(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_name */
extern void T82f247(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.reset */
extern void T82f246(GE_context* ac, T0* C);
/* ET_CLASS.reset_parsed */
extern void T82f236(GE_context* ac, T0* C);
/* ET_CLASS.reset_ancestors_built */
extern void T82f235(GE_context* ac, T0* C);
/* ET_CLASS.reset_features_flattened */
extern void T82f234(GE_context* ac, T0* C);
/* ET_CLASS.reset_interface_checked */
extern void T82f233(GE_context* ac, T0* C);
/* ET_CLASS.reset_implementation_checked */
extern void T82f232(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.set_modified */
extern void T471f68(GE_context* ac, T0* C, T1 a1);
/* KL_UNIX_FILE_SYSTEM.same_pathnames */
extern T1 T121f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_PATHNAME.same_pathname */
extern T1 T539f14(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.is_subpathname */
extern T1 T539f16(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.string_ */
extern T0* T539f18(GE_context* ac, T0* C);
/* KL_PATHNAME.string_equality_tester */
extern T0* T539f19(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.same_pathnames */
extern T1 T120f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_PATHNAME.same_case_insensitive */
extern T1 T539f13(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.is_case_insensitive_subpathname */
extern T1 T539f15(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.case_insensitive_string_equality_tester */
extern T0* T539f17(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.file_system */
extern T0* T440f926(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.unix_file_system */
extern T0* T440f935(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.windows_file_system */
extern T0* T440f934(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.operating_system */
extern T0* T440f933(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvscn1a_error */
extern void T36f226(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvscn1a */
extern T0* T532c768(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvscn1a_error */
extern void T77f227(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MASTER_CLASS.first_local_class */
extern T0* T471f23(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.has_local_class */
extern T1 T471f22(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_hidden_class */
extern T1 T471f27(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].has */
extern T1 T1322f13(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_ignored_class */
extern T1 T471f26(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_non_override_class */
extern T1 T471f25(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_override_class */
extern T1 T471f24(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_58 */
extern void T440f1073(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_57 */
extern void T440f1072(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_56 */
extern void T440f1071(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_55 */
extern void T440f1070(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].force */
extern void T1109f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].fill_with */
extern void T1111f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].extend */
extern void T1111f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].aliased_resized_area */
extern T0* T1109f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].aliased_resized_area */
extern T0* T1111f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_indexing_term_comma */
extern T0* T403f130(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_54 */
extern void T440f1069(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].force */
extern void T1106f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM].fill_with */
extern void T1108f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM].extend */
extern void T1108f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].aliased_resized_area */
extern T0* T1106f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INDEXING_TERM].aliased_resized_area */
extern T0* T1108f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_custom_attribute */
extern T0* T403f129(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CUSTOM_ATTRIBUTE.make */
extern T0* T1217c5(GE_context* ac, T0* a1, T0* a2);
/* ET_CUSTOM_ATTRIBUTE.tokens */
extern T0* T1217f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_53 */
extern void T440f1068(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_52 */
extern void T440f1067(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_51 */
extern void T440f1066(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_50 */
extern void T440f1065(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_49 */
extern void T440f1064(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_48 */
extern void T440f1063(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_47 */
extern void T440f1062(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_46 */
extern void T440f1061(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_45 */
extern void T440f1060(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].force */
extern void T1112f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].fill_with */
extern void T1114f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].extend */
extern void T1114f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_44 */
extern void T440f1059(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].aliased_resized_area */
extern T0* T1112f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].aliased_resized_area */
extern T0* T1114f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_indexing_terms */
extern T0* T403f128(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_43 */
extern void T440f1058(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].force */
extern void T1103f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_ITEM].fill_with */
extern void T1105f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_ITEM].extend */
extern void T1105f10(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_indexing_semicolon */
extern T0* T403f126(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_42 */
extern void T440f1057(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_41 */
extern void T440f1056(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].aliased_resized_area */
extern T0* T1103f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INDEXING_ITEM].aliased_resized_area */
extern T0* T1105f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_tagged_indexing */
extern T0* T403f125(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_40 */
extern void T440f1055(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_indexing */
extern T0* T403f127(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_39 */
extern void T440f1054(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_38 */
extern void T440f1053(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].force */
extern void T1100f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_LIST].fill_with */
extern void T1102f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_LIST].extend */
extern void T1102f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].aliased_resized_area */
extern T0* T1100f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INDEXING_LIST].aliased_resized_area */
extern T0* T1102f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_37 */
extern void T440f1052(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_36 */
extern void T440f1051(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_35 */
extern void T440f1050(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_34 */
extern void T440f1049(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_indexings */
extern T0* T403f123(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_33 */
extern void T440f1048(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_32 */
extern void T440f1047(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_31 */
extern void T440f1046(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_30 */
extern void T440f1045(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_29 */
extern void T440f1044(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_28 */
extern void T440f1043(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_27 */
extern void T440f1042(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_26 */
extern void T440f1041(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_25 */
extern void T440f1040(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_24 */
extern void T440f1039(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_23 */
extern void T440f1038(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_22 */
extern void T440f1037(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_21 */
extern void T440f1036(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_20 */
extern void T440f1035(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_19 */
extern void T440f1034(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_18 */
extern void T440f1033(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_17 */
extern void T440f1032(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_16 */
extern void T440f1031(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_providers */
extern void T440f1951(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].wipe_out */
extern void T881f38(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].slots_wipe_out */
extern void T881f54(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].clashes_wipe_out */
extern void T881f53(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].key_storage_wipe_out */
extern void T881f52(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].item_storage_wipe_out */
extern void T881f51(GE_context* ac, T0* C);
/* SPECIAL [ET_NAMED_CLASS].keep_head */
extern void T1475f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_CLASS].set_count */
extern void T1475f9(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].move_all_cursors_after */
extern void T881f50(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].forth */
extern void T881f41(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].put_last */
extern void T881f40(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].compress */
extern void T881f58(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].key_storage_keep_head */
extern void T881f68(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].item_storage_keep_head */
extern void T881f67(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].move_all_cursors */
extern void T881f66(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].key_storage_put */
extern void T881f65(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].item_for_iteration */
extern T0* T881f17(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].after */
extern T1 T881f22(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].cursor_after */
extern T1 T881f24(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].start */
extern void T881f39(GE_context* ac, T0* C);
/* ET_CLASS.set_providers */
extern void T82f241(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].make */
extern T0* T881c36(GE_context* ac, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].set_internal_cursor */
extern void T881f48(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].make_slots */
extern void T881f46(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].make_clashes */
extern void T881f45(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].make_key_storage */
extern void T881f44(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].make_item_storage */
extern void T881f43(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].make */
extern T0* T1477f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_CLASS].make_empty */
extern T0* T1475c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].default_create */
extern T0* T1477c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_15 */
extern void T440f1030(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_to_inheritance_end */
extern void T440f1950(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.set_class_to_end */
extern void T440f1949(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CLASS.set_end_keyword */
extern void T82f268(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_second_indexing */
extern void T82f267(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_invariants */
extern void T82f266(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_feature_clauses */
extern void T82f265(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_convert_features */
extern void T82f264(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_creators */
extern void T82f263(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_parent_clause */
extern void T82f262(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_obsolete_message */
extern void T82f261(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT.set_end_keyword */
extern void T467f12(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_LIST.last */
extern T0* T468f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_14 */
extern void T440f1029(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_13 */
extern void T440f1028(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_12 */
extern void T440f1027(GE_context* ac, T0* C);
/* ET_CLASS.set_first_indexing */
extern void T82f260(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_11 */
extern void T440f1026(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_10 */
extern void T440f1025(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_9 */
extern void T440f1024(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_8 */
extern void T440f1023(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_7 */
extern void T440f1022(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_6 */
extern void T440f1021(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_5 */
extern void T440f1020(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_4 */
extern void T440f1019(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_3 */
extern void T440f1018(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_2 */
extern void T440f1017(GE_context* ac, T0* C);
/* ET_CLASS.set_leading_break */
extern void T82f259(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_1 */
extern void T440f1016(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_push_last_value */
extern void T440f971(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].force */
extern void T957f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].fill_with */
extern void T959f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].extend */
extern void T959f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T957f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T959f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].force */
extern void T955f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].fill_with */
extern void T956f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].extend */
extern void T956f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T955f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T956f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].force */
extern void T949f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_VOID].fill_with */
extern void T951f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_VOID].extend */
extern void T951f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].aliased_resized_area */
extern T0* T949f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_VOID].aliased_resized_area */
extern T0* T951f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].force */
extern void T946f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].fill_with */
extern void T948f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].extend */
extern void T948f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T946f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T948f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].force */
extern void T943f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].fill_with */
extern void T945f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].extend */
extern void T945f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T943f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T945f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].force */
extern void T941f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RESULT].fill_with */
extern void T942f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RESULT].extend */
extern void T942f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].aliased_resized_area */
extern T0* T941f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RESULT].aliased_resized_area */
extern T0* T942f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T938f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T940f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].force */
extern void T933f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].fill_with */
extern void T935f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].extend */
extern void T935f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T933f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T935f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T930f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T932f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].force */
extern void T927f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FREE_OPERATOR].fill_with */
extern void T929f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FREE_OPERATOR].extend */
extern void T929f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T927f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T929f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].force */
extern void T925f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CURRENT].fill_with */
extern void T926f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CURRENT].extend */
extern void T926f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].aliased_resized_area */
extern T0* T925f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CURRENT].aliased_resized_area */
extern T0* T926f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].force */
extern void T919f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BREAK].fill_with */
extern void T921f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BREAK].extend */
extern void T921f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].aliased_resized_area */
extern T0* T919f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BREAK].aliased_resized_area */
extern T0* T921f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T916f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T918f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BIT_CONSTANT].force */
extern void T913f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BIT_CONSTANT].fill_with */
extern void T915f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BIT_CONSTANT].extend */
extern void T915f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BIT_CONSTANT].aliased_resized_area */
extern T0* T913f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BIT_CONSTANT].aliased_resized_area */
extern T0* T915f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].force */
extern void T911f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_POSITION].fill_with */
extern void T912f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_POSITION].extend */
extern void T912f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].aliased_resized_area */
extern T0* T911f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_POSITION].aliased_resized_area */
extern T0* T912f3(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].force */
extern void T906f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].fill_with */
extern void T908f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].extend */
extern void T908f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T906f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T908f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].force */
extern void T903f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_KEYWORD].fill_with */
extern void T905f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_KEYWORD].extend */
extern void T905f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T903f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T905f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.accept */
extern void T440f970(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action */
extern void T440f968(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_error */
extern void T440f994(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1600_1799 */
extern void T440f993(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_eof_expected_error */
extern void T440f1015(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1400_1599 */
extern void T440f992(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1200_1399 */
extern void T440f991(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1000_1199 */
extern void T440f990(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_800_999 */
extern void T440f989(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_600_799 */
extern void T440f988(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_400_599 */
extern void T440f987(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_200_399 */
extern void T440f986(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_0_199 */
extern void T440f985(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.read_token */
extern void T440f967(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_execute_action */
extern void T440f984(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.less */
extern void T440f1014(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_break */
extern void T440f1003(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_comment */
extern T0* T403f17(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_break */
extern T0* T403f16(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_underscored_real_constant */
extern T0* T403f15(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_position */
extern void T1208f40(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_REAL_CONSTANT.make */
extern T0* T1208c35(GE_context* ac, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.make_leaf */
extern void T1208f41(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_literal */
extern T0* T440f939(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_regular_real_constant */
extern T0* T403f14(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_position */
extern void T1207f40(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_REAL_CONSTANT.make */
extern T0* T1207c35(GE_context* ac, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.make_leaf */
extern void T1207f41(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_binary_integer_constant */
extern T0* T403f13(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_position */
extern void T1206f71(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_BINARY_INTEGER_CONSTANT.make */
extern T0* T1206c66(GE_context* ac, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.compute_value */
extern void T1206f73(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.make_leaf */
extern void T1206f72(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_octal_integer_constant */
extern T0* T403f12(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_position */
extern void T1205f71(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_OCTAL_INTEGER_CONSTANT.make */
extern T0* T1205c66(GE_context* ac, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.compute_value */
extern void T1205f73(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.make_leaf */
extern void T1205f72(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_hexadecimal_integer_constant */
extern T0* T403f11(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_position */
extern void T1204f71(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make */
extern T0* T1204c66(GE_context* ac, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.compute_value */
extern void T1204f73(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make_leaf */
extern void T1204f72(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_silu_error */
extern void T36f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_silu_error */
extern void T77f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sifu_error */
extern void T36f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sifu_error */
extern void T77f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_underscored_integer_constant */
extern T0* T403f10(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_position */
extern void T1203f71(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make */
extern T0* T1203c66(GE_context* ac, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.compute_value */
extern void T1203f73(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make_leaf */
extern void T1203f72(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_regular_integer_constant */
extern T0* T403f9(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_position */
extern void T1202f71(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_INTEGER_CONSTANT.make */
extern T0* T1202c66(GE_context* ac, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.compute_value */
extern void T1202f73(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.make_leaf */
extern void T1202f72(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_bit_constant */
extern T0* T403f8(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_CONSTANT.set_position */
extern void T914f34(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_BIT_CONSTANT.make */
extern T0* T914c31(GE_context* ac, T0* a1);
/* ET_BIT_CONSTANT.make_leaf */
extern void T914f35(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_ssnp_error */
extern void T36f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnp_error */
extern void T77f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssel_error */
extern void T36f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssel_error */
extern void T77f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnl_error */
extern void T36f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnl_error */
extern void T77f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sssc_error */
extern void T36f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sssc_error */
extern void T77f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sscu_error */
extern void T36f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sscu_error */
extern void T77f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssac_error */
extern void T36f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssac_error */
extern void T77f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssas_error */
extern void T36f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssas_error */
extern void T77f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssao_error */
extern void T36f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssao_error */
extern void T77f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_special_manifest_string */
extern T0* T403f7(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_position */
extern void T1201f40(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_special_manifest_string */
extern T0* T440f942(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.make */
extern T0* T1201c36(GE_context* ac, T0* a1, T0* a2);
/* ET_SPECIAL_MANIFEST_STRING.make_leaf */
extern void T1201f41(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.integer_ */
extern T0* T440f946(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_verbatim_string */
extern T0* T403f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* ET_VERBATIM_STRING.set_position */
extern void T1200f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_verbatim_string */
extern T0* T440f941(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_VERBATIM_STRING.make */
extern T0* T1200c40(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_VERBATIM_STRING.make_leaf */
extern void T1200f45(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.is_verbatim_string_closer */
extern T1 T440f707(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.text */
extern T0* T440f705(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].force_new */
extern void T420f54(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].resize */
extern void T420f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_resize */
extern void T420f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].special_integer_ */
extern T0* T420f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_resize */
extern void T420f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_resize */
extern void T420f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_resize */
extern void T420f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_capacity */
extern T6 T420f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_key */
extern T0* T420f34(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.strings */
extern unsigned char ge1033os23171;
extern T0* ge1033ov23171;
extern T0* T440f925(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.string_equality_tester */
extern T0* T440f932(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.append_text_to_string */
extern void T440f2132(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.append_substring_to_string */
extern void T855f14(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.any_ */
extern T0* T855f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.string_ */
extern T0* T440f924(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.string_buffer */
extern unsigned char ge1033os23172;
extern T0* ge1033ov23172;
extern T0* T440f923(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.text_substring */
extern T0* T440f703(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.append_text_substring_to_string */
extern void T440f2131(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PARSER.process_regular_manifest_string */
extern void T440f1013(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_regular_manifest_string */
extern T0* T403f5(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_position */
extern void T832f40(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_MANIFEST_STRING.make */
extern T0* T832c35(GE_context* ac, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.make_leaf */
extern void T832f36(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_sceq_error */
extern void T36f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sceq_error */
extern void T77f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scqq_error */
extern void T36f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scqq_error */
extern void T77f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scac_error */
extern void T36f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scac_error */
extern void T77f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scas_error */
extern void T36f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scas_error */
extern void T77f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scao_error */
extern void T36f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scao_error */
extern void T77f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_c3_character_constant */
extern T0* T403f4(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_position */
extern void T1199f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_c3_character_constant */
extern T0* T440f940(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.make */
extern T0* T1199c38(GE_context* ac, T0* a1, T3 a2);
/* ET_C3_CHARACTER_CONSTANT.make_leaf */
extern void T1199f43(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_c2_character_constant */
extern void T440f1012(GE_context* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_c2_character_constant */
extern T0* T403f122(GE_context* ac, T0* C, T2 a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.set_position */
extern void T1213f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_C2_CHARACTER_CONSTANT.make */
extern T0* T1213c37(GE_context* ac, T3 a1);
/* ET_C2_CHARACTER_CONSTANT.make_leaf */
extern void T1213f42(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_scsc_error */
extern void T36f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scsc_error */
extern void T77f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sccu_error */
extern void T36f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sccu_error */
extern void T77f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.process_c1_character_constant */
extern void T440f1011(GE_context* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_c1_character_constant */
extern T0* T403f121(GE_context* ac, T0* C, T2 a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.set_position */
extern void T1212f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.make */
extern T0* T1212c37(GE_context* ac, T3 a1);
/* ET_C1_CHARACTER_CONSTANT.make_leaf */
extern void T1212f42(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_sctq_error */
extern void T36f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sctq_error */
extern void T77f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_free_operator */
extern T0* T403f3(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_position */
extern void T928f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FREE_OPERATOR.make_prefix */
extern T0* T928c47(GE_context* ac, T0* a1);
/* ET_FREE_OPERATOR.string_ */
extern T0* T928f10(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.make_token */
extern void T928f51(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_leaf */
extern void T928f52(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_start_condition */
extern void T440f1004(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.more */
extern void T440f1010(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_identifier */
extern void T440f1009(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_detachable_keyword */
extern T0* T403f120(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.set_position */
extern void T397f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.use_detachable_keyword */
extern T1 T440f842(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_reference_keyword */
extern T0* T403f119(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_reference */
extern T0* T397c59(GE_context* ac);
/* ET_EIFFEL_PARSER.use_reference_keyword */
extern T1 T440f840(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_keyword */
extern T0* T403f118(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_position */
extern void T907f19(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_invariant_keyword */
extern T0* T403f117(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_attribute_keyword */
extern T0* T403f116(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_attribute_keyword */
extern T1 T440f836(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_undefine_keyword */
extern T0* T403f115(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.undefine_keyword */
extern unsigned char ge808os11760;
extern T0* ge808ov11760;
extern T0* T81f623(GE_context* ac, T0* C);
/* ET_KEYWORD.make_undefine */
extern T0* T397c92(GE_context* ac);
/* ET_AST_FACTORY.new_separate_keyword */
extern T0* T403f114(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_separate */
extern T0* T397c58(GE_context* ac);
/* ET_AST_FACTORY.new_redefine_keyword */
extern T0* T403f113(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_obsolete_keyword */
extern T0* T403f112(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.obsolete_keyword */
extern unsigned char ge808os11740;
extern T0* ge808ov11740;
extern T0* T81f621(GE_context* ac, T0* C);
/* ET_KEYWORD.make_obsolete */
extern T0* T397c90(GE_context* ac);
/* ET_AST_FACTORY.new_indexing_keyword */
extern T0* T403f111(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.indexing_keyword */
extern unsigned char ge808os11730;
extern T0* ge808ov11730;
extern T0* T81f620(GE_context* ac, T0* C);
/* ET_KEYWORD.make_indexing */
extern T0* T397c89(GE_context* ac);
/* ET_AST_FACTORY.new_external_keyword */
extern T0* T403f110(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.external_keyword */
extern unsigned char ge808os11725;
extern T0* ge808ov11725;
extern T0* T81f619(GE_context* ac, T0* C);
/* ET_KEYWORD.make_external */
extern T0* T397c88(GE_context* ac);
/* ET_AST_FACTORY.new_expanded_keyword */
extern T0* T403f109(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_expanded */
extern T0* T397c57(GE_context* ac);
/* ET_AST_FACTORY.new_deferred_keyword */
extern T0* T403f108(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_creation_keyword */
extern T0* T403f107(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_attached_keyword */
extern T0* T403f106(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_attached_keyword */
extern T1 T440f825(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_variant_keyword */
extern T0* T403f105(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_require_keyword */
extern T0* T403f104(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_inspect_keyword */
extern T0* T403f103(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.inspect_keyword */
extern unsigned char ge808os11733;
extern T0* ge808ov11733;
extern T0* T81f616(GE_context* ac, T0* C);
/* ET_KEYWORD.make_inspect */
extern T0* T397c85(GE_context* ac);
/* ET_AST_FACTORY.new_inherit_keyword */
extern T0* T403f102(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_implies_keyword */
extern T0* T403f101(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.set_position */
extern void T934f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_OPERATOR.make_implies */
extern T0* T934c52(GE_context* ac);
/* ET_AST_FACTORY.new_feature_keyword */
extern T0* T403f100(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_convert_keyword */
extern T0* T403f99(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_current_keyword */
extern T0* T403f98(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.set_position */
extern void T286f35(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_unique_keyword */
extern T0* T403f97(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_select_keyword */
extern T0* T403f96(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.select_keyword */
extern unsigned char ge808os11753;
extern T0* ge808ov11753;
extern T0* T81f613(GE_context* ac, T0* C);
/* ET_KEYWORD.make_select */
extern T0* T397c82(GE_context* ac);
/* ET_AST_FACTORY.new_result_keyword */
extern T0* T403f95(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT.set_position */
extern void T313f34(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_rescue_keyword */
extern T0* T403f94(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_rename_keyword */
extern T0* T403f93(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_prefix_keyword */
extern T0* T403f92(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_frozen_keyword */
extern T0* T403f91(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_frozen */
extern T0* T397c54(GE_context* ac);
/* ET_AST_FACTORY.new_export_keyword */
extern T0* T403f90(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_ensure_keyword */
extern T0* T403f89(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_elseif_keyword */
extern T0* T403f88(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.elseif_keyword */
extern unsigned char ge808os11720;
extern T0* ge808ov11720;
extern T0* T81f608(GE_context* ac, T0* C);
/* ET_KEYWORD.make_elseif */
extern T0* T397c77(GE_context* ac);
/* ET_AST_FACTORY.new_create_keyword */
extern T0* T403f87(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_keyword */
extern T0* T403f86(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.assign_keyword */
extern unsigned char ge808os11705;
extern T0* ge808ov11705;
extern T0* T81f607(GE_context* ac, T0* C);
/* ET_KEYWORD.make_assign */
extern T0* T397c76(GE_context* ac);
/* ET_AST_FACTORY.new_across_keyword */
extern T0* T403f85(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_until_keyword */
extern T0* T403f84(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.until_keyword */
extern unsigned char ge808os11762;
extern T0* ge808ov11762;
extern T0* T81f606(GE_context* ac, T0* C);
/* ET_KEYWORD.make_until */
extern T0* T397c75(GE_context* ac);
/* ET_AST_FACTORY.new_strip_keyword */
extern T0* T403f83(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_retry_keyword */
extern T0* T403f82(GE_context* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.set_position */
extern void T944f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_RETRY_INSTRUCTION.make */
extern T0* T944c13(GE_context* ac);
/* ET_RETRY_INSTRUCTION.make_token */
extern void T944f15(GE_context* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.make_leaf */
extern void T944f16(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.tokens */
extern T0* T944f7(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_local_keyword */
extern T0* T403f81(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_infix_keyword */
extern T0* T403f80(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_false_keyword */
extern T0* T403f79(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.set_position */
extern void T1211f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FALSE_CONSTANT.make */
extern T0* T1211c33(GE_context* ac);
/* ET_FALSE_CONSTANT.make_token */
extern void T1211f37(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.make_leaf */
extern void T1211f38(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.tokens */
extern T0* T1211f11(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_debug_keyword */
extern T0* T403f78(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_class_keyword */
extern T0* T403f77(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_check_keyword */
extern T0* T403f76(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_alias_keyword */
extern T0* T403f75(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_agent_keyword */
extern T0* T403f74(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_KEYWORD.set_position */
extern void T904f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_when_keyword */
extern T0* T403f73(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_void_keyword */
extern T0* T403f72(GE_context* ac, T0* C, T0* a1);
/* ET_VOID.set_position */
extern void T950f31(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_VOID.make */
extern T0* T950c28(GE_context* ac);
/* ET_VOID.make_token */
extern void T950f32(GE_context* ac, T0* C, T0* a1);
/* ET_VOID.make_leaf */
extern void T950f33(GE_context* ac, T0* C);
/* ET_VOID.tokens */
extern T0* T950f11(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_true_keyword */
extern T0* T403f71(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.set_position */
extern void T1210f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_then_keyword */
extern T0* T403f70(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_some_keyword */
extern T0* T403f69(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_some */
extern T0* T397c50(GE_context* ac);
/* ET_AST_FACTORY.new_note_keyword */
extern T0* T403f68(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.note_keyword */
extern unsigned char ge808os11739;
extern T0* ge808ov11739;
extern T0* T81f598(GE_context* ac, T0* C);
/* ET_KEYWORD.make_note */
extern T0* T397c67(GE_context* ac);
/* ET_EIFFEL_PARSER.use_note_keyword */
extern T1 T440f784(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_keyword */
extern T0* T403f67(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_like_keyword */
extern T0* T403f66(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_from_keyword */
extern T0* T403f65(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_else_keyword */
extern T0* T403f64(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_xor_keyword */
extern T0* T403f63(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_xor */
extern T0* T934c51(GE_context* ac);
/* ET_AST_FACTORY.new_old_keyword */
extern T0* T403f62(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_not_keyword */
extern T0* T403f61(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_not */
extern T0* T934c50(GE_context* ac);
/* ET_AST_FACTORY.new_end_keyword */
extern T0* T403f60(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_identifier */
extern T0* T403f59(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.last_identifier */
extern T0* T438f127(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].replace_found_item */
extern void T420f60(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.strings */
extern T0* T438f130(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.tokens */
extern T0* T438f57(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.string_equality_tester */
extern T0* T438f132(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.append_text_substring_to_string */
extern void T438f196(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PREPARSER.string_ */
extern T0* T438f129(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.string_buffer */
extern T0* T438f128(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_identifier */
extern T0* T440f943(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_all_keyword */
extern T0* T403f58(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_and_keyword */
extern T0* T403f57(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_or_keyword */
extern T0* T403f56(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_is_keyword */
extern T0* T403f55(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_if_keyword */
extern T0* T403f54(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.if_keyword */
extern unsigned char ge808os11729;
extern T0* ge808ov11729;
extern T0* T81f593(GE_context* ac, T0* C);
/* ET_KEYWORD.make_if */
extern T0* T397c62(GE_context* ac);
/* ET_AST_FACTORY.new_do_keyword */
extern T0* T403f53(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_as_keyword */
extern T0* T403f52(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_keyword */
extern T0* T403f2(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_two_char_symbol */
extern void T440f1008(GE_context* ac, T0* C, T2 a1, T2 a2);
/* ET_AST_FACTORY.new_assign_attempt_symbol */
extern T0* T403f51(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_symbol */
extern T0* T403f50(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_dotdot_symbol */
extern T0* T403f49(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_arrow_symbol */
extern T0* T403f48(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_array_symbol */
extern T0* T403f47(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.set_position */
extern void T346f77(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_le_symbol */
extern T0* T403f46(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_position */
extern void T947f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_SYMBOL_OPERATOR.make_le */
extern T0* T947c69(GE_context* ac);
/* ET_SYMBOL_OPERATOR.make_leaf */
extern void T947f74(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_right_array_symbol */
extern T0* T403f45(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_ge_symbol */
extern T0* T403f44(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_ge */
extern T0* T947c68(GE_context* ac);
/* ET_AST_FACTORY.new_mod_symbol */
extern T0* T403f43(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_mod */
extern T0* T947c67(GE_context* ac);
/* ET_AST_FACTORY.new_not_tilde_symbol */
extern T0* T403f42(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_not_tilde */
extern T0* T346c82(GE_context* ac);
/* ET_AST_FACTORY.new_not_equal_symbol */
extern T0* T403f41(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_not_equal */
extern T0* T346c81(GE_context* ac);
/* ET_AST_FACTORY.new_div_symbol */
extern T0* T403f40(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_div */
extern T0* T947c66(GE_context* ac);
/* ET_EIFFEL_PARSER.text_count */
extern T6 T440f689(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_set_line_column */
extern void T440f1007(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_one_char_symbol */
extern void T440f1006(GE_context* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_tilde_symbol */
extern T0* T403f39(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_tilde */
extern T0* T346c80(GE_context* ac);
/* ET_AST_FACTORY.new_dollar_symbol */
extern T0* T403f38(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_bracket_symbol */
extern T0* T403f37(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_bracket_symbol */
extern T0* T403f36(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.set_position */
extern void T651f104(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_right_brace_symbol */
extern T0* T403f35(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_brace_symbol */
extern T0* T403f34(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_parenthesis_symbol */
extern T0* T403f33(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_parenthesis_symbol */
extern T0* T403f32(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_question_mark_symbol */
extern T0* T403f31(GE_context* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.set_position */
extern void T958f72(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_bang_symbol */
extern T0* T403f30(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_symbol */
extern T0* T403f29(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_comma_symbol */
extern T0* T403f28(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.comma_symbol */
extern unsigned char ge808os11683;
extern T0* ge808ov11683;
extern T0* T81f582(GE_context* ac, T0* C);
/* ET_SYMBOL.make_comma */
extern T0* T346c85(GE_context* ac);
/* ET_AST_FACTORY.new_semicolon_symbol */
extern T0* T403f27(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.semicolon_symbol */
extern T0* T81f581(GE_context* ac, T0* C);
/* ET_SEMICOLON_SYMBOL.make */
extern T0* T953c4(GE_context* ac);
/* ET_SEMICOLON_SYMBOL.make_leaf */
extern void T953f5(GE_context* ac, T0* C);
/* ET_SEMICOLON_SYMBOL.tokens */
extern T0* T953f3(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_dot_symbol */
extern T0* T403f26(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.dot_symbol */
extern unsigned char ge808os11685;
extern T0* ge808ov11685;
extern T0* T81f580(GE_context* ac, T0* C);
/* ET_SYMBOL.make_dot */
extern T0* T346c84(GE_context* ac);
/* ET_AST_FACTORY.new_lt_symbol */
extern T0* T403f25(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_lt */
extern T0* T947c65(GE_context* ac);
/* ET_AST_FACTORY.new_gt_symbol */
extern T0* T403f24(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_gt */
extern T0* T947c64(GE_context* ac);
/* ET_AST_FACTORY.new_equal_symbol */
extern T0* T403f23(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_equal */
extern T0* T346c76(GE_context* ac);
/* ET_AST_FACTORY.new_power_symbol */
extern T0* T403f22(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_power */
extern T0* T947c63(GE_context* ac);
/* ET_AST_FACTORY.new_divide_symbol */
extern T0* T403f21(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_divide */
extern T0* T947c62(GE_context* ac);
/* ET_AST_FACTORY.new_times_symbol */
extern T0* T403f20(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_times */
extern T0* T947c61(GE_context* ac);
/* ET_AST_FACTORY.new_plus_symbol */
extern T0* T403f19(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_plus */
extern T0* T947c60(GE_context* ac);
/* ET_AST_FACTORY.new_minus_symbol */
extern T0* T403f18(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_minus */
extern T0* T947c58(GE_context* ac);
/* ET_EIFFEL_PARSER.text_item */
extern T2 T440f688(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_execute_eof_action */
extern void T440f983(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_sseq_error */
extern void T36f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sseq_error */
extern void T77f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.terminate */
extern void T440f1002(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.wrap */
extern T1 T440f642(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_refill_input_buffer */
extern void T440f982(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_set_content */
extern void T440f965(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_null_trans_state */
extern T6 T440f641(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_previous_state */
extern T6 T440f640(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.fatal_error */
extern void T440f981(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.special_integer_ */
extern T0* T440f611(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_init_value_stacks */
extern void T440f966(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_clear_all */
extern void T440f975(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.clear_all */
extern void T440f1000(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.clear_stacks */
extern void T440f1947(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T440f1974(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_WRITABLE].keep_head */
extern void T1194f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WRITABLE].set_count */
extern void T1194f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].keep_head */
extern void T1192f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].set_count */
extern void T1192f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].keep_head */
extern void T1189f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].set_count */
extern void T1189f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].keep_head */
extern void T1186f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].set_count */
extern void T1186f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].keep_head */
extern void T1183f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].set_count */
extern void T1183f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].keep_head */
extern void T1180f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].set_count */
extern void T1180f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].keep_head */
extern void T1177f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].set_count */
extern void T1177f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].keep_head */
extern void T1174f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].set_count */
extern void T1174f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].keep_head */
extern void T1171f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].set_count */
extern void T1171f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].keep_head */
extern void T1169f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].set_count */
extern void T1169f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].keep_head */
extern void T1166f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].set_count */
extern void T1166f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_PRECONDITIONS].keep_head */
extern void T763f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_PRECONDITIONS].set_count */
extern void T763f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].keep_head */
extern void T1163f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].set_count */
extern void T1163f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].keep_head */
extern void T1161f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].set_count */
extern void T1161f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].keep_head */
extern void T1159f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].set_count */
extern void T1159f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].keep_head */
extern void T1157f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].set_count */
extern void T1157f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].keep_head */
extern void T1155f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].set_count */
extern void T1155f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].keep_head */
extern void T1152f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].set_count */
extern void T1152f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].keep_head */
extern void T1149f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].set_count */
extern void T1149f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].keep_head */
extern void T1147f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].set_count */
extern void T1147f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].keep_head */
extern void T1144f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].set_count */
extern void T1144f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].keep_head */
extern void T1141f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].set_count */
extern void T1141f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].keep_head */
extern void T1138f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].set_count */
extern void T1138f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].keep_head */
extern void T1133f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].set_count */
extern void T1133f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].keep_head */
extern void T1130f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].set_count */
extern void T1130f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].keep_head */
extern void T1127f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].set_count */
extern void T1127f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].keep_head */
extern void T1124f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].set_count */
extern void T1124f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].keep_head */
extern void T1122f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].set_count */
extern void T1122f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].keep_head */
extern void T1120f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].set_count */
extern void T1120f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].keep_head */
extern void T1117f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].set_count */
extern void T1117f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].keep_head */
extern void T727f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].set_count */
extern void T727f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].keep_head */
extern void T1114f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].set_count */
extern void T1114f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].keep_head */
extern void T1111f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].set_count */
extern void T1111f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM].keep_head */
extern void T1108f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM].set_count */
extern void T1108f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_ITEM].keep_head */
extern void T1105f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_ITEM].set_count */
extern void T1105f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_LIST].keep_head */
extern void T1102f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_LIST].set_count */
extern void T1102f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].keep_head */
extern void T1099f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].set_count */
extern void T1099f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].keep_head */
extern void T1096f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].set_count */
extern void T1096f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].keep_head */
extern void T1086f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].set_count */
extern void T1086f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].keep_head */
extern void T1083f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].set_count */
extern void T1083f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].keep_head */
extern void T1081f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].set_count */
extern void T1081f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].keep_head */
extern void T1076f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].set_count */
extern void T1076f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].keep_head */
extern void T1073f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].set_count */
extern void T1073f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].keep_head */
extern void T1070f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].set_count */
extern void T1070f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].keep_head */
extern void T1067f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].set_count */
extern void T1067f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].keep_head */
extern void T1064f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].set_count */
extern void T1064f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].keep_head */
extern void T1062f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].set_count */
extern void T1062f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].keep_head */
extern void T1060f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].set_count */
extern void T1060f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].keep_head */
extern void T1057f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].set_count */
extern void T1057f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].keep_head */
extern void T1054f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].set_count */
extern void T1054f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].keep_head */
extern void T1051f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].set_count */
extern void T1051f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].keep_head */
extern void T1048f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].set_count */
extern void T1048f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].keep_head */
extern void T1046f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].set_count */
extern void T1046f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].keep_head */
extern void T1043f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].set_count */
extern void T1043f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].keep_head */
extern void T1041f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].set_count */
extern void T1041f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].keep_head */
extern void T1038f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].set_count */
extern void T1038f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].keep_head */
extern void T1035f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].set_count */
extern void T1035f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].keep_head */
extern void T1029f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].set_count */
extern void T1029f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].keep_head */
extern void T1026f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].set_count */
extern void T1026f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T1023f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].set_count */
extern void T1023f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].keep_head */
extern void T1020f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].set_count */
extern void T1020f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].keep_head */
extern void T1017f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].set_count */
extern void T1017f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].keep_head */
extern void T1015f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].set_count */
extern void T1015f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].keep_head */
extern void T1012f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].set_count */
extern void T1012f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].keep_head */
extern void T1008f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].set_count */
extern void T1008f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].keep_head */
extern void T1005f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].set_count */
extern void T1005f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].keep_head */
extern void T1002f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].set_count */
extern void T1002f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].keep_head */
extern void T999f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].set_count */
extern void T999f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].keep_head */
extern void T996f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].set_count */
extern void T996f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].keep_head */
extern void T685f7(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].set_count */
extern void T685f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].keep_head */
extern void T993f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].set_count */
extern void T993f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].keep_head */
extern void T990f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].set_count */
extern void T990f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_ARGUMENT_LIST].keep_head */
extern void T987f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_ARGUMENT_LIST].set_count */
extern void T987f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].keep_head */
extern void T984f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].set_count */
extern void T984f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].keep_head */
extern void T979f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].set_count */
extern void T979f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].keep_head */
extern void T977f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].set_count */
extern void T977f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].keep_head */
extern void T974f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].set_count */
extern void T974f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].keep_head */
extern void T971f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].set_count */
extern void T971f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].keep_head */
extern void T969f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].set_count */
extern void T969f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T650f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].set_count */
extern void T650f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].keep_head */
extern void T967f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].set_count */
extern void T967f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].keep_head */
extern void T965f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].set_count */
extern void T965f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].keep_head */
extern void T962f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].set_count */
extern void T962f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].keep_head */
extern void T959f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].set_count */
extern void T959f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].keep_head */
extern void T956f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].set_count */
extern void T956f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].keep_head */
extern void T954f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].set_count */
extern void T954f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].keep_head */
extern void T951f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].set_count */
extern void T951f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].keep_head */
extern void T948f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].set_count */
extern void T948f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].keep_head */
extern void T945f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].set_count */
extern void T945f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].keep_head */
extern void T942f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].set_count */
extern void T942f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].keep_head */
extern void T940f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].set_count */
extern void T940f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].keep_head */
extern void T937f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].set_count */
extern void T937f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].keep_head */
extern void T935f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].set_count */
extern void T935f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].keep_head */
extern void T932f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].set_count */
extern void T932f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].keep_head */
extern void T929f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].set_count */
extern void T929f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].keep_head */
extern void T926f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].set_count */
extern void T926f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].keep_head */
extern void T924f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].set_count */
extern void T924f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].keep_head */
extern void T921f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].set_count */
extern void T921f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].keep_head */
extern void T918f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].set_count */
extern void T918f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BIT_CONSTANT].keep_head */
extern void T915f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BIT_CONSTANT].set_count */
extern void T915f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].keep_head */
extern void T912f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].set_count */
extern void T912f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].keep_head */
extern void T908f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].set_count */
extern void T908f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].keep_head */
extern void T905f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].set_count */
extern void T905f9(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.abort */
extern void T440f969(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_load_input_buffer */
extern void T440f961(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T440f963(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].wipe_out */
extern void T894f9(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].wipe_out */
extern void T893f9(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].wipe_out */
extern void T890f9(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_end_of_file */
extern void T205f27(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T440f963p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T440f963p0(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T440f963p2(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.time_stamp */
extern T6 T29f42(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.date */
extern T6 T29f43(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.eif_file_date */
extern T6 T29f44(GE_context* ac, T0* C, T14 a1);
/* ET_EIFFEL_PARSER.tmp_file */
extern T0* T440f667(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.shared_file */
extern unsigned char ge1033os23206;
extern T0* ge1033ov23206;
extern T0* T440f919(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_preparsed */
extern void T82f227(GE_context* ac, T0* C);
/* ET_CLASS.is_in_cluster */
extern T1 T82f94(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.error_handler */
extern T0* T440f663(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_fatal_error */
extern void T440f956(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.process_class */
extern void T437f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_suppliers */
extern void T82f226(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.internal_process_class */
extern void T437f22(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].extend */
extern void T881f37(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].put */
extern void T881f49(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_invariants_validity */
extern void T437f25(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_invariants_validity */
extern void T370f66(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INVARIANTS.set_validity_error */
extern void T887f28(GE_context* ac, T0* C);
/* ET_INVARIANTS.set_validity_checked */
extern void T887f27(GE_context* ac, T0* C);
/* ET_INVARIANTS.assertion */
extern T0* T887f11(GE_context* ac, T0* C, T6 a1);
/* ET_INVARIANTS.item */
extern T0* T887f12(GE_context* ac, T0* C, T6 a1);
/* ET_INVARIANTS.reset_validity_checked */
extern void T887f26(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_supplier_handler */
extern void T370f65(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.set_supplier_handler */
extern void T373f17(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_features_validity */
extern void T437f24(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.check_procedure_validity */
extern void T437f27(GE_context* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_PROCEDURE].wipe_out */
extern void T882f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].slots_wipe_out */
extern void T882f51(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].clashes_wipe_out */
extern void T882f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_wipe_out */
extern void T882f49(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_wipe_out */
extern void T882f48(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].unset_found_item */
extern void T882f43(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].move_all_cursors_after */
extern void T882f47(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T1479f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_after */
extern void T1479f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].forth */
extern void T882f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_forth */
extern void T882f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].add_traversing_cursor */
extern void T882f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_position */
extern void T1479f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].remove_traversing_cursor */
extern void T882f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].clashes_item */
extern T6 T882f23(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_procedure_validity */
extern void T437f30(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_FEATURE_CHECKER.check_precursor_feature_validity */
extern void T370f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_PROCEDURE].item_for_iteration */
extern T0* T882f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_item */
extern T0* T882f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_item */
extern T0* T882f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].after */
extern T1 T882f34(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_after */
extern T1 T882f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].after */
extern T1 T1479f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].start */
extern void T882f36(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_start */
extern void T882f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].cursor_off */
extern T1 T882f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].off */
extern T1 T1479f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].is_empty */
extern T1 T882f21(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_feature_validity */
extern void T370f68(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.build_preconditions_attachment_scope */
extern void T370f72(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.free_attachment_scope */
extern void T370f75(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.new_attachment_scope */
extern T0* T370f39(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.build_assertions_attachment_scope */
extern void T370f74(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.add_precursors_with_preconditions_recursive */
extern void T370f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.feature_checker */
extern T0* T370f35(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_assertions_validity */
extern void T437f28(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_FEATURE_CHECKER.check_postconditions_validity */
extern void T370f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_POSTCONDITIONS.set_validity_error */
extern void T886f21(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.set_validity_checked */
extern void T886f20(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.assertion */
extern T0* T886f10(GE_context* ac, T0* C, T6 a1);
/* ET_POSTCONDITIONS.item */
extern T0* T886f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.set_precursor_procedures */
extern void T370f69(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_query_validity */
extern void T437f26(GE_context* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_QUERY].wipe_out */
extern void T883f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].slots_wipe_out */
extern void T883f51(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].clashes_wipe_out */
extern void T883f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].key_storage_wipe_out */
extern void T883f49(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].item_storage_wipe_out */
extern void T883f48(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].unset_found_item */
extern void T883f43(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].move_all_cursors_after */
extern void T883f47(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_next_cursor */
extern void T1480f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_after */
extern void T1480f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].forth */
extern void T883f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_forth */
extern void T883f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].add_traversing_cursor */
extern void T883f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_position */
extern void T1480f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].remove_traversing_cursor */
extern void T883f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].clashes_item */
extern T6 T883f23(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_query_validity */
extern void T437f29(GE_context* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_QUERY].item_for_iteration */
extern T0* T883f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_item */
extern T0* T883f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].item_storage_item */
extern T0* T883f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].after */
extern T1 T883f34(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_after */
extern T1 T883f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].after */
extern T1 T1480f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].start */
extern void T883f36(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_start */
extern void T883f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].cursor_off */
extern T1 T883f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].off */
extern T1 T1480f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].is_empty */
extern T1 T883f21(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_precursor_queries */
extern void T370f67(GE_context* ac, T0* C, T0* a1);
/* ET_SUPPLIER_BUILDER.set */
extern void T884f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IMPLEMENTATION_CHECKER.current_system */
extern T0* T437f12(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_fatal_error */
extern void T437f21(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.set_suppliers_enabled */
extern void T437f17(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.set_short_mode */
extern void T437f20(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.set_flat_dbc_mode */
extern void T437f16(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.set_flat_mode */
extern void T437f15(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.make */
extern T0* T437c14(GE_context* ac);
/* ET_IMPLEMENTATION_CHECKER.make_with_feature_checker */
extern void T437f19(GE_context* ac, T0* C, T0* a1);
/* ET_SUPPLIER_BUILDER.make */
extern T0* T884c5(GE_context* ac);
/* ET_SUPPLIER_BUILDER.dummy_suppliers */
extern unsigned char ge950os31240;
extern T0* ge950ov31240;
extern T0* T884f4(GE_context* ac, T0* C);
/* ET_SUPPLIER_BUILDER.tokens */
extern T0* T884f3(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].make */
extern T0* T883c35(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_QUERY].set_internal_cursor */
extern void T883f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].new_cursor */
extern T0* T883f33(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].make */
extern T0* T1480c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_QUERY].make_slots */
extern void T883f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].new_modulus */
extern T6 T883f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_clashes */
extern void T883f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_key_storage */
extern void T883f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_item_storage */
extern void T883f39(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make */
extern T0* T882c35(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].set_internal_cursor */
extern void T882f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].new_cursor */
extern T0* T882f33(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].make */
extern T0* T1479c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].make_slots */
extern void T882f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_modulus */
extern T6 T882f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_clashes */
extern void T882f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_key_storage */
extern void T882f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_item_storage */
extern void T882f39(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.make_class_processor */
extern void T437f23(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.tokens */
extern T0* T437f13(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.error_handler */
extern T0* T437f11(GE_context* ac, T0* C);
/* ET_AST_NULL_PROCESSOR.process_class */
extern void T430f2(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_class */
extern void T373f21(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_identifier */
extern void T1306f24(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_identifier */
extern void T387f47(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_identifier */
extern void T383f52(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_identifier */
extern void T370f169(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_expression_validity */
extern void T370f228(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T370f228ot1(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vuex1a_error */
extern void T36f419(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuex1a */
extern T0* T532c949(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T36f132(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuex1a_error */
extern void T77f420(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T77f133(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn2c_error */
extern void T36f420(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn2c */
extern T0* T532c950(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T36f114(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn2c_error */
extern void T77f421(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T77f115(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_expression_validity */
extern void T370f292(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_query_call_type_validity */
extern void T370f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T370f316ot1(T0* a1, T0** a2);
extern T1 T370f316ot2(T0* a1, T0** a2);
extern T1 T370f316ot3(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.copy_type_context */
extern void T380f62(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.item */
extern T0* T380f14(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set_root_context */
extern void T380f63(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_unqualified_call_expression */
extern void T370f343(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.reset_fatal_error */
extern void T370f317(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_actual_arguments_validity */
extern void T370f320(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T370f320ot1(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vuar2b_error */
extern void T36f484(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vuar2b */
extern T0* T532c1014(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T36f125(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2b_error */
extern void T77f485(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T77f126(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar2a_error */
extern void T36f404(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar2a */
extern T0* T532c934(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vuar2a_error */
extern void T77f405(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vdpr4b_error */
extern void T36f483(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vdpr4b */
extern T0* T532c1013(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T36f154(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr4b_error */
extern void T77f484(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T77f155(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.remove_last */
extern void T380f57(GE_context* ac, T0* C);
/* ET_CLASS.is_basic */
extern T1 T82f125(GE_context* ac, T0* C);
/* ET_CLASS_CODES.is_basic */
extern T1 T398f34(GE_context* ac, T0* C, T8 a1);
/* ET_BRACKET_ARGUMENT_LIST.put */
extern void T986f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_ACTUAL_ARGUMENT_LIST.put */
extern void T287f17(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_BRACKET_ARGUMENT_LIST.item */
extern T0* T986f8(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.item */
extern T0* T287f5(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.convert_expression */
extern T0* T370f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_builtin_conversion */
extern void T370f372(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_BUILTIN_EXPRESSION.make */
extern T0* T1860c17(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_qualified_call_expression */
extern void T370f270(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_TO_EXPRESSION.make */
extern T0* T1862c22(GE_context* ac, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_creation_expression */
extern void T370f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FROM_EXPRESSION.make */
extern T0* T1861c21(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.convert_feature */
extern T0* T373f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.convert_from_feature */
extern T0* T82f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BRACED_TYPE_LIST.has_named_type_with_type_marks */
extern T1 T1321f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TOKEN_CONSTANTS.attached_separate_type_mark */
extern unsigned char ge808os11656;
extern T0* ge808ov11656;
extern T0* T81f1268(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.separate_keyword */
extern unsigned char ge808os11754;
extern T0* ge808ov11754;
extern T0* T81f1291(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identity_type */
extern unsigned char ge808os11654;
extern T0* ge808ov11654;
extern T0* T81f700(GE_context* ac, T0* C);
/* ET_CLASS.convert_to_feature */
extern T0* T82f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context */
extern T1 T380f42(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context_with_type_marks */
extern T1 T380f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.tokens */
extern T0* T380f16(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.attached_like_current */
extern unsigned char ge808os11652;
extern T0* ge808ov11652;
extern T0* T81f1265(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.is_entity_attached */
extern T1 T370f47(GE_context* ac, T0* C, T0* a1);
extern T1 T370f47ot1(T0* a1);
extern T1 T370f47ot2(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE.has_name */
extern T1 T386f8(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.has_result */
extern T1 T386f6(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_attached */
extern T1 T380f43(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_detachable */
extern T1 T380f46(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vuar1b_error */
extern void T36f482(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuar1b */
extern T0* T532c1012(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T36f126(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar1b_error */
extern void T77f483(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T77f127(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar1a_error */
extern void T36f405(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuar1a */
extern T0* T532c935(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vuar1a_error */
extern void T77f406(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr4a_error */
extern void T36f481(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr4a */
extern T0* T532c1011(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr4a_error */
extern void T77f482(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_vape_validity */
extern void T370f341(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vape0a_error */
extern void T36f491(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0a */
extern T0* T532c1021(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vape_error */
extern T1 T36f138(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vape0a_error */
extern void T77f492(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vape_error */
extern T1 T77f139(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.parenthesis_call */
extern T0* T182f88(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_query_parenthesis_call_validity */
extern void T370f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T370f247ot1(T0* a1, T0** a2);
extern T1 T370f247ot2(T0* a1, T0** a2);
extern T1 T370f247ot3(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_expression_validity */
extern void T370f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T370f314ot1(T0* a1, T0** a2);
extern T1 T370f314ot2(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vkcn2a_error */
extern void T36f383(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn2a */
extern T0* T532c913(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vkcn2a_error */
extern void T77f384(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_instruction_validity */
extern void T370f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T370f313ot1(T0* a1, T0** a2);
extern T1 T370f313ot2(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vkcn1a_error */
extern void T36f425(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn1a */
extern T0* T532c955(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T36f131(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn1a_error */
extern void T77f426(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T77f132(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_instruction_validity */
extern void T370f300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_call_instruction */
extern void T370f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_validity */
extern void T370f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_vape_validity */
extern void T370f269(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vape0b_error */
extern void T36f440(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape0b */
extern T0* T532c970(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vape0b_error */
extern void T77f441(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vuex2b_error */
extern void T36f403(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuex2b */
extern T0* T532c933(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T36f115(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuex2b_error */
extern void T77f404(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T77f116(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuta2a_error */
extern void T36f402(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuta2a */
extern T0* T532c932(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T36f124(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuta2a_error */
extern void T77f403(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T77f125(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_query_call_expression_validity */
extern void T370f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.set_parenthesis_call_position */
extern void T370f312(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIS_SYMBOL.set_position */
extern void T1791f83(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_CLASS.named_feature */
extern T0* T82f148(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_SYMBOL.make */
extern T0* T1791c81(GE_context* ac);
/* ET_PARENTHESIS_SYMBOL.make_leaf */
extern void T1791f85(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.tokens */
extern T0* T1791f35(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.has_implementation_error */
extern T1 T370f46(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_expression_validity */
extern void T370f291(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuao0c_error */
extern void T36f474(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0c */
extern T0* T532c1004(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T36f149(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuao0c_error */
extern void T77f475(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T77f150(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuao0a_error */
extern void T36f473(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0a */
extern T0* T532c1003(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuao0a_error */
extern void T77f474(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuao0b_error */
extern void T36f472(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0b */
extern T0* T532c1002(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuao0b_error */
extern void T77f473(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_object_test_local_parenthesis_call_validity */
extern void T370f340(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T370f340ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_identifier_parenthesis_call_validity */
extern void T370f355(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T370f355ot1(T0* a1, T0** a2);
extern T1 T370f355ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_unqualified_across_cursor_call_expression_validity */
extern void T370f290(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuac0c_error */
extern void T36f465(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0c */
extern T0* T532c995(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T36f146(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuac0c_error */
extern void T77f466(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T77f147(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuac0a_error */
extern void T36f464(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0a */
extern T0* T532c994(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuac0a_error */
extern void T77f465(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuac0b_error */
extern void T36f463(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0b */
extern T0* T532c993(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuac0b_error */
extern void T77f464(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_across_cursor_parenthesis_call_validity */
extern void T370f339(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T370f339ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_unqualified_local_variable_call_expression_validity */
extern void T370f289(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvual0a_error */
extern void T36f460(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0a */
extern T0* T532c990(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvual_error */
extern T1 T36f144(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0a_error */
extern void T77f461(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvual_error */
extern T1 T77f145(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvual0b_error */
extern void T36f459(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0b */
extern T0* T532c989(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvual0b_error */
extern void T77f460(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_local_variable_parenthesis_call_validity */
extern void T370f338(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T370f338ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_expression_validity */
extern void T370f288(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuaa0a_error */
extern void T36f456(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0a */
extern T0* T532c986(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T36f142(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0a_error */
extern void T77f457(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T77f143(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuaa0b_error */
extern void T36f455(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0b */
extern T0* T532c985(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0b_error */
extern void T77f456(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_parenthesis_call_validity */
extern void T370f337(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T370f337ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_current_type_needed */
extern void T370f110(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_call_instruction_validity */
extern void T370f227(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn1c_error */
extern void T36f418(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1c */
extern T0* T532c948(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn1c_error */
extern void T77f419(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_instruction_validity */
extern void T370f287(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_unqualified_call_instruction */
extern void T370f342(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_instruction_validity */
extern void T370f286(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvuio0c_error */
extern void T36f471(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0c */
extern T0* T532c1001(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T36f148(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuio0c_error */
extern void T77f472(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T77f149(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuio0a_error */
extern void T36f470(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0a */
extern T0* T532c1000(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuio0a_error */
extern void T77f471(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuio0b_error */
extern void T36f469(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0b */
extern T0* T532c999(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuio0b_error */
extern void T77f470(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_across_cursor_call_instruction_validity */
extern void T370f285(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvuic0c_error */
extern void T36f468(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0c */
extern T0* T532c998(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T36f147(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuic0c_error */
extern void T77f469(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T77f148(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuic0a_error */
extern void T36f467(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0a */
extern T0* T532c997(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuic0a_error */
extern void T77f468(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuic0b_error */
extern void T36f466(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0b */
extern T0* T532c996(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuic0b_error */
extern void T77f467(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_local_variable_call_instruction_validity */
extern void T370f284(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvuil0a_error */
extern void T36f462(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0a */
extern T0* T532c992(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T36f145(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuil0a_error */
extern void T77f463(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T77f146(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuil0b_error */
extern void T36f461(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0b */
extern T0* T532c991(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuil0b_error */
extern void T77f462(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_instruction_validity */
extern void T370f283(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvuia0a_error */
extern void T36f458(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0a */
extern T0* T532c988(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T36f143(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuia0a_error */
extern void T77f459(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T77f144(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuia0b_error */
extern void T36f457(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0b */
extern T0* T532c987(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuia0b_error */
extern void T77f458(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER.is_instruction */
extern T1 T182f33(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_across_cursor_validity */
extern void T370f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.current_closure_impl */
extern T0* T370f44(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_across_cursor */
extern void T370f263(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].found_item */
extern T0* T384f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].found */
extern T1 T384f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].search */
extern void T384f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].search_position */
extern void T384f65(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].hash_position */
extern T6 T384f32(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.hash_code */
extern T6 T964f15(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.hash_code */
extern T6 T961f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].key_storage_item */
extern T0* T384f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].slots_item */
extern T6 T384f34(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_veen9b_error */
extern void T36f394(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen9b */
extern T0* T532c924(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen9_error */
extern T1 T36f121(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen9b_error */
extern void T77f395(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen9_error */
extern T1 T77f122(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen9a_error */
extern void T36f393(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen9a */
extern T0* T532c923(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen9a_error */
extern void T77f394(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACROSS_CURSOR_SCOPE.across_component */
extern T0* T385f3(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].item */
extern T0* T757f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_object_test_local_validity */
extern void T370f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST_LIST.object_test */
extern T0* T1197f8(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_object_test_local */
extern void T370f260(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].found_item */
extern T0* T381f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].found */
extern T1 T381f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].search */
extern void T381f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].search_position */
extern void T381f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].hash_position */
extern T6 T381f32(GE_context* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.hash_code */
extern T6 T748f21(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.hash_code */
extern T6 T1272f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_item */
extern T0* T381f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_item */
extern T6 T381f34(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_veen8b_error */
extern void T36f392(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen8b */
extern T0* T532c922(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen8_error */
extern T1 T36f120(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen8b_error */
extern void T77f393(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen8_error */
extern T1 T77f121(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen8a_error */
extern void T36f391(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen8a */
extern T0* T532c921(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen8a_error */
extern void T77f392(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST_SCOPE.object_test */
extern T0* T382f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].item */
extern T0* T751f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_local_variable_validity */
extern void T370f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_variable */
extern void T370f268(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vevi0a_error */
extern void T36f417(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vevi0a */
extern T0* T532c947(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vevi_error */
extern T1 T36f62(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vevi0a_error */
extern void T77f418(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vevi_error */
extern T1 T77f63(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_expanded */
extern T1 T380f47(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_veen2c_error */
extern void T36f397(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2c */
extern T0* T532c927(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen2_error */
extern T1 T36f123(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2c_error */
extern void T77f398(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen2_error */
extern T1 T77f124(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen2e_error */
extern void T36f396(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2e */
extern T0* T532c926(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2e_error */
extern void T77f397(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_validity */
extern void T370f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_formal_argument */
extern void T370f267(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_identifier */
extern void T79f234(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_expression_validity */
extern void T79f256(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f256ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_expression_validity */
extern void T79f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_call_type_validity */
extern void T79f319(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f319ot1(T0* a1, T0** a2);
extern T1 T79f319ot2(T0* a1, T0** a2);
extern T1 T79f319ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_validity */
extern void T79f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_expression_supplier */
extern void T79f371(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_expression */
extern void T79f318(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f318ot1(T0* a1, T0** a2);
extern T1 T79f318ot2(T0* a1, T0** a2);
extern T1 T79f318ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_dynamic_type_set */
extern void T79f162(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.put */
extern void T269f16(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_like_argument_dynamic_types */
extern void T79f397(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dynamic_type_set */
extern T0* T79f111(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_operand_dynamic_types */
extern void T79f395(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_dynamic_types */
extern void T79f394(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.reset_fatal_error */
extern void T79f312(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_arguments_validity */
extern void T79f295(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T79f295ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.convert_expression */
extern T0* T79f107(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_conversion */
extern void T79f533(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_expression */
extern void T79f396(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f396ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_qualified_call_target_dynamic_types */
extern void T79f378(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_expression */
extern void T79f495(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.is_entity_attached */
extern T1 T79f106(GE_context* ac, T0* C, T0* a1);
extern T1 T79f106ot1(T0* a1);
extern T1 T79f106ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_vape_validity */
extern void T79f311(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_parenthesis_call_validity */
extern void T79f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T79f281ot1(T0* a1, T0** a2);
extern T1 T79f281ot2(T0* a1, T0** a2);
extern T1 T79f281ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_expression_validity */
extern void T79f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T79f317ot1(T0* a1, T0** a2);
extern T1 T79f317ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_instruction_validity */
extern void T79f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T79f316ot1(T0* a1, T0** a2);
extern T1 T79f316ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_instruction_validity */
extern void T79f289(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_instruction */
extern void T79f297(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.make */
extern T0* T318c11(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ASSIGNER_INSTRUCTION.target */
extern T0* T1250f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_validity */
extern void T79f373(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_vape_validity */
extern void T79f390(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_expression_validity */
extern void T79f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_parenthesis_call_position */
extern void T79f314(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.has_implementation_error */
extern T1 T79f102(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_expression_validity */
extern void T79f285(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_parenthesis_call_validity */
extern void T79f310(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f310ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_identifier_parenthesis_call_validity */
extern void T79f393(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T79f393ot1(T0* a1, T0** a2);
extern T1 T79f393ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_across_cursor_call_expression_validity */
extern void T79f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_cursor_parenthesis_call_validity */
extern void T79f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f309ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_expression_validity */
extern void T79f283(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_parenthesis_call_validity */
extern void T79f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f308ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_expression_validity */
extern void T79f282(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_parenthesis_call_validity */
extern void T79f307(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f307ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current_type_needed */
extern void T79f199(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_instruction_validity */
extern void T79f255(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_instruction_validity */
extern void T79f280(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_instruction */
extern void T79f313(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f313ot1(T0* a1, T0** a2);
extern T1 T79f313ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_instruction_validity */
extern void T79f279(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_across_cursor_call_instruction_validity */
extern void T79f278(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_instruction_validity */
extern void T79f277(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_instruction_validity */
extern void T79f276(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_cursor_validity */
extern void T79f254(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_closure_impl */
extern T0* T79f57(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_cursor */
extern void T79f275(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_validity */
extern void T79f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_local */
extern void T79f274(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_validity */
extern void T79f252(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable */
extern void T79f273(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_validity */
extern void T79f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument */
extern void T79f272(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_identifier */
extern void T74f925(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_identifier_call_expression */
extern void T74f933(GE_context* ac, T0* C, T0* a1);
extern T1 T74f933ot1(T0* a1, T0** a2);
extern T1 T74f933ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PRECURSOR.is_constant_attribute */
extern T1 T310f20(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_constant_attribute */
extern T1 T248f27(GE_context* ac, T0* C);
/* ET_C_GENERATOR.in_target */
extern T1 T74f446(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].is_empty */
extern T1 T276f11(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_attribute */
extern T1 T310f18(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_attribute */
extern T1 T248f23(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_unqualified_identifier_call_instruction */
extern void T74f932(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand */
extern void T74f931(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_closed_operand */
extern T1 T182f32(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_agent_open_operand */
extern void T74f930(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_open_operand */
extern T1 T182f31(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_local */
extern void T74f929(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test_local_name */
extern void T74f937(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_current */
extern void T1306f40(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_current */
extern void T387f46(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_current */
extern void T383f51(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current */
extern void T370f168(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_validity */
extern void T370f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_current */
extern void T370f282(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current */
extern void T79f320(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_validity */
extern void T79f398(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current */
extern void T79f450(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_current */
extern void T74f926(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_current */
extern void T74f934(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_qualified_call_expression */
extern void T1306f58(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_actual_argument_list */
extern void T1306f91(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_qualified_call_expression */
extern void T387f51(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_qualified_call_expression */
extern void T383f56(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_qualified_call_expression */
extern void T370f173(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_expression_validity */
extern void T370f187(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T370f187ot1(T0* a1, T0** a2);
extern T1 T370f187ot2(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vuex2a_error */
extern void T36f384(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuex2a */
extern T0* T532c914(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuex2a_error */
extern void T77f385(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_expression_validity */
extern void T370f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_tuple_label_expression */
extern void T370f318(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.formal_parameter_type */
extern T0* T82f195(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].replace */
extern void T1773f11(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].item */
extern T0* T1773f7(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].put_last */
extern void T1773f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].force */
extern void T1880f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].fill_with */
extern void T1879f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].extend */
extern void T1879f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].resize */
extern void T1773f9(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1880f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1879f4(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1773c8(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].set_internal_cursor */
extern void T1773f12(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].new_cursor */
extern T0* T1773f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1881c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1880f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].make_empty */
extern T0* T1879c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].default_create */
extern T0* T1880c3(GE_context* ac);
/* ET_ERROR_HANDLER.report_vuar1c_error */
extern void T36f436(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar1c */
extern T0* T532c966(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar1c_error */
extern void T77f437(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuta2b_error */
extern void T36f435(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuta2b */
extern T0* T532c965(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vuta2b_error */
extern void T77f436(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T380f44(GE_context* ac, T0* C, T0* a1);
extern T1 T380f44ot1(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.put_last */
extern void T380f58(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.put */
extern void T380f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.last */
extern T0* T380f15(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.set_boolean_operator */
extern void T1270f28(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.is_boolean_class */
extern T1 T82f199(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_qualified_dotnet_query_call_expression_validity */
extern void T370f246(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.free_overloaded_queries */
extern void T370f311(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].force_last */
extern void T377f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].force */
extern void T733f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].fill_with */
extern void T735f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].extend */
extern void T735f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].resize */
extern void T377f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].aliased_resized_area */
extern T0* T733f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].aliased_resized_area */
extern T0* T735f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_capacity */
extern T6 T377f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].extendible */
extern T1 T377f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].first */
extern T0* T734f14(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.keep_best_overloaded_features */
extern void T370f310(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* DS_ARRAYED_LIST [ET_PROCEDURE].keep_first */
extern void T730f38(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].keep_first */
extern void T734f38(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.free_overloaded_features */
extern void T370f354(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].force_last */
extern void T378f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].force */
extern void T737f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].fill_with */
extern void T739f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].extend */
extern void T739f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].resize */
extern void T378f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].aliased_resized_area */
extern T0* T737f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].aliased_resized_area */
extern T0* T739f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].new_capacity */
extern T6 T378f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].extendible */
extern T1 T378f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].has */
extern T1 T738f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove */
extern void T738f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].move_left */
extern void T738f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_cursors_left */
extern void T738f20(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_position */
extern void T1867f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove_last */
extern void T738f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_last_cursors_after */
extern void T738f22(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_next_cursor */
extern void T1867f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_after */
extern void T1867f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].item */
extern T0* T738f11(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type */
extern T1 T380f41(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_FEATURE].wipe_out */
extern void T738f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_all_cursors_after */
extern void T738f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].force_last */
extern void T738f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].resize */
extern void T738f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_capacity */
extern T6 T738f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].extendible */
extern T1 T738f9(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.new_overloaded_features */
extern T0* T370f52(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].remove_last */
extern void T378f15(GE_context* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].keep_head */
extern void T739f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].set_count */
extern void T739f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].move_last_cursors_after */
extern void T378f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].set_next_cursor */
extern void T740f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].set_after */
extern void T740f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].last */
extern T0* T378f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].make */
extern T0* T738c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].set_internal_cursor */
extern void T738f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_cursor */
extern T0* T738f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].make */
extern T0* T1867c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].is_empty */
extern T1 T378f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove */
extern void T730f37(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_left */
extern void T730f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_left */
extern void T730f40(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_last */
extern void T730f39(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_last_cursors_after */
extern void T730f42(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].remove */
extern void T734f37(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_left */
extern void T734f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_left */
extern void T734f40(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_last */
extern void T734f39(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].move_last_cursors_after */
extern void T734f42(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].is_empty */
extern T1 T734f13(GE_context* ac, T0* C);
/* ET_CLASS.add_overloaded_queries */
extern void T82f275(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUERY_LIST.add_overloaded_features */
extern void T266f14(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T266f14ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.new_overloaded_queries */
extern T0* T370f50(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].remove_last */
extern void T377f15(GE_context* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].keep_head */
extern void T735f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].set_count */
extern void T735f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].move_last_cursors_after */
extern void T377f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_next_cursor */
extern void T736f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_after */
extern void T736f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].last */
extern T0* T377f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].is_empty */
extern T1 T377f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_expression */
extern void T79f338(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_expression_validity */
extern void T79f416(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f416ot1(T0* a1, T0** a2);
extern T1 T79f416ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_expression_validity */
extern void T79f461(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_expression */
extern void T79f496(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f496ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_query_call_expression_validity */
extern void T79f460(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_queries */
extern void T79f293(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.keep_best_overloaded_features */
extern void T79f292(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_features */
extern void T79f377(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_features */
extern T0* T79f110(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_queries */
extern T0* T79f105(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_qualified_call_expression */
extern void T74f927(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_expression */
extern void T74f935(GE_context* ac, T0* C, T0* a1);
extern T1 T74f935ot1(T0* a1, T0** a2);
extern T1 T74f935ot2(T0* a1, T0** a2);
extern T1 T74f935ot3(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_expressions_unfrozen */
extern void T74f940(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_expressions_frozen */
extern void T74f939(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_used */
extern void T74f938(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_result */
extern void T1306f42(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_result */
extern void T387f48(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_result */
extern void T383f53(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result */
extern void T370f170(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_validity */
extern void T370f229(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result */
extern void T370f293(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vevi0b_error */
extern void T36f422(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0b */
extern T0* T532c952(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vevi0b_error */
extern void T77f423(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2a_error */
extern void T36f401(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2a */
extern T0* T532c931(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2a_error */
extern void T77f402(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2g_error */
extern void T36f421(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2g */
extern T0* T532c951(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2g_error */
extern void T77f422(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2d_error */
extern void T36f400(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen2d */
extern T0* T532c930(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2d_error */
extern void T77f401(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_veen2b_error */
extern void T36f399(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2b */
extern T0* T532c929(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2b_error */
extern void T77f400(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2f_error */
extern void T36f398(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2f */
extern T0* T532c928(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2f_error */
extern void T77f399(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result */
extern void T79f322(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_validity */
extern void T79f400(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result */
extern void T79f452(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_result */
extern void T74f928(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_result */
extern void T74f936(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_tuple */
extern void T1306f41(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_tuple */
extern void T387f45(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_tuple */
extern void T383f50(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_tuple */
extern void T370f167(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_tuple_validity */
extern void T370f221(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T370f221ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_manifest_tuple */
extern void T370f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_tuple */
extern void T79f321(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_tuple_validity */
extern void T79f399(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f399ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_tuple */
extern void T79f451(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f451ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_manifest_tuple */
extern void T74f941(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple */
extern void T74f944(GE_context* ac, T0* C, T0* a1);
extern T1 T74f944ot1(T0* a1, T0** a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].force_last */
extern void T295f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_put */
extern void T295f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_put */
extern void T295f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_item */
extern T6 T295f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].hash_position */
extern T6 T295f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].resize */
extern void T295f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_resize */
extern void T295f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].special_integer_ */
extern T0* T295f32(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_resize */
extern void T295f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_resize */
extern void T295f61(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T690f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T689f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_item */
extern T0* T295f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_resize */
extern void T295f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_capacity */
extern T6 T295f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_put */
extern void T295f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].force */
extern void T690f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].fill_with */
extern void T689f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].extend */
extern void T689f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].search_position */
extern void T295f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_equality_tester */
extern T0* T295f30(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_do_procedure */
extern void T1306f17(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_compound */
extern void T1306f23(GE_context* ac, T0* C, T0* a1);
/* ET_COMPOUND.item */
extern T0* T332f5(GE_context* ac, T0* C, T6 a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_do_procedure */
extern void T1305f21(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure */
extern void T370f76(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_validity */
extern void T370f88(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_rescue_validity */
extern void T370f105(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_instructions_validity */
extern void T370f104(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_locals_validity */
extern void T370f103(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_supplier */
extern void T370f117(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_local_supplier */
extern void T884f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_variable_declaration */
extern void T370f116(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_local_type_validity */
extern void T370f115(GE_context* ac, T0* C, T0* a1);
extern T1 T370f115ot1(T0* a1, T0** a2);
/* ET_TYPE_CHECKER.check_creation_type_validity */
extern void T373f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T373f19ot1(T0* a1, T0** a2);
extern T1 T373f19ot2(T0* a1, T0** a2);
extern T1 T373f19ot3(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vtcg4a_error */
extern void T77f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4a */
extern T0* T532c825(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T77f75(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg4a_error */
extern void T36f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T36f74(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.ise_6_0_6_7358 */
extern unsigned char ge191os1997;
extern T0* ge191ov1997;
extern T0* T373f12(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtcg4b_error */
extern void T77f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4b */
extern T0* T532c824(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vtcg4b_error */
extern void T36f285(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_CONSTRAINT_CREATOR.has_feature */
extern T1 T1028f8(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.is_empty */
extern T1 T1028f9(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.error_handler */
extern T0* T373f11(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.set_fatal_error */
extern void T373f20(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.current_system */
extern T0* T373f10(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.check_type_validity */
extern void T373f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vrle1a_error */
extern void T36f234(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle1a */
extern T0* T532c776(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T36f35(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle1a_error */
extern void T77f235(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T77f36(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle2a_error */
extern void T36f233(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle2a */
extern T0* T532c775(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T36f34(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle2a_error */
extern void T77f234(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T77f35(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0b_error */
extern void T36f232(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0b */
extern T0* T532c774(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vreg0b_error */
extern void T77f233(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_across_components_validity */
extern void T370f102(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_object_tests_validity */
extern void T370f101(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuot3a_error */
extern void T36f231(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuot3a */
extern T0* T532c773(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T36f32(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuot3a_error */
extern void T77f232(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T77f33(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_6_4_7_7252 */
extern unsigned char ge191os2011;
extern T0* ge191ov2011;
extern T0* T370f40(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_formal_arguments_validity */
extern void T370f100(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_argument_supplier */
extern void T370f114(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_argument_supplier */
extern void T884f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_formal_argument_declaration */
extern void T370f113(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_signature_type_validity */
extern void T370f112(GE_context* ac, T0* C, T0* a1);
extern T1 T370f112ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure */
extern void T79f146(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T79f148(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_rescue_validity */
extern void T79f155(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_instructions_validity */
extern void T79f154(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_locals_validity */
extern void T79f153(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_supplier */
extern void T79f161(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable_declaration */
extern void T79f160(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_type_validity */
extern void T79f159(GE_context* ac, T0* C, T0* a1);
extern T1 T79f159ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_components_validity */
extern void T79f152(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_tests_validity */
extern void T79f151(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_4_7_7252 */
extern T0* T79f53(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_arguments_validity */
extern void T79f150(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_argument_supplier */
extern void T79f158(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument_declaration */
extern void T79f157(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_signature_type_validity */
extern void T79f156(GE_context* ac, T0* C, T0* a1);
extern T1 T79f156ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_do_procedure */
extern void T74f942(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure */
extern void T74f945(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_procedure */
extern void T74f947(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_address_routine */
extern void T74f949(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.argument_type_set */
extern T0* T74f448(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_address_routine_name */
extern void T74f955(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_feature_name_comment */
extern void T74f950(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_internal_routine */
extern void T74f948(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.print_internal_routine_body_declaration */
extern void T74f954(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_compound */
extern void T74f958(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_instruction */
extern void T74f959(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.reset_rescue_data */
extern void T74f957(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_malloc_current */
extern void T74f953(GE_context* ac, T0* C, T0* a1);
extern T1 T74f953ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.current_universe */
extern T0* T74f451(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_feature_trace_message_call */
extern void T74f952(GE_context* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_unindented_feature_info_message_call */
extern void T74f956(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_routine_name */
extern void T74f951(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T74f951ot1(T0* a1, T0** a2);
/* DS_HASH_SET [ET_FEATURE].force_last */
extern void T296f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].slots_put */
extern void T296f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].clashes_put */
extern void T296f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].resize */
extern void T296f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].clashes_resize */
extern void T296f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].special_integer_ */
extern T0* T296f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].key_storage_resize */
extern void T296f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_resize */
extern void T296f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].slots_resize */
extern void T296f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_capacity */
extern T6 T296f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_put */
extern void T296f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_PRECURSOR_CHECKER.process_deferred_procedure */
extern void T1306f11(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_deferred_procedure */
extern void T1305f15(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_procedure */
extern void T370f77(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_procedure_validity */
extern void T370f89(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_procedure */
extern void T79f147(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_procedure_validity */
extern void T79f149(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_procedure */
extern void T74f943(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_procedure */
extern void T74f946(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_named_object_test */
extern void T1306f85(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_named_object_test */
extern void T387f56(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_named_object_test */
extern void T383f61(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE.add_object_test */
extern void T382f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].force_last */
extern void T751f15(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].resize */
extern void T751f16(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T751f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].extendible */
extern T1 T751f8(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vuot1f_error */
extern void T77f520(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1f */
extern T0* T532c1049(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T77f129(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot1f_error */
extern void T36f519(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T36f128(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.error_handler */
extern T0* T383f6(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.current_system */
extern T0* T383f7(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.set_fatal_error */
extern void T383f63(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.process_named_object_test */
extern void T370f178(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_named_object_test_validity */
extern void T370f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_named_object_test */
extern void T370f272(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuot4b_error */
extern void T36f413(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuot4b */
extern T0* T532c943(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T36f129(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuot4b_error */
extern void T77f414(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T77f130(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot4a_error */
extern void T36f412(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuot4a */
extern T0* T532c942(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot4a_error */
extern void T77f413(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.ise_6_3_7_5660 */
extern unsigned char ge191os2007;
extern T0* ge191ov2007;
extern T0* T370f48(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vuot1e_error */
extern void T36f411(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1e */
extern T0* T532c941(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1e_error */
extern void T77f412(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1d_error */
extern void T36f410(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1d */
extern T0* T532c940(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1d_error */
extern void T77f411(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].remove_last */
extern void T375f15(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].move_last_cursors_after */
extern void T375f17(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_next_cursor */
extern void T728f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_after */
extern void T728f6(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vuot1c_error */
extern void T36f409(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1c */
extern T0* T532c939(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1c_error */
extern void T77f410(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1b_error */
extern void T36f408(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1b */
extern T0* T532c938(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1b_error */
extern void T77f409(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].item */
extern T0* T375f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].force_last */
extern void T375f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].resize */
extern void T375f16(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_capacity */
extern T6 T375f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].extendible */
extern T1 T375f10(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_vuot1a_error */
extern void T36f407(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1a */
extern T0* T532c937(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1a_error */
extern void T77f408(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].force_last */
extern void T381f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_put */
extern void T381f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_put */
extern void T381f66(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_put */
extern void T381f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].resize */
extern void T381f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_resize */
extern void T381f71(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].special_integer_ */
extern T0* T381f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_resize */
extern void T381f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_resize */
extern void T381f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_resize */
extern void T381f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T381f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_put */
extern void T381f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_CHECKER.check_type_validity */
extern void T370f118(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_named_object_test */
extern void T79f365(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_named_object_test_validity */
extern void T79f441(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_named_object_test */
extern void T79f487(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_named_object_test_dynamic_types */
extern void T79f516(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_constant_expression */
extern void T79f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].force_last */
extern void T372f62(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T372f34(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_3_7_5660 */
extern T0* T79f115(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_type_validity */
extern void T79f224(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_named_object_test */
extern void T74f960(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test */
extern void T74f1007(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].force_last */
extern void T281f14(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].force */
extern void T671f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST].fill_with */
extern void T670f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST].extend */
extern void T670f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].resize */
extern void T281f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].aliased_resized_area */
extern T0* T671f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBJECT_TEST].aliased_resized_area */
extern T0* T670f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].new_capacity */
extern T6 T281f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].extendible */
extern T1 T281f8(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_regular_manifest_string */
extern void T1306f43(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_manifest_string */
extern void T387f49(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_manifest_string */
extern void T383f54(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_manifest_string */
extern void T370f171(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_manifest_string_validity */
extern void T370f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_manifest_string_validity */
extern void T370f255(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_32_constant */
extern void T370f325(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_8_constant */
extern void T370f324(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vwmq0d_error */
extern void T36f438(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0d */
extern T0* T532c968(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.type_name */
extern T0* T532f198(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T36f72(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwmq0d_error */
extern void T77f439(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T77f73(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_manifest_string */
extern void T79f323(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_manifest_string_validity */
extern void T79f401(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_string_validity */
extern void T79f453(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_32_constant */
extern void T79f490(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_constant */
extern void T79f517(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_manifest_string_area_dynamic_type */
extern void T79f524(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_8_constant */
extern void T79f489(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_manifest_string */
extern void T74f961(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_manifest_string */
extern void T74f1008(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_string */
extern void T74f1058(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bit_constant */
extern void T1306f44(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_bit_constant */
extern void T387f5(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_bit_constant */
extern void T383f10(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bit_constant */
extern void T370f127(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bit_constant_validity */
extern void T370f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_bit_constant */
extern void T370f236(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bit_constant */
extern void T79f324(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bit_constant_validity */
extern void T79f402(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_bit_constant */
extern void T79f454(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_bit_constant */
extern void T74f962(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bit_constant */
extern void T74f1009(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_void */
extern void T1306f53(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_void */
extern void T387f6(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_void */
extern void T383f11(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_void */
extern void T370f128(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_void_validity */
extern void T370f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_void_constant */
extern void T370f237(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_void */
extern void T79f333(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_void_validity */
extern void T79f411(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_void_constant */
extern void T79f457(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_void */
extern void T74f963(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_void */
extern void T74f1010(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_across_expression */
extern void T1306f87(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_invariants */
extern void T1306f92(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.assertion */
extern T0* T1137f6(GE_context* ac, T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.item */
extern T0* T1137f7(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_across_expression */
extern void T387f7(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_across_expression */
extern void T383f12(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_across_expression */
extern void T370f129(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_expression_validity */
extern void T370f182(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_across_expression */
extern void T370f241(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].remove_found_item */
extern void T384f63(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].remove_position */
extern void T384f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].key_storage_put */
extern void T384f71(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_storage_put */
extern void T384f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].key_storage_keep_head */
extern void T384f75(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_storage_keep_head */
extern void T384f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].clashes_put */
extern void T384f69(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].slots_put */
extern void T384f70(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].move_cursors_forth */
extern void T384f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].internal_set_key_equality_tester */
extern void T384f72(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_CURSOR_SCOPE.remove_across_components */
extern void T385f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].prune_last */
extern void T757f15(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.build_negated_scope */
extern void T383f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.build_negated_scope */
extern void T387f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_loop_variant_validity */
extern void T370f240(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vave0a_error */
extern void T36f432(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vave0a */
extern T0* T532c962(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vave_error */
extern T1 T36f136(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vave0a_error */
extern void T77f433(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vave_error */
extern T1 T77f137(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_invariant_validity */
extern void T370f239(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_CURSOR_SCOPE.add_across_component */
extern void T385f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].force_last */
extern void T757f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].resize */
extern void T757f16(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].new_capacity */
extern T6 T757f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].extendible */
extern T1 T757f8(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_across_component_header_validity */
extern void T370f238(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_instruction_validity */
extern void T370f235(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T370f299(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.free_overloaded_procedures */
extern void T370f344(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].force_last */
extern void T376f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].force */
extern void T729f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].fill_with */
extern void T731f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].extend */
extern void T731f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].resize */
extern void T376f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].aliased_resized_area */
extern T0* T729f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].aliased_resized_area */
extern T0* T731f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_capacity */
extern T6 T376f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].extendible */
extern T1 T376f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].first */
extern T0* T730f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].is_empty */
extern T1 T730f13(GE_context* ac, T0* C);
/* ET_CLASS.add_overloaded_procedures */
extern void T82f276(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PROCEDURE_LIST.add_overloaded_features */
extern void T267f14(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T267f14ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.new_overloaded_procedures */
extern T0* T370f51(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].remove_last */
extern void T376f15(GE_context* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].keep_head */
extern void T731f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].set_count */
extern void T731f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].move_last_cursors_after */
extern void T376f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_next_cursor */
extern void T732f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_after */
extern void T732f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].last */
extern T0* T376f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].is_empty */
extern T1 T376f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].force_last */
extern void T384f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].resize */
extern void T384f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].clashes_resize */
extern void T384f79(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].special_integer_ */
extern T0* T384f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].key_storage_resize */
extern void T384f78(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_storage_resize */
extern void T384f77(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].slots_resize */
extern void T384f76(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].new_capacity */
extern T6 T384f31(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_across_cursor_declaration */
extern void T370f301(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_CURSOR_SCOPE.hidden_across_component */
extern T0* T385f5(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit2e_error */
extern void T36f431(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2e */
extern T0* T532c961(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_voit2_error */
extern T1 T36f135(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_voit2e_error */
extern void T77f432(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_voit2_error */
extern T1 T77f136(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE.hidden_object_test */
extern T0* T382f5(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit2d_error */
extern void T36f430(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2d */
extern T0* T532c960(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2d_error */
extern void T77f431(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2c_error */
extern void T36f429(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2c */
extern T0* T532c959(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2c_error */
extern void T77f430(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2b_error */
extern void T36f428(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2b */
extern T0* T532c958(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2b_error */
extern void T77f429(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2a_error */
extern void T36f427(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2a */
extern T0* T532c957(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2a_error */
extern void T77f428(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit1a_error */
extern void T36f426(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_voit1a */
extern T0* T532c956(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_voit1_error */
extern T1 T36f134(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_voit1a_error */
extern void T77f427(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_voit1_error */
extern T1 T77f135(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_expression */
extern void T79f367(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_expression_validity */
extern void T79f443(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_expression */
extern void T79f488(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T79f376(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T79f376p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T79f375(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T79f375p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_component_header_validity */
extern void T79f290(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_instruction_validity */
extern void T79f257(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T79f288(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_procedures */
extern void T79f372(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_procedures */
extern T0* T79f109(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_cursor_declaration */
extern void T79f374(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_across_expression */
extern void T74f964(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_expression */
extern void T74f1011(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bracket_expression */
extern void T1306f71(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_ARGUMENT_LIST.process */
extern void T986f15(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bracket_argument_list */
extern void T1306f103(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_bracket_expression */
extern void T387f8(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_bracket_expression */
extern void T383f13(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bracket_expression */
extern void T370f130(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bracket_expression_validity */
extern void T370f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bracket_expression */
extern void T79f351(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bracket_expression_validity */
extern void T79f429(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_bracket_expression */
extern void T74f965(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bracket_expression */
extern void T74f1012(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_call_agent */
extern void T1306f75(GE_context* ac, T0* C, T0* a1);
extern T1 T1306f75ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_agent_argument_operand_list */
extern void T1306f96(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_call_agent */
extern void T387f9(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_call_agent */
extern void T383f14(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_agent */
extern void T370f131(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_agent_validity */
extern void T370f184(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T370f184ot1(T0* a1, T0** a2);
extern T1 T370f184ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_typed_call_agent_validity */
extern void T370f244(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T370f244ot1(T0* a1, T0** a2);
extern T1 T370f244ot2(T0* a1, T0** a2);
/* ET_CALL_AGENT.is_procedure */
extern T1 T992f20(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vpca1b_error */
extern void T36f434(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca1b */
extern T0* T532c964(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T36f137(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca1b_error */
extern void T77f435(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T77f138(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_tuple_label_call_agent_validity */
extern void T370f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_tuple_label_call_agent */
extern void T370f353(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_query_call_agent_validity */
extern void T370f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_query_call_agent */
extern void T370f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_agent_arguments_validity */
extern void T370f334(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T370f334ot1(T0* a1, T0** a2);
extern T1 T370f334ot2(T0* a1, T0** a2);
extern T1 T370f334ot3(T0* a1, T0** a2);
extern T1 T370f334ot4(T0* a1, T0** a2);
extern T1 T370f334ot5(T0* a1, T0** a2);
extern T1 T370f334ot6(T0* a1, T0** a2);
extern T1 T370f334ot7(T0* a1, T0** a2);
extern T1 T370f334ot8(T0* a1, T0** a2);
extern T1 T370f334ot9(T0* a1, T0** a2);
extern T1 T370f334ot10(T0* a1, T0** a2);
extern T1 T370f334ot11(T0* a1, T0** a2);
extern T1 T370f334ot12(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vpca5b_error */
extern void T36f490(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca5b */
extern T0* T532c1020(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T36f157(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5b_error */
extern void T77f491(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T77f158(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca5a_error */
extern void T36f489(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca5a */
extern T0* T532c1019(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca5a_error */
extern void T77f490(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca4b_error */
extern void T36f488(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca4b */
extern T0* T532c1018(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T36f156(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca4b_error */
extern void T77f489(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T77f157(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca4a_error */
extern void T36f487(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca4a */
extern T0* T532c1017(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca4a_error */
extern void T77f488(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put */
extern void T976f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.item */
extern T0* T976f8(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_vpca3b_error */
extern void T36f486(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca3b */
extern T0* T532c1016(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T36f155(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3b_error */
extern void T77f487(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T77f156(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca3a_error */
extern void T36f485(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpca3a */
extern T0* T532c1015(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpca3a_error */
extern void T77f486(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.force_first */
extern void T252f34(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resize */
extern void T252f35(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.new_capacity */
extern T6 T252f24(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.capacity */
extern T6 T252f23(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_implicit_agent_open_arguments */
extern void T370f333(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.put_last */
extern void T1796f7(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].force */
extern void T1883f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].fill_with */
extern void T1882f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].extend */
extern void T1882f7(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.fixed_array */
extern unsigned char ge468os7546;
extern T0* ge468ov7546;
extern T0* T1796f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].default_create */
extern T0* T1883c2(GE_context* ac);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.make */
extern T0* T1797c5(GE_context* ac, T0* a1, T6 a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.make_with_capacity */
extern T0* T1796c6(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T1883f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make_empty */
extern T0* T1882c4(GE_context* ac, T6 a1);
/* ET_ERROR_HANDLER.report_vpca2a_error */
extern void T36f480(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vpca2a */
extern T0* T532c1010(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T36f153(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca2a_error */
extern void T77f481(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T77f154(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_procedure_call_agent_validity */
extern void T370f307(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_procedure_call_agent */
extern void T370f351(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_procedure */
extern void T992f34(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_qualified_call_agent_validity */
extern void T370f243(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T370f243ot1(T0* a1, T0** a2);
extern T1 T370f243ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_agent_validity */
extern void T370f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_query_call_agent_validity */
extern void T370f305(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_agent_validity */
extern void T370f304(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_call_agent_validity */
extern void T370f242(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpca1a_error */
extern void T36f433(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpca1a */
extern T0* T532c963(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpca1a_error */
extern void T77f434(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_agent_validity */
extern void T370f303(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_query_call_agent */
extern void T370f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_agent_validity */
extern void T370f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_procedure_call_agent */
extern void T370f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_agent */
extern void T79f355(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_agent_validity */
extern void T79f433(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f433ot1(T0* a1, T0** a2);
extern T1 T79f433ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_call_agent_validity */
extern void T79f475(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f475ot1(T0* a1, T0** a2);
extern T1 T79f475ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_tuple_label_call_agent_validity */
extern void T79f507(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_call_agent */
extern void T79f522(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f522ot1(T0* a1, T0** a2);
extern T1 T79f522ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_query_call */
extern void T79f527(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.result_type_set */
extern T0* T335f71(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.is_empty */
extern T1 T269f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_query_call_agent_validity */
extern void T79f506(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_query_call_agent */
extern void T79f521(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_agent */
extern void T79f526(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T79f526ot1(T0* a1, T0** a2);
extern T1 T79f526ot2(T0* a1, T0** a2);
extern T1 T79f526ot3(T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_agent_closed_operands_dynamic_types */
extern void T79f529(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f529ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_agent_arguments_validity */
extern void T79f513(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T79f513ot1(T0* a1, T0** a2);
extern T1 T79f513ot2(T0* a1, T0** a2);
extern T1 T79f513ot3(T0* a1, T0** a2);
extern T1 T79f513ot4(T0* a1, T0** a2);
extern T1 T79f513ot5(T0* a1, T0** a2);
extern T1 T79f513ot6(T0* a1, T0** a2);
extern T1 T79f513ot7(T0* a1, T0** a2);
extern T1 T79f513ot8(T0* a1, T0** a2);
extern T1 T79f513ot9(T0* a1, T0** a2);
extern T1 T79f513ot10(T0* a1, T0** a2);
extern T1 T79f513ot11(T0* a1, T0** a2);
extern T1 T79f513ot12(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_implicit_agent_open_arguments */
extern void T79f512(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_procedure_call_agent_validity */
extern void T79f505(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_procedure_call_agent */
extern void T79f520(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_agent_validity */
extern void T79f474(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f474ot1(T0* a1, T0** a2);
extern T1 T79f474ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_agent_validity */
extern void T79f504(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_agent_validity */
extern void T79f503(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_agent_validity */
extern void T79f502(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_agent_validity */
extern void T79f473(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_agent_validity */
extern void T79f501(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_query_call_agent */
extern void T79f519(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_agent */
extern void T79f525(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T79f525ot1(T0* a1, T0** a2);
extern T1 T79f525ot2(T0* a1, T0** a2);
extern T1 T79f525ot3(T0* a1, T0** a2);
extern T1 T79f525ot4(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_call_agent_result_dynamic_types */
extern void T79f530(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_agent_validity */
extern void T79f500(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_procedure_call_agent */
extern void T79f518(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_call_agent */
extern void T74f966(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent */
extern void T74f1014(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent */
extern void T74f1060(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1060ot1(T0* a1, T0** a2);
extern T1 T74f1060ot2(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [ET_AGENT].force_last */
extern void T284f14(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].force */
extern void T680f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AGENT].fill_with */
extern void T679f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT].extend */
extern void T679f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].resize */
extern void T284f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].aliased_resized_area */
extern T0* T680f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT].aliased_resized_area */
extern T0* T679f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].new_capacity */
extern T6 T284f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].extendible */
extern T1 T284f8(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_agent_body_declaration */
extern void T74f1013(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_instruction */
extern void T74f1059(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1059ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_arguments */
extern void T288f14(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_name */
extern void T288f13(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_target */
extern void T288f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T291f30(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_name */
extern void T291f29(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_array */
extern void T1306f73(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.expression */
extern T0* T1140f13(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.item */
extern T0* T1140f7(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_array */
extern void T387f10(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_array */
extern void T383f15(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_array */
extern void T370f132(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_array_validity */
extern void T370f185(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T370f185ot1(T0* a1, T0** a2);
extern T1 T370f185ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_manifest_array */
extern void T370f245(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_ARRAY.put */
extern void T1140f31(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_array */
extern void T79f353(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_array_validity */
extern void T79f431(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f431ot1(T0* a1, T0** a2);
extern T1 T79f431ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_array */
extern void T79f471(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f471ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_manifest_array */
extern void T74f967(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array */
extern void T74f1015(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1015ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_parenthesized_expression */
extern void T1306f72(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_parenthesized_expression */
extern void T387f11(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_parenthesized_expression */
extern void T383f16(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_parenthesized_expression */
extern void T370f133(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_parenthesized_expression_validity */
extern void T370f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_parenthesized_expression */
extern void T79f352(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_parenthesized_expression_validity */
extern void T79f430(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_parenthesized_expression */
extern void T74f968(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_parenthesized_expression */
extern void T74f1016(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_expression */
extern void T1306f59(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_static_call_expression */
extern void T387f12(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_static_call_expression */
extern void T383f17(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_expression */
extern void T370f134(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_expression_validity */
extern void T370f188(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_static_query_call_expression_validity */
extern void T370f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_static_call_expression */
extern void T370f321(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_static_supplier */
extern void T370f319(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_static_supplier */
extern void T884f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_parenthesis_call_validity */
extern void T370f251(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T370f251ot1(T0* a1, T0** a2);
extern T1 T370f251ot2(T0* a1, T0** a2);
/* ET_STATIC_CALL_INSTRUCTION.set_parenthesis_call */
extern void T1260f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.set_parenthesis_call */
extern void T1173f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_dotnet_query_call_expression_validity */
extern void T370f250(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_expression */
extern void T79f339(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_expression_validity */
extern void T79f417(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_query_call_expression_validity */
extern void T79f392(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_expression */
extern void T79f449(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.set_static */
extern void T310f60(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_static */
extern void T248f59(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_supplier */
extern void T79f389(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_parenthesis_call_validity */
extern void T79f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T79f306ot1(T0* a1, T0** a2);
extern T1 T79f306ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_query_call_expression_validity */
extern void T79f462(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_expression */
extern void T74f969(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_expression */
extern void T74f1017(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1017ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_strip_expression */
extern void T1306f74(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_strip_expression */
extern void T387f13(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_strip_expression */
extern void T383f18(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_strip_expression */
extern void T370f135(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_strip_expression_validity */
extern void T370f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_strip_expression */
extern void T370f253(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwst2a_error */
extern void T36f387(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst2a */
extern T0* T532c917(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T36f117(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst2a_error */
extern void T77f388(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T77f118(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1a_error */
extern void T36f386(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vwst1a */
extern T0* T532c916(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T36f116(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1a_error */
extern void T77f387(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T77f117(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1b_error */
extern void T36f385(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst1b */
extern T0* T532c915(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwst1b_error */
extern void T77f386(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.feature_name */
extern T0* T1176f20(GE_context* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.item */
extern T0* T1176f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_strip_expression */
extern void T79f354(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_strip_expression_validity */
extern void T79f432(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_strip_expression */
extern void T79f472(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_strip_expression */
extern void T74f970(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_strip_expression */
extern void T74f1018(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c3_character_constant */
extern void T1306f88(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c3_character_constant */
extern void T387f14(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c3_character_constant */
extern void T383f19(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c3_character_constant */
extern void T370f136(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c3_character_constant_validity */
extern void T370f190(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_character_constant_validity */
extern void T370f254(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_32_constant */
extern void T370f323(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_8_constant */
extern void T370f322(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vwmq0c_error */
extern void T36f437(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0c */
extern T0* T532c967(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwmq0c_error */
extern void T77f438(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c3_character_constant */
extern void T79f368(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c3_character_constant_validity */
extern void T79f444(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_character_constant_validity */
extern void T79f458(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_32_constant */
extern void T79f494(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_8_constant */
extern void T79f493(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c3_character_constant */
extern void T74f971(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_character_constant */
extern void T74f1019(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_character_8 */
extern void T74f1061(GE_context* ac, T0* C, T2 a1);
/* UT_INTEGER_FORMATTER.put_decimal_natural_32 */
extern void T353f3(GE_context* ac, T0* C, T0* a1, T10 a2);
/* ET_PRECURSOR_CHECKER.process_verbatim_string */
extern void T1306f89(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_verbatim_string */
extern void T387f15(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_verbatim_string */
extern void T383f20(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_verbatim_string */
extern void T370f137(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_verbatim_string_validity */
extern void T370f191(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_verbatim_string */
extern void T79f369(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_verbatim_string_validity */
extern void T79f445(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_verbatim_string */
extern void T74f972(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_verbatim_string */
extern void T74f1020(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_special_manifest_string */
extern void T1306f90(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_special_manifest_string */
extern void T387f16(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_special_manifest_string */
extern void T383f21(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_special_manifest_string */
extern void T370f138(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_special_manifest_string_validity */
extern void T370f192(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_special_manifest_string */
extern void T79f370(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_special_manifest_string_validity */
extern void T79f446(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_special_manifest_string */
extern void T74f973(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_special_manifest_string */
extern void T74f1021(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_integer_constant */
extern void T1306f45(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_integer_constant */
extern void T387f17(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_integer_constant */
extern void T383f22(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_integer_constant */
extern void T370f139(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_integer_constant_validity */
extern void T370f193(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_integer_constant_validity */
extern void T370f111(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYMBOL_OPERATOR.is_minus */
extern T1 T947f16(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_natural_64_constant */
extern void T370f126(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_32_constant */
extern void T370f125(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_16_constant */
extern void T370f124(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_8_constant */
extern void T370f123(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_64_constant */
extern void T370f122(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_32_constant */
extern void T370f121(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_16_constant */
extern void T370f120(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvwmc2a_error */
extern void T36f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvwmc2a */
extern T0* T532c823(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T36f73(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvwmc2a_error */
extern void T77f285(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T77f74(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_8_constant */
extern void T370f119(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vwmq0a_error */
extern void T36f283(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0a */
extern T0* T532c822(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwmq0a_error */
extern void T77f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_integer_constant */
extern void T79f325(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_integer_constant_validity */
extern void T79f403(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_integer_constant_validity */
extern void T79f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_64_constant */
extern void T79f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_32_constant */
extern void T79f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_16_constant */
extern void T79f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_8_constant */
extern void T79f229(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_64_constant */
extern void T79f228(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_32_constant */
extern void T79f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_16_constant */
extern void T79f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_8_constant */
extern void T79f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_integer_constant */
extern void T74f974(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_integer_constant */
extern void T74f1022(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_integer_constant */
extern void T74f1062(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_64 */
extern void T268f17(GE_context* ac, T0* C, T11 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_64 */
extern void T270f18(GE_context* ac, T0* C, T11 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_32 */
extern void T268f16(GE_context* ac, T0* C, T10 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_32 */
extern void T270f17(GE_context* ac, T0* C, T10 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_16 */
extern void T268f15(GE_context* ac, T0* C, T9 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_16 */
extern void T270f16(GE_context* ac, T0* C, T9 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_8 */
extern void T268f14(GE_context* ac, T0* C, T8 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_8 */
extern void T270f15(GE_context* ac, T0* C, T8 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_64 */
extern void T268f10(GE_context* ac, T0* C, T7 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer_64 */
extern void T270f11(GE_context* ac, T0* C, T7 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_32 */
extern void T268f13(GE_context* ac, T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer_32 */
extern void T270f14(GE_context* ac, T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_16 */
extern void T268f12(GE_context* ac, T0* C, T5 a1);
/* INTEGER_16.to_integer_64 */
extern T7 T5f8(GE_context* ac, T5* C);
/* KL_STRING_OUTPUT_STREAM.put_integer_16 */
extern void T270f13(GE_context* ac, T0* C, T5 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_8 */
extern void T268f11(GE_context* ac, T0* C, T4 a1);
/* INTEGER_8.to_integer_64 */
extern T7 T4f8(GE_context* ac, T4* C);
/* KL_STRING_OUTPUT_STREAM.put_integer_8 */
extern void T270f12(GE_context* ac, T0* C, T4 a1);
/* ET_PRECURSOR_CHECKER.process_underscored_integer_constant */
extern void T1306f46(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T387f18(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T383f23(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_integer_constant */
extern void T370f140(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_integer_constant_validity */
extern void T370f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_integer_constant */
extern void T79f326(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_integer_constant_validity */
extern void T79f404(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_integer_constant */
extern void T74f975(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_integer_constant */
extern void T74f1023(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_hexadecimal_integer_constant */
extern void T1306f47(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T387f19(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T383f24(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_hexadecimal_integer_constant */
extern void T370f141(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_hexadecimal_integer_constant_validity */
extern void T370f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_hexadecimal_integer_constant */
extern void T79f327(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_hexadecimal_integer_constant_validity */
extern void T79f405(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_hexadecimal_integer_constant */
extern void T74f976(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_hexadecimal_integer_constant */
extern void T74f1024(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_octal_integer_constant */
extern void T1306f48(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_octal_integer_constant */
extern void T387f20(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_octal_integer_constant */
extern void T383f25(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_octal_integer_constant */
extern void T370f142(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_octal_integer_constant_validity */
extern void T370f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_octal_integer_constant */
extern void T79f328(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_octal_integer_constant_validity */
extern void T79f406(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_octal_integer_constant */
extern void T74f977(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_octal_integer_constant */
extern void T74f1025(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_binary_integer_constant */
extern void T1306f49(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_binary_integer_constant */
extern void T387f21(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_binary_integer_constant */
extern void T383f26(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_binary_integer_constant */
extern void T370f143(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_binary_integer_constant_validity */
extern void T370f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_binary_integer_constant */
extern void T79f329(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_binary_integer_constant_validity */
extern void T79f407(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_binary_integer_constant */
extern void T74f978(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_binary_integer_constant */
extern void T74f1026(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_real_constant */
extern void T1306f50(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_real_constant */
extern void T387f22(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_real_constant */
extern void T383f27(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_real_constant */
extern void T370f144(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_real_constant_validity */
extern void T370f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_real_constant_validity */
extern void T370f256(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_UNDERSCORED_REAL_CONSTANT.set_type */
extern void T1208f42(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_type */
extern void T1207f42(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_real_64_constant */
extern void T370f327(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_real_32_constant */
extern void T370f326(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vwmq0b_error */
extern void T36f439(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0b */
extern T0* T532c969(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwmq0b_error */
extern void T77f440(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_real_constant */
extern void T79f330(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_real_constant_validity */
extern void T79f408(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_real_constant_validity */
extern void T79f455(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_64_constant */
extern void T79f492(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_32_constant */
extern void T79f491(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_real_constant */
extern void T74f979(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_real_constant */
extern void T74f1027(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.is_negative */
extern T1 T1207f16(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_underscored_real_constant */
extern void T1306f51(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_real_constant */
extern void T387f23(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_real_constant */
extern void T383f28(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_real_constant */
extern void T370f145(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_real_constant_validity */
extern void T370f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_real_constant */
extern void T79f331(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_real_constant_validity */
extern void T79f409(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_real_constant */
extern void T74f980(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_real_constant */
extern void T74f1028(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.is_negative */
extern T1 T1208f16(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_true_constant */
extern void T1306f52(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_true_constant */
extern void T387f24(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_true_constant */
extern void T383f29(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_true_constant */
extern void T370f146(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_true_constant_validity */
extern void T370f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_boolean_constant */
extern void T370f257(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_true_constant */
extern void T79f332(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_true_constant_validity */
extern void T79f410(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_boolean_constant */
extern void T79f456(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_true_constant */
extern void T74f981(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_true_constant */
extern void T74f1029(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_false_constant */
extern void T1306f54(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_false_constant */
extern void T387f25(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_false_constant */
extern void T383f30(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_false_constant */
extern void T370f147(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_false_constant_validity */
extern void T370f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_false_constant */
extern void T79f334(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_false_constant_validity */
extern void T79f412(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_false_constant */
extern void T74f982(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_false_constant */
extern void T74f1030(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c1_character_constant */
extern void T1306f55(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c1_character_constant */
extern void T387f26(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c1_character_constant */
extern void T383f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c1_character_constant */
extern void T370f148(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c1_character_constant_validity */
extern void T370f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c1_character_constant */
extern void T79f335(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c1_character_constant_validity */
extern void T79f413(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c1_character_constant */
extern void T74f983(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c2_character_constant */
extern void T1306f56(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c2_character_constant */
extern void T387f27(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c2_character_constant */
extern void T383f32(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c2_character_constant */
extern void T370f149(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c2_character_constant_validity */
extern void T370f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c2_character_constant */
extern void T79f336(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c2_character_constant_validity */
extern void T79f414(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c2_character_constant */
extern void T74f984(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function */
extern void T1306f18(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_do_function */
extern void T1305f22(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function */
extern void T370f78(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_validity */
extern void T370f90(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vevi0c_error */
extern void T36f271(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0c */
extern T0* T532c810(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vevi0c_error */
extern void T77f272(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_result_supplier */
extern void T370f108(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_result_supplier */
extern void T884f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_result_declaration */
extern void T370f107(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_query_type_validity */
extern void T370f106(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function */
extern void T79f163(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_validity */
extern void T79f168(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_supplier */
extern void T79f175(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_declaration */
extern void T79f174(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_type_validity */
extern void T79f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_do_function */
extern void T74f985(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function */
extern void T74f1031(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_function */
extern void T74f1063(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function */
extern void T1306f19(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_once_function */
extern void T1305f23(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function */
extern void T370f79(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_validity */
extern void T370f91(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_keys_validity */
extern void T370f109(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vvok2a_error */
extern void T36f273(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vvok2a */
extern T0* T532c812(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T36f64(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vvok2a_error */
extern void T77f274(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T77f65(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_process_key */
extern T1 T1693f4(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_expected_key */
extern T1 T1693f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_STANDARD_ONCE_KEYS.string_ */
extern T0* T1693f10(GE_context* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.is_thread_key */
extern T1 T1693f3(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vvok1a_error */
extern void T36f272(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1a */
extern T0* T532c811(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T36f63(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vvok1a_error */
extern void T77f273(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T77f64(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_object_key */
extern T1 T1693f2(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.standard_once_keys */
extern unsigned char ge800os9374;
extern T0* ge800ov9374;
extern T0* T370f42(GE_context* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.default_create */
extern T0* T1693c11(GE_context* ac);
/* ET_MANIFEST_STRING_LIST.manifest_string */
extern T0* T1146f7(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_STRING_LIST.item */
extern T0* T1146f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function */
extern void T79f164(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_validity */
extern void T79f169(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_keys_validity */
extern void T79f176(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.standard_once_keys */
extern T0* T79f58(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_once_function */
extern void T74f986(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function */
extern void T74f1032(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.has_object_key */
extern T1 T1693f1(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.has_expected_key */
extern T1 T1693f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.standard_once_keys */
extern T0* T74f465(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_deferred_function */
extern void T1306f20(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_deferred_function */
extern void T1305f24(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_function */
extern void T370f80(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_function_validity */
extern void T370f92(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_function */
extern void T79f165(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_function_validity */
extern void T79f170(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_function */
extern void T74f987(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_function */
extern void T74f1033(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure */
extern void T1306f21(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_once_procedure */
extern void T1305f25(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure */
extern void T370f81(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_validity */
extern void T370f93(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure */
extern void T79f166(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_validity */
extern void T79f171(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_procedure */
extern void T74f988(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure */
extern void T74f1034(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure */
extern void T1306f22(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_external_procedure */
extern void T1305f26(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_external_procedure_validity */
extern void T1305f28(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_procedure_validity */
extern void T1305f30(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbu1a_error */
extern void T77f498(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbu1a */
extern T0* T532c1027(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T77f162(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbu1a_error */
extern void T36f497(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T36f161(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.error_handler */
extern T0* T1305f7(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.current_system */
extern T0* T1305f9(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.set_fatal_error */
extern void T1305f56(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.unknown_builtin_reported */
extern T1 T1305f6(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_builtin_code */
extern void T1237f99(GE_context* ac, T0* C, T6 a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_real_procedure_validity */
extern void T1305f81(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.out_feature_name */
extern unsigned char ge808os11570;
extern T0* ge808ov11570;
extern T0* T81f974(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_64_feature_name */
extern unsigned char ge808os11477;
extern T0* ge808ov11477;
extern T0* T81f1245(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_32_feature_name */
extern unsigned char ge808os11476;
extern T0* ge808ov11476;
extern T0* T81f1243(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_64_feature_name */
extern unsigned char ge808os11438;
extern T0* ge808ov11438;
extern T0* T81f1241(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_32_feature_name */
extern unsigned char ge808os11437;
extern T0* ge808ov11437;
extern T0* T81f1239(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_double_feature_name */
extern unsigned char ge808os11635;
extern T0* ge808ov11635;
extern T0* T81f1177(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_real_feature_name */
extern unsigned char ge808os11643;
extern T0* ge808ov11643;
extern T0* T81f1236(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_64_feature_name */
extern unsigned char ge808os11642;
extern T0* ge808ov11642;
extern T0* T81f1234(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_feature_name */
extern unsigned char ge808os11641;
extern T0* ge808ov11641;
extern T0* T81f1232(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_positive_infinity_feature_name */
extern unsigned char ge808os11534;
extern T0* ge808ov11534;
extern T0* T81f1230(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_negative_infinity_feature_name */
extern unsigned char ge808os11533;
extern T0* ge808ov11533;
extern T0* T81f1228(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_nan_feature_name */
extern unsigned char ge808os11532;
extern T0* ge808ov11532;
extern T0* T81f1226(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_lt_feature_name */
extern unsigned char ge808os11500;
extern T0* ge808ov11500;
extern T0* T81f1167(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_less_feature_name */
extern unsigned char ge808os11530;
extern T0* ge808ov11530;
extern T0* T81f1166(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.prefix_plus_feature_name */
extern unsigned char ge808os11579;
extern T0* ge808ov11579;
extern T0* T81f1208(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identity_feature_name */
extern unsigned char ge808os11488;
extern T0* ge808ov11488;
extern T0* T81f1207(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.prefix_minus_feature_name */
extern unsigned char ge808os11577;
extern T0* ge808ov11577;
extern T0* T81f1164(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.opposite_feature_name */
extern unsigned char ge808os11569;
extern T0* ge808ov11569;
extern T0* T81f1163(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_power_feature_name */
extern unsigned char ge808os11506;
extern T0* ge808ov11506;
extern T0* T81f1161(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.power_feature_name */
extern unsigned char ge808os11576;
extern T0* ge808ov11576;
extern T0* T81f1160(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_divide_feature_name */
extern unsigned char ge808os11495;
extern T0* ge808ov11495;
extern T0* T81f1152(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.quotient_feature_name */
extern unsigned char ge808os11597;
extern T0* ge808ov11597;
extern T0* T81f1151(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_times_feature_name */
extern unsigned char ge808os11507;
extern T0* ge808ov11507;
extern T0* T81f1149(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.product_feature_name */
extern unsigned char ge808os11580;
extern T0* ge808ov11580;
extern T0* T81f1148(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_minus_feature_name */
extern unsigned char ge808os11501;
extern T0* ge808ov11501;
extern T0* T81f1146(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.minus_feature_name */
extern unsigned char ge808os11551;
extern T0* ge808ov11551;
extern T0* T81f1145(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs0a_error */
extern void T77f499(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkbs0a */
extern T0* T532c1028(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T77f163(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs0a_error */
extern void T36f498(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T36f162(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.builtin_feature */
extern T6 T81f933(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_TOKEN_CONSTANTS.infix_plus_feature_name */
extern unsigned char ge808os11505;
extern T0* ge808ov11505;
extern T0* T81f970(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.plus_feature_name */
extern unsigned char ge808os11571;
extern T0* ge808ov11571;
extern T0* T81f969(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_real_ref_procedure_validity */
extern void T1305f80(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_TOKEN_CONSTANTS.positive_infinity_feature_name */
extern unsigned char ge808os11575;
extern T0* ge808ov11575;
extern T0* T81f1215(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.negative_infinity_feature_name */
extern unsigned char ge808os11564;
extern T0* ge808ov11564;
extern T0* T81f1213(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.nan_feature_name */
extern unsigned char ge808os11553;
extern T0* ge808ov11553;
extern T0* T81f1211(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_item_feature_name */
extern unsigned char ge808os11617;
extern T0* ge808ov11617;
extern T0* T81f934(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_ref_class_name */
extern unsigned char ge808os11401;
extern T0* ge808ov11401;
extern T0* T81f795(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_ref_class_name */
extern unsigned char ge808os11399;
extern T0* ge808ov11399;
extern T0* T81f792(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_ref_class_name */
extern unsigned char ge808os11398;
extern T0* ge808ov11398;
extern T0* T81f790(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_ref_class_name */
extern unsigned char ge808os11396;
extern T0* ge808ov11396;
extern T0* T81f788(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_ref_class_name */
extern unsigned char ge808os11394;
extern T0* ge808ov11394;
extern T0* T81f785(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_integer_procedure_validity */
extern void T1305f79(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.bit_not_feature_name */
extern unsigned char ge808os11422;
extern T0* ge808ov11422;
extern T0* T81f1205(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_xor_feature_name */
extern unsigned char ge808os11426;
extern T0* ge808ov11426;
extern T0* T81f1203(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_right_feature_name */
extern unsigned char ge808os11425;
extern T0* ge808ov11425;
extern T0* T81f1201(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_left_feature_name */
extern unsigned char ge808os11424;
extern T0* ge808ov11424;
extern T0* T81f1199(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_and_feature_name */
extern unsigned char ge808os11421;
extern T0* ge808ov11421;
extern T0* T81f1197(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_or_feature_name */
extern unsigned char ge808os11423;
extern T0* ge808ov11423;
extern T0* T81f1195(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_64_feature_name */
extern unsigned char ge808os11418;
extern T0* ge808ov11418;
extern T0* T81f1193(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_32_feature_name */
extern unsigned char ge808os11417;
extern T0* ge808ov11417;
extern T0* T81f1191(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_16_feature_name */
extern unsigned char ge808os11416;
extern T0* ge808ov11416;
extern T0* T81f1189(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_8_feature_name */
extern unsigned char ge808os11415;
extern T0* ge808ov11415;
extern T0* T81f1187(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_64_feature_name */
extern unsigned char ge808os11414;
extern T0* ge808ov11414;
extern T0* T81f1185(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_32_feature_name */
extern unsigned char ge808os11413;
extern T0* ge808ov11413;
extern T0* T81f1183(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_16_feature_name */
extern unsigned char ge808os11412;
extern T0* ge808ov11412;
extern T0* T81f1181(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_8_feature_name */
extern unsigned char ge808os11411;
extern T0* ge808ov11411;
extern T0* T81f1179(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_real_64_feature_name */
extern unsigned char ge808os11640;
extern T0* ge808ov11640;
extern T0* T81f1175(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_real_32_feature_name */
extern unsigned char ge808os11639;
extern T0* ge808ov11639;
extern T0* T81f1173(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_real_feature_name */
extern unsigned char ge808os11637;
extern T0* ge808ov11637;
extern T0* T81f1171(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_character_32_feature_name */
extern unsigned char ge808os11634;
extern T0* ge808ov11634;
extern T0* T81f942(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_character_8_feature_name */
extern unsigned char ge808os11633;
extern T0* ge808ov11633;
extern T0* T81f940(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_mod_feature_name */
extern unsigned char ge808os11502;
extern T0* ge808ov11502;
extern T0* T81f1158(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_remainder_feature_name */
extern unsigned char ge808os11520;
extern T0* ge808ov11520;
extern T0* T81f1157(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_div_feature_name */
extern unsigned char ge808os11494;
extern T0* ge808ov11494;
extern T0* T81f1155(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_quotient_feature_name */
extern unsigned char ge808os11519;
extern T0* ge808ov11519;
extern T0* T81f1154(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_integer_ref_procedure_validity */
extern void T1305f78(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_TOKEN_CONSTANTS.integer_8_ref_class_name */
extern unsigned char ge808os11393;
extern T0* ge808ov11393;
extern T0* T81f783(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_tuple_procedure_validity */
extern void T1305f77(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.reference_item_feature_name */
extern unsigned char ge808os11604;
extern T0* ge808ov11604;
extern T0* T81f80(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_item_feature_name */
extern unsigned char ge808os11601;
extern T0* ge808ov11601;
extern T0* T81f1108(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_item_feature_name */
extern unsigned char ge808os11599;
extern T0* ge808ov11599;
extern T0* T81f1106(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.object_comparison_feature_name */
extern unsigned char ge808os11568;
extern T0* ge808ov11568;
extern T0* T81f1103(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_item_feature_name */
extern unsigned char ge808os11561;
extern T0* ge808ov11561;
extern T0* T81f1101(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_item_feature_name */
extern unsigned char ge808os11559;
extern T0* ge808ov11559;
extern T0* T81f1099(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_item_feature_name */
extern unsigned char ge808os11556;
extern T0* ge808ov11556;
extern T0* T81f1097(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_item_feature_name */
extern unsigned char ge808os11554;
extern T0* ge808ov11554;
extern T0* T81f1095(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.item_code_feature_name */
extern unsigned char ge808os11544;
extern T0* ge808ov11544;
extern T0* T81f1093(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_item_feature_name */
extern unsigned char ge808os11516;
extern T0* ge808ov11516;
extern T0* T81f1091(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_item_feature_name */
extern unsigned char ge808os11514;
extern T0* ge808ov11514;
extern T0* T81f1089(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_item_feature_name */
extern unsigned char ge808os11512;
extern T0* ge808ov11512;
extern T0* T81f1087(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_item_feature_name */
extern unsigned char ge808os11510;
extern T0* ge808ov11510;
extern T0* T81f1085(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_item_feature_name */
extern unsigned char ge808os11441;
extern T0* ge808ov11441;
extern T0* T81f1082(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_item_feature_name */
extern unsigned char ge808os11439;
extern T0* ge808ov11439;
extern T0* T81f1080(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_item_feature_name */
extern unsigned char ge808os11428;
extern T0* ge808ov11428;
extern T0* T81f1077(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_object_comparison_feature_name */
extern unsigned char ge808os11622;
extern T0* ge808ov11622;
extern T0* T81f1140(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_reference_feature_name */
extern unsigned char ge808os11596;
extern T0* ge808ov11596;
extern T0* T81f77(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_real_64_feature_name */
extern unsigned char ge808os11595;
extern T0* ge808ov11595;
extern T0* T81f1137(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_real_32_feature_name */
extern unsigned char ge808os11594;
extern T0* ge808ov11594;
extern T0* T81f1135(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_pointer_feature_name */
extern unsigned char ge808os11593;
extern T0* ge808ov11593;
extern T0* T81f1133(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_64_feature_name */
extern unsigned char ge808os11592;
extern T0* ge808ov11592;
extern T0* T81f1131(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_32_feature_name */
extern unsigned char ge808os11591;
extern T0* ge808ov11591;
extern T0* T81f1129(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_16_feature_name */
extern unsigned char ge808os11590;
extern T0* ge808ov11590;
extern T0* T81f1127(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_8_feature_name */
extern unsigned char ge808os11589;
extern T0* ge808ov11589;
extern T0* T81f1125(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_64_feature_name */
extern unsigned char ge808os11588;
extern T0* ge808ov11588;
extern T0* T81f1123(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.ise_6_2_7_2906 */
extern unsigned char ge191os2003;
extern T0* ge191ov2003;
extern T0* T1305f10(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_32_feature_name */
extern unsigned char ge808os11587;
extern T0* ge808ov11587;
extern T0* T81f1121(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_16_feature_name */
extern unsigned char ge808os11586;
extern T0* ge808ov11586;
extern T0* T81f1119(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_8_feature_name */
extern unsigned char ge808os11585;
extern T0* ge808ov11585;
extern T0* T81f1117(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_character_32_feature_name */
extern unsigned char ge808os11584;
extern T0* ge808ov11584;
extern T0* T81f1115(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_character_8_feature_name */
extern unsigned char ge808os11583;
extern T0* ge808ov11583;
extern T0* T81f1113(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_tuple_feature */
extern T6 T81f1079(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.put_boolean_feature_name */
extern unsigned char ge808os11582;
extern T0* ge808ov11582;
extern T0* T81f1111(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_function_procedure_validity */
extern void T1305f76(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.detachable_formal_parameter_type */
extern T0* T1305f12(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_procedure_procedure_validity */
extern void T1305f75(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_platform_procedure_validity */
extern void T1305f74(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_bytes_feature_name */
extern unsigned char ge808os11650;
extern T0* ge808ov11650;
extern T0* T81f1075(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_thread_capable_feature_name */
extern unsigned char ge808os11538;
extern T0* ge808ov11538;
extern T0* T81f1073(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_scoop_capable_feature_name */
extern unsigned char ge808os11536;
extern T0* ge808ov11536;
extern T0* T81f1071(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_bytes_feature_name */
extern unsigned char ge808os11603;
extern T0* ge808ov11603;
extern T0* T81f1069(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_bytes_feature_name */
extern unsigned char ge808os11572;
extern T0* ge808ov11572;
extern T0* T81f1067(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_bytes_feature_name */
extern unsigned char ge808os11518;
extern T0* ge808ov11518;
extern T0* T81f1065(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.double_bytes_feature_name */
extern unsigned char ge808os11462;
extern T0* ge808ov11462;
extern T0* T81f1063(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_bytes_feature_name */
extern unsigned char ge808os11443;
extern T0* ge808ov11443;
extern T0* T81f1061(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_bytes_feature_name */
extern unsigned char ge808os11427;
extern T0* ge808ov11427;
extern T0* T81f1059(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_windows_feature_name */
extern unsigned char ge808os11542;
extern T0* ge808ov11542;
extern T0* T81f1057(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_vxworks_feature_name */
extern unsigned char ge808os11541;
extern T0* ge808ov11541;
extern T0* T81f1055(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_vms_feature_name */
extern unsigned char ge808os11540;
extern T0* ge808ov11540;
extern T0* T81f1053(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_unix_feature_name */
extern unsigned char ge808os11539;
extern T0* ge808ov11539;
extern T0* T81f1051(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_mac_feature_name */
extern unsigned char ge808os11531;
extern T0* ge808ov11531;
extern T0* T81f1049(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_platform_feature */
extern T6 T81f1048(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.is_dotnet_feature_name */
extern unsigned char ge808os11525;
extern T0* ge808ov11525;
extern T0* T81f1046(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.platform_class_name */
extern unsigned char ge808os11368;
extern T0* ge808ov11368;
extern T0* T81f782(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_internal_procedure_validity */
extern void T1305f73(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.max_type_id_feature_name */
extern unsigned char ge808os11550;
extern T0* ge808ov11550;
extern T0* T81f1044(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_internal_feature */
extern T6 T81f1043(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.type_of_type_feature_name */
extern unsigned char ge808os11647;
extern T0* ge808ov11647;
extern T0* T81f1041(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.internal_class_name */
extern unsigned char ge808os11356;
extern T0* ge808ov11356;
extern T0* T81f781(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_identified_routines_procedure_validity */
extern void T1305f72(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.eif_object_id_feature_name */
extern unsigned char ge808os11464;
extern T0* ge808ov11464;
extern T0* T81f1037(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_id_object_feature_name */
extern unsigned char ge808os11463;
extern T0* ge808ov11463;
extern T0* T81f1034(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_identified_feature */
extern T6 T81f1036(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.eif_object_id_free_feature_name */
extern unsigned char ge808os11465;
extern T0* ge808ov11465;
extern T0* T81f1039(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identified_routines_class_name */
extern unsigned char ge808os11350;
extern T0* ge808ov11350;
extern T0* T81f780(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_exception_manager_procedure_validity */
extern void T1305f71(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.builtin_ise_exception_manager_feature */
extern T6 T81f1033(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.developer_raise_feature_name */
extern unsigned char ge808os11457;
extern T0* ge808ov11457;
extern T0* T81f1031(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_factory_procedure_validity */
extern void T1305f70(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.builtin_exception_manager_factory_feature */
extern T6 T81f1030(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.exception_manager_feature_name */
extern unsigned char ge808os11468;
extern T0* ge808ov11468;
extern T0* T81f1028(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_factory_class_name */
extern unsigned char ge808os11348;
extern T0* ge808ov11348;
extern T0* T81f779(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_procedure_validity */
extern void T1305f69(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.type_of_code_feature_name */
extern unsigned char ge808os11646;
extern T0* ge808ov11646;
extern T0* T81f1018(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.last_exception_feature_name */
extern unsigned char ge808os11545;
extern T0* ge808ov11545;
extern T0* T81f1016(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_raisable_feature_name */
extern unsigned char ge808os11535;
extern T0* ge808ov11535;
extern T0* T81f1014(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_ignored_feature_name */
extern unsigned char ge808os11529;
extern T0* ge808ov11529;
extern T0* T81f1012(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_ignorable_feature_name */
extern unsigned char ge808os11528;
extern T0* ge808ov11528;
extern T0* T81f1010(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_caught_feature_name */
extern unsigned char ge808os11522;
extern T0* ge808ov11522;
extern T0* T81f1008(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_from_code_feature_name */
extern unsigned char ge808os11467;
extern T0* ge808ov11467;
extern T0* T81f1005(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_is_ignored_feature_name */
extern unsigned char ge808os11616;
extern T0* ge808ov11616;
extern T0* T81f1026(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raise_feature_name */
extern unsigned char ge808os11598;
extern T0* ge808ov11598;
extern T0* T81f1024(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ignore_feature_name */
extern unsigned char ge808os11489;
extern T0* ge808ov11489;
extern T0* T81f1022(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_exception_manager_feature */
extern T6 T81f1007(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.catch_feature_name */
extern unsigned char ge808os11433;
extern T0* ge808ov11433;
extern T0* T81f1020(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_memory_procedure_validity */
extern void T1305f68(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.argument_count_feature_name */
extern unsigned char ge808os11410;
extern T0* ge808ov11410;
extern T0* T81f980(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_memory_feature */
extern T6 T81f1002(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.free_feature_name */
extern unsigned char ge808os11479;
extern T0* ge808ov11479;
extern T0* T81f1003(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.memory_class_name */
extern unsigned char ge808os11360;
extern T0* ge808ov11360;
extern T0* T81f778(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_com_failure_procedure_validity */
extern void T1305f67(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.character_size_feature_name */
extern unsigned char ge808os11444;
extern T0* ge808ov11444;
extern T0* T81f996(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.c_strlen_feature_name */
extern unsigned char ge808os11430;
extern T0* ge808ov11430;
extern T0* T81f994(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.cwin_error_text_feature_name */
extern unsigned char ge808os11452;
extern T0* ge808ov11452;
extern T0* T81f992(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_facility_feature_name */
extern unsigned char ge808os11436;
extern T0* ge808ov11436;
extern T0* T81f990(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_code_feature_name */
extern unsigned char ge808os11435;
extern T0* ge808ov11435;
extern T0* T81f988(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_feature_name */
extern unsigned char ge808os11434;
extern T0* ge808ov11434;
extern T0* T81f985(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_com_failure_feature */
extern T6 T81f987(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.cwin_local_free_feature_name */
extern unsigned char ge808os11453;
extern T0* ge808ov11453;
extern T0* T81f998(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.com_failure_class_name */
extern unsigned char ge808os11343;
extern T0* ge808ov11343;
extern T0* T81f777(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_arguments_32_procedure_validity */
extern void T1305f66(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.i_th_argument_pointer_feature_name */
extern unsigned char ge808os11486;
extern T0* ge808ov11486;
extern T0* T81f983(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_arguments_32_feature */
extern T6 T81f982(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.arguments_32_class_name */
extern unsigned char ge808os11336;
extern T0* ge808ov11336;
extern T0* T81f776(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_procedure_validity */
extern void T1305f65(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_default_pointer_feature_name */
extern unsigned char ge808os11524;
extern T0* ge808ov11524;
extern T0* T81f978(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.hash_code_feature_name */
extern unsigned char ge808os11485;
extern T0* ge808ov11485;
extern T0* T81f976(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_integer_32_feature_name */
extern unsigned char ge808os11636;
extern T0* ge808ov11636;
extern T0* T81f972(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_ref_procedure_validity */
extern void T1305f64(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.pointer_ref_class_name */
extern unsigned char ge808os11402;
extern T0* ge808ov11402;
extern T0* T81f775(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_procedure_validity */
extern void T1305f63(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.infix_xor_feature_name */
extern unsigned char ge808os11508;
extern T0* ge808ov11508;
extern T0* T81f966(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_exclusive_feature_name */
extern unsigned char ge808os11459;
extern T0* ge808ov11459;
extern T0* T81f965(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.prefix_not_feature_name */
extern unsigned char ge808os11578;
extern T0* ge808ov11578;
extern T0* T81f960(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.negated_feature_name */
extern unsigned char ge808os11563;
extern T0* ge808ov11563;
extern T0* T81f959(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_implies_feature_name */
extern unsigned char ge808os11498;
extern T0* ge808ov11498;
extern T0* T81f963(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implication_feature_name */
extern unsigned char ge808os11490;
extern T0* ge808ov11490;
extern T0* T81f962(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_or_else_feature_name */
extern unsigned char ge808os11504;
extern T0* ge808ov11504;
extern T0* T81f957(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_semistrict_feature_name */
extern unsigned char ge808os11460;
extern T0* ge808ov11460;
extern T0* T81f956(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_or_feature_name */
extern unsigned char ge808os11503;
extern T0* ge808ov11503;
extern T0* T81f954(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_feature_name */
extern unsigned char ge808os11458;
extern T0* ge808ov11458;
extern T0* T81f953(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_and_then_feature_name */
extern unsigned char ge808os11492;
extern T0* ge808ov11492;
extern T0* T81f951(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conjuncted_semistrict_feature_name */
extern unsigned char ge808os11449;
extern T0* ge808ov11449;
extern T0* T81f950(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_boolean_feature */
extern T6 T81f945(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.infix_and_feature_name */
extern unsigned char ge808os11491;
extern T0* ge808ov11491;
extern T0* T81f948(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conjuncted_feature_name */
extern unsigned char ge808os11448;
extern T0* ge808ov11448;
extern T0* T81f947(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_ref_procedure_validity */
extern void T1305f62(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.boolean_ref_class_name */
extern unsigned char ge808os11387;
extern T0* ge808ov11387;
extern T0* T81f774(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_character_procedure_validity */
extern void T1305f61(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.natural_32_code_feature_name */
extern unsigned char ge808os11558;
extern T0* ge808ov11558;
extern T0* T81f938(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.code_feature_name */
extern unsigned char ge808os11446;
extern T0* ge808ov11446;
extern T0* T81f936(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_character_ref_procedure_validity */
extern void T1305f60(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BUILTIN_FEATURE_CHECKER.current_universe */
extern T0* T1305f5(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_special_procedure_validity */
extern void T1305f59(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.base_address_feature_name */
extern unsigned char ge808os11419;
extern T0* ge808ov11419;
extern T0* T81f924(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.aliased_resized_area_feature_name */
extern unsigned char ge808os11408;
extern T0* ge808ov11408;
extern T0* T81f922(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.element_size_feature_name */
extern unsigned char ge808os11466;
extern T0* ge808ov11466;
extern T0* T81f920(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_count_feature_name */
extern unsigned char ge808os11610;
extern T0* ge808ov11610;
extern T0* T81f930(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_feature_name */
extern unsigned char ge808os11581;
extern T0* ge808ov11581;
extern T0* T81f76(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.make_empty_feature_name */
extern unsigned char ge808os11549;
extern T0* ge808ov11549;
extern T0* T81f927(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_special_feature */
extern T6 T81f917(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.extend_feature_name */
extern unsigned char ge808os11469;
extern T0* ge808ov11469;
extern T0* T81f81(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_type_procedure_validity */
extern void T1305f58(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.type_id_feature_name */
extern unsigned char ge808os11645;
extern T0* ge808ov11645;
extern T0* T81f884(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.runtime_name_feature_name */
extern unsigned char ge808os11605;
extern T0* ge808ov11605;
extern T0* T81f882(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_field_feature_name */
extern unsigned char ge808os11602;
extern T0* ge808ov11602;
extern T0* T81f880(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_field_feature_name */
extern unsigned char ge808os11600;
extern T0* ge808ov11600;
extern T0* T81f878(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_field_feature_name */
extern unsigned char ge808os11574;
extern T0* ge808ov11574;
extern T0* T81f876(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_special_any_instance_feature_name */
extern unsigned char ge808os11567;
extern T0* ge808ov11567;
extern T0* T81f874(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.attached_formal_parameter_type */
extern T0* T1305f8(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.new_instance_feature_name */
extern unsigned char ge808os11566;
extern T0* ge808ov11566;
extern T0* T81f872(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_field_feature_name */
extern unsigned char ge808os11562;
extern T0* ge808ov11562;
extern T0* T81f870(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_field_feature_name */
extern unsigned char ge808os11560;
extern T0* ge808ov11560;
extern T0* T81f868(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_field_feature_name */
extern unsigned char ge808os11557;
extern T0* ge808ov11557;
extern T0* T81f866(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_field_feature_name */
extern unsigned char ge808os11555;
extern T0* ge808ov11555;
extern T0* T81f864(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.name_feature_name */
extern unsigned char ge808os11552;
extern T0* ge808ov11552;
extern T0* T81f862(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_expanded_feature_name */
extern unsigned char ge808os11527;
extern T0* ge808ov11527;
extern T0* T81f860(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_field_feature_name */
extern unsigned char ge808os11517;
extern T0* ge808ov11517;
extern T0* T81f858(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_field_feature_name */
extern unsigned char ge808os11515;
extern T0* ge808ov11515;
extern T0* T81f856(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_field_feature_name */
extern unsigned char ge808os11513;
extern T0* ge808ov11513;
extern T0* T81f854(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_field_feature_name */
extern unsigned char ge808os11511;
extern T0* ge808ov11511;
extern T0* T81f852(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.has_default_feature_name */
extern unsigned char ge808os11484;
extern T0* ge808ov11484;
extern T0* T81f850(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_type_feature_name */
extern unsigned char ge808os11483;
extern T0* ge808ov11483;
extern T0* T81f848(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_count_feature_name */
extern unsigned char ge808os11482;
extern T0* ge808ov11482;
extern T0* T81f846(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generating_type_feature_name */
extern unsigned char ge808os11480;
extern T0* ge808ov11480;
extern T0* T81f811(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_type_feature_name */
extern unsigned char ge808os11474;
extern T0* ge808ov11474;
extern T0* T81f843(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_static_type_feature_name */
extern unsigned char ge808os11473;
extern T0* ge808ov11473;
extern T0* T81f841(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_count_feature_name */
extern unsigned char ge808os11471;
extern T0* ge808ov11471;
extern T0* T81f837(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_feature_name */
extern unsigned char ge808os11470;
extern T0* ge808ov11470;
extern T0* T81f835(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_feature_name */
extern unsigned char ge808os11455;
extern T0* ge808ov11455;
extern T0* T81f833(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_field_feature_name */
extern unsigned char ge808os11442;
extern T0* ge808ov11442;
extern T0* T81f831(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_field_feature_name */
extern unsigned char ge808os11440;
extern T0* ge808ov11440;
extern T0* T81f829(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_field_feature_name */
extern unsigned char ge808os11429;
extern T0* ge808ov11429;
extern T0* T81f827(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.base_class_name_feature_name */
extern unsigned char ge808os11420;
extern T0* ge808ov11420;
extern T0* T81f824(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_reference_field_feature_name */
extern unsigned char ge808os11627;
extern T0* ge808ov11627;
extern T0* T81f914(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_64_field_feature_name */
extern unsigned char ge808os11626;
extern T0* ge808ov11626;
extern T0* T81f912(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_32_field_feature_name */
extern unsigned char ge808os11625;
extern T0* ge808ov11625;
extern T0* T81f910(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_pointer_field_feature_name */
extern unsigned char ge808os11624;
extern T0* ge808ov11624;
extern T0* T81f908(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_64_field_feature_name */
extern unsigned char ge808os11621;
extern T0* ge808ov11621;
extern T0* T81f906(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_32_field_feature_name */
extern unsigned char ge808os11620;
extern T0* ge808ov11620;
extern T0* T81f904(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_16_field_feature_name */
extern unsigned char ge808os11619;
extern T0* ge808ov11619;
extern T0* T81f902(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_8_field_feature_name */
extern unsigned char ge808os11618;
extern T0* ge808ov11618;
extern T0* T81f900(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_64_field_feature_name */
extern unsigned char ge808os11615;
extern T0* ge808ov11615;
extern T0* T81f898(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_32_field_feature_name */
extern unsigned char ge808os11614;
extern T0* ge808ov11614;
extern T0* T81f896(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_16_field_feature_name */
extern unsigned char ge808os11613;
extern T0* ge808ov11613;
extern T0* T81f894(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_8_field_feature_name */
extern unsigned char ge808os11612;
extern T0* ge808ov11612;
extern T0* T81f892(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_32_field_feature_name */
extern unsigned char ge808os11609;
extern T0* ge808ov11609;
extern T0* T81f890(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_8_field_feature_name */
extern unsigned char ge808os11608;
extern T0* ge808ov11608;
extern T0* T81f888(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_type_feature */
extern T6 T81f826(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.set_boolean_field_feature_name */
extern unsigned char ge808os11607;
extern T0* ge808ov11607;
extern T0* T81f886(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_any_procedure_validity */
extern void T1305f57(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.deep_twin_feature_name */
extern unsigned char ge808os11454;
extern T0* ge808ov11454;
extern T0* T81f819(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_deep_equal_feature_name */
extern unsigned char ge808os11523;
extern T0* ge808ov11523;
extern T0* T81f817(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.standard_twin_feature_name */
extern unsigned char ge808os11630;
extern T0* ge808ov11630;
extern T0* T81f815(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.tagged_out_feature_name */
extern unsigned char ge808os11631;
extern T0* ge808ov11631;
extern T0* T81f813(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generator_feature_name */
extern unsigned char ge808os11481;
extern T0* ge808ov11481;
extern T0* T81f809(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conforms_to_feature_name */
extern unsigned char ge808os11447;
extern T0* ge808ov11447;
extern T0* T81f807(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.same_type_feature_name */
extern unsigned char ge808os11606;
extern T0* ge808ov11606;
extern T0* T81f805(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.standard_is_equal_feature_name */
extern unsigned char ge808os11629;
extern T0* ge808ov11629;
extern T0* T81f803(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.twin_feature_name */
extern unsigned char ge808os11644;
extern T0* ge808ov11644;
extern T0* T81f799(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.builtin_any_feature */
extern T6 T81f801(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.standard_copy_feature_name */
extern unsigned char ge808os11628;
extern T0* ge808ov11628;
extern T0* T81f821(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.string_ */
extern T0* T1305f4(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.process_external_procedure */
extern void T370f82(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_validity */
extern void T370f94(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure */
extern void T79f167(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T79f172(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_procedure_validity */
extern void T79f177(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_set_reference_field */
extern void T79f184(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_formal_argument_dynamic_types */
extern void T79f186(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_reference */
extern void T79f183(GE_context* ac, T0* C, T0* a1);
extern T1 T79f183ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_procedure */
extern void T79f182(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_set_is_ignored */
extern void T79f181(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.argument_type_set */
extern T0* T79f69(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_raise */
extern void T79f180(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_ignore */
extern void T79f179(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_catch */
extern void T79f178(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_builtin_unknown */
extern T1 T1237f61(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_builtin */
extern T1 T1237f34(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T79f172p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_procedure */
extern void T74f989(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure */
extern void T74f1035(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_routine */
extern void T74f1064(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3, T1 a4);
/* ET_C_GENERATOR.flush_to_cpp_file */
extern void T74f1076(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_external_dllwin_body */
extern void T74f1075(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.print_external_cpp_body */
extern void T74f1074(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* DS_LINKED_LIST [STRING_8].item */
extern T0* T143f15(GE_context* ac, T0* C, T6 a1);
/* ST_SPLITTER.make_with_separators */
extern T0* T55c11(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.print_external_c_struct_body */
extern void T74f1073(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_external_c_body */
extern void T74f1072(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T1 a7);
/* ET_C_GENERATOR.print_external_c_prototype */
extern void T74f1071(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_C_GENERATOR.print_external_builtin_body */
extern void T74f1070(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_body */
extern void T74f1080(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_type_procedure_body */
extern void T74f1113(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_reference_field_body */
extern void T74f1204(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_real_64_field_body */
extern void T74f1203(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_basic_expanded_field_body */
extern void T74f1208(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_real_32_field_body */
extern void T74f1202(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_pointer_field_body */
extern void T74f1201(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_natural_64_field_body */
extern void T74f1200(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_natural_32_field_body */
extern void T74f1199(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_natural_16_field_body */
extern void T74f1198(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_natural_8_field_body */
extern void T74f1197(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_integer_64_field_body */
extern void T74f1196(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_integer_32_field_body */
extern void T74f1195(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_integer_16_field_body */
extern void T74f1194(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_integer_8_field_body */
extern void T74f1193(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_character_32_field_body */
extern void T74f1192(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_character_8_field_body */
extern void T74f1191(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_set_boolean_field_body */
extern void T74f1190(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_tuple_procedure_body */
extern void T74f1112(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_reference_body */
extern void T74f1189(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1189ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_64_body */
extern void T74f1188(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_basic_expanded_item_body */
extern void T74f1207(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1207ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_32_body */
extern void T74f1187(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_pointer_body */
extern void T74f1186(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_64_body */
extern void T74f1185(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_32_body */
extern void T74f1184(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_16_body */
extern void T74f1183(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_8_body */
extern void T74f1182(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_64_body */
extern void T74f1181(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_32_body */
extern void T74f1180(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_16_body */
extern void T74f1179(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_8_body */
extern void T74f1178(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_32_body */
extern void T74f1177(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_8_body */
extern void T74f1176(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_boolean_body */
extern void T74f1175(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_procedure_body */
extern void T74f1111(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_set_count_body */
extern void T74f1174(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1174ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_special_extend_body */
extern void T74f1173(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1173ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_external_builtin_sized_real_procedure_body */
extern void T74f1110(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_sized_integer_procedure_body */
extern void T74f1109(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_sized_character_procedure_body */
extern void T74f1108(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_procedure_body */
extern void T74f1107(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_procedure_body */
extern void T74f1106(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_memory_procedure_body */
extern void T74f1105(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_exception_manager_procedure_body */
extern void T74f1104(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_procedure_body */
extern void T74f1103(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_procedure_body */
extern void T74f1102(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_set_is_ignored_body */
extern void T74f1172(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_raise_body */
extern void T74f1171(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_ignore_body */
extern void T74f1170(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_catch_body */
extern void T74f1169(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_com_failure_procedure_body */
extern void T74f1101(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_procedure_body */
extern void T74f1100(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_procedure_body */
extern void T74f1099(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_body */
extern void T74f1079(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_type_function_body */
extern void T74f1098(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_real_64_field_body */
extern void T74f1168(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_basic_expanded_field_body */
extern void T74f1206(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_real_32_field_body */
extern void T74f1167(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_pointer_field_body */
extern void T74f1166(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_natural_64_field_body */
extern void T74f1165(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_natural_32_field_body */
extern void T74f1164(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_natural_16_field_body */
extern void T74f1163(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_natural_8_field_body */
extern void T74f1162(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_integer_64_field_body */
extern void T74f1161(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_integer_32_field_body */
extern void T74f1160(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_integer_16_field_body */
extern void T74f1159(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_integer_8_field_body */
extern void T74f1158(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_type_body */
extern void T74f1157(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generating_type_body */
extern void T74f1156(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_field_type_body */
extern void T74f1155(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_field_static_type_body */
extern void T74f1154(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_field_name_body */
extern void T74f1153(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_field_body */
extern void T74f1152(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_builtin_type_field_body */
extern T0* T74f1152ac1(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* ET_C_GENERATOR.print_builtin_type_character_32_field_body */
extern void T74f1151(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_character_8_field_body */
extern void T74f1150(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_boolean_field_body */
extern void T74f1149(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_semicolon_newline */
extern void T74f1116(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_indentation_assign_to_result */
extern void T74f1115(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_external_builtin_tuple_function_body */
extern void T74f1097(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern void T74f1148(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern T0* T74f1148ac1(T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T74f1148ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_real_64_item_body */
extern void T74f1147(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_basic_expanded_item_body */
extern void T74f1205(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1205ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_real_32_item_body */
extern void T74f1146(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_pointer_item_body */
extern void T74f1145(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_64_item_body */
extern void T74f1144(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_32_item_body */
extern void T74f1143(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_16_item_body */
extern void T74f1142(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_8_item_body */
extern void T74f1141(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_item_code_body */
extern void T74f1140(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1140ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_integer_64_item_body */
extern void T74f1139(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_32_item_body */
extern void T74f1138(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_16_item_body */
extern void T74f1137(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_8_item_body */
extern void T74f1136(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_32_item_body */
extern void T74f1135(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_8_item_body */
extern void T74f1134(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_boolean_item_body */
extern void T74f1133(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_function_body */
extern void T74f1096(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_aliased_resized_area_body */
extern void T74f1132(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1132ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_external_builtin_sized_real_function_body */
extern void T74f1095(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_sized_real_out_body */
extern void T74f1131(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_sized_integer_function_body */
extern void T74f1094(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_sized_character_function_body */
extern void T74f1093(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_function_body */
extern void T74f1092(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_out_body */
extern void T74f1130(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_platform_function_body */
extern void T74f1091(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_memory_function_body */
extern void T74f1090(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_internal_function_body */
extern void T74f1089(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_internal_type_of_type_body */
extern void T74f1129(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_function_body */
extern void T74f1088(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_function_body */
extern void T74f1087(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_factory_function_body */
extern void T74f1086(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_factory_exception_manager_body */
extern void T74f1128(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_function_body */
extern void T74f1085(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_type_of_code_body */
extern void T74f1127(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_last_exception_body */
extern void T74f1126(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_raisable_body */
extern void T74f1125(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_ignored_body */
extern void T74f1124(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_ignorable_body */
extern void T74f1123(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_caught_body */
extern void T74f1122(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_exception_from_code_body */
extern void T74f1121(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_com_failure_function_body */
extern void T74f1084(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_function_body */
extern void T74f1083(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_arguments_32_function_body */
extern void T74f1082(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_function_body */
extern void T74f1081(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body */
extern void T74f1120(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1120ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_tagged_out_body */
extern void T74f1119(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1119ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body */
extern void T74f1118(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1118ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_is_deep_equal_body */
extern void T74f1117(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_conforms_to_body */
extern void T74f1114(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_function */
extern T1 T1237f60(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_builtin */
extern T1 T260f41(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_external_c_inline_body */
extern void T74f1069(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_ROUTINES.as_lower */
extern T2 T1696f1(GE_context* ac, T0* C, T2 a1);
/* ET_C_GENERATOR.character_ */
extern unsigned char ge215os3804;
extern T0* ge215ov3804;
extern T0* T74f473(GE_context* ac, T0* C);
/* KL_CHARACTER_ROUTINES.default_create */
extern T0* T1696c2(GE_context* ac);
/* ET_C_GENERATOR.print_external_c_includes */
extern void T74f1068(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_header_filename */
extern void T74f1078(GE_context* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring_count */
extern T6 T304f301(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_feature_info_message_call */
extern void T74f1067(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_routine_name */
extern void T74f1066(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T74f1066ot1(T0* a1, T0** a2);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_feature */
extern void T1335f7(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_feature */
extern void T1334f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_feature */
extern void T1333f5(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_feature */
extern void T1332f7(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_feature */
extern void T1311f7(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1310f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_like_feature_validity */
extern void T1310f16(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat2b_error */
extern void T77f288(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat2b */
extern T0* T532c826(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat2b_error */
extern void T36f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1310f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1310f19(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.current_system */
extern T0* T1310f6(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.index */
extern T6 T1247f22(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.process_like_feature */
extern void T1309f19(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_feature */
extern void T1304f13(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_feature */
extern void T1303f18(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_feature */
extern void T1302f19(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1301f11(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_like_feature_to_sorter */
extern void T1301f16(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].force_relation */
extern void T1527f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].put_indexed_relation */
extern void T1527f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].force */
extern void T1527f16(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].put */
extern void T1527f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].put_new */
extern void T1688f36(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_put */
extern void T1688f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_put */
extern void T1688f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_put */
extern void T1688f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_put */
extern void T1688f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_item */
extern T6 T1688f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].hash_position */
extern T6 T1688f28(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.hash_code */
extern T6 T1247f77(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_item */
extern T6 T1688f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].resize */
extern void T1688f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_resize */
extern void T1688f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].special_integer_ */
extern T0* T1688f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_resize */
extern void T1688f49(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T1732f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T1731f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_resize */
extern void T1688f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_item */
extern T0* T1688f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_resize */
extern void T1688f45(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].resize */
extern void T1608f13(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].capacity */
extern T6 T1527f9(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].count */
extern T6 T1527f8(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].index_of */
extern T6 T1527f7(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].found_item */
extern T6 T1688f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_item */
extern T6 T1688f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].found */
extern T1 T1688f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].search */
extern void T1688f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].search_position */
extern void T1688f53(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_feature */
extern void T1300f8(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_feature */
extern void T1299f10(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_like_feature */
extern void T1299f14(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1a_error */
extern void T77f290(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat1a */
extern T0* T532c828(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T77f77(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat1a_error */
extern void T36f289(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T36f76(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1b_error */
extern void T77f289(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1b */
extern T0* T532c827(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1b_error */
extern void T36f288(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER_TYPE_RESOLVER.error_handler */
extern T0* T1299f5(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.current_system */
extern T0* T1299f6(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.set_fatal_error */
extern void T1299f17(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.resolve_like_argument */
extern void T1247f88(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolve_like_feature */
extern void T1247f87(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_feature */
extern void T1288f18(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_type */
extern void T1288f26(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_like_type_constraint */
extern void T1288f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3c_error */
extern void T77f378(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3c */
extern T0* T532c909(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3c_error */
extern void T36f377(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_like_feature */
extern void T1287f19(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_type */
extern void T1287f26(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_like_type_validity */
extern void T1287f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3c_error */
extern void T77f497(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3c */
extern T0* T532c1026(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T77f161(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr3c_error */
extern void T36f496(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T36f160(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.error_handler */
extern T0* T1287f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.current_system */
extern T0* T1287f5(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.set_fatal_error */
extern void T1287f12(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.process_like_feature */
extern void T373f22(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_feature_validity */
extern void T373f28(GE_context* ac, T0* C, T0* a1);
extern T1 T373f28ot1(T0* a1, T0** a2);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_braced_type */
extern void T1335f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_qualified_like_identifier_validity */
extern void T1335f15(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_braced_type */
extern void T1334f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_qualified_like_identifier_validity */
extern void T1334f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.set_fatal_error */
extern void T1334f14(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.has_flattening_error */
extern T1 T471f38(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.features_flattened */
extern T1 T471f37(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_braced_type */
extern void T1333f6(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_qualified_like_identifier_validity */
extern void T1333f9(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_braced_type */
extern void T1332f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_qualified_like_identifier_validity */
extern void T1332f15(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_braced_type */
extern void T1311f8(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_qualified_like_identifier */
extern void T1311f10(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1310f13(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T1310f17(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1c_error */
extern void T77f291(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1c */
extern T0* T532c829(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1c_error */
extern void T36f290(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.resolve_identifier_type */
extern void T1249f82(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolve_identifier_type */
extern void T1248f86(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_TYPE.seed */
extern T6 T1249f22(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.seed */
extern T6 T1248f20(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.process_qualified_like_braced_type */
extern void T1309f20(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_braced_type */
extern void T1304f14(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_qualified_like_braced_type */
extern void T1303f19(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_qualified_like_braced_type */
extern void T1302f20(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_qualified_like_identifier_tuple_actual_parameters_unfolded */
extern void T1302f24(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_qualified_like_identifier_vtct_validity */
extern void T1302f23(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1301f12(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_qualified_like_identifier_to_sorter */
extern void T1301f17(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_braced_type */
extern void T1300f9(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_qualified_like_identifier */
extern void T1300f11(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_braced_type */
extern void T1299f11(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_qualified_like_identifier */
extern void T1299f15(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_braced_type */
extern void T1288f19(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_qualified_like_braced_type */
extern void T1287f20(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T373f23(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T373f29(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.report_qualified_anchored_type_supplier */
extern void T373f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.report_qualified_anchored_type_supplier */
extern void T884f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_type */
extern void T1335f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_type */
extern void T1334f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_type */
extern void T1333f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_type */
extern void T1332f9(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_type */
extern void T1311f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1310f14(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_qualified_like_type */
extern void T1309f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_type */
extern void T1304f15(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_qualified_like_type */
extern void T1303f20(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_qualified_like_type */
extern void T1302f21(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1301f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_type */
extern void T1300f10(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_type */
extern void T1299f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_type */
extern void T1288f20(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_qualified_like_type */
extern void T1287f21(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_qualified_like_type */
extern void T373f24(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_expression */
extern void T1306f60(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_precursor_validity */
extern void T1306f95(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3c_error */
extern void T77f524(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3c */
extern T0* T532c1053(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.tokens */
extern T0* T532f749(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T77f120(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr3c_error */
extern void T36f523(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T36f119(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3b_error */
extern void T77f523(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3b */
extern T0* T532c1052(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.position */
extern T0* T1258f8(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdpr3b_error */
extern void T36f522(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_parent_type */
extern void T1261f29(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_type */
extern void T1258f14(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_seed */
extern void T907f22(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3a_error */
extern void T77f522(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vdpr3a */
extern T0* T532c1051(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vdpr3a_error */
extern void T36f521(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vdpr2a_error */
extern void T77f521(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr2a */
extern T0* T532c1050(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T77f174(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr2a_error */
extern void T36f520(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T36f173(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.error_handler */
extern T0* T1306f8(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.set_fatal_error */
extern void T1306f98(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.current_universe */
extern T0* T1306f7(GE_context* ac, T0* C);
/* ET_IDENTIFIER.class_name */
extern T0* T182f94(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_precursor_expression */
extern void T387f28(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_precursor_expression */
extern void T383f33(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_expression */
extern void T370f150(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_expression_validity */
extern void T370f204(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T370f204ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_precursor_query_expression_validity */
extern void T370f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_SET [ET_QUERY].force_last */
extern void T883f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].slots_put */
extern void T883f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].clashes_put */
extern void T883f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].slots_item */
extern T6 T883f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].hash_position */
extern T6 T883f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].resize */
extern void T883f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].clashes_resize */
extern void T883f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].special_integer_ */
extern T0* T883f32(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].key_storage_resize */
extern void T883f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_resize */
extern void T883f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].key_storage_item */
extern T0* T883f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].slots_resize */
extern void T883f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].new_capacity */
extern T6 T883f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_put */
extern void T883f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].search_position */
extern void T883f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].key_equality_tester */
extern T0* T883f30(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_precursor_expression */
extern void T370f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_precursor_parenthesis_call_validity */
extern void T370f258(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T370f258ot1(T0* a1, T0** a2);
extern T1 T370f258ot2(T0* a1, T0** a2);
/* ET_PRECURSOR_INSTRUCTION.set_parenthesis_call */
extern void T1258f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.set_parenthesis_call */
extern void T1261f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.ancestor */
extern T0* T82f70(GE_context* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.base_type */
extern T0* T396f3(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_generic */
extern T1 T80f15(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdpr3d_error */
extern void T36f390(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3d */
extern T0* T532c920(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3d_error */
extern void T77f391(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr3e_error */
extern void T36f389(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3e */
extern T0* T532c919(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr3e_error */
extern void T77f390(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr1b_error */
extern void T36f388(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1b */
extern T0* T532c918(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T36f118(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr1b_error */
extern void T77f389(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T77f119(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_expression */
extern void T79f340(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_expression_validity */
extern void T79f418(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_query_expression_validity */
extern void T79f388(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_expression */
extern void T79f448(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.dynamic_precursor */
extern T0* T310f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FEATURE.dynamic_precursor */
extern T0* T248f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR_LIST.force_last */
extern void T311f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].force */
extern void T1704f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].fill_with */
extern void T1703f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].extend */
extern void T1703f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.fixed_array */
extern unsigned char ge982os7546;
extern T0* ge982ov7546;
extern T0* T311f4(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].default_create */
extern T0* T1704c3(GE_context* ac);
/* ET_DYNAMIC_PRECURSOR_LIST.resize */
extern void T311f10(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T1704f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T1703f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.new_capacity */
extern T6 T311f6(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.capacity */
extern T6 T311f5(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.put_last */
extern void T311f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.make_with_capacity */
extern T0* T311c7(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].make */
extern T0* T1704f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].make_empty */
extern T0* T1703c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_PRECURSOR.make */
extern T0* T310c52(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PRECURSOR.make_feature */
extern void T310f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T310f61ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PRECURSOR.builtin_internal_feature */
extern T6 T310f41(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.builtin_identified_feature */
extern T6 T310f39(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.tokens */
extern T0* T310f34(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.empty_dynamic_type_sets */
extern T0* T310f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_parenthesis_call_validity */
extern void T79f303(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T79f303ot1(T0* a1, T0** a2);
extern T1 T79f303ot2(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_precursor_expression */
extern void T74f990(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_expression */
extern void T74f1036(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_feature_address */
extern void T1306f83(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_feature_address */
extern void T387f29(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_feature_address */
extern void T383f34(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_feature_address */
extern void T370f151(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_feature_address_validity */
extern void T370f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuar4a_error */
extern void T36f395(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar4a */
extern T0* T532c925(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T36f122(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar4a_error */
extern void T77f396(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T77f123(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_function_address */
extern void T370f266(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_attribute_address */
extern void T370f265(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_address */
extern void T370f264(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_pointer_expression */
extern void T370f262(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_typed_pointer_expression */
extern void T370f261(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_feature_address */
extern void T79f363(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_address_validity */
extern void T79f440(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_function_address */
extern void T79f486(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.set_address */
extern void T310f62(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_address */
extern void T248f60(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_address */
extern void T79f485(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_address */
extern void T79f484(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_pointer_expression */
extern void T79f464(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_typed_pointer_expression */
extern void T79f463(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_feature_address */
extern void T74f991(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_address */
extern void T74f1037(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1037ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_FEATURE_LIST.is_empty */
extern T1 T309f8(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_current_address */
extern void T1306f61(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_current_address */
extern void T387f30(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_current_address */
extern void T383f35(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current_address */
extern void T370f152(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_address_validity */
extern void T370f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current_address */
extern void T79f341(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_address_validity */
extern void T79f419(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_current_address */
extern void T74f992(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_current_address */
extern void T74f1038(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1038ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_result_address */
extern void T1306f62(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_result_address */
extern void T387f31(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_result_address */
extern void T383f36(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result_address */
extern void T370f153(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_address_validity */
extern void T370f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result_address */
extern void T79f342(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_address_validity */
extern void T79f420(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_result_address */
extern void T74f993(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_result_address */
extern void T74f1039(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_expression_address */
extern void T1306f63(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_expression_address */
extern void T387f32(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_expression_address */
extern void T383f37(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_expression_address */
extern void T370f154(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expression_address_validity */
extern void T370f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_expression_address */
extern void T79f343(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_address_validity */
extern void T79f421(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_expression_address */
extern void T74f994(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_expression_address */
extern void T74f1040(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_expression */
extern void T1306f64(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_infix_expression */
extern void T387f33(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_expression */
extern void T383f38(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_expression */
extern void T370f155(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_expression_validity */
extern void T370f209(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T370f209ot1(T0* a1, T0** a2);
extern T1 T370f209ot2(T0* a1, T0** a2);
extern T1 T370f209ot3(T0* a1, T0** a2);
/* ET_INFIX_CAST_EXPRESSION.make */
extern T0* T1723c16(GE_context* ac, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_context */
extern T1 T380f45(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_context_with_type_marks */
extern T1 T380f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE.is_subset */
extern T1 T386f7(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].go_after */
extern void T175f79(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_go_after */
extern void T175f80(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.set_right */
extern void T1266f28(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.set_left */
extern void T1266f27(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.set_boolean_operator */
extern void T1266f26(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_expression */
extern void T79f344(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_expression_validity */
extern void T79f422(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f422ot1(T0* a1, T0** a2);
extern T1 T79f422ot2(T0* a1, T0** a2);
extern T1 T79f422ot3(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_infix_expression */
extern void T74f995(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_expression */
extern void T74f1041(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_type */
extern void T1306f67(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_type */
extern void T387f34(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_type */
extern void T383f39(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_type */
extern void T370f156(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_type_validity */
extern void T370f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_type */
extern void T370f271(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_type */
extern void T79f347(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_type_validity */
extern void T79f425(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_type */
extern void T79f468(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_manifest_type */
extern void T74f996(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_type */
extern void T74f1042(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_prefix_expression */
extern void T1306f68(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_prefix_expression */
extern void T387f35(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_prefix_expression */
extern void T383f40(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_prefix_expression */
extern void T370f157(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_prefix_expression_validity */
extern void T370f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_prefix_expression */
extern void T79f348(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_prefix_expression_validity */
extern void T79f426(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_prefix_expression */
extern void T74f997(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_prefix_expression */
extern void T74f1043(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_expression */
extern void T1306f69(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_old_expression */
extern void T387f36(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_old_expression */
extern void T383f41(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_expression */
extern void T370f158(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_old_expression_validity */
extern void T370f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vaol1a_error */
extern void T36f406(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vaol1a */
extern T0* T532c936(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T36f127(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vaol1a_error */
extern void T77f407(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T77f128(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_expression */
extern void T79f349(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_old_expression_validity */
extern void T79f427(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_old_expression */
extern void T74f998(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_old_expression */
extern void T74f1044(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_object_test */
extern void T1306f84(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_old_object_test */
extern void T387f37(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_old_object_test */
extern void T383f42(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_object_test */
extern void T370f159(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_object_test */
extern void T79f364(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_old_object_test */
extern void T74f999(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_manifest_string */
extern void T1306f86(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_manifest_string */
extern void T387f38(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_manifest_string */
extern void T383f43(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_manifest_string */
extern void T370f160(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_manifest_string_validity */
extern void T370f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_manifest_string */
extern void T79f366(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_manifest_string_validity */
extern void T79f442(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_manifest_string */
extern void T74f1000(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_manifest_string */
extern void T74f1045(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].force_last */
extern void T298f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].key_storage_put */
extern void T298f66(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].force */
extern void T702f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].fill_with */
extern void T700f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].extend */
extern void T700f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].slots_put */
extern void T298f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].clashes_put */
extern void T298f64(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].slots_item */
extern T6 T298f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].hash_position */
extern T6 T298f33(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.hash_code */
extern T6 T1273f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].resize */
extern void T298f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].clashes_resize */
extern void T298f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].special_integer_ */
extern T0* T298f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].key_storage_resize */
extern void T298f69(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T702f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T700f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].item_storage_resize */
extern void T298f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].slots_resize */
extern void T298f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].new_capacity */
extern T6 T298f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].item_storage_put */
extern void T298f62(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].search_position */
extern void T298f61(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function_inline_agent */
extern void T1306f76(GE_context* ac, T0* C, T0* a1);
extern T1 T1306f76ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T387f39(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T383f44(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function_inline_agent */
extern void T370f161(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_inline_agent_validity */
extern void T370f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_query_inline_agent_validity */
extern void T370f279(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_query_inline_agent */
extern void T370f335(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].last */
extern T0* T375f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].is_empty */
extern T1 T375f8(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vevi0d_error */
extern void T36f414(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0d */
extern T0* T532c944(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vevi0d_error */
extern void T77f415(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_inline_agent_locals_validity */
extern void T370f278(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_local_supplier */
extern void T370f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_local_supplier */
extern void T884f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_local_variable_declaration */
extern void T370f331(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1h_error */
extern void T36f454(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1h */
extern T0* T532c984(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T36f139(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1h_error */
extern void T77f455(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T77f140(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1f_error */
extern void T36f453(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1f */
extern T0* T532c983(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1f_error */
extern void T77f454(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1d_error */
extern void T36f452(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1d */
extern T0* T532c982(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1d_error */
extern void T77f453(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1c_error */
extern void T36f451(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1c */
extern T0* T532c981(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1c_error */
extern void T77f452(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vrlv1b_error */
extern void T36f450(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv1b */
extern T0* T532c980(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T36f141(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv1b_error */
extern void T77f451(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T77f142(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv2b_error */
extern void T36f449(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv2b */
extern T0* T532c979(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T36f140(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv2b_error */
extern void T77f450(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T77f141(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vred0d_error */
extern void T36f448(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0d */
extern T0* T532c978(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vred0d_error */
extern void T77f449(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_inline_agent_across_components_validity */
extern void T370f277(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_inline_agent_object_tests_validity */
extern void T370f276(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuot3b_error */
extern void T36f447(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot3b */
extern T0* T532c977(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot3b_error */
extern void T77f448(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_supplier */
extern void T370f275(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_result_supplier */
extern void T884f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_declaration */
extern void T370f274(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inline_agent_formal_arguments_validity */
extern void T370f273(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_argument_supplier */
extern void T370f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_argument_supplier */
extern void T884f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_formal_argument_declaration */
extern void T370f329(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1g_error */
extern void T36f446(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1g */
extern T0* T532c976(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1g_error */
extern void T77f447(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1e_error */
extern void T36f445(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1e */
extern T0* T532c975(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1e_error */
extern void T77f446(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1b_error */
extern void T36f444(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1b */
extern T0* T532c974(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1b_error */
extern void T77f445(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1a_error */
extern void T36f443(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1a */
extern T0* T532c973(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1a_error */
extern void T77f444(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vrfa0b_error */
extern void T36f442(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrfa0b */
extern T0* T532c972(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vrfa0b_error */
extern void T77f443(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0c_error */
extern void T36f441(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0c */
extern T0* T532c971(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vred0c_error */
extern void T77f442(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACROSS_CURSOR_SCOPE.hide_across_components */
extern void T385f10(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_CURSOR_SCOPE.count */
extern T6 T385f4(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.hide_object_tests */
extern void T382f9(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function_inline_agent */
extern void T79f356(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_inline_agent_validity */
extern void T79f434(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_inline_agent_validity */
extern void T79f482(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_query_inline_agent */
extern void T79f514(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent */
extern void T79f523(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T79f523ot1(T0* a1, T0** a2);
extern T1 T79f523ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_agent_result_dynamic_types */
extern void T79f528(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_locals_validity */
extern void T79f481(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_supplier */
extern void T79f511(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_variable_declaration */
extern void T79f510(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_across_components_validity */
extern void T79f480(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_object_tests_validity */
extern void T79f479(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_supplier */
extern void T79f478(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_declaration */
extern void T79f477(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_formal_arguments_validity */
extern void T79f476(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_argument_supplier */
extern void T79f509(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_formal_argument_declaration */
extern void T79f508(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function_inline_agent */
extern void T74f1001(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent */
extern void T74f1047(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent_body_declaration */
extern void T74f1046(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine_inline_agent_body_declaration */
extern void T74f1065(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_trace_message_call */
extern void T74f1077(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_PRECURSOR_CHECKER.process_once_function_inline_agent */
extern void T1306f77(GE_context* ac, T0* C, T0* a1);
extern T1 T1306f77ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T387f40(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T383f45(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function_inline_agent */
extern void T370f162(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_inline_agent_validity */
extern void T370f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpir3a_error */
extern void T36f415(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpir3a */
extern T0* T532c945(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T36f130(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir3a_error */
extern void T77f416(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T77f131(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function_inline_agent */
extern void T79f357(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_inline_agent_validity */
extern void T79f435(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_function_inline_agent */
extern void T74f1002(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent */
extern void T74f1049(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent_body_declaration */
extern void T74f1048(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function_inline_agent */
extern void T1306f78(GE_context* ac, T0* C, T0* a1);
extern T1 T1306f78ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T387f41(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T383f46(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function_inline_agent */
extern void T370f163(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_inline_agent_validity */
extern void T370f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpir3b_error */
extern void T36f416(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpir3b */
extern T0* T532c946(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpir3b_error */
extern void T77f417(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function_inline_agent */
extern void T79f358(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_inline_agent_validity */
extern void T79f436(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_function_inline_agent */
extern void T74f1003(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent */
extern void T74f1051(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent_body_declaration */
extern void T74f1050(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_procedure_inline_agent */
extern void T1306f79(GE_context* ac, T0* C, T0* a1);
extern T1 T1306f79ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T387f42(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T383f47(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure_inline_agent */
extern void T370f164(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_inline_agent_validity */
extern void T370f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_procedure_inline_agent_validity */
extern void T370f280(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_inline_agent */
extern void T370f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure_inline_agent */
extern void T79f359(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_inline_agent_validity */
extern void T79f437(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_procedure_inline_agent_validity */
extern void T79f483(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_inline_agent */
extern void T79f515(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_do_procedure_inline_agent */
extern void T74f1004(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent */
extern void T74f1053(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent_body_declaration */
extern void T74f1052(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure_inline_agent */
extern void T1306f80(GE_context* ac, T0* C, T0* a1);
extern T1 T1306f80ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T387f43(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T383f48(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure_inline_agent */
extern void T370f165(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_inline_agent_validity */
extern void T370f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure_inline_agent */
extern void T79f360(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_inline_agent_validity */
extern void T79f438(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_procedure_inline_agent */
extern void T74f1005(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent */
extern void T74f1055(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent_body_declaration */
extern void T74f1054(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure_inline_agent */
extern void T1306f81(GE_context* ac, T0* C, T0* a1);
extern T1 T1306f81ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T387f44(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T383f49(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure_inline_agent */
extern void T370f166(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_inline_agent_validity */
extern void T370f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure_inline_agent */
extern void T79f361(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_inline_agent_validity */
extern void T79f439(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_procedure_inline_agent */
extern void T74f1006(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent */
extern void T74f1057(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent_body_declaration */
extern void T74f1056(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter_type */
extern void T1335f10(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter_type */
extern void T1334f15(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter_type */
extern void T1333f12(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter_type */
extern void T1332f10(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter_type */
extern void T1311f11(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1310f20(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter_type */
extern void T1309f22(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter_type */
extern void T1304f16(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter_type */
extern void T1303f21(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter_type */
extern void T1302f27(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1301f19(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter_type */
extern void T1300f12(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter_type */
extern void T1299f19(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter_type */
extern void T1288f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameter_type_constraint */
extern void T1288f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3i_error */
extern void T77f375(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtct0b */
extern T0* T532c903(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3i_error */
extern void T36f374(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3h_error */
extern void T77f374(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3h */
extern T0* T532c906(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3h_error */
extern void T36f373(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3f_error */
extern void T77f373(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3f_error */
extern void T36f372(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3e_error */
extern void T77f372(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3e */
extern T0* T532c905(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3e_error */
extern void T36f371(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force_relation */
extern void T1492f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put_indexed_relation */
extern void T1492f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force */
extern void T1492f16(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put */
extern void T1492f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].put_new */
extern void T1653f36(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_put */
extern void T1653f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_put */
extern void T1653f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_put */
extern void T1653f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_put */
extern void T1653f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_item */
extern T6 T1653f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].hash_position */
extern T6 T1653f32(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.hash_code */
extern T6 T1218f77(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.hash_code */
extern T6 T1090f76(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_item */
extern T6 T1653f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].resize */
extern void T1653f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_resize */
extern void T1653f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].special_integer_ */
extern T0* T1653f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_resize */
extern void T1653f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_resize */
extern void T1653f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_item */
extern T0* T1653f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_resize */
extern void T1653f44(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].resize */
extern void T1493f16(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].capacity */
extern T6 T1492f9(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].index_of */
extern T6 T1492f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].found_item */
extern T6 T1653f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_item */
extern T6 T1653f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].found */
extern T1 T1653f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].search */
extern void T1653f58(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].search_position */
extern void T1653f59(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3d_error */
extern void T77f371(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3d */
extern T0* T532c904(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3d_error */
extern void T36f370(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_CHECKER1.process_formal_parameter_type */
extern void T1287f22(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter_type */
extern void T373f25(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class_type */
extern void T1335f4(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_class_type_validity */
extern void T1335f14(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.set_fatal_error */
extern void T1335f18(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class_type */
extern void T1334f11(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_actual_parameters_validity */
extern void T1334f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class_type */
extern void T1333f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_class_type_validity */
extern void T1333f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.set_fatal_error */
extern void T1333f11(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.has_ancestors_error */
extern T1 T471f43(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.ancestors_built */
extern T1 T471f42(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class_type */
extern void T1332f4(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_class_type_validity */
extern void T1332f14(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_syntax_error */
extern T1 T471f46(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_parsed */
extern T1 T471f45(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.set_fatal_error */
extern void T1332f18(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_preparsed */
extern T1 T471f41(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class_type */
extern void T1311f12(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_class_type */
extern void T1311f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_2 */
extern void T80f121(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1310f15(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_actual_parameters_validity */
extern void T1310f18(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class_type */
extern void T1309f10(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_class_type_validity */
extern void T1309f11(GE_context* ac, T0* C, T0* a1);
extern T1 T1309f11ot1(T0* a1, T0** a2);
extern T1 T1309f11ot2(T0* a1, T0** a2);
/* DS_HASH_SET [ET_CLASS].force_last */
extern void T1308f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].resize */
extern void T1308f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_resize */
extern void T1308f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].special_integer_ */
extern T0* T1308f31(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].key_storage_resize */
extern void T1308f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_resize */
extern void T1308f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].slots_resize */
extern void T1308f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_capacity */
extern T6 T1308f30(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT_CHECKER3.current_system */
extern T0* T1309f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.error_handler */
extern T0* T1309f5(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.set_fatal_error */
extern void T1309f12(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class_type */
extern void T1304f18(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_class_type_constraint */
extern void T1304f22(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg3a_error */
extern void T77f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vtcg3a */
extern T0* T532c834(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T77f81(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg3a_error */
extern void T36f295(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T36f80(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.error_handler */
extern T0* T1304f6(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.current_system */
extern T0* T1304f7(GE_context* ac, T0* C);
/* ET_CLASS.resolve_unfolded_tuple_actual_parameters_2 */
extern void T82f274(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_CHECKER2.current_universe */
extern T0* T1304f5(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.set_fatal_error */
extern void T1304f26(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.process_class_type */
extern void T1303f9(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_class_type_validity */
extern void T1303f10(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.error_handler */
extern T0* T1303f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.current_system */
extern T0* T1303f5(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.set_fatal_error */
extern void T1303f11(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.process_class_type */
extern void T1302f22(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_tuple_actual_parameters_unfolded */
extern void T1302f26(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_vtct_validity */
extern void T1302f25(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1301f15(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_actual_parameters_to_sorter */
extern void T1301f18(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class_type */
extern void T1300f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_class_type */
extern void T1300f19(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.current_universe */
extern T0* T1300f4(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class_type */
extern void T1299f13(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_actual_parameters */
extern void T1299f16(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.reset_fatal_error */
extern void T1299f18(GE_context* ac, T0* C, T1 a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class_type */
extern void T1288f23(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_class_type_constraint */
extern void T1288f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5a_error */
extern void T77f295(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_gvtcg5a */
extern T0* T532c833(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T77f80(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvtcg5a_error */
extern void T36f294(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T36f79(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_reference */
extern T1 T1218f13(GE_context* ac, T0* C);
/* ET_KEYWORD.is_reference */
extern T1 T397f11(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_reference */
extern T1 T1090f11(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5b_error */
extern void T77f294(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_gvtcg5b */
extern T0* T532c832(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_gvtcg5b_error */
extern void T36f293(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_expanded */
extern T1 T1218f12(GE_context* ac, T0* C);
/* ET_KEYWORD.is_expanded */
extern T1 T397f15(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_expanded */
extern T1 T1090f10(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtug2a_error */
extern void T77f293(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug2a */
extern T0* T532c831(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T77f79(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug2a_error */
extern void T36f292(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T36f78(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.resolve_unfolded_tuple_actual_parameters_1 */
extern void T82f273(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtug1a_error */
extern void T77f292(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug1a */
extern T0* T532c830(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T77f78(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug1a_error */
extern void T36f291(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T36f77(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class_type */
extern void T1287f10(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_class_type_validity */
extern void T1287f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.current_universe */
extern T0* T1287f7(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.process_class_type */
extern void T373f26(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_class_type_validity */
extern void T373f30(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.reset_fatal_error */
extern void T373f33(GE_context* ac, T0* C, T1 a1);
/* ET_TYPE_CHECKER.current_universe */
extern T0* T373f14(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_external_function */
extern void T1306f12(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_external_function */
extern void T1305f16(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_external_function_validity */
extern void T1305f27(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_function_validity */
extern void T1305f29(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_builtin_code */
extern void T260f101(GE_context* ac, T0* C, T6 a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_real_function_validity */
extern void T1305f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_real_ref_function_validity */
extern void T1305f54(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_integer_function_validity */
extern void T1305f53(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_integer_ref_function_validity */
extern void T1305f52(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_tuple_function_validity */
extern void T1305f51(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_function_function_validity */
extern void T1305f50(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_procedure_function_validity */
extern void T1305f49(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_platform_function_validity */
extern void T1305f48(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_internal_function_validity */
extern void T1305f47(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_identified_routines_function_validity */
extern void T1305f46(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_exception_manager_function_validity */
extern void T1305f45(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_factory_function_validity */
extern void T1305f44(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_function_validity */
extern void T1305f43(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_memory_function_validity */
extern void T1305f42(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.find_referers_feature_name */
extern unsigned char ge808os11475;
extern T0* ge808ov11475;
extern T0* T81f1000(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_com_failure_function_validity */
extern void T1305f41(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_arguments_32_function_validity */
extern void T1305f40(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_function_validity */
extern void T1305f39(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_ref_function_validity */
extern void T1305f38(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_function_validity */
extern void T1305f37(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.ise_6_1_latest */
extern T0* T1305f11(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_ref_function_validity */
extern void T1305f36(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_character_function_validity */
extern void T1305f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_sized_character_ref_function_validity */
extern void T1305f34(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_special_function_validity */
extern void T1305f33(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_type_function_validity */
extern void T1305f32(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.field_name_feature_name */
extern unsigned char ge808os11472;
extern T0* ge808ov11472;
extern T0* T81f839(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_any_function_validity */
extern void T1305f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function */
extern void T370f83(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_validity */
extern void T370f95(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function */
extern void T79f187(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T79f192(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_warning_message */
extern void T36f382(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_warning_message */
extern void T77f383(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_string_type_alive */
extern void T79f198(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.result_type_set */
extern T0* T79f70(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_function_validity */
extern void T79f197(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_new_special_any_instance */
extern void T79f223(GE_context* ac, T0* C, T0* a1);
extern T1 T79f223ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_new_instance */
extern void T79f222(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_generic_parameter_type */
extern void T79f221(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_field_static_type */
extern void T79f220(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_field_count */
extern void T79f219(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_field */
extern void T79f218(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_default */
extern void T79f217(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_reference_item */
extern void T79f216(GE_context* ac, T0* C, T0* a1);
extern T1 T79f216ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_item */
extern void T79f215(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_factory_exception_manager */
extern void T79f214(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_type_of_code */
extern void T79f213(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_last_exception */
extern void T79f212(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_raisable */
extern void T79f211(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignored */
extern void T79f210(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignorable */
extern void T79f209(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_caught */
extern void T79f208(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_exception_from_code */
extern void T79f207(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_internal_type_of_type */
extern void T79f206(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_eif_object_id */
extern void T79f205(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_eif_id_object */
extern void T79f204(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function_item */
extern void T79f203(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function */
extern void T79f202(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_twin */
extern void T79f201(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_builtin_unknown */
extern T1 T260f67(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T79f192p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_function */
extern void T74f1209(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function */
extern void T74f1220(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_tuple_type */
extern void T1335f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_tuple_type_validity */
extern void T1335f16(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_tuple_type */
extern void T1334f16(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_tuple_type */
extern void T1333f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_tuple_type_validity */
extern void T1333f20(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_tuple_type */
extern void T1332f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_tuple_type_validity */
extern void T1332f16(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_tuple_type */
extern void T1311f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_tuple_type */
extern void T1311f19(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1310f21(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_tuple_type */
extern void T1309f14(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_tuple_type */
extern void T1304f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_tuple_type_constraint */
extern void T1304f21(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_tuple_type */
extern void T1303f13(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_tuple_type_validity */
extern void T1303f24(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_tuple_type */
extern void T1302f28(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_tuple_actual_parameters_unfolded */
extern void T1302f36(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_vtct_validity */
extern void T1302f35(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1301f20(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_tuple_type */
extern void T1300f14(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_tuple_type */
extern void T1300f20(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_tuple_type */
extern void T1299f20(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_tuple_type */
extern void T1288f22(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_tuple_type_constraint */
extern void T1288f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_tuple_type */
extern void T1287f14(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_tuple_type_validity */
extern void T1287f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvhpr5a_error */
extern void T77f493(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr5a */
extern T0* T532c1022(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T77f159(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr5a_error */
extern void T36f492(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T36f158(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_tuple_type */
extern void T373f27(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_tuple_type_validity */
extern void T373f31(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_qualified_call_instruction */
extern void T1306f25(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_qualified_call_instruction */
extern void T370f179(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_instruction */
extern void T79f235(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_qualified_call_instruction */
extern void T74f1210(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unqualified_call_expression */
extern void T1306f82(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T387f55(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T383f60(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unqualified_call_expression */
extern void T370f177(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_expression */
extern void T79f362(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_unqualified_call_expression */
extern void T74f1211(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_expression */
extern void T74f1221(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1221ot1(T0* a1, T0** a2);
extern T1 T74f1221ot2(T0* a1, T0** a2);
extern T1 T74f1221ot3(T0* a1, T0** a2);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T292f12(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_object_test */
extern void T1306f70(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_object_test */
extern void T387f54(GE_context* ac, T0* C, T0* a1);
extern T1 T387f54ot1(T0* a1);
extern T1 T387f54ot2(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE.add_name */
extern void T386f14(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_attribute */
extern void T386f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].force_last */
extern void T175f81(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE.add_formal_argument */
extern void T386f19(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_local_variable */
extern void T386f18(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_result */
extern void T386f13(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_object_test */
extern void T383f59(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_object_test */
extern void T370f176(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_test_validity */
extern void T370f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_object_test */
extern void T370f298(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_object_test_type */
extern void T370f297(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_test */
extern void T79f350(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_validity */
extern void T79f428(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test */
extern void T79f470(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_type */
extern void T79f469(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_object_test */
extern void T74f1212(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_object_equality_expression */
extern void T1306f66(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_object_equality_expression */
extern void T387f53(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_object_equality_expression */
extern void T383f58(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_object_equality_expression */
extern void T370f175(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_equality_expression_validity */
extern void T370f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_object_equality_expression */
extern void T370f296(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vweq0b_error */
extern void T36f424(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0b */
extern T0* T532c954(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vweq_error */
extern T1 T36f133(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vweq0b_error */
extern void T77f425(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vweq_error */
extern T1 T77f134(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_left */
extern void T321f26(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_right */
extern void T321f25(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.name */
extern unsigned char ge613os15734;
extern T0* ge613ov15734;
extern T0* T321f14(GE_context* ac, T0* C);
/* ET_IDENTIFIER.twin */
extern T0* T182f97(GE_context* ac, T0* C);
/* ET_IDENTIFIER.copy */
extern void T182f124(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.tokens */
extern T0* T321f17(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_equality_expression */
extern void T79f346(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_equality_expression_validity */
extern void T79f424(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_equality_expression */
extern void T79f467(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_object_equality_expression_target_dynamic_types */
extern void T79f499(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T1859c6(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_object_equality_expression */
extern void T74f1213(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_equality_expression */
extern void T1306f65(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_equality_expression */
extern void T387f52(GE_context* ac, T0* C, T0* a1);
extern T1 T387f52ot1(T0* a1);
extern T1 T387f52ot2(T0* a1);
extern T1 T387f52ot3(T0* a1, T0** a2);
extern T1 T387f52ot4(T0* a1);
extern T1 T387f52ot5(T0* a1);
extern T1 T387f52ot6(T0* a1, T0** a2);
/* ET_BRACKET_SYMBOL.is_equal_symbol */
extern T1 T651f96(GE_context* ac, T0* C);
/* ET_SYMBOL.is_equal_symbol */
extern T1 T346f70(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_equality_expression */
extern void T383f57(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_equality_expression */
extern void T370f174(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_equality_expression_validity */
extern void T370f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_equality_expression */
extern void T370f295(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vweq0a_error */
extern void T36f423(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0a */
extern T0* T532c953(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vweq0a_error */
extern void T77f424(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EQUALITY_EXPRESSION.set_left */
extern void T322f24(GE_context* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.set_right */
extern void T322f23(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_equality_expression */
extern void T79f345(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_equality_expression_validity */
extern void T79f423(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_equality_expression */
extern void T79f466(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_equality_expression_target_dynamic_types */
extern void T79f498(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.make */
extern T0* T1858c6(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_equality_expression */
extern void T74f1214(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_expression */
extern void T1306f57(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_create_expression */
extern void T387f50(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_create_expression */
extern void T383f55(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_expression */
extern void T370f172(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_expression_validity */
extern void T370f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_creation_expression_validity */
extern void T370f294(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T370f294ot1(T0* a1, T0** a2);
extern T1 T370f294ot2(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vgcc6c_error */
extern void T36f479(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6c */
extern T0* T532c1009(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc6c_error */
extern void T77f480(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc8a_error */
extern void T36f478(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8a */
extern T0* T532c1008(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T36f152(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc8a_error */
extern void T77f479(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T77f153(GE_context* ac, T0* C, T0* a1);
/* ET_AST_NULL_LEAF.column */
extern T6 T1895f3(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.line */
extern T6 T1895f2(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.last_position */
extern T0* T1861f19(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.last_position */
extern T0* T326f19(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vgcc1a_error */
extern void T36f477(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc1a */
extern T0* T532c1007(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T36f151(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc1a_error */
extern void T77f478(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T77f152(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc5a_error */
extern void T36f476(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5a */
extern T0* T532c1006(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T36f150(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc5a_error */
extern void T77f477(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T77f151(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_type_validity */
extern void T370f346(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_FROM_EXPRESSION.type_position */
extern T0* T1861f18(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.type_position */
extern T0* T326f18(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_create_supplier */
extern void T370f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_create_supplier */
extern void T884f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcc6b_error */
extern void T36f475(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6b */
extern T0* T532c1005(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc6b_error */
extern void T77f476(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_expression */
extern void T79f337(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_expression_validity */
extern void T79f415(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_expression_validity */
extern void T79f459(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f459ot1(T0* a1, T0** a2);
extern T1 T79f459ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_type_validity */
extern void T79f385(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_create_supplier */
extern void T79f384(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_create_expression */
extern void T74f1215(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_expression */
extern void T74f1222(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_extended_attribute */
extern void T1306f13(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_extended_attribute */
extern void T1305f17(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_extended_attribute */
extern void T370f84(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_extended_attribute_validity */
extern void T370f96(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vevi0e_error */
extern void T36f274(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0e */
extern T0* T532c813(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vevi0e_error */
extern void T77f275(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_COMPOUND.has_non_null_instruction */
extern T1 T332f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_extended_attribute */
extern void T79f188(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_extended_attribute_validity */
extern void T79f193(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_extended_attribute */
extern void T74f1216(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_extended_attribute */
extern void T74f1223(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute */
extern void T74f1226(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_wrapper */
extern void T74f1227(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T292f26(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_name */
extern void T292f25(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_constant_attribute */
extern void T1306f14(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_constant_attribute */
extern void T1305f18(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_constant_attribute */
extern void T370f85(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_constant_attribute_validity */
extern void T370f97(GE_context* ac, T0* C, T0* a1);
extern T1 T370f97ot1(T0* a1, T0** a2);
extern T1 T370f97ot2(T0* a1, T0** a2);
extern T1 T370f97ot3(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vqmc6a_error */
extern void T36f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc6a */
extern T0* T532c820(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc6_error */
extern T1 T36f70(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc6a_error */
extern void T77f282(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc6_error */
extern T1 T77f71(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc5a_error */
extern void T36f280(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc5a */
extern T0* T532c819(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T36f69(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc5a_error */
extern void T77f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T77f70(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc4a_error */
extern void T36f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc4a */
extern T0* T532c818(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T36f68(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc4a_error */
extern void T77f280(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T77f69(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc3a_error */
extern void T36f278(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc3a */
extern T0* T532c817(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T36f67(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3a_error */
extern void T77f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T77f68(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc3b_error */
extern void T36f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vqmc3b */
extern T0* T532c816(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vqmc3b_error */
extern void T77f278(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vqmc2a_error */
extern void T36f276(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc2a */
extern T0* T532c815(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T36f66(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc2a_error */
extern void T77f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T77f67(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc1a_error */
extern void T36f275(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc1a */
extern T0* T532c814(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T36f65(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc1a_error */
extern void T77f276(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T77f66(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_constant_attribute */
extern void T79f189(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_constant_attribute_validity */
extern void T79f194(GE_context* ac, T0* C, T0* a1);
extern T1 T79f194ot1(T0* a1, T0** a2);
extern T1 T79f194ot2(T0* a1, T0** a2);
extern T1 T79f194ot3(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_constant_attribute */
extern void T74f1217(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_constant_attribute */
extern void T74f1224(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unique_attribute */
extern void T1306f15(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_unique_attribute */
extern void T1305f19(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unique_attribute */
extern void T370f86(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unique_attribute_validity */
extern void T370f98(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqui0a_error */
extern void T36f282(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqui0a */
extern T0* T532c821(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqui_error */
extern T1 T36f71(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqui0a_error */
extern void T77f283(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqui_error */
extern T1 T77f72(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unique_attribute */
extern void T79f190(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unique_attribute_validity */
extern void T79f195(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_unique_attribute */
extern void T74f1218(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unique_attribute */
extern void T74f1225(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_attribute */
extern void T1306f16(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_attribute */
extern void T1305f20(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_attribute */
extern void T370f87(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_attribute_validity */
extern void T370f99(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_attribute */
extern void T79f191(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_attribute_validity */
extern void T79f196(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_attribute */
extern void T74f1219(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_current */
extern void T1335f6(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_current */
extern void T1334f17(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_current */
extern void T1333f14(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_current */
extern void T1332f6(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_current */
extern void T1311f14(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1310f22(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_current */
extern void T1309f15(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_current */
extern void T1304f12(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_current */
extern void T1303f14(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_current */
extern void T1302f29(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1301f21(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_current */
extern void T1300f15(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_current */
extern void T1299f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_current */
extern void T1288f17(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_current */
extern void T1287f15(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_current */
extern void T373f34(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_current_validity */
extern void T373f40(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_n */
extern void T1335f19(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_n */
extern void T1334f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_n */
extern void T1333f15(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_n */
extern void T1332f19(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_n */
extern void T1311f15(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_n */
extern void T1310f23(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_n */
extern void T1309f16(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_n */
extern void T1304f23(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_n */
extern void T1303f15(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_n */
extern void T1302f30(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_n */
extern void T1301f22(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_n */
extern void T1300f16(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_n */
extern void T1299f22(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_n */
extern void T1288f33(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_n */
extern void T1287f16(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_n */
extern void T373f35(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter */
extern void T1335f20(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter */
extern void T1334f19(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter */
extern void T1333f16(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter */
extern void T1332f20(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter */
extern void T1311f20(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1310f24(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter */
extern void T1309f23(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter */
extern void T1304f24(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter */
extern void T1303f22(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter */
extern void T1302f31(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1301f23(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter */
extern void T1300f21(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter */
extern void T1299f23(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter */
extern void T1288f34(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter */
extern void T1287f23(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter */
extern void T373f36(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_constrained_formal_parameter */
extern void T1335f21(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_constrained_formal_parameter */
extern void T1334f20(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_constrained_formal_parameter */
extern void T1333f17(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_constrained_formal_parameter */
extern void T1332f21(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_constrained_formal_parameter */
extern void T1311f21(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1310f25(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_constrained_formal_parameter */
extern void T1309f24(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_constrained_formal_parameter */
extern void T1304f25(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_constrained_formal_parameter */
extern void T1303f23(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_constrained_formal_parameter */
extern void T1302f32(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1301f24(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_constrained_formal_parameter */
extern void T1300f22(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_constrained_formal_parameter */
extern void T1299f24(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_constrained_formal_parameter */
extern void T1288f35(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_constrained_formal_parameter */
extern void T1287f24(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T373f37(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_bit_n */
extern void T1335f12(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_bit_type_validity */
extern void T1335f17(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_bit_n */
extern void T1334f21(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_bit_n */
extern void T1333f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_bit_type_validity */
extern void T1333f21(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_bit_n */
extern void T1332f12(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_bit_type_validity */
extern void T1332f17(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_bit_n */
extern void T1311f16(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_bit_n */
extern void T1310f26(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_bit_n */
extern void T1309f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_bit_n */
extern void T1304f19(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_bit_n */
extern void T1303f16(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_bit_n */
extern void T1302f33(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_bit_n_vtct_validity */
extern void T1302f37(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_bit_n */
extern void T1301f25(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_bit_n */
extern void T1300f17(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_bit_n */
extern void T1299f25(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_bit_n */
extern void T1288f24(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_bit_n_constraint */
extern void T1288f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3b_error */
extern void T77f376(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3b */
extern T0* T532c907(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3b_error */
extern void T36f375(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_bit_n */
extern void T1287f17(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_bit_n_validity */
extern void T1287f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3b_error */
extern void T77f495(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3b */
extern T0* T532c1024(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr3b_error */
extern void T36f494(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvhpr4a_error */
extern void T77f494(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr4a */
extern T0* T532c1023(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr4_error */
extern T1 T77f160(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr4a_error */
extern void T36f493(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr4_error */
extern T1 T36f159(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_bit_n */
extern void T373f38(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_n_validity */
extern void T373f41(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_bit_feature */
extern void T1335f13(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_bit_feature */
extern void T1334f22(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_bit_feature */
extern void T1333f19(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_bit_feature */
extern void T1332f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_bit_feature */
extern void T1311f17(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_bit_feature */
extern void T1310f27(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_bit_feature */
extern void T1309f18(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_bit_feature */
extern void T1304f20(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_bit_feature */
extern void T1303f17(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_bit_feature */
extern void T1302f34(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_bit_feature_vtct_validity */
extern void T1302f38(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_bit_feature */
extern void T1301f26(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_bit_feature */
extern void T1300f18(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_bit_feature */
extern void T1299f26(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_bit_feature */
extern void T1299f27(GE_context* ac, T0* C, T0* a1);
extern T1 T1299f27ot1(T0* a1, T0** a2);
extern T1 T1299f27ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vtbt0b_error */
extern void T77f380(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0b */
extern T0* T532c911(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0b_error */
extern void T36f379(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtbt0a_error */
extern void T77f379(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0a */
extern T0* T532c910(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0a_error */
extern void T36f378(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER_TYPE_RESOLVER.check_bit_type */
extern void T1299f28(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.has_size_error */
extern T1 T1223f21(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.compute_size */
extern void T1223f113(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.resolve_identifier_type */
extern void T1223f119(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER_CHECKER1.process_bit_feature */
extern void T1288f25(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_bit_feature_constraint */
extern void T1288f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3a_error */
extern void T77f377(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3a */
extern T0* T532c908(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3a_error */
extern void T36f376(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_bit_feature */
extern void T1287f18(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_bit_feature_validity */
extern void T1287f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3a_error */
extern void T77f496(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3a */
extern T0* T532c1025(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr3a_error */
extern void T36f495(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TYPE_CHECKER.process_bit_feature */
extern void T373f39(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_feature_validity */
extern void T373f42(GE_context* ac, T0* C, T0* a1);
extern T1 T373f42ot1(T0* a1, T0** a2);
extern T1 T373f42ot2(T0* a1, T0** a2);
/* ET_TYPE_CHECKER.check_bit_type_validity */
extern void T373f43(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_cluster */
extern void T440f1976(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_cluster */
extern void T440f2133(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PARSER.parse_cluster */
extern T0* T440f2133ac1(T0* a1);
/* Creation of agent #2 in feature ET_EIFFEL_PARSER.parse_cluster */
extern T0* T440f2133ac2(T0* a1);
/* ET_CLASS.is_in_group */
extern T1 T82f134(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_clusters */
extern void T440f2138(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.build_dependant_constraint */
extern void T440f2137(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make */
extern T0* T857c17(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].set_key_equality_tester */
extern void T1468f35(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_equality_tester */
extern T0* T857f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_map */
extern T0* T1468c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_with_equality_testers */
extern void T1468f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_sparse_container */
extern void T1468f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].set_internal_cursor */
extern void T1468f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].unset_found_item */
extern void T1468f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_slots */
extern void T1468f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].new_modulus */
extern T6 T1468f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_clashes */
extern void T1468f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_key_storage */
extern void T1468f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_item_storage */
extern void T1468f51(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].make */
extern T0* T1650f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].make_empty */
extern T0* T1647c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].default_create */
extern T0* T1650c2(GE_context* ac);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make_with_pathnames */
extern T0* T857c16(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].put_last */
extern void T1468f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_put */
extern void T1468f44(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_put */
extern void T1468f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_put */
extern void T1468f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_item */
extern T6 T1468f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].compress */
extern void T1468f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].hash_position */
extern T6 T1468f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_wipe_out */
extern void T1468f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_wipe_out */
extern void T1468f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_keep_head */
extern void T1468f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_keep_head */
extern void T1468f47(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].keep_head */
extern void T1647f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].set_count */
extern void T1647f8(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].move_all_cursors */
extern void T1468f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_put */
extern void T1468f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].force */
extern void T1650f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_WILDCARD].fill_with */
extern void T1647f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_WILDCARD].extend */
extern void T1647f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].search_position */
extern void T1468f39(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.compile */
extern T0* T1467c16(GE_context* ac, T0* a1, T1 a2);
/* LX_FULL_DFA.make */
extern T0* T1645c37(GE_context* ac, T0* a1);
/* LX_FULL_DFA.build */
extern void T1645f40(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_accept_table */
extern void T1645f46(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].first */
extern T0* T1734f6(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_nxt_table */
extern void T1645f45(GE_context* ac, T0* C);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].target */
extern T0* T1763f6(GE_context* ac, T0* C, T6 a1);
/* ARRAY [detachable LX_DFA_STATE].item */
extern T0* T1851f4(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.is_accepting */
extern T1 T1757f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].is_empty */
extern T1 T1734f11(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_transitions */
extern void T1645f44(GE_context* ac, T0* C, T0* a1);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].set_target */
extern void T1763f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [detachable LX_DFA_STATE].put */
extern void T1851f7(GE_context* ac, T0* C, T0* a1, T6 a2);
/* LX_SYMBOL_PARTITIONS.previous_symbol */
extern T6 T1760f4(GE_context* ac, T0* C, T6 a1);
/* LX_FULL_DFA.new_state */
extern T0* T1645f36(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_STATE.set_id */
extern void T1757f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].put_last */
extern void T1759f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].force */
extern void T1848f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_DFA_STATE].fill_with */
extern void T1847f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_DFA_STATE].extend */
extern void T1847f9(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_STATE.is_equal */
extern T1 T1757f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].is_equal */
extern T1 T1758f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].any_ */
extern T0* T1758f17(GE_context* ac, T0* C);
/* LX_DFA_STATE.any_ */
extern T0* T1757f14(GE_context* ac, T0* C);
/* LX_DFA_STATE.new_state */
extern T0* T1757f9(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.make */
extern T0* T1757c16(GE_context* ac, T0* a1, T6 a2, T6 a3);
extern T1 T1757f16ot1(T0* a1, T0** a2);
/* LX_RULE.set_useful */
extern void T1745f22(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [LX_RULE].sort */
extern void T1734f17(GE_context* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_RULE].sort */
extern void T1840f3(GE_context* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_RULE].sort_with_comparator */
extern void T1840f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_BUBBLE_SORTER [LX_RULE].subsort_with_comparator */
extern void T1840f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [LX_RULE].replace */
extern void T1734f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].less_than */
extern T1 T1873f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* LX_RULE.is_less */
extern T1 T1745f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].item */
extern T0* T1734f10(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.rule_sorter */
extern unsigned char ge20os38282;
extern T0* ge20ov38282;
extern T0* T1757f7(GE_context* ac, T0* C);
/* DS_BUBBLE_SORTER [LX_RULE].make */
extern T0* T1840c2(GE_context* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].make */
extern T0* T1873c2(GE_context* ac);
/* DS_ARRAYED_LIST [LX_NFA_STATE].sort */
extern void T1758f25(GE_context* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].sort */
extern void T1838f3(GE_context* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].sort_with_comparator */
extern void T1838f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].subsort_with_comparator */
extern void T1838f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [LX_NFA_STATE].replace */
extern void T1758f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].less_than */
extern T1 T1876f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* LX_NFA_STATE.is_less */
extern T1 T1766f9(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_STATE.bubble_sorter */
extern unsigned char ge20os38281;
extern T0* ge20ov38281;
extern T0* T1757f8(GE_context* ac, T0* C);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].make */
extern T0* T1838c2(GE_context* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].make */
extern T0* T1876c2(GE_context* ac);
/* DS_ARRAYED_LIST [LX_NFA_STATE].last */
extern T0* T1758f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].is_empty */
extern T1 T1758f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].force_last */
extern void T1734f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].force */
extern void T1820f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_RULE].fill_with */
extern void T1755f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_RULE].extend */
extern void T1755f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].resize */
extern void T1734f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].aliased_resized_area */
extern T0* T1820f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_RULE].aliased_resized_area */
extern T0* T1755f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].new_capacity */
extern T6 T1734f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].extendible */
extern T1 T1734f8(GE_context* ac, T0* C, T6 a1);
/* LX_NFA_STATE.is_accepting_head */
extern T1 T1766f6(GE_context* ac, T0* C);
/* LX_NFA_STATE.has_transition */
extern T1 T1766f8(GE_context* ac, T0* C);
/* LX_NFA_STATE.is_accepting */
extern T1 T1766f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].has */
extern T1 T1758f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].force_last */
extern void T1758f23(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].force */
extern void T1844f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_NFA_STATE].fill_with */
extern void T1842f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_NFA_STATE].extend */
extern void T1842f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].resize */
extern void T1758f28(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].aliased_resized_area */
extern T0* T1844f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_NFA_STATE].aliased_resized_area */
extern T0* T1842f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].new_capacity */
extern T6 T1758f12(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].extendible */
extern T1 T1758f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].make */
extern T0* T1734c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].set_internal_cursor */
extern void T1734f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].new_cursor */
extern T0* T1734f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_RULE].make */
extern T0* T1821c4(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].make */
extern T0* T1820f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_RULE].make_empty */
extern void T1755f7(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_RULE].make_empty */
extern T0* T1755c7(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].default_create */
extern T0* T1820c3(GE_context* ac);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].make */
extern T0* T1763c7(GE_context* ac, T6 a1, T6 a2);
/* KL_ARRAY_ROUTINES [detachable LX_DFA_STATE].default_create */
extern T0* T1852c1(GE_context* ac);
/* ARRAY [detachable LX_DFA_STATE].make_filled */
extern T0* T1851c5(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable LX_DFA_STATE].make_filled_area */
extern void T1851f6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_DFA_STATE].make_filled */
extern T0* T1847c8(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [LX_DFA_STATE].make_empty */
extern void T1847f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_DFA_STATE].make_empty */
extern T0* T1847c5(GE_context* ac, T6 a1);
/* LX_DFA_STATE.maximum_symbol */
extern T6 T1757f13(GE_context* ac, T0* C);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].upper */
extern T6 T1763f5(GE_context* ac, T0* C);
/* LX_DFA_STATE.minimum_symbol */
extern T6 T1757f12(GE_context* ac, T0* C);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].lower */
extern T6 T1763f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put_last */
extern void T1758f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].item */
extern T0* T1758f13(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].make */
extern T0* T1758c19(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].set_internal_cursor */
extern void T1758f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].new_cursor */
extern T0* T1758f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].make */
extern T0* T1845c9(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].make */
extern T0* T1844f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_NFA_STATE].make_empty */
extern T0* T1842c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].default_create */
extern T0* T1844c3(GE_context* ac);
/* LX_SYMBOL_PARTITIONS.is_representative */
extern T1 T1760f8(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.partition */
extern void T1757f18(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T1760f10(GE_context* ac, T0* C);
/* ARRAY [BOOLEAN].clear_all */
extern void T719f8(GE_context* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T1760f10p1(GE_context* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].put_left */
extern void T1833f9(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].attach_right */
extern void T1833f10(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].put */
extern void T1833f5(GE_context* ac, T0* C, T6 a1);
/* LX_FULL_DFA.resize */
extern void T1645f49(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].resize */
extern void T1759f10(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].aliased_resized_area */
extern T0* T1848f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_DFA_STATE].aliased_resized_area */
extern T0* T1847f4(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.capacity */
extern T6 T1760f5(GE_context* ac, T0* C);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].count */
extern T6 T1835f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_DFA_STATE].item */
extern T0* T1759f7(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.make */
extern T0* T1760c9(GE_context* ac, T6 a1, T6 a2);
/* LX_SYMBOL_PARTITIONS.make */
extern void T1760f9p1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].put */
extern void T1835f7(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].make_filled */
extern T0* T1835c6(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].make_filled_area */
extern void T1835f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].make_filled */
extern T0* T1834c4(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].fill_with */
extern void T1834f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].extend */
extern void T1834f8(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].make_empty */
extern void T1834f6(GE_context* ac, T0* C, T6 a1);
/* DS_BILINKABLE [INTEGER_32].make */
extern T0* T1833c4(GE_context* ac, T6 a1);
/* LX_FULL_DFA.put_eob_state */
extern void T1645f39(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].force_first */
extern void T1734f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].put */
extern void T1734f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [LX_RULE].move_cursors_right */
extern void T1734f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_RULE].set_position */
extern void T1821f5(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].move_right */
extern void T1734f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [LX_RULE].put_last */
extern void T1734f19(GE_context* ac, T0* C, T0* a1);
/* LX_RULE.make_default */
extern T0* T1745c14(GE_context* ac, T6 a1);
/* LX_RULE.dummy_action */
extern unsigned char ge100os38709;
extern T0* ge100ov38709;
extern T0* T1745f11(GE_context* ac, T0* C);
/* LX_ACTION.make */
extern T0* T1837c2(GE_context* ac, T0* a1);
/* LX_RULE.dummy_pattern */
extern unsigned char ge100os38708;
extern T0* ge100ov38708;
extern T0* T1745f12(GE_context* ac, T0* C);
/* LX_NFA.make_epsilon */
extern T0* T1742c12(GE_context* ac, T1 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put_first */
extern void T1758f21(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put */
extern void T1758f27(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [LX_NFA_STATE].move_cursors_right */
extern void T1758f31(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_position */
extern void T1845f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].move_right */
extern void T1758f30(GE_context* ac, T0* C, T6 a1, T6 a2);
/* LX_NFA_STATE.set_transition */
extern void T1766f11(GE_context* ac, T0* C, T0* a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].make */
extern T0* T1830c3(GE_context* ac, T0* a1);
/* LX_NFA_STATE.make */
extern T0* T1766c10(GE_context* ac, T1 a1);
/* LX_FULL_DFA.initialize */
extern void T1645f38(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_DFA.initialize_dfa */
extern void T1645f43(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* LX_FULL_DFA.put_start_condition */
extern void T1645f48(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.start_state */
extern T0* T1742f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].first */
extern T0* T1758f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA].item */
extern T0* T1764f7(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.item */
extern T0* T1735f9(GE_context* ac, T0* C, T6 a1);
/* LX_FULL_DFA.set_nfa_state_ids */
extern void T1645f47(GE_context* ac, T0* C, T0* a1);
/* LX_NFA_STATE.set_id */
extern void T1766f14(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].force */
extern void T1765f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_put */
extern void T1765f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_put */
extern void T1765f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_put */
extern void T1765f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_item */
extern T6 T1765f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_item */
extern T6 T1765f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].hash_position */
extern T6 T1765f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].resize */
extern void T1765f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_resize */
extern void T1765f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].special_integer_ */
extern T0* T1765f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_resize */
extern void T1765f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_resize */
extern void T1765f46(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].aliased_resized_area */
extern T0* T1741f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_NFA].aliased_resized_area */
extern T0* T1743f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_item */
extern T6 T1765f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_resize */
extern void T1765f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_modulus */
extern T6 T1765f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_capacity */
extern T6 T1765f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_put */
extern void T1765f39(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_NFA].force */
extern void T1741f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_NFA].fill_with */
extern void T1743f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_NFA].extend */
extern void T1743f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].search_position */
extern void T1765f36(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [INTEGER_32].test */
extern T1 T612f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].unset_found_item */
extern void T1765f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item */
extern T0* T1765f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_item */
extern T0* T1765f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].has */
extern T1 T1765f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make */
extern T0* T1765c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_with_equality_testers */
extern void T1765f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_sparse_container */
extern void T1765f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].set_internal_cursor */
extern void T1765f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_cursor */
extern T0* T1765f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32].make */
extern T0* T1855c4(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_slots */
extern void T1765f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_clashes */
extern void T1765f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_key_storage */
extern void T1765f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_item_storage */
extern void T1765f49(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].make */
extern T0* T1741f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_NFA].make_empty */
extern T0* T1743c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].default_create */
extern T0* T1741c3(GE_context* ac);
/* detachable KL_EQUALITY_TESTER [INTEGER_32].default_create */
extern T0* T612c2(GE_context* ac);
/* DS_ARRAYED_LIST [LX_DFA_STATE].make */
extern T0* T1759c8(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].set_internal_cursor */
extern void T1759f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].new_cursor */
extern T0* T1759f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE].make */
extern T0* T1849c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].make */
extern T0* T1848f1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].default_create */
extern T0* T1848c3(GE_context* ac);
/* LX_EQUIVALENCE_CLASSES.to_array */
extern T0* T1744f6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.lower */
extern T6 T1744f5(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.upper */
extern T6 T1744f4(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.built */
extern T1 T1744f3(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_eof_rules */
extern void T1645f42(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ARRAY [LX_RULE].put */
extern void T1756f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [LX_RULE].make_filled */
extern T0* T1756c4(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [LX_RULE].make_filled_area */
extern void T1756f6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_RULE].make_filled */
extern T0* T1755c5(GE_context* ac, T0* a1, T6 a2);
/* LX_FULL_DFA.build_rules */
extern void T1645f41(GE_context* ac, T0* C, T0* a1);
/* KL_ARRAY_ROUTINES [LX_RULE].make_empty_with_lower */
extern T0* T1761f1(GE_context* ac, T0* C, T6 a1);
/* ARRAY [LX_RULE].make_from_array */
extern T0* T1756c8(GE_context* ac, T0* a1);
/* ARRAY [LX_RULE].set_area */
extern void T1756f10(GE_context* ac, T0* C, T0* a1);
/* KL_ARRAY [LX_RULE].new_rebase */
extern void T1850f5(GE_context* ac, T0* C, T6 a1);
/* KL_ARRAY [LX_RULE].make_empty */
extern T0* T1850c4(GE_context* ac);
/* KL_ARRAY [LX_RULE].make_empty_area */
extern void T1850f6(GE_context* ac, T0* C, T6 a1);
/* ARRAY [LX_RULE].make_empty */
extern T0* T1756c7(GE_context* ac);
/* ARRAY [LX_RULE].make_empty_area */
extern void T1756f9(GE_context* ac, T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [LX_RULE].default_create */
extern T0* T1761c2(GE_context* ac);
/* LX_START_CONDITIONS.names */
extern T0* T1735f7(GE_context* ac, T0* C);
/* LX_START_CONDITIONS.first */
extern T0* T1735f6(GE_context* ac, T0* C);
/* KL_ARRAY_ROUTINES [STRING_8].make_empty_with_lower */
extern T0* T1822f1(GE_context* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].make_from_array */
extern T0* T142c18(GE_context* ac, T0* a1);
/* KL_ARRAY [STRING_8].new_rebase */
extern void T1884f5(GE_context* ac, T0* C, T6 a1);
/* KL_ARRAY [STRING_8].make_empty */
extern T0* T1884c4(GE_context* ac);
/* KL_ARRAY [STRING_8].make_empty_area */
extern void T1884f6(GE_context* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].make_empty */
extern T0* T142c17(GE_context* ac);
/* LX_START_CONDITIONS.string_array_routines */
extern unsigned char ge213os4340;
extern T0* ge213ov4340;
extern T0* T1735f11(GE_context* ac, T0* C);
/* KL_ARRAY_ROUTINES [STRING_8].default_create */
extern T0* T1822c2(GE_context* ac);
/* LX_WILDCARD_PARSER.parse_string */
extern void T1643f222(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.parse */
extern void T1643f226(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_pop_last_value */
extern void T1643f239(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_push_error_value */
extern void T1643f238(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_do_action */
extern void T1643f237(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_character_to_string */
extern T0* T1643f172(GE_context* ac, T0* C, T6 a1, T0* a2);
/* LX_WILDCARD_PARSER.new_symbol_nfa */
extern T0* T1643f217(GE_context* ac, T0* C, T6 a1);
/* LX_NFA.make_symbol */
extern T0* T1742c13(GE_context* ac, T6 a1, T1 a2);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].make */
extern T0* T1832c4(GE_context* ac, T6 a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].force_new */
extern void T1738f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].key_storage_put */
extern void T1738f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].item_storage_put */
extern void T1738f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].slots_put */
extern void T1738f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].clashes_put */
extern void T1738f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].slots_item */
extern T6 T1738f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].hash_position */
extern T6 T1738f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].clashes_item */
extern T6 T1738f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].resize */
extern void T1738f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].clashes_resize */
extern void T1738f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].special_integer_ */
extern T0* T1738f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].key_storage_resize */
extern void T1738f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].item_storage_resize */
extern void T1738f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].key_storage_item */
extern T0* T1738f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].slots_resize */
extern void T1738f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].new_modulus */
extern T6 T1738f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].new_capacity */
extern T6 T1738f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].unset_found_item */
extern void T1738f47(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.add */
extern void T1744f11(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.put */
extern void T1737f19(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.force_last */
extern void T1737f22(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.resize */
extern void T1737f23(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.new_capacity */
extern T6 T1737f13(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.extendible */
extern T1 T1737f11(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.last */
extern T6 T1737f12(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.is_empty */
extern T1 T1737f10(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.has */
extern T1 T1737f9(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.arrayed_has */
extern T1 T1737f15(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.make */
extern T0* T1737c18(GE_context* ac, T6 a1);
/* LX_SYMBOL_CLASS.set_internal_cursor */
extern void T1737f21(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.new_cursor */
extern T0* T1737f16(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].found_item */
extern T0* T1738f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].item_storage_item */
extern T0* T1738f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].found */
extern T1 T1738f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].search */
extern void T1738f43(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].search_position */
extern void T1738f45(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_epsilon_nfa */
extern T0* T1643f171(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.append_character_set_to_character_class */
extern T0* T1643f170(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.report_negative_range_in_character_class_error */
extern void T1643f272(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.make */
extern T0* T1815c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.filename */
extern T0* T1643f190(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T1739f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T1740f4(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_character_to_character_class */
extern T0* T1643f169(GE_context* ac, T0* C, T6 a1, T0* a2);
/* LX_WILDCARD_PARSER.new_character_class */
extern T0* T1643f168(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.set_negated */
extern void T1737f20(GE_context* ac, T0* C, T1 a1);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].force */
extern void T1739f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_SYMBOL_CLASS].fill_with */
extern void T1740f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_SYMBOL_CLASS].extend */
extern void T1740f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].force */
extern void T1738f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* LX_WILDCARD_PARSER.new_nfa_from_character_class */
extern T0* T1643f167(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.sort */
extern void T1737f24(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.arrayed_sort */
extern void T1737f25(GE_context* ac, T0* C, T0* a1);
/* DS_SHELL_SORTER [INTEGER_32].sort */
extern void T1872f3(GE_context* ac, T0* C, T0* a1);
/* DS_SHELL_SORTER [INTEGER_32].sort_with_comparator */
extern void T1872f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_SHELL_SORTER [INTEGER_32].subsort_with_comparator */
extern void T1872f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* LX_SYMBOL_CLASS.replace */
extern void T1737f27(GE_context* ac, T0* C, T6 a1, T6 a2);
/* LX_SYMBOL_CLASS.sorter */
extern unsigned char ge25os38743;
extern T0* ge25ov38743;
extern T0* T1737f17(GE_context* ac, T0* C);
/* DS_SHELL_SORTER [INTEGER_32].make */
extern T0* T1872c2(GE_context* ac, T0* a1);
/* LX_WILDCARD_PARSER.new_symbol_class_nfa */
extern T0* T1643f165(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.make_symbol_class */
extern T0* T1742c6(GE_context* ac, T0* a1, T1 a2);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].make */
extern T0* T1828c4(GE_context* ac, T0* a1, T0* a2);
/* LX_WILDCARD_PARSER.question_character_class */
extern T0* T1643f164(GE_context* ac, T0* C);
/* LX_NFA.build_optional */
extern void T1742f11(GE_context* ac, T0* C);
/* LX_NFA_STATE.set_epsilon_transition */
extern void T1766f12(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.final_state */
extern T0* T1742f5(GE_context* ac, T0* C);
/* LX_NFA.build_positive_closure */
extern void T1742f10(GE_context* ac, T0* C);
/* LX_NFA.build_closure */
extern void T1742f9(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.new_nfa_from_character */
extern T0* T1643f163(GE_context* ac, T0* C, T6 a1);
/* LX_NFA.build_concatenation */
extern void T1742f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].append_last */
extern void T1758f24(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].extend_last */
extern void T1758f29(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].forth */
extern void T1845f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_forth */
extern void T1758f33(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].add_traversing_cursor */
extern void T1758f34(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_next_cursor */
extern void T1845f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].remove_traversing_cursor */
extern void T1758f35(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].item */
extern T0* T1845f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_item */
extern T0* T1758f15(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].after */
extern T1 T1845f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].start */
extern void T1845f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_start */
extern void T1758f32(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_after */
extern void T1845f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].off */
extern T1 T1845f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].before */
extern T1 T1845f8(GE_context* ac, T0* C);
/* LX_NFA.build_union */
extern void T1742f7(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.report_unrecognized_rule_error */
extern void T1643f252(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.make */
extern T0* T1747c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_rule */
extern void T1643f251(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.add_nfa_to_all */
extern void T1735f13(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITION.put_nfa */
extern void T1762f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].force_last */
extern void T1764f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].resize */
extern void T1764f13(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].new_capacity */
extern T6 T1764f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].extendible */
extern T1 T1764f8(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.add_nfa_to_non_exclusive */
extern void T1735f15(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.is_empty */
extern T1 T1735f8(GE_context* ac, T0* C);
/* LX_DESCRIPTION.set_variable_trail_context */
extern void T1644f35(GE_context* ac, T0* C, T1 a1);
/* LX_RULE.set_column_count */
extern void T1745f21(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_line_count */
extern void T1745f20(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_trail_count */
extern void T1745f19(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_head_count */
extern void T1745f18(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_trail_context */
extern void T1745f17(GE_context* ac, T0* C, T1 a1);
/* LX_RULE.set_line_nb */
extern void T1745f16(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_pattern */
extern void T1745f15(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.set_accepted_rule */
extern void T1742f14(GE_context* ac, T0* C, T0* a1);
/* LX_NFA_STATE.set_accepted_rule */
extern void T1766f13(GE_context* ac, T0* C, T0* a1);
/* LX_DESCRIPTION.create_equiv_classes */
extern void T1644f34(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.make */
extern T0* T1744c9(GE_context* ac, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.initialize */
extern void T1744f12(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.check_options */
extern void T1643f250(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.report_full_and_variable_trailing_context_error */
extern void T1643f265(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.make */
extern T0* T1753c8(GE_context* ac);
/* LX_WILDCARD_PARSER.report_full_and_reject_error */
extern void T1643f264(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.make */
extern T0* T1752c8(GE_context* ac);
/* LX_WILDCARD_PARSER.report_full_and_meta_equiv_classes_error */
extern void T1643f263(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.make */
extern T0* T1751c8(GE_context* ac);
/* LX_WILDCARD_PARSER.build_equiv_classes */
extern void T1643f249(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].forth */
extern void T1746f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_forth */
extern void T1738f64(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].add_traversing_cursor */
extern void T1738f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].set_next_cursor */
extern void T1746f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].set_position */
extern void T1746f13(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].remove_traversing_cursor */
extern void T1738f65(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].set_after */
extern void T1746f12(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.convert_to_equivalence */
extern void T1737f26(GE_context* ac, T0* C, T0* a1);
/* LX_EQUIVALENCE_CLASSES.equivalence_class */
extern T6 T1744f8(GE_context* ac, T0* C, T6 a1);
/* LX_EQUIVALENCE_CLASSES.is_representative */
extern T1 T1744f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].item */
extern T0* T1746f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_item */
extern T0* T1738f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].after */
extern T1 T1746f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].start */
extern void T1746f10(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_start */
extern void T1738f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_off */
extern T1 T1738f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].off */
extern T1 T1746f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].is_empty */
extern T1 T1738f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].new_cursor */
extern T0* T1738f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].make */
extern T0* T1746c9(GE_context* ac, T0* a1);
/* LX_EQUIVALENCE_CLASSES.build */
extern void T1744f10(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_push_last_value */
extern void T1643f236(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.accept */
extern void T1643f235(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_do_error_action */
extern void T1643f233(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_error */
extern void T1643f248(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.report_eof_expected_error */
extern void T1643f247(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.read_token */
extern void T1643f232(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_execute_action */
extern void T1643f246(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_bad_character_error */
extern void T1643f262(GE_context* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.make */
extern T0* T1750c8(GE_context* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.report_bad_character_class_error */
extern void T1643f261(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.make */
extern T0* T1749c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.start_condition */
extern T6 T1643f185(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.process_escaped_character */
extern void T1643f260(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.text_count */
extern T6 T1643f206(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.report_missing_quote_error */
extern void T1643f259(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.make */
extern T0* T1748c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_character */
extern void T1643f258(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_character_out_of_range_error */
extern void T1643f268(GE_context* ac, T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.make */
extern T0* T1754c8(GE_context* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.text_item */
extern T2 T1643f182(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.less */
extern void T1643f257(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_set_line_column */
extern void T1643f267(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].item */
extern T0* T1738f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].has */
extern T1 T1738f27(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.text */
extern T0* T1643f176(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.set_start_condition */
extern void T1643f256(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_execute_eof_action */
extern void T1643f245(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.terminate */
extern void T1643f255(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.wrap */
extern T1 T1643f149(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_refill_input_buffer */
extern void T1643f244(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_set_content */
extern void T1643f242(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_null_trans_state */
extern T6 T1643f148(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_previous_state */
extern T6 T1643f147(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.fatal_error */
extern void T1643f243(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.std */
extern T0* T1643f173(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.special_integer_ */
extern T0* T1643f129(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_init_value_stacks */
extern void T1643f231(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_clear_all */
extern void T1643f240(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.clear_all */
extern void T1643f253(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.clear_stacks */
extern void T1643f266(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_clear_value_stacks */
extern void T1643f269(GE_context* ac, T0* C);
/* SPECIAL [LX_NFA].keep_head */
extern void T1743f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_NFA].set_count */
extern void T1743f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].keep_head */
extern void T1740f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].set_count */
extern void T1740f9(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.abort */
extern void T1643f234(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.set_input_buffer */
extern void T1643f225(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_load_input_buffer */
extern void T1643f230(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.new_string_buffer */
extern T0* T1643f131(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.make_from_description */
extern T0* T1643c221(GE_context* ac, T0* a1, T0* a2);
/* LX_ACTION_FACTORY.make */
extern T0* T1736c1(GE_context* ac);
/* LX_START_CONDITIONS.make */
extern void T1735f12(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.make */
extern T0* T1735c12(GE_context* ac, T6 a1);
/* LX_START_CONDITIONS.set_internal_cursor */
extern void T1735f16(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.new_cursor */
extern T0* T1735f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION].make */
extern T0* T1825c4(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].make */
extern T0* T1824f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_START_CONDITION].make_empty */
extern T0* T1823c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].default_create */
extern T0* T1824c2(GE_context* ac);
/* LX_WILDCARD_PARSER.make_parser_skeleton */
extern void T1643f224(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_build_parser_tables */
extern void T1643f229(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yycheck_template */
extern unsigned char ge85os37778;
extern T0* ge85ov37778;
extern T0* T1643f160(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yyfixed_array */
extern T0* T1643f211(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yytable_template */
extern unsigned char ge85os37777;
extern T0* ge85ov37777;
extern T0* T1643f158(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yypgoto_template */
extern unsigned char ge85os37776;
extern T0* ge85ov37776;
extern T0* T1643f157(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yypact_template */
extern unsigned char ge85os37775;
extern T0* ge85ov37775;
extern T0* T1643f156(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yydefgoto_template */
extern unsigned char ge85os37774;
extern T0* ge85ov37774;
extern T0* T1643f155(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yydefact_template */
extern unsigned char ge85os37773;
extern T0* ge85ov37773;
extern T0* T1643f154(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytypes2_template */
extern unsigned char ge85os37772;
extern T0* ge85ov37772;
extern T0* T1643f153(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytypes1_template */
extern unsigned char ge85os37771;
extern T0* ge85ov37771;
extern T0* T1643f144(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yyr1_template */
extern unsigned char ge85os37770;
extern T0* ge85ov37770;
extern T0* T1643f142(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template */
extern unsigned char ge85os37767;
extern T0* ge85ov37767;
extern T0* T1643f140(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template_2 */
extern void T1643f271(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yyarray_subcopy */
extern void T1643f275(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* LX_WILDCARD_PARSER.integer_array_ */
extern T0* T1643f220(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template_1 */
extern void T1643f270(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_create_value_stacks */
extern void T1643f228(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].make */
extern T0* T1739f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].make_empty */
extern T0* T1740c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].default_create */
extern T0* T1739c3(GE_context* ac);
/* LX_WILDCARD_PARSER.make_lex_scanner_from_description */
extern void T1643f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].set_key_equality_tester */
extern void T1738f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_map */
extern T0* T1738c40(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_with_equality_testers */
extern void T1738f46(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_sparse_container */
extern void T1738f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].set_internal_cursor */
extern void T1738f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_slots */
extern void T1738f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_clashes */
extern void T1738f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_key_storage */
extern void T1738f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_item_storage */
extern void T1738f58(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.string_equality_tester */
extern T0* T1643f117(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.make_with_buffer */
extern void T1643f227(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_initialize */
extern void T1643f241(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_initialize */
extern void T1643f241p1(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_build_tables */
extern void T1643f254(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_accept_template */
extern unsigned char ge86os37952;
extern T0* ge86ov37952;
extern T0* T1643f198(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_fixed_array */
extern T0* T1643f219(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_meta_template */
extern unsigned char ge86os37951;
extern T0* ge86ov37951;
extern T0* T1643f197(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_ec_template */
extern unsigned char ge86os37948;
extern T0* ge86ov37948;
extern T0* T1643f196(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_ec_template_2 */
extern void T1643f274(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_array_subcopy */
extern void T1643f276(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* LX_WILDCARD_PARSER.yy_ec_template_1 */
extern void T1643f273(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_def_template */
extern unsigned char ge86os37947;
extern T0* ge86ov37947;
extern T0* T1643f195(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_base_template */
extern unsigned char ge86os37946;
extern T0* ge86ov37946;
extern T0* T1643f194(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_chk_template */
extern unsigned char ge86os37945;
extern T0* ge86ov37945;
extern T0* T1643f193(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_nxt_template */
extern unsigned char ge86os37944;
extern T0* ge86ov37944;
extern T0* T1643f192(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.empty_buffer */
extern T0* T1643f119(GE_context* ac, T0* C);
/* LX_DESCRIPTION.set_case_insensitive */
extern void T1644f33(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_full_table */
extern void T1644f32(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_meta_equiv_classes_used */
extern void T1644f31(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_equiv_classes_used */
extern void T1644f30(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.make */
extern T0* T1644c29(GE_context* ac);
/* LX_START_CONDITIONS.make_with_initial */
extern T0* T1735c14(GE_context* ac, T6 a1);
/* LX_START_CONDITIONS.put_first */
extern void T1735f17(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.put */
extern void T1735f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* LX_START_CONDITIONS.move_cursors_right */
extern void T1735f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION].set_position */
extern void T1825f5(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.move_right */
extern void T1735f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].force */
extern void T1824f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_START_CONDITION].fill_with */
extern void T1823f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_START_CONDITION].extend */
extern void T1823f7(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.put_last */
extern void T1735f19(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITION.make */
extern T0* T1762c6(GE_context* ac, T0* a1, T6 a2, T1 a3);
/* DS_ARRAYED_LIST [LX_NFA].make */
extern T0* T1764c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].set_internal_cursor */
extern void T1764f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].new_cursor */
extern T0* T1764f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA].make */
extern T0* T1853c3(GE_context* ac, T0* a1);
/* UT_ERROR_HANDLER.make_null */
extern T0* T32c12(GE_context* ac);
/* UT_ERROR_HANDLER.null_output_stream */
extern T0* T32f6(GE_context* ac, T0* C);
/* LX_DFA_WILDCARD.wipe_out */
extern void T1467f17(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.file_system */
extern T0* T857f9(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.unix_file_system */
extern T0* T857f12(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.windows_file_system */
extern T0* T857f11(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.execution_environment */
extern T0* T857f8(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.operating_system */
extern T0* T857f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].remove */
extern void T136f41(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].move_left */
extern void T136f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_cursors_left */
extern void T136f43(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].remove_last */
extern void T136f42(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].move_last_cursors_after */
extern void T136f45(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].make_from_linear */
extern T0* T136c40(GE_context* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.read_string */
extern void T29f61(GE_context* ac, T0* C, T6 a1);
/* STRING_8.set_internal_hash_code */
extern void T17f69(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_read_to_string */
extern T6 T29f35(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.file_gss */
extern T6 T29f38(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* SPECIAL [CHARACTER_8].item_address */
extern T14 T15f9(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_end_of_file */
extern T1 T29f25(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_feof */
extern T1 T29f31(GE_context* ac, T0* C, T14 a1);
/* ET_EIFFEL_PARSER.build_provider_constraint */
extern void T440f2136(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PARSER.build_provider_constraint */
extern T0* T440f2136ac1(T0* a1, T0* a2);
extern T1 T440f2136ot1(T0* a1);
/* ET_EIFFEL_PARSER.add_universe_full_name */
extern void T440f2139(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gcaaa_error */
extern void T36f229(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaaa */
extern T0* T1550c24(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T36f31(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcaaa_error */
extern void T77f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T77f32(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.directory_exists */
extern T1 T121f28(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.exists */
extern T1 T330f28(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.tmp_directory */
extern unsigned char ge247os12681;
extern T0* ge247ov12681;
extern T0* T121f29(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.directory_exists */
extern T1 T120f31(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_directory */
extern T0* T120f32(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_classes_do_if */
extern void T471f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_ignored_classes_do_if */
extern void T471f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_CLASS].do_if */
extern void T1322f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_non_override_classes_do_if */
extern void T471f86(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_override_classes_do_if */
extern void T471f85(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable DS_CELL [detachable ET_CLASS].put */
extern void T1422f3(GE_context* ac, T0* C, T0* a1);
/* detachable DS_CELL [detachable ET_CLASS].make */
extern T0* T1422c2(GE_context* ac, T0* a1);
/* KL_DIRECTORY.reset */
extern void T330f41(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.tmp_directory */
extern T0* T440f937(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.shared_directory */
extern unsigned char ge1029os25322;
extern T0* ge1029ov25322;
extern T0* T440f944(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.execution_environment */
extern T0* T440f936(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.process_cluster */
extern void T438f140(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster */
extern void T438f176(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T438f176ac1(T0* a1);
/* Creation of agent #2 in feature ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T438f176ac2(T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_clusters */
extern void T438f181(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.build_dependant_constraint */
extern void T438f180(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.build_provider_constraint */
extern void T438f179(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PREPARSER.build_provider_constraint */
extern T0* T438f179ac1(T0* a1, T0* a2);
extern T1 T438f179ot1(T0* a1);
/* ET_EIFFEL_PREPARSER.add_universe_full_name */
extern void T438f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.preparse_file */
extern void T438f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.reset */
extern void T438f184(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T438f184p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T438f184p0(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T438f184p2(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.current_position */
extern T0* T438f59(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.read_token */
extern void T438f183(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_action */
extern void T438f189(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.more */
extern void T438f195(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.is_verbatim_string_closer */
extern T1 T438f108(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.text_item */
extern T2 T438f131(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.report_syntax_error */
extern void T438f190(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.set_start_condition */
extern void T438f193(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.text_substring */
extern T0* T438f105(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.set_syntax_error */
extern void T438f192(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.text_count */
extern T6 T438f103(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_reference_keyword */
extern T1 T438f102(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_note_keyword */
extern T1 T438f101(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_detachable_keyword */
extern T1 T438f100(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_attribute_keyword */
extern T1 T438f99(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.ast_factory */
extern T0* T438f98(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_attached_keyword */
extern T1 T438f94(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_line_column */
extern void T438f194(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_eof_action */
extern void T438f188(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.terminate */
extern void T438f191(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.wrap */
extern T1 T438f86(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_refill_input_buffer */
extern void T438f187(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_content */
extern void T438f139(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_null_trans_state */
extern T6 T438f85(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_previous_state */
extern T6 T438f84(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.fatal_error */
extern void T438f186(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.special_integer_ */
extern T0* T438f60(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_load_input_buffer */
extern void T438f137(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.tmp_file */
extern T0* T438f56(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.shared_file */
extern T0* T438f125(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.preparse_class */
extern void T438f182(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PREPARSER.current_universe */
extern T0* T438f54(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.tmp_directory */
extern T0* T438f53(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.shared_directory */
extern unsigned char ge1031os23134;
extern T0* ge1031ov23134;
extern T0* T438f123(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.file_system */
extern T0* T438f52(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.unix_file_system */
extern T0* T438f122(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.windows_file_system */
extern T0* T438f121(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.operating_system */
extern T0* T438f120(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.execution_environment */
extern T0* T438f51(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_preparsing_status */
extern void T77f236(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_preparsing_status */
extern void T36f235(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.error_handler */
extern T0* T438f97(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.current_system */
extern T0* T438f96(GE_context* ac, T0* C);
/* ET_AST_NULL_PROCESSOR.process_cluster */
extern void T430f3(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_retry_instruction */
extern void T1306f26(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_retry_instruction */
extern void T370f356(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_retry_instruction_validity */
extern void T370f373(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vxrt0a_error */
extern void T36f499(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vxrt0a */
extern T0* T532c1029(GE_context* ac, T0* a1, T0* a2);
/* ET_RETRY_INSTRUCTION.position */
extern T0* T944f9(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T36f163(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vxrt0a_error */
extern void T77f500(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T77f164(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_retry_instruction */
extern void T79f236(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_retry_instruction_validity */
extern void T79f258(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_retry_instruction */
extern void T74f1228(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_retry_instruction */
extern void T74f1244(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_across_instruction */
extern void T1306f27(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_across_instruction */
extern void T370f357(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_instruction_validity */
extern void T370f374(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_component_no_from_validity */
extern void T370f388(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_instruction */
extern void T79f237(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_instruction_validity */
extern void T79f259(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_component_no_from_validity */
extern void T79f291(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_across_instruction */
extern void T74f1229(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_instruction */
extern void T74f1245(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_check_instruction */
extern void T1306f28(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.assertion */
extern T0* T995f8(GE_context* ac, T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.item */
extern T0* T995f9(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_check_instruction */
extern void T370f358(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_check_instruction_validity */
extern void T370f375(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.set_code_unreachable */
extern void T386f15(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_check_instruction */
extern void T79f238(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T79f260(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T79f260p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_check_instruction */
extern void T74f1230(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_check_instruction */
extern void T74f1246(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_debug_instruction */
extern void T1306f29(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_debug_instruction */
extern void T370f359(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_debug_instruction_validity */
extern void T370f376(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_debug_instruction */
extern void T79f239(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T79f261(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T79f261p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_debug_instruction */
extern void T74f1231(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_debug_instruction */
extern void T74f1247(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_if_instruction */
extern void T1306f30(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part_list */
extern void T1306f93(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART.process */
extern void T1053f5(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part */
extern void T1306f107(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.item */
extern T0* T1056f4(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_if_instruction */
extern void T370f360(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_instruction_validity */
extern void T370f377(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_instruction */
extern void T79f240(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_instruction_validity */
extern void T79f262(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_if_instruction */
extern void T74f1232(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_instruction */
extern void T74f1248(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inspect_instruction */
extern void T1306f31(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part_list */
extern void T1306f94(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part */
extern void T1306f97(GE_context* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.item */
extern T0* T1191f4(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_inspect_instruction */
extern void T370f361(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_instruction_validity */
extern void T370f378(GE_context* ac, T0* C, T0* a1);
extern T1 T370f378ot1(T0* a1, T0** a2);
extern T1 T370f378ot2(T0* a1, T0** a2);
extern T1 T370f378ot3(T0* a1, T0** a2);
extern T1 T370f378ot4(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vomb2a_error */
extern void T36f502(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vomb2a */
extern T0* T532c1032(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T36f165(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vomb2a_error */
extern void T77f503(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T77f166(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2b_error */
extern void T36f501(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vomb2b */
extern T0* T532c1031(GE_context* ac, T0* a1, T0* a2, T0* a3);
extern T1 T532f1031ot1(T0* a1, T0** a2);
extern T1 T532f1031ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vomb2b_error */
extern void T77f502(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.choice_constant */
extern T0* T370f53(GE_context* ac, T0* C, T0* a1);
extern T1 T370f53ot1(T0* a1, T0** a2);
extern T1 T370f53ot2(T0* a1, T0** a2);
extern T1 T370f53ot3(T0* a1, T0** a2);
extern T1 T370f53ot4(T0* a1, T0** a2);
extern T1 T370f53ot5(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.integer_choice_constant */
extern unsigned char ge928os10710;
extern T0* ge928ov10710;
extern T0* T370f57(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.character_choice_constant */
extern unsigned char ge928os10709;
extern T0* ge928ov10709;
extern T0* T370f56(GE_context* ac, T0* C);
/* ET_CHOICE_LIST.choice */
extern T0* T1007f6(GE_context* ac, T0* C, T6 a1);
/* ET_CHOICE_LIST.item */
extern T0* T1007f7(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_vomb1a_error */
extern void T36f500(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vomb1a */
extern T0* T532c1030(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T36f164(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vomb1a_error */
extern void T77f501(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T77f165(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_instruction */
extern void T79f241(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_instruction_validity */
extern void T79f263(GE_context* ac, T0* C, T0* a1);
extern T1 T79f263ot1(T0* a1, T0** a2);
extern T1 T79f263ot2(T0* a1, T0** a2);
extern T1 T79f263ot3(T0* a1, T0** a2);
extern T1 T79f263ot4(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.choice_constant */
extern T0* T79f104(GE_context* ac, T0* C, T0* a1);
extern T1 T79f104ot1(T0* a1, T0** a2);
extern T1 T79f104ot2(T0* a1, T0** a2);
extern T1 T79f104ot3(T0* a1, T0** a2);
extern T1 T79f104ot4(T0* a1, T0** a2);
extern T1 T79f104ot5(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.integer_choice_constant */
extern T0* T79f117(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.character_choice_constant */
extern T0* T79f116(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_inspect_instruction */
extern void T74f1233(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_instruction */
extern void T74f1249(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1249ot1(T0* a1, T0** a2);
extern T1 T74f1249ot2(T0* a1, T0** a2);
extern T1 T74f1249ot3(T0* a1, T0** a2);
extern T1 T74f1249ot4(T0* a1, T0** a2);
extern T1 T74f1249ot5(T0* a1, T0** a2);
extern T1 T74f1249ot6(T0* a1, T0** a2);
extern T1 T74f1249ot7(T0* a1, T0** a2);
extern T1 T74f1249ot8(T0* a1, T0** a2);
extern T1 T74f1249ot9(T0* a1, T0** a2);
extern T1 T74f1249ot10(T0* a1, T0** a2);
extern T1 T74f1249ot11(T0* a1, T0** a2);
extern T1 T74f1249ot12(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_assigner_instruction */
extern void T1306f32(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assigner_instruction */
extern void T370f362(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assigner_instruction_validity */
extern void T370f379(GE_context* ac, T0* C, T0* a1);
extern T1 T370f379ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_tuple_label_setter */
extern void T370f390(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vbac1a_error */
extern void T36f504(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vbac1a */
extern T0* T532c1034(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T36f167(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac1a_error */
extern void T77f505(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T77f168(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_source */
extern void T1250f19(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac2a_error */
extern void T36f503(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vbac2a */
extern T0* T532c1033(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T36f166(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac2a_error */
extern void T77f504(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T77f167(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_name */
extern void T1250f18(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expressions_validity */
extern void T370f389(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assigner_instruction */
extern void T79f242(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assigner_instruction_validity */
extern void T79f264(GE_context* ac, T0* C, T0* a1);
extern T1 T79f264ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_setter */
extern void T79f296(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expressions_validity */
extern void T79f294(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_assigner_instruction */
extern void T74f1234(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assigner_instruction */
extern void T74f1250(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment */
extern void T1306f33(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment */
extern void T370f363(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_validity */
extern void T370f380(GE_context* ac, T0* C, T0* a1);
extern T1 T370f380ot1(T0* a1);
extern T1 T370f380ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_assignment */
extern void T370f392(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_name */
extern void T386f17(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_attribute */
extern void T386f23(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_formal_argument */
extern void T386f22(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_local_variable */
extern void T386f21(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_result */
extern void T386f16(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vjar0a_error */
extern void T36f505(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0a */
extern T0* T532c1035(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vjar_error */
extern T1 T36f168(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjar0a_error */
extern void T77f506(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vjar_error */
extern T1 T77f169(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT.set_source */
extern void T1251f8(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_writable_validity */
extern void T370f391(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T370f391ot1(T0* a1, T0** a2);
extern T1 T370f391ot2(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_veen0a_error */
extern void T36f512(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0a */
extern T0* T532c1042(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen_error */
extern T1 T36f171(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen0a_error */
extern void T77f513(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen_error */
extern T1 T77f172(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen0b_error */
extern void T36f511(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0b */
extern T0* T532c1041(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen0b_error */
extern void T77f512(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0b_error */
extern void T36f510(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0b */
extern T0* T532c1040(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T36f170(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjaw0b_error */
extern void T77f511(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T77f171(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjaw0c_error */
extern void T36f509(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0c */
extern T0* T532c1039(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0c_error */
extern void T77f510(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_attribute_assignment_target */
extern void T370f400(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vjaw0a_error */
extern void T36f508(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0a */
extern T0* T532c1038(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0a_error */
extern void T77f509(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_assignment_target */
extern void T370f399(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result_assignment_target */
extern void T370f398(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment */
extern void T79f243(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_validity */
extern void T79f265(GE_context* ac, T0* C, T0* a1);
extern T1 T79f265ot1(T0* a1);
extern T1 T79f265ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment */
extern void T79f299(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_dynamic_types */
extern void T79f382(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_writable_validity */
extern void T79f298(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T79f298ot1(T0* a1, T0** a2);
extern T1 T79f298ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_assignment_target */
extern void T79f381(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_assignment_target */
extern void T79f380(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_assignment_target */
extern void T79f379(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_assignment */
extern void T74f1235(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment */
extern void T74f1251(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_once */
extern T1 T310f45(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once */
extern T1 T248f43(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_result */
extern T1 T182f95(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_assignment_attempt */
extern void T1306f34(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment_attempt */
extern void T370f364(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_attempt_validity */
extern void T370f381(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment_attempt */
extern void T370f393(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjrv0a_error */
extern void T36f506(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vjrv0a */
extern T0* T532c1036(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T36f169(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjrv0a_error */
extern void T77f507(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T77f170(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference */
extern T1 T380f51(GE_context* ac, T0* C);
/* UT_VERSION.is_greater_equal */
extern T1 T78f6(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_5_7_0 */
extern unsigned char ge191os1989;
extern T0* ge191ov1989;
extern T0* T370f54(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment_attempt */
extern void T79f244(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_attempt_validity */
extern void T79f266(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment_attempt */
extern void T79f300(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_attempt_dynamic_types */
extern void T79f383(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_5_7_0 */
extern T0* T79f108(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_assignment_attempt */
extern void T74f1236(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment_attempt */
extern void T74f1252(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_instruction */
extern void T1306f35(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_loop_instruction */
extern void T370f365(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_instruction_validity */
extern void T370f382(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_loop_instruction */
extern void T79f245(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_instruction_validity */
extern void T79f267(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_loop_instruction */
extern void T74f1237(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_loop_instruction */
extern void T74f1253(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bang_instruction */
extern void T1306f36(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bang_instruction */
extern void T370f366(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bang_instruction_validity */
extern void T370f383(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_instruction_validity */
extern void T370f394(GE_context* ac, T0* C, T0* a1);
extern T1 T370f394ot1(T0* a1, T0** a2);
extern T1 T370f394ot2(T0* a1, T0** a2);
extern T1 T370f394ot3(T0* a1, T0** a2);
extern T1 T370f394ot4(T0* a1, T0** a2);
extern T1 T370f394ot5(T0* a1);
extern T1 T370f394ot6(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_creation_instruction */
extern void T370f401(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcc6e_error */
extern void T36f518(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6e */
extern T0* T532c1048(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc6e_error */
extern void T77f519(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc8b_error */
extern void T36f517(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8b */
extern T0* T532c1047(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vgcc8b_error */
extern void T77f518(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CREATE_INSTRUCTION.last_position */
extern T0* T1256f7(GE_context* ac, T0* C);
/* ET_CREATE_INSTRUCTION.last_leaf */
extern T0* T1256f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.last_leaf */
extern T0* T327f4(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T287f11(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.last_position */
extern T0* T1255f7(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.last_leaf */
extern T0* T1255f9(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vgcc1b_error */
extern void T36f516(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc1b */
extern T0* T532c1046(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.position */
extern T0* T1256f10(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.position */
extern T0* T1255f10(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc1b_error */
extern void T77f517(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc5b_error */
extern void T36f515(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5b */
extern T0* T532c1045(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc5b_error */
extern void T77f516(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.is_type_valid */
extern T1 T370f55(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.null_error_handler */
extern T0* T370f58(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vgcc3a_error */
extern void T36f514(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc3a */
extern T0* T532c1044(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T36f172(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc3a_error */
extern void T77f515(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T77f173(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc6d_error */
extern void T36f513(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6d */
extern T0* T532c1043(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc6d_error */
extern void T77f514(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bang_instruction */
extern void T79f246(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bang_instruction_validity */
extern void T79f268(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_instruction_validity */
extern void T79f301(GE_context* ac, T0* C, T0* a1);
extern T1 T79f301ot1(T0* a1, T0** a2);
extern T1 T79f301ot2(T0* a1, T0** a2);
extern T1 T79f301ot3(T0* a1, T0** a2);
extern T1 T79f301ot4(T0* a1, T0** a2);
extern T1 T79f301ot5(T0* a1);
extern T1 T79f301ot6(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_instruction */
extern void T79f386(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_creation_dynamic_type */
extern void T79f447(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATE_INSTRUCTION.arguments */
extern T0* T1256f8(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.arguments */
extern T0* T1255f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.is_type_valid */
extern T1 T79f112(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.null_error_handler */
extern T0* T79f118(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_bang_instruction */
extern void T74f1238(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bang_instruction */
extern void T74f1254(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_instruction */
extern void T74f1260(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_instruction */
extern void T1306f37(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_instruction */
extern void T370f367(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_instruction_validity */
extern void T370f384(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_instruction */
extern void T79f247(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_instruction_validity */
extern void T79f269(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_create_instruction */
extern void T74f1239(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_instruction */
extern void T74f1255(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_instruction */
extern void T1306f38(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_instruction */
extern void T370f368(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_instruction_validity */
extern void T370f385(GE_context* ac, T0* C, T0* a1);
extern T1 T370f385ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_precursor_procedure_instruction_validity */
extern void T370f395(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [ET_PROCEDURE].force_last */
extern void T882f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].slots_put */
extern void T882f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].clashes_put */
extern void T882f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].slots_item */
extern T6 T882f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].hash_position */
extern T6 T882f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].resize */
extern void T882f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].clashes_resize */
extern void T882f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].special_integer_ */
extern T0* T882f32(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_resize */
extern void T882f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_resize */
extern void T882f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_item */
extern T0* T882f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].slots_resize */
extern void T882f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_capacity */
extern T6 T882f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_put */
extern void T882f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].search_position */
extern void T882f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].key_equality_tester */
extern T0* T882f30(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_precursor_instruction */
extern void T370f402(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr1a_error */
extern void T36f507(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1a */
extern T0* T532c1037(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdpr1a_error */
extern void T77f508(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_instruction */
extern void T79f248(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_instruction_validity */
extern void T79f270(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_procedure_instruction_validity */
extern void T79f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_instruction */
extern void T79f387(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_precursor_instruction */
extern void T74f1240(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_instruction */
extern void T74f1256(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_instruction */
extern void T1306f39(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_instruction */
extern void T370f369(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_instruction_validity */
extern void T370f386(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_procedure_call_instruction_validity */
extern void T370f397(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_static_call_instruction */
extern void T370f403(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_dotnet_procedure_call_instruction_validity */
extern void T370f396(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_instruction */
extern void T79f249(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_instruction_validity */
extern void T79f271(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_procedure_call_instruction_validity */
extern void T79f305(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_instruction */
extern void T79f391(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_procedure_call_instruction_validity */
extern void T79f304(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_instruction */
extern void T74f1241(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_instruction */
extern void T74f1257(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unqualified_call_instruction */
extern void T1306f99(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unqualified_call_instruction */
extern void T370f370(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_instruction */
extern void T79f250(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_unqualified_call_instruction */
extern void T74f1242(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_instruction */
extern void T74f1258(GE_context* ac, T0* C, T0* a1);
extern T1 T74f1258ot1(T0* a1, T0** a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T1428f4(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_infix_cast_expression */
extern void T1306f101(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_infix_cast_expression */
extern void T387f58(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_cast_expression */
extern void T383f64(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_cast_expression */
extern void T370f371(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_cast_expression_validity */
extern void T370f387(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_cast_expression */
extern void T79f465(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_cast_expression_validity */
extern void T79f497(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_cast_expression */
extern void T74f1243(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_cast_expression */
extern void T74f1259(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_builtin_expression */
extern void T1306f108(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T387f59(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T383f65(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_builtin_expression */
extern void T370f404(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_builtin_expression_validity */
extern void T370f407(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_builtin_expression */
extern void T79f537(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_builtin_expression_validity */
extern void T79f540(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_builtin_expression */
extern void T74f1261(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_builtin_expression */
extern void T74f1264(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_from_expression */
extern void T1306f109(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_from_expression */
extern void T387f60(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_from_expression */
extern void T383f66(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_from_expression */
extern void T370f405(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_from_expression_validity */
extern void T370f408(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_from_expression */
extern void T79f538(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_from_expression_validity */
extern void T79f541(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_from_expression */
extern void T74f1262(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_from_expression */
extern void T74f1265(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_to_expression */
extern void T1306f110(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_to_expression */
extern void T387f61(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_to_expression */
extern void T383f67(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_to_expression */
extern void T370f406(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_to_expression_validity */
extern void T370f409(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_to_expression */
extern void T79f539(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_to_expression_validity */
extern void T79f542(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_to_expression */
extern void T74f1263(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_to_expression */
extern void T74f1266(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.reset_validity_checked */
extern void T1234f80(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_validity_checked */
extern void T1233f82(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_validity_checked */
extern void T1232f81(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_validity_checked */
extern void T366f77(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_validity_checked */
extern void T365f79(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_validity_checked */
extern void T363f79(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_validity_checked */
extern void T331f80(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_validity_checked */
extern void T260f85(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_frozen_keyword */
extern void T1234f76(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_frozen_keyword */
extern void T1233f78(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_frozen_keyword */
extern void T1232f77(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_frozen_keyword */
extern void T366f73(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_frozen_keyword */
extern void T365f75(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_frozen_keyword */
extern void T363f75(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_frozen_keyword */
extern void T331f76(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_frozen_keyword */
extern void T260f81(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_object_tests */
extern void T1234f73(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_object_tests */
extern void T1233f75(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_object_tests */
extern void T1232f74(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_object_tests */
extern void T366f70(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_object_tests */
extern void T365f72(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_object_tests */
extern void T363f72(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_object_tests */
extern void T331f73(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_object_tests */
extern void T260f78(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_across_components */
extern void T1234f74(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_across_components */
extern void T1233f76(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_across_components */
extern void T1232f75(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_across_components */
extern void T366f71(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_across_components */
extern void T365f73(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_across_components */
extern void T363f73(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_across_components */
extern void T331f74(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_across_components */
extern void T260f79(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.reset */
extern void T1234f81(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T1234f81p1(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T1233f83(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T1233f83p1(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset */
extern void T1232f82(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset */
extern void T1232f82p1(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset */
extern void T366f78(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset */
extern void T366f78p1(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T365f80(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T365f80p1(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T363f80(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T363f80p1(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset */
extern void T331f81(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset */
extern void T331f81p1(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T260f86(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T260f86p1(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_features_flattened */
extern void T1234f82(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1234f98(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset_qualified_anchored_types */
extern void T262f15(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T1233f84(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1233f103(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T1232f83(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1232f101(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_after_features_flattened */
extern void T366f79(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T366f92(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_features_flattened */
extern void T365f81(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T365f96(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_features_flattened */
extern void T363f81(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T363f95(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_features_flattened */
extern void T331f82(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T331f102(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_features_flattened */
extern void T260f87(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_signature_qualified_anchored_types */
extern void T260f107(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_interface_checked */
extern void T1234f83(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T1233f85(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T1233f85p1(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_interface_checked */
extern void T1232f84(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_interface_checked */
extern void T1232f84p1(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_after_interface_checked */
extern void T366f80(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_interface_checked */
extern void T365f82(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_interface_checked */
extern void T363f82(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T331f83(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T331f83p1(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_interface_checked */
extern void T260f88(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_validity_checked */
extern void T1237f84(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_validity_checked */
extern void T1236f81(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_validity_checked */
extern void T534f79(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_validity_checked */
extern void T528f80(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_frozen_keyword */
extern void T1237f80(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_frozen_keyword */
extern void T1236f77(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_frozen_keyword */
extern void T534f78(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_frozen_keyword */
extern void T528f79(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_object_tests */
extern void T1237f77(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_object_tests */
extern void T1236f74(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_object_tests */
extern void T534f75(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_object_tests */
extern void T528f76(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_across_components */
extern void T1237f78(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_across_components */
extern void T1236f75(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_across_components */
extern void T534f76(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_across_components */
extern void T528f77(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset */
extern void T1237f85(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset */
extern void T1236f82(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset */
extern void T534f80(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset */
extern void T528f81(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_features_flattened */
extern void T1237f86(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T1237f102(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T1236f83(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T1236f101(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_features_flattened */
extern void T534f81(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T534f96(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T528f82(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T528f99(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_interface_checked */
extern void T1237f87(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T1236f84(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T1236f84p1(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_interface_checked */
extern void T534f82(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T528f83(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T528f83p1(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.reset */
extern void T1791f84(GE_context* ac, T0* C);
/* ET_INFIX_NAME.reset */
extern void T1240f102(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.reset */
extern void T1239f70(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.reset */
extern void T1238f88(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.reset */
extern void T833f70(GE_context* ac, T0* C);
/* ET_IDENTIFIER.reset */
extern void T182f122(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.set_seed */
extern void T1791f82(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_NAME.set_seed */
extern void T1240f103(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_FREE_NAME.set_seed */
extern void T1239f71(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_NAME.set_seed */
extern void T1238f89(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_FREE_NAME.set_seed */
extern void T833f71(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_seed */
extern void T182f108(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_id */
extern void T335f86(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_id */
extern void T334f86(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_id */
extern void T323f85(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_id */
extern void T306f85(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.set_id */
extern void T239f82(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_hash_code */
extern void T335f75(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_hash_code */
extern void T334f75(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_hash_code */
extern void T323f74(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_hash_code */
extern void T306f74(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.set_hash_code */
extern void T239f73(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_next_type */
extern void T335f76(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_next_type */
extern void T334f76(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_next_type */
extern void T323f75(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_next_type */
extern void T306f75(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_next_type */
extern void T239f74(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_alive */
extern void T335f77(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_alive */
extern void T334f77(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_alive */
extern void T323f76(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_alive */
extern void T306f76(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.set_alive */
extern void T239f72(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_meta_type */
extern void T335f78(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_meta_type */
extern void T334f78(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_meta_type */
extern void T323f77(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_meta_type */
extern void T306f77(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_meta_type */
extern void T239f75(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.use_all_attributes */
extern void T335f87(GE_context* ac, T0* C, T0* a1);
extern T1 T335f87ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_FUNCTION_TYPE.use_all_attributes */
extern void T334f87(GE_context* ac, T0* C, T0* a1);
extern T1 T334f87ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_SPECIAL_TYPE.use_all_attributes */
extern void T323f86(GE_context* ac, T0* C, T0* a1);
extern T1 T323f86ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_TUPLE_TYPE.use_all_attributes */
extern void T306f86(GE_context* ac, T0* C, T0* a1);
extern T1 T306f86ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_TYPE.use_all_attributes */
extern void T239f83(GE_context* ac, T0* C, T0* a1);
extern T1 T239f83ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_static */
extern void T335f88(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_static */
extern void T334f88(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_static */
extern void T323f87(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_static */
extern void T306f87(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_TYPE.set_static */
extern void T239f84(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_equality_expression */
extern void T335f90(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.set_next */
extern void T1858f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_equality_expression */
extern void T334f90(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_equality_expression */
extern void T323f89(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_equality_expression */
extern void T306f89(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_equality_expression */
extern void T239f86(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_object_equality_expression */
extern void T335f91(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.set_next */
extern void T1859f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_object_equality_expression */
extern void T334f91(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_object_equality_expression */
extern void T323f90(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_object_equality_expression */
extern void T306f90(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_object_equality_expression */
extern void T239f87(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_target */
extern void T335f83(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_target */
extern void T334f83(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_target */
extern void T323f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_target */
extern void T306f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_target */
extern void T239f79(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure_call */
extern void T335f89(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure_call */
extern void T334f89(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure_call */
extern void T323f88(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure_call */
extern void T306f88(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_procedure_call */
extern void T239f85(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_query_call */
extern void T335f80(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_query_call */
extern void T334f80(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_query_call */
extern void T323f79(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_query_call */
extern void T306f79(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_query_call */
extern void T239f78(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.export_classes */
extern void T230f188(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].key */
extern T0* T636f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_key */
extern T0* T233f35(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.actual_intrinsic_class */
extern T0* T471f32(GE_context* ac, T0* C);
/* ET_CLASS.actual_intrinsic_class */
extern T0* T82f149(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.export_classes */
extern void T217f174(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.export_classes */
extern void T200f21(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start */
extern void T560f2(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start */
extern void T557f27(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start */
extern void T160f14(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T159f9(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T159f9p1(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.on_comment */
extern void T560f4(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_comment */
extern void T557f29(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_comment */
extern void T160f16(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.handle_position */
extern void T160f24(GE_context* ac, T0* C, T0* a1);
/* XM_POSITION_TABLE.put */
extern void T156f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].put_last */
extern void T844f9(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].put_right */
extern void T1588f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T1588c3(GE_context* ac, T0* a1);
/* DS_PAIR [XM_POSITION, XM_NODE].make */
extern T0* T845c3(GE_context* ac, T0* a1, T0* a2);
/* XM_COMMENT.make_last_in_document */
extern T0* T1414c4(GE_context* ac, T0* a1, T0* a2);
/* XM_COMMENT.make_last */
extern T0* T1414c3(GE_context* ac, T0* a1, T0* a2);
/* XM_ELEMENT.force_last */
extern void T155f27(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].force_last */
extern void T839f13(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].force_last */
extern void T839f13p1(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_ELEMENT_NODE].make */
extern T0* T1569c3(GE_context* ac, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].before_addition */
extern void T839f18(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.before_addition */
extern void T155f29(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.last */
extern T0* T155f19(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].last */
extern T0* T839f8(GE_context* ac, T0* C);
/* XM_ELEMENT.is_empty */
extern T1 T155f18(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].is_empty */
extern T1 T839f7(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T159f11(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T159f11p1(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_processing_instruction */
extern void T560f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.on_processing_instruction */
extern void T557f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.on_processing_instruction */
extern void T160f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_PROCESSING_INSTRUCTION.make_last_in_document */
extern T0* T1415c5(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_PROCESSING_INSTRUCTION.make_last */
extern T0* T1415c4(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T159f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T159f12p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_NULL.on_content */
extern void T560f6(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_content */
extern void T557f31(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_content */
extern void T160f18(GE_context* ac, T0* C, T0* a1);
/* XM_CHARACTER_DATA.make_last */
extern T0* T1416c3(GE_context* ac, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T159f13(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T159f13p1(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start_tag */
extern void T560f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_start_tag */
extern void T557f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.push */
extern void T1342f12(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].force_last */
extern void T1542f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].put_right */
extern void T1689f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].attach_left */
extern void T1689f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1689c4(GE_context* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.new_string_string_table */
extern T0* T1342f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_equality_tester */
extern void T54f103(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.string_equality_tester */
extern T0* T1342f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map_default */
extern T0* T54c102(GE_context* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].default_capacity */
extern T6 T54f49(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag */
extern void T160f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_root */
extern T0* T155c26(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_DOCUMENT.set_root_element */
extern void T154f15(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.remove_previous_root_element */
extern void T154f16(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].go_after */
extern void T1413f14(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_go_after */
extern void T837f28(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.make_last */
extern T0* T155c25(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.new_namespace */
extern T0* T160f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].force_last */
extern void T561f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_put */
extern void T561f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].clashes_put */
extern void T561f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].slots_item */
extern T6 T561f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].hash_position */
extern T6 T561f20(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE.hash_code */
extern T6 T521f6(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].resize */
extern void T561f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_resize */
extern void T561f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].special_integer_ */
extern T0* T561f29(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_resize */
extern void T561f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_resize */
extern void T561f46(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].aliased_resized_area */
extern T0* T1347f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_NAMESPACE].aliased_resized_area */
extern T0* T1348f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_item */
extern T0* T561f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_item */
extern T0* T561f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_item */
extern T6 T561f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_resize */
extern void T561f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_capacity */
extern T6 T561f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_put */
extern void T561f41(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].force */
extern void T1347f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].fill_with */
extern void T1348f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].extend */
extern void T1348f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].search_position */
extern void T561f40(GE_context* ac, T0* C, T0* a1);
/* detachable KL_EQUALITY_TESTER [XM_NAMESPACE].test */
extern T1 T1345f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].key_equality_tester */
extern T0* T561f25(GE_context* ac, T0* C);
/* XM_NAMESPACE.same_prefix */
extern T1 T521f5(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].item */
extern T0* T561f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].has */
extern T1 T561f30(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T159f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T159f14p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_end_tag */
extern void T560f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T557f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.pop */
extern void T1342f11(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_last */
extern void T1542f9(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].set_last_cell */
extern void T1542f14(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].forget_right */
extern void T1689f7(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_last_cursors_after */
extern void T1542f13(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_next_cursor */
extern void T1543f13(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_after */
extern void T1543f12(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].wipe_out */
extern void T1542f12(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_all_cursors_after */
extern void T1542f15(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve_default */
extern T0* T1342f3(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_pseudo_prefix */
extern unsigned char ge1222os37449;
extern T0* ge1222ov37449;
extern T0* T1342f7(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T557f33p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve */
extern T0* T1342f2(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].back */
extern void T1543f11(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_back */
extern void T1542f18(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].add_traversing_cursor */
extern void T1542f19(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_traversing_cursor */
extern void T1542f20(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set */
extern void T1543f14(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].go_before */
extern void T1543f10(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_go_before */
extern void T1542f17(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_before */
extern void T1543f15(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_off */
extern T1 T1542f7(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].off */
extern T1 T1543f7(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].item */
extern T0* T1543f6(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].finish */
extern void T1543f9(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_finish */
extern void T1542f16(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_namespace */
extern unsigned char ge1222os37450;
extern T0* ge1222ov37450;
extern T0* T1342f6(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.has_prefix */
extern T1 T557f10(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_end_tag */
extern void T160f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.parent_element */
extern T0* T155f16(GE_context* ac, T0* C);
extern T1 T155f16ot1(T0* a1, T0** a2);
/* XM_ELEMENT.is_root_node */
extern T1 T155f17(GE_context* ac, T0* C);
/* XM_DOCUMENT.is_root_node */
extern T1 T154f8(GE_context* ac, T0* C);
/* XM_DOCUMENT.parent */
extern T0* T154f9(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T159f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T159f16p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_attribute */
extern void T560f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER.on_attribute */
extern void T557f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add */
extern void T1342f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_new */
extern void T54f104(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].last */
extern T0* T1542f5(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.shallow_has */
extern T1 T1342f4(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.attributes_force */
extern void T557f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_LINKED_QUEUE [STRING_8].force */
extern void T1344f7(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add_default */
extern void T1342f13(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.is_xmlns */
extern T1 T557f9(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.same_string */
extern T1 T557f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.string_equality_tester */
extern T0* T557f25(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns */
extern unsigned char ge1189os22545;
extern T0* ge1189ov22545;
extern T0* T557f21(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_attribute */
extern void T160f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_ATTRIBUTE.make_last */
extern T0* T406c5(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T159f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T159f18p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_CALLBACKS_NULL.on_finish */
extern void T560f3(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_finish */
extern void T557f28(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_finish */
extern void T160f15(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T159f10(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T159f10p1(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.on_start_tag_finish */
extern void T560f7(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T557f32(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T557f32p1(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.string_ */
extern T0* T557f14(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_delayed_attributes */
extern void T557f39(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_remove */
extern void T557f43(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].remove */
extern void T1344f8(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].wipe_out */
extern void T1344f9(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.unprefixed_attribute_namespace */
extern T0* T557f19(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.default_namespace */
extern unsigned char ge1189os22544;
extern T0* ge1189ov22544;
extern T0* T557f24(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns_namespace */
extern unsigned char ge1189os22552;
extern T0* ge1189ov22552;
extern T0* T557f18(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xml_prefix_namespace */
extern unsigned char ge1189os22551;
extern T0* ge1189ov22551;
extern T0* T557f17(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.is_xml */
extern T1 T557f16(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.xml_prefix */
extern unsigned char ge1189os22546;
extern T0* ge1189ov22546;
extern T0* T557f23(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].item */
extern T0* T1344f5(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_is_empty */
extern T1 T557f12(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].is_empty */
extern T1 T1344f4(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.has */
extern T1 T1342f5(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag_finish */
extern void T160f20(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T159f15(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T159f15p1(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.on_error */
extern void T560f11(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_error */
extern void T557f36(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_error */
extern void T160f22(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T159f17(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T159f17p1(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_xml_declaration */
extern void T560f12(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.on_xml_declaration */
extern void T557f44(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_xml_declaration */
extern void T160f25(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_STOP_ON_ERROR_FILTER.on_xml_declaration */
extern void T159f19(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.set_next */
extern void T557f41(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.set_next */
extern void T160f13(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.set_next */
extern void T159f8(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_line */
extern void T305f32(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.put_line */
extern void T270f6(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_line */
extern void T268f5(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T305f38(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T305f38p1(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T270f10(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T270f10p1(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T268f6(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T268f6p1(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_string */
extern void T305f30(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_put_string */
extern void T305f42(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.file_ps */
extern void T305f49(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_OUTPUT_STREAM.put_string */
extern void T270f8(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.string_ */
extern T0* T270f3(GE_context* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_string */
extern void T268f9(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_new_line */
extern void T305f33(GE_context* ac, T0* C);
/* KL_STRING_OUTPUT_STREAM.put_new_line */
extern void T270f5(GE_context* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_new_line */
extern void T268f4(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.put_character */
extern void T305f31(GE_context* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.old_put_character */
extern void T305f43(GE_context* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.file_pc */
extern void T305f50(GE_context* ac, T0* C, T14 a1, T2 a2);
/* KL_STRING_OUTPUT_STREAM.put_character */
extern void T270f7(GE_context* ac, T0* C, T2 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_character */
extern void T268f7(GE_context* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.put_integer */
extern void T305f37(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.put_integer_64 */
extern void T305f46(GE_context* ac, T0* C, T7 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer */
extern void T270f9(GE_context* ac, T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer */
extern void T268f8(GE_context* ac, T0* C, T6 a1);
/* AP_DISPLAY_HELP_FLAG.reset */
extern void T50f40(GE_context* ac, T0* C);
/* AP_STRING_OPTION.reset */
extern void T46f27(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.reset */
extern void T45f27(GE_context* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].make */
extern T0* T151c7(GE_context* ac);
/* DS_LINKED_LIST [INTEGER_32].set_internal_cursor */
extern void T151f8(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [INTEGER_32].new_cursor */
extern T0* T151f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [INTEGER_32].make */
extern T0* T556c3(GE_context* ac, T0* a1);
/* AP_BOOLEAN_OPTION.reset */
extern void T44f30(GE_context* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].make */
extern T0* T148c7(GE_context* ac);
/* DS_LINKED_LIST [BOOLEAN].set_internal_cursor */
extern void T148f8(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [BOOLEAN].new_cursor */
extern T0* T148f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [BOOLEAN].make */
extern T0* T554c3(GE_context* ac, T0* a1);
/* AP_ENUMERATION_OPTION.reset */
extern void T43f30(GE_context* ac, T0* C);
/* AP_FLAG.reset */
extern void T41f22(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.record_occurrence */
extern void T50f41(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.display_help */
extern void T50f42(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.exceptions */
extern T0* T50f29(GE_context* ac, T0* C);
/* AP_ERROR_HANDLER.report_info_message */
extern void T139f11(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_help_text */
extern T0* T50f28(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.option_help_text */
extern T0* T50f34(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_QUICK_SORTER [AP_OPTION].sort */
extern void T1553f3(GE_context* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [AP_OPTION].sort_with_comparator */
extern void T1553f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [AP_OPTION].subsort_with_comparator */
extern void T1553f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [AP_OPTION].swap */
extern void T137f28(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [AP_OPTION].replace */
extern void T137f27(GE_context* ac, T0* C, T0* a1, T6 a2);
/* AP_OPTION_COMPARATOR.less_than */
extern T1 T1552f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.three_way_comparison */
extern T6 T34f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* AP_OPTION_COMPARATOR.string_ */
extern T0* T1552f2(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].item */
extern T0* T137f16(GE_context* ac, T0* C, T6 a1);
/* DS_QUICK_SORTER [AP_OPTION].make */
extern T0* T1553c2(GE_context* ac, T0* a1);
/* AP_OPTION_COMPARATOR.default_create */
extern T0* T1552c3(GE_context* ac);
/* AP_STRING_OPTION.record_occurrence */
extern void T46f28(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.record_occurrence */
extern void T45f28(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [INTEGER_32].force_last */
extern void T151f9(GE_context* ac, T0* C, T6 a1);
/* AP_BOOLEAN_OPTION.record_occurrence */
extern void T44f31(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.false_strings */
extern unsigned char ge5os4917;
extern T0* ge5ov4917;
extern T0* T44f21(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.case_insensitive_string_equality_tester */
extern T0* T44f22(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].has */
extern T1 T136f20(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.true_strings */
extern unsigned char ge5os4918;
extern T0* ge5ov4918;
extern T0* T44f20(GE_context* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].force_last */
extern void T148f9(GE_context* ac, T0* C, T1 a1);
/* detachable DS_LINKABLE [BOOLEAN].put_right */
extern void T553f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [BOOLEAN].make */
extern T0* T553c3(GE_context* ac, T1 a1);
/* AP_ENUMERATION_OPTION.record_occurrence */
extern void T43f32(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].has */
extern T1 T143f14(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.record_occurrence */
extern void T43f32p1(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.record_occurrence */
extern void T41f24(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_INPUT_STREAM.read_character */
extern void T899f10(GE_context* ac, T0* C);
/* KL_STDIN_FILE.read_character */
extern void T888f26(GE_context* ac, T0* C);
/* KL_STDIN_FILE.old_read_character */
extern void T888f29(GE_context* ac, T0* C);
/* KL_STDIN_FILE.console_readchar */
extern T2 T888f17(GE_context* ac, T0* C, T14 a1);
/* KL_STDIN_FILE.old_end_of_file */
extern T1 T888f22(GE_context* ac, T0* C);
/* KL_STDIN_FILE.console_eof */
extern T1 T888f13(GE_context* ac, T0* C, T14 a1);
/* XM_EIFFEL_INPUT_STREAM.read_character */
extern void T848f32(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].remove */
extern void T1462f6(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].wipe_out */
extern void T1462f8(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.noqueue_read_character */
extern void T848f35(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_read_character */
extern void T848f37(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.append_character */
extern void T848f38(GE_context* ac, T0* C, T6 a1);
/* DS_LINKED_QUEUE [CHARACTER_8].force */
extern void T1462f7(GE_context* ac, T0* C, T2 a1);
/* detachable DS_LINKABLE [CHARACTER_8].put_right */
extern void T1642f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [CHARACTER_8].make */
extern T0* T1642c3(GE_context* ac, T2 a1);
/* XM_EIFFEL_INPUT_STREAM.utf8 */
extern T0* T848f24(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf8_buffer */
extern unsigned char ge1289os31145;
extern T0* ge1289ov31145;
extern T0* T848f27(GE_context* ac, T0* C);
/* UC_UTF16_ROUTINES.surrogate */
extern T6 T1463f7(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_low_surrogate */
extern T1 T1463f6(GE_context* ac, T0* C, T6 a1);
/* UC_UTF16_ROUTINES.least_10_bits */
extern T6 T1463f5(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_high_surrogate */
extern T1 T1463f4(GE_context* ac, T0* C, T6 a1);
/* UC_UTF16_ROUTINES.is_surrogate */
extern T1 T1463f3(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.utf16 */
extern unsigned char ge309os3807;
extern T0* ge309ov3807;
extern T0* T848f22(GE_context* ac, T0* C);
/* UC_UTF16_ROUTINES.default_create */
extern T0* T1463c16(GE_context* ac);
/* XM_EIFFEL_INPUT_STREAM.least_significant */
extern T6 T848f26(GE_context* ac, T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.most_significant */
extern T6 T848f25(GE_context* ac, T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.latin1_read_character */
extern void T848f36(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_detect_read_character */
extern void T848f34(GE_context* ac, T0* C);
/* UC_UTF8_ROUTINES.is_endian_detection_character */
extern T1 T846f31(GE_context* ac, T0* C, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.is_endian_detection_character_start */
extern T1 T846f30(GE_context* ac, T0* C, T2 a1, T2 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_least_first */
extern T1 T1463f2(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_most_first */
extern T1 T1463f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.read_character */
extern void T29f53(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_read_character */
extern void T29f57(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_gc */
extern T2 T29f26(GE_context* ac, T0* C, T14 a1);
/* KL_STRING_INPUT_STREAM.close */
extern void T899f11(GE_context* ac, T0* C);
/* KL_STDIN_FILE.close */
extern void T888f27(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.close */
extern void T848f33(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.close */
extern void T29f48(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_ise_version */
extern void T70f192(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_ecma_version */
extern void T70f216(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.ise_6_4_7_7252 */
extern T0* T70f161(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.ise_6_4_7_6592 */
extern unsigned char ge191os2010;
extern T0* ge191ov2010;
extern T0* T70f154(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_ise_version */
extern void T64f191(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_ecma_version */
extern void T64f212(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.ise_6_4_7_7252 */
extern T0* T64f160(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.ise_6_4_7_6592 */
extern T0* T64f184(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_ise_version */
extern void T61f188(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_ecma_version */
extern void T61f224(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.ise_6_4_7_7252 */
extern T0* T61f158(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.ise_6_4_7_6592 */
extern T0* T61f157(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_qualified_anchored_types_enabled */
extern void T70f193(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_qualified_anchored_types_enabled */
extern void T64f192(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_qualified_anchored_types_enabled */
extern void T61f189(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_flat_mode */
extern void T70f200(GE_context* ac, T0* C, T1 a1);
extern T1 T70f200ot1(T0* a1, T0** a2);
extern T1 T70f200ot2(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.set_flat_mode */
extern void T64f199(GE_context* ac, T0* C, T1 a1);
extern T1 T64f199ot1(T0* a1, T0** a2);
extern T1 T64f199ot2(T0* a1, T0** a2);
/* ET_XACE_SYSTEM.set_flat_mode */
extern void T61f196(GE_context* ac, T0* C, T1 a1);
extern T1 T61f196ot1(T0* a1, T0** a2);
extern T1 T61f196ot2(T0* a1, T0** a2);
/* ET_LACE_SYSTEM.set_flat_dbc_mode */
extern void T70f201(GE_context* ac, T0* C, T1 a1);
extern T1 T70f201ot1(T0* a1, T0** a2);
extern T1 T70f201ot2(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.set_flat_dbc_mode */
extern void T64f200(GE_context* ac, T0* C, T1 a1);
extern T1 T64f200ot1(T0* a1, T0** a2);
extern T1 T64f200ot2(T0* a1, T0** a2);
/* ET_XACE_SYSTEM.set_flat_dbc_mode */
extern void T61f197(GE_context* ac, T0* C, T1 a1);
extern T1 T61f197ot1(T0* a1, T0** a2);
extern T1 T61f197ot2(T0* a1, T0** a2);
/* ET_LACE_SYSTEM.classes_do_recursive */
extern void T70f194(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_recursive */
extern T0* T70f194ac1(T0* a1);
/* ET_LACE_SYSTEM.universes_do_recursive */
extern void T70f217(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].do_all */
extern void T472f37(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.add_universe_recursive */
extern void T70f284(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.add_universe_recursive */
extern T0* T70f284ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.add_universe_recursive */
extern T0* T70f284ac2(T0* a1);
/* ET_ECF_LIBRARY.add_universe_recursive */
extern void T189f191(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T189f191ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T189f191ac2(T0* a1);
/* ET_LIBRARY.add_universe_recursive */
extern void T460f165(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_universe_recursive */
extern T0* T460f165ac1(T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.add_universe_recursive */
extern T0* T460f165ac2(T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_all */
extern void T197f9(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_all */
extern void T190f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].make */
extern T0* T472c36(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].set_internal_cursor */
extern void T472f48(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].new_cursor */
extern T0* T472f35(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].make */
extern T0* T1324c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].make_slots */
extern void T472f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_clashes */
extern void T472f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_key_storage */
extern void T472f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_item_storage */
extern void T472f43(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].make */
extern T0* T1327f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_UNIVERSE].make_empty */
extern T0* T1325c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].default_create */
extern T0* T1327c3(GE_context* ac);
/* ET_LACE_SYSTEM.initial_universes_capacity */
extern unsigned char ge734os3697;
extern T6 ge734ov3697;
extern T6 T70f159(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.classes_do_recursive */
extern void T64f193(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_recursive */
extern T0* T64f193ac1(T0* a1);
/* ET_ECF_SYSTEM.universes_do_recursive */
extern void T64f214(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.add_universe_recursive */
extern void T64f235(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T64f235ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T64f235ac2(T0* a1);
/* ET_ECF_SYSTEM.initial_universes_capacity */
extern T6 T64f166(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.classes_do_recursive */
extern void T61f190(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_recursive */
extern T0* T61f190ac1(T0* a1);
/* ET_XACE_SYSTEM.universes_do_recursive */
extern void T61f225(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.add_universe_recursive */
extern void T61f293(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.add_universe_recursive */
extern T0* T61f293ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.add_universe_recursive */
extern T0* T61f293ac2(T0* a1);
/* ET_XACE_SYSTEM.initial_universes_capacity */
extern T6 T61f178(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.compile_all */
extern void T70f195(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.compile_degree_3 */
extern void T70f222(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.compile_degree_3 */
extern T0* T70f222ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.compile_degree_3 */
extern T0* T70f222ac2(void);
extern T1 T70f222ot1(T0* a1, T0** a2);
/* ET_LACE_SYSTEM.classes_do_if_recursive_until */
extern void T70f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_if_recursive_until */
extern T0* T70f286ac1(T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_do_if_recursive_until */
extern T0* T70f286ac2(T0* a1, T0* a2, T0* a3);
/* ET_LACE_SYSTEM.universes_do_recursive_until */
extern void T70f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_UNIVERSE].forth */
extern void T472f40(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_forth */
extern void T472f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].add_traversing_cursor */
extern void T472f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_next_cursor */
extern void T1324f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_position */
extern void T1324f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].remove_traversing_cursor */
extern void T472f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_after */
extern void T1324f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].item_for_iteration */
extern T0* T472f34(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_item */
extern T0* T472f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].go_after */
extern void T472f39(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_go_after */
extern void T472f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].cursor_off */
extern T1 T472f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].off */
extern T1 T1324f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].after */
extern T1 T472f27(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_after */
extern T1 T472f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].after */
extern T1 T1324f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].start */
extern void T472f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_start */
extern void T472f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].is_empty */
extern T1 T472f31(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.compile_degree_4 */
extern void T70f221(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T70f221ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T70f221ac2(void);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T70f221ac3(T0* a1);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T70f221ac4(void);
/* Creation of agent #5 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T70f221ac5(T0* a1);
/* Creation of agent #6 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T70f221ac6(void);
/* ET_LACE_SYSTEM.parsed_class_count_recursive */
extern T6 T70f160(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.parsed_class_count_recursive */
extern T0* T70f160ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.parsed_class_count_recursive */
extern T0* T70f160ac2(T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.parsed_class_count_recursive */
extern T0* T70f160ac3(void);
/* KL_AGENT_ROUTINES [ET_CLASS].call */
extern void T786f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UT_COUNTER.increment */
extern void T785f3(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.classes_do_if_recursive */
extern void T70f294(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_if_recursive */
extern T0* T70f294ac1(T0* a1, T0* a2);
/* ET_LACE_SYSTEM.class_actions */
extern unsigned char ge794os3715;
extern T0* ge794ov3715;
extern T0* T70f153(GE_context* ac, T0* C);
/* KL_AGENT_ROUTINES [ET_CLASS].default_create */
extern T0* T786c1(GE_context* ac);
/* UT_COUNTER.make */
extern T0* T785c2(GE_context* ac, T6 a1);
/* ET_LACE_SYSTEM.check_provider_validity */
extern void T70f220(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.check_provider_validity */
extern T0* T70f220ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.check_provider_validity */
extern T0* T70f220ac2(void);
/* ET_LACE_SYSTEM.parse_all_recursive */
extern void T70f219(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.build_scm_write_mappings */
extern void T70f226(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.build_scm_write_mappings */
extern T0* T70f226ac1(T0* a1);
/* ET_LACE_SYSTEM.build_scm_write_mapping */
extern void T70f290(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.clusters_do_explicit_recursive */
extern void T70f289(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.clusters_do_explicit_recursive */
extern T0* T70f289ac1(T0* a1);
/* ET_LACE_SYSTEM.internal_universes_do_recursive */
extern void T70f227(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].do_all */
extern void T483f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_item */
extern T0* T483f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_item */
extern T6 T483f22(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.add_internal_universe_recursive */
extern void T70f291(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.add_internal_universe_recursive */
extern T0* T70f291ac1(T0* a1);
/* ET_ECF_LIBRARY.add_internal_universe_recursive */
extern void T189f192(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_internal_universe_recursive */
extern T0* T189f192ac1(T0* a1);
/* ET_LIBRARY.add_internal_universe_recursive */
extern void T460f166(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_internal_universe_recursive */
extern T0* T460f166ac1(T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].force_last */
extern void T483f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_put */
extern void T483f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_put */
extern void T483f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_item */
extern T6 T483f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].hash_position */
extern T6 T483f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].resize */
extern void T483f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_resize */
extern void T483f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].special_integer_ */
extern T0* T483f27(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_storage_resize */
extern void T483f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_resize */
extern void T483f45(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1330f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1331f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_storage_item */
extern T0* T483f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_resize */
extern void T483f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_modulus */
extern T6 T483f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_capacity */
extern T6 T483f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_put */
extern void T483f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].force */
extern void T1330f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INTERNAL_UNIVERSE].fill_with */
extern void T1331f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTERNAL_UNIVERSE].extend */
extern void T1331f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].search_position */
extern void T483f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_equality_tester */
extern T0* T483f19(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].unset_found_item */
extern void T483f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].has */
extern T1 T483f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make */
extern T0* T483c30(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].set_internal_cursor */
extern void T483f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_cursor */
extern T0* T483f21(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE].make */
extern T0* T1328c4(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_slots */
extern void T483f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_clashes */
extern void T483f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_key_storage */
extern void T483f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_item_storage */
extern void T483f34(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].make */
extern T0* T1330f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INTERNAL_UNIVERSE].make_empty */
extern T0* T1331c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].default_create */
extern T0* T1330c3(GE_context* ac);
/* ET_LACE_SYSTEM.build_scm_read_mappings */
extern void T70f225(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.build_scm_read_mappings */
extern T0* T70f225ac1(T0* a1);
/* ET_LACE_SYSTEM.build_scm_read_mapping */
extern void T70f288(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.check_master_class_validity */
extern void T70f224(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.check_master_class_validity */
extern T0* T70f224ac1(T0* a1);
/* ET_MASTER_CLASS.process */
extern void T471f63(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.process_master_class */
extern void T439f8(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.check_master_class_validity */
extern void T439f9(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.check_overriding_classes_validity */
extern void T439f12(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0d_error */
extern void T77f298(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_universe_error */
extern void T77f382(GE_context* ac, T0* C, T0* a1);
/* ET_UNIVERSE_ERROR.make_vscn0d */
extern T0* T1771c21(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_MASTER_CLASS.upper_name */
extern T0* T471f47(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vscn_error */
extern T1 T77f82(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vscn0d_error */
extern void T36f297(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_universe_error */
extern void T36f381(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vscn_error */
extern T1 T36f81(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.current_universe */
extern T0* T439f5(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.error_handler */
extern T0* T439f4(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.current_system */
extern T0* T439f6(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.set_fatal_error */
extern void T439f13(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.check_intrinsic_classes_validity */
extern void T439f11(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.check_overridden_class_validity */
extern void T439f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0c_error */
extern void T77f300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNIVERSE_ERROR.make_vscn0c */
extern T0* T1771c23(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vscn0c_error */
extern void T36f299(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vscn0b_error */
extern void T77f299(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNIVERSE_ERROR.make_vscn0b */
extern T0* T1771c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vscn0b_error */
extern void T36f298(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vscn0a_error */
extern void T77f297(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNIVERSE_ERROR.make_vscn0a */
extern T0* T1771c20(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vscn0a_error */
extern void T36f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_MASTER_CLASS_CHECKER.reset_fatal_error */
extern void T439f10(GE_context* ac, T0* C, T1 a1);
/* ET_AST_NULL_PROCESSOR.process_master_class */
extern void T430f4(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.master_classes_do_recursive_until */
extern void T70f287(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T70f287ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T70f287ac2(T0* a1, T0* a2);
/* ET_LACE_SYSTEM.parse_all_recursive */
extern void T70f219p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T70f219p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T70f219p1ac2(void);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T70f219p1ac3(T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T70f219p1ac4(T0* a1);
/* Creation of agent #5 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T70f219p1ac5(void);
/* Creation of agent #6 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T70f219p1ac6(void);
/* Creation of agent #7 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T70f219p1ac7(void);
/* Creation of agent #8 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T70f219p1ac8(void);
/* ET_ECF_LIBRARY.import_classes */
extern void T189f189(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T189f189ac1(void);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T189f189ac2(T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T189f189ac3(T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.export_classes */
extern void T196f22(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_unknown_imported_classes */
extern void T471f66(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.remove_imported_class */
extern void T471f79(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_adapted */
extern void T197f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].do_all */
extern void T627f11(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.import_classes */
extern void T460f163(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LIBRARY.import_classes */
extern T0* T460f163ac1(void);
/* Creation of agent #2 in feature ET_LIBRARY.import_classes */
extern T0* T460f163ac2(T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.import_classes */
extern T0* T460f163ac3(T0* a1);
/* ET_ECF_LIBRARY.parse_all */
extern void T189f190(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.parse_all */
extern T0* T189f190ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.parse_all */
extern T0* T189f190ac2(void);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.parse_all */
extern T0* T189f190ac3(void);
/* Creation of agent #4 in feature ET_ECF_LIBRARY.parse_all */
extern T0* T189f190ac4(T0* a1);
/* ET_MASTER_CLASS.remove_unknown_local_classes */
extern void T471f65(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.remove_local_ignored_class */
extern void T471f78(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_first */
extern void T1322f21(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].delete */
extern void T1322f20(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_local_non_override_class */
extern void T471f77(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_local_override_class */
extern void T471f76(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove */
extern void T1322f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].move_left */
extern void T1322f30(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_cursors_left */
extern void T1322f29(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_last */
extern void T1322f28(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_last_cursors_after */
extern void T1322f34(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.reset_local_modified_classes */
extern void T471f64(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T471f64ac1(T0* a1);
/* Creation of agent #2 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T471f64ac2(T0* a1);
/* Creation of agent #3 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T471f64ac3(T0* a1);
/* Creation of agent #4 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T471f64ac4(T0* a1);
/* Creation of agent #5 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T471f64ac5(void);
/* ET_MASTER_CLASS.reset_local_modified_class */
extern void T471f71(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.file_time_stamp */
extern T6 T121f30(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.file_time_stamp */
extern T6 T120f33(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.file_system */
extern T0* T471f30(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.unix_file_system */
extern T0* T471f35(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.windows_file_system */
extern T0* T471f34(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.operating_system */
extern T0* T471f33(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_parsed_and_errors */
extern void T82f250(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_parsed */
extern void T82f251(GE_context* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.reset */
extern void T1040f10(GE_context* ac, T0* C);
/* ET_CONVERT_PROCEDURE.reset */
extern void T1230f10(GE_context* ac, T0* C);
/* ET_BRACED_TYPE_LIST.reset */
extern void T1321f12(GE_context* ac, T0* C);
/* ET_CONVERT_FUNCTION.reset */
extern void T1229f9(GE_context* ac, T0* C);
/* ET_CREATOR_LIST.reset */
extern void T834f11(GE_context* ac, T0* C);
/* ET_CREATOR.reset */
extern void T1045f19(GE_context* ac, T0* C);
/* ET_INVARIANTS.reset */
extern void T887f29(GE_context* ac, T0* C);
/* ET_INVARIANTS.reset */
extern void T887f29p1(GE_context* ac, T0* C);
/* ET_PARENT_LIST.reset */
extern void T468f12(GE_context* ac, T0* C);
/* ET_PARENT.reset */
extern void T467f13(GE_context* ac, T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.reset */
extern void T501f10(GE_context* ac, T0* C);
/* ET_EXPORT_LIST.reset */
extern void T500f9(GE_context* ac, T0* C);
/* ET_FEATURE_EXPORT.reset */
extern void T1075f13(GE_context* ac, T0* C);
/* ET_ALL_EXPORT.reset */
extern void T1227f8(GE_context* ac, T0* C);
/* ET_RENAME_LIST.reset */
extern void T499f10(GE_context* ac, T0* C);
/* ET_RENAME.reset */
extern void T1226f7(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.reset */
extern void T267f11(GE_context* ac, T0* C);
/* ET_QUERY_LIST.reset */
extern void T266f11(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_ignored_classes_do_all */
extern void T471f74(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].do_all */
extern void T1322f18(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_non_override_classes_do_all */
extern void T471f73(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.current_system */
extern T0* T471f28(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_override_classes_do_all */
extern void T471f72(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTERS.do_all */
extern void T771f4(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.parse_all */
extern void T460f164(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LIBRARY.parse_all */
extern T0* T460f164ac1(T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.parse_all */
extern T0* T460f164ac2(void);
/* Creation of agent #3 in feature ET_LIBRARY.parse_all */
extern T0* T460f164ac3(void);
/* Creation of agent #4 in feature ET_LIBRARY.parse_all */
extern T0* T460f164ac4(T0* a1);
/* ET_DOTNET_ASSEMBLIES.put_last */
extern void T447f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].force_last */
extern void T1319f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].resize */
extern void T1319f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1319f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].extendible */
extern T1 T1319f8(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern void T70f230(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac1(void);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac2(T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac3(void);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac4(void);
/* Creation of agent #5 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac5(void);
/* Creation of agent #6 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac6(void);
/* Creation of agent #7 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac7(void);
/* Creation of agent #8 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac8(void);
/* Creation of agent #9 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac9(void);
/* Creation of agent #10 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac10(void);
/* Creation of agent #11 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac11(void);
/* Creation of agent #12 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac12(void);
/* Creation of agent #13 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac13(void);
/* Creation of agent #14 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac14(void);
/* Creation of agent #15 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac15(void);
/* Creation of agent #16 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac16(void);
/* Creation of agent #17 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac17(void);
/* Creation of agent #18 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac18(void);
/* Creation of agent #19 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac19(void);
/* Creation of agent #20 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac20(void);
/* Creation of agent #21 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac21(void);
/* Creation of agent #22 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac22(void);
/* Creation of agent #23 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac23(T0* a1);
/* Creation of agent #24 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac24(void);
/* Creation of agent #25 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac25(T0* a1);
/* Creation of agent #26 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac26(void);
/* Creation of agent #27 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac27(T0* a1);
/* Creation of agent #28 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac28(void);
/* Creation of agent #29 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac29(T0* a1);
/* Creation of agent #30 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac30(void);
/* Creation of agent #31 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T70f230ac31(T1 a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.process_class */
extern void T491f6(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.internal_process_class */
extern void T491f8(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_providers_validity */
extern void T491f10(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].go_after */
extern void T1336f11(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].cursor_go_after */
extern void T881f73(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_interface_error */
extern T1 T471f40(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.interface_checked */
extern T1 T471f39(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_suppliers_validity */
extern void T491f9(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.set_fatal_error */
extern void T491f7(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.error_handler */
extern T0* T491f3(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.current_system */
extern T0* T491f4(GE_context* ac, T0* C);
/* ET_CLASS.unset_implementation_error */
extern void T82f258(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.process_class */
extern void T490f8(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.internal_process_class */
extern void T490f10(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_parents_validity */
extern void T490f13(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_type_validity */
extern void T1335f3(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_formal_parameters_validity */
extern void T490f12(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.check_qualified_anchored_signatures_validity */
extern void T490f11(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_signatures_validity */
extern void T1334f5(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_feature_signatures_validity */
extern void T1334f6(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.set_fatal_error */
extern void T490f9(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.error_handler */
extern T0* T490f5(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.current_system */
extern T0* T490f6(GE_context* ac, T0* C);
/* ET_CLASS.unset_interface_error */
extern void T82f257(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.process_class */
extern void T489f7(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.internal_process_class */
extern void T489f9(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_signatures_validity */
extern void T489f12(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_feature_signatures_validity */
extern void T489f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_type_validity */
extern void T1333f3(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_parents_validity */
extern void T489f11(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_formal_parameters_validity */
extern void T489f10(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.set_fatal_error */
extern void T489f8(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.error_handler */
extern T0* T489f4(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.current_system */
extern T0* T489f5(GE_context* ac, T0* C);
/* ET_CLASS.unset_flattening_error */
extern void T82f256(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.process_class */
extern void T488f7(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.internal_process_class */
extern void T488f9(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_parents_validity */
extern void T488f11(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_type_validity */
extern void T1332f3(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_formal_parameters_validity */
extern void T488f10(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.set_fatal_error */
extern void T488f8(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.error_handler */
extern T0* T488f4(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.current_system */
extern T0* T488f5(GE_context* ac, T0* C);
/* ET_CLASS.unset_ancestors_error */
extern void T82f255(GE_context* ac, T0* C);
/* ET_CLASS.not_implementation_checked */
extern T1 T82f133(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_interface_checked */
extern void T82f254(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.reset_after_interface_checked */
extern void T267f13(GE_context* ac, T0* C);
/* ET_QUERY_LIST.reset_after_interface_checked */
extern void T266f13(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_features_flattened */
extern void T82f253(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.reset_after_features_flattened */
extern void T267f12(GE_context* ac, T0* C);
/* ET_QUERY_LIST.reset_after_features_flattened */
extern void T266f12(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_ancestors_built */
extern void T82f252(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_classes_do_unless_actual */
extern void T471f67(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_non_override_classes_do_unless_actual */
extern void T471f81(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_override_classes_do_unless_actual */
extern void T471f80(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.make */
extern T0* T491c5(GE_context* ac);
/* ET_IMPLEMENTATION_STATUS_CHECKER.tokens */
extern T0* T491f2(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern T0* T490c7(GE_context* ac);
/* ET_CLASS_TYPE_STATUS_CHECKER3.make */
extern T0* T1335c2(GE_context* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.make */
extern T0* T1334c4(GE_context* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.tokens */
extern T0* T1334f3(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern void T490f7p1(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.tokens */
extern T0* T490f4(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern T0* T489c6(GE_context* ac);
/* ET_CLASS_TYPE_STATUS_CHECKER2.make */
extern T0* T1333c2(GE_context* ac);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern void T489f6p1(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.tokens */
extern T0* T489f3(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern T0* T488c6(GE_context* ac);
/* ET_CLASS_TYPE_STATUS_CHECKER1.make */
extern T0* T1332c2(GE_context* ac);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern void T488f6p1(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.tokens */
extern T0* T488f3(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.master_classes_do_recursive */
extern void T70f293(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.master_classes_do_recursive */
extern T0* T70f293ac1(T0* a1);
/* ET_LACE_SYSTEM.classes_modified_recursive */
extern T1 T70f158(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T70f158ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T70f158ac2(T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T70f158ac3(void);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T70f158ac4(T0* a1);
/* KL_AGENT_ROUTINES [ANY].call */
extern void T791f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.master_classes_do_if_recursive_until */
extern void T70f298(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T70f298ac1(T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T70f298ac2(T0* a1, T0* a2, T0* a3);
/* ET_LACE_SYSTEM.any_actions */
extern unsigned char ge286os3718;
extern T0* ge286ov3718;
extern T0* T70f152(GE_context* ac, T0* C);
/* KL_AGENT_ROUTINES [ANY].default_create */
extern T0* T791c1(GE_context* ac);
/* UT_TRISTATE.make_false */
extern T0* T790c5(GE_context* ac);
/* ET_LACE_SYSTEM.import_classes */
extern void T70f229(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T70f229ac1(void);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T70f229ac2(T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T70f229ac3(T0* a1);
/* ET_LACE_SYSTEM.parse_all */
extern void T70f285(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.parse_all */
extern T0* T70f285ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.parse_all */
extern T0* T70f285ac2(void);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.parse_all */
extern T0* T70f285ac3(void);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.parse_all */
extern T0* T70f285ac4(T0* a1);
/* ET_LACE_CLUSTERS.do_all */
extern void T214f8(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_recursive */
extern void T190f7(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_LIBRARIES.do_recursive */
extern T0* T190f7ac1(T0* a1);
/* ET_ECF_LIBRARY.add_library_recursive */
extern void T189f193(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_library_recursive */
extern T0* T189f193ac1(T0* a1);
/* DS_HASH_SET [ET_LIBRARY].force_last */
extern void T625f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].slots_put */
extern void T625f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_LIBRARY].clashes_put */
extern void T625f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_LIBRARY].slots_item */
extern T6 T625f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].hash_position */
extern T6 T625f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].resize */
extern void T625f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].clashes_resize */
extern void T625f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].special_integer_ */
extern T0* T625f27(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].key_storage_resize */
extern void T625f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_resize */
extern void T625f45(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].aliased_resized_area */
extern T0* T1372f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIBRARY].aliased_resized_area */
extern T0* T1373f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].key_storage_item */
extern T0* T625f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_item */
extern T0* T625f17(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].clashes_item */
extern T6 T625f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].slots_resize */
extern void T625f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].new_modulus */
extern T6 T625f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].new_capacity */
extern T6 T625f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_put */
extern void T625f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].force */
extern void T1372f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LIBRARY].fill_with */
extern void T1373f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIBRARY].extend */
extern void T1373f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].search_position */
extern void T625f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].key_equality_tester */
extern T0* T625f25(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].unset_found_item */
extern void T625f36(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].has */
extern T1 T625f18(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.add_library_recursive */
extern void T460f167(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_library_recursive */
extern T0* T460f167ac1(T0* a1);
/* DS_HASH_SET [ET_LIBRARY].do_all */
extern void T625f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].make */
extern T0* T625c30(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].set_internal_cursor */
extern void T625f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].new_cursor */
extern T0* T625f24(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_LIBRARY].make */
extern T0* T1371c4(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].make_slots */
extern void T625f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_clashes */
extern void T625f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_key_storage */
extern void T625f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_item_storage */
extern void T625f32(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].make */
extern T0* T1372f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LIBRARY].make_empty */
extern T0* T1373c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].default_create */
extern T0* T1372c3(GE_context* ac);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern void T197f7(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern T0* T197f7ac1(T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assemblies */
extern void T789f4(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T447f4(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_ASSEMBLIES.count */
extern T6 T447f3(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].do_all */
extern void T446f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make */
extern T0* T446c30(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T446f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T446f17(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY].make */
extern T0* T1315c4(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_slots */
extern void T446f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_clashes */
extern void T446f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_key_storage */
extern void T446f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_item_storage */
extern void T446f33(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.compile_degree_5 */
extern void T70f218(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.compile_degree_5 */
extern T0* T70f218ac1(T0* a1);
/* ET_ECF_SYSTEM.compile_all */
extern void T64f194(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.compile_degree_3 */
extern void T64f219(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.compile_degree_3 */
extern T0* T64f219ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.compile_degree_3 */
extern T0* T64f219ac2(void);
extern T1 T64f219ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.classes_do_if_recursive_until */
extern void T64f237(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_if_recursive_until */
extern T0* T64f237ac1(T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_do_if_recursive_until */
extern T0* T64f237ac2(T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.universes_do_recursive_until */
extern void T64f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.compile_degree_4 */
extern void T64f218(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.compile_degree_4 */
extern T0* T64f218ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.compile_degree_4 */
extern T0* T64f218ac2(void);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.compile_degree_4 */
extern T0* T64f218ac3(T0* a1);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.compile_degree_4 */
extern T0* T64f218ac4(void);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.compile_degree_4 */
extern T0* T64f218ac5(T0* a1);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.compile_degree_4 */
extern T0* T64f218ac6(void);
/* ET_ECF_SYSTEM.parsed_class_count_recursive */
extern T6 T64f167(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.parsed_class_count_recursive */
extern T0* T64f167ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.parsed_class_count_recursive */
extern T0* T64f167ac2(T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.parsed_class_count_recursive */
extern T0* T64f167ac3(void);
/* ET_ECF_SYSTEM.classes_do_if_recursive */
extern void T64f245(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_if_recursive */
extern T0* T64f245ac1(T0* a1, T0* a2);
/* ET_ECF_SYSTEM.class_actions */
extern T0* T64f159(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.check_provider_validity */
extern void T64f217(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.check_provider_validity */
extern T0* T64f217ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.check_provider_validity */
extern T0* T64f217ac2(void);
/* ET_ECF_SYSTEM.parse_all_recursive */
extern void T64f216(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.build_scm_write_mappings */
extern void T64f223(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.build_scm_write_mappings */
extern T0* T64f223ac1(T0* a1);
/* ET_ECF_SYSTEM.build_scm_write_mapping */
extern void T64f241(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern void T64f240(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern T0* T64f240ac1(T0* a1);
/* ET_ECF_SYSTEM.internal_universes_do_recursive */
extern void T64f224(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.add_internal_universe_recursive */
extern void T64f242(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.add_internal_universe_recursive */
extern T0* T64f242ac1(T0* a1);
/* ET_ECF_SYSTEM.build_scm_read_mappings */
extern void T64f222(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.build_scm_read_mappings */
extern T0* T64f222ac1(T0* a1);
/* ET_ECF_SYSTEM.build_scm_read_mapping */
extern void T64f239(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.check_master_class_validity */
extern void T64f221(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.check_master_class_validity */
extern T0* T64f221ac1(T0* a1);
/* ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern void T64f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T64f238ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T64f238ac2(T0* a1, T0* a2);
/* ET_ECF_SYSTEM.parse_all_recursive */
extern void T64f216p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T64f216p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T64f216p1ac2(void);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T64f216p1ac3(T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T64f216p1ac4(T0* a1);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T64f216p1ac5(void);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T64f216p1ac6(void);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T64f216p1ac7(void);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T64f216p1ac8(void);
/* ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern void T64f227(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac1(void);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac2(T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac3(void);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac4(void);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac5(void);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac6(void);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac7(void);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac8(void);
/* Creation of agent #9 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac9(void);
/* Creation of agent #10 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac10(void);
/* Creation of agent #11 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac11(void);
/* Creation of agent #12 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac12(void);
/* Creation of agent #13 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac13(void);
/* Creation of agent #14 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac14(void);
/* Creation of agent #15 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac15(void);
/* Creation of agent #16 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac16(void);
/* Creation of agent #17 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac17(void);
/* Creation of agent #18 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac18(void);
/* Creation of agent #19 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac19(void);
/* Creation of agent #20 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac20(void);
/* Creation of agent #21 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac21(void);
/* Creation of agent #22 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac22(void);
/* Creation of agent #23 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac23(T0* a1);
/* Creation of agent #24 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac24(void);
/* Creation of agent #25 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac25(T0* a1);
/* Creation of agent #26 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac26(void);
/* Creation of agent #27 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac27(T0* a1);
/* Creation of agent #28 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac28(void);
/* Creation of agent #29 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac29(T0* a1);
/* Creation of agent #30 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac30(void);
/* Creation of agent #31 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T64f227ac31(T1 a1);
/* ET_ECF_SYSTEM.master_classes_do_recursive */
extern void T64f244(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_recursive */
extern T0* T64f244ac1(T0* a1);
/* ET_ECF_SYSTEM.classes_modified_recursive */
extern T1 T64f170(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T64f170ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T64f170ac2(T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T64f170ac3(void);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T64f170ac4(T0* a1);
/* ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern void T64f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T64f302ac1(T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T64f302ac2(T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.any_actions */
extern T0* T64f161(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.import_classes */
extern void T64f226(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T64f226ac1(void);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T64f226ac2(T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T64f226ac3(T0* a1);
/* ET_ECF_SYSTEM.parse_all */
extern void T64f236(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.parse_all */
extern T0* T64f236ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.parse_all */
extern T0* T64f236ac2(void);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.parse_all */
extern T0* T64f236ac3(void);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.parse_all */
extern T0* T64f236ac4(T0* a1);
/* ET_ECF_SYSTEM.compile_degree_5 */
extern void T64f215(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.compile_degree_5 */
extern T0* T64f215ac1(T0* a1);
/* ET_XACE_SYSTEM.compile_all */
extern void T61f191(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.compile_degree_3 */
extern void T61f230(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.compile_degree_3 */
extern T0* T61f230ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.compile_degree_3 */
extern T0* T61f230ac2(void);
extern T1 T61f230ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM.classes_do_if_recursive_until */
extern void T61f295(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_if_recursive_until */
extern T0* T61f295ac1(T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_do_if_recursive_until */
extern T0* T61f295ac2(T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM.universes_do_recursive_until */
extern void T61f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.compile_degree_4 */
extern void T61f229(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T61f229ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T61f229ac2(void);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T61f229ac3(T0* a1);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T61f229ac4(void);
/* Creation of agent #5 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T61f229ac5(T0* a1);
/* Creation of agent #6 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T61f229ac6(void);
/* ET_XACE_SYSTEM.parsed_class_count_recursive */
extern T6 T61f180(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.parsed_class_count_recursive */
extern T0* T61f180ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.parsed_class_count_recursive */
extern T0* T61f180ac2(T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.parsed_class_count_recursive */
extern T0* T61f180ac3(void);
/* ET_XACE_SYSTEM.classes_do_if_recursive */
extern void T61f303(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_if_recursive */
extern T0* T61f303ac1(T0* a1, T0* a2);
/* ET_XACE_SYSTEM.class_actions */
extern T0* T61f179(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.check_provider_validity */
extern void T61f228(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.check_provider_validity */
extern T0* T61f228ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.check_provider_validity */
extern T0* T61f228ac2(void);
/* ET_XACE_SYSTEM.parse_all_recursive */
extern void T61f227(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.build_scm_write_mappings */
extern void T61f234(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.build_scm_write_mappings */
extern T0* T61f234ac1(T0* a1);
/* ET_XACE_SYSTEM.build_scm_write_mapping */
extern void T61f299(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.clusters_do_explicit_recursive */
extern void T61f298(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.clusters_do_explicit_recursive */
extern T0* T61f298ac1(T0* a1);
/* ET_XACE_SYSTEM.internal_universes_do_recursive */
extern void T61f235(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.add_internal_universe_recursive */
extern void T61f300(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.add_internal_universe_recursive */
extern T0* T61f300ac1(T0* a1);
/* ET_XACE_SYSTEM.build_scm_read_mappings */
extern void T61f233(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.build_scm_read_mappings */
extern T0* T61f233ac1(T0* a1);
/* ET_XACE_SYSTEM.build_scm_read_mapping */
extern void T61f297(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.check_master_class_validity */
extern void T61f232(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.check_master_class_validity */
extern T0* T61f232ac1(T0* a1);
/* ET_XACE_SYSTEM.master_classes_do_recursive_until */
extern void T61f296(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T61f296ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T61f296ac2(T0* a1, T0* a2);
/* ET_XACE_SYSTEM.parse_all_recursive */
extern void T61f227p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T61f227p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T61f227p1ac2(void);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T61f227p1ac3(T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T61f227p1ac4(T0* a1);
/* Creation of agent #5 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T61f227p1ac5(void);
/* Creation of agent #6 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T61f227p1ac6(void);
/* Creation of agent #7 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T61f227p1ac7(void);
/* Creation of agent #8 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T61f227p1ac8(void);
/* ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern void T61f238(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac1(void);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac2(T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac3(void);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac4(void);
/* Creation of agent #5 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac5(void);
/* Creation of agent #6 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac6(void);
/* Creation of agent #7 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac7(void);
/* Creation of agent #8 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac8(void);
/* Creation of agent #9 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac9(void);
/* Creation of agent #10 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac10(void);
/* Creation of agent #11 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac11(void);
/* Creation of agent #12 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac12(void);
/* Creation of agent #13 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac13(void);
/* Creation of agent #14 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac14(void);
/* Creation of agent #15 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac15(void);
/* Creation of agent #16 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac16(void);
/* Creation of agent #17 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac17(void);
/* Creation of agent #18 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac18(void);
/* Creation of agent #19 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac19(void);
/* Creation of agent #20 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac20(void);
/* Creation of agent #21 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac21(void);
/* Creation of agent #22 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac22(void);
/* Creation of agent #23 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac23(T0* a1);
/* Creation of agent #24 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac24(void);
/* Creation of agent #25 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac25(T0* a1);
/* Creation of agent #26 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac26(void);
/* Creation of agent #27 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac27(T0* a1);
/* Creation of agent #28 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac28(void);
/* Creation of agent #29 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac29(T0* a1);
/* Creation of agent #30 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac30(void);
/* Creation of agent #31 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T61f238ac31(T1 a1);
/* ET_XACE_SYSTEM.master_classes_do_recursive */
extern void T61f302(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.master_classes_do_recursive */
extern T0* T61f302ac1(T0* a1);
/* ET_XACE_SYSTEM.classes_modified_recursive */
extern T1 T61f165(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T61f165ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T61f165ac2(T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T61f165ac3(void);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T61f165ac4(T0* a1);
/* ET_XACE_SYSTEM.master_classes_do_if_recursive_until */
extern void T61f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T61f306ac1(T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T61f306ac2(T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM.any_actions */
extern T0* T61f181(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.import_classes */
extern void T61f237(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.import_classes */
extern T0* T61f237ac1(void);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.import_classes */
extern T0* T61f237ac2(T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.import_classes */
extern T0* T61f237ac3(T0* a1);
/* ET_XACE_SYSTEM.parse_all */
extern void T61f294(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.parse_all */
extern T0* T61f294ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.parse_all */
extern T0* T61f294ac2(void);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.parse_all */
extern T0* T61f294ac3(void);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.parse_all */
extern T0* T61f294ac4(T0* a1);
/* ET_XACE_CLUSTERS.do_all */
extern void T412f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.compile_degree_5 */
extern void T61f226(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.compile_degree_5 */
extern T0* T61f226ac1(T0* a1);
/* ET_LACE_SYSTEM.classes_do_recursive_until */
extern void T70f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_recursive_until */
extern T0* T70f196ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_do_recursive_until */
extern T0* T70f196ac2(T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_recursive_until */
extern void T64f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T64f195ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T64f195ac2(T0* a1, T0* a2);
/* ET_XACE_SYSTEM.classes_do_recursive_until */
extern void T61f192(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_recursive_until */
extern T0* T61f192ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_do_recursive_until */
extern T0* T61f192ac2(T0* a1, T0* a2);
/* ET_LACE_SYSTEM.activate_processors */
extern void T70f198(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.make */
extern T0* T440c952(GE_context* ac);
/* ET_EIFFEL_PARSER.make_parser_skeleton */
extern void T440f955(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_build_parser_tables */
extern void T440f960(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yycheck_template */
extern unsigned char ge1028os24656;
extern T0* ge1028ov24656;
extern T0* T440f670(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yyfixed_array */
extern T0* T440f917(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_36 */
extern void T440f2086(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyarray_subcopy */
extern void T440f2134(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.integer_array_ */
extern T0* T440f938(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yycheck_template_35 */
extern void T440f2085(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_34 */
extern void T440f2084(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_33 */
extern void T440f2083(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_32 */
extern void T440f2082(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_31 */
extern void T440f2081(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_30 */
extern void T440f2080(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_29 */
extern void T440f2079(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_28 */
extern void T440f2078(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_27 */
extern void T440f2077(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_26 */
extern void T440f2076(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_25 */
extern void T440f2075(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_24 */
extern void T440f2074(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_23 */
extern void T440f2073(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_22 */
extern void T440f2072(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_21 */
extern void T440f2071(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_20 */
extern void T440f2070(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_19 */
extern void T440f2069(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_18 */
extern void T440f2068(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_17 */
extern void T440f2067(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_16 */
extern void T440f2066(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_15 */
extern void T440f2065(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_14 */
extern void T440f2064(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_13 */
extern void T440f2063(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_12 */
extern void T440f2062(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_11 */
extern void T440f2061(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_10 */
extern void T440f2060(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_9 */
extern void T440f2059(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_8 */
extern void T440f2058(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_7 */
extern void T440f2057(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_6 */
extern void T440f2056(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_5 */
extern void T440f2055(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_4 */
extern void T440f2054(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_3 */
extern void T440f2053(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_2 */
extern void T440f2052(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_1 */
extern void T440f2051(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template */
extern unsigned char ge1028os24619;
extern T0* ge1028ov24619;
extern T0* T440f668(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytable_template_36 */
extern void T440f2050(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_35 */
extern void T440f2049(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_34 */
extern void T440f2048(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_33 */
extern void T440f2047(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_32 */
extern void T440f2046(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_31 */
extern void T440f2045(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_30 */
extern void T440f2044(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_29 */
extern void T440f2043(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_28 */
extern void T440f2042(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_27 */
extern void T440f2041(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_26 */
extern void T440f2040(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_25 */
extern void T440f2039(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_24 */
extern void T440f2038(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_23 */
extern void T440f2037(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_22 */
extern void T440f2036(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_21 */
extern void T440f2035(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_20 */
extern void T440f2034(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_19 */
extern void T440f2033(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_18 */
extern void T440f2032(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_17 */
extern void T440f2031(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_16 */
extern void T440f2030(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_15 */
extern void T440f2029(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_14 */
extern void T440f2028(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_13 */
extern void T440f2027(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_12 */
extern void T440f2026(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_11 */
extern void T440f2025(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_10 */
extern void T440f2024(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_9 */
extern void T440f2023(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_8 */
extern void T440f2022(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_7 */
extern void T440f2021(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_6 */
extern void T440f2020(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_5 */
extern void T440f2019(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_4 */
extern void T440f2018(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_3 */
extern void T440f2017(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_2 */
extern void T440f2016(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_1 */
extern void T440f2015(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template */
extern unsigned char ge1028os24616;
extern T0* ge1028ov24616;
extern T0* T440f666(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yypgoto_template_2 */
extern void T440f2014(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template_1 */
extern void T440f2013(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template */
extern unsigned char ge1028os24606;
extern T0* ge1028ov24606;
extern T0* T440f664(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yypact_template_9 */
extern void T440f2012(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_8 */
extern void T440f2011(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_7 */
extern void T440f2010(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_6 */
extern void T440f2009(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_5 */
extern void T440f2008(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_4 */
extern void T440f2007(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_3 */
extern void T440f2006(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_2 */
extern void T440f2005(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_1 */
extern void T440f2004(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template */
extern unsigned char ge1028os24603;
extern T0* ge1028ov24603;
extern T0* T440f662(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yydefgoto_template_2 */
extern void T440f2003(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template_1 */
extern void T440f2002(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template */
extern unsigned char ge1028os24593;
extern T0* ge1028ov24593;
extern T0* T440f660(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yydefact_template_9 */
extern void T440f2001(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_8 */
extern void T440f2000(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_7 */
extern void T440f1999(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_6 */
extern void T440f1998(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_5 */
extern void T440f1997(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_4 */
extern void T440f1996(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_3 */
extern void T440f1995(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_2 */
extern void T440f1994(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_1 */
extern void T440f1993(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes2_template */
extern unsigned char ge1028os24592;
extern T0* ge1028ov24592;
extern T0* T440f658(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template */
extern unsigned char ge1028os24582;
extern T0* ge1028ov24582;
extern T0* T440f656(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template_9 */
extern void T440f1992(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_8 */
extern void T440f1991(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_7 */
extern void T440f1990(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_6 */
extern void T440f1989(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_5 */
extern void T440f1988(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_4 */
extern void T440f1987(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_3 */
extern void T440f1986(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_2 */
extern void T440f1985(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_1 */
extern void T440f1984(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template */
extern unsigned char ge1028os24576;
extern T0* ge1028ov24576;
extern T0* T440f654(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yyr1_template_5 */
extern void T440f1983(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_4 */
extern void T440f1982(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_3 */
extern void T440f1981(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_2 */
extern void T440f1980(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_1 */
extern void T440f1979(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytranslate_template */
extern unsigned char ge1028os24573;
extern T0* ge1028ov24573;
extern T0* T440f646(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytranslate_template_2 */
extern void T440f1978(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytranslate_template_1 */
extern void T440f1977(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_create_value_stacks */
extern void T440f959(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].make */
extern T0* T1193f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WRITABLE].make_empty */
extern T0* T1194c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].default_create */
extern T0* T1193c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].make */
extern T0* T1190f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].make_empty */
extern T0* T1192c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].default_create */
extern T0* T1190c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].make */
extern T0* T1184f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].make_empty */
extern T0* T1186c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].default_create */
extern T0* T1184c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].make */
extern T0* T1181f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].make_empty */
extern T0* T1183c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].default_create */
extern T0* T1181c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].make */
extern T0* T1175f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].make_empty */
extern T0* T1177c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].default_create */
extern T0* T1175c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].make */
extern T0* T1172f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].make_empty */
extern T0* T1174c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].default_create */
extern T0* T1172c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].make */
extern T0* T1170f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].make_empty */
extern T0* T1171c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].default_create */
extern T0* T1170c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make */
extern T0* T1164f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make_empty */
extern T0* T1166c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].default_create */
extern T0* T1164c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].make */
extern T0* T1162f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].make_empty */
extern T0* T1163c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].default_create */
extern T0* T1162c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].make */
extern T0* T1160f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].make_empty */
extern T0* T1161c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].default_create */
extern T0* T1160c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].make */
extern T0* T1156f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].make_empty */
extern T0* T1157c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].default_create */
extern T0* T1156c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T1153f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].make_empty */
extern T0* T1155c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].default_create */
extern T0* T1153c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].make */
extern T0* T1150f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].make_empty */
extern T0* T1152c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].default_create */
extern T0* T1150c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].make */
extern T0* T1148f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].make_empty */
extern T0* T1149c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].default_create */
extern T0* T1148c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].make */
extern T0* T1145f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].make_empty */
extern T0* T1147c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].default_create */
extern T0* T1145c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].make */
extern T0* T1139f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].make_empty */
extern T0* T1141c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].default_create */
extern T0* T1139c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].make */
extern T0* T1136f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].make_empty */
extern T0* T1138c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].default_create */
extern T0* T1136c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T1134f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].make_empty */
extern T0* T1135c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].default_create */
extern T0* T1134c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].make */
extern T0* T1128f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].make_empty */
extern T0* T1130c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].default_create */
extern T0* T1128c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].make */
extern T0* T1125f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].make_empty */
extern T0* T1127c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].default_create */
extern T0* T1125c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T1123f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].make_empty */
extern T0* T1124c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].default_create */
extern T0* T1123c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].make */
extern T0* T1121f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].make_empty */
extern T0* T1122c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].default_create */
extern T0* T1121c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].make */
extern T0* T1115f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].make_empty */
extern T0* T1117c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].default_create */
extern T0* T1115c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].make */
extern T0* T1112f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].make_empty */
extern T0* T1114c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].default_create */
extern T0* T1112c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].make */
extern T0* T1109f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].make_empty */
extern T0* T1111c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].default_create */
extern T0* T1109c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].make */
extern T0* T1106f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM].make_empty */
extern T0* T1108c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].default_create */
extern T0* T1106c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].make */
extern T0* T1103f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_ITEM].make_empty */
extern T0* T1105c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].default_create */
extern T0* T1103c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].make */
extern T0* T1100f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_LIST].make_empty */
extern T0* T1102c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].default_create */
extern T0* T1100c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].make */
extern T0* T1097f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].make_empty */
extern T0* T1099c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].default_create */
extern T0* T1097c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].make */
extern T0* T1095f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].make_empty */
extern T0* T1096c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].default_create */
extern T0* T1095c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T1087f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].make_empty */
extern T0* T1088c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].default_create */
extern T0* T1087c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].make */
extern T0* T1082f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].make_empty */
extern T0* T1083c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].default_create */
extern T0* T1082c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].make */
extern T0* T1074f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].make_empty */
extern T0* T1076c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].default_create */
extern T0* T1074c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].make */
extern T0* T1071f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].make_empty */
extern T0* T1073c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].default_create */
extern T0* T1071c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].make */
extern T0* T1065f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].make_empty */
extern T0* T1067c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].default_create */
extern T0* T1065c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].make */
extern T0* T1063f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].make_empty */
extern T0* T1064c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].default_create */
extern T0* T1063c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].make */
extern T0* T1061f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].make_empty */
extern T0* T1062c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].default_create */
extern T0* T1061c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].make */
extern T0* T1055f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].make_empty */
extern T0* T1057c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].default_create */
extern T0* T1055c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].make */
extern T0* T1049f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].make_empty */
extern T0* T1051c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].default_create */
extern T0* T1049c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].make */
extern T0* T1047f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].make_empty */
extern T0* T1048c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].default_create */
extern T0* T1047c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].make */
extern T0* T1042f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].make_empty */
extern T0* T1043c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].default_create */
extern T0* T1042c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].make */
extern T0* T1039f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].make_empty */
extern T0* T1041c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].default_create */
extern T0* T1039c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].make */
extern T0* T1033f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].make_empty */
extern T0* T1035c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].default_create */
extern T0* T1033c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T1030f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].make_empty */
extern T0* T1032c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].default_create */
extern T0* T1030c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].make */
extern T0* T1027f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].make_empty */
extern T0* T1029c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].default_create */
extern T0* T1027c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T1024f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T1026c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T1024c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].make */
extern T0* T1018f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].make_empty */
extern T0* T1020c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].default_create */
extern T0* T1018c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].make */
extern T0* T1016f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].make_empty */
extern T0* T1017c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].default_create */
extern T0* T1016c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].make */
extern T0* T1013f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].make_empty */
extern T0* T1015c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].default_create */
extern T0* T1013c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].make */
extern T0* T1006f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].make_empty */
extern T0* T1008c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].default_create */
extern T0* T1006c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].make */
extern T0* T1000f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].make_empty */
extern T0* T1002c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].default_create */
extern T0* T1000c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].make */
extern T0* T997f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].make_empty */
extern T0* T999c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].default_create */
extern T0* T997c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].make */
extern T0* T994f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].make_empty */
extern T0* T996c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].default_create */
extern T0* T994c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].make */
extern T0* T991f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].make_empty */
extern T0* T993c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].default_create */
extern T0* T991c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].make */
extern T0* T988f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].make_empty */
extern T0* T990c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].default_create */
extern T0* T988c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_ARGUMENT_LIST].make */
extern T0* T985f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_ARGUMENT_LIST].make_empty */
extern T0* T987c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_ARGUMENT_LIST].default_create */
extern T0* T985c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].make */
extern T0* T982f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].make_empty */
extern T0* T984c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].default_create */
extern T0* T982c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].make */
extern T0* T978f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].make_empty */
extern T0* T979c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].default_create */
extern T0* T978c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T975f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make_empty */
extern T0* T977c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].default_create */
extern T0* T975c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T970f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].make_empty */
extern T0* T971c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].default_create */
extern T0* T970c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T968f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T969c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T968c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T966f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].make_empty */
extern T0* T967c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T966c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].make */
extern T0* T963f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].make_empty */
extern T0* T965c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].default_create */
extern T0* T963c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].make */
extern T0* T960f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].make_empty */
extern T0* T962c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].default_create */
extern T0* T960c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].make */
extern T0* T957f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].make_empty */
extern T0* T959c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].default_create */
extern T0* T957c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].make */
extern T0* T955f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].make_empty */
extern T0* T956c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].default_create */
extern T0* T955c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].make */
extern T0* T952f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].make_empty */
extern T0* T954c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].default_create */
extern T0* T952c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].make */
extern T0* T949f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].make_empty */
extern T0* T951c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].default_create */
extern T0* T949c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].make */
extern T0* T946f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].make_empty */
extern T0* T948c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].default_create */
extern T0* T946c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].make */
extern T0* T943f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].make_empty */
extern T0* T945c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].default_create */
extern T0* T943c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].make */
extern T0* T941f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].make_empty */
extern T0* T942c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].default_create */
extern T0* T941c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].make */
extern T0* T938f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].make_empty */
extern T0* T940c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].default_create */
extern T0* T938c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].make */
extern T0* T936f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].make_empty */
extern T0* T937c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].default_create */
extern T0* T936c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].make */
extern T0* T933f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].make_empty */
extern T0* T935c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].default_create */
extern T0* T933c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].make */
extern T0* T930f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].make_empty */
extern T0* T932c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].default_create */
extern T0* T930c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].make */
extern T0* T927f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].make_empty */
extern T0* T929c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].default_create */
extern T0* T927c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].make */
extern T0* T925f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].make_empty */
extern T0* T926c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].default_create */
extern T0* T925c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].make */
extern T0* T922f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].make_empty */
extern T0* T924c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].default_create */
extern T0* T922c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].make */
extern T0* T919f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].make_empty */
extern T0* T921c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].default_create */
extern T0* T919c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].make */
extern T0* T916f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].make_empty */
extern T0* T918c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].default_create */
extern T0* T916c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BIT_CONSTANT].make */
extern T0* T913f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BIT_CONSTANT].make_empty */
extern T0* T915c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BIT_CONSTANT].default_create */
extern T0* T913c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].make */
extern T0* T911f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].make_empty */
extern T0* T912c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].default_create */
extern T0* T911c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].make */
extern T0* T909f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL].make_empty */
extern T0* T910c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].default_create */
extern T0* T909c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].make */
extern T0* T906f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].make_empty */
extern T0* T908c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].default_create */
extern T0* T906c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].make */
extern T0* T903f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].make_empty */
extern T0* T905c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].default_create */
extern T0* T903c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].make */
extern T0* T901f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD].make_empty */
extern T0* T902c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].default_create */
extern T0* T901c3(GE_context* ac);
/* ET_EIFFEL_PARSER.make_eiffel_scanner */
extern void T440f954(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.make_with_buffer */
extern void T440f958(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T440f964(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T440f964p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_build_tables */
extern void T440f980(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_acclist_template */
extern unsigned char ge1032os25375;
extern T0* ge1032ov25375;
extern T0* T440f680(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_fixed_array */
extern T0* T440f921(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_3 */
extern void T440f2130(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_array_subcopy */
extern void T440f2135(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.yy_acclist_template_2 */
extern void T440f2129(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_1 */
extern void T440f2128(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template */
extern unsigned char ge1032os25371;
extern T0* ge1032ov25371;
extern T0* T440f679(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_accept_template_3 */
extern void T440f2127(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template_2 */
extern void T440f2126(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template_1 */
extern void T440f2125(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_meta_template */
extern unsigned char ge1032os25370;
extern T0* ge1032ov25370;
extern T0* T440f678(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template */
extern unsigned char ge1032os25367;
extern T0* ge1032ov25367;
extern T0* T440f677(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template_2 */
extern void T440f2124(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_1 */
extern void T440f2123(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template */
extern unsigned char ge1032os25363;
extern T0* ge1032ov25363;
extern T0* T440f676(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_def_template_3 */
extern void T440f2122(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template_2 */
extern void T440f2121(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template_1 */
extern void T440f2120(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template */
extern unsigned char ge1032os25359;
extern T0* ge1032ov25359;
extern T0* T440f675(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_base_template_3 */
extern void T440f2119(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template_2 */
extern void T440f2118(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template_1 */
extern void T440f2117(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template */
extern unsigned char ge1032os25343;
extern T0* ge1032ov25343;
extern T0* T440f674(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template_15 */
extern void T440f2116(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_14 */
extern void T440f2115(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_13 */
extern void T440f2114(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_12 */
extern void T440f2113(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_11 */
extern void T440f2112(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_10 */
extern void T440f2111(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_9 */
extern void T440f2110(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_8 */
extern void T440f2109(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_7 */
extern void T440f2108(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_6 */
extern void T440f2107(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_5 */
extern void T440f2106(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_4 */
extern void T440f2105(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_3 */
extern void T440f2104(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_2 */
extern void T440f2103(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_1 */
extern void T440f2102(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template */
extern unsigned char ge1032os25327;
extern T0* ge1032ov25327;
extern T0* T440f673(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_nxt_template_15 */
extern void T440f2101(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_14 */
extern void T440f2100(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_13 */
extern void T440f2099(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_12 */
extern void T440f2098(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_11 */
extern void T440f2097(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_10 */
extern void T440f2096(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_9 */
extern void T440f2095(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_8 */
extern void T440f2094(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_7 */
extern void T440f2093(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_6 */
extern void T440f2092(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_5 */
extern void T440f2091(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_4 */
extern void T440f2090(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_3 */
extern void T440f2089(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_2 */
extern void T440f2088(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_1 */
extern void T440f2087(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.empty_buffer */
extern T0* T440f672(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T898c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].set_internal_cursor */
extern void T898f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_cursor */
extern T0* T898f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T1488c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].make */
extern T0* T897c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].set_internal_cursor */
extern void T897f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_cursor */
extern T0* T897f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].make */
extern T0* T1487c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].make */
extern T0* T896c10(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].make */
extern T0* T1484f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].make_empty */
extern T0* T1483c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].default_create */
extern T0* T1484c3(GE_context* ac);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T895c10(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T1482f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].make_empty */
extern T0* T1481c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].default_create */
extern T0* T1482c3(GE_context* ac);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].make */
extern T0* T894c8(GE_context* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].make */
extern T0* T893c8(GE_context* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T892c9(GE_context* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T891c9(GE_context* ac, T6 a1);
/* KL_STANDARD_FILES.input */
extern unsigned char ge259os13338;
extern T0* ge259ov13338;
extern T0* T130f3(GE_context* ac, T0* C);
/* KL_STDIN_FILE.make */
extern T0* T888c24(GE_context* ac);
/* KL_STDIN_FILE.make_open_stdin */
extern void T888f28(GE_context* ac, T0* C, T0* a1);
/* KL_STDIN_FILE.set_read_mode */
extern void T888f31(GE_context* ac, T0* C);
/* KL_STDIN_FILE.console_def */
extern T14 T888f16(GE_context* ac, T0* C, T6 a1);
/* KL_STDIN_FILE.make_with_name */
extern void T888f30(GE_context* ac, T0* C, T0* a1);
/* KL_STDIN_FILE.default_pointer */
extern T14 T888f20(GE_context* ac, T0* C);
/* KL_STDIN_FILE.set_name */
extern void T888f32(GE_context* ac, T0* C, T0* a1);
/* KL_STDIN_FILE.buffered_file_info */
extern T0* T888f23(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.std */
extern T0* T440f653(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.make */
extern void T440f952p1(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.make */
extern T0* T439c7(GE_context* ac);
/* ET_MASTER_CLASS_CHECKER.tokens */
extern T0* T439f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.make */
extern T0* T438c133(GE_context* ac);
/* ET_EIFFEL_PREPARSER.make_eiffel_scanner */
extern void T438f134(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.make_with_buffer */
extern void T438f135(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T438f136(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T438f136p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_build_tables */
extern void T438f138(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template */
extern unsigned char ge1030os23095;
extern T0* ge1030ov23095;
extern T0* T438f87(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_fixed_array */
extern T0* T438f90(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_4 */
extern void T438f165(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_array_subcopy */
extern void T438f177(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PREPARSER.integer_array_ */
extern T0* T438f55(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_3 */
extern void T438f164(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_2 */
extern void T438f163(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_1 */
extern void T438f162(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template */
extern unsigned char ge1030os23091;
extern T0* ge1030ov23091;
extern T0* T438f80(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_accept_template_3 */
extern void T438f161(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template_2 */
extern void T438f160(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template_1 */
extern void T438f159(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_meta_template */
extern unsigned char ge1030os23090;
extern T0* ge1030ov23090;
extern T0* T438f77(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template */
extern unsigned char ge1030os23087;
extern T0* ge1030ov23087;
extern T0* T438f71(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template_2 */
extern void T438f158(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_1 */
extern void T438f157(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template */
extern unsigned char ge1030os23083;
extern T0* ge1030ov23083;
extern T0* T438f69(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_def_template_3 */
extern void T438f156(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_2 */
extern void T438f155(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_1 */
extern void T438f154(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template */
extern unsigned char ge1030os23079;
extern T0* ge1030ov23079;
extern T0* T438f67(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_base_template_3 */
extern void T438f153(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template_2 */
extern void T438f152(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template_1 */
extern void T438f151(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template */
extern unsigned char ge1030os23068;
extern T0* ge1030ov23068;
extern T0* T438f58(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template_10 */
extern void T438f150(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_9 */
extern void T438f149(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_8 */
extern void T438f148(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_7 */
extern void T438f147(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_6 */
extern void T438f146(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_5 */
extern void T438f145(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_4 */
extern void T438f144(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_3 */
extern void T438f143(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_2 */
extern void T438f142(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_1 */
extern void T438f141(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template */
extern unsigned char ge1030os23057;
extern T0* ge1030ov23057;
extern T0* T438f89(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_10 */
extern void T438f175(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_9 */
extern void T438f174(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_8 */
extern void T438f173(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_7 */
extern void T438f172(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_6 */
extern void T438f171(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_5 */
extern void T438f170(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_4 */
extern void T438f169(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_3 */
extern void T438f168(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_2 */
extern void T438f167(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_1 */
extern void T438f166(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.empty_buffer */
extern T0* T438f81(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.std */
extern T0* T438f88(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.activate_processors */
extern void T64f197(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.activate_processors */
extern void T61f194(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.preparse_recursive */
extern void T70f199(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.preparse_recursive */
extern void T70f199p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T70f199p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T70f199p1ac2(void);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T70f199p1ac3(T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T70f199p1ac4(T0* a1);
/* Creation of agent #5 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T70f199p1ac5(void);
/* Creation of agent #6 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T70f199p1ac6(void);
/* Creation of agent #7 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T70f199p1ac7(void);
/* Creation of agent #8 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T70f199p1ac8(void);
/* ET_ECF_LIBRARY.preparse */
extern void T189f188(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.preparse */
extern void T189f188p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.preparse */
extern T0* T189f188p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.preparse */
extern T0* T189f188p1ac2(void);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.preparse */
extern T0* T189f188p1ac3(void);
/* Creation of agent #4 in feature ET_ECF_LIBRARY.preparse */
extern T0* T189f188p1ac4(T0* a1);
/* ET_LIBRARY.preparse */
extern void T460f162(GE_context* ac, T0* C);
/* ET_LIBRARY.preparse */
extern void T460f162p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LIBRARY.preparse */
extern T0* T460f162p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.preparse */
extern T0* T460f162p1ac2(void);
/* Creation of agent #3 in feature ET_LIBRARY.preparse */
extern T0* T460f162p1ac3(void);
/* Creation of agent #4 in feature ET_LIBRARY.preparse */
extern T0* T460f162p1ac4(T0* a1);
/* ET_LACE_SYSTEM.preparse */
extern void T70f228(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.preparse */
extern T0* T70f228ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.preparse */
extern T0* T70f228ac2(void);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.preparse */
extern T0* T70f228ac3(void);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.preparse */
extern T0* T70f228ac4(T0* a1);
/* ET_ECF_SYSTEM.preparse_recursive */
extern void T64f198(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.preparse_recursive */
extern void T64f198p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T64f198p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T64f198p1ac2(void);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T64f198p1ac3(T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T64f198p1ac4(T0* a1);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T64f198p1ac5(void);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T64f198p1ac6(void);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T64f198p1ac7(void);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T64f198p1ac8(void);
/* ET_ECF_SYSTEM.preparse */
extern void T64f225(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.preparse */
extern T0* T64f225ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.preparse */
extern T0* T64f225ac2(void);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.preparse */
extern T0* T64f225ac3(void);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.preparse */
extern T0* T64f225ac4(T0* a1);
/* ET_XACE_SYSTEM.preparse_recursive */
extern void T61f195(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.preparse_recursive */
extern void T61f195p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T61f195p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T61f195p1ac2(void);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T61f195p1ac3(T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T61f195p1ac4(T0* a1);
/* Creation of agent #5 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T61f195p1ac5(void);
/* Creation of agent #6 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T61f195p1ac6(void);
/* Creation of agent #7 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T61f195p1ac7(void);
/* Creation of agent #8 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T61f195p1ac8(void);
/* ET_XACE_SYSTEM.preparse */
extern void T61f236(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.preparse */
extern T0* T61f236ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.preparse */
extern T0* T61f236ac2(void);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.preparse */
extern T0* T61f236ac3(void);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.preparse */
extern T0* T61f236ac4(T0* a1);
/* ET_LACE_SYSTEM.print_time */
extern void T70f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.out */
extern T0* T436f9(GE_context* ac, T0* C);
/* DT_DATE_TIME_DURATION.append_to_string */
extern void T436f18(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.append_time_to_string */
extern void T436f23(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.integer_ */
extern T0* T436f14(GE_context* ac, T0* C);
/* DT_DATE_TIME_DURATION.append_date_to_string */
extern void T436f22(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.set_canonical */
extern void T436f17(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.make_canonical_from_dates */
extern void T436f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.make_precise */
extern void T436f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise */
extern T0* T436c16(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise_time_duration */
extern void T436f20(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_DATE_TIME_DURATION.make_date_duration */
extern void T436f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.days_in_current_month */
extern T6 T241f43(GE_context* ac, T0* C);
/* DT_DATE_TIME.days_in_month */
extern T6 T241f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.leap_year */
extern T1 T241f38(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.days_in_previous_month */
extern T6 T241f42(GE_context* ac, T0* C);
/* DT_DATE_TIME.is_less */
extern T1 T241f41(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.millisecond_count */
extern T6 T241f40(GE_context* ac, T0* C);
/* DT_DATE_TIME.day */
extern T6 T241f10(GE_context* ac, T0* C);
/* DT_DATE_TIME.month */
extern T6 T241f9(GE_context* ac, T0* C);
/* DT_DATE_TIME.year */
extern T6 T241f8(GE_context* ac, T0* C);
/* DT_DATE_TIME.add_duration */
extern void T241f62(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.add_milliseconds */
extern void T241f66(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_normalized_time_storage */
extern void T241f69(GE_context* ac, T0* C, T7 a1);
/* DT_DATE_TIME.add_days */
extern void T241f70(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_from_epoch_days */
extern void T241f68(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.epoch_to_y2k_days */
extern unsigned char ge337os17218;
extern T6 ge337ov17218;
extern T6 T241f46(GE_context* ac, T0* C);
/* DT_DATE_TIME.epoch_days */
extern T6 T241f11(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_days_at_month */
extern unsigned char ge337os17217;
extern T6 ge337ov17217;
extern T6 T241f24(GE_context* ac, T0* C);
/* DT_DATE_TIME.days_at_month */
extern T6 T241f23(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.epoch_leap_years */
extern unsigned char ge337os17216;
extern T6 ge337ov17216;
extern T6 T241f22(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.div */
extern T6 T232f3(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.integer_ */
extern T0* T241f21(GE_context* ac, T0* C);
/* DT_DATE_TIME.set_day */
extern void T241f67(GE_context* ac, T0* C, T6 a1);
/* INTEGER_64.to_integer */
extern T6 T7f7(GE_context* ac, T7* C);
/* DT_DATE_TIME_DURATION.millisecond_count */
extern T6 T436f15(GE_context* ac, T0* C);
/* DT_DATE_TIME.add_years_months_days */
extern void T241f65(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_time */
extern void T241f61(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.set_date */
extern void T241f60(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.tmp_date_time */
extern unsigned char ge1386os17412;
extern T0* ge1386ov17412;
extern T0* T436f8(GE_context* ac, T0* C);
/* DT_DATE_TIME.make */
extern T0* T241c59(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* DT_DATE_TIME.make_time */
extern void T241f64(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.make_date */
extern void T241f63(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.minus */
extern T0* T241f12(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.duration */
extern T0* T241f16(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.millisecond */
extern T6 T241f7(GE_context* ac, T0* C);
/* DT_DATE_TIME.second */
extern T6 T241f6(GE_context* ac, T0* C);
/* DT_DATE_TIME.minute */
extern T6 T241f5(GE_context* ac, T0* C);
/* DT_DATE_TIME.hour */
extern T6 T241f4(GE_context* ac, T0* C);
/* DT_DATE_TIME.day_count */
extern T6 T241f3(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.print_time */
extern void T64f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.print_time */
extern void T61f193(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.register_class */
extern void T70f295(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_id */
extern void T82f225(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.register_class */
extern void T64f299(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.register_class */
extern void T61f304(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.register_class */
extern void T33f225(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.register_inline_constant */
extern void T70f301(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.set_id */
extern void T1273f25(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.register_inline_constant */
extern void T64f305(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.register_inline_constant */
extern void T61f309(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.register_inline_constant */
extern void T33f230(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_default_create_seed */
extern void T70f312(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_default_create_seed */
extern void T64f328(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_default_create_seed */
extern void T61f321(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_default_create_seed */
extern void T33f240(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_copy_seed */
extern void T70f313(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_copy_seed */
extern void T64f329(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_copy_seed */
extern void T61f322(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_copy_seed */
extern void T33f241(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_is_equal_seed */
extern void T70f314(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_is_equal_seed */
extern void T64f330(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_is_equal_seed */
extern void T61f323(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_is_equal_seed */
extern void T33f242(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_routine_call_seed */
extern void T70f315(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_routine_call_seed */
extern void T64f331(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_routine_call_seed */
extern void T61f324(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_routine_call_seed */
extern void T33f243(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_function_item_seed */
extern void T70f316(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_function_item_seed */
extern void T64f332(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_function_item_seed */
extern void T61f325(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_function_item_seed */
extern void T33f244(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_dispose_seed */
extern void T70f317(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_dispose_seed */
extern void T64f333(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_dispose_seed */
extern void T61f326(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_dispose_seed */
extern void T33f245(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_iterable_new_cursor_seed */
extern void T70f318(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iterable_new_cursor_seed */
extern void T64f334(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_iterable_new_cursor_seed */
extern void T61f327(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iterable_new_cursor_seed */
extern void T33f246(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_iteration_cursor_after_seed */
extern void T70f319(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iteration_cursor_after_seed */
extern void T64f335(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_iteration_cursor_after_seed */
extern void T61f328(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iteration_cursor_after_seed */
extern void T33f247(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_iteration_cursor_forth_seed */
extern void T70f320(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iteration_cursor_forth_seed */
extern void T64f336(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_iteration_cursor_forth_seed */
extern void T61f329(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iteration_cursor_forth_seed */
extern void T33f248(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.register_feature */
extern void T70f300(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.register_feature */
extern void T64f304(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.register_feature */
extern void T61f308(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.register_feature */
extern void T33f229(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_error_handler */
extern void T70f191(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_error_handler */
extern void T64f190(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_error_handler */
extern void T61f187(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_error_handler */
extern void T33f250(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_throwing_exception */
extern void T119f7(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_throwing_exception */
extern void T118f7(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_throwing_exception */
extern void T117f11(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_throwing_exception */
extern void T116f7(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_throwing_exception */
extern void T115f7(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_throwing_exception */
extern void T114f7(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_throwing_exception */
extern void T113f7(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_throwing_exception */
extern void T112f7(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_throwing_exception */
extern void T111f7(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_throwing_exception */
extern void T110f7(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_throwing_exception */
extern void T109f7(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_throwing_exception */
extern void T108f7(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_throwing_exception */
extern void T107f7(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_throwing_exception */
extern void T106f7(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_throwing_exception */
extern void T105f7(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_throwing_exception */
extern void T104f7(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_throwing_exception */
extern void T103f7(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_throwing_exception */
extern void T100f10(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_throwing_exception */
extern void T99f13(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_throwing_exception */
extern void T98f8(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_throwing_exception */
extern void T97f10(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_throwing_exception */
extern void T96f8(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_throwing_exception */
extern void T95f8(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_throwing_exception */
extern void T94f11(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_throwing_exception */
extern void T92f7(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_throwing_exception */
extern void T90f11(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_throwing_exception */
extern void T88f7(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_exception_trace */
extern void T119f8(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_exception_trace */
extern void T118f8(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_exception_trace */
extern void T117f12(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_exception_trace */
extern void T116f8(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_exception_trace */
extern void T115f8(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_exception_trace */
extern void T114f8(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_exception_trace */
extern void T113f8(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_exception_trace */
extern void T112f8(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_exception_trace */
extern void T111f8(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_exception_trace */
extern void T110f8(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_exception_trace */
extern void T109f8(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_exception_trace */
extern void T108f8(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_exception_trace */
extern void T107f8(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_exception_trace */
extern void T106f8(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_exception_trace */
extern void T105f8(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_exception_trace */
extern void T104f8(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_exception_trace */
extern void T103f8(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_exception_trace */
extern void T100f11(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_exception_trace */
extern void T99f16(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_exception_trace */
extern void T98f10(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_exception_trace */
extern void T97f12(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_exception_trace */
extern void T96f10(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_exception_trace */
extern void T95f10(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_exception_trace */
extern void T94f9(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_exception_trace */
extern void T92f8(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_exception_trace */
extern void T90f12(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_exception_trace */
extern void T88f8(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_description */
extern void T119f9(GE_context* ac, T0* C, T0* a1);
/* C_STRING.set_count */
extern void T537f8(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.utf_32_string_into_utf_8_0_pointer */
extern void T535f9(GE_context* ac, T535* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_description */
extern void T118f9(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_description */
extern void T117f13(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_description */
extern void T116f9(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_description */
extern void T115f9(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_description */
extern void T114f9(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_description */
extern void T113f9(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_description */
extern void T112f9(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_description */
extern void T111f9(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_description */
extern void T110f9(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_description */
extern void T109f9(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_description */
extern void T108f9(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_description */
extern void T107f9(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_description */
extern void T106f9(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_description */
extern void T105f9(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_description */
extern void T104f9(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_description */
extern void T103f9(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_description */
extern void T100f12(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_description */
extern void T99f17(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_description */
extern void T98f11(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_description */
extern void T97f13(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_description */
extern void T96f11(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_description */
extern void T95f11(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_description */
extern void T94f12(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_description */
extern void T92f9(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_description */
extern void T90f13(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_description */
extern void T88f9(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_recipient_name */
extern void T119f10(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_recipient_name */
extern void T118f10(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_recipient_name */
extern void T117f14(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_recipient_name */
extern void T116f10(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_recipient_name */
extern void T115f10(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_recipient_name */
extern void T114f10(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_recipient_name */
extern void T113f10(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_recipient_name */
extern void T112f10(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_recipient_name */
extern void T111f10(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_recipient_name */
extern void T110f10(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_recipient_name */
extern void T109f10(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_recipient_name */
extern void T108f10(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_recipient_name */
extern void T107f10(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_recipient_name */
extern void T106f10(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_recipient_name */
extern void T105f10(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_recipient_name */
extern void T104f10(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_recipient_name */
extern void T103f10(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_recipient_name */
extern void T100f13(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_recipient_name */
extern void T99f18(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_recipient_name */
extern void T98f12(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_recipient_name */
extern void T97f14(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_recipient_name */
extern void T96f12(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_recipient_name */
extern void T95f12(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_recipient_name */
extern void T94f13(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_recipient_name */
extern void T92f10(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_recipient_name */
extern void T90f14(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_recipient_name */
extern void T88f10(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_type_name */
extern void T119f11(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_type_name */
extern void T118f11(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_type_name */
extern void T117f15(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_type_name */
extern void T116f11(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_type_name */
extern void T115f11(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_type_name */
extern void T114f11(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_type_name */
extern void T113f11(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_type_name */
extern void T112f11(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_type_name */
extern void T111f11(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_type_name */
extern void T110f11(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_type_name */
extern void T109f11(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_type_name */
extern void T108f11(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_type_name */
extern void T107f11(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_type_name */
extern void T106f11(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_type_name */
extern void T105f11(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_type_name */
extern void T104f11(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_type_name */
extern void T103f11(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_type_name */
extern void T100f14(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_type_name */
extern void T99f19(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_type_name */
extern void T98f13(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_type_name */
extern void T97f15(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_type_name */
extern void T96f13(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_type_name */
extern void T95f13(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_type_name */
extern void T94f14(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_type_name */
extern void T92f11(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_type_name */
extern void T90f15(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_type_name */
extern void T88f11(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T1832f3(GE_context* ac, T0* C, T6 a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T1830f2(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T1828f3(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.arguments */
extern T0* T182f89(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.target */
extern T0* T1428f5(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.target */
extern T0* T292f15(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.position */
extern T0* T1242f40(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.position */
extern T0* T904f9(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.position */
extern T0* T859f59(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.name */
extern T0* T1249f40(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.name */
extern T0* T1248f40(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_freeop */
extern T1 T1242f8(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_freeop */
extern T1 T1239f28(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_freeop */
extern T1 T928f22(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.free_operator_name */
extern T0* T1242f9(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.free_operator_name */
extern T0* T1239f19(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.free_operator_name */
extern T0* T833f8(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.selected_count */
extern T6 T1515f25(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.selected_count */
extern T6 T1314f26(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.has_replication */
extern T1 T1515f22(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.has_replication */
extern T1 T1314f23(GE_context* ac, T0* C);
/* ET_REPLICATED_FEATURE.replicated_feature */
extern T0* T1518f4(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.replicated_feature */
extern T0* T1515f23(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.replicated_feature */
extern T0* T1314f24(GE_context* ac, T0* C);
/* ET_REPLICATED_FEATURE.first_feature */
extern T0* T1518f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].first */
extern T0* T1519f8(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.first_feature */
extern T0* T1515f24(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.first_feature */
extern T0* T1314f25(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.last_position */
extern T0* T1895f4(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.last_position */
extern T0* T1791f43(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.text */
extern T0* T1791f44(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_position */
extern T0* T1213f36(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.last_position */
extern T0* T1212f36(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.last_position */
extern T0* T1211f32(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.last_position */
extern T0* T1210f32(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_position */
extern T0* T1208f34(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_position */
extern T0* T1207f34(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.last_position */
extern T0* T1206f59(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.last_position */
extern T0* T1205f59(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_position */
extern T0* T1204f59(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_position */
extern T0* T1203f59(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_position */
extern T0* T1202f59(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_position */
extern T0* T1201f31(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.last_position */
extern T0* T1200f35(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_position */
extern T0* T1199f37(GE_context* ac, T0* C);
/* ET_VOID.last_position */
extern T0* T950f27(GE_context* ac, T0* C);
/* ET_BIT_CONSTANT.last_position */
extern T0* T914f30(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.last_position */
extern T0* T907f17(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_position */
extern T0* T832f31(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.last_position */
extern T0* T651f101(GE_context* ac, T0* C);
/* ET_KEYWORD.last_position */
extern T0* T397f35(GE_context* ac, T0* C);
/* ET_SYMBOL.last_position */
extern T0* T346f71(GE_context* ac, T0* C);
/* ET_RESULT.last_position */
extern T0* T313f28(GE_context* ac, T0* C);
/* ET_CURRENT.last_position */
extern T0* T286f27(GE_context* ac, T0* C);
/* ET_IDENTIFIER.last_position */
extern T0* T182f101(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.full_name */
extern T0* T799f31(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.relative_name */
extern T0* T799f46(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_CLUSTER.relative_name */
extern T0* T799f46p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.relative_name */
extern T0* T189f102(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.string_ */
extern T0* T189f103(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].is_empty */
extern T1 T852f10(GE_context* ac, T0* C);
/* ET_NONE_GROUP.full_name */
extern T0* T506f13(GE_context* ac, T0* C, T2 a1);
/* ET_NONE_GROUP.relative_name */
extern T0* T506f17(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.string_ */
extern T0* T506f23(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.full_name */
extern T0* T411f30(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_CLUSTER.relative_name */
extern T0* T411f47(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_CLUSTER.relative_name */
extern T0* T411f47p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.full_name */
extern T0* T394f14(GE_context* ac, T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.relative_name */
extern T0* T394f18(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.string_ */
extern T0* T394f24(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.full_name */
extern T0* T215f47(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_CLUSTER.relative_name */
extern T0* T215f50(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_CLUSTER.relative_name */
extern T0* T215f50p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.parent */
extern T0* T506f14(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.parent */
extern T0* T394f15(GE_context* ac, T0* C);
/* ET_NONE_GROUP.absolute_pathname */
extern T0* T506f15(GE_context* ac, T0* C);
/* ET_NONE_GROUP.file_system */
extern T0* T506f21(GE_context* ac, T0* C);
/* ET_NONE_GROUP.unix_file_system */
extern T0* T506f27(GE_context* ac, T0* C);
/* ET_NONE_GROUP.windows_file_system */
extern T0* T506f26(GE_context* ac, T0* C);
/* ET_NONE_GROUP.operating_system */
extern T0* T506f25(GE_context* ac, T0* C);
/* ET_NONE_GROUP.full_pathname */
extern T0* T506f20(GE_context* ac, T0* C);
/* ET_NONE_GROUP.pathname */
extern T0* T506f24(GE_context* ac, T0* C);
/* ET_NONE_GROUP.execution_environment */
extern T0* T506f19(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.absolute_pathname */
extern T0* T394f16(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.file_system */
extern T0* T394f22(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.unix_file_system */
extern T0* T394f28(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.windows_file_system */
extern T0* T394f27(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.operating_system */
extern T0* T394f26(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.full_pathname */
extern T0* T394f21(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.pathname */
extern T0* T394f25(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.execution_environment */
extern T0* T394f20(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.kind_lower_name */
extern T0* T799f38(GE_context* ac, T0* C);
/* ET_LIBRARY.kind_lower_name */
extern T0* T460f93(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.kind_lower_name */
extern T0* T411f37(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.kind_lower_name */
extern T0* T215f48(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.kind_lower_name */
extern T0* T189f104(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T1427f23(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T1218f46(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T1090f44(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].item */
extern T0* T1448f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].item */
extern T0* T873f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].item */
extern T0* T633f9(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.is_flattened_adapted */
extern T1 T1237f52(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_adapted */
extern T1 T1236f52(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_adapted */
extern T1 T1234f56(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_adapted */
extern T1 T1233f59(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_adapted */
extern T1 T1232f58(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_adapted */
extern T1 T534f49(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_adapted */
extern T1 T528f52(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_adapted */
extern T1 T366f36(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_adapted */
extern T1 T365f36(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_adapted */
extern T1 T363f37(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_adapted */
extern T1 T331f39(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_adapted */
extern T1 T260f37(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.immediate_feature */
extern T0* T1515f12(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.immediate_feature */
extern T0* T1314f11(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_immediate_feature */
extern T0* T1237f46(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_immediate_feature */
extern T0* T1236f46(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_immediate_feature */
extern T0* T1234f50(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_immediate_feature */
extern T0* T1233f53(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_immediate_feature */
extern T0* T1232f52(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_immediate_feature */
extern T0* T534f43(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_immediate_feature */
extern T0* T528f46(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_immediate_feature */
extern T0* T366f30(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_immediate_feature */
extern T0* T365f30(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_immediate_feature */
extern T0* T363f31(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_immediate_feature */
extern T0* T331f33(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_immediate_feature */
extern T0* T260f63(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.adapted_feature */
extern T0* T1515f13(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.adapted_feature */
extern T0* T1314f12(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_adapted_feature */
extern T0* T1237f47(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_adapted_feature */
extern T0* T1236f47(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_adapted_feature */
extern T0* T1234f51(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_adapted_feature */
extern T0* T1233f54(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_adapted_feature */
extern T0* T1232f53(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_adapted_feature */
extern T0* T534f44(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_adapted_feature */
extern T0* T528f47(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_adapted_feature */
extern T0* T366f31(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_adapted_feature */
extern T0* T365f31(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_adapted_feature */
extern T0* T363f32(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_adapted_feature */
extern T0* T331f34(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_adapted_feature */
extern T0* T260f32(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.is_redeclared */
extern T1 T1314f13(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_redeclared */
extern T1 T1237f48(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_redeclared */
extern T1 T1236f48(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_redeclared */
extern T1 T1234f52(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_redeclared */
extern T1 T1233f55(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_redeclared */
extern T1 T1232f54(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_redeclared */
extern T1 T534f45(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_redeclared */
extern T1 T528f48(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_redeclared */
extern T1 T366f32(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_redeclared */
extern T1 T365f32(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_redeclared */
extern T1 T363f33(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_redeclared */
extern T1 T331f35(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_redeclared */
extern T1 T260f33(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.redeclared_feature */
extern T0* T1515f16(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.redeclared_feature */
extern T0* T1314f14(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_redeclared_feature */
extern T0* T1237f49(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_redeclared_feature */
extern T0* T1236f49(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_redeclared_feature */
extern T0* T1234f53(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_redeclared_feature */
extern T0* T1233f56(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_redeclared_feature */
extern T0* T1232f55(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_redeclared_feature */
extern T0* T534f46(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_redeclared_feature */
extern T0* T528f49(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T366f33(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T365f33(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T363f34(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T331f36(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_redeclared_feature */
extern T0* T260f34(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_inherited */
extern T1 T1515f18(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_inherited */
extern T1 T1237f50(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_inherited */
extern T1 T1236f50(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_inherited */
extern T1 T1234f54(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_inherited */
extern T1 T1233f57(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_inherited */
extern T1 T1232f56(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_inherited */
extern T1 T534f47(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_inherited */
extern T1 T528f50(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_inherited */
extern T1 T366f34(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_inherited */
extern T1 T365f34(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_inherited */
extern T1 T363f35(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_inherited */
extern T1 T331f37(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_inherited */
extern T1 T260f35(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.inherited_feature */
extern T0* T1515f9(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.inherited_feature */
extern T0* T1314f16(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_inherited_feature */
extern T0* T1237f51(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_inherited_feature */
extern T0* T1236f51(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_inherited_feature */
extern T0* T1234f55(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_inherited_feature */
extern T0* T1233f58(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_inherited_feature */
extern T0* T1232f57(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_inherited_feature */
extern T0* T534f48(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_inherited_feature */
extern T0* T528f51(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_inherited_feature */
extern T0* T366f35(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_inherited_feature */
extern T0* T365f35(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_inherited_feature */
extern T0* T363f36(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_inherited_feature */
extern T0* T331f38(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_inherited_feature */
extern T0* T260f36(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_feature */
extern T0* T1237f44(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_feature */
extern T0* T1236f44(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_feature */
extern T0* T1234f48(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_feature */
extern T0* T1233f51(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_feature */
extern T0* T1232f50(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_feature */
extern T0* T534f41(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_feature */
extern T0* T528f44(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_feature */
extern T0* T366f28(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_feature */
extern T0* T365f28(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_feature */
extern T0* T363f29(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_feature */
extern T0* T331f31(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_feature */
extern T0* T260f61(GE_context* ac, T0* C);
/* ET_TAGGED_ASSERTION.position */
extern T0* T1283f4(GE_context* ac, T0* C);
/* ET_TAGGED_ASSERTION.assertion */
extern T0* T1283f3(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1279f21(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1278f24(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1277f23(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1276f22(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1275f25(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1274f24(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.assertion */
extern T0* T1273f12(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.assertion */
extern T0* T1272f17(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.assertion */
extern T0* T1271f10(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.assertion */
extern T0* T1270f12(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.assertion */
extern T0* T1269f11(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.assertion */
extern T0* T1266f12(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.assertion */
extern T0* T1265f10(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.assertion */
extern T0* T1264f10(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.assertion */
extern T0* T1263f10(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.assertion */
extern T0* T1262f10(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.assertion */
extern T0* T1261f14(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.assertion */
extern T0* T1213f21(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.assertion */
extern T0* T1212f21(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.assertion */
extern T0* T1211f22(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.assertion */
extern T0* T1210f22(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.assertion */
extern T0* T1208f23(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.assertion */
extern T0* T1207f23(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.assertion */
extern T0* T1206f43(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.assertion */
extern T0* T1205f43(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.assertion */
extern T0* T1204f43(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.assertion */
extern T0* T1203f43(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.assertion */
extern T0* T1202f43(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.assertion */
extern T0* T1201f23(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.assertion */
extern T0* T1200f27(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.assertion */
extern T0* T1199f22(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.assertion */
extern T0* T1176f16(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.assertion */
extern T0* T1173f14(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.assertion */
extern T0* T1154f12(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.assertion */
extern T0* T1140f16(GE_context* ac, T0* C);
/* ET_CALL_AGENT.assertion */
extern T0* T992f15(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.assertion */
extern T0* T989f12(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.assertion */
extern T0* T961f21(GE_context* ac, T0* C);
/* ET_VOID.assertion */
extern T0* T950f18(GE_context* ac, T0* C);
/* ET_BIT_CONSTANT.assertion */
extern T0* T914f20(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.assertion */
extern T0* T832f22(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.assertion */
extern T0* T748f14(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.assertion */
extern T0* T326f13(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.assertion */
extern T0* T322f10(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.assertion */
extern T0* T321f10(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.assertion */
extern T0* T320f11(GE_context* ac, T0* C);
/* ET_RESULT.assertion */
extern T0* T313f19(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.assertion */
extern T0* T294f17(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T292f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T291f14(GE_context* ac, T0* C);
/* ET_CURRENT.assertion */
extern T0* T286f19(GE_context* ac, T0* C);
/* ET_IDENTIFIER.assertion */
extern T0* T182f82(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.like_keyword */
extern T0* T1249f39(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.manifest_string */
extern T0* T1201f18(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.manifest_string */
extern T0* T1200f22(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.manifest_string */
extern T0* T832f17(GE_context* ac, T0* C);
/* ET_CONVERT_FUNCTION.is_convert_from */
extern T1 T1229f7(GE_context* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_from */
extern T1 T470f4(GE_context* ac, T0* C);
/* ET_CONVERT_PROCEDURE.is_convert_to */
extern T1 T1230f7(GE_context* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_to */
extern T1 T470f5(GE_context* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T1426f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_generic_named_type */
extern T0* T440f948(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.resolved_syntactical_constraint */
extern T0* T1025f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_actual_parameter_list */
extern T0* T440f949(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.item */
extern T0* T1025f11(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.position */
extern T0* T1025f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint */
extern T0* T1249f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint */
extern T0* T1248f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint */
extern T0* T1247f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.resolved_syntactical_constraint */
extern T0* T1223f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.resolved_syntactical_constraint */
extern T0* T1222f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T1219f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_named_type */
extern T0* T440f947(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint */
extern T0* T504f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.position */
extern T0* T1426f6(GE_context* ac, T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T1225f4(GE_context* ac, T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.position */
extern T0* T1224f4(GE_context* ac, T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.position */
extern T0* T1219f5(GE_context* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.type */
extern T0* T1426f5(GE_context* ac, T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.type */
extern T0* T1219f4(GE_context* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1426f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1249f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1248f76(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T1247f76(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T1225f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_comma_actual_parameter */
extern T0* T440f951(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T1224f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_actual_parameter */
extern T0* T440f950(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T1223f107(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_N.resolved_syntactical_constraint_with_type */
extern T0* T1222f106(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1219f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint_with_type */
extern T0* T504f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CHOICE_RANGE.choice */
extern T0* T1257f5(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.choice */
extern T0* T1213f31(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.choice */
extern T0* T1212f31(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.choice */
extern T0* T1206f61(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.choice */
extern T0* T1205f61(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.choice */
extern T0* T1204f61(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.choice */
extern T0* T1203f61(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.choice */
extern T0* T1202f61(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.choice */
extern T0* T1199f32(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.choice */
extern T0* T1173f22(GE_context* ac, T0* C);
/* ET_IDENTIFIER.choice */
extern T0* T182f102(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.lower */
extern T0* T1213f33(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.lower */
extern T0* T1212f33(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.lower */
extern T0* T1206f63(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.lower */
extern T0* T1205f63(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.lower */
extern T0* T1204f63(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.lower */
extern T0* T1203f63(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.lower */
extern T0* T1202f63(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.lower */
extern T0* T1199f34(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.lower */
extern T0* T1173f24(GE_context* ac, T0* C);
/* ET_IDENTIFIER.lower */
extern T0* T182f104(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_range */
extern T1 T1213f32(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_range */
extern T1 T1212f32(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_range */
extern T1 T1206f62(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_range */
extern T1 T1205f62(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_range */
extern T1 T1204f62(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_range */
extern T1 T1203f62(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_range */
extern T1 T1202f62(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_range */
extern T1 T1199f33(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_range */
extern T1 T1173f23(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_range */
extern T1 T182f103(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.upper */
extern T0* T1213f34(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.upper */
extern T0* T1212f34(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.upper */
extern T0* T1206f64(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.upper */
extern T0* T1205f64(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.upper */
extern T0* T1204f64(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.upper */
extern T0* T1203f64(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.upper */
extern T0* T1202f64(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.upper */
extern T0* T1199f35(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.upper */
extern T0* T1173f25(GE_context* ac, T0* C);
/* ET_IDENTIFIER.upper */
extern T0* T182f105(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.agent_actual_argument */
extern T0* T1862f13(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.agent_actual_argument */
extern T0* T1861f13(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.agent_actual_argument */
extern T0* T1860f13(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.agent_actual_argument */
extern T0* T1723f13(GE_context* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.agent_actual_argument */
extern T0* T1281f6(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1279f22(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1278f25(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1277f24(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1276f23(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1275f26(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1274f25(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.agent_actual_argument */
extern T0* T1273f13(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.agent_actual_argument */
extern T0* T1272f18(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.agent_actual_argument */
extern T0* T1271f11(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.agent_actual_argument */
extern T0* T1270f13(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.agent_actual_argument */
extern T0* T1269f12(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.agent_actual_argument */
extern T0* T1266f13(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.agent_actual_argument */
extern T0* T1265f11(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.agent_actual_argument */
extern T0* T1264f11(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.agent_actual_argument */
extern T0* T1263f11(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.agent_actual_argument */
extern T0* T1262f11(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.agent_actual_argument */
extern T0* T1261f15(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1213f22(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1212f22(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.agent_actual_argument */
extern T0* T1211f23(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.agent_actual_argument */
extern T0* T1210f23(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.agent_actual_argument */
extern T0* T1208f24(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.agent_actual_argument */
extern T0* T1207f24(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1206f44(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1205f44(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1204f44(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1203f44(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1202f44(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.agent_actual_argument */
extern T0* T1201f24(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.agent_actual_argument */
extern T0* T1200f28(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1199f23(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.agent_actual_argument */
extern T0* T1176f17(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.agent_actual_argument */
extern T0* T1173f15(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.agent_actual_argument */
extern T0* T1154f13(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.agent_actual_argument */
extern T0* T1140f17(GE_context* ac, T0* C);
/* ET_CALL_AGENT.agent_actual_argument */
extern T0* T992f16(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.agent_actual_argument */
extern T0* T989f13(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.agent_actual_argument */
extern T0* T961f22(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.agent_actual_argument */
extern T0* T958f66(GE_context* ac, T0* C);
/* ET_VOID.agent_actual_argument */
extern T0* T950f19(GE_context* ac, T0* C);
/* ET_BIT_CONSTANT.agent_actual_argument */
extern T0* T914f21(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.agent_actual_argument */
extern T0* T832f23(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.agent_actual_argument */
extern T0* T748f15(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.agent_actual_argument */
extern T0* T326f14(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T322f11(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T321f11(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.agent_actual_argument */
extern T0* T320f12(GE_context* ac, T0* C);
/* ET_RESULT.agent_actual_argument */
extern T0* T313f20(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.agent_actual_argument */
extern T0* T294f18(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T292f10(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T291f15(GE_context* ac, T0* C);
/* ET_CURRENT.agent_actual_argument */
extern T0* T286f20(GE_context* ac, T0* C);
/* ET_IDENTIFIER.agent_actual_argument */
extern T0* T182f83(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_8 */
extern T4 T1206f24(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_8_min_value_abs */
extern unsigned char ge560os32231;
extern T11 ge560ov32231;
extern T11 T1206f46(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_8 */
extern T4 T1205f24(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1205f46(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_8 */
extern T4 T1204f24(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1204f46(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_8 */
extern T4 T1203f24(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1203f46(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_8 */
extern T4 T1202f24(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1202f46(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_16 */
extern T5 T1206f26(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_16_min_value_abs */
extern unsigned char ge560os32232;
extern T11 ge560ov32232;
extern T11 T1206f47(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_16 */
extern T5 T1205f26(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1205f47(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_16 */
extern T5 T1204f26(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1204f47(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_16 */
extern T5 T1203f26(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1203f47(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_16 */
extern T5 T1202f26(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1202f47(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_64 */
extern T7 T1206f28(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_64_min_value_abs */
extern unsigned char ge560os32234;
extern T11 ge560ov32234;
extern T11 T1206f48(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_64 */
extern T7 T1205f28(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1205f48(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_64 */
extern T7 T1204f28(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1204f48(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_64 */
extern T7 T1203f28(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1203f48(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_64 */
extern T7 T1202f28(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1202f48(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_natural_8 */
extern T8 T1206f30(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_natural_8 */
extern T8 T1205f30(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_natural_8 */
extern T8 T1204f30(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_natural_8 */
extern T8 T1203f30(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_natural_8 */
extern T8 T1202f30(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_natural_16 */
extern T9 T1206f32(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_natural_16 */
extern T9 T1205f32(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_natural_16 */
extern T9 T1204f32(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_natural_16 */
extern T9 T1203f32(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_natural_16 */
extern T9 T1202f32(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_natural_32 */
extern T10 T1206f34(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_natural_32 */
extern T10 T1205f34(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_natural_32 */
extern T10 T1204f34(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_natural_32 */
extern T10 T1203f34(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_natural_32 */
extern T10 T1202f34(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_natural_64 */
extern T11 T1206f36(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_natural_64 */
extern T11 T1205f36(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_natural_64 */
extern T11 T1204f36(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_natural_64 */
extern T11 T1203f36(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_natural_64 */
extern T11 T1202f36(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1206f23(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1205f23(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1204f23(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1203f23(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1202f23(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1206f25(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1205f25(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1204f25(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1203f25(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1202f25(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1206f29(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1205f29(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1204f29(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1203f29(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1202f29(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1206f31(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1205f31(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1204f31(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1203f31(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1202f31(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1206f33(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1205f33(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1204f33(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1203f33(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1202f33(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1206f19(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_32_min_value_abs */
extern unsigned char ge560os32233;
extern T11 ge560ov32233;
extern T11 T1206f45(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1205f19(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1205f45(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1204f19(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1204f45(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1203f19(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1203f45(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1202f19(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1202f45(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1206f27(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1205f27(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1204f27(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1203f27(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1202f27(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1206f41(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1205f41(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1203f41(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1202f41(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_binary */
extern T1 T1205f42(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_binary */
extern T1 T1204f42(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_binary */
extern T1 T1203f42(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_binary */
extern T1 T1202f42(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1206f35(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1205f35(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1204f35(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1203f35(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1202f35(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_negative */
extern T1 T1206f18(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_negative */
extern T1 T1205f18(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_negative */
extern T1 T1204f18(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_negative */
extern T1 T1203f18(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_negative */
extern T1 T1202f18(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.value_position */
extern T0* T1206f54(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.value_position */
extern T0* T1205f54(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.value_position */
extern T0* T1204f54(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.value_position */
extern T0* T1203f54(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.value_position */
extern T0* T1202f54(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1206f20(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1205f20(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1204f20(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1203f20(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1202f20(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix */
extern T1 T1242f16(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix */
extern T1 T859f12(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefixable */
extern T1 T1242f6(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefixable */
extern T1 T859f11(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infixable */
extern T1 T1242f18(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infixable */
extern T1 T859f10(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix */
extern T1 T1242f14(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix */
extern T1 T859f9(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.same_alias_name */
extern T1 T1242f17(GE_context* ac, T0* C, T0* a1);
extern T1 T1242f17ot1(T0* a1, T0** a2);
/* ET_INFIX_NAME.same_alias_name */
extern T1 T1240f61(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_alias_name */
extern T1 T1239f50(GE_context* ac, T0* C, T0* a1);
extern T1 T1239f50ot1(T0* a1, T0** a2);
/* ET_PREFIX_NAME.same_alias_name */
extern T1 T1238f47(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.same_alias_name */
extern T1 T859f13(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_alias_name */
extern T1 T833f48(GE_context* ac, T0* C, T0* a1);
extern T1 T833f48ot1(T0* a1, T0** a2);
/* ET_ALIAS_FREE_NAME.alias_lower_name */
extern T0* T1242f41(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.alias_name */
extern T0* T1242f42(GE_context* ac, T0* C);
/* ET_INFIX_NAME.alias_lower_name */
extern T0* T1240f78(GE_context* ac, T0* C);
/* ET_INFIX_NAME.alias_name */
extern T0* T1240f79(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.alias_lower_name */
extern T0* T1239f65(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.alias_name */
extern T0* T1239f66(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.alias_lower_name */
extern T0* T1238f64(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.alias_name */
extern T0* T1238f65(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.alias_lower_name */
extern T0* T859f61(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.alias_name */
extern T0* T859f62(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.alias_lower_name */
extern T0* T833f65(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.alias_name */
extern T0* T833f66(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.lower_name */
extern T0* T448f91(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.lower_name */
extern T0* T230f106(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.lower_name */
extern T0* T217f99(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.lower_name */
extern T0* T200f13(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.lower_name */
extern T0* T198f91(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.lower_name */
extern T0* T196f13(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.parenthesis_call */
extern T0* T1862f19(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.parenthesis_call */
extern T0* T1270f17(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.parenthesis_call */
extern T0* T989f16(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments_count */
extern T6 T1862f20(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.arguments_count */
extern T6 T1270f18(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.arguments_count */
extern T6 T989f17(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.arguments_count */
extern T6 T291f18(GE_context* ac, T0* C);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_enabled */
extern T1 T826f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_included */
extern T1 T826f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.is_enabled */
extern T1 T824f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.string_ */
extern T0* T824f5(GE_context* ac, T0* C);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_enabled */
extern T1 T823f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_CONDITION.is_enabled */
extern T1 T822f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T1 T821f3(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T0* T821f3ac1(T0* a1, T0* a2);
/* DS_LINKED_LIST [STRING_8].there_exists */
extern T1 T143f16(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.string_ */
extern T0* T821f4(GE_context* ac, T0* C);
/* UC_UTF8_STRING.has */
extern T1 T847f65(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_MULTITHREADED_CONDITION.is_enabled */
extern T1 T820f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_BUILD_CONDITION.is_enabled */
extern T1 T819f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_BUILD_CONDITION.string_ */
extern T0* T819f4(GE_context* ac, T0* C);
/* ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T1 T818f3(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T0* T818f3ac1(T0* a1, T0* a2);
/* ET_ECF_PLATFORM_CONDITION.string_ */
extern T0* T818f5(GE_context* ac, T0* C);
/* ET_ECF_PLATFORM_CONDITION.operating_system */
extern T0* T818f4(GE_context* ac, T0* C);
/* ET_ECF_CONDITIONS.is_enabled */
extern T1 T814f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].item */
extern T0* T1456f9(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.type */
extern T0* T1279f24(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.type */
extern T0* T1278f27(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.type */
extern T0* T1277f26(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.type */
extern T0* T1276f25(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.type */
extern T0* T1275f28(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.type */
extern T0* T1274f27(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.locals */
extern T0* T1279f27(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.locals */
extern T0* T1276f28(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1565f4(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_with_type */
extern T0* T1427f39(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_parameter_with_type */
extern T0* T1249f37(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_parameter_with_type */
extern T0* T1248f37(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_with_type */
extern T0* T1247f38(GE_context* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1245f4(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.named_parameter_with_type */
extern T0* T1223f35(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.named_parameter_with_type */
extern T0* T1222f34(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T1218f62(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T1090f56(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.named_parameter_with_type */
extern T0* T867f31(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_with_type */
extern T0* T504f22(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_with_type */
extern T0* T261f46(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.named_parameter_with_type */
extern T0* T82f116(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_with_type */
extern T0* T80f47(GE_context* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.label */
extern T0* T1565f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.label */
extern T0* T1427f70(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.label */
extern T0* T1249f74(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.label */
extern T0* T1248f77(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.label */
extern T0* T1247f78(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.label */
extern T0* T1245f7(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.label */
extern T0* T1223f109(GE_context* ac, T0* C);
/* ET_BIT_N.label */
extern T0* T1222f108(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.label */
extern T0* T1218f78(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.label */
extern T0* T1090f77(GE_context* ac, T0* C);
/* ET_LIKE_N.label */
extern T0* T867f70(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.label */
extern T0* T504f72(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.label */
extern T0* T261f106(GE_context* ac, T0* C);
/* ET_CLASS.label */
extern T0* T82f207(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.label */
extern T0* T80f111(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.last_leaf */
extern T0* T1565f8(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.last_leaf */
extern T0* T1245f8(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.error_position */
extern T0* T610f60(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.error_position */
extern T0* T608f56(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.error_position */
extern T0* T607f58(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.error_position */
extern T0* T570f66(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.end_of_file */
extern T1 T610f62(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.end_of_file */
extern T1 T608f63(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.end_of_file */
extern T1 T607f60(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.end_of_file */
extern T1 T570f68(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_applicable_encoding */
extern T1 T610f63(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_applicable_encoding */
extern T1 T848f20(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_valid_encoding */
extern T1 T848f13(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.is_applicable_encoding */
extern T1 T608f49(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_applicable_encoding */
extern T1 T607f61(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T570f69(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.start_condition */
extern T6 T610f64(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.start_condition */
extern T6 T608f51(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.start_condition */
extern T6 T607f62(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.start_condition */
extern T6 T570f44(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.same_extended_feature_name */
extern T1 T1241f3(GE_context* ac, T0* C, T0* a1);
/* KL_ANY_ROUTINES.same_objects */
extern T1 T134f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.any_ */
extern T0* T1241f5(GE_context* ac, T0* C);
/* ET_INFIX_NAME.same_extended_feature_name */
extern T1 T1240f73(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_NAME.any_ */
extern T0* T1240f22(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.same_extended_feature_name */
extern T1 T1239f60(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.any_ */
extern T0* T1239f17(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.same_extended_feature_name */
extern T1 T1238f59(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_NAME.any_ */
extern T0* T1238f22(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.same_extended_feature_name */
extern T1 T833f60(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.any_ */
extern T0* T833f27(GE_context* ac, T0* C);
/* ET_IDENTIFIER.same_extended_feature_name */
extern T1 T182f85(GE_context* ac, T0* C, T0* a1);
/* ET_ALIASED_FEATURE_NAME.position */
extern T0* T1241f4(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.same_call_name */
extern T1 T1241f6(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_NAME.feature_alias_name */
extern T0* T1240f23(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.feature_alias_name */
extern T0* T1239f10(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.feature_alias_name */
extern T0* T1238f23(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.feature_alias_name */
extern T0* T833f10(GE_context* ac, T0* C);
/* ET_IDENTIFIER.alias_name */
extern T0* T182f54(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.is_consumable */
extern T1 T448f90(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.is_consumable */
extern T1 T230f100(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.is_consumable */
extern T1 T217f93(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.is_consumable */
extern T1 T198f90(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T799f36(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.is_included */
extern T1 T804f3(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_FILE_RULES.is_included */
extern T0* T804f3ac1(T0* a1);
/* ET_ECF_FILE_RULE.is_included */
extern T1 T803f9(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_FILE_RULE.is_included */
extern T0* T803f9ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_FILE_RULE.is_included */
extern T0* T803f9ac2(T0* a1);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].there_exists */
extern T1 T1451f7(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].item */
extern T0* T1451f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].for_all */
extern T1 T1452f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.implicit_relative_name */
extern T0* T799f50(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.unix_file_system */
extern T0* T799f49(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T799f36p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.has_eiffel_extension */
extern T1 T799f51(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.operating_system */
extern T0* T799f55(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T411f35(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_case_insensitive */
extern T1 T411f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET_CURSOR [STRING_8].go_after */
extern void T369f15(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_go_after */
extern void T76f75(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.operating_system */
extern T0* T411f49(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.exclude */
extern T0* T405f141(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_exclude */
extern unsigned char ge1130os22438;
extern T0* ge1130ov22438;
extern T0* T405f142(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_exclude_declared */
extern T1 T405f140(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T411f35p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_eiffel_extension */
extern T1 T411f51(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T215f26(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_EXCLUDE.has */
extern T1 T216f4(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_EXCLUDE.string_ */
extern T0* T216f5(GE_context* ac, T0* C);
/* ET_LACE_EXCLUDE.has_case_insensitive */
extern T1 T216f3(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.operating_system */
extern T0* T215f24(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T215f26p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.has_eiffel_extension */
extern T1 T215f38(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T799f37(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T799f37p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T411f36(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T411f36p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T215f27(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T215f27p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.full_pathname */
extern T0* T799f35(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.windows_file_system */
extern T0* T799f48(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.file_system */
extern T0* T799f45(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.execution_environment */
extern T0* T799f44(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.full_pathname */
extern T0* T411f34(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.file_system */
extern T0* T411f46(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.unix_file_system */
extern T0* T411f56(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.windows_file_system */
extern T0* T411f55(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.full_pathname */
extern T0* T215f35(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.file_system */
extern T0* T215f23(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.unix_file_system */
extern T0* T215f28(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.windows_file_system */
extern T0* T215f25(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.pathname */
extern T0* T215f42(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.absolute_pathname */
extern T0* T799f30(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.absolute_pathname */
extern T0* T411f29(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.execution_environment */
extern T0* T411f45(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.absolute_pathname */
extern T0* T215f37(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.execution_environment */
extern T0* T215f43(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.scm_write_mapping_recursive */
extern T0* T799f42(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.scm_write_mapping_recursive */
extern T0* T411f43(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.scm_write_mapping_recursive */
extern T0* T215f45(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_none */
extern T1 T799f39(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_none */
extern T1 T411f31(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_none */
extern T1 T394f4(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_none */
extern T1 T215f29(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_unknown */
extern T1 T799f43(GE_context* ac, T0* C);
/* ET_NONE_GROUP.is_unknown */
extern T1 T506f10(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_unknown */
extern T1 T411f33(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_unknown */
extern T1 T215f30(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_dotnet_assembly */
extern T1 T799f25(GE_context* ac, T0* C);
/* ET_NONE_GROUP.is_dotnet_assembly */
extern T1 T506f18(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_dotnet_assembly */
extern T1 T411f38(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_dotnet_assembly */
extern T1 T394f6(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_dotnet_assembly */
extern T1 T215f31(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.cluster */
extern T0* T799f28(GE_context* ac, T0* C);
/* ET_NONE_GROUP.cluster */
extern T0* T506f5(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.cluster */
extern T0* T411f27(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.cluster */
extern T0* T394f7(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.cluster */
extern T0* T215f32(GE_context* ac, T0* C);
/* ET_NONE_GROUP.is_cluster */
extern T1 T506f7(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_cluster */
extern T1 T394f8(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.dotnet_assembly */
extern T0* T799f29(GE_context* ac, T0* C);
/* ET_NONE_GROUP.dotnet_assembly */
extern T0* T506f11(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.dotnet_assembly */
extern T0* T411f28(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.dotnet_assembly */
extern T0* T394f12(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.dotnet_assembly */
extern T0* T215f36(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.universe */
extern T0* T394f19(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.tokens */
extern T0* T394f11(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.current_system */
extern T0* T799f26(GE_context* ac, T0* C);
/* ET_NONE_GROUP.current_system */
extern T0* T506f9(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.current_system */
extern T0* T411f39(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.current_system */
extern T0* T394f10(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.current_system */
extern T0* T215f34(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.full_lower_name */
extern T0* T799f32(GE_context* ac, T0* C, T2 a1);
/* ET_NONE_GROUP.full_lower_name */
extern T0* T506f12(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_CLUSTER.full_lower_name */
extern T0* T411f32(GE_context* ac, T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.full_lower_name */
extern T0* T394f13(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_CLUSTER.full_lower_name */
extern T0* T215f46(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.kind_name */
extern unsigned char ge714os15849;
extern T0* ge714ov15849;
extern T0* T799f54(GE_context* ac, T0* C);
/* ET_NONE_GROUP.kind_name */
extern unsigned char ge725os15849;
extern T0* ge725ov15849;
extern T0* T506f28(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.kind_name */
extern T0* T411f54(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.kind_name */
extern T0* T394f29(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.kind_name */
extern T0* T215f51(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.relative_lower_name */
extern T0* T799f47(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_CLUSTER.relative_lower_name */
extern T0* T799f47p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.relative_lower_name */
extern T0* T189f110(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.lower_name */
extern T0* T189f112(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.lower_name */
extern T0* T799f56(GE_context* ac, T0* C);
/* ET_NONE_GROUP.relative_lower_name */
extern T0* T506f16(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.lower_name */
extern T0* T506f22(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.relative_lower_name */
extern T0* T411f48(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_CLUSTER.relative_lower_name */
extern T0* T411f48p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_CLUSTER.lower_name */
extern T0* T411f57(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.relative_lower_name */
extern T0* T394f17(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.lower_name */
extern T0* T394f23(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.relative_lower_name */
extern T0* T215f49(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_CLUSTER.relative_lower_name */
extern T0* T215f49p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_CLUSTER.lower_name */
extern T0* T215f52(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_invariants */
extern T1 T1237f70(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_invariants */
extern T1 T1236f67(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_invariants */
extern T1 T1234f67(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_invariants */
extern T1 T1233f69(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_invariants */
extern T1 T1232f68(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_invariants */
extern T1 T534f65(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_invariants */
extern T1 T528f66(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_invariants */
extern T1 T366f64(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_invariants */
extern T1 T365f66(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_invariants */
extern T1 T363f66(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_invariants */
extern T1 T331f67(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_invariants */
extern T1 T260f72(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.as_invariants */
extern T0* T1237f71(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.as_invariants */
extern T0* T1236f68(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.as_invariants */
extern T0* T1234f68(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.as_invariants */
extern T0* T1233f70(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.as_invariants */
extern T0* T1232f69(GE_context* ac, T0* C);
/* ET_INVARIANTS.as_invariants */
extern T0* T887f21(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.as_invariants */
extern T0* T534f66(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.as_invariants */
extern T0* T528f67(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.as_invariants */
extern T0* T366f65(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_invariants */
extern T0* T365f67(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_invariants */
extern T0* T363f67(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.as_invariants */
extern T0* T331f68(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.as_invariants */
extern T0* T260f73(GE_context* ac, T0* C);
/* ET_INVARIANTS.clients */
extern T0* T887f19(GE_context* ac, T0* C);
/* ET_INVARIANTS.type */
extern T0* T887f18(GE_context* ac, T0* C);
/* ET_INVARIANTS.arguments */
extern T0* T887f16(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.locals */
extern T0* T1237f68(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.locals */
extern T0* T1234f65(GE_context* ac, T0* C);
/* ET_INVARIANTS.locals */
extern T0* T887f17(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.locals */
extern T0* T534f63(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.locals */
extern T0* T366f62(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.locals */
extern T0* T365f64(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.locals */
extern T0* T363f64(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.locals */
extern T0* T260f70(GE_context* ac, T0* C);
/* ET_INVARIANTS.first_precursor */
extern T0* T887f13(GE_context* ac, T0* C);
/* ET_INVARIANTS.is_feature */
extern T1 T887f14(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.as_feature */
extern T0* T1237f67(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.as_feature */
extern T0* T1236f65(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.as_feature */
extern T0* T1234f64(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.as_feature */
extern T0* T1233f67(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.as_feature */
extern T0* T1232f66(GE_context* ac, T0* C);
/* ET_INVARIANTS.as_feature */
extern T0* T887f15(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.as_feature */
extern T0* T534f62(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.as_feature */
extern T0* T528f64(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.as_feature */
extern T0* T366f61(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_feature */
extern T0* T365f63(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_feature */
extern T0* T363f63(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.as_feature */
extern T0* T331f65(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.as_feature */
extern T0* T260f69(GE_context* ac, T0* C);
/* ET_INVARIANTS.preconditions */
extern T0* T887f23(GE_context* ac, T0* C);
/* ET_INVARIANTS.postconditions */
extern T0* T887f24(GE_context* ac, T0* C);
/* ET_INVARIANTS.implementation_feature */
extern T0* T887f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_HASH_LIST.has_type */
extern T1 T273f14(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.index_of */
extern T6 T335f68(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.index_of */
extern T6 T334f69(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.index_of */
extern T6 T323f68(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.index_of */
extern T6 T306f68(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.index_of */
extern T6 T273f16(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.index_of */
extern T6 T239f66(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.dynamic_type */
extern T0* T273f6(GE_context* ac, T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.is_bang */
extern T1 T958f53(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_bang */
extern T1 T651f58(GE_context* ac, T0* C);
/* ET_SYMBOL.is_bang */
extern T1 T346f16(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_question_mark */
extern T1 T958f55(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_question_mark */
extern T1 T651f60(GE_context* ac, T0* C);
/* ET_SYMBOL.is_question_mark */
extern T1 T346f17(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.position */
extern T0* T1598f4(GE_context* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.position */
extern T0* T1280f5(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_open_operand */
extern T1 T1862f18(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_open_operand */
extern T1 T1861f15(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_open_operand */
extern T1 T1860f14(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_open_operand */
extern T1 T1723f14(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_open_operand */
extern T1 T1598f3(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1279f23(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1278f26(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1277f25(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1276f24(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1275f27(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1274f26(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_open_operand */
extern T1 T1273f14(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_open_operand */
extern T1 T1272f19(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_open_operand */
extern T1 T1271f12(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_open_operand */
extern T1 T1270f14(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_open_operand */
extern T1 T1269f13(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_open_operand */
extern T1 T1266f14(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_open_operand */
extern T1 T1265f12(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_open_operand */
extern T1 T1264f12(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_open_operand */
extern T1 T1263f12(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_open_operand */
extern T1 T1262f12(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_open_operand */
extern T1 T1261f16(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1213f23(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1212f23(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_open_operand */
extern T1 T1211f24(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_open_operand */
extern T1 T1210f24(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_open_operand */
extern T1 T1208f25(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_open_operand */
extern T1 T1207f25(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_open_operand */
extern T1 T1206f49(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T1205f49(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T1204f49(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_open_operand */
extern T1 T1203f49(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_open_operand */
extern T1 T1202f49(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_open_operand */
extern T1 T1201f25(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_open_operand */
extern T1 T1200f29(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1199f24(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_open_operand */
extern T1 T1176f18(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_open_operand */
extern T1 T1173f16(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_open_operand */
extern T1 T1154f11(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_open_operand */
extern T1 T1140f18(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_open_operand */
extern T1 T992f17(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_open_operand */
extern T1 T989f14(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_open_operand */
extern T1 T961f25(GE_context* ac, T0* C);
/* ET_VOID.is_open_operand */
extern T1 T950f22(GE_context* ac, T0* C);
/* ET_BIT_CONSTANT.is_open_operand */
extern T1 T914f24(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_open_operand */
extern T1 T832f26(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_open_operand */
extern T1 T748f18(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_open_operand */
extern T1 T326f15(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T322f12(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T321f12(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_open_operand */
extern T1 T320f15(GE_context* ac, T0* C);
/* ET_RESULT.is_open_operand */
extern T1 T313f18(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_open_operand */
extern T1 T294f19(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T292f13(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T291f16(GE_context* ac, T0* C);
/* ET_CURRENT.is_open_operand */
extern T1 T286f18(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_open_operand */
extern T1 T182f78(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.expression_item */
extern T0* T1862f7(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.expression_item */
extern T0* T1861f7(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.expression_item */
extern T0* T1860f7(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.expression_item */
extern T0* T1723f12(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1279f13(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1278f15(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1277f15(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1276f17(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1275f19(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1274f19(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.expression_item */
extern T0* T1273f8(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.expression_item */
extern T0* T1272f11(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.expression_item */
extern T0* T1271f4(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.expression_item */
extern T0* T1270f15(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.expression_item */
extern T0* T1269f8(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.expression_item */
extern T0* T1266f7(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.expression_item */
extern T0* T1265f4(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.expression_item */
extern T0* T1264f4(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.expression_item */
extern T0* T1263f4(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.expression_item */
extern T0* T1262f4(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.expression_item */
extern T0* T1261f11(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.expression_item */
extern T0* T1213f11(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.expression_item */
extern T0* T1212f11(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.expression_item */
extern T0* T1211f15(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.expression_item */
extern T0* T1210f15(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.expression_item */
extern T0* T1208f10(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.expression_item */
extern T0* T1207f10(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.expression_item */
extern T0* T1206f10(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.expression_item */
extern T0* T1205f10(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.expression_item */
extern T0* T1204f10(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.expression_item */
extern T0* T1203f10(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.expression_item */
extern T0* T1202f10(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.expression_item */
extern T0* T1201f12(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.expression_item */
extern T0* T1200f12(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.expression_item */
extern T0* T1199f11(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.expression_item */
extern T0* T1176f9(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.expression_item */
extern T0* T1173f7(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.expression_item */
extern T0* T1154f8(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.expression_item */
extern T0* T1140f9(GE_context* ac, T0* C);
/* ET_CALL_AGENT.expression_item */
extern T0* T992f8(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.expression_item */
extern T0* T989f7(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.expression_item */
extern T0* T961f15(GE_context* ac, T0* C);
/* ET_VOID.expression_item */
extern T0* T950f15(GE_context* ac, T0* C);
/* ET_BIT_CONSTANT.expression_item */
extern T0* T914f4(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.expression_item */
extern T0* T832f6(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.expression_item */
extern T0* T748f7(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.expression_item */
extern T0* T326f10(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.expression_item */
extern T0* T322f9(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.expression_item */
extern T0* T321f9(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.expression_item */
extern T0* T320f9(GE_context* ac, T0* C);
/* ET_RESULT.expression_item */
extern T0* T313f7(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.expression_item */
extern T0* T294f14(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T292f6(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T291f11(GE_context* ac, T0* C);
/* ET_CURRENT.expression_item */
extern T0* T286f7(GE_context* ac, T0* C);
/* ET_IDENTIFIER.expression_item */
extern T0* T182f46(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_empty_actual_argument */
extern T1 T1862f10(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_empty_actual_argument */
extern T1 T1861f10(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_empty_actual_argument */
extern T1 T1860f10(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_empty */
extern T1 T1796f3(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_empty_actual_argument */
extern T1 T1723f10(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1279f30(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1278f32(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1277f31(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1276f31(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1275f33(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1274f32(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1273f18(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_empty_actual_argument */
extern T1 T1272f22(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_empty_actual_argument */
extern T1 T1271f15(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T1270f20(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_empty_actual_argument */
extern T1 T1269f16(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T1266f18(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_empty_actual_argument */
extern T1 T1265f15(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_empty_actual_argument */
extern T1 T1264f15(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_empty_actual_argument */
extern T1 T1263f15(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_empty_actual_argument */
extern T1 T1262f15(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_empty_actual_argument */
extern T1 T1261f19(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_empty */
extern T1 T1250f14(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1213f27(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1212f27(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_empty_actual_argument */
extern T1 T1211f27(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_empty_actual_argument */
extern T1 T1210f27(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T1208f29(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T1207f29(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1206f56(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1205f56(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1204f56(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1203f56(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1202f56(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1201f29(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_empty_actual_argument */
extern T1 T1200f33(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1199f28(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_empty_actual_argument */
extern T1 T1176f22(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T1173f19(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_empty_actual_argument */
extern T1 T1154f16(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_empty_actual_argument */
extern T1 T1140f21(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_empty_actual_argument */
extern T1 T992f22(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_empty_actual_argument */
extern T1 T989f19(GE_context* ac, T0* C);
/* ET_BRACKET_ARGUMENT_LIST.is_empty */
extern T1 T986f9(GE_context* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_empty */
extern T1 T976f9(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_empty_actual_argument */
extern T1 T961f26(GE_context* ac, T0* C);
/* ET_VOID.is_empty_actual_argument */
extern T1 T950f23(GE_context* ac, T0* C);
/* ET_BIT_CONSTANT.is_empty_actual_argument */
extern T1 T914f25(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T832f28(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_empty_actual_argument */
extern T1 T748f19(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_empty_actual_argument */
extern T1 T326f21(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T322f15(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T321f16(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_empty_actual_argument */
extern T1 T320f18(GE_context* ac, T0* C);
/* ET_RESULT.is_empty_actual_argument */
extern T1 T313f24(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_empty_actual_argument */
extern T1 T294f22(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T292f17(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T291f20(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T287f10(GE_context* ac, T0* C);
/* ET_CURRENT.is_empty_actual_argument */
extern T1 T286f25(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_empty_actual_argument */
extern T1 T182f96(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.count */
extern T6 T1250f12(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.actual_argument */
extern T0* T1862f9(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.actual_argument */
extern T0* T1861f9(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.actual_argument */
extern T0* T1860f9(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.actual_argument */
extern T0* T1796f4(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.actual_argument */
extern T0* T1723f9(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1279f18(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1278f20(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1277f19(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1276f20(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1275f22(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1274f21(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.actual_argument */
extern T0* T1273f10(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_OBJECT_TEST.actual_argument */
extern T0* T1272f16(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.actual_argument */
extern T0* T1271f9(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.actual_argument */
extern T0* T1270f8(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TYPE.actual_argument */
extern T0* T1269f10(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.actual_argument */
extern T0* T1266f9(GE_context* ac, T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.actual_argument */
extern T0* T1265f9(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT_ADDRESS.actual_argument */
extern T0* T1264f9(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.actual_argument */
extern T0* T1263f9(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.actual_argument */
extern T0* T1262f9(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.actual_argument */
extern T0* T1261f13(GE_context* ac, T0* C, T6 a1);
/* ET_ASSIGNER_INSTRUCTION.actual_argument */
extern T0* T1250f13(GE_context* ac, T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.actual_argument */
extern T0* T1213f16(GE_context* ac, T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.actual_argument */
extern T0* T1212f16(GE_context* ac, T0* C, T6 a1);
/* ET_FALSE_CONSTANT.actual_argument */
extern T0* T1211f17(GE_context* ac, T0* C, T6 a1);
/* ET_TRUE_CONSTANT.actual_argument */
extern T0* T1210f17(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument */
extern T0* T1208f18(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.actual_argument */
extern T0* T1207f18(GE_context* ac, T0* C, T6 a1);
/* ET_BINARY_INTEGER_CONSTANT.actual_argument */
extern T0* T1206f22(GE_context* ac, T0* C, T6 a1);
/* ET_OCTAL_INTEGER_CONSTANT.actual_argument */
extern T0* T1205f22(GE_context* ac, T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument */
extern T0* T1204f22(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument */
extern T0* T1203f22(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument */
extern T0* T1202f22(GE_context* ac, T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument */
extern T0* T1201f17(GE_context* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.actual_argument */
extern T0* T1200f21(GE_context* ac, T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.actual_argument */
extern T0* T1199f17(GE_context* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.actual_argument */
extern T0* T1176f15(GE_context* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.actual_argument */
extern T0* T1173f13(GE_context* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument */
extern T0* T1154f10(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.actual_argument */
extern T0* T1140f15(GE_context* ac, T0* C, T6 a1);
/* ET_CALL_AGENT.actual_argument */
extern T0* T992f13(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.actual_argument */
extern T0* T989f11(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.actual_argument */
extern T0* T986f7(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.actual_argument */
extern T0* T976f7(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_EXPRESSION.actual_argument */
extern T0* T961f20(GE_context* ac, T0* C, T6 a1);
/* ET_VOID.actual_argument */
extern T0* T950f17(GE_context* ac, T0* C, T6 a1);
/* ET_BIT_CONSTANT.actual_argument */
extern T0* T914f15(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.actual_argument */
extern T0* T832f16(GE_context* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.actual_argument */
extern T0* T748f13(GE_context* ac, T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.actual_argument */
extern T0* T326f12(GE_context* ac, T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.actual_argument */
extern T0* T322f6(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.actual_argument */
extern T0* T321f6(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST.actual_argument */
extern T0* T320f6(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT.actual_argument */
extern T0* T313f14(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.actual_argument */
extern T0* T294f11(GE_context* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T292f8(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T291f13(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T287f6(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT.actual_argument */
extern T0* T286f10(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.actual_argument */
extern T0* T182f76(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.last_leaf */
extern T0* T1218f79(GE_context* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.last_leaf */
extern T0* T1028f11(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.last_leaf */
extern T0* T1090f78(GE_context* ac, T0* C);
/* ET_LIKE_N.last_leaf */
extern T0* T867f71(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1213f17(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1212f17(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_boolean_constant */
extern T1 T1208f19(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_boolean_constant */
extern T1 T1207f19(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1206f37(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1205f37(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1204f37(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1203f37(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1202f37(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_boolean_constant */
extern T1 T1201f19(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_boolean_constant */
extern T1 T1200f23(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1199f18(GE_context* ac, T0* C);
/* ET_BIT_CONSTANT.is_boolean_constant */
extern T1 T914f16(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_boolean_constant */
extern T1 T832f18(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_string_constant */
extern T1 T1213f19(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_string_constant */
extern T1 T1212f19(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_string_constant */
extern T1 T1211f20(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_string_constant */
extern T1 T1210f20(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_string_constant */
extern T1 T1208f21(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_string_constant */
extern T1 T1207f21(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_string_constant */
extern T1 T1206f39(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T1205f39(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T1204f39(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_string_constant */
extern T1 T1203f39(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_string_constant */
extern T1 T1202f39(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_string_constant */
extern T1 T1199f20(GE_context* ac, T0* C);
/* ET_BIT_CONSTANT.is_string_constant */
extern T1 T914f18(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T1213f20(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T1212f20(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_bit_constant */
extern T1 T1211f21(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_bit_constant */
extern T1 T1210f21(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_bit_constant */
extern T1 T1208f22(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_bit_constant */
extern T1 T1207f22(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_bit_constant */
extern T1 T1206f40(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_bit_constant */
extern T1 T1205f40(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_bit_constant */
extern T1 T1204f40(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_bit_constant */
extern T1 T1203f40(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_bit_constant */
extern T1 T1202f40(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_bit_constant */
extern T1 T1201f22(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_bit_constant */
extern T1 T1200f26(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T1199f21(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_bit_constant */
extern T1 T832f21(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_character_constant */
extern T1 T1211f19(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_character_constant */
extern T1 T1210f19(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_character_constant */
extern T1 T1208f20(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_character_constant */
extern T1 T1207f20(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_character_constant */
extern T1 T1206f38(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T1205f38(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T1204f38(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_character_constant */
extern T1 T1203f38(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_character_constant */
extern T1 T1202f38(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_character_constant */
extern T1 T1201f20(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_character_constant */
extern T1 T1200f24(GE_context* ac, T0* C);
/* ET_BIT_CONSTANT.is_character_constant */
extern T1 T914f17(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_character_constant */
extern T1 T832f19(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1213f30(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1212f30(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_integer_constant */
extern T1 T1211f30(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_integer_constant */
extern T1 T1210f30(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_integer_constant */
extern T1 T1208f32(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_integer_constant */
extern T1 T1207f32(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_integer_constant */
extern T1 T1201f34(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_integer_constant */
extern T1 T1200f38(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1199f31(GE_context* ac, T0* C);
/* ET_BIT_CONSTANT.is_integer_constant */
extern T1 T914f28(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_integer_constant */
extern T1 T832f33(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.name */
extern T0* T320f13(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.type */
extern T0* T1272f14(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.type */
extern T0* T748f11(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.type */
extern T0* T320f14(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1279f20(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1278f22(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1277f21(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_qualified_call */
extern T1 T992f14(GE_context* ac, T0* C);
extern T1 T992f14ot1(T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1279f25(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1279f29(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1278f28(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1278f31(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1277f27(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1277f30(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1276f26(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1276f30(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1275f29(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1275f32(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1274f28(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1274f31(GE_context* ac, T0* C);
/* ET_CALL_AGENT.implicit_target_position */
extern T0* T992f18(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.same_call_name */
extern T1 T1242f7(GE_context* ac, T0* C, T0* a1);
extern T1 T1242f7ot1(T0* a1, T0** a2);
/* ET_INFIX_NAME.same_call_name */
extern T1 T1240f17(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_call_name */
extern T1 T1239f18(GE_context* ac, T0* C, T0* a1);
extern T1 T1239f18ot1(T0* a1, T0** a2);
/* ET_PREFIX_NAME.same_call_name */
extern T1 T1238f17(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.same_call_name */
extern T1 T859f6(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_call_name */
extern T1 T833f24(GE_context* ac, T0* C, T0* a1);
extern T1 T833f24ot1(T0* a1, T0** a2);
/* ET_IDENTIFIER.same_call_name */
extern T1 T182f70(GE_context* ac, T0* C, T0* a1);
extern T1 T182f70ot1(T0* a1, T0** a2);
/* ET_PARENTHESIS_SYMBOL.is_bracket */
extern T1 T1791f21(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_bracket */
extern T1 T1268f26(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_bracket */
extern T1 T1267f26(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_bracket */
extern T1 T1242f11(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_bracket */
extern T1 T1240f18(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_bracket */
extern T1 T1239f23(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_bracket */
extern T1 T1238f18(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_bracket */
extern T1 T947f36(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_bracket */
extern T1 T934f35(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_bracket */
extern T1 T928f38(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_bracket */
extern T1 T859f7(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_bracket */
extern T1 T833f25(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_bracket */
extern T1 T182f79(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_parenthesis */
extern T1 T1268f27(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_parenthesis */
extern T1 T1267f27(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_parenthesis */
extern T1 T1242f13(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_parenthesis */
extern T1 T1240f19(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_parenthesis */
extern T1 T1239f24(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_parenthesis */
extern T1 T1238f19(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_parenthesis */
extern T1 T947f37(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_parenthesis */
extern T1 T934f36(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_parenthesis */
extern T1 T928f39(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_parenthesis */
extern T1 T859f8(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_parenthesis */
extern T1 T833f26(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_parenthesis */
extern T1 T651f92(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_parenthesis */
extern T1 T182f80(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and */
extern T1 T1791f4(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and */
extern T1 T1268f7(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and */
extern T1 T1267f7(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and */
extern T1 T1242f22(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_and */
extern T1 T1240f14(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and */
extern T1 T1239f14(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_and */
extern T1 T1238f14(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and */
extern T1 T947f12(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and */
extern T1 T934f16(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and */
extern T1 T928f15(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and */
extern T1 T859f43(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and */
extern T1 T833f21(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and */
extern T1 T651f69(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and */
extern T1 T182f50(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_div */
extern T1 T1791f6(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_div */
extern T1 T1268f14(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_div */
extern T1 T1267f14(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_div */
extern T1 T1242f24(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_div */
extern T1 T1240f49(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_div */
extern T1 T1239f38(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_div */
extern T1 T1238f35(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_div */
extern T1 T947f24(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_div */
extern T1 T934f23(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_div */
extern T1 T928f26(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_div */
extern T1 T859f45(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_div */
extern T1 T833f36(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_div */
extern T1 T651f79(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_div */
extern T1 T182f58(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_divide */
extern T1 T1791f7(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_divide */
extern T1 T1268f15(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_divide */
extern T1 T1267f15(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_divide */
extern T1 T1242f25(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_divide */
extern T1 T1240f50(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_divide */
extern T1 T1239f39(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_divide */
extern T1 T1238f36(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_divide */
extern T1 T947f25(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_divide */
extern T1 T934f24(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_divide */
extern T1 T928f27(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_divide */
extern T1 T859f46(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_divide */
extern T1 T833f37(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_divide */
extern T1 T651f80(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_divide */
extern T1 T182f59(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_ge */
extern T1 T1791f8(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_ge */
extern T1 T1268f16(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_ge */
extern T1 T1267f16(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_ge */
extern T1 T1242f26(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_ge */
extern T1 T1240f51(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_ge */
extern T1 T1239f40(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_ge */
extern T1 T1238f37(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_ge */
extern T1 T947f26(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_ge */
extern T1 T934f25(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_ge */
extern T1 T928f28(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_ge */
extern T1 T859f47(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_ge */
extern T1 T833f38(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_ge */
extern T1 T651f81(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_ge */
extern T1 T182f60(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_gt */
extern T1 T1791f9(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_gt */
extern T1 T1268f17(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_gt */
extern T1 T1267f17(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_gt */
extern T1 T1242f27(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_gt */
extern T1 T1240f52(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_gt */
extern T1 T1239f41(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_gt */
extern T1 T1238f38(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_gt */
extern T1 T947f27(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_gt */
extern T1 T934f26(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_gt */
extern T1 T928f29(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_gt */
extern T1 T859f48(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_gt */
extern T1 T833f39(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_gt */
extern T1 T651f82(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_gt */
extern T1 T182f61(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_le */
extern T1 T1791f11(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_le */
extern T1 T1268f18(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_le */
extern T1 T1267f18(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_le */
extern T1 T1242f29(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_le */
extern T1 T1240f53(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_le */
extern T1 T1239f42(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_le */
extern T1 T1238f39(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_le */
extern T1 T947f28(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_le */
extern T1 T934f27(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_le */
extern T1 T928f30(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_le */
extern T1 T859f50(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_le */
extern T1 T833f40(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_le */
extern T1 T651f83(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_le */
extern T1 T182f62(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_lt */
extern T1 T1791f12(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_lt */
extern T1 T1268f19(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_lt */
extern T1 T1267f19(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_lt */
extern T1 T1242f30(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_lt */
extern T1 T1240f54(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_lt */
extern T1 T1239f43(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_lt */
extern T1 T1238f40(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_lt */
extern T1 T947f29(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_lt */
extern T1 T934f28(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_lt */
extern T1 T928f31(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_lt */
extern T1 T859f51(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_lt */
extern T1 T833f41(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_lt */
extern T1 T651f84(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_lt */
extern T1 T182f63(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_minus */
extern T1 T1791f13(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_minus */
extern T1 T1268f20(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_minus */
extern T1 T1267f20(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_minus */
extern T1 T1242f31(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_minus */
extern T1 T1240f55(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_minus */
extern T1 T1239f44(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_minus */
extern T1 T1238f41(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_minus */
extern T1 T947f30(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_minus */
extern T1 T934f29(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_minus */
extern T1 T928f32(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_minus */
extern T1 T859f40(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_minus */
extern T1 T833f42(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_minus */
extern T1 T651f85(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_minus */
extern T1 T182f64(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_mod */
extern T1 T1791f14(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_mod */
extern T1 T1268f21(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_mod */
extern T1 T1267f21(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_mod */
extern T1 T1242f32(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_mod */
extern T1 T1240f56(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_mod */
extern T1 T1239f45(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_mod */
extern T1 T1238f42(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_mod */
extern T1 T947f31(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_mod */
extern T1 T934f30(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_mod */
extern T1 T928f33(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_mod */
extern T1 T859f52(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_mod */
extern T1 T833f43(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_mod */
extern T1 T651f86(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_mod */
extern T1 T182f65(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or */
extern T1 T1791f15(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or */
extern T1 T1268f8(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or */
extern T1 T1267f8(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or */
extern T1 T1242f33(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_or */
extern T1 T1240f15(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or */
extern T1 T1239f15(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_or */
extern T1 T1238f15(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or */
extern T1 T947f13(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or */
extern T1 T934f17(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or */
extern T1 T928f16(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or */
extern T1 T859f53(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or */
extern T1 T833f22(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or */
extern T1 T651f70(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or */
extern T1 T182f51(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_plus */
extern T1 T1791f17(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_plus */
extern T1 T1268f22(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_plus */
extern T1 T1267f22(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_plus */
extern T1 T1242f35(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_plus */
extern T1 T1240f57(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_plus */
extern T1 T1239f46(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_plus */
extern T1 T1238f43(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_plus */
extern T1 T947f32(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_plus */
extern T1 T934f31(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_plus */
extern T1 T928f34(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_plus */
extern T1 T859f39(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_plus */
extern T1 T833f44(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_plus */
extern T1 T651f87(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_plus */
extern T1 T182f66(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_power */
extern T1 T1791f18(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_power */
extern T1 T1268f23(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_power */
extern T1 T1267f23(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_power */
extern T1 T1242f36(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_power */
extern T1 T1240f58(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_power */
extern T1 T1239f47(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_power */
extern T1 T1238f44(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_power */
extern T1 T947f33(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_power */
extern T1 T934f32(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_power */
extern T1 T928f35(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_power */
extern T1 T859f55(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_power */
extern T1 T833f45(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_power */
extern T1 T651f88(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_power */
extern T1 T182f67(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_times */
extern T1 T1791f19(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_times */
extern T1 T1268f24(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_times */
extern T1 T1267f24(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_times */
extern T1 T1242f37(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_times */
extern T1 T1240f59(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_times */
extern T1 T1239f48(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_times */
extern T1 T1238f45(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_times */
extern T1 T947f34(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_times */
extern T1 T934f33(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_times */
extern T1 T928f36(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_times */
extern T1 T859f56(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_times */
extern T1 T833f46(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_times */
extern T1 T651f89(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_times */
extern T1 T182f68(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_xor */
extern T1 T1791f20(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor */
extern T1 T1268f25(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor */
extern T1 T1267f25(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor */
extern T1 T1242f38(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_xor */
extern T1 T1240f60(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_xor */
extern T1 T1239f49(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_xor */
extern T1 T1238f46(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor */
extern T1 T947f35(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor */
extern T1 T934f34(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_xor */
extern T1 T928f37(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_xor */
extern T1 T859f57(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_xor */
extern T1 T833f47(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor */
extern T1 T651f90(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_xor */
extern T1 T182f69(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_dotdot */
extern T1 T1791f23(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_dotdot */
extern T1 T1268f28(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_dotdot */
extern T1 T1267f28(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_dotdot */
extern T1 T1242f39(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_dotdot */
extern T1 T1240f70(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_dotdot */
extern T1 T1239f59(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_dotdot */
extern T1 T1238f56(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_dotdot */
extern T1 T947f38(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_dotdot */
extern T1 T934f37(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_dotdot */
extern T1 T928f40(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_dotdot */
extern T1 T859f58(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_dotdot */
extern T1 T833f59(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_dotdot */
extern T1 T651f93(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_dotdot */
extern T1 T182f81(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_minus */
extern T1 T1791f25(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_minus */
extern T1 T1268f11(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_minus */
extern T1 T1267f11(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_minus */
extern T1 T1242f19(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix_minus */
extern T1 T1240f46(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_minus */
extern T1 T1239f35(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_prefix_minus */
extern T1 T1238f32(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_minus */
extern T1 T947f21(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_minus */
extern T1 T934f20(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_minus */
extern T1 T928f23(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_minus */
extern T1 T859f38(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_minus */
extern T1 T833f33(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_minus */
extern T1 T651f76(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_minus */
extern T1 T182f55(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_plus */
extern T1 T1791f36(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_plus */
extern T1 T1268f12(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_plus */
extern T1 T1267f12(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_plus */
extern T1 T1242f20(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix_plus */
extern T1 T1240f47(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_plus */
extern T1 T1239f36(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_prefix_plus */
extern T1 T1238f33(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_plus */
extern T1 T947f22(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_plus */
extern T1 T934f21(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_plus */
extern T1 T928f24(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_plus */
extern T1 T859f37(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_plus */
extern T1 T833f34(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_plus */
extern T1 T651f77(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_plus */
extern T1 T182f56(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_not */
extern T1 T1791f38(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not */
extern T1 T1268f13(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not */
extern T1 T1267f13(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not */
extern T1 T1242f21(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix_not */
extern T1 T1240f48(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_not */
extern T1 T1239f37(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_prefix_not */
extern T1 T1238f34(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_not */
extern T1 T947f23(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not */
extern T1 T934f22(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_not */
extern T1 T928f25(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_not */
extern T1 T859f42(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_not */
extern T1 T833f35(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_not */
extern T1 T651f78(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_not */
extern T1 T182f57(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.hash_code */
extern T6 T859f41(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_precursor */
extern T1 T1791f29(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_precursor */
extern T1 T1240f74(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_precursor */
extern T1 T1239f61(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_precursor */
extern T1 T1238f60(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_precursor */
extern T1 T947f39(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_precursor */
extern T1 T934f38(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_precursor */
extern T1 T928f41(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_precursor */
extern T1 T907f14(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_precursor */
extern T1 T833f61(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_precursor */
extern T1 T651f94(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_precursor */
extern T1 T182f90(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.precursor_keyword */
extern T0* T1791f30(GE_context* ac, T0* C);
/* ET_INFIX_NAME.precursor_keyword */
extern T0* T1240f75(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.precursor_keyword */
extern T0* T1239f62(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.precursor_keyword */
extern T0* T1238f61(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.precursor_keyword */
extern T0* T947f40(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.precursor_keyword */
extern T0* T934f39(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.precursor_keyword */
extern T0* T928f42(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.precursor_keyword */
extern T0* T907f15(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.precursor_keyword */
extern T0* T833f62(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.precursor_keyword */
extern T0* T651f95(GE_context* ac, T0* C);
/* ET_IDENTIFIER.precursor_keyword */
extern T0* T182f91(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and_then */
extern T1 T1791f5(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then */
extern T1 T1268f4(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then */
extern T1 T1242f23(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_and_then */
extern T1 T1240f11(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and_then */
extern T1 T1239f11(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_and_then */
extern T1 T1238f11(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then */
extern T1 T947f9(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then */
extern T1 T934f13(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and_then */
extern T1 T928f12(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and_then */
extern T1 T859f44(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and_then */
extern T1 T833f18(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then */
extern T1 T651f66(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and_then */
extern T1 T182f47(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_implies */
extern T1 T1791f10(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies */
extern T1 T1268f6(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies */
extern T1 T1267f6(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies */
extern T1 T1242f28(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_implies */
extern T1 T1240f13(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_implies */
extern T1 T1239f13(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_implies */
extern T1 T1238f13(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies */
extern T1 T947f11(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies */
extern T1 T934f15(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_implies */
extern T1 T928f14(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_implies */
extern T1 T859f49(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_implies */
extern T1 T833f20(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies */
extern T1 T651f68(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_implies */
extern T1 T182f49(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or_else */
extern T1 T1791f16(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else */
extern T1 T1267f5(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else */
extern T1 T1242f34(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_or_else */
extern T1 T1240f12(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or_else */
extern T1 T1239f12(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_or_else */
extern T1 T1238f12(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else */
extern T1 T947f10(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else */
extern T1 T934f14(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else */
extern T1 T928f13(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or_else */
extern T1 T859f54(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or_else */
extern T1 T833f19(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else */
extern T1 T651f67(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or_else */
extern T1 T182f48(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.lower_name */
extern T0* T1791f27(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.name */
extern T0* T1791f31(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.lower_name */
extern T0* T1268f29(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.name */
extern T0* T1268f31(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.lower_name */
extern T0* T1267f29(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.name */
extern T0* T1267f31(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.lower_name */
extern T0* T947f42(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.name */
extern T0* T947f43(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.lower_name */
extern T0* T934f40(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.name */
extern T0* T934f41(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.lower_name */
extern T0* T928f43(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.name */
extern T0* T928f44(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.lower_name */
extern T0* T907f16(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.lower_name */
extern T0* T651f98(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.name */
extern T0* T651f99(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_tuple_label */
extern T1 T1268f10(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_tuple_label */
extern T1 T1267f10(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_tuple_label */
extern T1 T947f15(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_tuple_label */
extern T1 T934f19(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_tuple_label */
extern T1 T928f18(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_tuple_label */
extern T1 T651f72(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.position */
extern T0* T1268f30(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.position */
extern T0* T1267f30(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.position */
extern T0* T947f8(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.position */
extern T0* T934f5(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.position */
extern T0* T928f11(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.position */
extern T0* T907f9(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_call_agent */
extern T1 T1862f17(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_call_agent */
extern T1 T1270f11(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_call_agent */
extern T1 T1266f11(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_call_agent */
extern T1 T1250f10(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_call_agent */
extern T1 T989f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T291f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T288f6(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_tuple_label */
extern T1 T1862f16(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_tuple_label */
extern T1 T1270f10(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_tuple_label */
extern T1 T1266f10(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_tuple_label */
extern T1 T1250f9(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_tuple_label */
extern T1 T992f23(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_tuple_label */
extern T1 T989f8(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_tuple_label */
extern T1 T291f8(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_tuple_label */
extern T1 T288f5(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.position */
extern T0* T1250f11(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.position */
extern T0* T288f8(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments */
extern T0* T1862f14(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.arguments */
extern T0* T1270f9(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.arguments */
extern T0* T1250f8(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.name */
extern T0* T1862f15(GE_context* ac, T0* C);
/* ET_CALL_AGENT.name */
extern T0* T992f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.name */
extern T0* T291f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.name */
extern T0* T288f7(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.feature_name */
extern T0* T1791f24(GE_context* ac, T0* C);
/* ET_INFIX_NAME.feature_name */
extern T0* T1240f10(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.feature_name */
extern T0* T1239f31(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.feature_name */
extern T0* T1238f10(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.feature_name */
extern T0* T833f9(GE_context* ac, T0* C);
/* ET_IDENTIFIER.feature_name */
extern T0* T182f43(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_query */
extern T1 T1237f55(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_query */
extern T1 T1236f55(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_query */
extern T1 T1234f58(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_query */
extern T1 T1233f61(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_query */
extern T1 T1232f60(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_query */
extern T1 T534f52(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_query */
extern T1 T528f54(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_query */
extern T1 T366f38(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_query */
extern T1 T365f38(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_query */
extern T1 T363f39(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_query */
extern T1 T331f41(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_query */
extern T1 T260f39(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_dotnet */
extern T1 T1237f63(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_dotnet */
extern T1 T1236f61(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_dotnet */
extern T1 T1234f60(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_dotnet */
extern T1 T1233f63(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_dotnet */
extern T1 T1232f62(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_dotnet */
extern T1 T534f53(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_dotnet */
extern T1 T528f60(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_dotnet */
extern T1 T366f50(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_dotnet */
extern T1 T365f53(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_dotnet */
extern T1 T363f53(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_dotnet */
extern T1 T331f56(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_dotnet */
extern T1 T260f58(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.same_version */
extern T1 T1237f56(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.same_version */
extern T1 T1236f56(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.same_version */
extern T1 T1234f59(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.same_version */
extern T1 T1233f62(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.same_version */
extern T1 T1232f61(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.same_version */
extern T1 T534f54(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.same_version */
extern T1 T528f55(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.same_version */
extern T1 T366f39(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.same_version */
extern T1 T365f39(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.same_version */
extern T1 T363f40(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.same_version */
extern T1 T331f42(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.same_version */
extern T1 T260f40(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.undefined_feature */
extern T0* T1237f64(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_feature_clause */
extern void T534f92(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_semicolon */
extern void T534f91(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_end_keyword */
extern void T534f90(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.undefined_feature */
extern T0* T1236f62(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.undefined_feature */
extern T0* T1234f61(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_feature_clause */
extern void T1234f94(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_semicolon */
extern void T1234f93(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_end_keyword */
extern void T1234f92(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.undefined_feature */
extern T0* T1233f64(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.undefined_feature */
extern T0* T1232f63(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.undefined_feature */
extern T0* T534f59(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.undefined_feature */
extern T0* T528f61(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.undefined_feature */
extern T0* T366f57(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.obsolete_message */
extern T0* T366f59(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.undefined_feature */
extern T0* T365f59(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.obsolete_message */
extern T0* T365f61(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.undefined_feature */
extern T0* T363f59(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.obsolete_message */
extern T0* T363f61(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.undefined_feature */
extern T0* T331f62(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.undefined_feature */
extern T0* T260f64(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.renamed_feature */
extern T0* T1237f65(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_feature_clause */
extern void T1237f97(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_semicolon */
extern void T1237f96(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_end_keyword */
extern void T1237f95(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.renamed_feature */
extern T0* T1236f63(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_feature_clause */
extern void T1236f97(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_semicolon */
extern void T1236f96(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_end_keyword */
extern void T1236f95(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.renamed_feature */
extern T0* T1234f62(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_deferred_keyword */
extern void T1234f91(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.renamed_feature */
extern T0* T1233f65(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_feature_clause */
extern void T1233f99(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_semicolon */
extern void T1233f98(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_end_keyword */
extern void T1233f97(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.renamed_feature */
extern T0* T1232f64(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_feature_clause */
extern void T1232f97(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_semicolon */
extern void T1232f96(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_end_keyword */
extern void T1232f95(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.renamed_feature */
extern T0* T534f60(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_deferred_keyword */
extern void T534f89(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.renamed_feature */
extern T0* T528f62(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_feature_clause */
extern void T528f95(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_semicolon */
extern void T528f94(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_end_keyword */
extern void T528f93(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.renamed_feature */
extern T0* T366f58(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_indexing */
extern void T366f85(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_feature_clause */
extern void T366f84(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_semicolon */
extern void T366f83(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.renamed_feature */
extern T0* T365f60(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_indexing */
extern void T365f89(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_feature_clause */
extern void T365f88(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_semicolon */
extern void T365f87(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_unique_keyword */
extern void T365f86(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_is_keyword */
extern void T365f85(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.renamed_feature */
extern T0* T363f60(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_indexing */
extern void T363f88(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_feature_clause */
extern void T363f87(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_semicolon */
extern void T363f86(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_is_keyword */
extern void T363f85(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.renamed_feature */
extern T0* T331f63(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_feature_clause */
extern void T331f95(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_semicolon */
extern void T331f94(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_end_keyword */
extern void T331f93(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.renamed_feature */
extern T0* T260f65(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_feature_clause */
extern void T260f99(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_semicolon */
extern void T260f98(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_end_keyword */
extern void T260f97(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_bracketable */
extern T1 T1237f59(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_bracketable */
extern T1 T1236f59(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_bracketable */
extern T1 T534f57(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_bracketable */
extern T1 T528f58(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_prefixable */
extern T1 T1237f58(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_prefixable */
extern T1 T1236f58(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_prefixable */
extern T1 T534f56(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_prefixable */
extern T1 T528f57(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_infixable */
extern T1 T1237f57(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_infixable */
extern T1 T1236f57(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_infixable */
extern T1 T534f55(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_infixable */
extern T1 T528f56(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_attribute */
extern T1 T1237f38(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_attribute */
extern T1 T1236f36(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_attribute */
extern T1 T534f33(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_attribute */
extern T1 T528f42(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_constant_attribute */
extern T1 T1237f39(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_constant_attribute */
extern T1 T1236f38(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_constant_attribute */
extern T1 T534f36(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_constant_attribute */
extern T1 T528f36(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_unique_attribute */
extern T1 T1237f42(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_unique_attribute */
extern T1 T1236f41(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_unique_attribute */
extern T1 T534f37(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_unique_attribute */
extern T1 T528f37(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.type */
extern T0* T1237f40(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.type */
extern T0* T1236f40(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.type */
extern T0* T534f35(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.type */
extern T0* T528f31(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_procedure */
extern T1 T1237f53(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_procedure */
extern T1 T1236f53(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_procedure */
extern T1 T1234f57(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_procedure */
extern T1 T1233f60(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_procedure */
extern T1 T1232f59(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_procedure */
extern T1 T534f50(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_procedure */
extern T1 T528f53(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_procedure */
extern T1 T366f37(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_procedure */
extern T1 T365f37(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_procedure */
extern T1 T363f38(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_procedure */
extern T1 T331f40(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_procedure */
extern T1 T260f38(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once */
extern T1 T1237f54(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once */
extern T1 T534f51(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_once */
extern T1 T528f38(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.lower_name */
extern T0* T1237f31(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.lower_name */
extern T0* T1236f31(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.lower_name */
extern T0* T534f32(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.lower_name */
extern T0* T528f41(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_never_void */
extern T1 T1862f11(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_never_void */
extern T1 T1860f11(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_never_void */
extern T1 T1723f11(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_never_void */
extern T1 T1272f13(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_never_void */
extern T1 T1271f5(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_never_void */
extern T1 T1270f5(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_never_void */
extern T1 T1266f15(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_never_void */
extern T1 T1261f8(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_never_void */
extern T1 T1173f8(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_never_void */
extern T1 T1154f5(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_never_void */
extern T1 T989f5(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_never_void */
extern T1 T961f17(GE_context* ac, T0* C);
/* ET_VOID.is_never_void */
extern T1 T950f8(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_never_void */
extern T1 T748f8(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_never_void */
extern T1 T322f7(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_never_void */
extern T1 T321f7(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_never_void */
extern T1 T320f7(GE_context* ac, T0* C);
/* ET_RESULT.is_never_void */
extern T1 T313f5(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T292f11(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T291f6(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_never_void */
extern T1 T182f21(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_current */
extern T1 T1862f5(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_current */
extern T1 T1861f5(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_current */
extern T1 T1860f5(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_current */
extern T1 T1723f4(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1279f26(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1278f29(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1277f28(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1276f27(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1275f30(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1274f29(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_current */
extern T1 T1273f16(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_current */
extern T1 T1272f20(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_current */
extern T1 T1271f13(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_current */
extern T1 T1270f16(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_current */
extern T1 T1269f14(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_current */
extern T1 T1266f16(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_current */
extern T1 T1265f13(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_current */
extern T1 T1264f13(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_current */
extern T1 T1263f13(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_current */
extern T1 T1262f13(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_current */
extern T1 T1261f17(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_current */
extern T1 T1213f25(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_current */
extern T1 T1212f25(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_current */
extern T1 T1211f25(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_current */
extern T1 T1210f25(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_current */
extern T1 T1208f27(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_current */
extern T1 T1207f27(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_current */
extern T1 T1206f52(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_current */
extern T1 T1205f52(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_current */
extern T1 T1204f52(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_current */
extern T1 T1203f52(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_current */
extern T1 T1202f52(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_current */
extern T1 T1201f27(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_current */
extern T1 T1200f31(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_current */
extern T1 T1199f26(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_current */
extern T1 T1176f19(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_current */
extern T1 T1173f17(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_current */
extern T1 T1154f14(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_current */
extern T1 T1140f19(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_current */
extern T1 T992f19(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_current */
extern T1 T989f15(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_current */
extern T1 T961f23(GE_context* ac, T0* C);
/* ET_VOID.is_current */
extern T1 T950f20(GE_context* ac, T0* C);
/* ET_BIT_CONSTANT.is_current */
extern T1 T914f22(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_current */
extern T1 T832f24(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_current */
extern T1 T748f16(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_current */
extern T1 T326f17(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_current */
extern T1 T322f13(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_current */
extern T1 T321f13(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_current */
extern T1 T320f16(GE_context* ac, T0* C);
/* ET_RESULT.is_current */
extern T1 T313f21(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_current */
extern T1 T294f20(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_current */
extern T1 T292f14(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_current */
extern T1 T291f17(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_current */
extern T1 T182f87(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1279f32(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1278f34(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1277f33(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1276f33(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1275f35(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1274f34(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_false */
extern T1 T1273f20(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_false */
extern T1 T1272f25(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_false */
extern T1 T1271f17(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_false */
extern T1 T1270f22(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_false */
extern T1 T1269f18(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_false */
extern T1 T1266f20(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_false */
extern T1 T1265f17(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_false */
extern T1 T1264f17(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_false */
extern T1 T1263f17(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_false */
extern T1 T1262f17(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_false */
extern T1 T1261f21(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_false */
extern T1 T1213f29(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_false */
extern T1 T1212f29(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_false */
extern T1 T1211f29(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_false */
extern T1 T1210f29(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_false */
extern T1 T1208f31(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_false */
extern T1 T1207f31(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_false */
extern T1 T1206f58(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_false */
extern T1 T1205f58(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_false */
extern T1 T1204f58(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_false */
extern T1 T1203f58(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_false */
extern T1 T1202f58(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_false */
extern T1 T1201f32(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_false */
extern T1 T1200f36(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_false */
extern T1 T1199f30(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_false */
extern T1 T1176f24(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_false */
extern T1 T1173f21(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_false */
extern T1 T1154f18(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_false */
extern T1 T1140f23(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_false */
extern T1 T992f26(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_false */
extern T1 T989f21(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_false */
extern T1 T961f29(GE_context* ac, T0* C);
/* ET_VOID.is_false */
extern T1 T950f25(GE_context* ac, T0* C);
/* ET_BIT_CONSTANT.is_false */
extern T1 T914f27(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_false */
extern T1 T832f32(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_false */
extern T1 T748f22(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_false */
extern T1 T326f24(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_false */
extern T1 T322f17(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_false */
extern T1 T321f19(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_false */
extern T1 T320f20(GE_context* ac, T0* C);
/* ET_RESULT.is_false */
extern T1 T313f26(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_false */
extern T1 T294f24(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T292f19(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T291f22(GE_context* ac, T0* C);
/* ET_CURRENT.is_false */
extern T1 T286f28(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_false */
extern T1 T182f100(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.unparenthesized_expression */
extern T0* T1862f12(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.unparenthesized_expression */
extern T0* T1861f12(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.unparenthesized_expression */
extern T0* T1860f12(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.unparenthesized_expression */
extern T0* T1723f7(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1279f28(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1278f30(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1277f29(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1276f29(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1275f31(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1274f30(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1273f17(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.unparenthesized_expression */
extern T0* T1272f21(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.unparenthesized_expression */
extern T0* T1271f14(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.unparenthesized_expression */
extern T0* T1270f19(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.unparenthesized_expression */
extern T0* T1269f15(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.unparenthesized_expression */
extern T0* T1266f17(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.unparenthesized_expression */
extern T0* T1265f14(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.unparenthesized_expression */
extern T0* T1264f14(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.unparenthesized_expression */
extern T0* T1263f14(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.unparenthesized_expression */
extern T0* T1262f14(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.unparenthesized_expression */
extern T0* T1261f18(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1213f26(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1212f26(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.unparenthesized_expression */
extern T0* T1211f26(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.unparenthesized_expression */
extern T0* T1210f26(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.unparenthesized_expression */
extern T0* T1208f28(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.unparenthesized_expression */
extern T0* T1207f28(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1206f53(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1205f53(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1204f53(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1203f53(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1202f53(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1201f28(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.unparenthesized_expression */
extern T0* T1200f32(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1199f27(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.unparenthesized_expression */
extern T0* T1176f21(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T1173f18(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.unparenthesized_expression */
extern T0* T1154f15(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.unparenthesized_expression */
extern T0* T1140f20(GE_context* ac, T0* C);
/* ET_CALL_AGENT.unparenthesized_expression */
extern T0* T992f21(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.unparenthesized_expression */
extern T0* T989f18(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.unparenthesized_expression */
extern T0* T961f24(GE_context* ac, T0* C);
/* ET_VOID.unparenthesized_expression */
extern T0* T950f21(GE_context* ac, T0* C);
/* ET_BIT_CONSTANT.unparenthesized_expression */
extern T0* T914f23(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.unparenthesized_expression */
extern T0* T832f25(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.unparenthesized_expression */
extern T0* T748f17(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.unparenthesized_expression */
extern T0* T326f20(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T322f14(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T321f15(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.unparenthesized_expression */
extern T0* T320f17(GE_context* ac, T0* C);
/* ET_RESULT.unparenthesized_expression */
extern T0* T313f22(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.unparenthesized_expression */
extern T0* T294f21(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T292f16(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T291f19(GE_context* ac, T0* C);
/* ET_CURRENT.unparenthesized_expression */
extern T0* T286f24(GE_context* ac, T0* C);
/* ET_IDENTIFIER.unparenthesized_expression */
extern T0* T182f92(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1862f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FROM_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1861f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_BUILTIN_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1860f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_CAST_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1723f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1279f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1278f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1277f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1276f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1275f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1274f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1273f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T1272f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1271f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PREFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1270f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.manifest_constant_convert_feature */
extern T0* T1269f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1266f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXPRESSION_ADDRESS.manifest_constant_convert_feature */
extern T0* T1265f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT_ADDRESS.manifest_constant_convert_feature */
extern T0* T1264f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CURRENT_ADDRESS.manifest_constant_convert_feature */
extern T0* T1263f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_ADDRESS.manifest_constant_convert_feature */
extern T0* T1262f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1261f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C2_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1213f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C1_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1212f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FALSE_CONSTANT.manifest_constant_convert_feature */
extern T0* T1211f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TRUE_CONSTANT.manifest_constant_convert_feature */
extern T0* T1210f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T1208f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T1207f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BINARY_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1206f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OCTAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1205f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1204f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1203f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1202f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SPECIAL_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1201f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SPECIAL_MANIFEST_STRING.tokens */
extern T0* T1201f33(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.manifest_constant_convert_feature */
extern T0* T1200f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VERBATIM_STRING.tokens */
extern T0* T1200f37(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1199f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1176f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1173f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1154f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_ARRAY.manifest_constant_convert_feature */
extern T0* T1140f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.manifest_constant_convert_feature */
extern T0* T992f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T989f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACROSS_EXPRESSION.manifest_constant_convert_feature */
extern T0* T961f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VOID.manifest_constant_convert_feature */
extern T0* T950f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_CONSTANT.manifest_constant_convert_feature */
extern T0* T914f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T832f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.tokens */
extern T0* T832f30(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T748f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.manifest_constant_convert_feature */
extern T0* T326f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T322f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T321f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T320f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT.manifest_constant_convert_feature */
extern T0* T313f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TUPLE.manifest_constant_convert_feature */
extern T0* T294f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T292f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T291f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CURRENT.manifest_constant_convert_feature */
extern T0* T286f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER.manifest_constant_convert_feature */
extern T0* T182f99(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_TO_EXPRESSION.position */
extern T0* T1862f4(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.position */
extern T0* T1861f16(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.position */
extern T0* T1860f15(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.position */
extern T0* T1723f5(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.position */
extern T0* T1279f16(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.position */
extern T0* T1278f18(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.position */
extern T0* T1277f14(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.position */
extern T0* T1276f15(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.position */
extern T0* T1275f18(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.position */
extern T0* T1274f18(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.position */
extern T0* T1273f6(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.position */
extern T0* T1272f10(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.position */
extern T0* T1271f6(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.position */
extern T0* T1270f6(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.position */
extern T0* T1269f6(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.position */
extern T0* T1266f6(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.position */
extern T0* T1265f7(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.position */
extern T0* T1264f7(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.position */
extern T0* T1263f7(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.position */
extern T0* T1262f7(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.position */
extern T0* T1261f10(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.position */
extern T0* T1213f9(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.position */
extern T0* T1212f9(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.position */
extern T0* T1211f10(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.position */
extern T0* T1210f10(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.position */
extern T0* T1208f26(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.position */
extern T0* T1207f26(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.position */
extern T0* T1206f16(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.position */
extern T0* T1205f16(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position */
extern T0* T1204f16(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position */
extern T0* T1203f16(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.position */
extern T0* T1202f16(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.position */
extern T0* T1201f10(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.position */
extern T0* T1200f30(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.position */
extern T0* T1199f9(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.position */
extern T0* T1176f12(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_empty */
extern T1 T1176f7(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.position */
extern T0* T1173f9(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.position */
extern T0* T1154f6(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T1140f8(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_empty */
extern T1 T1140f6(GE_context* ac, T0* C);
/* ET_CALL_AGENT.position */
extern T0* T992f11(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.position */
extern T0* T989f6(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.position */
extern T0* T961f18(GE_context* ac, T0* C);
/* ET_VOID.position */
extern T0* T950f10(GE_context* ac, T0* C);
/* ET_BIT_CONSTANT.position */
extern T0* T914f10(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.position */
extern T0* T832f27(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.position */
extern T0* T748f9(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.position */
extern T0* T326f9(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.position */
extern T0* T322f8(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.position */
extern T0* T321f8(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.position */
extern T0* T320f8(GE_context* ac, T0* C);
/* ET_RESULT.position */
extern T0* T313f8(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.position */
extern T0* T294f15(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_empty */
extern T1 T294f16(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.position */
extern T0* T292f5(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.position */
extern T0* T291f10(GE_context* ac, T0* C);
/* ET_CURRENT.position */
extern T0* T286f8(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.last_leaf */
extern T0* T1862f21(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.last_leaf */
extern T0* T1861f20(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.last_leaf */
extern T0* T1860f16(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.last_leaf */
extern T0* T1723f15(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1279f33(GE_context* ac, T0* C);
extern T1 T1279f33ot1(T0* a1, T0** a2);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.last_leaf */
extern T0* T976f10(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1278f35(GE_context* ac, T0* C);
extern T1 T1278f35ot1(T0* a1, T0** a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1277f34(GE_context* ac, T0* C);
extern T1 T1277f34ot1(T0* a1, T0** a2);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T1276f34(GE_context* ac, T0* C);
extern T1 T1276f34ot1(T0* a1, T0** a2);
/* ET_ONCE_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T1275f36(GE_context* ac, T0* C);
extern T1 T1275f36ot1(T0* a1, T0** a2);
/* ET_DO_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T1274f35(GE_context* ac, T0* C);
extern T1 T1274f35ot1(T0* a1, T0** a2);
/* ET_ONCE_MANIFEST_STRING.last_leaf */
extern T0* T1273f21(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.last_leaf */
extern T0* T1272f26(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.last_leaf */
extern T0* T1271f18(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.last_leaf */
extern T0* T1270f23(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.last_leaf */
extern T0* T1269f19(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.last_leaf */
extern T0* T1266f21(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.last_leaf */
extern T0* T1265f18(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.last_leaf */
extern T0* T1264f18(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.last_leaf */
extern T0* T1263f18(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.last_leaf */
extern T0* T1262f18(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.last_leaf */
extern T0* T1261f22(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_leaf */
extern T0* T1213f35(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.last_leaf */
extern T0* T1212f35(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.last_leaf */
extern T0* T1211f31(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.last_leaf */
extern T0* T1210f31(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_leaf */
extern T0* T1208f33(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_leaf */
extern T0* T1207f33(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.last_leaf */
extern T0* T1206f65(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.last_leaf */
extern T0* T1205f65(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_leaf */
extern T0* T1204f65(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_leaf */
extern T0* T1203f65(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_leaf */
extern T0* T1202f65(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_leaf */
extern T0* T1201f35(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.last_leaf */
extern T0* T1200f39(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_leaf */
extern T0* T1199f36(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.last_leaf */
extern T0* T1176f25(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.last_leaf */
extern T0* T1173f26(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.last_leaf */
extern T0* T1154f19(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.last_leaf */
extern T0* T1140f24(GE_context* ac, T0* C);
/* ET_CALL_AGENT.last_leaf */
extern T0* T992f27(GE_context* ac, T0* C);
extern T1 T992f27ot1(T0* a1, T0** a2);
/* ET_BRACKET_EXPRESSION.last_leaf */
extern T0* T989f22(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.last_leaf */
extern T0* T651f100(GE_context* ac, T0* C);
/* ET_BRACKET_ARGUMENT_LIST.last_leaf */
extern T0* T986f10(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.last_leaf */
extern T0* T961f30(GE_context* ac, T0* C);
/* ET_VOID.last_leaf */
extern T0* T950f26(GE_context* ac, T0* C);
/* ET_BIT_CONSTANT.last_leaf */
extern T0* T914f29(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_leaf */
extern T0* T832f34(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.last_leaf */
extern T0* T748f23(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.last_leaf */
extern T0* T326f22(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.last_leaf */
extern T0* T322f18(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.last_leaf */
extern T0* T321f20(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.last_leaf */
extern T0* T320f21(GE_context* ac, T0* C);
/* ET_RESULT.last_leaf */
extern T0* T313f27(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.last_leaf */
extern T0* T294f25(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.last_leaf */
extern T0* T292f20(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.last_leaf */
extern T0* T291f23(GE_context* ac, T0* C);
/* ET_CURRENT.last_leaf */
extern T0* T286f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T831f7(GE_context* ac, T0* C, T0* a1);
extern T1 T831f7ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T831f7p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T831f11(GE_context* ac, T0* C, T0* a1);
extern T1 T831f11ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T831f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T533f10(GE_context* ac, T0* C, T0* a1);
extern T1 T533f10ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T533f10p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T533f13(GE_context* ac, T0* C, T0* a1);
extern T1 T533f13ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T533f13p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_type */
extern T1 T335f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_type */
extern T1 T334f62(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.has_type */
extern T1 T323f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.has_type */
extern T1 T306f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T274f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T274f7p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T274f11(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T274f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.has_type */
extern T1 T239f20(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_types */
extern T0* T335f63(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_types */
extern T0* T334f64(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_types */
extern T0* T323f63(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_types */
extern T0* T306f63(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.dynamic_types */
extern T0* T239f61(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.special_type */
extern T0* T831f14(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.special_type */
extern T0* T533f14(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.special_type */
extern T0* T335f69(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.special_type */
extern T0* T334f70(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.special_type */
extern T0* T323f69(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.special_type */
extern T0* T306f69(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.special_type */
extern T0* T274f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.special_type */
extern T0* T239f67(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_empty */
extern T1 T831f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_empty */
extern T1 T533f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_empty */
extern T1 T335f62(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_empty */
extern T1 T334f63(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_empty */
extern T1 T323f62(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_empty */
extern T1 T306f62(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_empty */
extern T1 T274f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_empty */
extern T1 T239f21(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_expanded */
extern T1 T831f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_expanded */
extern T1 T533f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_expanded */
extern T1 T274f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_expanded */
extern T1 T831f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_expanded */
extern T1 T533f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_expanded */
extern T1 T335f59(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_expanded */
extern T1 T334f60(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_expanded */
extern T1 T323f59(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_expanded */
extern T1 T306f59(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_expanded */
extern T1 T274f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.has_expanded */
extern T1 T239f70(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.count */
extern T6 T335f56(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.count */
extern T6 T334f57(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.count */
extern T6 T323f56(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.count */
extern T6 T306f56(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.count */
extern T6 T239f62(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.dynamic_type */
extern T0* T831f13(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.dynamic_type */
extern T0* T533f11(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_type */
extern T0* T335f57(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_type */
extern T0* T334f58(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_type */
extern T0* T323f57(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_type */
extern T0* T306f57(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.dynamic_type */
extern T0* T274f5(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.dynamic_type */
extern T0* T239f64(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.can_be_void */
extern T1 T831f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.can_be_void */
extern T1 T533f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.can_be_void */
extern T1 T335f58(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.can_be_void */
extern T1 T334f59(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.can_be_void */
extern T1 T323f58(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.can_be_void */
extern T1 T306f58(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.can_be_void */
extern T1 T274f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.can_be_void */
extern T1 T239f69(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_never_void */
extern T1 T335f60(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_never_void */
extern T1 T334f61(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_never_void */
extern T1 T323f60(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_never_void */
extern T1 T306f60(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_never_void */
extern T1 T239f34(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T1410f8(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.named_types */
extern T0* T1409f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.named_types */
extern T0* T644f6(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T505f2(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.named_types */
extern T0* T252f8(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T1410f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.conforms_to_types */
extern T1 T1409f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_LIST.conforms_to_types */
extern T1 T644f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T505f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.conforms_to_types */
extern T1 T252f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T1410f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.same_named_types */
extern T1 T1409f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_LIST.same_named_types */
extern T1 T644f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T505f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_named_types */
extern T1 T252f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T1410f7(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.actual_parameter */
extern T0* T1409f8(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.actual_parameter */
extern T0* T644f17(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T505f8(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.actual_parameter */
extern T0* T252f6(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.item */
extern T0* T252f7(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_anchored_type */
extern T1 T1410f11(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_anchored_type */
extern T1 T1409f12(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_anchored_type */
extern T1 T644f18(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_anchored_type */
extern T1 T505f9(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_anchored_type */
extern T1 T252f16(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T1410f12(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_formal_types */
extern T1 T1409f13(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_types */
extern T1 T644f19(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T505f10(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.has_formal_types */
extern T1 T252f17(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T1410f13(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.depends_on_qualified_anchored_type */
extern T1 T1409f14(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T644f20(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T505f11(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T252f18(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T1410f14(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.resolved_formal_parameters */
extern T0* T1409f15(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T644f21(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T505f12(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T252f19(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T1410f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.same_syntactical_types */
extern T1 T1409f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T644f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T505f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T252f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T1410f16(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_identifier_anchored_type */
extern T1 T1409f17(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T644f23(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T505f14(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T252f21(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T1410f10(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.is_empty */
extern T1 T1409f4(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.is_empty */
extern T1 T644f14(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T505f5(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T252f11(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.count */
extern T6 T1409f10(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T1410f9(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.type */
extern T0* T1409f11(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.type */
extern T0* T644f12(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T505f4(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.type */
extern T0* T252f9(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T1410f17(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.index_of_label */
extern T6 T1409f18(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.index_of_label */
extern T6 T644f24(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T505f15(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.index_of_label */
extern T6 T252f22(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T1410f18(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.last_leaf */
extern T0* T1409f19(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_leaf */
extern unsigned char ge808os11676;
extern T0* ge808ov11676;
extern T0* T81f1292(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.make */
extern T0* T1895c5(GE_context* ac);
/* ET_ACTUAL_PARAMETER_SUBLIST.tokens */
extern T0* T1409f20(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.last_leaf */
extern T0* T644f25(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T505f16(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.last_leaf */
extern T0* T252f25(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_reference_mark */
extern T1 T1221f6(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_reference */
extern T1 T1221f14(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_reference_mark */
extern T1 T1220f6(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_reference */
extern T1 T1220f14(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference_mark */
extern T1 T958f6(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference */
extern T1 T958f51(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_reference_mark */
extern T1 T651f10(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_reference */
extern T1 T651f56(GE_context* ac, T0* C);
/* ET_KEYWORD.is_reference_mark */
extern T1 T397f18(GE_context* ac, T0* C);
/* ET_SYMBOL.is_reference_mark */
extern T1 T346f10(GE_context* ac, T0* C);
/* ET_SYMBOL.is_reference */
extern T1 T346f58(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate_mark */
extern T1 T958f11(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate */
extern T1 T958f56(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separate_mark */
extern T1 T651f15(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separate */
extern T1 T651f61(GE_context* ac, T0* C);
/* ET_KEYWORD.is_separate_mark */
extern T1 T397f7(GE_context* ac, T0* C);
/* ET_KEYWORD.is_separate */
extern T1 T397f14(GE_context* ac, T0* C);
/* ET_SYMBOL.is_separate_mark */
extern T1 T346f15(GE_context* ac, T0* C);
/* ET_SYMBOL.is_separate */
extern T1 T346f61(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.overridden_type_mark */
extern T0* T1221f16(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.implicit_type_mark */
extern T0* T81f31(GE_context* ac, T0* C, T1 a1, T1 a2, T1 a3, T1 a4, T1 a5);
/* ET_TOKEN_CONSTANTS.implicit_no_type_mark */
extern unsigned char ge808os11674;
extern T0* ge808ov11674;
extern T0* T81f68(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_reference_type_mark */
extern unsigned char ge808os11670;
extern T0* ge808ov11670;
extern T0* T81f67(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_reference_mark */
extern void T345f18(GE_context* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_expanded_type_mark */
extern unsigned char ge808os11669;
extern T0* ge808ov11669;
extern T0* T81f66(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_expanded_mark */
extern void T345f17(GE_context* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_separate_type_mark */
extern unsigned char ge808os11671;
extern T0* ge808ov11671;
extern T0* T81f65(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_separate_mark */
extern void T345f16(GE_context* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_separate_reference_type_mark */
extern unsigned char ge808os11673;
extern T0* ge808ov11673;
extern T0* T81f64(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_separate_expanded_type_mark */
extern unsigned char ge808os11672;
extern T0* ge808ov11672;
extern T0* T81f63(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_reference_type_mark */
extern unsigned char ge808os11665;
extern T0* ge808ov11665;
extern T0* T81f61(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_expanded_type_mark */
extern unsigned char ge808os11664;
extern T0* ge808ov11664;
extern T0* T81f60(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_type_mark */
extern unsigned char ge808os11666;
extern T0* ge808ov11666;
extern T0* T81f59(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_reference_type_mark */
extern unsigned char ge808os11668;
extern T0* ge808ov11668;
extern T0* T81f58(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_expanded_type_mark */
extern unsigned char ge808os11667;
extern T0* ge808ov11667;
extern T0* T81f57(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_reference_type_mark */
extern unsigned char ge808os11659;
extern T0* ge808ov11659;
extern T0* T81f56(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_expanded_type_mark */
extern unsigned char ge808os11658;
extern T0* ge808ov11658;
extern T0* T81f55(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_type_mark */
extern unsigned char ge808os11660;
extern T0* ge808ov11660;
extern T0* T81f54(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_reference_type_mark */
extern unsigned char ge808os11662;
extern T0* ge808ov11662;
extern T0* T81f53(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_expanded_type_mark */
extern unsigned char ge808os11661;
extern T0* ge808ov11661;
extern T0* T81f52(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.tokens */
extern T0* T1221f12(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.overridden_type_mark */
extern T0* T1220f16(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.tokens */
extern T0* T1220f12(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.overridden_type_mark */
extern T0* T958f61(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.overridden_type_mark */
extern T0* T651f6(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.overridden_type_mark */
extern T0* T397f21(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.overridden_type_mark */
extern T0* T346f6(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.overridden_type_mark */
extern T0* T345f12(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.tokens */
extern T0* T345f11(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.text */
extern T0* T1221f4(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.text */
extern T0* T1220f4(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.text */
extern T0* T958f4(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.text */
extern T0* T651f8(GE_context* ac, T0* C);
/* ET_SYMBOL.text */
extern T0* T346f8(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.text */
extern T0* T345f9(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_expandedness_mark */
extern T1 T1221f9(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_expandedness_mark */
extern T1 T1220f9(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expandedness_mark */
extern T1 T958f9(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expandedness_mark */
extern T1 T651f13(GE_context* ac, T0* C);
/* ET_KEYWORD.is_expandedness_mark */
extern T1 T397f4(GE_context* ac, T0* C);
/* ET_SYMBOL.is_expandedness_mark */
extern T1 T346f13(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_expandedness_mark */
extern T1 T345f6(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_expanded_mark */
extern T1 T1221f5(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_expanded */
extern T1 T1221f13(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_expanded_mark */
extern T1 T1220f5(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_expanded */
extern T1 T1220f13(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded_mark */
extern T1 T958f5(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded */
extern T1 T958f50(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expanded_mark */
extern T1 T651f9(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expanded */
extern T1 T651f55(GE_context* ac, T0* C);
/* ET_KEYWORD.is_expanded_mark */
extern T1 T397f9(GE_context* ac, T0* C);
/* ET_SYMBOL.is_expanded_mark */
extern T1 T346f9(GE_context* ac, T0* C);
/* ET_SYMBOL.is_expanded */
extern T1 T346f57(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_separateness_mark */
extern T1 T1221f10(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_separateness_mark */
extern T1 T1220f10(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separateness_mark */
extern T1 T958f10(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separateness_mark */
extern T1 T651f14(GE_context* ac, T0* C);
/* ET_KEYWORD.is_separateness_mark */
extern T1 T397f5(GE_context* ac, T0* C);
/* ET_SYMBOL.is_separateness_mark */
extern T1 T346f14(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_separateness_mark */
extern T1 T345f7(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_implicit_mark */
extern T1 T1221f3(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_implicit_mark */
extern T1 T1220f3(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_implicit_mark */
extern T1 T958f69(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_implicit_mark */
extern T1 T651f7(GE_context* ac, T0* C);
/* ET_KEYWORD.is_implicit_mark */
extern T1 T397f8(GE_context* ac, T0* C);
/* ET_SYMBOL.is_implicit_mark */
extern T1 T346f7(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_attachment_mark */
extern T1 T1221f15(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_attachment_mark */
extern T1 T1220f15(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attachment_mark */
extern T1 T958f13(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attachment_mark */
extern T1 T651f5(GE_context* ac, T0* C);
/* ET_KEYWORD.is_attachment_mark */
extern T1 T397f6(GE_context* ac, T0* C);
/* ET_SYMBOL.is_attachment_mark */
extern T1 T346f4(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_attachment_mark */
extern T1 T345f10(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_attached_mark */
extern T1 T1221f7(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_attached_mark */
extern T1 T1220f7(GE_context* ac, T0* C);
/* ET_KEYWORD.is_attached */
extern T1 T397f12(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attached_mark */
extern T1 T958f7(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attached */
extern T1 T958f52(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attached_mark */
extern T1 T651f11(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attached */
extern T1 T651f57(GE_context* ac, T0* C);
/* ET_KEYWORD.is_attached_mark */
extern T1 T397f20(GE_context* ac, T0* C);
/* ET_KEYWORD.is_bang */
extern T1 T397f13(GE_context* ac, T0* C);
/* ET_SYMBOL.is_attached_mark */
extern T1 T346f11(GE_context* ac, T0* C);
/* ET_SYMBOL.is_attached */
extern T1 T346f59(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_detachable_mark */
extern T1 T1221f8(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_detachable_mark */
extern T1 T1220f8(GE_context* ac, T0* C);
/* ET_KEYWORD.is_detachable */
extern T1 T397f16(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_detachable_mark */
extern T1 T958f8(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_detachable */
extern T1 T958f54(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_detachable_mark */
extern T1 T651f12(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_detachable */
extern T1 T651f59(GE_context* ac, T0* C);
/* ET_KEYWORD.is_detachable_mark */
extern T1 T397f10(GE_context* ac, T0* C);
/* ET_KEYWORD.is_question_mark */
extern T1 T397f17(GE_context* ac, T0* C);
/* ET_SYMBOL.is_detachable_mark */
extern T1 T346f12(GE_context* ac, T0* C);
/* ET_SYMBOL.is_detachable */
extern T1 T346f60(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.position */
extern T0* T1221f17(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.position */
extern T0* T1220f17(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.position */
extern T0* T958f62(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.position */
extern T0* T651f4(GE_context* ac, T0* C);
/* ET_KEYWORD.position */
extern T0* T397f23(GE_context* ac, T0* C);
/* ET_SYMBOL.position */
extern T0* T346f5(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.position */
extern T0* T345f13(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_position */
extern unsigned char ge808os12232;
extern T0* ge808ov12232;
extern T0* T81f683(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.actual_parameter */
extern T0* T1565f6(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.actual_parameter */
extern T0* T1427f8(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.actual_parameter */
extern T0* T1249f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.actual_parameter */
extern T0* T1248f9(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.actual_parameter */
extern T0* T1247f9(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.actual_parameter */
extern T0* T1245f5(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.actual_parameter */
extern T0* T1223f9(GE_context* ac, T0* C);
/* ET_BIT_N.actual_parameter */
extern T0* T1222f9(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.actual_parameter */
extern T0* T1218f15(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.actual_parameter */
extern T0* T1090f13(GE_context* ac, T0* C);
/* ET_LIKE_N.actual_parameter */
extern T0* T867f16(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.actual_parameter */
extern T0* T504f6(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.actual_parameter */
extern T0* T261f38(GE_context* ac, T0* C);
/* ET_CLASS.actual_parameter */
extern T0* T82f103(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.actual_parameter */
extern T0* T80f41(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T1565f3(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T1427f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.type */
extern T0* T1249f8(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type */
extern T0* T1248f8(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.type */
extern T0* T1247f8(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.type */
extern T0* T1245f3(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.type */
extern T0* T1223f8(GE_context* ac, T0* C);
/* ET_BIT_N.type */
extern T0* T1222f8(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type */
extern T0* T1218f14(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.type */
extern T0* T1090f12(GE_context* ac, T0* C);
/* ET_LIKE_N.type */
extern T0* T867f15(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.type */
extern T0* T504f5(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.type */
extern T0* T261f37(GE_context* ac, T0* C);
/* ET_CLASS.type */
extern T0* T82f102(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.type */
extern T0* T80f7(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1565f5(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type */
extern T0* T1427f51(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type */
extern T0* T1249f52(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type */
extern T0* T1248f55(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type */
extern T0* T1247f54(GE_context* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1245f6(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.resolved_formal_parameters_with_type */
extern T0* T1223f82(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.resolved_formal_parameters_with_type */
extern T0* T1222f81(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1218f64(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1090f58(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.resolved_formal_parameters_with_type */
extern T0* T867f50(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type */
extern T0* T504f50(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type */
extern T0* T261f79(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type */
extern T0* T82f175(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T80f88(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.classes_in_group */
extern T0* T189f108(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T189f108ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T189f108ac2(T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T189f108ac3(T0* a1, T0* a2);
/* ET_ECF_LIBRARY.initial_classes_in_group_capacity */
extern unsigned char ge734os3698;
extern T6 ge734ov3698;
extern T6 T189f111(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.classes_in_group */
extern T0* T70f156(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_in_group */
extern T0* T70f156ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_in_group */
extern T0* T70f156ac2(T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.classes_in_group */
extern T0* T70f156ac3(T0* a1, T0* a2);
/* ET_LACE_SYSTEM.initial_classes_in_group_capacity */
extern T6 T70f164(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.classes_in_group */
extern T0* T64f164(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T64f164ac1(T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T64f164ac2(T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T64f164ac3(T0* a1, T0* a2);
/* ET_ECF_SYSTEM.initial_classes_in_group_capacity */
extern T6 T64f172(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.classes_in_group */
extern T0* T61f159(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_in_group */
extern T0* T61f159ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_in_group */
extern T0* T61f159ac2(T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.classes_in_group */
extern T0* T61f159ac3(T0* a1, T0* a2);
/* ET_XACE_SYSTEM.initial_classes_in_group_capacity */
extern T6 T61f167(GE_context* ac, T0* C);
/* ET_SYSTEM.classes_in_group */
extern T0* T33f148(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.classes_in_group */
extern T0* T33f148ac1(T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM.classes_in_group */
extern T0* T33f148ac2(T0* a1);
/* Creation of agent #3 in feature ET_SYSTEM.classes_in_group */
extern T0* T33f148ac3(T0* a1, T0* a2);
/* ET_SYSTEM.initial_classes_in_group_capacity */
extern T6 T33f151(GE_context* ac, T0* C);
/* ET_LIBRARY.full_name */
extern T0* T460f90(GE_context* ac, T0* C, T2 a1);
/* ET_LIBRARY.relative_name */
extern T0* T460f91(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.string_ */
extern T0* T460f92(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.full_name */
extern T0* T448f89(GE_context* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.relative_name */
extern T0* T448f92(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_DOTNET_ASSEMBLY.string_ */
extern T0* T448f94(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.full_name */
extern T0* T230f99(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.relative_name */
extern T0* T230f101(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.string_ */
extern T0* T230f103(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.full_name */
extern T0* T217f92(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_ASSEMBLY.relative_name */
extern T0* T217f94(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_ASSEMBLY.string_ */
extern T0* T217f96(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.full_name */
extern T0* T198f89(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.relative_name */
extern T0* T198f92(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_DOTNET_ASSEMBLY.string_ */
extern T0* T198f94(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.full_name */
extern T0* T189f101(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_SYSTEM.full_name */
extern T0* T70f155(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_SYSTEM.full_name */
extern T0* T64f171(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_SYSTEM.full_name */
extern T0* T61f166(GE_context* ac, T0* C, T2 a1);
/* ET_SYSTEM.full_name */
extern T0* T33f147(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_SYSTEM.relative_lower_name */
extern T0* T70f172(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_SYSTEM.string_ */
extern T0* T70f167(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.lower_name */
extern T0* T70f173(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.relative_lower_name */
extern T0* T64f180(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.string_ */
extern T0* T64f175(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.lower_name */
extern T0* T64f181(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.relative_lower_name */
extern T0* T61f176(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_SYSTEM.string_ */
extern T0* T61f171(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.lower_name */
extern T0* T61f177(GE_context* ac, T0* C);
/* ET_SYSTEM.relative_lower_name */
extern T0* T33f143(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.string_ */
extern T0* T33f137(GE_context* ac, T0* C);
/* ET_SYSTEM.lower_name */
extern T0* T33f145(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.relative_name */
extern T0* T70f163(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.relative_name */
extern T0* T64f173(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_SYSTEM.relative_name */
extern T0* T61f168(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.relative_name */
extern T0* T33f150(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.hash_code */
extern T6 T460f88(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.hash_code */
extern T6 T448f87(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.hash_code */
extern T6 T230f98(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.hash_code */
extern T6 T217f91(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.hash_code */
extern T6 T198f87(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.hash_code */
extern T6 T189f99(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.hash_code */
extern T6 T70f157(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.hash_code */
extern T6 T64f165(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.hash_code */
extern T6 T61f160(GE_context* ac, T0* C);
/* ET_SYSTEM.hash_code */
extern T6 T33f142(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.has_master_class */
extern T1 T189f107(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.has_master_class */
extern T1 T70f170(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.has_master_class */
extern T1 T64f177(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.has_master_class */
extern T1 T61f174(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.has_master_class */
extern T1 T33f141(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.master_class */
extern T0* T460f87(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.master_class */
extern T0* T189f98(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.master_class */
extern T0* T70f171(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.master_class */
extern T0* T64f178(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.master_class */
extern T0* T61f162(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.master_class */
extern T0* T33f139(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.shortest_path */
extern T0* T460f99(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.shortest_path */
extern T0* T460f99ac1(T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LIBRARY.shortest_path */
extern T0* T460f99ac2(T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.shortest_path */
extern T0* T460f99ac3(T0* a1, T0* a2);
/* KL_AGENT_ROUTINES [ET_UNIVERSE].negated */
extern T1 T1398f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.insert_in_hash_table */
extern void T460f180(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].force_first */
extern void T852f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].put */
extern void T852f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].move_cursors_right */
extern void T852f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE].set_position */
extern void T1466f5(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].move_right */
extern void T852f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].force */
extern void T1465f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_UNIVERSE].fill_with */
extern void T1464f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_UNIVERSE].extend */
extern void T1464f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].put_last */
extern void T852f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].resize */
extern void T852f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T1465f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T1464f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].new_capacity */
extern T6 T852f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].extendible */
extern T1 T852f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].before */
extern T1 T1396f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].back */
extern void T1396f16(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_back */
extern void T1395f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].add_traversing_cursor */
extern void T1395f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_next_cursor */
extern void T1396f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_position */
extern void T1396f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].remove_traversing_cursor */
extern void T1395f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_before */
extern void T1396f19(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_item */
extern T6 T1395f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].finish */
extern void T1396f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_finish */
extern void T1395f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_off */
extern T1 T1395f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].off */
extern T1 T1396f10(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].is_empty */
extern T1 T1395f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].forth */
extern void T1396f14(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_forth */
extern void T1395f58(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_after */
extern void T1396f17(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].go_after */
extern void T1396f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_go_after */
extern void T1395f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].has */
extern T1 T1395f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].search_position */
extern void T1395f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].hash_position */
extern T6 T1395f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_item */
extern T0* T1395f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_item */
extern T6 T1395f32(GE_context* ac, T0* C, T6 a1);
/* ET_LIBRARY.universe_actions */
extern unsigned char ge794os3717;
extern T0* ge794ov3717;
extern T0* T460f100(GE_context* ac, T0* C);
/* KL_AGENT_ROUTINES [ET_UNIVERSE].default_create */
extern T0* T1398c2(GE_context* ac);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].item */
extern T6 T1396f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_item */
extern T6 T1395f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_item */
extern T6 T1395f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].key */
extern T0* T1396f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_key */
extern T0* T1395f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].after */
extern T1 T1396f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].start */
extern void T1396f12(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_start */
extern void T1395f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_cursor */
extern T0* T1395f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].make */
extern T0* T1396c11(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].force_last */
extern void T1395f37(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_put */
extern void T1395f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_put */
extern void T1395f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_put */
extern void T1395f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].resize */
extern void T1395f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_resize */
extern void T1395f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].special_integer_ */
extern T0* T1395f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_resize */
extern void T1395f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_resize */
extern void T1395f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_resize */
extern void T1395f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_modulus */
extern T6 T1395f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_capacity */
extern T6 T1395f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_put */
extern void T1395f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].unset_found_item */
extern void T1395f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_map */
extern T0* T1395c36(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_with_equality_testers */
extern void T1395f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_sparse_container */
extern void T1395f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].set_internal_cursor */
extern void T1395f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_slots */
extern void T1395f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_clashes */
extern void T1395f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_key_storage */
extern void T1395f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_item_storage */
extern void T1395f51(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].make */
extern T0* T852c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].set_internal_cursor */
extern void T852f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].new_cursor */
extern T0* T852f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE].make */
extern T0* T1466c4(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].make */
extern T0* T1465f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_UNIVERSE].make_empty */
extern T0* T1464c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].default_create */
extern T0* T1465c3(GE_context* ac);
/* ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T448f98(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T448f98ac1(T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T448f98ac2(T0* a1);
/* Creation of agent #3 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T448f98ac3(T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T448f178(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.universe_actions */
extern T0* T448f99(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T230f110(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T230f110ac1(T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T230f110ac2(T0* a1);
/* Creation of agent #3 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T230f110ac3(T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.insert_in_hash_table */
extern void T230f201(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.universe_actions */
extern T0* T230f111(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T217f103(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T217f103ac1(T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T217f103ac2(T0* a1);
/* Creation of agent #3 in feature ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T217f103ac3(T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T217f187(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.universe_actions */
extern T0* T217f104(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T198f97(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T198f97ac1(T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T198f97ac2(T0* a1);
/* Creation of agent #3 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T198f97ac3(T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T198f178(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.universe_actions */
extern T0* T198f99(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.shortest_path */
extern T0* T189f113(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T189f113ac1(T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T189f113ac2(T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T189f113ac3(T0* a1, T0* a2);
/* ET_ECF_LIBRARY.insert_in_hash_table */
extern void T189f208(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_LIBRARY.universe_actions */
extern T0* T189f114(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.shortest_path */
extern T0* T70f166(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.shortest_path */
extern T0* T70f166ac1(T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.shortest_path */
extern T0* T70f166ac2(T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.shortest_path */
extern T0* T70f166ac3(T0* a1, T0* a2);
/* ET_LACE_SYSTEM.insert_in_hash_table */
extern void T70f311(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_LACE_SYSTEM.universe_actions */
extern T0* T70f168(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.shortest_path */
extern T0* T64f182(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T64f182ac1(T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T64f182ac2(T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T64f182ac3(T0* a1, T0* a2);
/* ET_ECF_SYSTEM.insert_in_hash_table */
extern void T64f303(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_SYSTEM.universe_actions */
extern T0* T64f162(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.shortest_path */
extern T0* T61f170(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.shortest_path */
extern T0* T61f170ac1(T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.shortest_path */
extern T0* T61f170ac2(T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.shortest_path */
extern T0* T61f170ac3(T0* a1, T0* a2);
/* ET_XACE_SYSTEM.insert_in_hash_table */
extern void T61f319(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_XACE_SYSTEM.universe_actions */
extern T0* T61f172(GE_context* ac, T0* C);
/* ET_SYSTEM.shortest_path */
extern T0* T33f154(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.shortest_path */
extern T0* T33f154ac1(T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_SYSTEM.shortest_path */
extern T0* T33f154ac2(T0* a1);
/* Creation of agent #3 in feature ET_SYSTEM.shortest_path */
extern T0* T33f154ac3(T0* a1, T0* a2);
/* ET_SYSTEM.insert_in_hash_table */
extern void T33f232(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_SYSTEM.universe_actions */
extern T0* T33f138(GE_context* ac, T0* C);
/* ET_LIBRARY.kind_name */
extern unsigned char ge728os15849;
extern T0* ge728ov15849;
extern T0* T460f96(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.kind_name */
extern unsigned char ge723os15849;
extern T0* ge723ov15849;
extern T0* T448f97(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.kind_name */
extern T0* T230f109(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.kind_name */
extern T0* T217f102(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.kind_name */
extern T0* T198f96(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.kind_name */
extern T0* T189f109(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.kind_name */
extern unsigned char ge734os3519;
extern T0* ge734ov3519;
extern T0* T70f179(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.kind_name */
extern T0* T64f186(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.kind_name */
extern T0* T61f183(GE_context* ac, T0* C);
/* ET_SYSTEM.kind_name */
extern T0* T33f156(GE_context* ac, T0* C);
/* ET_LIBRARY.full_lower_name */
extern T0* T460f94(GE_context* ac, T0* C, T2 a1);
/* ET_LIBRARY.relative_lower_name */
extern T0* T460f97(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.lower_name */
extern T0* T460f98(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T448f95(GE_context* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T448f96(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.full_lower_name */
extern T0* T230f107(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.relative_lower_name */
extern T0* T230f108(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T217f100(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T217f101(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T198f95(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T198f98(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.full_lower_name */
extern T0* T189f105(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_SYSTEM.full_lower_name */
extern T0* T70f180(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_SYSTEM.full_lower_name */
extern T0* T64f187(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_SYSTEM.full_lower_name */
extern T0* T61f184(GE_context* ac, T0* C, T2 a1);
/* ET_SYSTEM.full_lower_name */
extern T0* T33f157(GE_context* ac, T0* C, T2 a1);
/* ET_LIBRARY.adapted_universe */
extern T0* T460f89(GE_context* ac, T0* C, T0* a1);
extern T1 T460f89ot1(T0* a1, T0** a2);
extern T1 T460f89ot2(T0* a1, T0** a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.adapted_dotnet_assembly */
extern T0* T197f5(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.adapted_library */
extern T0* T190f5(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T448f88(GE_context* ac, T0* C, T0* a1);
extern T1 T448f88ot1(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].has */
extern T1 T1319f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.adapted_universe */
extern T0* T230f105(GE_context* ac, T0* C, T0* a1);
extern T1 T230f105ot1(T0* a1, T0** a2);
/* ET_LACE_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T217f98(GE_context* ac, T0* C, T0* a1);
extern T1 T217f98ot1(T0* a1, T0** a2);
/* ET_ECF_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T198f88(GE_context* ac, T0* C, T0* a1);
extern T1 T198f88ot1(T0* a1, T0** a2);
/* ET_ECF_LIBRARY.adapted_universe */
extern T0* T189f100(GE_context* ac, T0* C, T0* a1);
extern T1 T189f100ot1(T0* a1, T0** a2);
extern T1 T189f100ot2(T0* a1, T0** a2);
/* ET_LACE_SYSTEM.adapted_universe */
extern T0* T70f165(GE_context* ac, T0* C, T0* a1);
extern T1 T70f165ot1(T0* a1, T0** a2);
extern T1 T70f165ot2(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.adapted_universe */
extern T0* T64f174(GE_context* ac, T0* C, T0* a1);
extern T1 T64f174ot1(T0* a1, T0** a2);
extern T1 T64f174ot2(T0* a1, T0** a2);
/* ET_XACE_SYSTEM.adapted_universe */
extern T0* T61f169(GE_context* ac, T0* C, T0* a1);
extern T1 T61f169ot1(T0* a1, T0** a2);
extern T1 T61f169ot2(T0* a1, T0** a2);
/* ET_SYSTEM.adapted_universe */
extern T0* T33f153(GE_context* ac, T0* C, T0* a1);
extern T1 T33f153ot1(T0* a1, T0** a2);
extern T1 T33f153ot2(T0* a1, T0** a2);
/* ET_BIT_FEATURE.context_same_base_class_type_with_type_marks */
extern T1 T1223f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.context_same_base_class_type_with_type_marks */
extern T1 T1222f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_base_class_type_with_type_marks */
extern T1 T380f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T380f24ot1(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.cloned_type_context */
extern T0* T380f10(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.like_0 */
extern unsigned char ge808os11655;
extern T0* ge808ov11655;
extern T0* T81f231(GE_context* ac, T0* C);
/* ET_LIKE_N.make_zero */
extern T0* T867c72(GE_context* ac, T0* a1);
/* ET_LIKE_N.tokens */
extern T0* T867f7(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.context_same_base_class_type_with_type_marks */
extern T1 T261f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_class_type_with_type_marks */
extern T1 T82f135(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_class_type_with_type_marks */
extern T1 T80f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.context_same_base_tuple_type_with_type_marks */
extern T1 T1223f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.context_same_base_tuple_type_with_type_marks */
extern T1 T1222f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_base_tuple_type_with_type_marks */
extern T1 T380f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T380f25ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_base_tuple_type_with_type_marks */
extern T1 T261f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_tuple_type_with_type_marks */
extern T1 T82f136(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_tuple_type_with_type_marks */
extern T1 T80f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.context_same_named_class_type_with_type_marks */
extern T1 T1223f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.context_same_named_class_type_with_type_marks */
extern T1 T1222f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T380f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T380f19ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T261f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_class_type_with_type_marks */
extern T1 T82f137(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T80f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.context_same_named_tuple_type_with_type_marks */
extern T1 T1223f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.context_same_named_tuple_type_with_type_marks */
extern T1 T1222f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T380f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T380f20ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T261f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_tuple_type_with_type_marks */
extern T1 T82f138(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T80f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.context_conforms_from_class_type_with_type_marks */
extern T1 T1223f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.context_conforms_from_class_type_with_type_marks */
extern T1 T1222f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T380f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T380f27ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T261f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_conforms_from_class_type_with_type_marks */
extern T1 T82f140(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T80f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T1223f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.context_conforms_from_tuple_type_with_type_marks */
extern T1 T1222f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T380f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T380f28ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T261f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_conforms_from_tuple_type_with_type_marks */
extern T1 T82f141(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T80f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.named_base_class */
extern T0* T380f23(GE_context* ac, T0* C);
extern T1 T380f23ot1(T0* a1, T0** a2);
/* ET_BIT_FEATURE.context_is_type_expanded_with_type_mark */
extern T1 T1223f57(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.context_is_type_expanded_with_type_mark */
extern T1 T1222f56(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T380f29(GE_context* ac, T0* C, T0* a1);
extern T1 T380f29ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T261f57(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_expanded_with_type_mark */
extern T1 T82f142(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T80f59(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.context_base_type_with_type_mark */
extern T0* T1223f50(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.context_base_type_with_type_mark */
extern T0* T1222f49(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T380f30(GE_context* ac, T0* C, T0* a1);
extern T1 T380f30ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_base_type_with_type_mark */
extern T0* T261f58(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_base_type_with_type_mark */
extern T0* T82f143(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_with_type_mark */
extern T0* T80f60(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.context_same_named_type_with_type_marks */
extern T1 T1223f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.context_same_named_type_with_type_marks */
extern T1 T1222f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T380f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T380f11ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_type_with_type_marks */
extern T1 T261f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_type_with_type_marks */
extern T1 T82f144(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_type_with_type_marks */
extern T1 T80f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.context_is_type_detachable_with_type_mark */
extern T1 T1223f60(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.context_is_type_detachable_with_type_mark */
extern T1 T1222f59(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T380f31(GE_context* ac, T0* C, T0* a1);
extern T1 T380f31ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T261f60(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_detachable_with_type_mark */
extern T1 T82f145(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T80f62(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.context_conforms_to_type_with_type_marks */
extern T1 T1223f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.context_conforms_to_type_with_type_marks */
extern T1 T1222f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T380f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T380f21ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T261f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_conforms_to_type_with_type_marks */
extern T1 T82f146(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T80f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.context_named_type_with_type_mark */
extern T0* T1223f49(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.context_named_type_with_type_mark */
extern T0* T1222f48(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T380f12(GE_context* ac, T0* C, T0* a1);
extern T1 T380f12ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_named_type_with_type_mark */
extern T0* T261f62(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_named_type_with_type_mark */
extern T0* T82f147(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_named_type_with_type_mark */
extern T0* T80f64(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.context_conforms_from_bit_type_with_type_marks */
extern T1 T1223f89(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.context_conforms_from_bit_type_with_type_marks */
extern T1 T1222f88(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_bit_type_with_type_marks */
extern T1 T380f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T380f34ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_from_bit_type_with_type_marks */
extern T1 T261f89(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_conforms_from_bit_type_with_type_marks */
extern T1 T82f181(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_conforms_from_bit_type_with_type_marks */
extern T1 T80f91(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.context_same_named_bit_type_with_type_marks */
extern T1 T1223f90(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.context_same_named_bit_type_with_type_marks */
extern T1 T1222f89(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_named_bit_type_with_type_marks */
extern T1 T380f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T380f35ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_bit_type_with_type_marks */
extern T1 T261f90(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_bit_type_with_type_marks */
extern T1 T82f182(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_bit_type_with_type_marks */
extern T1 T80f92(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.context_same_base_bit_type_with_type_marks */
extern T1 T1223f91(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.context_same_base_bit_type_with_type_marks */
extern T1 T1222f90(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_base_bit_type_with_type_marks */
extern T1 T380f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T380f36ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_base_bit_type_with_type_marks */
extern T1 T261f91(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_bit_type_with_type_marks */
extern T1 T82f183(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_bit_type_with_type_marks */
extern T1 T80f93(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T1223f92(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T1222f91(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T380f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T380f37ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T261f92(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T82f184(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T80f94(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1223f93(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1222f92(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T380f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T380f38ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T261f93(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T82f185(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T80f95(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.context_is_type_reference_with_type_mark */
extern T1 T1223f94(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.context_is_type_reference_with_type_mark */
extern T1 T1222f93(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T380f39(GE_context* ac, T0* C, T0* a1);
extern T1 T380f39ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_reference_with_type_mark */
extern T1 T261f94(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_reference_with_type_mark */
extern T1 T82f186(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_reference_with_type_mark */
extern T1 T80f96(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.context_is_type_attached_with_type_mark */
extern T1 T1223f95(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.context_is_type_attached_with_type_mark */
extern T1 T1222f94(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T380f40(GE_context* ac, T0* C, T0* a1);
extern T1 T380f40ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_attached_with_type_mark */
extern T1 T261f95(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_attached_with_type_mark */
extern T1 T82f187(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_attached_with_type_mark */
extern T1 T80f97(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.attachment_type_conformance_mode */
extern T1 T1223f51(GE_context* ac, T0* C);
/* ET_BIT_N.attachment_type_conformance_mode */
extern T1 T1222f50(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T380f5(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.attachment_type_conformance_mode */
extern T1 T261f27(GE_context* ac, T0* C);
/* ET_CLASS.attachment_type_conformance_mode */
extern T1 T82f88(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.attachment_type_conformance_mode */
extern T1 T80f22(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.context_same_base_type_with_type_marks */
extern T1 T1223f108(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.context_same_base_type_with_type_marks */
extern T1 T1222f107(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_base_type_with_type_marks */
extern T1 T380f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T380f50ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_base_type_with_type_marks */
extern T1 T261f105(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_type_with_type_marks */
extern T1 T82f205(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_type_with_type_marks */
extern T1 T80f109(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.to_nested_type_context */
extern T0* T1223f44(GE_context* ac, T0* C);
/* ET_BIT_N.to_nested_type_context */
extern T0* T1222f43(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.to_nested_type_context */
extern T0* T380f7(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.to_nested_type_context */
extern T0* T261f32(GE_context* ac, T0* C);
/* ET_CLASS.to_nested_type_context */
extern T0* T82f52(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.to_nested_type_context */
extern T0* T80f34(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.context_base_type_actual_count */
extern T6 T1223f59(GE_context* ac, T0* C);
/* ET_BIT_N.context_base_type_actual_count */
extern T6 T1222f58(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual_count */
extern T6 T380f26(GE_context* ac, T0* C);
extern T1 T380f26ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_base_type_actual_count */
extern T6 T261f54(GE_context* ac, T0* C);
/* ET_CLASS.context_base_type_actual_count */
extern T6 T82f139(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.context_base_type_actual_count */
extern T6 T80f56(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.context_base_type_actual */
extern T0* T1223f73(GE_context* ac, T0* C, T6 a1);
/* ET_BIT_N.context_base_type_actual */
extern T0* T1222f72(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual */
extern T0* T380f33(GE_context* ac, T0* C, T6 a1);
extern T1 T380f33ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_base_type_actual */
extern T0* T261f70(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.context_base_type_actual */
extern T0* T82f162(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.context_base_type_actual */
extern T0* T80f74(GE_context* ac, T0* C, T6 a1);
/* ET_BIT_FEATURE.is_root_context */
extern T1 T1223f47(GE_context* ac, T0* C);
/* ET_BIT_N.is_root_context */
extern T1 T1222f46(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_root_context */
extern T1 T380f18(GE_context* ac, T0* C);
extern T1 T380f18ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.is_root_context */
extern T1 T261f15(GE_context* ac, T0* C);
/* ET_CLASS.is_root_context */
extern T1 T82f97(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_root_context */
extern T1 T80f18(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.as_nested_type_context */
extern T0* T1223f43(GE_context* ac, T0* C);
/* ET_BIT_N.as_nested_type_context */
extern T0* T1222f42(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.as_nested_type_context */
extern T0* T380f6(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.as_nested_type_context */
extern T0* T261f31(GE_context* ac, T0* C);
/* ET_CLASS.as_nested_type_context */
extern T0* T82f51(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.as_nested_type_context */
extern T0* T80f33(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.root_context */
extern T0* T1223f48(GE_context* ac, T0* C);
/* ET_BIT_N.root_context */
extern T0* T1222f47(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.root_context */
extern T0* T261f16(GE_context* ac, T0* C);
/* ET_CLASS.root_context */
extern T0* T82f91(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.root_context */
extern T0* T80f19(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.named_type */
extern T0* T380f9(GE_context* ac, T0* C);
/* ET_CLASS.context_named_type */
extern T0* T82f198(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.context_named_type */
extern T0* T80f105(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_class */
extern T0* T380f32(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.unaliased_to_text */
extern T0* T1427f32(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.unaliased_to_text */
extern T0* T1249f32(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.unaliased_to_text */
extern T0* T1248f31(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.unaliased_to_text */
extern T0* T1247f32(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.unaliased_to_text */
extern T0* T1218f24(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.unaliased_to_text */
extern T0* T1090f22(GE_context* ac, T0* C);
/* ET_LIKE_N.unaliased_to_text */
extern T0* T867f26(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.unaliased_to_text */
extern T0* T504f17(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.base_type */
extern T0* T1427f26(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_type */
extern T0* T1249f27(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type */
extern T0* T1248f26(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_type */
extern T0* T1247f27(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.base_type */
extern T0* T1223f26(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.base_type */
extern T0* T1222f27(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type */
extern T0* T1218f18(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.base_type */
extern T0* T1090f16(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.base_type */
extern T0* T867f20(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_type */
extern T0* T504f9(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type */
extern T0* T261f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.base_type */
extern T0* T82f56(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_type */
extern T0* T80f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_base_class_type_with_type_marks */
extern T1 T1427f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f11ot1(T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.tokens */
extern T0* T1427f24(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.same_base_class_type_with_type_marks */
extern T1 T1249f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.overridden_type_mark */
extern T0* T1249f24(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_class_type_with_type_marks */
extern T1 T1248f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.overridden_type_mark */
extern T0* T1248f22(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.same_base_class_type_with_type_marks */
extern T1 T1247f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.overridden_type_mark */
extern T0* T1247f23(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_class_type_with_type_marks */
extern T1 T1218f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f19ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_base_class_type_with_type_marks */
extern T1 T1090f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f17ot1(T0* a1);
/* ET_FORMAL_PARAMETER.tokens */
extern T0* T1090f59(GE_context* ac, T0* C);
/* ET_LIKE_N.same_base_class_type_with_type_marks */
extern T1 T867f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.overridden_type_mark */
extern T0* T867f6(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.valid_index */
extern T1 T380f22(GE_context* ac, T0* C, T6 a1);
/* ET_LIKE_CURRENT.same_base_class_type_with_type_marks */
extern T1 T504f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.overridden_type_mark */
extern T0* T504f26(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T1427f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f12ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T1249f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T1248f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_base_tuple_type_with_type_marks */
extern T1 T1247f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_tuple_type_with_type_marks */
extern T1 T1218f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f20ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_base_tuple_type_with_type_marks */
extern T1 T1090f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f18ot1(T0* a1);
/* ET_LIKE_N.same_base_tuple_type_with_type_marks */
extern T1 T867f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_base_tuple_type_with_type_marks */
extern T1 T504f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual_count */
extern T6 T1427f13(GE_context* ac, T0* C, T0* a1);
extern T1 T1427f13ot1(T0* a1, T0** a2);
extern T1 T1427f13ot2(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual_count */
extern T6 T1249f14(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual_count */
extern T6 T1248f14(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_type_actual_count */
extern T6 T1247f14(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T1218f22(GE_context* ac, T0* C, T0* a1);
extern T1 T1218f22ot1(T0* a1, T0** a2);
extern T1 T1218f22ot2(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T1090f20(GE_context* ac, T0* C, T0* a1);
extern T1 T1090f20ot1(T0* a1, T0** a2);
extern T1 T1090f20ot2(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_actual_count */
extern T6 T867f24(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_type_actual_count */
extern T6 T504f15(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1427f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f14ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1249f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1248f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.conforms_from_class_type_with_type_marks */
extern T1 T1247f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T1218f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f25ot1(T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T1090f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f23ot1(T0* a1);
/* ET_LIKE_N.conforms_from_class_type_with_type_marks */
extern T1 T867f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.conforms_from_class_type_with_type_marks */
extern T1 T504f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1427f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f15ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1249f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1248f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.conforms_from_tuple_type_with_type_marks */
extern T1 T1247f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T1218f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f26ot1(T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T1090f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f24ot1(T0* a1);
/* ET_LIKE_N.conforms_from_tuple_type_with_type_marks */
extern T1 T867f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.conforms_from_tuple_type_with_type_marks */
extern T1 T504f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_class_type_with_type_marks */
extern T1 T1427f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f40ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_named_class_type_with_type_marks */
extern T1 T1249f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_class_type_with_type_marks */
extern T1 T1248f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_class_type_with_type_marks */
extern T1 T1247f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T1218f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f29ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T1090f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f27ot1(T0* a1);
/* ET_LIKE_N.same_named_class_type_with_type_marks */
extern T1 T867f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_named_class_type_with_type_marks */
extern T1 T504f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1427f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f41ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1249f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1248f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_tuple_type_with_type_marks */
extern T1 T1247f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T1218f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f30ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T1090f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f28ot1(T0* a1);
/* ET_LIKE_N.same_named_tuple_type_with_type_marks */
extern T1 T867f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_named_tuple_type_with_type_marks */
extern T1 T504f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type_with_type_marks */
extern T1 T1427f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f5ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_type_with_type_marks */
extern T1 T1249f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type_with_type_marks */
extern T1 T1248f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.conforms_to_type_with_type_marks */
extern T1 T1247f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T1218f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f36ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T1090f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f34ot1(T0* a1, T0** a2);
/* ET_LIKE_N.conforms_to_type_with_type_marks */
extern T1 T867f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.conforms_to_type_with_type_marks */
extern T1 T504f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded_with_type_mark */
extern T1 T1427f16(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f16ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_expanded_with_type_mark */
extern T1 T1249f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded_with_type_mark */
extern T1 T1248f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_expanded_with_type_mark */
extern T1 T1247f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T1218f38(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1218f38ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T1090f36(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1090f36ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_expanded_with_type_mark */
extern T1 T867f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_expanded_with_type_mark */
extern T1 T504f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T1427f18(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f18ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_detachable_with_type_mark */
extern T1 T1249f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable_with_type_mark */
extern T1 T1248f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_detachable_with_type_mark */
extern T1 T1247f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T1218f40(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1218f40ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T1090f38(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1090f38ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_detachable_with_type_mark */
extern T1 T867f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_detachable_with_type_mark */
extern T1 T504f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_with_type_mark */
extern T0* T1427f17(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f17ot1(T0* a1, T0** a2);
extern T1 T1427f17ot2(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_with_type_mark */
extern T0* T1249f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.tokens */
extern T0* T1249f25(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_with_type_mark */
extern T0* T1248f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_with_type_mark */
extern T0* T1247f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T1218f39(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1218f39ot1(T0* a1, T0** a2);
extern T1 T1218f39ot2(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T1090f37(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1090f37ot1(T0* a1, T0** a2);
extern T1 T1090f37ot2(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_with_type_mark */
extern T0* T867f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_type_with_type_mark */
extern T0* T504f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.named_type_with_type_mark */
extern T0* T1427f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.named_type_with_type_mark */
extern T0* T1249f41(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type_with_type_mark */
extern T0* T1248f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.named_type_with_type_mark */
extern T0* T1247f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T1218f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T1090f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_N.named_type_with_type_mark */
extern T0* T867f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.named_type_with_type_mark */
extern T0* T504f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T1427f45(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_reference */
extern T1 T1249f47(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference */
extern T1 T1248f50(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_reference */
extern T1 T1247f49(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.is_type_reference */
extern T1 T1223f77(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.is_type_reference */
extern T1 T1222f76(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference */
extern T1 T1218f56(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_reference */
extern T1 T1090f52(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_reference */
extern T1 T867f45(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_reference */
extern T1 T504f45(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_reference */
extern T1 T261f74(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_reference */
extern T1 T82f166(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_reference */
extern T1 T80f78(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.has_anchored_type */
extern T1 T1427f36(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.has_anchored_type */
extern T1 T1249f35(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_anchored_type */
extern T1 T1248f34(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.has_anchored_type */
extern T1 T1247f35(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.has_anchored_type */
extern T1 T1223f70(GE_context* ac, T0* C);
/* ET_BIT_N.has_anchored_type */
extern T1 T1222f69(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_anchored_type */
extern T1 T1218f59(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.has_anchored_type */
extern T1 T1090f53(GE_context* ac, T0* C);
/* ET_LIKE_N.has_anchored_type */
extern T1 T867f38(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.has_anchored_type */
extern T1 T504f38(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.has_anchored_type */
extern T1 T261f67(GE_context* ac, T0* C);
/* ET_CLASS.has_anchored_type */
extern T1 T82f158(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.has_anchored_type */
extern T1 T80f71(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.has_formal_types */
extern T1 T1427f20(GE_context* ac, T0* C, T0* a1);
extern T1 T1427f20ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.has_formal_types */
extern T1 T1249f21(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_formal_types */
extern T1 T1248f35(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.has_formal_types */
extern T1 T1247f36(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.has_formal_types */
extern T1 T1223f71(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.has_formal_types */
extern T1 T1222f70(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_formal_types */
extern T1 T1218f41(GE_context* ac, T0* C, T0* a1);
extern T1 T1218f41ot1(T0* a1);
/* ET_FORMAL_PARAMETER.has_formal_types */
extern T1 T1090f39(GE_context* ac, T0* C, T0* a1);
extern T1 T1090f39ot1(T0* a1);
/* ET_LIKE_N.has_formal_types */
extern T1 T867f39(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.has_formal_types */
extern T1 T504f39(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.has_formal_types */
extern T1 T261f68(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.has_formal_types */
extern T1 T82f159(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.has_formal_types */
extern T1 T80f72(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.depends_on_qualified_anchored_type */
extern T1 T1427f37(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.depends_on_qualified_anchored_type */
extern T1 T1249f42(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.depends_on_qualified_anchored_type */
extern T1 T1248f45(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.depends_on_qualified_anchored_type */
extern T1 T1247f44(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.depends_on_qualified_anchored_type */
extern T1 T1223f72(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.depends_on_qualified_anchored_type */
extern T1 T1222f71(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T1218f60(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T1090f54(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.depends_on_qualified_anchored_type */
extern T1 T867f40(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.depends_on_qualified_anchored_type */
extern T1 T504f40(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.depends_on_qualified_anchored_type */
extern T1 T261f69(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.depends_on_qualified_anchored_type */
extern T1 T82f161(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.depends_on_qualified_anchored_type */
extern T1 T80f73(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters */
extern T0* T1427f50(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1427f66(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f66ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters */
extern T0* T1249f51(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1249f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters */
extern T0* T1248f54(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1248f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_right_brace */
extern void T1248f88(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_left_brace */
extern void T1248f87(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters */
extern T0* T1247f53(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type_mark */
extern T0* T1247f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.resolved_formal_parameters */
extern T0* T1223f81(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.resolved_formal_parameters_with_type_mark */
extern T0* T1223f100(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_N.resolved_formal_parameters */
extern T0* T1222f80(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.resolved_formal_parameters_with_type_mark */
extern T0* T1222f99(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T1218f63(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T1218f66(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1218f66ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T1090f57(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T1090f64(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1090f64ot1(T0* a1, T0** a2);
/* ET_LIKE_N.resolved_formal_parameters */
extern T0* T867f49(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.resolved_formal_parameters_with_type_mark */
extern T0* T867f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_formal_parameters */
extern T0* T504f49(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type_mark */
extern T0* T504f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.resolved_formal_parameters */
extern T0* T261f78(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T261f86(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.overridden_type_mark */
extern T0* T261f9(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_attached */
extern T1 T261f21(GE_context* ac, T0* C);
/* ET_CLASS.is_separate */
extern T1 T82f68(GE_context* ac, T0* C);
/* ET_CLASS.has_separate_mark */
extern T1 T82f85(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_separate */
extern T1 T261f20(GE_context* ac, T0* C);
/* ET_CLASS.resolved_formal_parameters */
extern T0* T82f174(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type_mark */
extern T0* T82f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.overridden_type_mark */
extern T0* T82f76(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_attached */
extern T1 T82f87(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.resolved_formal_parameters */
extern T0* T80f66(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T80f81(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.overridden_type_mark */
extern T0* T80f20(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_attached */
extern T1 T80f26(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_separate */
extern T1 T80f25(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type */
extern T1 T1427f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type */
extern T1 T1249f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type */
extern T1 T1248f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_type */
extern T1 T1247f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_syntactical_type */
extern T1 T1223f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_syntactical_type */
extern T1 T1222f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T1218f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T1090f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_N.same_syntactical_type */
extern T1 T867f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_type */
extern T1 T504f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_type */
extern T1 T261f81(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_type */
extern T1 T82f177(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_type */
extern T1 T80f67(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1427f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f54ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1249f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1248f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_type_with_type_marks */
extern T1 T1247f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.same_syntactical_type_with_type_marks */
extern T1 T1223f85(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.same_syntactical_type_with_type_marks */
extern T1 T1222f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T1218f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f51ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T1090f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f63ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_syntactical_type_with_type_marks */
extern T1 T867f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_type_with_type_marks */
extern T1 T504f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T261f82(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_generic */
extern T1 T261f25(GE_context* ac, T0* C);
/* ET_CLASS.same_syntactical_type_with_type_marks */
extern T1 T82f178(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_type_with_type_marks */
extern T1 T80f82(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1427f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f55ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1249f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1248f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1247f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1223f86(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.same_syntactical_tuple_type_with_type_marks */
extern T1 T1222f85(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T1218f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f49ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T1090f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f50ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_tuple_type_with_type_marks */
extern T1 T867f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_tuple_type_with_type_marks */
extern T1 T504f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T261f87(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_tuple_type_with_type_marks */
extern T1 T82f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T80f89(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1427f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f58ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1249f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1248f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_like_current_with_type_marks */
extern T1 T1247f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.same_syntactical_like_current_with_type_marks */
extern T1 T1223f96(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.same_syntactical_like_current_with_type_marks */
extern T1 T1222f95(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T1218f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f50ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T1090f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f51ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_like_current_with_type_marks */
extern T1 T867f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_like_current_with_type_marks */
extern T1 T504f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_attachment_marks_with_default */
extern T1 T504f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T261f96(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_like_current_with_type_marks */
extern T1 T82f188(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T80f98(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type_with_type_mark */
extern T0* T1427f59(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f59ot1(T0* a1, T0** a2);
extern T1 T1427f59ot2(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.shallow_base_type_with_type_mark */
extern T0* T1249f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type_with_type_mark */
extern T0* T1248f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.shallow_base_type_with_type_mark */
extern T0* T1247f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T1218f57(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1218f57ot1(T0* a1, T0** a2);
extern T1 T1218f57ot2(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T1090f60(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1090f60ot1(T0* a1, T0** a2);
extern T1 T1090f60ot2(T0* a1, T0** a2);
/* ET_LIKE_N.shallow_base_type_with_type_mark */
extern T0* T867f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.shallow_base_type_with_type_mark */
extern T0* T504f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type_with_type_mark */
extern T0* T1427f60(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f60ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.shallow_named_type_with_type_mark */
extern T0* T1249f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type_with_type_mark */
extern T0* T1248f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.shallow_named_type_with_type_mark */
extern T0* T1247f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T1218f58(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1218f58ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T1090f62(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1090f62ot1(T0* a1, T0** a2);
/* ET_LIKE_N.shallow_named_type_with_type_mark */
extern T0* T867f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.shallow_named_type_with_type_mark */
extern T0* T504f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1427f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f61ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1249f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1248f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1247f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1223f99(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1222f98(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1218f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f52ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1090f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f65ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T867f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T504f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T261f97(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T82f190(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T80f100(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.type_with_type_mark */
extern T0* T1427f48(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.type_with_type_mark */
extern T0* T1249f63(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_with_type_mark */
extern T0* T1248f66(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.type_with_type_mark */
extern T0* T1247f65(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.set_type_mark */
extern void T1247f89(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.twin */
extern T0* T1247f69(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.copy */
extern void T1247f90(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T1218f47(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T1090f45(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.type_with_type_mark */
extern T0* T867f61(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.set_like_keyword */
extern void T867f79(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.make */
extern T0* T867c78(GE_context* ac, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.type_with_type_mark */
extern T0* T504f61(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.set_current_keyword */
extern void T504f81(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type */
extern T0* T1427f46(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_base_type */
extern T0* T1249f48(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type */
extern T0* T1248f51(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_base_type */
extern T0* T1247f50(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.shallow_base_type */
extern T0* T1223f78(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.shallow_base_type */
extern T0* T1222f77(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type */
extern T0* T1218f45(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_base_type */
extern T0* T1090f43(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.shallow_base_type */
extern T0* T867f46(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_base_type */
extern T0* T504f46(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_base_type */
extern T0* T261f75(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.shallow_base_type */
extern T0* T82f167(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_base_type */
extern T0* T80f79(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1427f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f52ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1249f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1248f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_class_type_with_type_marks */
extern T1 T1247f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.same_syntactical_class_type_with_type_marks */
extern T1 T1223f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.same_syntactical_class_type_with_type_marks */
extern T1 T1222f82(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T1218f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f48ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T1090f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f49ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_class_type_with_type_marks */
extern T1 T867f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_class_type_with_type_marks */
extern T1 T504f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T261f80(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_class_type_with_type_marks */
extern T1 T82f176(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.is_type_separate_with_type_mark */
extern T1 T80f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_separate_with_type_mark */
extern T1 T82f89(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T80f86(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_bit_type_with_type_marks */
extern T1 T1427f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f33ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_bit_type_with_type_marks */
extern T1 T1249f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_bit_type_with_type_marks */
extern T1 T1248f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.conforms_from_bit_type_with_type_marks */
extern T1 T1247f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_bit_type_with_type_marks */
extern T1 T1218f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f27ot1(T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_bit_type_with_type_marks */
extern T1 T1090f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f25ot1(T0* a1);
/* ET_LIKE_N.conforms_from_bit_type_with_type_marks */
extern T1 T867f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.conforms_from_bit_type_with_type_marks */
extern T1 T504f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_bit_type_with_type_marks */
extern T1 T1427f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f28ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_named_bit_type_with_type_marks */
extern T1 T1249f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_bit_type_with_type_marks */
extern T1 T1248f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_bit_type_with_type_marks */
extern T1 T1247f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_bit_type_with_type_marks */
extern T1 T1218f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f31ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_named_bit_type_with_type_marks */
extern T1 T1090f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f29ot1(T0* a1);
/* ET_LIKE_N.same_named_bit_type_with_type_marks */
extern T1 T867f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_named_bit_type_with_type_marks */
extern T1 T504f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_base_bit_type_with_type_marks */
extern T1 T1427f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f27ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_base_bit_type_with_type_marks */
extern T1 T1249f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_bit_type_with_type_marks */
extern T1 T1248f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_base_bit_type_with_type_marks */
extern T1 T1247f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_bit_type_with_type_marks */
extern T1 T1218f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f21ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_base_bit_type_with_type_marks */
extern T1 T1090f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f19ot1(T0* a1);
/* ET_LIKE_N.same_base_bit_type_with_type_marks */
extern T1 T867f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_base_bit_type_with_type_marks */
extern T1 T504f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1427f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f29ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1249f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1248f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1247f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T1218f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f32ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T1090f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f30ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_named_formal_parameter_type_with_type_marks */
extern T1 T867f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_named_formal_parameter_type_with_type_marks */
extern T1 T504f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1427f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f34ot1(T0* a1, T0** a2);
extern T1 T1427f34ot2(T0* a1, T0** a2);
extern T1 T1427f34ot3(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1249f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1248f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1247f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1218f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f28ot1(T0* a1, T0** a2);
extern T1 T1218f28ot2(T0* a1, T0** a2);
extern T1 T1218f28ot3(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1090f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f26ot1(T0* a1, T0** a2);
extern T1 T1090f26ot2(T0* a1, T0** a2);
extern T1 T1090f26ot3(T0* a1, T0** a2);
/* ET_LIKE_N.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T867f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T504f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference_with_type_mark */
extern T1 T1427f42(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f42ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_reference_with_type_mark */
extern T1 T1249f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference_with_type_mark */
extern T1 T1248f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_reference_with_type_mark */
extern T1 T1247f47(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T1218f43(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1218f43ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T1090f41(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1090f41ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_reference_with_type_mark */
extern T1 T867f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_reference_with_type_mark */
extern T1 T504f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T1427f43(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f43ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_attached_with_type_mark */
extern T1 T1249f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_attached_with_type_mark */
extern T1 T1248f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_attached_with_type_mark */
extern T1 T1247f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T1218f44(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1218f44ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T1090f42(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1090f42ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_attached_with_type_mark */
extern T1 T867f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_attached_with_type_mark */
extern T1 T504f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.named_base_class */
extern T0* T1427f6(GE_context* ac, T0* C, T0* a1);
extern T1 T1427f6ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.named_base_class */
extern T0* T1249f7(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_base_class */
extern T0* T1248f7(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_base_class */
extern T0* T1247f7(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.named_base_class_in_context */
extern T0* T1223f7(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.named_base_class_in_context */
extern T0* T1222f7(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_base_class */
extern T0* T1218f37(GE_context* ac, T0* C, T0* a1);
extern T1 T1218f37ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.named_base_class */
extern T0* T1090f35(GE_context* ac, T0* C, T0* a1);
extern T1 T1090f35ot1(T0* a1, T0** a2);
/* ET_LIKE_N.named_base_class */
extern T0* T867f14(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_base_class */
extern T0* T504f23(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_base_class_in_context */
extern T0* T261f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.named_base_class_in_context */
extern T0* T82f82(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_base_class_in_context */
extern T0* T80f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_bit_type_with_type_marks */
extern T1 T1427f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f62ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_bit_type_with_type_marks */
extern T1 T1249f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_bit_type_with_type_marks */
extern T1 T1248f67(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_bit_type_with_type_marks */
extern T1 T1247f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.same_syntactical_bit_type_with_type_marks */
extern T1 T1223f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.same_syntactical_bit_type_with_type_marks */
extern T1 T1222f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_bit_type_with_type_marks */
extern T1 T1218f67(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f67ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_bit_type_with_type_marks */
extern T1 T1090f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f66ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_bit_type_with_type_marks */
extern T1 T867f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_bit_type_with_type_marks */
extern T1 T504f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_bit_type_with_type_marks */
extern T1 T261f98(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_bit_type_with_type_marks */
extern T1 T82f191(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_bit_type_with_type_marks */
extern T1 T80f101(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1427f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f63ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1249f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1248f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_like_feature_with_type_marks */
extern T1 T1247f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_attachment_marks_with_default */
extern T1 T1247f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_syntactical_like_feature_with_type_marks */
extern T1 T1223f101(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.same_syntactical_like_feature_with_type_marks */
extern T1 T1222f100(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T1218f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f68ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T1090f67(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f67ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_like_feature_with_type_marks */
extern T1 T867f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_like_feature_with_type_marks */
extern T1 T504f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T261f99(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_like_feature_with_type_marks */
extern T1 T82f192(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T80f102(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1427f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f64ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1249f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_attachment_marks_with_default */
extern T1 T1249f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1248f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_attachment_marks_with_default */
extern T1 T1248f71(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1247f71(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1223f102(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1222f101(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1218f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f69ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1090f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f68ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T867f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T504f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T261f100(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T82f193(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T80f103(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual */
extern T0* T1427f57(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1427f57ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual */
extern T0* T1249f58(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual */
extern T0* T1248f61(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_actual */
extern T0* T1247f60(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual */
extern T0* T1218f71(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1218f71ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_actual */
extern T0* T1090f70(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1090f70ot1(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_actual */
extern T0* T867f56(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_LIKE_CURRENT.base_type_actual */
extern T0* T504f56(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.has_identifier_anchored_type */
extern T1 T1427f65(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.has_identifier_anchored_type */
extern T1 T1249f69(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_identifier_anchored_type */
extern T1 T1248f72(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.has_identifier_anchored_type */
extern T1 T1247f72(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.has_identifier_anchored_type */
extern T1 T1223f103(GE_context* ac, T0* C);
/* ET_BIT_N.has_identifier_anchored_type */
extern T1 T1222f102(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T1218f70(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T1090f69(GE_context* ac, T0* C);
/* ET_LIKE_N.has_identifier_anchored_type */
extern T1 T867f66(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.has_identifier_anchored_type */
extern T1 T504f67(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.has_identifier_anchored_type */
extern T1 T261f101(GE_context* ac, T0* C);
/* ET_CLASS.has_identifier_anchored_type */
extern T1 T82f194(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.has_identifier_anchored_type */
extern T1 T80f104(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.base_type_index_of_label */
extern T6 T1427f69(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f69ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_index_of_label */
extern T6 T1249f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_index_of_label */
extern T6 T1248f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_index_of_label */
extern T6 T1247f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T1218f76(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1218f76ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T1090f75(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1090f75ot1(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_index_of_label */
extern T6 T867f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_type_index_of_label */
extern T6 T504f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_detachable */
extern T1 T1427f31(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_detachable */
extern T1 T1249f31(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable */
extern T1 T1248f30(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_detachable */
extern T1 T1247f31(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.is_type_detachable */
extern T1 T1223f30(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.is_type_detachable */
extern T1 T1222f29(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable */
extern T1 T1218f23(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_detachable */
extern T1 T1090f21(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_detachable */
extern T1 T867f25(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_detachable */
extern T1 T504f16(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_detachable */
extern T1 T261f44(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_detachable */
extern T1 T82f114(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_detachable */
extern T1 T80f40(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded */
extern T1 T1427f25(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_expanded */
extern T1 T1249f26(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded */
extern T1 T1248f25(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_expanded */
extern T1 T1247f26(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.is_type_expanded */
extern T1 T1223f25(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.is_type_expanded */
extern T1 T1222f26(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded */
extern T1 T1218f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_expanded */
extern T1 T1090f15(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_expanded */
extern T1 T867f19(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_expanded */
extern T1 T504f8(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_expanded */
extern T1 T261f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_expanded */
extern T1 T82f55(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_expanded */
extern T1 T80f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_named_type */
extern T1 T1427f56(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_named_type */
extern T1 T1249f57(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_named_type */
extern T1 T1248f60(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.is_named_type */
extern T1 T1247f59(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.is_named_type */
extern T1 T1223f87(GE_context* ac, T0* C);
/* ET_BIT_N.is_named_type */
extern T1 T1222f86(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_named_type */
extern T1 T1218f73(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_named_type */
extern T1 T1090f72(GE_context* ac, T0* C);
/* ET_LIKE_N.is_named_type */
extern T1 T867f55(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.is_named_type */
extern T1 T504f55(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_named_type */
extern T1 T261f88(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_named_type */
extern T1 T80f90(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type */
extern T1 T1427f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_named_type */
extern T1 T1249f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type */
extern T1 T1248f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_named_type */
extern T1 T1247f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type */
extern T1 T1218f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_named_type */
extern T1 T1090f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_N.same_named_type */
extern T1 T867f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_named_type */
extern T1 T504f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type */
extern T1 T1427f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_type */
extern T1 T1249f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type */
extern T1 T1248f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.conforms_to_type */
extern T1 T1247f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type */
extern T1 T1218f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.conforms_to_type */
extern T1 T1090f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_N.conforms_to_type */
extern T1 T867f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.conforms_to_type */
extern T1 T504f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.is_base_type */
extern T1 T1427f68(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_base_type */
extern T1 T1249f71(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_base_type */
extern T1 T1248f74(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.is_base_type */
extern T1 T1247f74(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.is_base_type */
extern T1 T1223f104(GE_context* ac, T0* C);
/* ET_BIT_N.is_base_type */
extern T1 T1222f103(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_base_type */
extern T1 T1218f75(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_base_type */
extern T1 T1090f74(GE_context* ac, T0* C);
/* ET_LIKE_N.is_base_type */
extern T1 T867f68(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.is_base_type */
extern T1 T504f69(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_base_type */
extern T1 T261f102(GE_context* ac, T0* C);
/* ET_CLASS.is_base_type */
extern T1 T82f200(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_base_type */
extern T1 T80f106(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.base_class */
extern T0* T1427f19(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_class */
extern T0* T1249f20(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_class */
extern T0* T1248f24(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_class */
extern T0* T1247f25(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.base_class_in_context */
extern T0* T1223f24(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.base_class_in_context */
extern T0* T1222f25(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_class */
extern T0* T1218f16(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.base_class */
extern T0* T1090f14(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.base_class */
extern T0* T867f18(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_class */
extern T0* T504f7(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_class_in_context */
extern T0* T261f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.base_class_in_context */
extern T0* T82f54(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_class_in_context */
extern T0* T80f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_type */
extern T0* T1427f38(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_type */
extern T0* T1249f36(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type */
extern T0* T1248f36(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_type */
extern T0* T1247f37(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.named_type */
extern T0* T1223f34(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.named_type */
extern T0* T1222f33(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type */
extern T0* T1218f53(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_type */
extern T0* T1090f46(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.named_type */
extern T0* T867f30(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_type */
extern T0* T504f21(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_type */
extern T0* T261f45(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.named_type */
extern T0* T82f115(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_type */
extern T0* T80f46(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type */
extern T0* T1427f47(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_named_type */
extern T0* T1249f49(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type */
extern T0* T1248f52(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_named_type */
extern T0* T1247f51(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.shallow_named_type */
extern T0* T1223f79(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.shallow_named_type */
extern T0* T1222f78(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type */
extern T0* T1218f54(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_named_type */
extern T0* T1090f47(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.shallow_named_type */
extern T0* T867f47(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_named_type */
extern T0* T504f47(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_named_type */
extern T0* T261f76(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.shallow_named_type */
extern T0* T82f168(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_named_type */
extern T0* T80f80(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_like_current */
extern T1 T1427f49(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_like_current */
extern T1 T1249f50(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_like_current */
extern T1 T1248f53(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.is_like_current */
extern T1 T1247f52(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.is_like_current */
extern T1 T1223f80(GE_context* ac, T0* C);
/* ET_BIT_N.is_like_current */
extern T1 T1222f79(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_like_current */
extern T1 T1218f55(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_like_current */
extern T1 T1090f48(GE_context* ac, T0* C);
/* ET_LIKE_N.is_like_current */
extern T1 T867f48(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_like_current */
extern T1 T261f77(GE_context* ac, T0* C);
/* ET_CLASS.is_like_current */
extern T1 T82f169(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_like_current */
extern T1 T80f87(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_base_type_with_type_marks */
extern T1 T1427f67(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f67ot1(T0* a1, T0** a2);
/* ET_CLASS_TYPE.same_base_formal_parameter_type_with_type_marks */
extern T1 T80f110(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_base_type_with_type_marks */
extern T1 T1249f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_type_with_type_marks */
extern T1 T1248f73(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_base_type_with_type_marks */
extern T1 T1247f73(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_type_with_type_marks */
extern T1 T1218f74(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f74ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_base_type_with_type_marks */
extern T1 T1090f73(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f73ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_base_type_with_type_marks */
extern T1 T867f67(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_base_type_with_type_marks */
extern T1 T504f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.to_text */
extern T0* T1427f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.to_text */
extern T0* T1249f10(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.to_text */
extern T0* T1248f10(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.to_text */
extern T0* T1247f10(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.to_text */
extern T0* T1218f65(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.to_text */
extern T0* T1090f61(GE_context* ac, T0* C);
/* ET_LIKE_N.to_text */
extern T0* T867f5(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.to_text */
extern T0* T504f33(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.last_leaf */
extern T0* T1427f71(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.last_leaf */
extern T0* T1249f75(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.last_leaf */
extern T0* T1248f78(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.last_leaf */
extern T0* T1247f79(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.last_leaf */
extern T0* T1223f110(GE_context* ac, T0* C);
/* ET_BIT_N.last_leaf */
extern T0* T1222f109(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.last_leaf */
extern T0* T504f73(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.last_leaf */
extern T0* T261f107(GE_context* ac, T0* C);
/* ET_CLASS.last_leaf */
extern T0* T82f208(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.last_leaf */
extern T0* T80f112(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type_with_type_marks */
extern T1 T1427f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f21ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.same_named_type_with_type_marks */
extern T1 T1249f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type_with_type_marks */
extern T1 T1248f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_type_with_type_marks */
extern T1 T1247f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T1218f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1218f35ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T1090f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1090f33ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_named_type_with_type_marks */
extern T1 T867f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_named_type_with_type_marks */
extern T1 T504f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.position */
extern T0* T1427f10(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.position */
extern T0* T1249f11(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.position */
extern T0* T1248f11(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.position */
extern T0* T1247f11(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.position */
extern T0* T1223f11(GE_context* ac, T0* C);
/* ET_BIT_N.position */
extern T0* T1222f14(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.position */
extern T0* T1218f72(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.position */
extern T0* T1090f71(GE_context* ac, T0* C);
/* ET_LIKE_N.position */
extern T0* T867f17(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.position */
extern T0* T504f34(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.position */
extern T0* T261f63(GE_context* ac, T0* C);
/* ET_CLASS.position */
extern T0* T82f154(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.position */
extern T0* T80f65(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.preconditions */
extern T0* T366f44(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.preconditions */
extern T0* T365f44(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.preconditions */
extern T0* T363f45(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.postconditions */
extern T0* T366f52(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.postconditions */
extern T0* T365f51(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.postconditions */
extern T0* T363f52(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.new_synonym */
extern T0* T1234f46(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_synonym */
extern void T1234f95(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.new_synonym */
extern T0* T1233f46(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_synonym */
extern void T1233f100(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.new_synonym */
extern T0* T1232f46(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_synonym */
extern void T1232f98(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.new_synonym */
extern T0* T366f43(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_synonym */
extern void T366f86(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.new_synonym */
extern T0* T365f43(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_synonym */
extern void T365f90(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.new_synonym */
extern T0* T363f43(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_synonym */
extern void T363f89(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.new_synonym */
extern T0* T331f52(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_synonym */
extern void T331f96(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.new_synonym */
extern T0* T260f60(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_synonym */
extern void T260f100(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.is_deferred */
extern T1 T1233f39(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_deferred */
extern T1 T1232f39(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_deferred */
extern T1 T366f56(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_deferred */
extern T1 T365f56(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_deferred */
extern T1 T363f57(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_deferred */
extern T1 T331f55(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_deferred */
extern T1 T260f53(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_frozen */
extern T1 T1234f40(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_frozen */
extern T1 T1233f40(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_frozen */
extern T1 T1232f40(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_frozen */
extern T1 T366f23(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_frozen */
extern T1 T365f57(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_frozen */
extern T1 T363f58(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_frozen */
extern T1 T331f57(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_frozen */
extern T1 T260f54(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_bracketable */
extern T1 T1234f41(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_bracketable */
extern T1 T1233f41(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_bracketable */
extern T1 T1232f41(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_bracketable */
extern T1 T366f24(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_bracketable */
extern T1 T365f58(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_bracketable */
extern T1 T363f25(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_bracketable */
extern T1 T331f59(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_bracketable */
extern T1 T260f55(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_parenthesisable */
extern T1 T1234f43(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_parenthesisable */
extern T1 T1233f42(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_parenthesisable */
extern T1 T1232f42(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_parenthesisable */
extern T1 T366f25(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_parenthesisable */
extern T1 T365f25(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_parenthesisable */
extern T1 T363f26(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_parenthesisable */
extern T1 T331f60(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_parenthesisable */
extern T1 T260f56(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_prefixable */
extern T1 T1234f38(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_prefixable */
extern T1 T1233f38(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_prefixable */
extern T1 T1232f38(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_prefixable */
extern T1 T260f52(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_infixable */
extern T1 T1234f37(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_infixable */
extern T1 T1233f37(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_infixable */
extern T1 T1232f37(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_infixable */
extern T1 T366f54(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_infixable */
extern T1 T365f52(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_infixable */
extern T1 T363f54(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_infixable */
extern T1 T331f53(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_infixable */
extern T1 T260f51(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once */
extern T1 T1234f44(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_once */
extern T1 T1232f43(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_once */
extern T1 T366f26(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once */
extern T1 T365f26(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once */
extern T1 T363f27(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once */
extern T1 T331f61(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once */
extern T1 T260f59(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_constant_attribute */
extern T1 T1234f30(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_constant_attribute */
extern T1 T1233f48(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_constant_attribute */
extern T1 T1232f48(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_constant_attribute */
extern T1 T366f27(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_constant_attribute */
extern T1 T365f40(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_constant_attribute */
extern T1 T331f43(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_constant_attribute */
extern T1 T260f43(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_unique_attribute */
extern T1 T1234f32(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_unique_attribute */
extern T1 T1233f50(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_unique_attribute */
extern T1 T1232f32(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_unique_attribute */
extern T1 T366f47(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_unique_attribute */
extern T1 T363f48(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_unique_attribute */
extern T1 T331f48(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_unique_attribute */
extern T1 T260f46(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_seed */
extern T1 T1234f33(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.has_seed */
extern T1 T1233f33(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.has_seed */
extern T1 T1232f33(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.has_seed */
extern T1 T366f40(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.has_seed */
extern T1 T365f41(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.has_seed */
extern T1 T363f42(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.has_seed */
extern T1 T331f44(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.has_seed */
extern T1 T260f45(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.arguments_count */
extern T6 T1234f34(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.arguments_count */
extern T6 T1233f34(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.arguments_count */
extern T6 T1232f34(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.arguments_count */
extern T6 T366f49(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments_count */
extern T6 T365f49(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments_count */
extern T6 T363f50(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.arguments_count */
extern T6 T331f50(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.arguments_count */
extern T6 T260f48(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.arguments */
extern T0* T366f48(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments */
extern T0* T365f48(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments */
extern T0* T363f49(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.arguments */
extern T0* T331f49(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.name */
extern T0* T1234f36(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.name */
extern T0* T1233f36(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.name */
extern T0* T1232f36(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.name */
extern T0* T366f41(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.name */
extern T0* T365f27(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.name */
extern T0* T363f46(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.name */
extern T0* T331f45(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.name */
extern T0* T260f47(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_name */
extern T0* T1234f69(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_extended_name */
extern T0* T1234f71(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_name */
extern T0* T1233f71(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_extended_name */
extern T0* T1233f73(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_name */
extern T0* T1232f70(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_extended_name */
extern T0* T1232f72(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_name */
extern T0* T366f66(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_extended_name */
extern T0* T366f68(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_name */
extern T0* T365f68(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_extended_name */
extern T0* T365f70(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_name */
extern T0* T363f68(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_extended_name */
extern T0* T363f70(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_name */
extern T0* T331f69(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_extended_name */
extern T0* T331f71(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_name */
extern T0* T260f74(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_extended_name */
extern T0* T260f76(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.alias_name */
extern T0* T1234f35(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.alias_name */
extern T0* T1233f35(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.alias_name */
extern T0* T1232f35(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.alias_name */
extern T0* T366f51(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.alias_name */
extern T0* T365f50(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.alias_name */
extern T0* T363f51(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.alias_name */
extern T0* T331f51(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.alias_name */
extern T0* T260f49(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_alias_name */
extern T0* T1234f70(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_alias_name */
extern T0* T1233f72(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_alias_name */
extern T0* T1232f71(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_alias_name */
extern T0* T366f67(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_alias_name */
extern T0* T365f69(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_alias_name */
extern T0* T363f69(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_alias_name */
extern T0* T331f70(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_alias_name */
extern T0* T260f75(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_exported_to */
extern T1 T1234f66(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.has_descendant */
extern T1 T1014f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.has_ancestor */
extern T1 T82f206(GE_context* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.has_class */
extern T1 T396f6(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.has_descendant */
extern T1 T469f8(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.is_exported_to */
extern T1 T1233f68(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.is_exported_to */
extern T1 T1232f67(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.is_exported_to */
extern T1 T366f63(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.is_exported_to */
extern T1 T365f65(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.is_exported_to */
extern T1 T363f65(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.is_exported_to */
extern T1 T331f66(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_exported_to */
extern T1 T260f71(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.type */
extern T0* T1234f31(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.type */
extern T0* T1233f49(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.type */
extern T0* T1232f49(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.type */
extern T0* T366f46(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.type */
extern T0* T365f46(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.type */
extern T0* T363f47(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.type */
extern T0* T331f47(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.type */
extern T0* T260f44(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_attribute */
extern T1 T1234f47(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_attribute */
extern T1 T1233f47(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_attribute */
extern T1 T1232f47(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_attribute */
extern T1 T365f45(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_attribute */
extern T1 T363f44(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_attribute */
extern T1 T260f42(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.lower_name */
extern T0* T1234f45(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.lower_name */
extern T0* T1233f45(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.lower_name */
extern T0* T1232f45(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.lower_name */
extern T0* T366f42(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.lower_name */
extern T0* T365f42(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.lower_name */
extern T0* T363f28(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.lower_name */
extern T0* T331f46(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.lower_name */
extern T0* T260f50(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.new_synonym */
extern T0* T1237f37(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_synonym */
extern void T1237f98(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.new_synonym */
extern T0* T1236f35(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_synonym */
extern void T1236f98(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.new_synonym */
extern T0* T534f39(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_synonym */
extern void T534f93(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.new_synonym */
extern T0* T528f43(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_synonym */
extern void T528f96(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.has_seed */
extern T1 T1237f41(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.has_seed */
extern T1 T1236f42(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.has_seed */
extern T1 T534f38(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.has_seed */
extern T1 T528f40(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.is_deferred */
extern T1 T1237f32(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_deferred */
extern T1 T1236f32(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_deferred */
extern T1 T528f32(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_frozen */
extern T1 T1237f33(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_frozen */
extern T1 T1236f33(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_frozen */
extern T1 T534f30(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_frozen */
extern T1 T528f33(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_parenthesisable */
extern T1 T1237f36(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_parenthesisable */
extern T1 T1236f34(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_parenthesisable */
extern T1 T534f31(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_parenthesisable */
extern T1 T528f34(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.name */
extern T0* T1237f43(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.name */
extern T0* T1236f39(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.name */
extern T0* T534f28(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.name */
extern T0* T528f39(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_name */
extern T0* T1237f73(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_extended_name */
extern T0* T1237f75(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_name */
extern T0* T1236f70(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_extended_name */
extern T0* T1236f72(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_name */
extern T0* T534f68(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_extended_name */
extern T0* T534f70(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_name */
extern T0* T528f69(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_extended_name */
extern T0* T528f71(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.alias_name */
extern T0* T1237f30(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.alias_name */
extern T0* T1236f43(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.alias_name */
extern T0* T534f40(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.alias_name */
extern T0* T528f30(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_alias_name */
extern T0* T1237f74(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_alias_name */
extern T0* T1236f71(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_alias_name */
extern T0* T534f69(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_alias_name */
extern T0* T528f70(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.arguments_count */
extern T6 T1237f72(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.arguments_count */
extern T6 T1236f69(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.arguments_count */
extern T6 T534f67(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.arguments_count */
extern T6 T528f68(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_creation_exported_to */
extern T1 T1237f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_creation_exported_to */
extern T1 T82f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_exported_to */
extern T1 T834f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_exported_to */
extern T1 T1045f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_creation_exported_to */
extern T1 T1236f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_PROCEDURE.is_creation_exported_to */
extern T1 T534f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE.is_creation_exported_to */
extern T1 T528f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.is_exported_to */
extern T1 T1237f69(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.is_exported_to */
extern T1 T1236f66(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.is_exported_to */
extern T1 T534f64(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.is_exported_to */
extern T1 T528f65(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.is_infix */
extern T1 T1239f9(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix */
extern T1 T1238f9(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix */
extern T1 T182f53(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix */
extern T1 T1240f8(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix */
extern T1 T833f15(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix */
extern T1 T182f52(GE_context* ac, T0* C);
/* ET_INFIX_NAME.hash_code */
extern T6 T1240f5(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.hash_code */
extern T6 T1238f5(GE_context* ac, T0* C);
/* ET_INFIX_NAME.first_leaf */
extern T0* T1240f76(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.first_leaf */
extern T0* T1239f63(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.first_leaf */
extern T0* T1238f62(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.first_leaf */
extern T0* T833f63(GE_context* ac, T0* C);
/* ET_IDENTIFIER.first_leaf */
extern T0* T182f93(GE_context* ac, T0* C);
/* ET_INFIX_NAME.same_feature_name */
extern T1 T1240f42(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_feature_name */
extern T1 T1239f21(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_NAME.same_feature_name */
extern T1 T1238f28(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_feature_name */
extern T1 T833f11(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.same_feature_name */
extern T1 T182f42(GE_context* ac, T0* C, T0* a1);
extern T1 T182f42ot1(T0* a1, T0** a2);
/* ET_INFIX_NAME.is_argument */
extern T1 T1240f62(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_argument */
extern T1 T1239f51(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_argument */
extern T1 T1238f48(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_argument */
extern T1 T833f49(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_argument */
extern T1 T182f27(GE_context* ac, T0* C);
/* ET_INFIX_NAME.argument_name */
extern T0* T1240f63(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.argument_name */
extern T0* T1239f52(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.argument_name */
extern T0* T1238f49(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.argument_name */
extern T0* T833f50(GE_context* ac, T0* C);
/* ET_IDENTIFIER.argument_name */
extern T0* T182f71(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_local */
extern T1 T1240f64(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_local */
extern T1 T1239f53(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_local */
extern T1 T1238f50(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_local */
extern T1 T833f51(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_local */
extern T1 T182f29(GE_context* ac, T0* C);
/* ET_INFIX_NAME.local_name */
extern T0* T1240f65(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.local_name */
extern T0* T1239f54(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.local_name */
extern T0* T1238f51(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.local_name */
extern T0* T833f52(GE_context* ac, T0* C);
/* ET_IDENTIFIER.local_name */
extern T0* T182f72(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_object_test_local */
extern T1 T1240f66(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_object_test_local */
extern T1 T1239f55(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_object_test_local */
extern T1 T1238f52(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_object_test_local */
extern T1 T833f53(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_object_test_local */
extern T1 T182f17(GE_context* ac, T0* C);
/* ET_INFIX_NAME.object_test_local_name */
extern T0* T1240f67(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.object_test_local_name */
extern T0* T1239f56(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.object_test_local_name */
extern T0* T1238f53(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.object_test_local_name */
extern T0* T833f54(GE_context* ac, T0* C);
/* ET_IDENTIFIER.object_test_local_name */
extern T0* T182f73(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_across_cursor */
extern T1 T1240f68(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_across_cursor */
extern T1 T1239f57(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_across_cursor */
extern T1 T1238f54(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_across_cursor */
extern T1 T833f55(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_across_cursor */
extern T1 T182f30(GE_context* ac, T0* C);
/* ET_INFIX_NAME.across_cursor_name */
extern T0* T1240f69(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.across_cursor_name */
extern T0* T1239f58(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.across_cursor_name */
extern T0* T1238f55(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.across_cursor_name */
extern T0* T833f56(GE_context* ac, T0* C);
/* ET_IDENTIFIER.across_cursor_name */
extern T0* T182f74(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.position */
extern T0* T1791f28(GE_context* ac, T0* C);
/* ET_INFIX_NAME.position */
extern T0* T1240f7(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.position */
extern T0* T1239f7(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.position */
extern T0* T1238f7(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.position */
extern T0* T833f14(GE_context* ac, T0* C);
/* ET_IDENTIFIER.position */
extern T0* T182f22(GE_context* ac, T0* C);
/* ET_INFIX_NAME.lower_name */
extern T0* T1240f43(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.lower_name */
extern T0* T1239f22(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.lower_name */
extern T0* T1238f29(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.lower_name */
extern T0* T833f12(GE_context* ac, T0* C);
/* ET_IDENTIFIER.lower_name */
extern T0* T182f35(GE_context* ac, T0* C);
/* ET_INFIX_NAME.name */
extern T0* T1240f6(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.name */
extern T0* T1239f6(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.name */
extern T0* T1238f6(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.name */
extern T0* T833f13(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_tuple_label */
extern T1 T1791f26(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_tuple_label */
extern T1 T1240f16(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_tuple_label */
extern T1 T1239f16(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_tuple_label */
extern T1 T1238f16(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_tuple_label */
extern T1 T833f23(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_tuple_label */
extern T1 T182f34(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.last_leaf */
extern T0* T1791f42(GE_context* ac, T0* C);
/* ET_INFIX_NAME.last_leaf */
extern T0* T1240f77(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.last_leaf */
extern T0* T1239f64(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.last_leaf */
extern T0* T1238f63(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.last_leaf */
extern T0* T833f64(GE_context* ac, T0* C);
/* ET_IDENTIFIER.last_leaf */
extern T0* T182f98(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.static_type */
extern T0* T335f54(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.static_type */
extern T0* T334f54(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.static_type */
extern T0* T323f53(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.static_type */
extern T0* T306f52(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.static_type */
extern T0* T239f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_generic */
extern T1 T335f53(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_generic */
extern T1 T334f53(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_generic */
extern T1 T323f52(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_generic */
extern T1 T306f51(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_generic */
extern T1 T239f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_reference_attributes */
extern T1 T335f65(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_reference_attributes */
extern T1 T334f66(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_reference_attributes */
extern T1 T323f65(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_reference_attributes */
extern T1 T306f65(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.has_nested_reference_attributes */
extern T1 T239f63(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_builtin_attribute */
extern T1 T335f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_FUNCTION_TYPE.is_builtin_attribute */
extern T1 T334f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_SPECIAL_TYPE.is_builtin_attribute */
extern T1 T323f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TUPLE_TYPE.is_builtin_attribute */
extern T1 T306f21(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TYPE.is_builtin_attribute */
extern T1 T239f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_special */
extern T1 T335f67(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_special */
extern T1 T334f68(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_special */
extern T1 T306f67(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_special */
extern T1 T239f65(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_procedure */
extern T0* T335f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.force_last */
extern void T309f11(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.resize */
extern void T309f14(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.new_capacity */
extern T6 T309f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.capacity */
extern T6 T309f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.put_last */
extern void T309f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T335f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_agent_call */
extern void T238f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_agent_call */
extern void T79f145(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.make */
extern T0* T831c15(GE_context* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.tokens */
extern T0* T335f21(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T335f72p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.make_with_capacity */
extern T0* T309c9(GE_context* ac, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_procedure */
extern T0* T334f56(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T334f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.tokens */
extern T0* T334f73(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T334f67p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_procedure */
extern T0* T323f51(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T323f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.tokens */
extern T0* T323f21(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T323f72p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_procedure */
extern T0* T306f54(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T306f66(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_put */
extern void T238f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_put */
extern void T79f143(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.tokens */
extern T0* T306f72(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T306f66p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T239f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_procedure */
extern T0* T239f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_query */
extern T0* T335f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_attribute */
extern void T335f81(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.put */
extern void T309f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_query */
extern T0* T335f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_query */
extern T0* T334f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_attribute */
extern void T334f81(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T334f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.set_result_type_set */
extern void T248f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T334f72p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_query */
extern T0* T323f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_attribute */
extern void T323f80(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T323f66(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T323f66p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_query */
extern T0* T306f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_attribute */
extern void T306f80(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T306f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_item */
extern void T238f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_item */
extern void T79f144(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_at_feature_name */
extern unsigned char ge808os11493;
extern T0* ge808ov11493;
extern T0* T81f79(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T306f71p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T239f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_attribute */
extern void T239f77(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.new_dynamic_query */
extern T0* T239f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_procedure */
extern T0* T335f51(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_procedure */
extern T0* T334f51(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_procedure */
extern T0* T323f50(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_procedure */
extern T0* T306f50(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T239f29(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.is_agent_type */
extern T1 T323f70(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_agent_type */
extern T1 T306f70(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T239f68(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_expanded */
extern T1 T335f48(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_expanded */
extern T1 T334f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_expanded */
extern T1 T323f71(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_expanded */
extern T1 T306f47(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_expanded */
extern T1 T239f25(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_basic */
extern T1 T335f50(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_basic */
extern T1 T334f50(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_basic */
extern T1 T323f49(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_basic */
extern T1 T306f49(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_basic */
extern T1 T239f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_query */
extern T0* T335f52(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_query */
extern T0* T334f52(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_query */
extern T0* T323f55(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_query */
extern T0* T306f55(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T239f28(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_type */
extern T1 T335f55(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_type */
extern T1 T334f55(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_type */
extern T1 T323f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_type */
extern T1 T306f53(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T239f27(GE_context* ac, T0* C, T0* a1);
/* ET_FILE_POSITION.to_text */
extern T0* T1284f10(GE_context* ac, T0* C);
/* ET_FILE_POSITION.append_to_string */
extern void T1284f15(GE_context* ac, T0* C, T0* a1);
/* ET_FILE_POSITION.append_to_string_with_filename */
extern void T1284f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_context_to_string */
extern void T1284f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_line_to_string */
extern void T1284f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.skip_lines */
extern void T1284f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_FILE_POSITION.integer_ */
extern T0* T1284f11(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_text */
extern T0* T1206f51(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.append_to_string */
extern void T1206f76(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.integer_ */
extern T0* T1206f55(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_text */
extern T0* T1205f51(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.append_to_string */
extern void T1205f76(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.integer_ */
extern T0* T1205f55(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_text */
extern T0* T1204f51(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.append_to_string */
extern void T1204f76(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_ */
extern T0* T1204f55(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_text */
extern T0* T1203f51(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.append_to_string */
extern void T1203f76(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_ */
extern T0* T1203f55(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_text */
extern T0* T1202f51(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.append_to_string */
extern void T1202f76(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.integer_ */
extern T0* T1202f55(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.to_text */
extern T0* T958f67(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.append_to_string */
extern void T958f74(GE_context* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.integer_ */
extern T0* T958f70(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.to_text */
extern T0* T947f20(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.append_to_string */
extern void T947f77(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.integer_ */
extern T0* T947f41(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.to_text */
extern T0* T651f73(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.append_to_string */
extern void T651f107(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.integer_ */
extern T0* T651f97(GE_context* ac, T0* C);
/* ET_KEYWORD.to_text */
extern T0* T397f33(GE_context* ac, T0* C);
/* ET_KEYWORD.append_to_string */
extern void T397f95(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.integer_ */
extern T0* T397f34(GE_context* ac, T0* C);
/* ET_SYMBOL.to_text */
extern T0* T346f66(GE_context* ac, T0* C);
/* ET_SYMBOL.append_to_string */
extern void T346f94(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.integer_ */
extern T0* T346f69(GE_context* ac, T0* C);
/* ET_CURRENT.to_text */
extern T0* T286f21(GE_context* ac, T0* C);
/* ET_CURRENT.append_to_string */
extern void T286f37(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.integer_ */
extern T0* T286f22(GE_context* ac, T0* C);
/* ET_IDENTIFIER.to_text */
extern T0* T182f84(GE_context* ac, T0* C);
/* ET_IDENTIFIER.append_to_string */
extern void T182f123(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.integer_ */
extern T0* T182f86(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.to_text */
extern T0* T180f9(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.append_to_string */
extern void T180f14(GE_context* ac, T0* C, T0* a1);
/* ET_COMPRESSED_POSITION.integer_ */
extern T0* T180f10(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_null_position */
extern T1 T1791f34(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_null_position */
extern T1 T1213f8(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_null_position */
extern T1 T1212f8(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_null_position */
extern T1 T1211f7(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_null_position */
extern T1 T1210f7(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_null_position */
extern T1 T1208f9(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_null_position */
extern T1 T1207f9(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_null_position */
extern T1 T1206f9(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_null_position */
extern T1 T1205f9(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_null_position */
extern T1 T1204f9(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_null_position */
extern T1 T1203f9(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_null_position */
extern T1 T1202f9(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_null_position */
extern T1 T1201f9(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_null_position */
extern T1 T1200f16(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_null_position */
extern T1 T1199f8(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_null_position */
extern T1 T958f63(GE_context* ac, T0* C);
/* ET_VOID.is_null_position */
extern T1 T950f7(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_null_position */
extern T1 T947f19(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.is_null_position */
extern T1 T944f12(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_null_position */
extern T1 T934f6(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_null_position */
extern T1 T928f21(GE_context* ac, T0* C);
/* ET_BIT_CONSTANT.is_null_position */
extern T1 T914f7(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_null_position */
extern T1 T907f13(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.is_null_position */
extern T1 T904f12(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_null_position */
extern T1 T832f10(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_null_position */
extern T1 T651f18(GE_context* ac, T0* C);
/* ET_KEYWORD.is_null_position */
extern T1 T397f26(GE_context* ac, T0* C);
/* ET_SYMBOL.is_null_position */
extern T1 T346f18(GE_context* ac, T0* C);
/* ET_RESULT.is_null_position */
extern T1 T313f11(GE_context* ac, T0* C);
/* ET_CURRENT.is_null_position */
extern T1 T286f13(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_null_position */
extern T1 T182f44(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.is_null */
extern T1 T180f8(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.line */
extern T6 T1791f32(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.line */
extern T6 T1213f6(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.line */
extern T6 T1212f6(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.line */
extern T6 T1211f5(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.line */
extern T6 T1210f5(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.line */
extern T6 T1208f7(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.line */
extern T6 T1207f7(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.line */
extern T6 T1206f17(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.line */
extern T6 T1205f17(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.line */
extern T6 T1204f17(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.line */
extern T6 T1203f17(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.line */
extern T6 T1202f17(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.line */
extern T6 T1201f7(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.line */
extern T6 T1200f14(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.line */
extern T6 T1199f25(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.line */
extern T6 T958f64(GE_context* ac, T0* C);
/* ET_VOID.line */
extern T6 T950f5(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.line */
extern T6 T947f17(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.line */
extern T6 T944f10(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.line */
extern T6 T934f11(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.line */
extern T6 T928f19(GE_context* ac, T0* C);
/* ET_BIT_CONSTANT.line */
extern T6 T914f5(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.line */
extern T6 T907f11(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.line */
extern T6 T904f10(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.line */
extern T6 T832f8(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.line */
extern T6 T651f16(GE_context* ac, T0* C);
/* ET_KEYWORD.line */
extern T6 T397f27(GE_context* ac, T0* C);
/* ET_SYMBOL.line */
extern T6 T346f19(GE_context* ac, T0* C);
/* ET_RESULT.line */
extern T6 T313f9(GE_context* ac, T0* C);
/* ET_CURRENT.line */
extern T6 T286f11(GE_context* ac, T0* C);
/* ET_IDENTIFIER.line */
extern T6 T182f24(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.line */
extern T6 T180f6(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.column */
extern T6 T1791f33(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.column */
extern T6 T1213f7(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.column */
extern T6 T1212f7(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.column */
extern T6 T1211f6(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.column */
extern T6 T1210f6(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.column */
extern T6 T1208f8(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.column */
extern T6 T1207f8(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.column */
extern T6 T1206f50(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.column */
extern T6 T1205f50(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.column */
extern T6 T1204f50(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.column */
extern T6 T1203f50(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.column */
extern T6 T1202f50(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.column */
extern T6 T1201f8(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.column */
extern T6 T1200f15(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.column */
extern T6 T1199f7(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.column */
extern T6 T958f65(GE_context* ac, T0* C);
/* ET_VOID.column */
extern T6 T950f6(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.column */
extern T6 T947f18(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.column */
extern T6 T944f11(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.column */
extern T6 T934f12(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.column */
extern T6 T928f20(GE_context* ac, T0* C);
/* ET_BIT_CONSTANT.column */
extern T6 T914f6(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.column */
extern T6 T907f12(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.column */
extern T6 T904f11(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.column */
extern T6 T832f9(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.column */
extern T6 T651f17(GE_context* ac, T0* C);
/* ET_KEYWORD.column */
extern T6 T397f28(GE_context* ac, T0* C);
/* ET_SYMBOL.column */
extern T6 T346f20(GE_context* ac, T0* C);
/* ET_RESULT.column */
extern T6 T313f10(GE_context* ac, T0* C);
/* ET_CURRENT.column */
extern T6 T286f12(GE_context* ac, T0* C);
/* ET_IDENTIFIER.column */
extern T6 T182f25(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.column */
extern T6 T180f7(GE_context* ac, T0* C);
/* UC_UTF8_STRING.character_32_item */
extern T3 T847f27(GE_context* ac, T0* C, T6 a1);
/* STRING_32.item */
extern T3 T18f9(GE_context* ac, T0* C, T6 a1);
/* STRING_8.character_32_item */
extern T3 T17f32(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.substring */
extern T0* T847f11(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.make_from_substring */
extern T0* T847c80(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.make_from_substring_general */
extern void T847f98(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_32.substring */
extern T0* T18f10(GE_context* ac, T0* C, T6 a1, T6 a2);
/* STRING_32.new_string */
extern T0* T18f12(GE_context* ac, T0* C, T6 a1);
/* STRING_8.substring */
extern T0* T17f24(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.code */
extern T10 T847f44(GE_context* ac, T0* C, T6 a1);
/* STRING_32.code */
extern T10 T18f8(GE_context* ac, T0* C, T6 a1);
/* STRING_8.code */
extern T10 T17f19(GE_context* ac, T0* C, T6 a1);
/* ET_BIT_FEATURE.same_named_type */
extern T1 T1223f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_named_type */
extern T1 T1222f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_named_type */
extern T1 T261f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_named_type */
extern T1 T82f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_named_type */
extern T1 T80f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_base_type */
extern T1 T1223f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_base_type */
extern T1 T1222f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_base_type */
extern T1 T261f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_base_type */
extern T1 T82f101(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_base_type */
extern T1 T80f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_as_base_class */
extern T1 T1223f40(GE_context* ac, T0* C);
/* ET_BIT_N.same_as_base_class */
extern T1 T1222f39(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.same_as_base_class */
extern T1 T261f13(GE_context* ac, T0* C);
/* ET_CLASS.same_as_base_class */
extern T1 T82f62(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.same_as_base_class */
extern T1 T80f21(GE_context* ac, T0* C);
/* ET_CLASS.is_expanded */
extern T1 T82f109(GE_context* ac, T0* C);
/* ET_CLASS.has_expanded_mark */
extern T1 T82f77(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_expanded */
extern T1 T80f17(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.same_named_type_with_type_marks */
extern T1 T1223f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.same_named_type_with_type_marks */
extern T1 T1222f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_named_type_with_type_marks */
extern T1 T261f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_type_with_type_marks */
extern T1 T82f81(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_type_with_type_marks */
extern T1 T80f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.named_type_with_type_mark */
extern T0* T1223f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_N.named_type_with_type_mark */
extern T0* T1222f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.named_type_with_type_mark */
extern T0* T261f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.named_type_with_type_mark */
extern T0* T82f104(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.named_type_with_type_mark */
extern T0* T80f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.same_named_class_type_with_type_marks */
extern T1 T1223f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.same_named_class_type_with_type_marks */
extern T1 T1222f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_named_class_type_with_type_marks */
extern T1 T261f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_class_type_with_type_marks */
extern T1 T82f112(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_class_type_with_type_marks */
extern T1 T80f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.same_named_tuple_type_with_type_marks */
extern T1 T1223f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.same_named_tuple_type_with_type_marks */
extern T1 T1222f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T261f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_tuple_type_with_type_marks */
extern T1 T82f129(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T80f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.base_type_actual_count */
extern T6 T1223f14(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.base_type_actual_count */
extern T6 T1222f17(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type_actual_count */
extern T6 T261f43(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.base_type_actual_count */
extern T6 T82f113(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_type_actual_count */
extern T6 T80f39(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.base_type_with_type_mark */
extern T0* T1223f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_N.base_type_with_type_mark */
extern T0* T1222f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type_with_type_mark */
extern T0* T261f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_with_type_mark */
extern T0* T82f83(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_with_type_mark */
extern T0* T80f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.unaliased_to_text */
extern T0* T1223f31(GE_context* ac, T0* C);
/* ET_BIT_N.unaliased_to_text */
extern T0* T1222f30(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.unaliased_to_text */
extern T0* T261f14(GE_context* ac, T0* C);
/* ET_CLASS.unaliased_to_text */
extern T0* T82f96(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.unaliased_to_text */
extern T0* T80f28(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.same_base_class_type_with_type_marks */
extern T1 T1223f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.same_base_class_type_with_type_marks */
extern T1 T1222f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_base_class_type_with_type_marks */
extern T1 T261f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_class_type_with_type_marks */
extern T1 T82f106(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_class_type_with_type_marks */
extern T1 T80f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.same_base_tuple_type_with_type_marks */
extern T1 T1223f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.same_base_tuple_type_with_type_marks */
extern T1 T1222f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T261f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_tuple_type_with_type_marks */
extern T1 T82f130(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T80f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.conforms_from_class_type_with_type_marks */
extern T1 T1223f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.conforms_from_class_type_with_type_marks */
extern T1 T1222f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T261f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.conforms_from_class_type_with_type_marks */
extern T1 T82f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T80f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.conforms_from_tuple_type_with_type_marks */
extern T1 T1223f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.conforms_from_tuple_type_with_type_marks */
extern T1 T1222f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T261f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACTUAL_PARAMETER_SUBLIST.tuple_conforms_to_types */
extern T1 T1409f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.tuple_conforms_to_types */
extern T1 T252f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.conforms_from_tuple_type_with_type_marks */
extern T1 T82f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T80f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.is_type_expanded_with_type_mark */
extern T1 T1223f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_N.is_type_expanded_with_type_mark */
extern T1 T1222f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_expanded_with_type_mark */
extern T1 T261f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_expanded_with_type_mark */
extern T1 T82f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_expanded_with_type_mark */
extern T1 T80f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.is_type_detachable_with_type_mark */
extern T1 T1223f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_N.is_type_detachable_with_type_mark */
extern T1 T1222f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_detachable_with_type_mark */
extern T1 T261f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_detachable_with_type_mark */
extern T1 T82f117(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_detachable_with_type_mark */
extern T1 T80f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.shallow_base_type_with_type_mark */
extern T0* T1223f97(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_N.shallow_base_type_with_type_mark */
extern T0* T1222f96(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_base_type_with_type_mark */
extern T0* T261f84(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_base_type_with_type_mark */
extern T0* T82f172(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_base_type_with_type_mark */
extern T0* T80f84(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.shallow_named_type_with_type_mark */
extern T0* T1223f98(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_N.shallow_named_type_with_type_mark */
extern T0* T1222f97(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_named_type_with_type_mark */
extern T0* T261f85(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_named_type_with_type_mark */
extern T0* T82f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_named_type_with_type_mark */
extern T0* T80f85(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.actual_parameter_count */
extern T6 T1223f38(GE_context* ac, T0* C);
/* ET_BIT_N.actual_parameter_count */
extern T6 T1222f38(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.actual_parameter_count */
extern T6 T261f48(GE_context* ac, T0* C);
/* ET_CLASS.formal_parameter_count */
extern T6 T82f105(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.actual_parameter_count */
extern T6 T80f44(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.conforms_to_type_with_type_marks */
extern T1 T1223f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.conforms_to_type_with_type_marks */
extern T1 T1222f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_to_type_with_type_marks */
extern T1 T261f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.conforms_to_type_with_type_marks */
extern T1 T82f78(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.conforms_to_type_with_type_marks */
extern T1 T80f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.type_with_type_mark */
extern T0* T1223f62(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.type_with_type_mark */
extern T0* T1222f61(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.type_with_type_mark */
extern T0* T261f34(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.type_with_type_mark */
extern T0* T82f90(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.type_with_type_mark */
extern T0* T80f36(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.to_text */
extern T0* T1223f10(GE_context* ac, T0* C);
/* ET_BIT_N.to_text */
extern T0* T1222f10(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.to_text */
extern T0* T261f35(GE_context* ac, T0* C);
/* ET_CLASS.to_text */
extern T0* T82f100(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.to_text */
extern T0* T80f37(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.actual_parameters */
extern T0* T1223f41(GE_context* ac, T0* C);
/* ET_BIT_N.actual_parameters */
extern T0* T1222f40(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.conforms_from_bit_type_with_type_marks */
extern T1 T1223f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.conforms_from_bit_type_with_type_marks */
extern T1 T1222f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_bit_type_with_type_marks */
extern T1 T261f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.conforms_from_bit_type_with_type_marks */
extern T1 T82f155(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.conforms_from_bit_type_with_type_marks */
extern T1 T80f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.same_named_bit_type_with_type_marks */
extern T1 T1223f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.same_named_bit_type_with_type_marks */
extern T1 T1222f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_named_bit_type_with_type_marks */
extern T1 T261f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_bit_type_with_type_marks */
extern T1 T82f156(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_bit_type_with_type_marks */
extern T1 T80f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.same_base_bit_type_with_type_marks */
extern T1 T1223f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.same_base_bit_type_with_type_marks */
extern T1 T1222f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_base_bit_type_with_type_marks */
extern T1 T261f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_bit_type_with_type_marks */
extern T1 T82f157(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_bit_type_with_type_marks */
extern T1 T80f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1223f74(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.same_named_formal_parameter_type_with_type_marks */
extern T1 T1222f73(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T261f71(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_formal_parameter_type_with_type_marks */
extern T1 T82f163(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T80f75(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1223f75(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1222f74(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T261f72(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T82f164(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T80f76(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.is_type_reference_with_type_mark */
extern T1 T1223f76(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_N.is_type_reference_with_type_mark */
extern T1 T1222f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_reference_with_type_mark */
extern T1 T261f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_reference_with_type_mark */
extern T1 T82f165(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_reference_with_type_mark */
extern T1 T80f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.is_type_attached_with_type_mark */
extern T1 T1223f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_N.is_type_attached_with_type_mark */
extern T1 T1222f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_attached_with_type_mark */
extern T1 T261f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_attached_with_type_mark */
extern T1 T82f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_attached_with_type_mark */
extern T1 T80f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.index_of_label */
extern T6 T1223f105(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_N.index_of_label */
extern T6 T1222f104(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.index_of_label */
extern T6 T261f103(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.index_of_label */
extern T6 T82f203(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.index_of_label */
extern T6 T80f107(GE_context* ac, T0* C, T0* a1);
/* ET_BIT_FEATURE.base_type_actual */
extern T0* T1223f88(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_BIT_N.base_type_actual */
extern T0* T1222f87(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_TUPLE_TYPE.base_type_actual */
extern T0* T261f83(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T261f83ot1(T0* a1, T0** a2);
/* ET_CLASS.base_type_actual */
extern T0* T82f171(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_CLASS_TYPE.base_type_actual */
extern T0* T80f83(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T80f83ot1(T0* a1, T0** a2);
/* ET_BIT_FEATURE.base_class */
extern T0* T1223f20(GE_context* ac, T0* C);
/* ET_BIT_N.base_class */
extern T0* T1222f23(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.base_class */
extern T0* T261f12(GE_context* ac, T0* C);
/* ET_CLASS.base_class */
extern T0* T82f93(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.base_class */
extern T0* T80f50(GE_context* ac, T0* C);
/* ET_BIT_FEATURE.base_type_index_of_label */
extern T6 T1223f106(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_N.base_type_index_of_label */
extern T6 T1222f105(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type_index_of_label */
extern T6 T261f104(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_index_of_label */
extern T6 T82f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_index_of_label */
extern T6 T80f108(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.same_base_type_with_type_marks */
extern T1 T1223f67(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_N.same_base_type_with_type_marks */
extern T1 T1222f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_base_type_with_type_marks */
extern T1 T261f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_type_with_type_marks */
extern T1 T82f111(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_type_with_type_marks */
extern T1 T80f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BIT_FEATURE.conforms_to_type */
extern T1 T1223f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.conforms_to_type */
extern T1 T1222f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.conforms_to_type */
extern T1 T261f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.conforms_to_type */
extern T1 T82f118(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.conforms_to_type */
extern T1 T80f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.test */
extern T1 T184f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.string_ */
extern T0* T184f2(GE_context* ac, T0* C);
/* KL_STRING_EQUALITY_TESTER.test */
extern T1 T144f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T58f1(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T58f1oe1(GE_context* ac, T0* a1, T0* a2);
/* UC_UTF8_STRING.is_equal */
extern T1 T847f63(GE_context* ac, T0* C, T0* a1);
/* UC_STRING_EQUALITY_TESTER.test */
extern T1 T57f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.string_ */
extern T0* T57f2(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.default_message */
extern T0* T1815f5(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.message */
extern T0* T1815f3(GE_context* ac, T0* C, T0* a1);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.arguments */
extern T0* T1815f6(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.string_ */
extern T0* T1815f4(GE_context* ac, T0* C);
/* ET_UNIVERSE_ERROR.default_message */
extern T0* T1771f12(GE_context* ac, T0* C);
/* ET_UNIVERSE_ERROR.message */
extern T0* T1771f7(GE_context* ac, T0* C, T0* a1);
/* ET_UNIVERSE_ERROR.arguments */
extern T0* T1771f6(GE_context* ac, T0* C);
/* ET_UNIVERSE_ERROR.string_ */
extern T0* T1771f9(GE_context* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.default_message */
extern T0* T1754f5(GE_context* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.message */
extern T0* T1754f3(GE_context* ac, T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.arguments */
extern T0* T1754f6(GE_context* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.string_ */
extern T0* T1754f4(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.default_message */
extern T0* T1753f5(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.message */
extern T0* T1753f3(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.arguments */
extern T0* T1753f6(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.string_ */
extern T0* T1753f4(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.default_message */
extern T0* T1752f5(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.message */
extern T0* T1752f3(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_AND_REJECT_ERROR.arguments */
extern T0* T1752f6(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.string_ */
extern T0* T1752f4(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.default_message */
extern T0* T1751f5(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.message */
extern T0* T1751f3(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_AND_META_ERROR.arguments */
extern T0* T1751f6(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.string_ */
extern T0* T1751f4(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.default_message */
extern T0* T1750f5(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.message */
extern T0* T1750f3(GE_context* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.arguments */
extern T0* T1750f6(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.string_ */
extern T0* T1750f4(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.default_message */
extern T0* T1749f5(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.message */
extern T0* T1749f3(GE_context* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_CLASS_ERROR.arguments */
extern T0* T1749f6(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.string_ */
extern T0* T1749f4(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.default_message */
extern T0* T1748f5(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.message */
extern T0* T1748f3(GE_context* ac, T0* C, T0* a1);
/* LX_MISSING_QUOTE_ERROR.arguments */
extern T0* T1748f6(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.string_ */
extern T0* T1748f4(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.default_message */
extern T0* T1747f5(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.message */
extern T0* T1747f3(GE_context* ac, T0* C, T0* a1);
/* LX_UNRECOGNIZED_RULE_ERROR.arguments */
extern T0* T1747f6(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.string_ */
extern T0* T1747f4(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.default_message */
extern T0* T1690f12(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.message */
extern T0* T1690f7(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.arguments */
extern T0* T1690f6(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.string_ */
extern T0* T1690f9(GE_context* ac, T0* C);
/* ET_SYNTAX_ERROR.default_message */
extern T0* T1551f11(GE_context* ac, T0* C);
/* ET_SYNTAX_ERROR.message */
extern T0* T1551f14(GE_context* ac, T0* C, T0* a1);
/* ET_SYNTAX_ERROR.arguments */
extern T0* T1551f12(GE_context* ac, T0* C);
/* ET_SYNTAX_ERROR.string_ */
extern T0* T1551f16(GE_context* ac, T0* C);
/* ET_CLUSTER_ERROR.default_message */
extern T0* T1550f12(GE_context* ac, T0* C);
/* ET_CLUSTER_ERROR.message */
extern T0* T1550f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_ERROR.arguments */
extern T0* T1550f6(GE_context* ac, T0* C);
/* ET_CLUSTER_ERROR.string_ */
extern T0* T1550f9(GE_context* ac, T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.default_message */
extern T0* T1392f5(GE_context* ac, T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.message */
extern T0* T1392f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_INVALID_EXPRESSION_ERROR.arguments */
extern T0* T1392f6(GE_context* ac, T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.string_ */
extern T0* T1392f4(GE_context* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.default_message */
extern T0* T1339f5(GE_context* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.message */
extern T0* T1339f3(GE_context* ac, T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.arguments */
extern T0* T1339f6(GE_context* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.string_ */
extern T0* T1339f4(GE_context* ac, T0* C);
/* UT_SYNTAX_ERROR.default_message */
extern T0* T1338f5(GE_context* ac, T0* C);
/* UT_SYNTAX_ERROR.message */
extern T0* T1338f3(GE_context* ac, T0* C, T0* a1);
/* UT_SYNTAX_ERROR.arguments */
extern T0* T1338f6(GE_context* ac, T0* C);
/* UT_SYNTAX_ERROR.string_ */
extern T0* T1338f4(GE_context* ac, T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T782f5(GE_context* ac, T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T782f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T782f6(GE_context* ac, T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T782f4(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.default_message */
extern T0* T781f5(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.message */
extern T0* T781f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.arguments */
extern T0* T781f6(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.string_ */
extern T0* T781f4(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.default_message */
extern T0* T780f5(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.message */
extern T0* T780f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.arguments */
extern T0* T780f6(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.string_ */
extern T0* T780f4(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.default_message */
extern T0* T779f5(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.message */
extern T0* T779f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.arguments */
extern T0* T779f6(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.string_ */
extern T0* T779f4(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.default_message */
extern T0* T778f5(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.message */
extern T0* T778f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MISSING_ELEMENT_ERROR.arguments */
extern T0* T778f6(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.string_ */
extern T0* T778f4(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.default_message */
extern T0* T777f5(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.message */
extern T0* T777f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.arguments */
extern T0* T777f6(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.string_ */
extern T0* T777f4(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.default_message */
extern T0* T776f5(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.message */
extern T0* T776f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.arguments */
extern T0* T776f6(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.string_ */
extern T0* T776f4(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.default_message */
extern T0* T775f5(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.message */
extern T0* T775f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.arguments */
extern T0* T775f6(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.string_ */
extern T0* T775f4(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.default_message */
extern T0* T532f35(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.message */
extern T0* T532f16(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.arguments */
extern T0* T532f13(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.string_ */
extern T0* T532f34(GE_context* ac, T0* C);
/* ET_INTERNAL_ERROR.default_message */
extern T0* T531f5(GE_context* ac, T0* C);
/* ET_INTERNAL_ERROR.message */
extern T0* T531f7(GE_context* ac, T0* C, T0* a1);
/* ET_INTERNAL_ERROR.arguments */
extern T0* T531f6(GE_context* ac, T0* C);
/* ET_INTERNAL_ERROR.string_ */
extern T0* T531f9(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.default_message */
extern T0* T530f5(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.message */
extern T0* T530f7(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.arguments */
extern T0* T530f6(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.string_ */
extern T0* T530f9(GE_context* ac, T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T428f5(GE_context* ac, T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T428f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T428f6(GE_context* ac, T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T428f4(GE_context* ac, T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.default_message */
extern T0* T427f5(GE_context* ac, T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.message */
extern T0* T427f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.arguments */
extern T0* T427f6(GE_context* ac, T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.string_ */
extern T0* T427f4(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.default_message */
extern T0* T426f5(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.message */
extern T0* T426f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.arguments */
extern T0* T426f6(GE_context* ac, T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.default_message */
extern T0* T425f5(GE_context* ac, T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.message */
extern T0* T425f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.arguments */
extern T0* T425f6(GE_context* ac, T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.string_ */
extern T0* T425f4(GE_context* ac, T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.default_message */
extern T0* T424f5(GE_context* ac, T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.message */
extern T0* T424f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.arguments */
extern T0* T424f6(GE_context* ac, T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.string_ */
extern T0* T424f4(GE_context* ac, T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.default_message */
extern T0* T423f5(GE_context* ac, T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.message */
extern T0* T423f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.arguments */
extern T0* T423f6(GE_context* ac, T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.string_ */
extern T0* T423f4(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.default_message */
extern T0* T308f3(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.message */
extern T0* T308f5(GE_context* ac, T0* C, T0* a1);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.arguments */
extern T0* T308f7(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.string_ */
extern T0* T308f6(GE_context* ac, T0* C);
/* UT_MESSAGE.default_message */
extern T0* T169f5(GE_context* ac, T0* C);
/* UT_MESSAGE.message */
extern T0* T169f3(GE_context* ac, T0* C, T0* a1);
/* UT_MESSAGE.arguments */
extern T0* T169f6(GE_context* ac, T0* C);
/* UT_MESSAGE.string_ */
extern T0* T169f4(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.default_message */
extern T0* T87f3(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.message */
extern T0* T87f5(GE_context* ac, T0* C, T0* a1);
/* UT_VERSION_NUMBER.arguments */
extern T0* T87f7(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.string_ */
extern T0* T87f6(GE_context* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.default_message */
extern T0* T86f3(GE_context* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.message */
extern T0* T86f5(GE_context* ac, T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.arguments */
extern T0* T86f7(GE_context* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.string_ */
extern T0* T86f6(GE_context* ac, T0* C);
/* AP_ERROR.default_message */
extern T0* T40f17(GE_context* ac, T0* C);
/* AP_ERROR.message */
extern T0* T40f18(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.arguments */
extern T0* T40f20(GE_context* ac, T0* C);
/* AP_ERROR.string_ */
extern T0* T40f19(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.was_found */
extern T1 T50f24(GE_context* ac, T0* C);
/* AP_STRING_OPTION.was_found */
extern T1 T46f11(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.was_found */
extern T1 T45f11(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.was_found */
extern T1 T44f11(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.was_found */
extern T1 T43f17(GE_context* ac, T0* C);
/* AP_FLAG.was_found */
extern T1 T41f9(GE_context* ac, T0* C);
/* AP_STRING_OPTION.occurrences */
extern T6 T46f14(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.occurrences */
extern T6 T45f10(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.occurrences */
extern T6 T44f14(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.occurrences */
extern T6 T43f16(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.allows_parameter */
extern T1 T50f20(GE_context* ac, T0* C);
/* AP_STRING_OPTION.allows_parameter */
extern T1 T46f12(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.allows_parameter */
extern T1 T45f15(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.allows_parameter */
extern T1 T44f12(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.allows_parameter */
extern T1 T43f14(GE_context* ac, T0* C);
/* AP_FLAG.allows_parameter */
extern T1 T41f11(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.needs_parameter */
extern T1 T50f18(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.needs_parameter */
extern T1 T45f14(GE_context* ac, T0* C);
/* AP_FLAG.needs_parameter */
extern T1 T41f10(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.name */
extern T0* T50f19(GE_context* ac, T0* C);
/* AP_STRING_OPTION.name */
extern T0* T46f15(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.name */
extern T0* T45f17(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.name */
extern T0* T44f15(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.name */
extern T0* T43f12(GE_context* ac, T0* C);
/* AP_FLAG.name */
extern T0* T41f12(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.example */
extern T0* T50f22(GE_context* ac, T0* C);
/* AP_STRING_OPTION.example */
extern T0* T46f16(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.example */
extern T0* T45f18(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.example */
extern T0* T44f16(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.example */
extern T0* T43f18(GE_context* ac, T0* C);
/* AP_FLAG.example */
extern T0* T41f13(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.names */
extern T0* T50f33(GE_context* ac, T0* C);
/* AP_STRING_OPTION.names */
extern T0* T46f20(GE_context* ac, T0* C);
/* AP_STRING_OPTION.has_long_form */
extern T1 T46f21(GE_context* ac, T0* C);
/* AP_STRING_OPTION.names */
extern T0* T46f20p1(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T45f20(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.has_long_form */
extern T1 T45f21(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T45f20p1(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T44f23(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.has_long_form */
extern T1 T44f24(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T44f23p1(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T43f22(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.has_long_form */
extern T1 T43f23(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T43f22p1(GE_context* ac, T0* C);
/* AP_FLAG.names */
extern T0* T41f16(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.last_character */
extern T2 T848f6(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].item */
extern T2 T1462f4(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.end_of_input */
extern T1 T848f21(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.end_of_input */
extern T1 T29f33(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.is_closable */
extern T1 T899f7(GE_context* ac, T0* C);
/* KL_STDIN_FILE.is_closable */
extern T1 T888f12(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.is_closable */
extern T1 T848f7(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_closable */
extern T1 T29f37(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.read_to_string */
extern T6 T899f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.read_to_string */
extern T6 T888f18(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.old_read_to_string */
extern T6 T888f11(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.file_gss */
extern T6 T888f14(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDIN_FILE.any_ */
extern T0* T888f9(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T848f28(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T848f28p1(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.read_to_string */
extern T6 T29f36(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.dummy_kl_character_buffer */
extern unsigned char ge248os2435;
extern T0* ge248ov2435;
extern T0* T29f41(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.any_ */
extern T0* T29f39(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.name */
extern unsigned char ge263os2410;
extern T0* ge263ov2410;
extern T0* T899f6(GE_context* ac, T0* C);
/* KL_STDIN_FILE.name */
extern T0* T888f15(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.name */
extern T0* T848f5(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.stop_requested */
extern T1 T70f169(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.stop_requested */
extern T1 T64f163(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.stop_requested */
extern T1 T61f175(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.dotnet_assembly_consumer */
extern T0* T70f177(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.make */
extern T0* T789c3(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.dotnet_assembly_consumer */
extern T0* T64f168(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.dotnet_assembly_consumer */
extern T0* T61f163(GE_context* ac, T0* C);
/* ET_SYSTEM.dotnet_assembly_consumer */
extern T0* T33f149(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.older_or_same_ise_version */
extern T1 T70f178(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.older_or_same_ise_version */
extern T1 T64f185(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.older_or_same_ise_version */
extern T1 T61f182(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.older_or_same_ise_version */
extern T1 T33f155(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.is_ise */
extern T1 T70f176(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.is_ise */
extern T1 T64f179(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.is_ise */
extern T1 T61f156(GE_context* ac, T0* C);
/* ET_SYSTEM.is_ise */
extern T1 T33f152(GE_context* ac, T0* C);
extern T0* GE_ma717(T6 c, T6 n, ...);
extern T0* GE_ma142(T6 c, T6 n, ...);
extern T0* GE_ma522(T6 c, T6 n, ...);
extern T0* GE_ma264(T6 c, T6 n, ...);
extern T0* GE_ma559(T6 c, T6 n, ...);
extern T0* GE_mt27(T6 a1, T6 a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T6 a10, T1 a11);
extern T0* GE_mt193();
extern T0* GE_mt479(T0* a1);
extern T0* ge260ov12625;
extern T0* ge224ov3800;
extern T0* ge164ov4887;
extern T0* ge324ov31108;
extern T0* ge314ov14386;
extern T0* ge262ov12625;
extern T0* ge1022ov8540;
extern T0* ge1022ov8547;
extern T0* ge1022ov8546;
extern T0* ge1022ov8545;
extern T0* ge246ov2455;
extern T0* ge247ov12682;
extern T0* ge1022ov8541;
extern T0* ge1022ov8543;
extern T0* ge1022ov8505;
extern T0* ge245ov19955;
extern T0* ge245ov19956;
extern T0* ge1720ov18979;
extern T0* ge1720ov18964;
extern T0* ge1720ov18957;
extern T0* ge1720ov18942;
extern T0* ge1720ov18967;
extern T0* ge1720ov18960;
extern T0* ge1720ov18968;
extern T0* ge1720ov18977;
extern T0* ge1720ov18970;
extern T0* ge1720ov18966;
extern T0* ge1720ov18954;
extern T0* ge1720ov18955;
extern T0* ge1720ov18969;
extern T0* ge1720ov18956;
extern T0* ge1720ov18943;
extern T0* ge1720ov18944;
extern T0* ge1720ov18945;
extern T0* ge1720ov18951;
extern T0* ge1720ov18953;
extern T0* ge1720ov18948;
extern T0* ge1720ov18973;
extern T0* ge1720ov18972;
extern T0* ge1720ov18949;
extern T0* ge1720ov18950;
extern T0* ge1720ov18947;
extern T0* ge1720ov18946;
extern T0* ge1716ov18734;
extern T0* ge1022ov8542;
extern T0* ge1022ov8544;
extern T0* ge1022ov8374;
extern T0* ge1022ov8410;
extern T0* ge1022ov8383;
extern T0* ge1022ov8378;
extern T0* ge1022ov8409;
extern T0* ge1015ov27903;
extern T0* ge1015ov27902;
extern T0* ge1015ov27901;
extern T0* ge808ov11935;
extern T0* ge808ov11842;
extern T0* ge808ov12068;
extern T0* ge1022ov8443;
extern T0* ge1022ov8528;
extern T0* ge1022ov8448;
extern T0* ge1022ov8365;
extern T0* ge1022ov8529;
extern T0* ge1022ov8474;
extern T0* ge1022ov8473;
extern T0* ge1022ov8460;
extern T0* ge1022ov8495;
extern T0* ge1022ov8502;
extern T0* ge1022ov8417;
extern T0* ge1022ov8523;
extern T0* ge1022ov8450;
extern T0* ge1022ov8434;
extern T0* ge1022ov8367;
extern T0* ge1022ov8498;
extern T0* ge1022ov8432;
extern T0* ge808ov12039;
extern T0* ge808ov12059;
extern T0* ge1022ov8415;
extern T0* ge1022ov8496;
extern T0* ge1022ov8420;
extern T0* ge1022ov8412;
extern T0* ge1022ov8497;
extern T0* ge1022ov8384;
extern T0* ge1022ov8411;
extern T0* ge1022ov8507;
extern T0* ge1022ov8536;
extern T0* ge1022ov8459;
extern T0* ge1022ov8446;
extern T0* ge1022ov8445;
extern T0* ge1022ov8527;
extern T0* ge1022ov8371;
extern T0* ge1022ov8447;
extern T0* ge1022ov8501;
extern T0* ge1022ov8416;
extern T0* ge1022ov8500;
extern T0* ge1022ov8515;
extern T0* ge1022ov8524;
extern T0* ge1022ov8503;
extern T0* ge1022ov8427;
extern T0* ge1022ov8428;
extern T0* ge1022ov8516;
extern T0* ge1022ov8423;
extern T0* ge808ov12042;
extern T0* ge1022ov8468;
extern T0* ge1022ov8431;
extern T0* ge1022ov8465;
extern T0* ge1022ov8368;
extern T0* ge1022ov8373;
extern T0* ge1022ov8395;
extern T0* ge1022ov8449;
extern T0* ge1022ov8476;
extern T0* ge1022ov8440;
extern T0* ge1022ov8424;
extern T0* ge1022ov8525;
extern T0* ge1022ov8467;
extern T0* ge1022ov8466;
extern T0* ge1022ov8531;
extern T0* ge1022ov8478;
extern T0* ge1022ov8454;
extern T0* ge1022ov8413;
extern T0* ge1022ov8451;
extern T0* ge1022ov8477;
extern T0* ge1022ov8375;
extern T0* ge1022ov8485;
extern T0* ge1022ov8491;
extern T0* ge1022ov8484;
extern T0* ge1022ov8490;
extern T0* ge1022ov8483;
extern T0* ge1022ov8489;
extern T0* ge1022ov8482;
extern T0* ge1022ov8488;
extern T0* ge1022ov8481;
extern T0* ge1022ov8487;
extern T0* ge1022ov8480;
extern T0* ge1022ov8486;
extern T0* ge1022ov8457;
extern T0* ge1022ov8442;
extern T0* ge1022ov8372;
extern T0* ge1022ov8381;
extern T0* ge1022ov8405;
extern T0* ge1022ov8403;
extern T0* ge1022ov8394;
extern T0* ge1022ov8393;
extern T0* ge1022ov8392;
extern T0* ge1022ov8391;
extern T0* ge1022ov8390;
extern T0* ge1022ov8388;
extern T0* ge1022ov8406;
extern T0* ge1022ov8380;
extern T0* ge1022ov8377;
extern T0* ge1022ov8421;
extern T0* ge1022ov8475;
extern T0* ge1022ov8458;
extern T0* ge1022ov8436;
extern T0* ge1022ov8435;
extern T0* ge1022ov8439;
extern T0* ge1022ov8438;
extern T0* ge1022ov8437;
extern T0* ge1022ov8441;
extern T0* ge1022ov8430;
extern T0* ge1022ov8429;
extern T0* ge1022ov8514;
extern T0* ge1022ov8521;
extern T0* ge1022ov8517;
extern T0* ge1022ov8518;
extern T0* ge1022ov8366;
extern T0* ge1022ov8519;
extern T0* ge1022ov8418;
extern T0* ge1022ov8433;
extern T0* ge808ov11780;
extern T0* ge808ov11802;
extern T0* ge1022ov8369;
extern T0* ge1022ov8370;
extern T0* ge808ov11813;
extern T0* ge1022ov8506;
extern T0* ge1022ov8425;
extern T0* ge1022ov8426;
extern T0* ge1022ov8479;
extern T0* ge1022ov8376;
extern T0* ge1022ov8532;
extern T0* ge1022ov8526;
extern T0* ge1022ov8385;
extern T0* ge1022ov8512;
extern T0* ge1022ov8401;
extern T0* ge1022ov8400;
extern T0* ge1022ov8399;
extern T0* ge1022ov8398;
extern T0* ge1022ov8389;
extern T0* ge1022ov8387;
extern T0* ge1022ov8386;
extern T0* ge1022ov8382;
extern T0* ge808ov11776;
extern T0* ge1022ov8404;
extern T0* ge808ov11803;
extern T0* ge1022ov8397;
extern T0* ge808ov11793;
extern T0* ge808ov11782;
extern T0* ge1022ov8414;
extern T0* ge808ov11816;
extern T0* ge1022ov8379;
extern T0* ge808ov11771;
extern T0* ge808ov11790;
extern T0* ge808ov11789;
extern T0* ge808ov11775;
extern T0* ge808ov11811;
extern T0* ge808ov11766;
extern T0* ge808ov11768;
extern T0* ge808ov11815;
extern T0* ge808ov11814;
extern T0* ge808ov11807;
extern T0* ge808ov11806;
extern T0* ge808ov11801;
extern T0* ge808ov11800;
extern T0* ge808ov11805;
extern T0* ge808ov11804;
extern T0* ge808ov11797;
extern T0* ge808ov11796;
extern T0* ge808ov11795;
extern T0* ge808ov11794;
extern T0* ge808ov11786;
extern T0* ge808ov11785;
extern T0* ge808ov11784;
extern T0* ge808ov11783;
extern T0* ge808ov11773;
extern T0* ge808ov11772;
extern T0* ge808ov11770;
extern T0* ge808ov12057;
extern T0* ge808ov11817;
extern T0* ge1021ov28910;
extern T0* ge1021ov28629;
extern T0* ge1021ov28458;
extern T0* ge1019ov27891;
extern T0* ge1019ov27885;
extern T0* ge1019ov27879;
extern T0* ge1019ov27887;
extern T0* ge1019ov27881;
extern T0* ge1019ov27875;
extern T0* ge1019ov27890;
extern T0* ge1019ov27884;
extern T0* ge1019ov27878;
extern T0* ge1019ov27892;
extern T0* ge1019ov27886;
extern T0* ge1019ov27880;
extern T0* ge808ov11867;
extern T0* ge1019ov27889;
extern T0* ge1019ov27883;
extern T0* ge1019ov27877;
extern T0* ge1021ov28933;
extern T0* ge1021ov28647;
extern T0* ge1021ov28481;
extern T0* ge808ov12000;
extern T0* ge1021ov28931;
extern T0* ge1021ov28645;
extern T0* ge1021ov28479;
extern T0* ge808ov11902;
extern T0* ge808ov11929;
extern T0* ge808ov11856;
extern T0* ge808ov12026;
extern T0* ge808ov11965;
extern T0* ge808ov12037;
extern T0* ge808ov11939;
extern T0* ge808ov11820;
extern T0* ge808ov11843;
extern T0* ge1021ov28930;
extern T0* ge1021ov28644;
extern T0* ge1021ov28478;
extern T0* ge1021ov28928;
extern T0* ge1021ov28642;
extern T0* ge1021ov28476;
extern T0* ge1021ov28929;
extern T0* ge1021ov28643;
extern T0* ge1021ov28477;
extern T0* ge808ov11862;
extern T0* ge1019ov27888;
extern T0* ge1019ov27882;
extern T0* ge1019ov27876;
extern T0* ge808ov12063;
extern T0* ge808ov12185;
extern T0* ge808ov12169;
extern T0* ge808ov11808;
extern T0* ge808ov11809;
extern T0* ge808ov12182;
extern T0* ge808ov12183;
extern T0* ge808ov12176;
extern T0* ge808ov12179;
extern T0* ge808ov12171;
extern T0* ge808ov12174;
extern T0* ge808ov12170;
extern T0* ge808ov12184;
extern T0* ge808ov12167;
extern T0* ge808ov12168;
extern T0* ge808ov12085;
extern T0* ge808ov12064;
extern T0* ge808ov11812;
extern T0* ge808ov12081;
extern T0* ge808ov11810;
extern T0* ge808ov11798;
extern T0* ge808ov11788;
extern T0* ge808ov11778;
extern T0* ge808ov11777;
extern T0* ge1113ov6053;
extern T0* ge1110ov16219;
extern T0* ge1110ov16131;
extern T0* ge1110ov16269;
extern T0* ge1110ov16181;
extern T0* ge265ov12726;
extern T0* ge268ov12726;
extern T0* ge1113ov6061;
extern T0* ge1113ov6032;
extern T0* ge1113ov6033;
extern T0* ge1113ov6055;
extern T0* ge1102ov6307;
extern T0* ge1102ov6308;
extern T0* ge1102ov6309;
extern T0* ge1110ov16268;
extern T0* ge1110ov16180;
extern T0* ge1113ov6057;
extern T0* ge1113ov6040;
extern T0* ge1113ov6054;
extern T0* ge1113ov6035;
extern T0* ge1110ov16262;
extern T0* ge1110ov16174;
extern T0* ge1110ov16261;
extern T0* ge1110ov16173;
extern T0* ge1110ov16270;
extern T0* ge1110ov16182;
extern T0* ge1113ov6017;
extern T0* ge1113ov6045;
extern T0* ge1113ov6034;
extern T0* ge1113ov6014;
extern T0* ge1113ov6030;
extern T0* ge1113ov6026;
extern T0* ge1113ov6027;
extern T0* ge1113ov6028;
extern T0* ge1113ov6051;
extern T0* ge1113ov6059;
extern T0* ge1113ov6052;
extern T0* ge1113ov6044;
extern T0* ge1113ov6058;
extern T0* ge1110ov16306;
extern T0* ge1110ov16218;
extern T0* ge1110ov16305;
extern T0* ge1110ov16217;
extern T0* ge1110ov16304;
extern T0* ge1110ov16216;
extern T0* ge1110ov16303;
extern T0* ge1110ov16215;
extern T0* ge1110ov16266;
extern T0* ge1110ov16178;
extern T0* ge1110ov16265;
extern T0* ge1110ov16177;
extern T0* ge1110ov16264;
extern T0* ge1110ov16176;
extern T0* ge1110ov16263;
extern T0* ge1110ov16175;
extern T0* ge1113ov6013;
extern T0* ge1113ov6016;
extern T0* ge1113ov6029;
extern T0* ge1110ov16274;
extern T0* ge1110ov16186;
extern T0* ge1110ov16273;
extern T0* ge1110ov16185;
extern T0* ge1110ov16272;
extern T0* ge1110ov16184;
extern T0* ge1110ov16271;
extern T0* ge1110ov16183;
extern T0* ge1116ov6012;
extern T0* ge1116ov6011;
extern T0* ge1113ov6042;
extern T0* ge1113ov6020;
extern T0* ge1113ov6046;
extern T0* ge1113ov6015;
extern T0* ge1113ov6039;
extern T0* ge1113ov6019;
extern T0* ge1113ov6022;
extern T0* ge1113ov6023;
extern T0* ge1113ov6021;
extern T0* ge1113ov6060;
extern T0* ge1113ov6036;
extern T0* ge1113ov6037;
extern T0* ge1113ov6056;
extern T0* ge1113ov6018;
extern T0* ge1113ov6038;
extern T0* ge1110ov16255;
extern T0* ge1110ov16167;
extern T0* ge1110ov16254;
extern T0* ge1110ov16166;
extern T0* ge1110ov16253;
extern T0* ge1110ov16165;
extern T0* ge1110ov16252;
extern T0* ge1110ov16164;
extern T0* ge1110ov16251;
extern T0* ge1110ov16163;
extern T0* ge1113ov6025;
extern T0* ge1110ov16237;
extern T0* ge1110ov16149;
extern T0* ge1110ov16238;
extern T0* ge1110ov16150;
extern T0* ge1110ov16236;
extern T0* ge1110ov16148;
extern T0* ge1110ov16235;
extern T0* ge1110ov16147;
extern T0* ge1110ov16234;
extern T0* ge1110ov16146;
extern T0* ge1110ov16233;
extern T0* ge1110ov16145;
extern T0* ge1110ov16242;
extern T0* ge1110ov16154;
extern T0* ge1110ov16241;
extern T0* ge1110ov16153;
extern T0* ge1110ov16240;
extern T0* ge1110ov16152;
extern T0* ge1110ov16239;
extern T0* ge1110ov16151;
extern T0* ge1110ov16302;
extern T0* ge1110ov16214;
extern T0* ge1110ov16301;
extern T0* ge1110ov16213;
extern T0* ge1110ov16300;
extern T0* ge1110ov16212;
extern T0* ge1110ov16299;
extern T0* ge1110ov16211;
extern T0* ge1110ov16244;
extern T0* ge1110ov16156;
extern T0* ge1110ov16243;
extern T0* ge1110ov16155;
extern T0* ge1110ov16226;
extern T0* ge1110ov16138;
extern T0* ge1110ov16227;
extern T0* ge1110ov16139;
extern T0* ge1110ov16225;
extern T0* ge1110ov16137;
extern T0* ge1110ov16224;
extern T0* ge1110ov16136;
extern T0* ge1110ov16247;
extern T0* ge1110ov16159;
extern T0* ge1110ov16248;
extern T0* ge1110ov16160;
extern T0* ge1110ov16246;
extern T0* ge1110ov16158;
extern T0* ge1110ov16245;
extern T0* ge1110ov16157;
extern T0* ge1110ov16285;
extern T0* ge1110ov16197;
extern T0* ge1110ov16284;
extern T0* ge1110ov16196;
extern T0* ge1110ov16283;
extern T0* ge1110ov16195;
extern T0* ge1110ov16282;
extern T0* ge1110ov16194;
extern T0* ge1110ov16281;
extern T0* ge1110ov16193;
extern T0* ge1110ov16280;
extern T0* ge1110ov16192;
extern T0* ge1113ov6024;
extern T0* ge1113ov6031;
extern T0* ge1113ov6048;
extern T0* ge1113ov6047;
extern T0* ge1113ov6050;
extern T0* ge1113ov6043;
extern T0* ge1113ov6041;
extern T0* ge1110ov16290;
extern T0* ge1110ov16202;
extern T0* ge1110ov16289;
extern T0* ge1110ov16201;
extern T0* ge1110ov16288;
extern T0* ge1110ov16200;
extern T0* ge1110ov16287;
extern T0* ge1110ov16199;
extern T0* ge1110ov16286;
extern T0* ge1110ov16198;
extern T0* ge1110ov16294;
extern T0* ge1110ov16206;
extern T0* ge1110ov16298;
extern T0* ge1110ov16210;
extern T0* ge1110ov16297;
extern T0* ge1110ov16209;
extern T0* ge1110ov16296;
extern T0* ge1110ov16208;
extern T0* ge1110ov16295;
extern T0* ge1110ov16207;
extern T0* ge1110ov16293;
extern T0* ge1110ov16205;
extern T0* ge1110ov16223;
extern T0* ge1110ov16135;
extern T0* ge1110ov16222;
extern T0* ge1110ov16134;
extern T0* ge1110ov16221;
extern T0* ge1110ov16133;
extern T0* ge1110ov16220;
extern T0* ge1110ov16132;
extern T0* ge1113ov6049;
extern T0* ge1110ov16292;
extern T0* ge1110ov16204;
extern T0* ge1110ov16279;
extern T0* ge1110ov16191;
extern T0* ge1110ov16278;
extern T0* ge1110ov16190;
extern T0* ge1110ov16276;
extern T0* ge1110ov16188;
extern T0* ge1110ov16277;
extern T0* ge1110ov16189;
extern T0* ge1110ov16275;
extern T0* ge1110ov16187;
extern T0* ge1110ov16291;
extern T0* ge1110ov16203;
extern T0* ge1110ov16232;
extern T0* ge1110ov16144;
extern T0* ge1110ov16231;
extern T0* ge1110ov16143;
extern T0* ge1110ov16229;
extern T0* ge1110ov16141;
extern T0* ge1110ov16230;
extern T0* ge1110ov16142;
extern T0* ge1110ov16228;
extern T0* ge1110ov16140;
extern T0* ge1110ov16250;
extern T0* ge1110ov16162;
extern T0* ge1110ov16249;
extern T0* ge1110ov16161;
extern T0* ge1110ov16259;
extern T0* ge1110ov16171;
extern T0* ge1110ov16258;
extern T0* ge1110ov16170;
extern T0* ge1110ov16260;
extern T0* ge1110ov16172;
extern T0* ge1110ov16267;
extern T0* ge1110ov16179;
extern T0* ge1102ov6313;
extern T0* ge1102ov6312;
extern T0* ge1110ov16257;
extern T0* ge1110ov16169;
extern T0* ge1110ov16256;
extern T0* ge1110ov16168;
extern T0* ge1291ov15258;
extern T0* ge1291ov15220;
extern T0* ge1291ov15218;
extern T0* ge1291ov15259;
extern T0* ge1291ov15231;
extern T0* ge1291ov15230;
extern T0* ge1291ov15241;
extern T0* ge1291ov15235;
extern T0* ge1291ov15234;
extern T0* ge1291ov15233;
extern T0* ge1291ov15239;
extern T0* ge1291ov15238;
extern T0* ge1291ov15240;
extern T0* ge1291ov15217;
extern T0* ge1291ov15243;
extern T0* ge1291ov15252;
extern T0* ge1294ov15072;
extern T0* ge1294ov15070;
extern T0* ge1294ov15071;
extern T0* ge1291ov15253;
extern T0* ge1291ov15254;
extern T0* ge1291ov15257;
extern T0* ge1291ov15255;
extern T0* ge1291ov15256;
extern T0* ge1291ov15250;
extern T0* ge1287ov29761;
extern T0* ge1287ov29762;
extern T0* ge1291ov15223;
extern T0* ge1291ov15246;
extern T0* ge1284ov14685;
extern T0* ge1284ov14684;
extern T0* ge1291ov15266;
extern T0* ge1291ov15267;
extern T0* ge1291ov15268;
extern T0* ge1291ov15261;
extern T0* ge1291ov15244;
extern T0* ge1291ov15245;
extern T0* ge1291ov15247;
extern T0* ge1291ov15251;
extern T0* ge265ov12727;
extern T0* ge253ov13068;
extern T0* ge253ov13067;
extern T0* ge268ov12727;
extern T0* ge1241ov14548;
extern T0* ge1131ov5032;
extern T0* ge1131ov5033;
extern T0* ge1131ov5034;
extern T0* ge1131ov5035;
extern T0* ge1131ov5036;
extern T0* ge1131ov5037;
extern T0* ge1131ov5038;
extern T0* ge1131ov5039;
extern T0* ge1131ov5040;
extern T0* ge1131ov5041;
extern T0* ge1131ov5042;
extern T0* ge1131ov5043;
extern T0* ge1131ov5044;
extern T0* ge1131ov5045;
extern T0* ge1131ov5046;
extern T0* ge1131ov5047;
extern T0* ge1131ov5048;
extern T0* ge1131ov5049;
extern T0* ge1131ov5050;
extern T0* ge1131ov5051;
extern T0* ge1131ov5052;
extern T0* ge1131ov5053;
extern T0* ge1131ov5054;
extern T0* ge1131ov5055;
extern T0* ge1131ov5056;
extern T0* ge1131ov5057;
extern T0* ge1131ov5058;
extern T0* ge1131ov5059;
extern T0* ge1131ov5060;
extern T0* ge1131ov5061;
extern T0* ge1131ov5062;
extern T0* ge1131ov5063;
extern T0* ge1131ov5064;
extern T0* ge1131ov5065;
extern T0* ge1131ov5066;
extern T0* ge1131ov5067;
extern T0* ge1131ov5068;
extern T0* ge1131ov5069;
extern T0* ge1131ov5070;
extern T0* ge1131ov5071;
extern T0* ge1131ov5072;
extern T0* ge1131ov5073;
extern T0* ge1131ov5074;
extern T0* ge1131ov5075;
extern T0* ge1131ov5076;
extern T0* ge1131ov5077;
extern T0* ge1131ov5078;
extern T0* ge1131ov5079;
extern T0* ge1131ov5080;
extern T0* ge1131ov5081;
extern T0* ge1131ov5082;
extern T0* ge1131ov5083;
extern T0* ge1131ov5084;
extern T0* ge1131ov5085;
extern T0* ge1131ov5086;
extern T0* ge1131ov5087;
extern T0* ge1131ov5088;
extern T0* ge1131ov5089;
extern T0* ge1131ov5090;
extern T0* ge1131ov5091;
extern T0* ge1131ov5092;
extern T0* ge1131ov5093;
extern T0* ge1131ov5094;
extern T0* ge1131ov5095;
extern T0* ge1131ov5096;
extern T0* ge1131ov5097;
extern T0* ge1131ov5098;
extern T0* ge1131ov5099;
extern T0* ge1131ov5100;
extern T0* ge1131ov5101;
extern T0* ge1131ov5102;
extern T0* ge1131ov5103;
extern T0* ge1131ov5104;
extern T0* ge1131ov5105;
extern T0* ge1131ov5106;
extern T0* ge1131ov5107;
extern T0* ge1131ov5108;
extern T0* ge1131ov5109;
extern T0* ge1131ov5110;
extern T0* ge1131ov5111;
extern T0* ge1131ov5112;
extern T0* ge1131ov5113;
extern T0* ge1131ov5114;
extern T0* ge1131ov5115;
extern T0* ge1131ov5116;
extern T0* ge1131ov5117;
extern T0* ge1131ov5118;
extern T0* ge1131ov5119;
extern T0* ge1131ov5120;
extern T0* ge1131ov5121;
extern T0* ge1131ov5122;
extern T0* ge1131ov5123;
extern T0* ge1131ov5124;
extern T0* ge1131ov5125;
extern T0* ge1131ov5126;
extern T0* ge1131ov5127;
extern T0* ge1131ov5228;
extern T0* ge1131ov5240;
extern T0* ge1162ov4999;
extern T0* ge1131ov5251;
extern T0* ge1131ov5236;
extern T0* ge1131ov5241;
extern T0* ge1131ov5242;
extern T0* ge1131ov5243;
extern T0* ge1131ov5229;
extern T0* ge1131ov5247;
extern T0* ge1131ov5254;
extern T0* ge1131ov5234;
extern T0* ge1131ov5225;
extern T0* ge1131ov5250;
extern T0* ge1131ov5232;
extern T0* ge1131ov5237;
extern T0* ge1131ov5235;
extern T0* ge1131ov5231;
extern T0* ge1131ov5246;
extern T0* ge1131ov5248;
extern T0* ge1131ov5256;
extern T0* ge1131ov5253;
extern T0* ge1131ov5245;
extern T0* ge1131ov5227;
extern T0* ge1131ov5252;
extern T0* ge1131ov5226;
extern T0* ge1131ov5233;
extern T0* ge1131ov5249;
extern T0* ge1131ov5244;
extern T0* ge1131ov5238;
extern T0* ge1131ov5230;
extern T0* ge1131ov5258;
extern T0* ge1131ov5239;
extern T0* ge1131ov5255;
extern T0* ge1162ov4998;
extern T0* ge1162ov4997;
extern T0* ge1121ov22633;
extern T0* ge1127ov14935;
extern T0* ge1327ov5882;
extern T0* ge9ov4869;
extern T0* ge9ov4876;
extern T0* ge7ov4933;
extern T0* ge284ov1975;
extern T0* ge6ov4506;
extern T0* ge9ov4872;
extern T0* ge9ov4879;
extern T0* ge9ov4870;
extern T0* ge9ov4877;
extern T0* ge9ov4871;
extern T0* ge9ov4878;
extern T0* ge9ov4873;
extern T0* ge9ov4880;
extern T0* ge9ov4874;
extern T0* ge9ov4881;
extern T0* ge6ov4501;
extern T0* ge6ov4500;
extern T0* ge6ov4508;
extern T0* ge6ov4507;
extern T0* ge1170ov3256;
extern T0* ge1170ov3254;
extern T0* ge1298ov29331;
extern T0* ge1298ov29332;
extern T0* ge1289ov31116;
extern T0* ge1289ov31118;
extern T0* ge808ov11792;
extern T0* ge1011ov38518;
extern T0* ge1011ov38516;
extern T0* ge1011ov38514;
extern T0* ge808ov12054;
extern T0* ge904ov18183;
extern T0* ge897ov27674;
extern T0* ge873ov33007;
extern T0* ge893ov27666;
extern T0* ge1021ov28883;
extern T0* ge1021ov28615;
extern T0* ge1021ov28431;
extern T0* ge1021ov28884;
extern T0* ge1021ov28432;
extern T0* ge1021ov28783;
extern T0* ge1021ov28563;
extern T0* ge1021ov28331;
extern T0* ge1021ov28697;
extern T0* ge1021ov28525;
extern T0* ge1021ov28245;
extern T0* ge1021ov28698;
extern T0* ge1021ov28246;
extern T0* ge1021ov28681;
extern T0* ge1021ov28518;
extern T0* ge1021ov28229;
extern T0* ge1021ov28680;
extern T0* ge1021ov28228;
extern T0* ge1021ov28682;
extern T0* ge1021ov28230;
extern T0* ge1021ov28706;
extern T0* ge1021ov28529;
extern T0* ge1021ov28254;
extern T0* ge1021ov28695;
extern T0* ge1021ov28243;
extern T0* ge1021ov28696;
extern T0* ge1021ov28244;
extern T0* ge1021ov28815;
extern T0* ge1021ov28580;
extern T0* ge1021ov28363;
extern T0* ge1021ov28814;
extern T0* ge1021ov28362;
extern T0* ge1021ov28816;
extern T0* ge1021ov28581;
extern T0* ge1021ov28364;
extern T0* ge1021ov28710;
extern T0* ge1021ov28531;
extern T0* ge1021ov28258;
extern T0* ge1021ov28716;
extern T0* ge1021ov28535;
extern T0* ge1021ov28264;
extern T0* ge1021ov28807;
extern T0* ge1021ov28576;
extern T0* ge1021ov28355;
extern T0* ge1021ov28790;
extern T0* ge1021ov28566;
extern T0* ge1021ov28338;
extern T0* ge1021ov28817;
extern T0* ge1021ov28582;
extern T0* ge1021ov28365;
extern T0* ge1021ov28713;
extern T0* ge1021ov28533;
extern T0* ge1021ov28261;
extern T0* ge1021ov28720;
extern T0* ge1021ov28538;
extern T0* ge1021ov28268;
extern T0* ge1021ov28808;
extern T0* ge1021ov28577;
extern T0* ge1021ov28356;
extern T0* ge1021ov28806;
extern T0* ge1021ov28575;
extern T0* ge1021ov28354;
extern T0* ge1021ov28791;
extern T0* ge1021ov28567;
extern T0* ge1021ov28339;
extern T0* ge1021ov28809;
extern T0* ge1021ov28578;
extern T0* ge1021ov28357;
extern T0* ge808ov12052;
extern T0* ge808ov11889;
extern T0* ge808ov11818;
extern T0* ge808ov11957;
extern T0* ge808ov11872;
extern T0* ge1021ov28932;
extern T0* ge1021ov28646;
extern T0* ge1021ov28480;
extern T0* ge808ov11918;
extern T0* ge808ov11861;
extern T0* ge1021ov28779;
extern T0* ge1021ov28562;
extern T0* ge1021ov28327;
extern T0* ge1021ov28780;
extern T0* ge1021ov28328;
extern T0* ge1021ov28771;
extern T0* ge1021ov28559;
extern T0* ge1021ov28319;
extern T0* ge1021ov28782;
extern T0* ge1021ov28330;
extern T0* ge1021ov28781;
extern T0* ge1021ov28329;
extern T0* ge1021ov28778;
extern T0* ge1021ov28561;
extern T0* ge1021ov28326;
extern T0* ge1021ov28743;
extern T0* ge1021ov28547;
extern T0* ge1021ov28291;
extern T0* ge1021ov28742;
extern T0* ge1021ov28546;
extern T0* ge1021ov28290;
extern T0* ge1021ov28741;
extern T0* ge1021ov28545;
extern T0* ge1021ov28289;
extern T0* ge1021ov28740;
extern T0* ge1021ov28544;
extern T0* ge1021ov28288;
extern T0* ge1021ov28739;
extern T0* ge1021ov28287;
extern T0* ge1021ov28669;
extern T0* ge1021ov28514;
extern T0* ge1021ov28217;
extern T0* ge1021ov28667;
extern T0* ge1021ov28513;
extern T0* ge1021ov28215;
extern T0* ge1021ov28749;
extern T0* ge1021ov28548;
extern T0* ge1021ov28297;
extern T0* ge1021ov28746;
extern T0* ge1021ov28294;
extern T0* ge1021ov28757;
extern T0* ge1021ov28550;
extern T0* ge1021ov28305;
extern T0* ge1021ov28753;
extern T0* ge1021ov28549;
extern T0* ge1021ov28301;
extern T0* ge1021ov28750;
extern T0* ge1021ov28298;
extern T0* ge1021ov28747;
extern T0* ge1021ov28295;
extern T0* ge1021ov28758;
extern T0* ge1021ov28306;
extern T0* ge1021ov28754;
extern T0* ge1021ov28302;
extern T0* ge1021ov28751;
extern T0* ge1021ov28299;
extern T0* ge1021ov28748;
extern T0* ge1021ov28296;
extern T0* ge1021ov28759;
extern T0* ge1021ov28307;
extern T0* ge1021ov28755;
extern T0* ge1021ov28303;
extern T0* ge1021ov28872;
extern T0* ge1021ov28610;
extern T0* ge1021ov28420;
extern T0* ge1021ov28765;
extern T0* ge1021ov28554;
extern T0* ge1021ov28313;
extern T0* ge1021ov28764;
extern T0* ge1021ov28312;
extern T0* ge1021ov28745;
extern T0* ge1021ov28293;
extern T0* ge1021ov28744;
extern T0* ge1021ov28292;
extern T0* ge1021ov28756;
extern T0* ge1021ov28304;
extern T0* ge1021ov28752;
extern T0* ge1021ov28300;
extern T0* ge1021ov28763;
extern T0* ge1021ov28553;
extern T0* ge1021ov28311;
extern T0* ge1021ov28762;
extern T0* ge1021ov28552;
extern T0* ge1021ov28310;
extern T0* ge1021ov28761;
extern T0* ge1021ov28551;
extern T0* ge1021ov28309;
extern T0* ge1021ov28861;
extern T0* ge1021ov28604;
extern T0* ge1021ov28409;
extern T0* ge1021ov28859;
extern T0* ge1021ov28603;
extern T0* ge1021ov28407;
extern T0* ge1021ov28684;
extern T0* ge1021ov28519;
extern T0* ge1021ov28232;
extern T0* ge1021ov28813;
extern T0* ge1021ov28579;
extern T0* ge1021ov28361;
extern T0* ge1021ov28683;
extern T0* ge1021ov28231;
extern T0* ge1021ov28812;
extern T0* ge1021ov28360;
extern T0* ge1021ov28811;
extern T0* ge1021ov28359;
extern T0* ge1021ov28714;
extern T0* ge1021ov28534;
extern T0* ge1021ov28262;
extern T0* ge1021ov28712;
extern T0* ge1021ov28532;
extern T0* ge1021ov28260;
extern T0* ge1021ov28711;
extern T0* ge1021ov28259;
extern T0* ge1021ov28718;
extern T0* ge1021ov28536;
extern T0* ge1021ov28266;
extern T0* ge1021ov28717;
extern T0* ge1021ov28265;
extern T0* ge1021ov28719;
extern T0* ge1021ov28537;
extern T0* ge1021ov28267;
extern T0* ge1021ov28795;
extern T0* ge1021ov28568;
extern T0* ge1021ov28343;
extern T0* ge1021ov28794;
extern T0* ge1021ov28342;
extern T0* ge1021ov28760;
extern T0* ge1021ov28308;
extern T0* ge1021ov28793;
extern T0* ge1021ov28341;
extern T0* ge1021ov28792;
extern T0* ge1021ov28340;
extern T0* ge1021ov28796;
extern T0* ge1021ov28569;
extern T0* ge1021ov28344;
extern T0* ge1021ov28700;
extern T0* ge1021ov28526;
extern T0* ge1021ov28248;
extern T0* ge1021ov28699;
extern T0* ge1021ov28247;
extern T0* ge1021ov28705;
extern T0* ge1021ov28253;
extern T0* ge1021ov28702;
extern T0* ge1021ov28527;
extern T0* ge1021ov28250;
extern T0* ge1021ov28703;
extern T0* ge1021ov28251;
extern T0* ge1021ov28810;
extern T0* ge1021ov28358;
extern T0* ge1021ov28701;
extern T0* ge1021ov28249;
extern T0* ge1021ov28715;
extern T0* ge1021ov28263;
extern T0* ge1021ov28704;
extern T0* ge1021ov28528;
extern T0* ge1021ov28252;
extern T0* ge1021ov28709;
extern T0* ge1021ov28530;
extern T0* ge1021ov28257;
extern T0* ge1021ov28707;
extern T0* ge1021ov28255;
extern T0* ge1021ov28708;
extern T0* ge1021ov28256;
extern T0* ge1021ov28818;
extern T0* ge1021ov28583;
extern T0* ge1021ov28366;
extern T0* ge1021ov28785;
extern T0* ge1021ov28555;
extern T0* ge1021ov28333;
extern T0* ge1021ov28679;
extern T0* ge1021ov28517;
extern T0* ge1021ov28227;
extern T0* ge1021ov28677;
extern T0* ge1021ov28225;
extern T0* ge1021ov28671;
extern T0* ge1021ov28516;
extern T0* ge1021ov28219;
extern T0* ge1021ov28670;
extern T0* ge1021ov28515;
extern T0* ge1021ov28218;
extern T0* ge1021ov28921;
extern T0* ge1021ov28635;
extern T0* ge1021ov28469;
extern T0* ge1021ov28925;
extern T0* ge1021ov28639;
extern T0* ge1021ov28473;
extern T0* ge1021ov28881;
extern T0* ge1021ov28614;
extern T0* ge1021ov28429;
extern T0* ge1021ov28924;
extern T0* ge1021ov28638;
extern T0* ge1021ov28472;
extern T0* ge1021ov28784;
extern T0* ge1021ov28564;
extern T0* ge1021ov28332;
extern T0* ge1021ov28786;
extern T0* ge1021ov28334;
extern T0* ge1010ov37723;
extern T0* ge1010ov37718;
extern T0* ge1010ov37713;
extern T0* ge1010ov37724;
extern T0* ge1010ov37719;
extern T0* ge1010ov37714;
extern T0* ge1010ov37722;
extern T0* ge1010ov37717;
extern T0* ge1010ov37712;
extern T0* ge1021ov28935;
extern T0* ge1021ov28648;
extern T0* ge1021ov28483;
extern T0* ge808ov12047;
extern T0* ge808ov12092;
extern T0* ge808ov12046;
extern T0* ge808ov12043;
extern T0* ge808ov12107;
extern T0* ge808ov12091;
extern T0* ge808ov12066;
extern T0* ge808ov12093;
extern T0* ge808ov12108;
extern T0* ge808ov12050;
extern T0* ge808ov12095;
extern T0* ge808ov12062;
extern T0* ge808ov12065;
extern T0* ge808ov12115;
extern T0* ge808ov12056;
extern T0* ge808ov12087;
extern T0* ge808ov12075;
extern T0* ge808ov12101;
extern T0* ge808ov12055;
extern T0* ge808ov11769;
extern T0* ge1021ov28877;
extern T0* ge1021ov28611;
extern T0* ge1021ov28425;
extern T0* ge1018ov37731;
extern T0* ge1018ov37730;
extern T0* ge1021ov28876;
extern T0* ge1021ov28424;
extern T0* ge808ov12113;
extern T0* ge808ov12083;
extern T0* ge808ov12069;
extern T0* ge808ov12100;
extern T0* ge808ov12086;
extern T0* ge808ov12048;
extern T0* ge808ov12080;
extern T0* ge808ov12096;
extern T0* ge808ov12084;
extern T0* ge808ov12111;
extern T0* ge808ov12074;
extern T0* ge808ov12058;
extern T0* ge808ov12060;
extern T0* ge808ov12097;
extern T0* ge808ov12049;
extern T0* ge808ov12071;
extern T0* ge808ov12099;
extern T0* ge1021ov28934;
extern T0* ge1021ov28482;
extern T0* ge1033ov23178;
extern T0* ge808ov12166;
extern T0* ge808ov12172;
extern T0* ge808ov12173;
extern T0* ge808ov12175;
extern T0* ge808ov12177;
extern T0* ge808ov12178;
extern T0* ge808ov12180;
extern T0* ge808ov12181;
extern T0* ge808ov12228;
extern T0* ge808ov12229;
extern T0* ge808ov12230;
extern T0* ge808ov11767;
extern T0* ge808ov11774;
extern T0* ge808ov11779;
extern T0* ge808ov11781;
extern T0* ge808ov11787;
extern T0* ge808ov11791;
extern T0* ge808ov11799;
extern T0* ge808ov11819;
extern T0* ge808ov11821;
extern T0* ge808ov11826;
extern T0* ge808ov11827;
extern T0* ge808ov11828;
extern T0* ge808ov11829;
extern T0* ge808ov11822;
extern T0* ge808ov11823;
extern T0* ge808ov11824;
extern T0* ge808ov11825;
extern T0* ge808ov11830;
extern T0* ge808ov11831;
extern T0* ge808ov11832;
extern T0* ge808ov11833;
extern T0* ge808ov11834;
extern T0* ge808ov11835;
extern T0* ge808ov11836;
extern T0* ge808ov11837;
extern T0* ge808ov11838;
extern T0* ge808ov11840;
extern T0* ge808ov11839;
extern T0* ge808ov11841;
extern T0* ge808ov11844;
extern T0* ge808ov11845;
extern T0* ge808ov11846;
extern T0* ge808ov11847;
extern T0* ge808ov11848;
extern T0* ge808ov11849;
extern T0* ge808ov11850;
extern T0* ge808ov11851;
extern T0* ge808ov11852;
extern T0* ge808ov11853;
extern T0* ge808ov11854;
extern T0* ge808ov11855;
extern T0* ge808ov11857;
extern T0* ge808ov11858;
extern T0* ge808ov11859;
extern T0* ge808ov11860;
extern T0* ge808ov11863;
extern T0* ge808ov11864;
extern T0* ge808ov11865;
extern T0* ge808ov11866;
extern T0* ge808ov11868;
extern T0* ge808ov11869;
extern T0* ge808ov11870;
extern T0* ge808ov11871;
extern T0* ge808ov11873;
extern T0* ge808ov11874;
extern T0* ge808ov11875;
extern T0* ge808ov11876;
extern T0* ge808ov11877;
extern T0* ge808ov11878;
extern T0* ge808ov11879;
extern T0* ge808ov11880;
extern T0* ge808ov11881;
extern T0* ge808ov11882;
extern T0* ge808ov11883;
extern T0* ge808ov11884;
extern T0* ge808ov11885;
extern T0* ge808ov11886;
extern T0* ge808ov11887;
extern T0* ge808ov11888;
extern T0* ge808ov11890;
extern T0* ge808ov11891;
extern T0* ge808ov11892;
extern T0* ge808ov11893;
extern T0* ge808ov11894;
extern T0* ge808ov11895;
extern T0* ge808ov11896;
extern T0* ge808ov11897;
extern T0* ge808ov11898;
extern T0* ge808ov11899;
extern T0* ge808ov11900;
extern T0* ge808ov11901;
extern T0* ge808ov11903;
extern T0* ge808ov11904;
extern T0* ge808ov11905;
extern T0* ge808ov11906;
extern T0* ge808ov11907;
extern T0* ge808ov11908;
extern T0* ge808ov11909;
extern T0* ge808ov11910;
extern T0* ge808ov11911;
extern T0* ge808ov11912;
extern T0* ge808ov11913;
extern T0* ge808ov11914;
extern T0* ge808ov11915;
extern T0* ge808ov11916;
extern T0* ge808ov11917;
extern T0* ge808ov11919;
extern T0* ge808ov11920;
extern T0* ge808ov11921;
extern T0* ge808ov11922;
extern T0* ge808ov11923;
extern T0* ge808ov11924;
extern T0* ge808ov11925;
extern T0* ge808ov11926;
extern T0* ge808ov11927;
extern T0* ge808ov11928;
extern T0* ge808ov11930;
extern T0* ge808ov11931;
extern T0* ge808ov11932;
extern T0* ge808ov11933;
extern T0* ge808ov11934;
extern T0* ge808ov11936;
extern T0* ge808ov11937;
extern T0* ge808ov11938;
extern T0* ge808ov11940;
extern T0* ge808ov11941;
extern T0* ge808ov11942;
extern T0* ge808ov11943;
extern T0* ge808ov11944;
extern T0* ge808ov11945;
extern T0* ge808ov11946;
extern T0* ge808ov11947;
extern T0* ge808ov11948;
extern T0* ge808ov11949;
extern T0* ge808ov11950;
extern T0* ge808ov11951;
extern T0* ge808ov11952;
extern T0* ge808ov11953;
extern T0* ge808ov11954;
extern T0* ge808ov11955;
extern T0* ge808ov11956;
extern T0* ge808ov11958;
extern T0* ge808ov11959;
extern T0* ge808ov11960;
extern T0* ge808ov11961;
extern T0* ge808ov11962;
extern T0* ge808ov11963;
extern T0* ge808ov11964;
extern T0* ge808ov11966;
extern T0* ge808ov11967;
extern T0* ge808ov11968;
extern T0* ge808ov11969;
extern T0* ge808ov11970;
extern T0* ge808ov11971;
extern T0* ge808ov11972;
extern T0* ge808ov11973;
extern T0* ge808ov11974;
extern T0* ge808ov11975;
extern T0* ge808ov11976;
extern T0* ge808ov11977;
extern T0* ge808ov11978;
extern T0* ge808ov11979;
extern T0* ge808ov11980;
extern T0* ge808ov11981;
extern T0* ge808ov11982;
extern T0* ge808ov11983;
extern T0* ge808ov11984;
extern T0* ge808ov11985;
extern T0* ge808ov11986;
extern T0* ge808ov11987;
extern T0* ge808ov11988;
extern T0* ge808ov11989;
extern T0* ge808ov11990;
extern T0* ge808ov11991;
extern T0* ge808ov11992;
extern T0* ge808ov11993;
extern T0* ge808ov11994;
extern T0* ge808ov11995;
extern T0* ge808ov11996;
extern T0* ge808ov11997;
extern T0* ge808ov11998;
extern T0* ge808ov11999;
extern T0* ge808ov12001;
extern T0* ge808ov12002;
extern T0* ge808ov12003;
extern T0* ge808ov12004;
extern T0* ge808ov12005;
extern T0* ge808ov12006;
extern T0* ge808ov12007;
extern T0* ge808ov12008;
extern T0* ge808ov12009;
extern T0* ge808ov12010;
extern T0* ge808ov12011;
extern T0* ge808ov12012;
extern T0* ge808ov12013;
extern T0* ge808ov12014;
extern T0* ge808ov12015;
extern T0* ge808ov12016;
extern T0* ge808ov12017;
extern T0* ge808ov12018;
extern T0* ge808ov12019;
extern T0* ge808ov12020;
extern T0* ge808ov12021;
extern T0* ge808ov12022;
extern T0* ge808ov12023;
extern T0* ge808ov12024;
extern T0* ge808ov12025;
extern T0* ge808ov12027;
extern T0* ge808ov12028;
extern T0* ge808ov12029;
extern T0* ge808ov12030;
extern T0* ge808ov12031;
extern T0* ge808ov12032;
extern T0* ge808ov12033;
extern T0* ge808ov12034;
extern T0* ge808ov12035;
extern T0* ge808ov12036;
extern T0* ge808ov12038;
extern T0* ge808ov12040;
extern T0* ge808ov12041;
extern T0* ge808ov12044;
extern T0* ge808ov12045;
extern T0* ge808ov12053;
extern T0* ge808ov12061;
extern T0* ge808ov12067;
extern T0* ge808ov12070;
extern T0* ge808ov12072;
extern T0* ge808ov12073;
extern T0* ge808ov12076;
extern T0* ge808ov12077;
extern T0* ge808ov12078;
extern T0* ge808ov12079;
extern T0* ge808ov12082;
extern T0* ge808ov12088;
extern T0* ge808ov12089;
extern T0* ge808ov12090;
extern T0* ge808ov12098;
extern T0* ge808ov12102;
extern T0* ge808ov12103;
extern T0* ge808ov12104;
extern T0* ge808ov12105;
extern T0* ge808ov12106;
extern T0* ge808ov12109;
extern T0* ge808ov12110;
extern T0* ge808ov12112;
extern T0* ge808ov12114;
extern T0* ge808ov12116;
extern T0* ge808ov12130;
extern T0* ge808ov12131;
extern T0* ge808ov12132;
extern T0* ge808ov12133;
extern T0* ge808ov12134;
extern T0* ge808ov12135;
extern T0* ge808ov12136;
extern T0* ge808ov12137;
extern T0* ge808ov12138;
extern T0* ge808ov12139;
extern T0* ge808ov12140;
extern T0* ge808ov12141;
extern T0* ge808ov12142;
extern T0* ge808ov12143;
extern T0* ge808ov12144;
extern T0* ge808ov12145;
extern T0* ge808ov12146;
extern T0* ge808ov12147;
extern T0* ge808ov12148;
extern T0* ge808ov12149;
extern T0* ge808ov12150;
extern T0* ge808ov12151;
extern T0* ge808ov12152;
extern T0* ge808ov12153;
extern T0* ge808ov12155;
extern T0* ge808ov12156;
extern T0* ge808ov12157;
extern T0* ge808ov12158;
extern T0* ge808ov12159;
extern T0* ge808ov12160;
extern T0* ge808ov12161;
extern T0* ge808ov12162;
extern T0* ge808ov12163;
extern T0* ge808ov12164;
extern T0* ge228ov16465;
extern T0* ge1033ov23207;
extern T0* ge1021ov28893;
extern T0* ge1021ov28621;
extern T0* ge1021ov28441;
extern T0* ge1021ov28805;
extern T0* ge1021ov28574;
extern T0* ge1021ov28353;
extern T0* ge1021ov28891;
extern T0* ge1021ov28619;
extern T0* ge1021ov28439;
extern T0* ge1021ov28890;
extern T0* ge1021ov28438;
extern T0* ge1021ov28694;
extern T0* ge1021ov28524;
extern T0* ge1021ov28242;
extern T0* ge1021ov28888;
extern T0* ge1021ov28618;
extern T0* ge1021ov28436;
extern T0* ge1021ov28887;
extern T0* ge1021ov28435;
extern T0* ge1021ov28693;
extern T0* ge1021ov28523;
extern T0* ge1021ov28241;
extern T0* ge1021ov28662;
extern T0* ge1021ov28509;
extern T0* ge1021ov28210;
extern T0* ge1021ov28804;
extern T0* ge1021ov28352;
extern T0* ge1021ov28802;
extern T0* ge1021ov28573;
extern T0* ge1021ov28350;
extern T0* ge1021ov28663;
extern T0* ge1021ov28211;
extern T0* ge1021ov28895;
extern T0* ge1021ov28622;
extern T0* ge1021ov28443;
extern T0* ge1021ov28906;
extern T0* ge1021ov28626;
extern T0* ge1021ov28454;
extern T0* ge1021ov28947;
extern T0* ge1021ov28653;
extern T0* ge1021ov28495;
extern T0* ge1021ov28945;
extern T0* ge1021ov28493;
extern T0* ge1021ov28946;
extern T0* ge1021ov28494;
extern T0* ge1021ov28942;
extern T0* ge1021ov28651;
extern T0* ge1021ov28490;
extern T0* ge1021ov28940;
extern T0* ge1021ov28488;
extern T0* ge1021ov28941;
extern T0* ge1021ov28489;
extern T0* ge1021ov28943;
extern T0* ge1021ov28652;
extern T0* ge1021ov28491;
extern T0* ge1021ov28944;
extern T0* ge1021ov28492;
extern T0* ge1021ov28938;
extern T0* ge1021ov28650;
extern T0* ge1021ov28486;
extern T0* ge1021ov28939;
extern T0* ge1021ov28487;
extern T0* ge1021ov28803;
extern T0* ge1021ov28351;
extern T0* ge1021ov28957;
extern T0* ge1021ov28657;
extern T0* ge1021ov28505;
extern T0* ge1021ov28955;
extern T0* ge1021ov28503;
extern T0* ge1021ov28956;
extern T0* ge1021ov28504;
extern T0* ge1021ov28952;
extern T0* ge1021ov28655;
extern T0* ge1021ov28500;
extern T0* ge1021ov28950;
extern T0* ge1021ov28498;
extern T0* ge1021ov28951;
extern T0* ge1021ov28499;
extern T0* ge1021ov28953;
extern T0* ge1021ov28656;
extern T0* ge1021ov28501;
extern T0* ge1021ov28954;
extern T0* ge1021ov28502;
extern T0* ge1021ov28948;
extern T0* ge1021ov28654;
extern T0* ge1021ov28496;
extern T0* ge1021ov28949;
extern T0* ge1021ov28497;
extern T0* ge1021ov28733;
extern T0* ge1021ov28542;
extern T0* ge1021ov28281;
extern T0* ge1021ov28732;
extern T0* ge1021ov28280;
extern T0* ge1021ov28731;
extern T0* ge1021ov28541;
extern T0* ge1021ov28279;
extern T0* ge1021ov28730;
extern T0* ge1021ov28278;
extern T0* ge1021ov28734;
extern T0* ge1021ov28543;
extern T0* ge1021ov28282;
extern T0* ge1021ov28725;
extern T0* ge1021ov28540;
extern T0* ge1021ov28273;
extern T0* ge1021ov28727;
extern T0* ge1021ov28275;
extern T0* ge1021ov28894;
extern T0* ge1021ov28442;
extern T0* ge1021ov28889;
extern T0* ge1021ov28437;
extern T0* ge1021ov28907;
extern T0* ge1021ov28455;
extern T0* ge1021ov28735;
extern T0* ge1021ov28283;
extern T0* ge1021ov28723;
extern T0* ge1021ov28271;
extern T0* ge1021ov28729;
extern T0* ge1021ov28277;
extern T0* ge1021ov28726;
extern T0* ge1021ov28274;
extern T0* ge1021ov28724;
extern T0* ge1021ov28272;
extern T0* ge1021ov28879;
extern T0* ge1021ov28613;
extern T0* ge1021ov28427;
extern T0* ge1021ov28880;
extern T0* ge1021ov28428;
extern T0* ge1021ov28863;
extern T0* ge1021ov28605;
extern T0* ge1021ov28411;
extern T0* ge1021ov28864;
extern T0* ge1021ov28606;
extern T0* ge1021ov28412;
extern T0* ge1021ov28860;
extern T0* ge1021ov28408;
extern T0* ge1021ov28902;
extern T0* ge1021ov28624;
extern T0* ge1021ov28450;
extern T0* ge1022ov8444;
extern T0* ge1022ov8535;
extern T0* ge1022ov8520;
extern T0* ge1022ov8492;
extern T0* ge1022ov8533;
extern T0* ge1022ov8530;
extern T0* ge1022ov8504;
extern T0* ge1022ov8494;
extern T0* ge1022ov8453;
extern T0* ge1022ov8493;
extern T0* ge1022ov8522;
extern T0* ge1022ov8513;
extern T0* ge1022ov8537;
extern T0* ge1021ov28901;
extern T0* ge1021ov28623;
extern T0* ge1021ov28449;
extern T0* ge1021ov28905;
extern T0* ge1021ov28625;
extern T0* ge1021ov28453;
extern T0* ge1021ov28904;
extern T0* ge1021ov28452;
extern T0* ge1021ov28900;
extern T0* ge1021ov28448;
extern T0* ge1021ov28899;
extern T0* ge1021ov28447;
extern T0* ge1021ov28898;
extern T0* ge1021ov28446;
extern T0* ge1021ov28897;
extern T0* ge1021ov28445;
extern T0* ge1021ov28896;
extern T0* ge1021ov28444;
extern T0* ge1021ov28916;
extern T0* ge1021ov28631;
extern T0* ge1021ov28464;
extern T0* ge1021ov28664;
extern T0* ge1021ov28510;
extern T0* ge1021ov28212;
extern T0* ge1021ov28824;
extern T0* ge1021ov28585;
extern T0* ge1021ov28372;
extern T0* ge1021ov28823;
extern T0* ge1021ov28371;
extern T0* ge1021ov28822;
extern T0* ge1021ov28370;
extern T0* ge1021ov28821;
extern T0* ge1021ov28369;
extern T0* ge1021ov28820;
extern T0* ge1021ov28368;
extern T0* ge1021ov28819;
extern T0* ge1021ov28584;
extern T0* ge1021ov28367;
extern T0* ge1022ov8538;
extern T0* ge1021ov28829;
extern T0* ge1021ov28588;
extern T0* ge1021ov28377;
extern T0* ge1021ov28836;
extern T0* ge1021ov28592;
extern T0* ge1021ov28384;
extern T0* ge1021ov28835;
extern T0* ge1021ov28383;
extern T0* ge1021ov28834;
extern T0* ge1021ov28591;
extern T0* ge1021ov28382;
extern T0* ge1021ov28833;
extern T0* ge1021ov28381;
extern T0* ge1021ov28832;
extern T0* ge1021ov28590;
extern T0* ge1021ov28380;
extern T0* ge1021ov28831;
extern T0* ge1021ov28379;
extern T0* ge1021ov28830;
extern T0* ge1021ov28589;
extern T0* ge1021ov28378;
extern T0* ge1021ov28828;
extern T0* ge1021ov28376;
extern T0* ge1021ov28919;
extern T0* ge1021ov28633;
extern T0* ge1021ov28467;
extern T0* ge1021ov28917;
extern T0* ge1021ov28632;
extern T0* ge1021ov28465;
extern T0* ge1021ov28915;
extern T0* ge1021ov28463;
extern T0* ge1022ov8471;
extern T0* ge1021ov28958;
extern T0* ge1021ov28658;
extern T0* ge1021ov28506;
extern T0* ge1021ov28913;
extern T0* ge1021ov28461;
extern T0* ge1022ov8461;
extern T0* ge1022ov8462;
extern T0* ge1022ov8463;
extern T0* ge1022ov8464;
extern T0* ge1022ov8469;
extern T0* ge1022ov8470;
extern T0* ge1022ov8472;
extern T0* ge1021ov28914;
extern T0* ge1021ov28462;
extern T0* ge1021ov28736;
extern T0* ge1021ov28284;
extern T0* ge1021ov28909;
extern T0* ge1021ov28628;
extern T0* ge1021ov28457;
extern T0* ge802ov38529;
extern T0* ge802ov38528;
extern T0* ge1021ov28908;
extern T0* ge1021ov28627;
extern T0* ge1021ov28456;
extern T0* ge802ov38530;
extern T0* ge1021ov28927;
extern T0* ge1021ov28641;
extern T0* ge1021ov28475;
extern T0* ge1021ov28926;
extern T0* ge1021ov28640;
extern T0* ge1021ov28474;
extern T0* ge808ov12094;
extern T0* ge808ov12051;
extern T0* ge1022ov8455;
extern T0* ge1022ov8408;
extern T0* ge1022ov8396;
extern T0* ge1022ov8419;
extern T0* ge1021ov28873;
extern T0* ge1021ov28421;
extern T0* ge1021ov28869;
extern T0* ge1021ov28609;
extern T0* ge1021ov28417;
extern T0* ge1021ov28870;
extern T0* ge1021ov28418;
extern T0* ge1021ov28674;
extern T0* ge1021ov28222;
extern T0* ge1021ov28789;
extern T0* ge1021ov28565;
extern T0* ge1021ov28337;
extern T0* ge1021ov28871;
extern T0* ge1021ov28419;
extern T0* ge1021ov28689;
extern T0* ge1021ov28522;
extern T0* ge1021ov28237;
extern T0* ge1021ov28688;
extern T0* ge1021ov28236;
extern T0* ge1021ov28687;
extern T0* ge1021ov28521;
extern T0* ge1021ov28235;
extern T0* ge1021ov28691;
extern T0* ge1021ov28239;
extern T0* ge1021ov28692;
extern T0* ge1021ov28240;
extern T0* ge1021ov28686;
extern T0* ge1021ov28520;
extern T0* ge1021ov28234;
extern T0* ge1021ov28892;
extern T0* ge1021ov28620;
extern T0* ge1021ov28440;
extern T0* ge1021ov28661;
extern T0* ge1021ov28508;
extern T0* ge1021ov28209;
extern T0* ge1021ov28737;
extern T0* ge1021ov28285;
extern T0* ge1021ov28844;
extern T0* ge1021ov28593;
extern T0* ge1021ov28392;
extern T0* ge1021ov28842;
extern T0* ge1021ov28390;
extern T0* ge1021ov28840;
extern T0* ge1021ov28388;
extern T0* ge1021ov28839;
extern T0* ge1021ov28387;
extern T0* ge1021ov28866;
extern T0* ge1021ov28607;
extern T0* ge1021ov28414;
extern T0* ge1021ov28868;
extern T0* ge1021ov28608;
extern T0* ge1021ov28416;
extern T0* ge1021ov28858;
extern T0* ge1021ov28602;
extern T0* ge1021ov28406;
extern T0* ge1021ov28903;
extern T0* ge1021ov28451;
extern T0* ge1021ov28843;
extern T0* ge1021ov28391;
extern T0* ge1021ov28841;
extern T0* ge1021ov28389;
extern T0* ge1021ov28838;
extern T0* ge1021ov28386;
extern T0* ge1021ov28837;
extern T0* ge1021ov28385;
extern T0* ge1021ov28862;
extern T0* ge1021ov28410;
extern T0* ge1021ov28857;
extern T0* ge1021ov28405;
extern T0* ge1021ov28845;
extern T0* ge1021ov28594;
extern T0* ge1021ov28393;
extern T0* ge1021ov28846;
extern T0* ge1021ov28394;
extern T0* ge1021ov28882;
extern T0* ge1021ov28430;
extern T0* ge1021ov28678;
extern T0* ge1021ov28226;
extern T0* ge1021ov28676;
extern T0* ge1021ov28224;
extern T0* ge1021ov28675;
extern T0* ge1021ov28223;
extern T0* ge1021ov28878;
extern T0* ge1021ov28612;
extern T0* ge1021ov28426;
extern T0* ge1021ov28936;
extern T0* ge1021ov28649;
extern T0* ge1021ov28484;
extern T0* ge1021ov28937;
extern T0* ge1021ov28485;
extern T0* ge1021ov28886;
extern T0* ge1021ov28617;
extern T0* ge1021ov28434;
extern T0* ge1021ov28885;
extern T0* ge1021ov28616;
extern T0* ge1021ov28433;
extern T0* ge1021ov28923;
extern T0* ge1021ov28637;
extern T0* ge1021ov28471;
extern T0* ge1021ov28912;
extern T0* ge1021ov28630;
extern T0* ge1021ov28460;
extern T0* ge1021ov28911;
extern T0* ge1021ov28459;
extern T0* ge1021ov28773;
extern T0* ge1021ov28321;
extern T0* ge1021ov28776;
extern T0* ge1021ov28560;
extern T0* ge1021ov28324;
extern T0* ge1021ov28766;
extern T0* ge1021ov28556;
extern T0* ge1021ov28314;
extern T0* ge1021ov28769;
extern T0* ge1021ov28558;
extern T0* ge1021ov28317;
extern T0* ge1021ov28772;
extern T0* ge1021ov28320;
extern T0* ge1021ov28738;
extern T0* ge1021ov28286;
extern T0* ge1021ov28853;
extern T0* ge1021ov28600;
extern T0* ge1021ov28401;
extern T0* ge1021ov28852;
extern T0* ge1021ov28599;
extern T0* ge1021ov28400;
extern T0* ge1021ov28851;
extern T0* ge1021ov28598;
extern T0* ge1021ov28399;
extern T0* ge1021ov28849;
extern T0* ge1021ov28597;
extern T0* ge1021ov28397;
extern T0* ge1021ov28850;
extern T0* ge1021ov28398;
extern T0* ge1021ov28848;
extern T0* ge1021ov28596;
extern T0* ge1021ov28396;
extern T0* ge1021ov28847;
extern T0* ge1021ov28595;
extern T0* ge1021ov28395;
extern T0* ge1021ov28854;
extern T0* ge1021ov28601;
extern T0* ge1021ov28402;
extern T0* ge1021ov28673;
extern T0* ge1021ov28221;
extern T0* ge1021ov28788;
extern T0* ge1021ov28336;
extern T0* ge1021ov28922;
extern T0* ge1021ov28636;
extern T0* ge1021ov28470;
extern T0* ge1021ov28875;
extern T0* ge1021ov28423;
extern T0* ge1021ov28874;
extern T0* ge1021ov28422;
extern T0* ge1021ov28672;
extern T0* ge1021ov28220;
extern T0* ge1021ov28787;
extern T0* ge1021ov28335;
extern T0* ge66ov38227;
extern T0* ge1010ov37721;
extern T0* ge1010ov37716;
extern T0* ge1010ov37711;
extern T0* ge1021ov28920;
extern T0* ge1021ov28634;
extern T0* ge1021ov28468;
extern T0* ge1022ov8499;
extern T0* ge1022ov8452;
extern T0* ge1021ov28826;
extern T0* ge1021ov28587;
extern T0* ge1021ov28374;
extern T0* ge1021ov28827;
extern T0* ge1021ov28375;
extern T0* ge1021ov28825;
extern T0* ge1021ov28586;
extern T0* ge1021ov28373;
extern T0* ge1022ov8456;
extern T0* ge1021ov28665;
extern T0* ge1021ov28511;
extern T0* ge1021ov28213;
extern T0* ge1021ov28666;
extern T0* ge1021ov28512;
extern T0* ge1021ov28214;
extern T0* ge1021ov28797;
extern T0* ge1021ov28570;
extern T0* ge1021ov28345;
extern T0* ge1021ov28721;
extern T0* ge1021ov28539;
extern T0* ge1021ov28269;
extern T0* ge1021ov28722;
extern T0* ge1021ov28270;
extern T0* ge1021ov28799;
extern T0* ge1021ov28571;
extern T0* ge1021ov28347;
extern T0* ge1021ov28800;
extern T0* ge1021ov28348;
extern T0* ge1021ov28798;
extern T0* ge1021ov28346;
extern T0* ge1021ov28801;
extern T0* ge1021ov28572;
extern T0* ge1021ov28349;
extern T0* ge1021ov28775;
extern T0* ge1021ov28323;
extern T0* ge1021ov28777;
extern T0* ge1021ov28325;
extern T0* ge1021ov28767;
extern T0* ge1021ov28315;
extern T0* ge1021ov28770;
extern T0* ge1021ov28318;
extern T0* ge1021ov28768;
extern T0* ge1021ov28557;
extern T0* ge1021ov28316;
extern T0* ge1021ov28774;
extern T0* ge1021ov28322;
extern T0* ge1021ov28685;
extern T0* ge1021ov28233;
extern T0* ge1221ov29122;
extern T0* ge1221ov29121;
extern T0* ge351ov12625;
extern T0* ge264ov12625;
extern T0* ge251ov12625;
extern T0* ge7ov4934;
extern T0* ge7ov4935;
extern T0* ge7ov4936;
extern T0* ge1020ov38901;
extern T0* ge1020ov38897;
extern T0* ge1020ov38896;
extern T0* ge1020ov38900;
extern T0* ge1020ov38895;
extern T0* ge1020ov38899;
extern T0* ge1020ov38894;
extern T0* ge1020ov38898;
extern T0* ge1020ov38893;
extern T0* ge808ov12154;
extern T0* ge808ov12165;
extern T0* ge812ov30510;
extern T0* ge808ov12226;
extern T0* ge808ov12227;
extern T0* ge808ov12207;
extern T0* ge808ov12223;
extern T0* ge808ov12211;
extern T0* ge808ov12212;
extern T0* ge808ov12213;
extern T0* ge808ov12214;
extern T0* ge808ov12208;
extern T0* ge808ov12215;
extern T0* ge808ov12216;
extern T0* ge808ov12217;
extern T0* ge808ov12218;
extern T0* ge808ov12209;
extern T0* ge808ov12224;
extern T0* ge808ov12219;
extern T0* ge808ov12220;
extern T0* ge808ov12221;
extern T0* ge808ov12210;
extern T0* ge808ov12222;
extern T0* ge808ov12225;
extern T0* ge1289ov31115;
extern T0* ge1289ov31117;
extern T0* ge714ov16447;
extern T0* ge714ov16448;
extern T0* ge808ov12203;
extern T0* ge808ov12202;
extern T0* ge808ov12190;
extern T0* ge808ov12191;
extern T0* ge808ov12192;
extern T0* ge808ov12193;
extern T0* ge808ov12194;
extern T0* ge808ov12195;
extern T0* ge808ov12196;
extern T0* ge808ov12197;
extern T0* ge808ov12198;
extern T0* ge808ov12199;
extern T0* ge808ov12200;
extern T0* ge808ov12201;
extern T0* ge808ov12205;
extern T0* ge808ov12206;
extern T0* ge808ov12186;
extern T0* ge808ov12187;
extern T0* ge808ov12188;
extern T0* ge808ov12189;
extern T0* ge808ov12204;
extern T0* ge833ov31787;
extern T0* ge833ov31786;
extern T0* ge808ov12120;
extern T0* ge808ov12121;
extern T0* ge808ov12119;
extern T0* ge808ov12117;
extern T0* ge808ov12118;
extern T0* ge808ov12125;
extern T0* ge808ov12126;
extern T0* ge808ov12124;
extern T0* ge808ov12122;
extern T0* ge808ov12123;
extern T0* ge808ov12127;
extern T0* ge808ov12128;
extern T0* ge808ov12129;
extern T0* ge852ov33188;
extern T0* ge840ov30417;
extern T0* ge51ov4885;
extern T0* ge37ov4885;
extern T0* ge43ov4885;
extern T0* ge42ov4885;
extern T0* ge41ov4885;
extern T0* ge32ov4885;
extern T0* ge31ov4885;
extern T0* ge48ov4885;
extern T0* ge61ov4885;
extern T0* ge1140ov4885;
extern T0* ge169ov4885;
extern T0* ge168ov4885;
extern T0* ge1134ov4885;
extern T0* ge1150ov4885;
extern T0* ge1147ov4885;
extern T0* ge1146ov4885;
extern T0* ge1142ov4885;
extern T0* ge1149ov4885;
extern T0* ge1141ov4885;
extern T0* ge1153ov4885;
extern T0* ge1137ov4885;
extern T0* ge1148ov4885;
extern T0* ge1152ov4885;
extern T0* ge1144ov4885;
extern T0* ge1135ov4885;
extern T0* ge1143ov4885;
extern T0* ge163ov4885;
extern T0* ge166ov4885;
extern T0* ge173ov4885;
extern T0* ge162ov4885;
extern T0* ge261ov31294;
extern T0* ge248ov2434;
extern T0* geic2;
extern T0* geic3;
extern T0* geic4;
extern void GE_init_const1(void);
extern void GE_init_const2(void);
extern void GE_init_const3(void);
extern void GE_init_const4(void);
extern void GE_init_const5(void);
extern void GE_init_const6(void);
extern void GE_init_const7(void);
extern void GE_init_const8(void);
extern void GE_init_const9(void);
extern void GE_init_const10(void);
extern void GE_init_const11(void);
extern void GE_init_const12(void);
extern void GE_init_const13(void);
extern void GE_init_const14(void);
extern void GE_init_const15(void);
extern void GE_init_const16(void);
extern void GE_init_const17(void);
extern void GE_init_const18(void);
extern void GE_init_const19(void);
extern void GE_init_const20(void);
extern void GE_init_const(void);
extern EIF_TYPE GE_types[];

#ifdef __cplusplus
}
#endif


/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CECIL_H
#define EIF_CECIL_H

#ifdef __cplusplus
extern "C" {
#endif

typedef void (*EIF_PROCEDURE)(EIF_REFERENCE, ...);
#define EIF_PROC EIF_PROCEDURE
typedef EIF_INTEGER_32 (*EIF_INTEGER_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Integer 32 bits */
#define EIF_INTEGER_FUNCTION EIF_INTEGER_32_FUNCTION
typedef EIF_REFERENCE (*EIF_REFERENCE_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Reference */
typedef EIF_POINTER (*EIF_POINTER_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Pointer */
typedef EIF_BOOLEAN (*EIF_BOOLEAN_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Boolean */
typedef EIF_CHARACTER_8 (*EIF_CHARACTER_8_FUNCTION)(EIF_REFERENCE, ...); /* Returns char */
#define EIF_CHARACTER_FUNCTION EIF_CHARACTER_8_FUNCTION
typedef EIF_REAL_64 (*EIF_REAL_64_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Double */
#define EIF_DOUBLE_FUNCTION EIF_REAL_64_FUNCTION
typedef EIF_REAL_32 (*EIF_REAL_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Real */
#define EIF_REAL_FUNCTION EIF_REAL_32_FUNCTION

extern EIF_PROCEDURE eif_procedure(char* rout, EIF_TYPE_ID cid);
#define eif_proc eif_procedure /* Use `eif_procedure' instead */
extern EIF_INTEGER_FUNCTION eif_integer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REFERENCE_FUNCTION eif_reference_function(char* rout, EIF_TYPE_ID cid);
extern EIF_POINTER_FUNCTION eif_pointer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_BOOLEAN_FUNCTION eif_boolean_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REAL_64_FUNCTION eif_real_64_function(char* rout, EIF_TYPE_ID cid);
#define eif_double_function(rout,cid) eif_real_64_function((rout),(cid))
extern EIF_REAL_32_FUNCTION eif_real_32_function(char* rout, EIF_TYPE_ID cid);
#define eif_real_function(rout,cid) eif_real_32_function((rout),(cid))
extern EIF_CHARACTER_8_FUNCTION eif_character_8_function(char* rout, EIF_TYPE_ID cid);
#define eif_character_function(rout,cid) eif_character_8_function((rout),(cid))
extern EIF_OBJECT eif_create(EIF_TYPE_ID cid);
extern EIF_TYPE_ID eif_type_id(char* type_string);
extern EIF_INTEGER eifaddr_offset(EIF_REFERENCE object, char *name, int * const ret);
#define eif_string(s) RTMS(s)
#define makestr(s,c) RTMS_EX((s),(c))
#define eifaddr(object,name,ret) ((void *) ((char *) object + eifaddr_offset (object, name, ret)))
#define eif_field(object,name,type) *(type *)(eifaddr(object,name, NULL)) /* Obsolete. Use "eif_attribute" instead. */
#define eif_attribute(object,name,type,ret) *(type *)(eifaddr(object,name,ret)) /* Returns the attribute of an object. Return status in "ret".*/

/* Miscellaneous useful functions. */

/* Make an Eiffel array from a C array:
 * `eif_array' is the direct reference to the Eiffel array.
 * `c_array' is the C array.
 * `nelts' the number of elements to copy in the eiffel array, it has to
 * be equal to `eif_array.count'.
 * type is an Eiffel type.
 */
#define eif_make_from_c(eif_array, c_array, nelts, type) \
	{ \
		EIF_REFERENCE area = eif_field (eif_array, \
										"area", EIF_REFERENCE); \
		memcpy ((type *) area, c_array, nelts * sizeof (type));\
	}

#define eif_type eiftype /* Dynamic type ID */
extern EIF_TYPE_ID eiftype(EIF_OBJECT object); /* Give dynamic type of EIF_OBJECT. Obsolete, use "eif_type_by_object". */
extern EIF_TYPE_ID eif_type_by_reference (EIF_REFERENCE object);
extern EIF_TYPE_INDEX eif_gen_param_id(EIF_TYPE_INDEX dftype, uint32_t pos);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_PLUG_H
#define EIF_PLUG_H

#ifdef __cplusplus
extern "C" {
#endif

#ifndef EIF_THREADS
extern int nstcall;	/* Nested call global variable: signals a nested call and
					 * trigger an invariant check in generated C routines  */
#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXCEPTIONS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EXCEPT_H
#define EIF_EXCEPT_H

#include <errno.h>
#ifndef GE_EXCEPTION_H
#include <ge_exception.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
	Predefined exception codes.
 */
#define EN_VOID		GE_EX_VOID			/* Feature applied to void reference */
#define EN_MEM		GE_EX_MEM			/* No more memory */
#define EN_PRE		GE_EX_PRE			/* Pre-condition violated */
#define EN_POST		GE_EX_POST			/* Post-condition violated */
#define EN_FLOAT	GE_EX_FLOAT			/* Floating point exception (signal SIGFPE) */
#define EN_CINV		GE_EX_CINV			/* Class invariant violated */
#define EN_CHECK	GE_EX_CHECK			/* Assertion violated */
#define EN_FAIL		GE_EX_FAIL			/* Routine failure */
#define EN_WHEN		GE_EX_WHEN			/* Unmatched inspect value */
#define EN_VAR		GE_EX_VAR			/* Non-decreasing loop variant */
#define EN_LINV		GE_EX_LINV			/* Loop invariant violated */
#define EN_SIG		GE_EX_SIG			/* Operating system signal */
#define EN_BYE		GE_EX_BYE			/* Eiffel run-time panic */
#define EN_RESC		GE_EX_RESC			/* Exception in rescue clause */
#define EN_OMEM		GE_EX_OMEM			/* Out of memory (cannot be ignored) */
#define EN_RES		GE_EX_RES			/* Resumption failed (retry did not succeed) */
#define EN_CDEF		GE_EX_CDEF			/* Create on deferred */
#define EN_EXT		GE_EX_EXT			/* External event */
#define EN_VEXP		GE_EX_VEXP			/* Void assigned to expanded */
#define EN_HDLR		GE_EX_HDLR			/* Exception in signal handler */
#define EN_IO		GE_EX_IO			/* I/O error */
#define EN_SYS		GE_EX_SYS			/* Operating system error */
#define EN_RETR		GE_EX_RETR			/* Retrieval error */
#define EN_PROG		GE_EX_PROG			/* Developer exception */
#define EN_FATAL	GE_EX_FATAL			/* Eiffel run-time fatal error */
#define EN_DOL		GE_EX_DOL			/* $ applied to melted feature */
#define EN_ISE_IO	GE_EX_ISE_IO		/* I/O error raised by the ISE Eiffel runtime */
#define EN_COM		GE_EX_COM			/* COM error raised by EiffelCOM runtime */
#define EN_RT_CHECK	GE_EX_RT_CHECK		/* Runtime check error such as out-of-bound array access */
#define EN_OLD		GE_EX_OLD			/* Old violation */
#define EN_SEL		GE_EX_SEL			/* Serialization failure */
#define EN_DIRTY	GE_EX_DIRTY			/* SCOOP processor dirty exception. */
#define EN_NEX		GE_EX_NEX			/* Number of internal exceptions */

/*
	Raise an Eiffel exception.
*/
extern void eraise(const char* name, long code);

/*
	Raise an Eiffel exception of the given code with no associated tag.
*/
extern void xraise(int code);

/*
	Raise an "Operating system error" exception.
*/
extern void esys(void);

/*
	As a special case, an I/O error is raised when a system call which is I/O bound fails.
*/
extern void eise_io(const char* tag);

/*
	Raise a "No more memory" exception.
*/
extern void enomem(void);

/*
	Raise EiffelCOM exception.
*/
extern void com_eraise(const char* tag, long num);

/*
	Terminate execution with exit status 'code',
	without triggering an exception.
*/
extern void esdie(int code);

/*
	Exception tag associated with 'code'.
	This is a duplication from Eiffel classes, but still used for trace printing and in EiffelCom.
*/
extern EIF_REFERENCE eename(long except);

/*
	Is exception 'ex' defined?
	Used in EiffelCOM.
*/
extern char eedefined(long ex);

/*
	Enable/diable printing of the exception trace.
	Per thead information.
*/
extern void eetrace(char b);

/*
	Is current execution during rescue?
*/
extern EIF_BOOLEAN eif_is_in_rescue(void);

#ifdef EIF_WINDOWS
/*
	Set default exception handler.
*/
extern void set_windows_exception_filter();
#endif

/*
	Used in EiffelCOM.
*/
#define echval 0
#define echtg (char*)0

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class REAL"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_REAL_H
#define GE_REAL_H

#include <math.h>

#ifndef GE_power
#define GE_power(x,y) pow((x),(y))
#endif
#define GE_ceiling(x) ceil(x)
#define GE_floor(x) floor(x)

extern EIF_NATURAL_32 GE_real_32_to_bits (EIF_REAL_32 v);
extern EIF_NATURAL_64 GE_real_64_to_bits (EIF_REAL_64 v);
extern EIF_REAL_32 GE_real_32_from_bits (EIF_NATURAL_32 v);
extern EIF_REAL_64 GE_real_64_from_bits (EIF_NATURAL_64 v);

#define GE_real_32_is_nan(v) ((v)!=(v) ? EIF_TRUE : ((GE_real_32_to_bits(v) & ~GE_nat32(0x80000000)) > GE_nat32(0x7FF00000)))
#define GE_real_64_is_nan(v) ((v)!=(v) ? EIF_TRUE : ((GE_real_64_to_bits(v) & ~GE_nat64(0x8000000000000000)) > GE_nat64(0x7FF0000000000000)))
#define GE_real_32_is_negative_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0xFF800000))
#define GE_real_64_is_negative_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0xFFF0000000000000))
#define GE_real_32_is_positive_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0x7F800000))
#define GE_real_64_is_positive_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0x7FF0000000000000))
#define GE_real_32_nan GE_real_32_from_bits(GE_nat32(0x7FC00000))
#define GE_real_64_nan GE_real_64_from_bits(GE_nat64(0x7FF8000000000000))
#define GE_real_32_negative_infinity GE_real_32_from_bits(GE_nat32(0xFF800000))
#define GE_real_64_negative_infinity GE_real_64_from_bits(GE_nat64(0xFFF0000000000000))
#define GE_real_32_positive_infinity GE_real_32_from_bits(GE_nat32(0x7F800000))
#define GE_real_64_positive_infinity GE_real_64_from_bits(GE_nat64(0x7FF0000000000000))

#endif
/*
	description:

		"C functions used to implement class FILE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_FILE_H
#define EIF_FILE_H

#include <time.h>
#include <sys/stat.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Let's define the stat structure for our platforms. */
/* The definition is the same for both ANSI and Unicode versions on Windows. */
#ifdef EIF_WINDOWS
#	ifdef EIF_64_BITS
#		define rt_stat_buf	struct _stat64
#	else
#		define rt_stat_buf	struct _stat64i32
#	endif
#else
#	define rt_stat_buf		struct stat
#endif

/*
 * Create directory `dirname'.
 */
extern void eif_file_mkdir(EIF_FILENAME dirname);

/*
 * Rename file `from' into `to'.
 */
extern void eif_file_rename(EIF_FILENAME from, EIF_FILENAME  to);

/*
 * Link file `from' into `to'.
 */
extern void eif_file_link(EIF_FILENAME from, EIF_FILENAME to);

/*
 * Delete file or directory `name'.
 */
extern void eif_file_unlink(EIF_FILENAME name);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_reopen( EIF_FILENAME name, int how, FILE *old);

/*
 * Close the file.
 */
extern void eif_file_close(FILE *fp);

/*
 * Flush data held in stdio buffer.
 */
extern void eif_file_flush(FILE *fp);

/*
 * Return the associated file descriptor.
 */
extern EIF_INTEGER eif_file_fd(FILE *f);

/*
 * Get a character from `f'.
 */
extern EIF_CHARACTER_8 eif_file_gc(FILE *f);

/*
 * Get a string from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters.
 */
extern EIF_INTEGER eif_file_gs(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Read min (bound, remaining bytes in file) characters into `s' and
 * return the number of characters read.
 */
extern EIF_INTEGER eif_file_gss(FILE *f, char *s, EIF_INTEGER bound);

/*
 * Get a word from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters. Any leading
 * spaces are skipped.
 */
extern EIF_INTEGER eif_file_gw(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Look ahead one character. If EOF, return 0.
 */
extern EIF_CHARACTER_8 eif_file_lh(FILE *f);

/*
 * Size of file `fp'.
 */
extern EIF_INTEGER eif_file_size(FILE *fp);

/*
 * Read upto next input line.
 */
extern void eif_file_tnil(FILE *f);

/*
 * Current position within file.
 */
extern EIF_INTEGER eif_file_tell(FILE *f);

/*
 * Touch file `name' by setting both access and modification time to the
 * current time stamp. This external function exists only because there
 * is no way within UNIX_FILE to get the current time stamp. Otherwise,
 * we could simply call file_utime.
 */
extern void eif_file_touch(EIF_FILENAME name);

/*
 * Modify the modification and/or the access time stored in the file's
 * inode. The 'how' parameter tells which attributes should be set.
 */
extern void eif_file_utime(EIF_FILENAME name, time_t stamp, int how);

/*
 * This is an encapsulation of the stat() system call. The routine either
 * succeeds and returns or fails and raises the appropriate exception.
 */
extern int eif_file_stat(EIF_FILENAME path, rt_stat_buf *buf, int follow);

/*
 * Change permissions of file `name', using an interface like chmod(1).
 * The flag is true if permissions are to be added, 0 to remove them.
 */
extern void eif_file_perm(EIF_FILENAME name, char *who, char *what, int flag);

/*
 * Change permission mode on file `path'.
 */
extern void eif_file_chmod(EIF_FILENAME path, int mode);

/*
 * Change the owner of the file to `uid'.
 */
extern void eif_file_chown(EIF_FILENAME name, int uid);

/*
 * Change the group of the file to `gid'.
 */
extern void eif_file_chgrp(EIF_FILENAME name, int gid);

/*
 * Put new_line onto `f'.
 */
extern void eif_file_tnwl(FILE *f);

/*
 * Append a copy of `other' to `f'.
 */
extern void eif_file_append(FILE *f, FILE *other, EIF_INTEGER l);

/*
 * Write string `str' on `f'.
 */
extern void eif_file_ps(FILE *f, char *str, EIF_INTEGER len);

/*
 * Write character `c' on `f'.
 */
extern void eif_file_pc(FILE *f, char c);

/*
 * Go to absolute position `pos' counted from start.
 */
extern void eif_file_go(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from end.
 */
extern void eif_file_recede(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from current position.
 */
extern void eif_file_move(FILE *f, EIF_INTEGER pos);

/*
 * End of file.
 */
extern EIF_BOOLEAN eif_file_feof(FILE *fp);

/*
 * Test whether file exists or not. If `name' represents a symbolic link,
 * it will check that pointed file does exist.
 */
extern EIF_BOOLEAN eif_file_exists(EIF_FILENAME name);

/*
 * Test whether file exists or not without following the symbolic link
 * if `name' represents one.
 */
extern EIF_BOOLEAN eif_file_path_exists(EIF_FILENAME name);

/*
 * Check whether access permission `op' are possible on file `name' using
 * real UID and real GID. This is probably only useful to setuid or setgid
 * programs.
 */
extern EIF_BOOLEAN eif_file_access(EIF_FILENAME name, EIF_INTEGER op);

/*
 * Check whether the file `path' may be created: we need write permissions
 * in the parent directory and there must not be any file bearing that name
 * with no write permissions...
 */
extern EIF_BOOLEAN eif_file_creatable(EIF_FILENAME path, EIF_INTEGER nbytes);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gi(FILE *f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_gr(FILE *f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gd(FILE *f);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pi(FILE *f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pr(FILE *f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pd(FILE *f, EIF_REAL_64 val);

/*
 * Size of the stat structure. This is used by the Eiffel side to create
 * the area (special object) which will play the role of a stat buffer
 * structure.
 */
extern EIF_INTEGER stat_size(void);

/*
 * Check file permissions using effective UID and effective GID. The
 * current permission mode is held in the st_mode field of the stat()
 * buffer structure `buf'.
 */
extern EIF_BOOLEAN eif_file_eaccess(rt_stat_buf *buf, int op);

/*
 * Perform the field dereferencing from the appropriate stat structure,
 * which Eiffel cannot do directly.
 */
extern EIF_INTEGER eif_file_info(rt_stat_buf *buf, int op);

/*
 * Return the Eiffel string filled in with the name associated with `uid'
 * if found in /etc/passwd. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_owner(int uid);

/*
 * Return the Eiffel string filled in with the name associated with `gid'
 * if found in /etc/group. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_group(int gid);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gib(FILE* f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_grb(FILE* f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gdb(FILE* f);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_binary_reopen(EIF_FILENAME name, int how, FILE* old);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pib(FILE* f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_prb(FILE* f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pdb(FILE* f, EIF_REAL_64 val);

/*
 * Modification time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_date (EIF_FILENAME  name);

/*
 * Access time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_access_date (EIF_FILENAME  name);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CONSOLE_H
#define EIF_CONSOLE_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER console_def(EIF_INTEGER file);
extern EIF_BOOLEAN console_eof(FILE* fp);
extern EIF_CHARACTER_8 console_separator(FILE* f);
extern void console_ps(FILE* f, char* str, EIF_INTEGER len);
extern void console_pr(FILE* f, EIF_REAL_32 number);
extern void console_pc(FILE* f, EIF_CHARACTER_8 c);
extern void console_pd(FILE* f, EIF_REAL_64 val);
extern void console_pi(FILE* f, EIF_INTEGER number);
extern void console_tnwl(FILE* f);
extern EIF_CHARACTER_8 console_readchar(FILE* f);
extern EIF_REAL_32 console_readreal(FILE* f);
extern EIF_INTEGER console_readint(FILE* f);
extern EIF_REAL_64 console_readdouble(FILE* f);
extern EIF_INTEGER console_readword(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER console_readline(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern void console_next_line(FILE* f);
extern EIF_INTEGER console_readstream(FILE* f, char* s, EIF_INTEGER bound);
extern void console_file_close (FILE* f);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to access DLLs"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_DLL_H
#define GE_DLL_H

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

#include <windows.h>

/* DLL declarations */
#define GE_load_dll(name) LoadLibraryA((LPCSTR)name)

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_MISC_H
#define EIF_MISC_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER eif_system(EIF_NATIVE_CHAR* s);
extern void eif_system_asynchronous(EIF_NATIVE_CHAR* cmd);
extern void eif_sleep(EIF_INTEGER_64);

#ifdef EIF_WINDOWS
/* DLL declarations */
#define eif_load_dll(name) GE_load_dll(name)
#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement Thread support"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_THREADS_H
#define EIF_THREADS_H

#ifndef EIF_CECIL_H
#include "eif_cecil.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifndef EIF_THREADS

/*
	Empty stubs for EiffelThread library so that it may be compiled against a non-multithreaded run-time.
*/

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() NULL

/* THREAD_CONTROL */
#define eif_thr_yield()
#define eif_thr_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj, init_func, attr)
#define eif_thr_wait(term)
#define eif_thr_wait_with_timeout(term,tms) EIF_FALSE
#define eif_thr_last_thread() NULL
#define eif_thr_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() 0
#define eif_thr_min_priority() 0
#define eif_thr_max_priority() 0

/* MUTEX */
#define eif_thr_mutex_create() NULL
#define eif_thr_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) EIF_FALSE
#define eif_thr_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() NULL
#define eif_thr_cond_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr)
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) 0
#define eif_thr_cond_destroy(a_mutex_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(count) NULL
#define eif_thr_sem_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) EIF_FALSE
#define eif_thr_sem_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() NULL
#define eif_thr_rwl_rdlock(an_item)
#define eif_thr_rwl_unlock(an_item)
#define eif_thr_rwl_wrlock(an_item)
#define eif_thr_rwl_destroy(an_item)

#define eif_thr_sleep(nanoseconds)

#else

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() GE_thread_id()

/* THREAD_CONTROL */
#define eif_thr_yield() GE_thread_yield()
#define eif_thr_join_all() GE_thread_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj,init_func,attr) GE_thread_create_with_attr((current_obj),(init_func),(EIF_THR_ATTR_TYPE*)(attr))
#define eif_thr_wait(term) GE_thread_wait(term)
#define eif_thr_wait_with_timeout(term,tms) GE_thread_wait_with_timeout((term),(tms))
#define eif_thr_last_thread() GE_last_thread_created()
#define eif_thr_exit() GE_thread_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() GE_thread_default_priority()
#define eif_thr_min_priority() GE_thread_min_priority()
#define eif_thr_max_priority() GE_thread_max_priority()

/* MUTEX */
#define eif_thr_mutex_create() GE_mutex_create()
#define eif_thr_mutex_lock(a_mutex_pointer) GE_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) GE_mutex_trylock(a_mutex_pointer)
#define eif_thr_mutex_unlock(a_mutex_pointer) GE_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer) GE_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() NULL
#define eif_thr_cond_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr)
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) 0
#define eif_thr_cond_destroy(a_mutex_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(count) NULL
#define eif_thr_sem_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) EIF_FALSE
#define eif_thr_sem_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() NULL
#define eif_thr_rwl_rdlock(an_item)
#define eif_thr_rwl_unlock(an_item)
#define eif_thr_rwl_wrlock(an_item)
#define eif_thr_rwl_destroy(an_item)

#define eif_thr_sleep(nanoseconds)

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_GLOBALS_H
#define EIF_GLOBALS_H

#ifndef EIF_THREADS_H
#include "eif_threads.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#define EIF_GET_CONTEXT
#define GTCX EIF_GET_CONTEXT

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C declarations for the ISE Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EIFFEL_H
#define EIF_EIFFEL_H

#ifndef EIF_GLOBALS_H
#include "eif_globals.h"
#endif
#ifndef EIF_EXCEPT_H
#include "eif_except.h"
#endif

#endif
/*
	description:

		"C functions used to implement class DIRECTORY"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_DIR_H
#define EIF_DIR_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER eif_dir_open (EIF_FILENAME dirname);
extern EIF_POINTER eif_dir_next (EIF_POINTER dir);
extern EIF_POINTER eif_dir_rewind (EIF_POINTER d, EIF_FILENAME dir_name);
extern void eif_dir_close (EIF_POINTER dir);
extern EIF_BOOLEAN eif_dir_exists (EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_readable (EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_writable (EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_executable (EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_deletable (EIF_FILENAME name);
extern EIF_CHARACTER_8 eif_dir_separator(void);
extern EIF_INTEGER eif_dir_current (EIF_FILENAME a_buffer, EIF_INTEGER a_count);
extern EIF_INTEGER eif_chdir (EIF_FILENAME path);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class C_DATE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_TIME_H
#define GE_TIME_H

#if defined _XOPEN_UNIX || defined __USE_XOPEN || defined __USE_BSD
#define HAS_GETTIMEOFDAY
#else
#ifndef WIN32
#define HAS_GETTIMEOFDAY
#endif
#endif

#ifdef HAS_GETTIMEOFDAY
/*
	OpenBSD does not support 'ftime' unless -lcompat is specified.
	Use the recommended XSI (X/Open System Interface) extension instead.
*/
#include <sys/time.h>
#include <sys/types.h>
#define GE_ftime(p) gettimeofday((struct timeval*)(p),((void*)0))
#define GE_timebsz sizeof(struct timeval)
#define GE_timebmillitm(p) (((struct timeval*)(p))->tv_usec/1000)
#define GE_timebtime(p) ((struct timeval*)(p))->tv_sec
#else
#include <sys/timeb.h>
extern void ftime(struct timeb *); /* Needed for lcc-win32 */
#define GE_ftime(p) ftime((struct timeb*)(p))
#define GE_timebsz sizeof(struct timeb)
#define GE_timebmillitm(p) ((struct timeb*)(p))->millitm
#define GE_timebtime(p) ((struct timeb*)(p))->time
#endif

#endif
/*
	description:

		"C functions used to implement class COM_FAILURE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_COM_FAILURE_H
#define GE_COM_FAILURE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER GE_ccom_hresult(EIF_POINTER an_exception_code);

extern EIF_INTEGER GE_ccom_hresult_code(EIF_INTEGER an_hresult);

extern EIF_INTEGER GE_ccom_hresult_facility(EIF_INTEGER an_hresult);

/*
 * Get text from error `a_code'. It is up to the caller to free
 * the returned buffer using `GE_ccom_local_free'.
 */
extern EIF_POINTER GE_ccom_error_text(EIF_INTEGER a_code);

/*
 * Number of characters in `ptr'.
 */
extern EIF_INTEGER_32 GE_ccom_strlen(EIF_POINTER ptr);

/*
 * Number of bytes occupied by a TCHAR.
 */
extern EIF_INTEGER_32 GE_ccom_character_size();

/*
 * Free `a_ptr' using LocalFree.
 */
extern void GE_ccom_local_free(EIF_POINTER a_ptr);

#ifdef __cplusplus
}
#endif

#endif
#include <string.h>
#include <stdlib.h>
#include <time.h>
